cscope 15 $HOME/project/tw_driver/tw5864_new_device_layer/tw5864/insight -q 0000009930 0001810823
	@../../tw5864/device_layer/audio_de_driver.c

1 
	~<tw5864/tc_comm⁄.h
>

7 
	$tw_audio_de_drivî_öô
(
tw_chù_devi˚
 *
tcd
,
tw_£rvi˚_devi˚
 * 
tsd
,* 
∑ø
,
cmd_¨g
 *
¨g
)

9 
ªt
;

10 
bus_id
,
chù_id
,
lg_id
;

11 
dvm_chù_t
 *
chù
 = (dvm_chù_à*)
∑ø
;

12 
tw_audio_drivî_t
 *
ad
;

14 
bus_id
 = 
	`gë_busid_‰om_ïobj
(&
tcd
->
ïobj
);

15 
chù_id
 = 
	`gë_chùid_‰om_ïobj
(&
tcd
->
ïobj
);

16 
lg_id
 = 
TW_AUDIO_OUT_SPEAKER_ID
;

18 
ad
 = 
chù
->
audio_ch™_drivî
;

19 
ad
 +
TW_AUDIO_OUT_SPEAKER_ID
;

21 
	`¥ötk
("ad[0x%8p] i¿%s---> \n",
ad
, 
__FUNCTION__
);

22 
ªt
 = 
	`öô_tw5864_audio_decode_ch™
(
ad
,&
chù
->
chù_audio
,
bus_id
,
chù_id
,
lg_id
);

23 if(
ªt
){

24 
	`dbg
("audio decoder driv init failed!\n");

25  
ªt
;

27 
tsd
->
≥d
 = &
ad
->
audio_ed
;

28  
ªt
;

29 
	}
}

32 
	$tw_audio_de_drivî_ªmove
(
tw_chù_devi˚
 *
tcd
,
tw_£rvi˚_devi˚
 * 
tsd
,* 
∑ø
,
cmd_¨g
 *
¨g
)

34 
tw_audio_drivî_t
 *
ad
;

36 
tc_åa˚
;

37 if(!
tsd
->
≥d
){

38 
	`dbg
("tsd hasÇoÉd!\n");

41 
ad
 = 
	`c⁄èöî_of
(
tsd
->
≥d
,
tw_audio_drivî_t
,
audio_ed
);

42 
	`ªmove_tw5864_audio_ícode_ch™
(
ad
);

43 
	}
}

47 
tw_dev_id
 
	gtw_audio_de_dev_id
 =

49 .
ïobj
 = {

50 .
víd‹_id
 = 
TWELL
,

51 .
	gbus_id
 = 1,

52 .
	gchù_id
 = 
TW5864
,

53 .
	gfunc_id
 = (
STREAM_TYPE_AUDIO
 << 16Ë| 
CODEC_AUDIO_ADPCM
,

54 .
	gty≥
 = 
TW_DECODER
,

56 .
	gvîsi⁄
 = 1,

60 
tsd_drivî_›î©i⁄s
 
	gtw_audio_de_›s
 =

62 .
öô
 = 
tw_audio_de_drivî_öô
,

63 .
	gªmove
 = 
tw_audio_de_drivî_ªmove
,

66 
tw_£rvi˚_drivî
 
	gtw_audio_decodî_driv
 =

68 .
drivî
 = {

69 .
«me
 = "tw5864_audio_dedriv",

71 .
	gdevi˚_id
 = {

72 .
tid
 = &
tw_audio_de_dev_id
,

73 .
	g›s
 = &
tw_audio_de_›s
,

79 
	$tw5864_audio_de_drivî_öô
(* 
∑ø
)

81 
tw_audio_decodî_driv
.
devi˚_id
.
∑ø
 =Öara;

82  
	`ªgi°î_tc_drivî
(&
tw_audio_decodî_driv
);

83 
	}
}

86 
	$tw5864_audio_de_drivî_ªmove
()

88 
	`uƒegi°î_tc_drivî
(&
tw_audio_decodî_driv
);

89 
	}
}

	@../../tw5864/device_layer/audio_en_driver.c

1 
	~<tw5864/tc_comm⁄.h
>

7 
	$tw_audio_drivî_öô
(
tw_chù_devi˚
 *
tcd
,
tw_£rvi˚_devi˚
 * 
tsd
,* 
∑ø
,
cmd_¨g
 *
¨g
)

9 
ªt
;

10 
bus_id
,
chù_id
,
lg_id
;

11 
dvm_chù_t
 *
chù
 = (dvm_chù_à*)
∑ø
;

12 
tw_audio_drivî_t
 *
ad
;

14 
bus_id
 = 
	`gë_busid_‰om_ïobj
(&
tcd
->
ïobj
);

15 
chù_id
 = 
	`gë_chùid_‰om_ïobj
(&
tcd
->
ïobj
);

16 
lg_id
 = 
¨g
->
ch™√l_idx
;

18 
ad
 = 
chù
->
audio_ch™_drivî
;

19 
ad
 +
lg_id
;

21 
ªt
 = 
	`öô_tw5864_audio_ícode_ch™
(
ad
,&
chù
->
chù_audio
,
bus_id
,
chù_id
,
lg_id
);

22 if(
ªt
){

23 
	`dbg
("audioÉncoder driv init failed!\n");

24  
ªt
;

26 
tsd
->
≥d
 = &
ad
->
audio_ed
;

27  
ªt
;

28 
	}
}

31 
	$tw_audio_drivî_ªmove
(
tw_chù_devi˚
 *
tcd
,
tw_£rvi˚_devi˚
 * 
tsd
,* 
∑ø
,
cmd_¨g
 *
¨g
)

33 
tw_audio_drivî_t
 *
ad
;

35 
tc_åa˚
;

36 if(!
tsd
->
≥d
){

37 
	`dbg
("tsd hasÇoÉd!\n");

40 
ad
 = 
	`c⁄èöî_of
(
tsd
->
≥d
,
tw_audio_drivî_t
,
audio_ed
);

41 
	`ªmove_tw5864_audio_ícode_ch™
(
ad
);

42 
	}
}

45 
tw_dev_id
 
	gtw_audio_í_dev_id
 =

47 .
ïobj
 = {

48 .
víd‹_id
 = 
TWELL
,

49 .
	gbus_id
 = 1,

50 .
	gchù_id
 = 
TW5864
,

51 .
	gfunc_id
 = (
STREAM_TYPE_AUDIO
<<16Ë| 
CODEC_AUDIO_ADPCM
,

52 .
	gty≥
 = 
TW_ENCODER
,

54 .
	gvîsi⁄
 = 1,

58 
tsd_drivî_›î©i⁄s
 
	gtw_audio_›s
 =

60 .
öô
 = 
tw_audio_drivî_öô
,

61 .
	gªmove
 = 
tw_audio_drivî_ªmove
,

64 
tw_£rvi˚_drivî
 
	gtw_audio_ícodî_driv
 =

66 .
drivî
 = {

67 .
«me
 = "tw5864_audio_endriv",

69 .
	gdevi˚_id
 = {

70 .
tid
 = &
tw_audio_í_dev_id
,

71 .
	g›s
 = &
tw_audio_›s
,

77 
	$tw5864_audio_í_drivî_öô
(* 
∑ø
)

79 
tw_audio_ícodî_driv
.
devi˚_id
.
∑ø
 =Öara;

80  
	`ªgi°î_tc_drivî
(&
tw_audio_ícodî_driv
);

81 
	}
}

84 
	$tw5864_audio_í_drivî_ªmove
()

86 
	`uƒegi°î_tc_drivî
(&
tw_audio_ícodî_driv
);

87 
	}
}

	@../../tw5864/device_layer/jpeg_en_driver.c

1 
	~<tw5864/tc_comm⁄.h
>

7 
	$tw_j≥g_drivî_öô
(
tw_chù_devi˚
 *
tcd
, 
tw_£rvi˚_devi˚
 *
tsd
, * 
∑ø
,
cmd_¨g
 *
¨g
)

9 
ªt
;

10 
bus_id
,
chù_id
,
lg_id
;

11 
dvm_chù_t
 *
chù
 = (dvm_chù_à*)
∑ø
;

12 
tw_j≥g_logic_ícode_ch™_t
 *
jed
;

14 
bus_id
 = 
	`gë_busid_‰om_ïobj
(&
tcd
->
ïobj
);

15 
chù_id
 = 
	`gë_chùid_‰om_ïobj
(&
tcd
->
ïobj
);

16 
lg_id
 = 
¨g
->
ch™√l_idx
;

18 
jed
 = 
chù
->
j≥g_ícode_ch™
;

19 
jed
 +
lg_id
;

21 
	`¥ötk
("jed[0x%8p] i¿%s---> \n",
jed
, 
__FUNCTION__
);

22 
ªt
 = 
	`öô_tw5864_j≥g_ícode_ch™
(
jed
, 
chù
->
bus_id
, chù->
chù_id
, 
lg_id
, chip);

23 if(
ªt
){

24 
	`dbg
("jpeg driv init failed!\n");

25  
ªt
;

27 
tsd
->
≥d
 = &
jed
->
›íed_logic_ch™_ed
;

28  
ªt
;

29 
	}
}

32 
	$tw_j≥g_drivî_ªmove
(
tw_chù_devi˚
 *
tcd
, 
tw_£rvi˚_devi˚
 *
tsd
, * 
∑ø
,
cmd_¨g
 *
¨g
)

34 
tw_j≥g_logic_ícode_ch™_t
 *
vj
;

36 
tc_åa˚
;

37 if(!
tsd
->
≥d
){

38 
	`dbg
("tsd hasÇoÉd!\n");

41 
vj
 = 
	`c⁄èöî_of
(
tsd
->
≥d
,
tw_j≥g_logic_ícode_ch™_t
,
›íed_logic_ch™_ed
);

42 
	`ªmove_tw5864_j≥g_ícode_ch™
(
vj
);

43 
	}
}

46 
tw_dev_id
 
	gtw_j≥g_í_dev_id
 =

48 .
ïobj
 = {

49 .
víd‹_id
 = 
TWELL
,

50 .
	gbus_id
 = 1,

51 .
	gchù_id
 = 
TW5864
,

52 .
	gfunc_id
 = (
STREAM_TYPE_MAJOR
 << 16Ë| 
CODEC_VIDEO_MJPG
,

53 .
	gty≥
 = 
TW_ENCODER
,

55 .
	gvîsi⁄
 = 1,

59 
tsd_drivî_›î©i⁄s
 
	gtw_j≥g_í_›s
 =

61 .
öô
 = 
tw_j≥g_drivî_öô
,

62 .
	gªmove
 = 
tw_j≥g_drivî_ªmove
,

65 
tw_£rvi˚_drivî
 
	gtw_j≥g_ícodî_driv
 =

67 .
drivî
 = {

68 .
«me
 = "tw5864_jpeg_driv",

70 .
	gdevi˚_id
 = {

71 .
tid
 = &
tw_j≥g_í_dev_id
,

72 .
	g›s
 = &
tw_j≥g_í_›s
,

78 
	$tw5864_j≥g_í_drivî_öô
(* 
∑ø
)

80 
tw_j≥g_ícodî_driv
.
devi˚_id
.
∑ø
 =Öara;

81  
	`ªgi°î_tc_drivî
(&
tw_j≥g_ícodî_driv
);

82 
	}
}

85 
	$tw5864_j≥g_í_drivî_ªmove
()

87 
	`uƒegi°î_tc_drivî
(&
tw_j≥g_ícodî_driv
);

88 
	}
}

	@../../tw5864/device_layer/tc.c

1 
	~<löux/moduÀ.h
>

2 
	~<löux/kî√l.h
>

3 
	~<löux/î∫o.h
>

4 
	~<löux/¶ab.h
>

5 
	~<löux/i2c.h
>

6 
	~<löux/fs.h
>

7 
	~<löux/cdev.h
>

8 
	~<löux/öô.h
>

9 
	~<löux/idr.h
>

10 
	~<löux/£q_fûe.h
>

11 
	~<löux/∂©f‹m_devi˚.h
>

12 
	~<löux/muãx.h
>

13 
	~<löux/com∂ëi⁄.h
>

14 
	~<asm/uac˚ss.h
>

15 
	~<löux/kthªad.h
>

16 
	~<löux/uni°d.h
>

17 
	~<asm/uni°d.h
>

18 
	~<löux/uni°d.h
>

19 
	~<löux/f˙é.h
>

20 
	~<löux/«mei.h
>

21 
	~<löux/ødix-åì.h
>

22 
	~<löux/sysfs.h
>

23 
	~<asm/cuºít.h
>

24 
	~<tw5864/tc_comm⁄.h
>

27 
MODULE_LICENSE
("GPL");

30 
	gg_g_Êag
 = 0;

33 
k¥obe
 
	gkp
 =

35 .
symbﬁ_«me
 = "schedule",

39 
k¥obe
 
	gk∑
 =

41 .
symbﬁ_«me
 = "__wait_event",

45 
	$h™dÀr_¥e
(
k¥obe
 *
p
, 
±_ªgs
 *
ªgs
)

47 *
œ°_nù
 = 
NULL
, *
cur_nù
= NULL;

48 *
œ°_u°ack
 = 
NULL
, * 
cur_u°ack
 = NULL;

49 *
œ°_ªt
 = 
NULL
, *
cur_ªt
 = NULL;

51 if((
g_g_Êag
 && !
	`°rcmp
(
cuºít
->
comm
,"test")) ){

52 
cur_nù
 = 
	`ö°ru˘i⁄_poöãr
(
ªgs
);

53 
cur_u°ack
 = 
	`u£r_°ack_poöãr
(
ªgs
);

54 
cur_ªt
 = 
	`ªgs_ªtu∫_vÆue
(
ªgs
);

57 
	`dump_°ack
();

60 
œ°_nù
 = 
cur_nù
;

61 
œ°_u°ack
 = 
cur_u°ack
;

62 
œ°_ªt
 = 
cur_ªt
;

66 
	}
}

69 
	$h™dÀr_a_¥e
(
k¥obe
 *
p
, 
±_ªgs
 *
ªgs
)

71 *
œ°_nù
 = 
NULL
, *
cur_nù
= NULL;

72 *
œ°_u°ack
 = 
NULL
, * 
cur_u°ack
 = NULL;

73 *
œ°_ªt
 = 
NULL
, *
cur_ªt
 = NULL;

75 if((
g_g_Êag
 && !
	`°rcmp
(
cuºít
->
comm
,"test")) || (g_g_flag && !strcmp(current->comm,"tw_agend"))){

76 
cur_nù
 = 
	`ö°ru˘i⁄_poöãr
(
ªgs
);

77 
cur_u°ack
 = 
	`u£r_°ack_poöãr
(
ªgs
);

78 
cur_ªt
 = 
	`ªgs_ªtu∫_vÆue
(
ªgs
);

81 
	`dump_°ack
();

84 
œ°_nù
 = 
cur_nù
;

85 
œ°_u°ack
 = 
cur_u°ack
;

86 
œ°_ªt
 = 
cur_ªt
;

90 
	}
}

95 
	$h™dÀr_po°
(
k¥obe
 *
p
, 
±_ªgs
 *
ªgs
,
Êags
)

98 
	`¥ötk
("po°_h™dÀr:Ö->add∏0x%p, m§ = 0x%lx\n",
p
->
addr
, 
ªgs
->
m§
);

101 
	}
}

111 
	$h™dÀr_Áu…
(
k¥obe
 *
p
, 
±_ªgs
 *
ªgs
, 
å≠ƒ
)

113 
	`¥ötk
("Áu…_h™dÀr:Ö->add∏0x%p,Åø∞#%dn\n",
p
->
addr
, 
å≠ƒ
);

116 
	}
}

120 
	$k¥obe_öô
()

122 
ªt
;

123 
kp
.
¥e_h™dÀr
 = 
h™dÀr_¥e
;

127 
k∑
.
¥e_h™dÀr
 = 
h™dÀr_a_¥e
;

130 
ªt
 = 
	`ªgi°î_k¥obe
(&
kp
);

131 i‡(
ªt
 < 0) {

132 
	`¥ötk
(
KERN_INFO
 "ªgi°î_k¥obêÁûed,Ñëu∫ed %d\n", 
ªt
);

133  
ªt
;

136 
ªt
 = 
	`ªgi°î_k¥obe
(&
k∑
);

137 if(
ªt
){

138 
	`¥ötk
("register kpa falied!\n");

139  
ªt
;

141 
	`¥ötk
(
KERN_INFO
 "Pœ¡ed k¥obê© %p", 
kp
.
addr
);

144 
	}
}

148 
	$k¥obe_exô
()

150 
	`uƒegi°î_k¥obe
(&
kp
);

151 
	`¥ötk
(
KERN_INFO
 "k¥obê© %∞uƒegi°îed", 
kp
.
addr
);

152 
	}
}

159 
kobje˘
 * 
	gkroŸ
 = 
NULL
;

160 
LIST_HEAD
(
tw_chùdev
);

161 
DEFINE_MUTEX
(
muãx_chùdev
);

163 
LIST_HEAD
(
tw_chùdrv
);

164 
DEFINE_MUTEX
(
muãx_chùdrv
);

166 
LIST_HEAD
(
tw_tc_dev
);

167 
DEFINE_MUTEX
(
muãx_tc_dev
);

169 
LIST_HEAD
(
tw_tc_drv
);

170 
DEFINE_MUTEX
(
muãx_tc_drv
);

178 
öô_nfm_bôm≠
();

179 
‰ì_nfm_bôm≠
();

180 
gë_‰ì_mö‹
(
cmd_¨g
 *
¨g
);

181 
put_‰ì_mö‹
(
mö‹
,
ty≥
);

182 
make_£rvi˚_key
(
ïkey_t
 *
key
,
tw_chù_devi˚
 * 
tcd
, 
cmd_¨g
 * 
¨g
);

184 
kobje˘
 * 
tw_¸óã_dú
(* 
«me
, kobje˘ *
∑ª¡
);

185 
tw_ªmove_dú
(
kobje˘
 * 
kobj
);

186 
böd_chù_drivî
(
tw_chù_devi˚
 * 
tcd
);

187 
unböd_chù_drivî
(
tw_chù_devi˚
 * 
tcd
);

195 
kobje˘
 * 
gë_dú
(
tw_chù_devi˚
 *
tcd
, 
ty≥
);

197 
ªque°_devno_ªsour˚
();

198 
‰ì_devno_ªsour˚
();

203 
tc_hb_poﬁ
 *
	gthb_poﬁ
 = 
NULL
;

204 *
	gÆg‹ôhm
[] = {

208 *
	g°ªam
[] ={"major","minor","pic","mv","audio",};

209 *
	gtc_dev_«me
[] = {"tw_chip","tw_encoder","tw_decoder","tw_video_in","tw_video_out","tw_audio_in","tw_audio_out",};

215 
LIST_HEAD
(
˛_hód
);

219 *
	gnfm_bôm≠
[
MAX_SERVICE_NR
];

222 
	$lock_chùdev
()

224 
	`muãx_lock
(&
muãx_chùdev
);

225 
	}
}

228 
	$u∆ock_chùdev
()

230 
	`muãx_u∆ock
(&
muãx_chùdev
);

231 
	}
}

234 
li°_hód
 * 
	$gë_chùdev_li°hód
()

236  &
tw_chùdev
;

237 
	}
}

247 
	$öô_nfm_bôm≠
()

249 
idx
;

250 
Àn
 = 
	`round_up
(
MAX_MINOR_NR
,8);

253 
idx
=0; idx<
MAX_SERVICE_NR
; idx++)

255 
nfm_bôm≠
[
idx
] = 
	`kzÆloc
(
Àn
,
GFP_KERNEL
);

256 if(!
nfm_bôm≠
[
idx
]Ë
˛ón
;

259 
˛ón
:

260 
	`dbg
("ö %†ÁûedÅÿgë bôm≠ s∑˚!\n",
__FUNCTION__
);

261 ;
idx
 > 0; idx--)

262 
	`k‰ì
(
nfm_bôm≠
[
idx
-1]);

264 
	}
}

266 
	$‰ì_nfm_bôm≠
()

268 
i
;

270 
i
=0; i<
MAX_SERVICE_NR
; i++)

271 
	`k‰ì
(
nfm_bôm≠
[
i
]);

273 
	}
}

277 
	$gë_‰ì_mö‹
(
cmd_¨g
 *
¨g
)

279 
ªt
 = 
MAX_MINOR_NR
;

280 
idx
 = 
¨g
->
ty≥
;

282 
ªt
 = 
	`föd_fú°_zîo_bô
(
nfm_bôm≠
[
idx
],
MAX_MINOR_NR
);

283 if(
ªt
 >
MAX_MINOR_NR
){

284 
	`dbg
("there isÇo free minor!\n");

287 
	`£t_bô
(
ªt
,
nfm_bôm≠
[
idx
]);

288  
ªt
;

289 
	}
}

292 
	$put_‰ì_mö‹
(
mö‹
,
ty≥
)

294 
	`˛ór_bô
(
mö‹
,
nfm_bôm≠
[
ty≥
]);

295 
	}
}

299 
	$make_£rvi˚_key
(
ïkey_t
 *
key
 ,
tw_chù_devi˚
 * 
tcd
, 
cmd_¨g
 * 
¨g
)

301 
bus_id
 = 
	`gë_bus_id
(
tcd
->
ïobj
.
key
);

302 
chù_id
 = 
tcd
->
mö‹
;

303 
pid
 = 0;

304 
lid
 = 
¨g
->
ch™√l_idx
;

306 
	`make_key
(
key
,
¨g
->
°ªam
,¨g->
Æg‹ôhm
,
bus_id
,
chù_id
, 
pid
, 
lid
);

307 
	}
}

309 #i‡
LINUX_VERSION_CODE
 < 
KERNEL_VERSION
(2, 6, 25)

310 
	$tw_dú_ªÀa£
(
kobje˘
 * 
kobj
)

312 
	`k‰ì
(
kobj
);

313 
	}
}

315 
kobj_ty≥
 
	gtw_dú
 = {

316 .
ªÀa£
 = 
tw_dú_ªÀa£
,

317 .
	gsysfs_›s
 = 
NULL
,

318 .
	gdeÁu…_©ås
 = 
NULL
,

325 
kobje˘
 * 
	$tw_¸óã_dú
(* 
«me
, 
kobje˘
 *
∑ª¡
)

327 #i‡
LINUX_VERSION_CODE
 < 
	`KERNEL_VERSION
(2, 6, 25)

328 
ªt
;

329 
kobje˘
* 
kobj
 = 
	`kzÆloc
((kobje˘),
GFP_ATOMIC
);

331 if(!
kobj
)

332  
NULL
;

334 
kobj
->
∑ª¡
 =Öarent;

335 
kobj
->
kty≥
 = &
tw_dú
;

336 
	`kobje˘_öô
(
kobj
);

337 
	`kobje˘_£t_«me
(
kobj
, "%s", 
«me
);

338 
ªt
 = 
	`kobje˘_ªgi°î
(
kobj
);

339 if(
ªt
){

340 
	`kobje˘_dñ
(
kobj
);

341  
NULL
;

345  
kobj
;

349  
	`kobje˘_¸óã_™d_add
(
«me
,
∑ª¡
);

351 
	}
}

354 
	$tw_ªmove_dú
(
kobje˘
 * 
kobj
)

356 if(!
kobj
)

359 
tc_åa˚
;

360 #i‡
LINUX_VERSION_CODE
 < 
	`KERNEL_VERSION
(2, 6, 25)

361 
	`kobje˘_uƒegi°î
(
kobj
);

363 
	`kobje˘_put
(
kobj
);

365 
	}
}

369 
	$tw_devi˚_m©ch
(
devi˚
 *
dev
, 
devi˚_drivî
 *
drv
)

375 
	}
}

378 
ssize_t
 
	$show_chù_«me
(
devi˚
 *
dev
, 
devi˚_©åibuã
 *
©å
, *
buf
)

383 
	}
}

386 
devi˚_©åibuã
 
	gtw_dev_©ås
[] = {

387 
__ATTR
(
«me
, 
S_IRUGO
, 
show_chù_«me
, 
NULL
),

392 
bus_ty≥
 
	gtw_vútuÆ_bus
 = {

393 .
«me
 = "tw_virtual_bus",

394 .
	gdev_©ås
 = 
tw_dev_©ås
,

395 .
	gm©ch
 = 
tw_devi˚_m©ch
,

425 
tw_chù_devi˚
 * 
	$föd_chù_dev
(
mö‹
)

427 
li°_hód
 * 
p
 = &
tw_chùdev
;

428 
tw_chù_devi˚
 *
tcd
 = 
NULL
;

430 if((
p
->
√xt
 =p->
¥ev
Ë&& (p->√xà=&
tw_chùdev
))

432 
	`dbg
("ouà‰om hîe?ánd mö‹=%d\n",
mö‹
);

433  
NULL
;

435 
	`muãx_lock
(&
muãx_chùdev
);

436 
p
 =Ö->
√xt
;

437 ; 
p
 !&
tw_chùdev
;Ö =Ö->
√xt
)

439 
tcd
 = 
	`c⁄èöî_of
(
p
,
tw_chù_devi˚
, 
li°
);

440 if(
tcd
->
mö‹
 == minor){

441 
	`muãx_u∆ock
(&
muãx_chùdev
);

442  
tcd
;

446 
	`muãx_u∆ock
(&
muãx_chùdev
);

447  
NULL
;

448 
	}
}

451 
	$twc_›í
(
öode
 *öode, 
fûe
 *file)

453 
mö‹
 = 
	`imö‹
(
öode
);

454 
ªt
 = 0;

455 
tw_chù_devi˚
 *
tcd
;

457 
tc_åa˚
;

458 if(
mö‹
 >= 256)

459  -
ENODEV
;

461 
tcd
 = 
	`föd_chù_dev
(
mö‹
);

462 if(
tcd
 =
NULL
)

463  -
ENODEV
;

470 if(
tcd
->
tcd_f›s
 &&Åcd->tcd_f›s->
›í
)

471 
ªt
 = 
tcd
->
tcd_f›s
->
	`›í
—cd,
fûe
);

473 
	`dbg
("›íedándÑë = %d\n",
ªt
);

477  
ªt
;

478 
	}
}

481 
	$twc_ªÀa£
(
öode
 *öode, 
fûe
 *
fûp
)

483 
mö‹
 = 
	`imö‹
(
öode
);

484 
ªt
 = 0;

485 
tw_chù_devi˚
 *
tcd
;

488 if(
mö‹
 >= 256)

489  -
ENODEV
;

492 
tcd
 = 
	`föd_chù_dev
(
mö‹
);

493 if(!
tcd
)

494  -
ENODEV
;

501 if(
tcd
->
tcd_f›s
 &&Åcd->tcd_f›s->
ªÀa£
)

502 
tcd
->
tcd_f›s
->
	`ªÀa£
—cd,
fûp
);

505  
ªt
;

507 
	}
}

509 
ssize_t
 
	$twc_ªad
(
fûe
 *
fûp
, *
buff
, 
size_t
 
cou¡
, 
loff_t
 *
ofÂ
)

511 
ssize_t
 
ªt
;

512 
tw_chù_devi˚
 * 
tcd
;

514 
tcd
 = 
	`föd_chù_dev
(
	`imö‹
(
fûp
->
f_∑th
.
díåy
->
d_öode
));

515 if(!
tcd
)

516  -
ENODEV
;

519 if(!
tcd
->
tcd_f›s
->
ªad
)

520  -
EINVAL
;

522 
ªt
 = 
tcd
->
tcd_f›s
->
	`ªad
(
fûp
,
buff
,
cou¡
,
ofÂ
);

527   
ªt
;

528 
	}
}

531 
ssize_t
 
	$twc_wrôe
(
fûe
 *
fûp
, c⁄° *
buff
, 
size_t
 
cou¡
, 
loff_t
 *
ofÂ
)

533 
ssize_t
 
ªt
;

534 
tw_chù_devi˚
 * 
tcd
;

536 
tcd
 = 
	`föd_chù_dev
(
	`imö‹
(
fûp
->
f_∑th
.
díåy
->
d_öode
));

537 if(!
tcd
)

538  -
ENODEV
;

542 if(!
tcd
->
tcd_f›s
->
wrôe
)

543  -
EINVAL
;

545 
ªt
 = 
tcd
->
tcd_f›s
->
	`wrôe
(
fûp
,
buff
,
cou¡
,
ofÂ
);

550   
ªt
;

551 
	}
}

554 
	$twc_io˘l
(
öode
 * inode,
fûe
 * 
fûp
,
cmd
, 
¨g
)

556 
ªt
 = 0;

557 
tw_chù_devi˚
 *
tcd
;

559 
tcd
 = 
	`föd_chù_dev
(
	`imö‹
(
fûp
->
f_∑th
.
díåy
->
d_öode
));

560 if(!
tcd
)

561  -
ENODEV
;

569 if(!
tcd
->
tcd_f›s
 || !tcd->tcd_f›s->
io˘l
){

570 
	`dbg
("you haveÇot ioctl funcÑegistered!\n");

571  -
EINVAL
;

579 
cmd
)

581 
TW_CHIP_CREATE_CHAN
:

582 
ªt
 = 
	`¸óã_£rvi˚_devi˚
(
tcd
,
¨g
);

584 
TW_CHIP_RELEASE_CHAN
:

585 
	`ªÀa£_£rvi˚_devi˚
(
tcd
,(*)
¨g
);

588 
	`dbg
("other cmd\n");

589 
ªt
 = 
tcd
->
tcd_f›s
->
	`io˘l
(
fûp
,
cmd
,
¨g
);

593  
ªt
;

594 
	}
}

596 
fûe_›î©i⁄s
 
	gtw_f›s
 = {

597 .
ow√r
 = 
THIS_MODULE
,

598 .
	g›í
 = 
twc_›í
,

599 .
	gªÀa£
 = 
twc_ªÀa£
,

600 .
	gªad
 = 
twc_ªad
,

601 .
	gwrôe
 = 
twc_wrôe
,

602 .
	gio˘l
 = 
twc_io˘l
,

612 
tw_£rvi˚_devi˚
 * 
	$föd_£rvi˚_dev
(
maj‹
,
mö‹
)

614 
li°_hód
 *
p
 = &
tw_chùdev
;

615 
li°_hód
 *
q
 = 
NULL
;

616 
ty≥
 = 
maj‹
-
TW_SERVICE_BASE_MAJOR
;

617 
tw_chù_devi˚
 * 
tcd
 = 
NULL
;

618 
tw_£rvi˚_devi˚
 *
tsd
 = 
NULL
;

621 if((
p
->
√xt
 =p->
¥ev
Ë&& (p->√xà=&
tw_chùdev
))

623 
	`dbg
("nothing in deviceÜist!\n");

624  
NULL
;

627 
	`muãx_lock
(&
muãx_chùdev
);

628 
p
 =Ö->
√xt
;

629 ; 
p
 !&
tw_chùdev
;Ö =Ö->
√xt
){

630 
tcd
 = 
	`c⁄èöî_of
(
p
,
tw_chù_devi˚
, 
li°
);

631 if((
q
 = &
tcd
->
tsd_li°
[
ty≥
]Ë=
NULL
)

632 
îr‹
;

634 
q
 = q->
√xt
;

635 ; 
q
 !&
tcd
->
tsd_li°
[
ty≥
]; q = q->
√xt
){

636 
tsd
 = 
	`c⁄èöî_of
(
q
,
tw_£rvi˚_devi˚
,
li°
);

637 if(
tsd
->
mö‹
 == minor)

638 
föd
;

642 
föd
:

643 
	`muãx_u∆ock
(&
muãx_chùdev
);

644  
tsd
;

645 
îr‹
:

646 
	`dbg
("BUG!ÅheÜisthead of givenÅype is NULL!\n");

647 
	`muãx_u∆ock
(&
muãx_chùdev
);

648  
NULL
;

650 
	}
}

653 
	$tws_›í
(
öode
 *öode, 
fûe
 *file)

655 
maj‹
 = 
	`imaj‹
(
öode
);

656 
mö‹
 = 
	`imö‹
(
öode
);

657 
ªt
 = 0;

658 
tw_£rvi˚_devi˚
 *
tsd
 = 
NULL
;

661 
tc_åa˚
;

662 
tsd
 = 
	`föd_£rvi˚_dev
(
maj‹
,
mö‹
);

663 if(
tsd
 =
NULL
)

664  -
ENODEV
;

671 if(!(
tsd
->
tsd_f›s
)){

672 
	`dbg
("you haveÇoÅsd_fopsÑegistered!\n");

673  -
EINVAL
;

675 if(!
tsd
->
tsd_f›s
->
›í
){

676 
	`dbg
("BUG: haveÇo open function");

677  -
EINVAL
;

684 
ªt
 = 
tsd
->
tsd_f›s
->
	`›í
—sd,
fûe
);

690  
ªt
;

691 
	}
}

694 
	$tws_ªÀa£
(
öode
 *öode, 
fûe
 *
fûp
)

696 
ªt
 = 0;

697 
maj‹
 = 
	`imaj‹
(
öode
);

698 
mö‹
 = 
	`imö‹
(
öode
);

699 
tw_£rvi˚_devi˚
 *
tsd
 = 
NULL
;

701 
tc_åa˚
;

702 
tsd
 = 
	`föd_£rvi˚_dev
(
maj‹
,
mö‹
);

703 if(!
tsd
)

704  -
ENODEV
;

706 
	`dbg
("maj‹ = %d; mö‹ = %d\n",
maj‹
,
mö‹
);

713 if(!
tsd
->
tsd_f›s
 || !tsd->tsd_f›s->
ªÀa£
){

714 
	`dbg
("noÅsd_fops orÑelease\n");

717 
ªt
 = 
tsd
->
tsd_f›s
->
	`ªÀa£
(
fûp
);

718 
	`dbg
("˛o£ föished!Ñëu∫ vÆ =%d\n",
ªt
);

720  
ªt
;

721 
	}
}

723 
ssize_t
 
	$tws_ªad
(
fûe
 *
fûp
, *
buff
, 
size_t
 
cou¡
, 
loff_t
 *
ofÂ
)

725 
ªt
 = 0;

726 
tw_£rvi˚_devi˚
 * 
tsd
 = (tw_£rvi˚_devi˚ *)
fûp
->
¥iv©e_d©a
;

728 if(
fûp
->
¥iv©e_d©a
 =
NULL
){

729 
	`dbg
("îr‹: you gë cÆ»%†wôhouà›íed!\n",
__FUNCTION__
);

730  -
EINVAL
;

733 if(
NULL
 =
tsd
->
tsd_f›s
){

734 
	`dbg
("noÅsd fopÑegistered!\n");

735  -
EINVAL
;

738 if(
tsd
->
tsd_f›s
->
ªad
)

739 
ªt
 = 
tsd
->
tsd_f›s
->
	`ªad
(
fûp
,
buff
,
cou¡
,
ofÂ
);

740  
ªt
;

741 
	}
}

743 
ssize_t
 
	$tws_wrôe
(
fûe
 *
fûp
, c⁄° *
buff
, 
size_t
 
cou¡
, 
loff_t
 *
ofÂ
)

745 
ªt
 = 0;

746 
tw_£rvi˚_devi˚
 * 
tsd
 = (tw_£rvi˚_devi˚ *)
fûp
->
¥iv©e_d©a
;

748 if(
fûp
->
¥iv©e_d©a
 =
NULL
){

749 
	`dbg
("îr‹: you gë cÆ»%†wôhouà›íed!\n",
__FUNCTION__
);

750  -
EINVAL
;

753 if(
NULL
 =
tsd
->
tsd_f›s
){

754 
	`dbg
("noÅsd fopÑegistered!\n");

755  -
EINVAL
;

758 if(
tsd
->
tsd_f›s
->
wrôe
)

759 
ªt
 = 
tsd
->
tsd_f›s
->
	`wrôe
(
fûp
,
buff
,
cou¡
,
ofÂ
);

762  
ªt
;

765 
	}
}

768 
	$tws_io˘l
(
öode
 * inode,
fûe
 * 
fûp
,
cmd
, 
¨g
)

770 
ªt
;

771 
tw_£rvi˚_devi˚
 * 
tsd
 = (tw_£rvi˚_devi˚ *)
fûp
->
¥iv©e_d©a
;

773 if(
fûp
->
¥iv©e_d©a
 =
NULL
){

774 
	`dbg
("ˇŒ %†wôhouà›íed!\n",
__FUNCTION__
);

775  -
EINVAL
;

777 if(!
tsd
->
tsd_f›s
 || !tsd->tsd_f›s->
io˘l
){

778 
	`dbg
("noÅsd fopÑegistered!\n");

779  -
EINVAL
;

781 
ªt
 = 
tsd
->
tsd_f›s
->
	`io˘l
(
fûp
,
cmd
,
¨g
);

785  
ªt
;

786 
	}
}

789 
	$tws_pﬁl
(
fûe
 *fûe, 
pﬁl_èbÀ_°ru˘
 *
waô
)

791 
ªt
 = 0;

792 
tw_£rvi˚_devi˚
 * 
tsd
 = (tw_£rvi˚_devi˚ *)
fûe
->
¥iv©e_d©a
;

794 if(
NULL
 =
fûe
->
¥iv©e_d©a
){

795 
	`dbg
("ˇŒ %†wôhouà›íed!\n",
__FUNCTION__
);

796  -
EINVAL
;

798 if(
NULL
 =
tsd
->
tsd_f›s
){

799 
	`dbg
("noÅsd fopÑegistered!\n");

800  -
EINVAL
;

803 if(
tsd
->
tsd_f›s
->
pﬁl
)

804 
ªt
 = 
tsd
->
tsd_f›s
->
	`pﬁl
(
fûe
,
waô
);

806 
	`¥ötk
("noÖoll function!\n");

808  
ªt
;

809 
	}
}

817 
	$tc_vm_›í
(
vm_¨ó_°ru˘
 *
vma
)

821 
	`dbg
("vm_›í vútuÆ:%XÖhy:%d\n",
vma
->
vm_°¨t
,vma->
vm_pgoff
 << 
PAGE_SHIFT
);

823 
	}
}

825 
	$tc_vm_˛o£
(
vm_¨ó_°ru˘
 *
vma
)

827 
	`dbg
("vm_close \n");

829 
	}
}

832 
∑ge
 * 
	$tc_vm_n›age
(
vm_¨ó_°ru˘
 *
vma
, 
vaddr
,*
ty≥
)

834 
∑ge
 *∑gê
NOPAGE_SIGBUS
;

835 
tw_audio_í
 *
èe
 = 
vma
->
vm_¥iv©e_d©a
;

836 
off
 = 0;

837 
tc_queue
 *
q
 = 
èe
->
queue
;

838 
tc_buf„r_kîn
 * 
tck
 = 
q
->
bufs
[q->
Ω
];

840 
	`dbg
("n›age: fau… @ %08lx [vm®%08lx-%08lx]\n",
vaddr
,
vma
->
vm_°¨t
,vma->
vm_íd
);

841 i‡(
vaddr
 > 
vma
->
vm_íd
)

842  
NOPAGE_SIGBUS
;

845 
off
 = (
vaddr
 - 
vma
->
vm_°¨t
Ë+ (vma->
vm_pgoff
 << 
PAGE_SIZE
);

846 if(
off
 > 4096*3){

847 
	`dbg
("%s---------> ouàogÑ™ge!\n",
__FUNCTION__
);

848  
∑ge
;

851 
	`dbg
("%s--->of‡%d\n",
__FUNCTION__
,
off
);

852 
	`muãx_lock
(&
èe
->
queue
->
lock
);

853 
∑ge
 = 
	`vút_to_∑ge
(
tck
->
°¨t
);

854 
	`dbg
("givêthê%dÅck ;tck->off_to_∑gê%d\n",
q
->
Ω
,
tck
->
off_to_∑ge
);

855 
	`muãx_u∆ock
(&
èe
->
queue
->
lock
);

857 
	`dbg
("\¿tck'†∑gê%X;tc->°¨à%XándÅck->off_to_∑gê%d\n",
∑ge
,
tck
->
°¨t
,tck->
off_to_∑ge
);

858 if(!
∑ge
)

859  
NOPAGE_OOM
;

860 
	`gë_∑ge
(
∑ge
);

861 i‡(
ty≥
)

862 *
ty≥
 = 
VM_FAULT_MINOR
;

863  
∑ge
;

864 
	}
}

865 
vm_›î©i⁄s_°ru˘
 
	gtc_vm_›s
 =

867 .
›í
 = 
tc_vm_›í
,

868 .
	g˛o£
 = 
tc_vm_˛o£
,

869 .
	gn›age
 = 
NULL
,

875 
	$mm≠_sˇâî
(
vm_¨ó_°ru˘
 *
vma
,
tc_queue
 *
tq
, 
size
)

877 
ªt
=0;

878 
idx
 = 0,
cix
 = 0;

879 
°¨t
,
p‚
;

880 
˙
 = 0;

881 
tc_buf„r_kîn
 *
tck
;

884 
°¨t
 = 
vma
->
vm_°¨t
;

885 
tck
 = 
tq
->
bufs
[0];

888 if(!
tck
->
thb
 || !tck->thb->
d©a
){

889 
	`dbg
("tck hasÇo header buf orÅhb->data is NULL\n");

890  -
EINVAL
;

892 
p‚
 = (
	`__∑
(
tck
->
thb
->
d©a
)Ë>> 
PAGE_SHIFT
;

893 if(
	`ªm≠_p‚_ønge
(
vma
,
°¨t
,
p‚
,
PAGE_SIZE
,
PAGE_SHARED
)){

894 
	`dbg
("remap header_buf failed\n");

895  -
ENXIO
;

898 
°¨t
 +
PAGE_SIZE
;

902 (
tck
 = 
tq
->
bufs
[
cix
]Ë&& (
STATE_READY
 =
	`gë_tck_°©e
(tck))){

903 
˙
 = 
	`round_up
(
tck
->
size
,
PAGE_SIZE
);

904 
	`£t_tck_°©e
(
tck
,
STATE_BUSY
);

905 
idx
 = 0; idx < 
˙
; idx++){

906 if(!
tck
->
sg
[
idx
].
ˇºõr
 || !tck->sg[idx].
addr
 || !tck->sg[idx].
Àn
)

908 
p‚
 = (
	`__∑
(
tck
->
sg
[
idx
].
addr
)Ë>> 
PAGE_SHIFT
;

910 if(
	`ªm≠_p‚_ønge
(
vma
,
°¨t
,
p‚
,
PAGE_SIZE
,
PAGE_SHARED
)){

911 
	`dbg
("remapÖageÑange failed\n");

912  -
ENXIO
;

914 
°¨t
 +
PAGE_SIZE
;

916 
cix
++;

917 if(
cix
 >
tq
->
buf_ƒ
)

920  
ªt
;

921 
	}
}

923 
	$mm≠_sögÀ
(
vm_¨ó_°ru˘
 *
vma
,
tc_queue
 *
tq
)

925 
p‚
,
œ°_p‚
 = 0,
°¨t
;

926 
tc_buf„r_kîn
 *
tck
 = 
tq
->
bufs
[0];

927 
idx
 = 0;

929 
°¨t
 = 
vma
->
vm_°¨t
;

931 if(!
tck
->
thb
 || !tck->thb->
d©a
){

932 
	`dbg
("tck hasÇo header buf orÅhb->data is NULL\n");

933  -
EINVAL
;

936 
p‚
 = (
	`__∑
(
tck
->
thb
->
d©a
)Ë>> 
PAGE_SHIFT
;

937 if(
	`ªm≠_p‚_ønge
(
vma
,
°¨t
,
p‚
,
PAGE_SIZE
,
PAGE_SHARED
)){

938 
	`dbg
("remap header_buf failed\n");

939  -
ENXIO
;

942 
°¨t
 +
PAGE_SIZE
;

944 (
tck
 = 
tq
->
bufs
[
idx
]Ë&& (
STATE_READY
 =
	`gë_tck_°©e
(tck))){

945 
p‚
 = (
	`__∑
(
tck
->
°¨t
)Ë>> 
PAGE_SHIFT
;

947 
	`£t_tck_°©e
(
tck
,
STATE_BUSY
);

948 if(
œ°_p‚
 !
p‚
){

950 i‡(
	`ªm≠_p‚_ønge
(
vma
,
°¨t
,
p‚
,
PAGE_SIZE
,
PAGE_SHARED
)){

951 
	`dbg
("remapÖageÑange failed\n");

952  -
ENXIO
;

954 
°¨t
 +
PAGE_SIZE
;

956 
œ°_p‚
 = 
p‚
;

957 
idx
++;

958 if(
idx
 >
tq
->
buf_ƒ
)

962 
	}
}

964 
	$tws_mm≠
(
fûe
 *fûe, 
vm_¨ó_°ru˘
 *
vma
)

966 
ªt
 = 0;

967 
tw_£rvi˚_devi˚
 *
tsd
 = (tw_£rvi˚_devi˚ *)
fûe
->
¥iv©e_d©a
;

968 
off£t
 = 
vma
->
vm_pgoff
 << 
PAGE_SHIFT
;

969 
size
 = 
vma
->
vm_íd
 - vma->
vm_°¨t
;

970 
tc_queue
 *
q
 = 
tsd
->
queue
;

972 #ifde‡
STATIC_COUNTING


973 
	`gë_ic_m≠_°¨t
(
tsd
);

975 i‡(
off£t
 & ~
PAGE_MASK
){

976 
	`dbg
("off£ànŸálig√d: %ld\n", 
off£t
);

977  -
ENXIO
;

986 i‡((
vma
->
vm_Êags
 & 
VM_WRITE
Ë&& !(vma->vm_Êag†& 
VM_SHARED
)){

987 
	`dbg
("writeable mappings must be shared,Ñejecting\n");

988 (-
EINVAL
);

1001 if(!
q
){

1002 
	`dbg
("tsdÇo queue\n");

1003  -
EINVAL
;

1007 if(
q
->
unô_size
 >
PAGE_SIZE
)

1008 
ªt
 = 
	`mm≠_sˇâî
(
vma
,
q
,
size
);

1010 
ªt
 = 
	`mm≠_sögÀ
(
vma
,
q
);

1012 #ifde‡
STATIC_COUNTING


1013 
	`ˇlc_ic_m≠_time
(
tsd
);

1015  
ªt
;

1016 
	}
}

1019 
fûe_›î©i⁄s
 
	gtws_f›s
 = {

1020 .
ow√r
 = 
THIS_MODULE
,

1021 .
	g›í
 = 
tws_›í
,

1022 .
	gªÀa£
 = 
tws_ªÀa£
,

1023 .
	gªad
 = 
tws_ªad
,

1024 .
	gwrôe
 = 
tws_wrôe
,

1025 .
	gio˘l
 = 
tws_io˘l
,

1026 .
	gmm≠
 = 
tws_mm≠
,

1027 .
	gpﬁl
 = 
tws_pﬁl
,

1032 
	$chù_ªÀa£
(
˛ass_devi˚
 *
cd
)

1035 
	}
}

1037 
˛ass
 
	gtw_tcd
 = {

1038 .
«me
 = "twell",

1039 .
	gªÀa£
 = 
chù_ªÀa£
,

1043 
	$ªgi°î_chùdevi˚_nŸifõr
(
nŸifõr_block
 *
nb
)

1045 
tw_chù_devi˚
 *
dev
;

1046 
li°_hód
 * 
p
;

1047 
tw_chù_devi˚
 *
œ°
;

1048 
îr
;

1050 
	`muãx_lock
(&
tw_c‹e_li°s
);

1051 
îr
 = 
	`øw_nŸifõr_chaö_ªgi°î
(&
tw_chùdev_chaö
, 
nb
);

1052 i‡(
îr
)

1053 
u∆ock
;

1055 
	`li°_f‹_óch
(
p
, &
tw_chùdev
){

1056 
dev
 = 
	`c⁄èöî_of
(
p
, 
tw_chù_devi˚
,
li°
);

1057 
îr
 = 
nb
->
	`nŸifõr_ˇŒ
“b, 
CHIPDEV_REGISTER
, 
dev
);

1058 
îr
 = 
	`nŸifõr_to_î∫o
(err);

1059 i‡(
îr
)

1060 
rﬁlback
;

1065 
nb
->
	`nŸifõr_ˇŒ
“b, 
CHIPDEV_UP
, 
dev
);

1067 
u∆ock
:

1068 
	`muãx_u∆ock
(&
tw_c‹e_li°s
);

1069  
îr
;

1071 
rﬁlback
:

1072 
œ°
 = 
dev
;

1073 
	`li°_f‹_óch
(
p
, &
tw_chùdev
){

1074 i‡(
dev
 =
œ°
)

1081 
nb
->
	`nŸifõr_ˇŒ
“b, 
CHIPDEV_UNREGISTER
, 
dev
);

1084 
	`øw_nŸifõr_chaö_uƒegi°î
(&
tw_chùdev_chaö
, 
nb
);

1085 
u∆ock
;

1086 
	}
}

1087 
	$uƒegi°î_chùdevi˚_nŸifõr
(
nŸifõr_block
 *
nb
)

1089 
îr
;

1091 
	`muãx_lock
(&
tw_c‹e_li°s
);

1092 
îr
 = 
	`øw_nŸifõr_chaö_uƒegi°î
(&
tw_chùdev_chaö
, 
nb
);

1093 
	`muãx_u∆ock
(&
tw_c‹e_li°s
);

1094  
îr
;

1095 
	}
}

1098 
	$tw_chù_comm™d
(
tw_chù_devi˚
 *
chù
, 
cmd
, *
¨g
)

1100 
li°_hód
 *
ôem
;

1103 
chù
->
drivî
->
	`comm™d
(chù,
cmd
,
¨g
);

1105 
nŸify
 
Ÿhîs
 
which
 
is
 
öãª°ed
 
wôh
 
this
 
chù


1114 
	`dumy_ªÀa£
(
devi˚
 * 
dev
)

1124 
tw_chù_devi˚
 * 
	`tc_chùdev_Æloc
(
¥iv_size
)

1126 * 
p
;

1127 
size
;

1128 
tw_chù_devi˚
 *
tcd
;

1130 
size
 = ((*
tcd
Ë+ 
CHIPDEV_ALIGN_MASK
) & ~CHIPDEV_ALIGN_MASK;

1131 
size
 +
¥iv_size
 + 
CHIPDEV_ALIGN_MASK
;

1132 
p
 = 
	`__gë_‰ì_∑ges
(
GFP_KERNEL
, 
	`gë_‹dî
(
size
));

1133 if(!
p
){

1134 
	`¥ötk
("%s:Çÿmem!, %lu\n",
__FUNCTION__
, 
size
);

1135  
NULL
;

1137 
	`mem£t
(
p
, 0, 
size
);

1138 
	`dbg
("∞=%p\n",
p
);

1139 
tcd
 = (
tw_chù_devi˚
 *)((()
p
 + 
CHIPDEV_ALIGN_MASK
) & ~CHIPDEV_ALIGN_MASK);

1140 
	`dbg
("tcd = %p\n",
tcd
);

1141 
tcd
->
∑dded
 = (*Ècd - (*)
p
;

1142 
tcd
->
¥iv_Àn
 = 
¥iv_size
;

1143 
tcd
->
tŸÆ_Àn
 = 
size
;

1144 
	`dbg
("Åcd->∑dded = %d\n",
tcd
->
∑dded
);

1145 if(
¥iv_size
)

1146 
tcd
->
¥iv
 = 
	`tcd_¥iv
(tcd);

1147  
tcd
;

1150 
	`tc_chùdev_‰ì
(
tw_chù_devi˚
 * 
tcd
)

1152 *
p
 = (*)
tcd
;

1154 
p
 =Ö- 
tcd
->
∑dded
;

1155 
	`dbg
("‰ìádd∏=%p\n",
p
);

1157 
	`‰ì_∑ges
(()
p
,
	`gë_‹dî
(
tcd
->
tŸÆ_Àn
));

1165 
	`check_chùdev_öfo
(
tw_chù_devi˚
 * 
tcd
)

1167 if(!
tcd
->
«me
[0]){

1168 
	`dbg
("noÇame for chip device!\n");

1176 
	`£tup_chù_dev
(
tw_chù_devi˚
 * 
tcd
)

1183 
	`böd_chù_drivî
(
tw_chù_devi˚
 * 
tcd
)

1185 
li°_hód
 *
p
;

1186 
tw_chù_drivî
 *
tdr
;

1187 
tw_dev_èbÀ_id
 *
èbÀ_id
;

1190 
	`__li°_f‹_óch
(
p
,&
tw_chùdrv
){

1191 
tdr
 = 
	`li°_íåy
(
p
,
tw_chù_drivî
,
li°
);

1192 
èbÀ_id
 = &
tdr
->
devi˚_id
;

1193 if(!
èbÀ_id
->
tid
){

1194 
	`¥ötk
("BUG:noÅidÑegistered withÅw_chip_driver!\n");

1195  -
EINVAL
;

1197 if(
	`chù_devi˚_m©ch
(&
tcd
->
ïobj
,&
èbÀ_id
->
tid
->epobj)){

1198 
tcd
->
drivî
 = 
tdr
;

1199 if(
tdr
->
©èch_chù
)

1200  
tdr
->
	`©èch_chù
—dr,
tcd
);

1207 
	`unböd_chù_drivî
(
tw_chù_devi˚
 *
tcd
)

1209 
li°_hód
 *
p
;

1210 
tw_chù_drivî
 *
tdr
;

1211 
tw_dev_èbÀ_id
 *
èbÀ_id
;

1214 
	`__li°_f‹_óch
(
p
,&
tw_chùdrv
){

1215 
tdr
 = 
	`li°_íåy
(
p
,
tw_chù_drivî
,
li°
);

1216 
èbÀ_id
 = &
tdr
->
devi˚_id
;

1217 if(!
èbÀ_id
->
tid
){

1218 
	`¥ötk
("BUG:noÅidÑegistered withÅw_chip_driver!\n");

1221 if(
	`chù_devi˚_m©ch
(&
tcd
->
ïobj
,&
èbÀ_id
->
tid
->epobj)){

1222 
tcd
->
drivî
 = 
tdr
;

1223 if(
tdr
->
dëach_chù
)

1224 
tdr
->
	`dëach_chù
—dr,
tcd
);

1232 
	`chù_devi˚_m©ch
(
ïobj_t
 *
a
, ïobj_à*
b
)

1234 
	`dbg
("a->vid[%lu],a->bid[%lu],a->cid[%lu]---\¿b->vid[%lu],b->bid[%lu],b->cid[%lu]---\n",
a
->
víd‹_id
,

1235 
a
->
bus_id
,a->
chù_id
,
b
->
víd‹_id
,b->bus_id,b->chip_id);

1236 if(
a
->
víd‹_id
 =
b
->víd‹_id &&á->
bus_id
 =b->bus_id &&á->
chù_id
 == b->chip_id)

1242 
	`ªgi°î_chù_devi˚
(
tw_chù_devi˚
 *
tcd
)

1244 
ªt
 = 0;

1245 
idx
 = 0;

1246 
mö‹
 = -1;

1247 
Êag
 = 0;

1248 
chù_dú_«me
[50]={0};

1249 
kobje˘
 *
kobj
 = 
NULL
;

1250 
fix_id
;

1251 
cmd_¨g
 
ˇ
 = {0};

1254 if(
	`check_chùdev_öfo
(
tcd
))

1255  -
EINVAL
;

1260 
ˇ
.
ty≥
 = 0;

1261 
mö‹
 = 
	`gë_‰ì_mö‹
(&
ˇ
);

1262 if(
mö‹
 < 0 || minor > 256)

1264 
	`dbg
("mö‹ i†%d",
mö‹
);

1265  -
EINVAL
;

1268 
	`¢¥ötf
(
chù_dú_«me
,(chù_dú_«me),"%s",
tcd
->
«me
);

1269 
kobj
 = 
	`tw_¸óã_dú
(
chù_dú_«me
,
kroŸ
);

1270 if(
kobj
 =
NULL
){

1271 
	`dbg
("create dir failed!\n");

1272  -
EINVAL
;

1275 
tcd
->
cdev
 = (cdev *)
	`cdev_Æloc
();

1276 if(
tcd
->
cdev
 =
NULL
){

1277 
	`dbg
("cdev_alloc failed!\n");

1278 
ªt
 = -
ENOMEM
;

1279 
˛ónup
;

1282 
	`cdev_öô
(
tcd
->
cdev
,&
tw_f›s
);

1283 
tcd
->
cdev
->
ow√r
 = 
THIS_MODULE
;

1284 
ªt
 = 
	`cdev_add
(
tcd
->
cdev
,
	`MKDEV
(
TW_CHIP_MAJOR
,
mö‹
),1);

1285 if(
ªt
 < 0){

1286 
Êag
 = 1;

1287 
	`dbg
("cdev_add failed!\n");

1288 
˛ónup
;

1291 
idx
 = 0; idx < (
tcd
->
tsd_li°
)/(
li°_hód
) ; idx++){

1292 
	`INIT_LIST_HEAD
(&
tcd
->
tsd_li°
[
idx
]);

1293 
tcd
->
dús
[
idx
] = 
NULL
;

1295 
tcd
->
mö‹
 = minor;

1297 
tcd
->
dev
.
∑ª¡
 = 
NULL
;

1298 
tcd
->
dev
.
kobj
.
∑ª¡
 = kobj;

1299 
tcd
->
dev
.
devt
 = 
	`MKDEV
(
TW_CHIP_MAJOR
,
mö‹
);

1300 
tcd
->
dev
.
ªÀa£
 = 
dumy_ªÀa£
;

1301 
fix_id
 = 
	`gë_chùid_‰om_ïobj
(&
tcd
->
ïobj
);

1302 
	`¢¥ötf
(
tcd
->
dev
.
bus_id
,—cd->dev.bus_id),"%sc⁄åﬁ%02lu",tcd->
«me
,
fix_id
);

1303 
ªt
 = 
	`devi˚_ªgi°î
(&
tcd
->
dev
);

1304 if(
ªt
 < 0){

1305 
	`dbg
("deviceÑegister failed!\n");

1306 
˛ónup
;

1308 
ªt
 = 
	`böd_chù_drivî
(
tcd
);

1309 if(
ªt
)

1310 
böd_îr‹
;

1312 
	`muãx_lock
(&
muãx_chùdev
);

1313 
	`li°_add_èû
(&
tcd
->
li°
,&
tw_chùdev
);

1314 
	`muãx_u∆ock
(&
muãx_chùdev
);

1317  
ªt
;

1318 
˛ónup
:

1319 if(
kobj
)

1320 
	`k‰ì
(
kobj
);

1321 if(
tcd
->
cdev
){

1322 if(
Êag
 == 0)

1323 
	`cdev_dñ
(
tcd
->
cdev
);

1324 
	`k‰ì
(
tcd
->
cdev
);

1326  
ªt
;

1327 
böd_îr‹
:

1328 
	`¥ötk
("chip driver bindÉrror!");

1329  
ªt
;

1334 
	`uƒegi°î_chù_devi˚
(
tw_chù_devi˚
 * 
tcd
)

1336 
kobje˘
 * 
dú_kobj
 = 
NULL
;

1339 
	`dbg
("∑s£dÅcd[0x%8p]\n",
tcd
);

1340 if(!
tcd
){

1341 
	`dbg
("ungister with NULLÖointer!\n");

1342 
d⁄Ÿhög
;

1344 if(
	`föd_chù_dev
(
tcd
->
mö‹
Ë=
NULL
){

1345 
	`dbg
("bad ungister!\n");

1346 
d⁄Ÿhög
;

1349 
dú_kobj
 = 
tcd
->
dev
.
kobj
.
∑ª¡
;

1350 if(!
dú_kobj
){

1351 
	`dbg
("this device isÜocated wrongÖlace!\n");

1352 
d⁄Ÿhög
;

1355 
	`muãx_lock
(&
muãx_chùdev
);

1356 
	`li°_dñ
(&
tcd
->
li°
);

1357 
	`muãx_u∆ock
(&
muãx_chùdev
);

1359 
	`cdev_dñ
(
tcd
->
cdev
);

1360 
	`k‰ì
(
tcd
->
cdev
);

1362 
	`devi˚_uƒegi°î
(&
tcd
->
dev
);

1365 
	`unböd_chù_drivî
(
tcd
);

1366 
	`put_‰ì_mö‹
(
tcd
->
mö‹
,0);

1367 if(!
tcd
->
˛ón_up
){

1368 
	`dbg
("no clean_up functionÑegisted forÅcd\n");

1369 
	`tw_ªmove_dú
(
dú_kobj
);

1370 
	`dbg
("afterÅw_remove_dir!\n");

1373 
tcd
->
	`˛ón_up
(tcd);

1374 
	`tw_ªmove_dú
(
dú_kobj
);

1376 
d⁄Ÿhög
:

1384 
	`ªgi°î_chù_drivî
(
tw_chù_drivî
 * 
driv
)

1386 
ªs
 = 0;

1387 
li°_hód
 *
p
;

1388 
tw_chù_devi˚
 * 
tcd
 = 
NULL
;

1389 
tw_dev_èbÀ_id
 * 
èbÀ_id
 = &
driv
->
devi˚_id
;

1392 
driv
->
drivî
.
bus
 = &
tw_vútuÆ_bus
;

1393 
	`INIT_LIST_HEAD
(&
driv
->
tcd_li°
);

1396 
ªs
 = 
	`drivî_ªgi°î
(&
driv
->
drivî
);

1397 i‡(
ªs
)

1398  
ªs
;

1400 
	`muãx_lock
(&
muãx_chùdrv
);

1401 
	`li°_add_èû
(&
driv
->
li°
,&
tw_chùdrv
);

1402 
	`muãx_u∆ock
(&
muãx_chùdrv
);

1406 
	`__li°_f‹_óch
(
p
,&
tw_chùdev
){

1407 
tcd
 = 
	`li°_íåy
(
p
,
tw_chù_devi˚
,
li°
);

1408 if(
	`chù_devi˚_m©ch
(&
tcd
->
ïobj
,&
èbÀ_id
->
tid
->epobj)){

1409 
tcd
->
drivî
 = 
driv
;

1410 if(
driv
->
©èch_chù
)

1411 
driv
->
	`©èch_chù
(driv,
tcd
);

1414  
ªs
;

1419 
	`uƒegi°î_chù_drivî
(
tw_chù_drivî
 * 
driv
)

1421 
li°_hód
 * 
p
 = 
NULL
;

1422 
tw_chù_devi˚
 * 
tcd
 = 
NULL
;

1423 
tw_dev_èbÀ_id
 * 
èbÀ_id
 = &
driv
->
devi˚_id
;

1425 if(
driv
->
dëach_chù
){

1426 
	`__li°_f‹_óch
(
p
,&
tw_chùdev
){

1427 
tcd
 = 
	`li°_íåy
(
p
, 
tw_chù_devi˚
, 
li°
);

1428 if(
	`chù_devi˚_m©ch
(&
tcd
->
ïobj
,&
èbÀ_id
->
tid
->epobj))

1429 
driv
->
	`dëach_chù
(driv,
tcd
);

1433 
	`drivî_uƒegi°î
(&
driv
->
drivî
);

1434 
	`muãx_lock
(&
muãx_chùdrv
);

1435 
	`li°_dñ
(&
driv
->
li°
);

1436 
	`muãx_u∆ock
(&
muãx_chùdrv
);

1441 
	`check_vÆid
(
tw_chù_devi˚
* 
tcd
,
ty≥
)

1445 if((
ty≥
 > 
MAX_SERVICE_NR
Ë|| 
tcd
 =
NULL
)

1452 
	`check_chùdev_limô
(
tw_chù_devi˚
 *
tcd
, 
cmd_¨g
 *
¨g
)

1454 
li°_hód
 *
p
;

1455 
cmd_li°
 *
˛
;

1457 
	`li°_f‹_óch
(
p
,&
˛_hód
){

1458 
˛
 = 
	`c⁄èöî_of
(
p
, 
cmd_li°
, 
node
);

1459 if(
	`cmd_equÆ
(&
˛
->
¨g
,arg))

1460  -
EINVAL
;

1466 
kobje˘
 * 
	`gë_dú
(
tw_chù_devi˚
 *
tcd
, 
ty≥
)

1468 * 
«me_¥efix
 = 
NULL
;

1469 
kobje˘
 *
dú
 = 
NULL
;

1471 if(
tcd
->
dús
[
ty≥
])

1472  
tcd
->
dús
[
ty≥
];

1474 
ty≥
+1)

1476 
TW_ENCODER
:

1477 
«me_¥efix
 = "tw_encoder";

1479 
TW_DECODER
:

1480 
«me_¥efix
 = "tw_decoder";

1482 
TW_VIDEO_IN
:

1483 
«me_¥efix
 = "tw_video_in";

1485 
TW_VIDEO_OUT
:

1486 
«me_¥efix
 = "tw_video_out";

1488 
TW_AUDIO_IN
:

1489 
«me_¥efix
 = "tw_audio_in";

1491 
TW_AUDIO_OUT
:

1492 
«me_¥efix
 = "tw_audio_out";

1495 
«me_¥efix
 = "unknown";

1502 
dú
 = 
	`tw_¸óã_dú
(
«me_¥efix
, 
tcd
->
dev
.
kobj
.
∑ª¡
);

1503 if(
dú
 =
NULL
)

1504 
	`dbg
("¸óã dú faûed i¿%s\n", 
__FUNCTION__
);

1507  
dú
;

1514 
tw_dev_èbÀ_id
 * 
	`lookup_tcdev_èbe_id
(
ïobj_t
 *
ï
)

1516 
li°_hód
 *
p
 = &
tw_tc_dev
;

1517 
tw_dev_èbÀ_id
 *
dev
;

1519 
	`li°_f‹_óch
(
p
, &
tw_tc_dev
){

1520 
dev
 = 
	`li°_íåy
(
p
, 
tw_dev_èbÀ_id
, 
li°
);

1521 i‡(
	`ïobj_euqÆ
(
ï
,&
dev
->
tid
->
ïobj
))

1522  
dev
;

1524  
NULL
;

1528 
	`∑r£_¨g
(
tw_chù_devi˚
 *
tcd
, 
cmd_¨g
 *
¨g
)

1530 
chù_drivî_t
 *
cd
;

1531 
tw_logic_phy_èbÀ
 *
ép
;

1532 
u32
 
logic
 = 0,
phy
 = 0;

1533 
ªt
 = -1;

1534 
LOGIC_MAP_TABLE_TYPE
 
mt
;

1536 if(!
tcd
 || !
¨g
 || !tcd->
≥d
){

1537 
	`dbg
("invalidÖarameters!\n");

1538  -
EINVAL
;

1542 
cd
 = 
	`c⁄èöî_of
(
tcd
->
≥d
, 
chù_drivî_t
,
›íed_c⁄åﬁ_ed
);

1543 
ép
 = &
cd
->
logic_m≠_phy
;

1544 if(!
ép
->
›
 || !ép->›->
föd_phy_by_logic
){

1545 
	`¥ötk
("logic mapÇo op\n");

1546  -
EINVAL
;

1549 if(
TW_ENCODER
 =
¨g
->
ty≥
){

1550 if(
CODEC_VIDEO_H264
 =
¨g
->
Æg‹ôhm
){

1551 
mt
 = 
LOGIC_MAP_TABLE_BIND_H264E
;

1553 if(
STREAM_TYPE_AUDIO
 =
¨g
->
°ªam
){

1554 
mt
 = 
LOGIC_MAP_TABLE_BIND_AENC
;

1556 if(
CODEC_VIDEO_MJPG
 =
¨g
->
Æg‹ôhm
){

1557 
mt
 = 
LOGIC_MAP_TABLE_BIND_JPEGE
;

1560 
out
;

1563 if(
TW_DECODER
 =
¨g
->
ty≥
){

1564 if(
STREAM_TYPE_AUDIO
 =
¨g
->
°ªam
){

1565 
mt
 = 
LOGIC_MAP_TABLE_BIND_ADEC
;

1567 if(
CODEC_VIDEO_H264
 =
¨g
->
Æg‹ôhm
){

1568 
mt
 = 
LOGIC_MAP_TABLE_BIND_H264D
;

1571 
out
;

1575 
out
;

1578 
logic
 = 
¨g
->
ch™√l_idx
;

1579 
ªt
 = 
ép
->
›
->
	`föd_phy_by_logic
—Õ, 
mt
,
logic
, &
phy
);

1580 if(
ªt
){

1581 
	`dbg
("logicÅoÖhy findÇothing!!!!\n");

1582 
out
;

1584 
¨g
->
ch™√l_idx
 = 
phy
;

1587 
out
:

1588  
ªt
;

1592 
	`tc_drivî_öô
(
tw_chù_devi˚
 *
tcd
, 
tw_£rvi˚_devi˚
 *
tsd
,
tw_£rvi˚_drivî
 *
driv
, 
cmd_¨g
 *
¨g
)

1594 
ªt
 = 0;

1595 
tsd_drivî_›î©i⁄s
 *
tsdr
;

1596 
tw_dev_èbÀ_id
 *
èbÀ_id
;

1597 
cmd_¨g
 
tmp_¨g
 = {0};

1599 if(!
driv
){

1600 
	`¥ötk
("--->ö %s\n",
__FUNCTION__
);

1601  -
EINVAL
;

1603 
èbÀ_id
 = (
tw_dev_èbÀ_id
 *)&
driv
->
devi˚_id
;

1604 if(!
èbÀ_id
->
›s
){

1605 
	`dbg
("driver withÇo ops!\n");

1606  -
EINVAL
;

1608 
tsdr
 = (
tsd_drivî_›î©i⁄s
 *)
èbÀ_id
->
›s
;

1609 if(!
tsdr
->
öô
){

1610 
	`dbg
("driver withÇo init function!\n");

1611  -
EINVAL
;

1614 
	`c›y_‰om_u£r
((*)&
tmp_¨g
,(
__u£r
 *)
¨g
, (
cmd_¨g
));

1615 if(
TW_ENCODER
 =
¨g
->
ty≥
 || 
TW_DECODER
 ==árg->type){

1616 if(
	`∑r£_¨g
(
tcd
,&
tmp_¨g
))

1617  -
EINVAL
;

1621 
	`¥ötk
("[[logi¯id = %lu]]\n",
tmp_¨g
.
ch™√l_idx
);

1622 
ªt
 = 
tsdr
->
	`öô
(
tcd
,
tsd
,
èbÀ_id
->
∑ø
,&
tmp_¨g
);

1623 if(
ªt
){

1624 
	`dbg
("driver canÇotállocÑesource!\n");

1625  -
ENOMEM
;

1627 
	`ïobj_key_upd©e_phy_id
((
ïkey_t
 *)&(
tsd
->
ïobj
.
key
),
tmp_¨g
.
ch™√l_idx
);

1628  
ªt
;

1634 
	`£tup_£rvi˚_devi˚
(
tw_£rvi˚_devi˚
 *
tsd
, 
tw_chù_devi˚
 *
tcd
, 
cmd_¨g
 *
¨g
, 
kobje˘
 *
dú
,
tw_dev_èbÀ_id
 *
èbÀ_id
)

1636 
ªt
 = 0,
sma
,
mö‹
;

1637 
ißdd
 = 0;

1638 
devi˚_öfo
 
di
 = {0};

1639 
li°_hód
 *
∂i°
 = 
NULL
;

1640 
ty≥
 = 
¨g
->type - 1;

1641 
tmp
[255] = {0};

1642 *
˝
 = 
tmp
;

1644 if(
ty≥
 < 0){

1645 
	`¥ötk
("BUG:Åy≥Éº‹ i¿%s!\n", 
__FUNCTION__
);

1649 
tcd
->
dús
[
ty≥
] = 
dú
;

1650 
	`ïobj_£t
(&
tsd
->
ïobj
,&
tcd
->epobj);

1651 
tsd
->
ïobj
.
ty≥
 = 
¨g
->type;

1652 
tsd
->
ïobj
.
func_id
 = (
¨g
->
°ªam
 << 16Ë|árg->
Æg‹ôhm
;

1654 
	`mem£t
((*)&
tsd
->
ïobj
.
key
,0,(
ïkey_t
));

1655 
	`make_£rvi˚_key
((
ïkey_t
 *)&
tsd
->
ïobj
.
key
,
tcd
,
¨g
);

1656 
	`dbg_ïobj_¥öt
(&
tsd
->
ïobj
);

1657 if((
ªt
 = 
	`tc_drivî_öô
(
tcd
,
tsd
,
èbÀ_id
->
¥iv
,
¨g
))){

1658 
	`¥ötk
("service driver init failed!\n");

1659  
ªt
;

1662 
sma
 = 
TW_SERVICE_BASE_MAJOR
 + 
ty≥
;

1663 if(
ty≥
 > 1)

1664 
	`¢¥ötf
(
tsd
->
«me
,—sd->«me),"ch™%02lu-%s",
¨g
->
ch™√l_idx
,
tc_dev_«me
[
ty≥
+1]);

1666 
	`¢¥ötf
(
tsd
->
«me
,—sd->«me),"ch™%02lu-%s-%s",
¨g
->
ch™√l_idx
,
°ªam
[¨g->°ªam],
Æg‹ôhm
[arg->algorithm]);

1667 
tsd
->
cdev
 = 
	`cdev_Æloc
();

1668 if(
tsd
->
cdev
 =
NULL
){

1669 
	`dbg
("cdev_alloc failed!\n");

1670  -
ENOMEM
;

1673 
mö‹
 = 
	`gë_‰ì_mö‹
(
¨g
);

1675 if(
mö‹
 < 0){

1676 
	`dbg
("service minor get failed!\n");

1677 
	`k‰ì
(
tsd
->
cdev
);

1678  -
EINVAL
;

1681 
	`cdev_öô
(
tsd
->
cdev
,&
tws_f›s
);

1682 
tsd
->
cdev
->
ow√r
 = 
THIS_MODULE
;

1683 
ªt
 = 
	`cdev_add
(
tsd
->
cdev
,
	`MKDEV
(
sma
,
mö‹
),1);

1684 if(
ªt
 < 0){

1685 
	`dbg
("cdev_add failed!\n");

1686 
îr‹
;

1688 
ißdd
 = 1;

1690 
tsd
->
mö‹
 = minor;

1691 
tsd
->
±cd
 = 
tcd
;

1692 
tsd
->
ty≥
 =Åype;

1693 
tsd
->
dev
.
kobj
.
∑ª¡
 = 
dú
;

1694 
tsd
->
dev
.
˛ass
 = 
NULL
;

1695 
tsd
->
dev
.
devt
 = 
	`MKDEV
(
sma
,
mö‹
);

1696 
tsd
->
dev
.
ªÀa£
 = 
dumy_ªÀa£
;

1697 
	`•rötf
(
tsd
->
dev
.
bus_id
,"%s",tsd->
«me
);

1698 
ªt
 = 
	`devi˚_ªgi°î
(&
tsd
->
dev
);

1699 if(
ªt
<0){

1700 
	`dbg
("devi˚_ªgi°î faûed i¿%s!\n",
__FUNCTION__
);

1701 
îr‹
;

1703 #ifde‡ 
STATIC_COUNTING


1704 
	`mem£t
((*)&
tsd
->
b_ôvÆ
, 0, (
tc_buf_öãrvÆ
));

1705 
tsd
->
b_ôvÆ
.
u_time
 = 5;

1707 
∂i°
 = &
tcd
->
tsd_li°
[
ty≥
];

1708 
	`li°_add_èû
(&
tsd
->
li°
,
∂i°
);

1718 
di
.
maj‹
 = 
sma
;

1719 
di
.
mö‹
 = minor;

1720 
	`mem˝y
(
di
.
∑th
,
tsd
->
«me
,255);

1722 
	`c›y_to_u£r
(
¨g
->
dev_öfo
,&
di
,(
devi˚_öfo
));

1725 
îr‹
:

1726 if(
tsd
->
cdev
){

1727 if(
ißdd
)

1728 
	`cdev_dñ
(
tsd
->
cdev
);

1729 
	`k‰ì
(
tsd
->
cdev
);

1730 
	`put_‰ì_mö‹
(
mö‹
,
¨g
->
ty≥
);

1732  
ªt
;

1737 
tw_£rvi˚_devi˚
 * 
	`tc_£rdev_Æloc
(
¥iv_size
)

1739 * 
p
;

1740 
size
;

1741 
tw_£rvi˚_devi˚
 *
tsd
;

1743 
size
 = ((*
tsd
Ë+ 
CHIPDEV_ALIGN_MASK
) & ~CHIPDEV_ALIGN_MASK;

1744 
size
 +
¥iv_size
 + 
CHIPDEV_ALIGN_MASK
;

1745 
p
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
);

1746 if(!
p
){

1747 
	`¥ötk
("%s:Çÿmem!\n",
__FUNCTION__
);

1748  
NULL
;

1750 
tsd
 = (
tw_£rvi˚_devi˚
 *)((()
p
 + 
CHIPDEV_ALIGN_MASK
) & ~CHIPDEV_ALIGN_MASK);

1751 
tsd
->
∑dded
 = (*Èsd - (*)
p
;

1752 if(
¥iv_size
)

1753 
tsd
->
¥iv
 = 
	`tsd_¥iv
(tsd);

1755  
tsd
;

1758 
	`tc_£rdev_‰ì
(
tw_£rvi˚_devi˚
 * 
tsd
)

1760 
	`k‰ì
((*)
tsd
 -Åsd->
∑dded
);

1765 
	`do_¸óã_£rvi˚_dev
(
tw_chù_devi˚
 * 
tcd
, 
cmd_¨g
 * 
¨g
, 
kobje˘
 * 
dú
)

1767 
ªt
 = 0;

1768 
ïobj_t
 
ï
 = {0};

1769 
tsd_fûe_›î©i⁄s
 *
tsd_›s
 = 
NULL
;

1770 
tw_£rvi˚_devi˚
 *
tsd
 = 
NULL
;

1771 
tw_dev_èbÀ_id
 *
èbÀ_id
;

1772 
cmd_li°
 *
˛
 = 
NULL
;

1773 
ty≥
 = 
¨g
->type - 1;

1775 if(
ty≥
 < 0){

1776 
	`¥ötk
("BUG:Åy≥Éº‹ i¿%s!\n", 
__FUNCTION__
);

1779 
tcd
->
dús
[
ty≥
] = 
dú
;

1781 
	`ïobj_£t
(&
ï
,&
tcd
->
ïobj
);

1782 
ï
.
ty≥
 = 
¨g
->type;

1783 
ï
.
func_id
 = (
¨g
->
°ªam
 << 16Ë|árg->
Æg‹ôhm
;

1785 
	`make_£rvi˚_key
((
ïkey_t
 *)&
ï
.
key
,
tcd
,
¨g
);

1787 
èbÀ_id
 = 
	`lookup_tcdev_èbe_id
(&
ï
);

1788 if(!
èbÀ_id
){

1789 
	`¥ötk
("we didn't supportÅhisÅype device!\n");

1790  -
ENODEV
;

1792 
tsd_›s
 = (
tsd_fûe_›î©i⁄s
 *)
èbÀ_id
->
›s
;

1794 if(!
tsd_›s
->
öô
){

1795 
	`dbg
("no init function for service device!\n");

1796  -
EINVAL
;

1800 
ªt
 = 
tsd_›s
->
	`öô
(
tcd
,
¨g
,&
tsd
);

1801 if(
ªt
 || !
tsd
){

1802 
tsd_›s
->
	`de°‹y
(
tsd
);

1803  -
ENOMEM
;

1805 
tsd
->
tsd_f›s
 = 
èbÀ_id
->
›s
;

1806 
tsd
->
¥iv©e_d©a
 = 
èbÀ_id
->
∑ø
;

1808 
ªt
 = 
	`£tup_£rvi˚_devi˚
(
tsd
,
tcd
,
¨g
,
dú
,
èbÀ_id
);

1809 if(
ªt
){

1810 
tsd_›s
->
	`de°‹y
(
tsd
);

1811  
ªt
;

1815 
˛
 = 
	`kzÆloc
((*˛),
GFP_KERNEL
);

1816 if(!
˛
){

1817 
	`dbg
("cmd_listálloc failed!\n");

1818 
ªt
 = -
ENOMEM
;

1819 
d_out
;

1823 
	`INIT_LIST_HEAD
(&
˛
->
node
);

1824 
˛
->
tcd
 =Åcd;

1825 
	`mem˝y
((*)&
˛
->
¨g
,(*Ôrg,(
cmd_¨g
));

1826 
	`li°_add_èû
(&
˛
->
node
,&
˛_hód
);

1827 
	`¥ötk
("cmd_ty≥[%d],cmd_cix[%lu],cmd_Ægo[%d],cmd_°ªam[%d]\n",
˛
->
¨g
.
ty≥
,˛->¨g.
ch™√l_idx
,˛->¨g.
Æg‹ôhm
,˛->¨g.
°ªam
);

1829 
d_out
:

1830 
	`ªÀa£_£rvi˚_devi˚
(
tcd
, (*)
¨g
);

1831  
ªt
;

1836 
	`do_add_to_kî√l
(
tw_chù_devi˚
 * 
tcd
, *
¨g
)

1838 
ªt
 =0,
maj‹
 = 0;

1839 
ïkey_t
 
√w_key
;

1840 
tw_£rvi˚_devi˚
 *
tmp
 =
NULL
;

1841 
li°_hód
 *
hód
 = 
NULL
;

1842 
li°_hód
 *
p
 = 
NULL
;

1843 
cmd_¨g
 *
d©a
 = (cmd_¨g *)
¨g
;

1844 
devi˚_öfo
 
di
 = {0};

1845 
ty≥
 = 
d©a
->type -1;

1847 if(
ty≥
 < 0){

1848 
	`¥ötk
("ö %†ty≥Éº‹ !\n",
__FUNCTION__
);

1849  -
EINVAL
;

1851 
maj‹
 = 
ty≥
 + 
TW_SERVICE_BASE_MAJOR
;

1852 
√w_key
 = 
	`make_£rvi˚_key
(
tcd
,
¨g
);

1853 
hód
 = &
tcd
->
tsd_li°
[
ty≥
];

1854 
p
 = 
hód
->
√xt
;

1855 ;
p
 !
hód
;Ö =Ö->
√xt
)

1857 
tmp
 = 
	`c⁄èöî_of
(
p
,
tw_£rvi˚_devi˚
,
li°
);

1858 if(
	`ïkey_equÆ
(
tmp
->
ïobj
.
key
,
√w_key
))

1859 
föd
;

1861  -
ENODEV
;

1862 
föd
:

1863 
di
.
maj‹
 = major;

1864 
di
.
mö‹
 = 
tmp
->minor;

1865 
	`mem˝y
(
di
.
∑th
,
tmp
->
«me
,255);

1866 
	`c›y_to_u£r
(
d©a
->
dev_öfo
,&
di
,(
devi˚_öfo
));

1867  
ªt
;

1873 
	`¸óã_£rvi˚_devi˚
(
tw_chù_devi˚
 * 
tcd
, 
d©a
)

1875 
ªt
 = 0;

1876 
kobje˘
 *
dú
 = 
NULL
;

1877 
cmd_¨g
 *
¨g
 = (cmd_¨g *)
d©a
;

1878 
ô
 = 
¨g
->
ty≥
 -1;

1880 if(
ô
 < 0){

1881 
	`¥ötk
("BUG:îr‹Åy≥ i¿%†\n",
__FUNCTION__
);

1882  -
EINVAL
;

1884 if(
	`check_vÆid
(
tcd
,
¨g
->
ty≥
)){

1885 
	`dbg
("invalidÖarameters\n");

1886  -
EINVAL
;

1889 if(
	`check_chùdev_limô
(
tcd
, 
¨g
)){

1890 
	`dbg
("no moreÑesource!\n");

1891  -
EINVAL
;

1894 
dú
 = 
	`gë_dú
(
tcd
, 
ô
);

1895 if(
dú
 =
NULL
){

1896 
	`dbg
("get dir failed\n");

1897  -
EEXIST
;

1899 
ªt
 = 
	`do_¸óã_£rvi˚_dev
(
tcd
, 
¨g
,
dú
);

1900 if(
ªt
)

1901 
	`tw_ªmove_dú
(
dú
);

1902  
ªt
;

1907 
	`tc_drivî_ö°™t_ªmove
(
tw_chù_devi˚
 *
tcd
, 
tw_£rvi˚_devi˚
 *
tsd
,
tw_£rvi˚_drivî
 *
driv
, 
cmd_¨g
 *
¨g
)

1909 
tsd_drivî_›î©i⁄s
 *
tsdr
;

1910 
tw_dev_èbÀ_id
 *
driv_èbÀ_id
;

1912 if(!
driv
){

1913 
	`¥ötk
("NULLÖoöãr--->ö %s\n",
__FUNCTION__
);

1916 
driv_èbÀ_id
 = (
tw_dev_èbÀ_id
 *)&
driv
->
devi˚_id
;

1917 if(!
driv_èbÀ_id
->
›s
){

1918 
	`dbg
("driver withÇo ops!\n");

1921 
tsdr
 = (
tsd_drivî_›î©i⁄s
 *)
driv_èbÀ_id
->
›s
;

1922 if(!
tsdr
->
ªmove
){

1923 
	`dbg
("driver withÇoÑemove function!\n");

1926 
tsdr
->
	`ªmove
(
tcd
,
tsd
,
driv_èbÀ_id
->
∑ø
,
¨g
);

1931 
tw_dev_èbÀ_id
 *
	`föd_tc_£rdriv_‰om_tcd
(
tw_chù_devi˚
 *
tcd
,
cmd_¨g
 *
¨g
)

1933 
ïobj_t
 
ï
 = {0};

1935 
	`ïobj_£t
(&
ï
,&
tcd
->
ïobj
);

1936 
ï
.
ty≥
 = 
¨g
->type;

1937 
ï
.
func_id
 = (
¨g
->
°ªam
 << 16Ë|árg->
Æg‹ôhm
;

1939 
	`make_£rvi˚_key
((
ïkey_t
 *)&
ï
.
key
,
tcd
,
¨g
);

1942  
	`lookup_tcdev_èbe_id
(&
ï
);

1948 
	`do_ªÀa£_£rvi˚_devi˚
(
tw_£rvi˚_devi˚
 *
tsd
,*
d©a
)

1950 
kobje˘
 *
k
;

1951 
tw_chù_devi˚
 *
t
;

1952 
li°_hód
 *
p
,*
tmp
;

1953 
cmd_li°
 *
˛
;

1954 
cmd_¨g
 *
¨g
 = (cmd_¨g *)
d©a
;

1957 
tc_åa˚
;

1958 
	`¥ötk
("@@@@@@@@@@ty≥[%d],cix[%lu],Ægo[%d],°ªam[%d]\n",
¨g
->
ty≥
,¨g->
ch™√l_idx
,¨g->
Æg‹ôhm
,¨g->
°ªam
);

1960 
k
 = 
tsd
->
dev
.
kobj
.
∑ª¡
;

1961 
	`cdev_dñ
(
tsd
->
cdev
);

1962 
	`k‰ì
(
tsd
->
cdev
);

1963 
	`devi˚_uƒegi°î
(&
tsd
->
dev
);

1965 
	`put_‰ì_mö‹
(
tsd
->
mö‹
,tsd->
ty≥
 + 1);

1966 
t
 = 
tsd
->
±cd
;

1967 if(
d©a
){

1968 if(
	`li°_em±y
(&
t
->
tsd_li°
[
tsd
->
ty≥
])){

1970 
	`tw_ªmove_dú
(
k
);

1971 
t
->
dús
[
tsd
->
ty≥
] = 
NULL
;

1973 
	`li°_f‹_óch_ß„
(
p
, 
tmp
, &
˛_hód
){

1974 
˛
 = 
	`c⁄èöî_of
(
p
, 
cmd_li°
, 
node
);

1975 if(
	`cmd_equÆ
(&
˛
->
¨g
,
d©a
)){

1976 
	`li°_dñ
(
p
);

1982 if(!
tsd
->
˛ón_up
){

1983 
	`dbg
("you guys haveÇo clean_up functionÑegisted\n");

1986 
tsd
->
	`˛ón_up
(tsd);

1987 
	`¥ötk
("a·îÖîf‹emÑñó£ sîvi˚ -devi˚Åsd[0x%8p]\n",
tsd
);

1991 
	`ªÀa£_Æl_£rvi˚_devi˚
()

1993 
li°_hód
 *
p
,*
q
,*
tmp
,*
tmt
;

1995 
tw_chù_devi˚
 * 
tcd
 = 
NULL
;

1996 
tw_£rvi˚_devi˚
 *
tsd
 = 
NULL
;

1997 
idx
 = 0;

1998 
kobje˘
 *
k
;

2000 
	`LIST_HEAD
(
rm_li°
);

2001 
	`INIT_LIST_HEAD
(&
rm_li°
);

2003 
	`muãx_lock
(&
muãx_chùdev
);

2004 
	`li°_f‹_óch
(
p
,&
tw_chùdev
){

2005 
tcd
 = 
	`c⁄èöî_of
(
p
,
tw_chù_devi˚
, 
li°
);

2006 
idx
=0; idx < 
MAX_SERVICE_NR
-1; idx++){

2007 
q
 = &
tcd
->
tsd_li°
[
idx
];

2008 if(
	`li°_em±y
(
q
))

2010 
	`li°_f‹_óch_ß„
(
tmp
,
tmt
,
q
){

2011 
	`li°_move_èû
(
tmp
,&
rm_li°
);

2015 
	`muãx_u∆ock
(&
muãx_chùdev
);

2018 
	`li°_f‹_óch_ß„
(
p
, 
tmp
, &
rm_li°
){

2020 
	`li°_dñ
(
p
);

2021 
tsd
 = 
	`li°_íåy
(
p
, 
tw_£rvi˚_devi˚
, 
li°
);

2022 
	`do_ªÀa£_£rvi˚_devi˚
(
tsd
,
NULL
);

2029 if(!
	`li°_em±y
(&
rm_li°
))

2030 
	`¥ötk
("BUG: havê£rvi˚_devÜe·ed! %s\n",
__FUNCTION__
);

2032 
	`li°_f‹_óch_ß„
(
p
,
tmp
,&
˛_hód
){

2033 
	`li°_dñ
(
p
);

2036 
	`muãx_lock
(&
muãx_chùdev
);

2037 
	`li°_f‹_óch
(
p
,&
tw_chùdev
){

2038 
tcd
 = 
	`c⁄èöî_of
(
p
,
tw_chù_devi˚
, 
li°
);

2039 
idx
=0; idx < 
MAX_SERVICE_NR
-1; idx++){

2041 
k
 = 
tcd
->
dús
[
idx
];

2043 if(
k
){

2045 
	`tw_ªmove_dú
(
k
);

2049 
tcd
->
dús
[
idx
] = 
NULL
;

2052 
	`muãx_u∆ock
(&
muãx_chùdev
);

2057 
	`ªÀa£_Æl_£rvi˚_devi˚_ext
()

2059 
li°_hód
 *
p
,*
q
,*
tmp
;

2061 
tw_chù_devi˚
 * 
tcd
 = 
NULL
;

2063 
idx
 = 0;

2064 
kobje˘
 *
k
;

2065 
cmd_li°
 *
˛
;

2067 
	`muãx_lock
(&
muãx_chùdev
);

2068 
	`li°_f‹_óch
(
p
,&
tw_chùdev
){

2069 
tcd
 = 
	`c⁄èöî_of
(
p
,
tw_chù_devi˚
, 
li°
);

2070 
	`li°_f‹_óch_ß„
(
q
,
tmp
,&
˛_hód
){

2072 
˛
 = 
	`c⁄èöî_of
(
q
,
cmd_li°
,
node
);

2073 if(
˛
->
tcd
 ==Åcd){

2074 
	`muãx_u∆ock
(&
muãx_chùdev
);

2075 
	`ªÀa£_£rvi˚_devi˚
(
˛
->
tcd
,(*)&˛->
¨g
);

2076 
	`muãx_lock
(&
muãx_chùdev
);

2080 
	`muãx_u∆ock
(&
muãx_chùdev
);

2108 
	`ªÀa£_£rvi˚_devi˚
(
tw_chù_devi˚
 *
tcd
, *
d©a
)

2110 
cmd_¨g
 *
¨g
 = (cmd_¨g *)
d©a
;

2111 
maj‹
;

2112 
ïkey_t
 
√w_key
 = {0};

2113 
tw_£rvi˚_devi˚
 *
tmp
;

2114 
li°_hód
 *
p
,*
hód
;

2115 
ty≥
 = 
¨g
->type -1;

2116 
tw_dev_èbÀ_id
 *
èbÀ_id
;

2118 if(
ty≥
 < 0){

2119 
	`¥ötk
("BUG:Éº‹Åy≥ i¿%†\n", 
__FUNCTION__
);

2122 
tc_åa˚
;

2123 
	`muãx_lock
(&
muãx_chùdev
);

2124 
maj‹
 = 
ty≥
 + 
TW_SERVICE_BASE_MAJOR
;

2126 
	`make_£rvi˚_key
((
ïkey_t
 *)&
√w_key
,
tcd
,
¨g
);

2127 
	`¥ötk
("ty≥ =%d\n",
ty≥
);

2128 
hód
 = &
tcd
->
tsd_li°
[
ty≥
];

2129 
	`li°_f‹_óch
(
p
,
hód
)

2133 
	`¥ötk
("&&&&&&&&&\n");

2134 
tmp
 = 
	`c⁄èöî_of
(
p
,
tw_£rvi˚_devi˚
,
li°
);

2135 
	`dbg_ïobj_¥öt
(&
tmp
->
ïobj
);

2136 if(
	`ïkey_equÆ_wôhout_phyid
(&
tmp
->
ïobj
.
key
,&
√w_key
))

2137 
föd
;

2139 
	`¥ötk
("@@@@@@@@@@ö %†---->övÆidÖ¨amëî! \n",
__FUNCTION__
);

2140 
	`¥ötk
("@@@@@@@@@@ty≥[%d],cix[%lu],Ægo[%d],°ªam[%d]\n",
¨g
->
ty≥
,¨g->
ch™√l_idx
,¨g->
Æg‹ôhm
,¨g->
°ªam
);

2141 
	`muãx_u∆ock
(&
muãx_chùdev
);

2143 
föd
:

2144 
	`li°_dñ
(&
tmp
->
li°
);

2145 
	`muãx_u∆ock
(&
muãx_chùdev
);

2147 
èbÀ_id
 = 
	`föd_tc_£rdriv_‰om_tcd
(
tcd
,
¨g
);

2148 if(
èbÀ_id
)

2149 
	`tc_drivî_ö°™t_ªmove
(
tcd
,
tmp
,
èbÀ_id
->
¥iv
,
¨g
);

2151 
	`dbg
("canÇot find driver inÅc_devÜist\n");

2153 
	`do_ªÀa£_£rvi˚_devi˚
(
tmp
,
d©a
);

2184 
	`ªgi°î_tc_devi˚
(
tw_dev_èbÀ_id
 *
√w
)

2186 
ªt
 = 0;

2187 
li°_hód
 *
p
 = &
tw_tc_dev
;

2188 
tw_dev_èbÀ_id
 *
tb
,*
¥ev
;

2191 
	`muãx_lock
(&
muãx_tc_dev
);

2192 if(
p
->
√xt
 =&
tw_tc_dev
 &&Ö->
¥ev
 == &tw_tc_dev){

2193 
	`li°_add_èû
(&
√w
->
li°
,&
tw_tc_dev
);

2194 
ªt
 = 0;

2195 
out
;

2198 
p
 =Ö->
√xt
;

2199 if(
p
 =&
tw_tc_dev
){

2200 
	`li°_add_èû
(&
√w
->
li°
,&
tw_tc_dev
);

2201 
ªt
 = 0;

2202 
out
;

2205 ;
p
 !&
tw_tc_dev
; 
¥ev
 = 
tb
,Ö =Ö->
√xt
)

2207 
tb
 = 
	`c⁄èöî_of
(
p
,
tw_dev_èbÀ_id
,
li°
);

2208 if(
tb
->
tid
->
ïobj
.
víd‹_id
 !
√w
->tid->ïobj.víd‹_id ||Åb->tid->ïobj.
bus_id
 !=Çew->tid->epobj.bus_id

2209 || 
tb
->
tid
->
ïobj
.
chù_id
 !
√w
->tid->ïobj.chù_id ||Åb->tid->ïobj.
func_id
 !=Çew->tid->epobj.func_id)

2211 if(
tb
->
tid
->
vîsi⁄
 !
√w
->tid->version){

2212 
	`¥ötk
("alreadyÉxist!\n");

2213 
ªt
 = -
EEXIST
;

2214 
out
;

2216 if(
√w
->
tid
->
vîsi⁄
 > 
tb
->tid->version){

2217 
	`li°_add
(&
√w
->
li°
,&
¥ev
->list);

2218 
ªt
 = 0;

2219 
out
;

2222 
	`dbg_ïobj_¥öt
(&
√w
->
tid
->
ïobj
);

2223 
	`li°_add
(&
√w
->
li°
,&
¥ev
->list);

2224 
out
:

2225 
	`muãx_u∆ock
(&
muãx_tc_dev
);

2226  
ªt
;

2232 
	`uƒegi°î_Æl_tc_devi˚
()

2234 
li°_hód
 *
_p
,*
tmp
;

2235 
tw_dev_èbÀ_id
 *
dev
;

2237 
	`LIST_HEAD
(
ªmove_li°
);

2238 
	`INIT_LIST_HEAD
(&
ªmove_li°
);

2240 
	`muãx_lock
(&
muãx_tc_dev
);

2241 !
	`li°_em±y
(&
tw_tc_dev
)){

2242 
	`li°_f‹_óch_ß„
(
_p
, 
tmp
, &
tw_tc_dev
){

2244 
	`li°_move_èû
(
_p
,&
ªmove_li°
);

2247 
	`muãx_u∆ock
(&
muãx_tc_dev
);

2250 
	`li°_f‹_óch_ß„
(
_p
, 
tmp
, &
ªmove_li°
){

2252 
	`li°_dñ
(
_p
);

2253 
dev
 = 
	`li°_íåy
(
_p
, 
tw_dev_èbÀ_id
, 
li°
);

2254 
	`k‰ì
(
dev
);

2256 if(!
	`li°_em±y
(&
ªmove_li°
))

2257 
	`¥ötk
("BUG: haveÅc_devÜefted\n");

2264 
	`uƒegi°î_tc_devi˚
(
tw_dev_èbÀ_id
 *
tb
)

2266 
	`muãx_lock
(&
muãx_tc_dev
);

2267 
	`li°_dñ
(&
tb
->
li°
);

2268 
	`muãx_u∆ock
(&
muãx_tc_dev
);

2269 
	`k‰ì
(
tb
);

2275 
	`tc_drivî_m©ch
(
tw_dev_èbÀ_id
 * 
driv
,tw_dev_èbÀ_id * 
dev
)

2277 if(
	`ïobj_euqÆ
(&
driv
->
tid
->
ïobj
,&
dev
->tid->epobj))

2285 
	`ªgi°î_tc_drivî
(
tw_£rvi˚_drivî
 * 
driv
)

2287 
ªt
= 0;

2288 
li°_hód
 *
_p
;

2289 
tw_dev_èbÀ_id
 *
dev
;

2291 
dev
 = &
driv
->
devi˚_id
;

2292 
	`dbg_ïobj_¥öt
(&
dev
->
tid
->
ïobj
);

2293 
driv
->
drivî
.
bus
 = &
tw_vútuÆ_bus
;

2294 
ªt
 = 
	`drivî_ªgi°î
(&
driv
->
drivî
);

2295 if(
ªt
)

2296  
ªt
;

2297 
	`muãx_lock
(&
muãx_tc_drv
);

2298 
	`li°_add_èû
(&
driv
->
li°
,&
tw_tc_drv
);

2299 
	`muãx_u∆ock
(&
muãx_tc_drv
);

2301 
	`li°_f‹_óch
(
_p
, &
tw_tc_dev
){

2302 
dev
 = 
	`li°_íåy
(
_p
, 
tw_dev_èbÀ_id
, 
li°
);

2303 i‡(
	`tc_drivî_m©ch
(&
driv
->
devi˚_id
,
dev
)){

2304 
	`¥ötk
("attached!\n");

2305 
dev
->
¥iv
 = 
driv
;

2309  
ªt
;

2315 
	`uƒegi°î_tc_drivî
(
tw_£rvi˚_drivî
 *
driv
)

2317 
li°_hód
 *
_p
;

2318 
tw_dev_èbÀ_id
 *
dev
;

2320 
	`li°_f‹_óch
(
_p
, &
tw_tc_dev
){

2321 
dev
 = 
	`li°_íåy
(
_p
, 
tw_dev_èbÀ_id
, 
li°
);

2322 i‡(
	`tc_drivî_m©ch
(&
driv
->
devi˚_id
,
dev
)){

2323 
dev
->
¥iv
 = 
NULL
;

2327 
	`drivî_uƒegi°î
(&
driv
->
drivî
);

2328 
	`muãx_lock
(&
muãx_tc_drv
);

2329 
	`li°_dñ
(&
driv
->
li°
);

2330 
	`muãx_u∆ock
(&
muãx_tc_drv
);

2331 
	`¥ötk
("%s\n",
__FUNCTION__
);

2339 
	`EXPORT_SYMBOL
(
ªgi°î_chù_devi˚
);

2340 
	`EXPORT_SYMBOL
(
uƒegi°î_chù_devi˚
);

2342 
	`EXPORT_SYMBOL
(
ªgi°î_chù_drivî
);

2343 
	`EXPORT_SYMBOL
(
uƒegi°î_chù_drivî
);

2345 
	`EXPORT_SYMBOL
(
¸óã_£rvi˚_devi˚
);

2346 
	`EXPORT_SYMBOL
(
ªÀa£_£rvi˚_devi˚
);

2348 
	`EXPORT_SYMBOL
(
ªgi°î_tc_devi˚
);

2349 
	`EXPORT_SYMBOL
(
uƒegi°î_tc_devi˚
);

2351 
	`EXPORT_SYMBOL
(
ªgi°î_tc_drivî
);

2352 
	`EXPORT_SYMBOL
(
uƒegi°î_tc_drivî
);

2354 
	`EXPORT_SYMBOL
(
föd_chù_dev
);

2355 
	`EXPORT_SYMBOL
(
föd_£rvi˚_dev
);

2357 
	`EXPORT_SYMBOL
(
tc_chùdev_Æloc
);

2358 
	`EXPORT_SYMBOL
(
tc_chùdev_‰ì
);

2365 
	`ªque°_devno_ªsour˚
()

2367 
ªt
 = -1,
i
;

2369 
ªt
 = 
	`öô_nfm_bôm≠
();

2370 if(-1 =
ªt
)

2372 
i
=0; i<
MAX_SERVICE_NR
; i++)

2374 
ªt
 = 
	`ªgi°î_chrdev_ªgi⁄
(
	`MKDEV
(
TW_CHIP_MAJOR
+
i
,0), 
MAX_MINOR_NR
, 
tc_dev_«me
[i]);

2375 i‡(
ªt
 < 0){

2376 
	`dbg
(
KERN_WARNING
 "u«bÀÅÿgë maj‹ %d\n",
TW_CHIP_MAJOR
);

2392 
	`‰ì_devno_ªsour˚
()

2394 
i
;

2396 
	`‰ì_nfm_bôm≠
();

2397 
i
=0; i<
MAX_SERVICE_NR
; i++)

2398 
	`uƒegi°î_chrdev_ªgi⁄
(
	`MKDEV
(
TW_CHIP_MAJOR
+
i
,0), 
MAX_MINOR_NR
);

2405 
	`tc_hódî_buf„r_öô
(
tc_hb_poﬁ
 *
poﬁ
,
tc_hódî_buf
 *
thb
, 
ödex
)

2407 
tcb_node_t
 *
node
;

2408 * 
˝
 = 
NULL
;

2410 if(!
poﬁ
 || !
thb
){

2411 
	`¥ötk
("övÆidÖ¨®ö %s\n",
__FUNCTION__
);

2412  
EINVAL
;

2414 
	`©omic_£t
(&
thb
->
ªf
, 0);

2415 
node
 = &
thb
->node;

2416 
node
->
›
 = &
tcb_node_›
;

2417 
node
->
›
->
	`öô
(node);

2418 
node
->
›
->
	`£t_¥iv
“ode, 
thb
);

2419 
	`•ö_lock_öô
(&
thb
->
lock
);

2420 
thb
->
id
 = 
ödex
;

2421 
thb
->
unô_size

PAGE_SIZE
;

2423 
˝
 = (*)
poﬁ
->
p
;

2424 
thb
->
d©a
 = (*)(
˝
 + (thb->
unô_size
 * 
ödex
));

2425 
	`mem£t
((*)
thb
->
d©a
,0,thb->
unô_size
);

2432 
	`tc_hódî_buf„r_ªÀa£
(
tc_hb_poﬁ
 *
poﬁ
,
tc_hódî_buf
 *
thb
)

2434 
tc_hódî_buf
 * 
tb
;

2435 
tcb_node_t
 * 
node
;

2436 
Êags
;

2438 if(
thb
){

2439 
tb
 = 
thb
;

2440 if(!
poﬁ
)

2441 
poﬁ
 = 
tb
->pool;

2443 
	`•ö_lock_úqßve
(&
tb
->
lock
, 
Êags
);

2444 if(
	`©omic_ªad
(&
tb
->
ªf
) > 1){

2445 
	`©omic_dec
(&
tb
->
ªf
);

2451 
node
 = &
tb
->node;

2452 if(
node
->
›
){

2454 
node
->
›
->
	`ªÀa£
“ode,&
poﬁ
->
≈
);

2459 
	`•ö_u∆ock_úqª°‹e
(&
tb
->
lock
, 
Êags
);

2463 
tc_hb_›î©i⁄
 
tc_hb_›
 =

2465 .
öô
 = 
tc_hódî_buf„r_öô
,

2466 .
ªÀa£
 = 
tc_hódî_buf„r_ªÀa£
,

2470 
	`tc_¸óã_hódî_buf„r_poﬁ
(
Àn
)

2472 
ªt
 = 0,
idx
;

2473 
tcb_node_poﬁ_t
 *
≈
;

2474 
tc_hódî_buf
 *
thb
;

2476 
thb_poﬁ
->
‹dî
 = 
	`gë_‹dî
(
Àn
);

2477 
thb_poﬁ
->
p
 = (*)
	`__gë_‰ì_∑ges
(
GFP_KERNEL
,thb_poﬁ->
‹dî
);

2478 if(!
thb_poﬁ
->
p
){

2479 
	`dbg
("no mem forÅc header bufferÖool!\n");

2480 
ªt
 = -
ENOMEM
;

2481 
îr
;

2483 
thb_poﬁ
->
ƒ
 = 
Àn
/
TC_HEADER_BUFFER_LEN
;

2484 
≈
 = &
thb_poﬁ
->np;

2485 
≈
->
›
 = &
tcb_node_poﬁ_›
;

2487 
thb_poﬁ
->
bufs
 = 
	`kzÆloc
((
tc_hódî_buf
Ë*Åhb_poﬁ->
ƒ
, 
GFP_KERNEL
);

2488 if(!
thb_poﬁ
->
bufs
){

2489 
ªt
 = -
ENOMEM
;

2490 
îr
;

2492 
≈
->
›
->
	`öô
“p,
thb_poﬁ
->
ƒ
);

2493 
thb
 = 
thb_poﬁ
->
bufs
;

2494 
idx
 = 0; idx < 
thb_poﬁ
->
ƒ
; idx++,
thb
++){

2496 
thb
->
›
 = &
tc_hb_›
;

2497 
thb
->
poﬁ
 = 
thb_poﬁ
;

2498 
thb
->
›
->
	`öô
(
thb_poﬁ
,thb,
idx
);

2499 
thb
->
›
->
	`ªÀa£
(
thb_poﬁ
,thb);

2501  
ªt
;

2502 
îr
:

2503 if(
thb_poﬁ
->
bufs
)

2504 
	`k‰ì
(
thb_poﬁ
->
bufs
);

2505 if(
thb_poﬁ
->
p
)

2506 
	`‰ì_∑ges
(()
thb_poﬁ
->
p
,thb_poﬁ->
‹dî
);

2507  
ªt
;

2512 
	`tc_de°‹y_hódî_buf„r_poﬁ
(
tc_hb_poﬁ
 *
ç
)

2514 
tcb_node_poﬁ_t
 *
≤
;

2516 if(!
ç
)

2519 
≤
 = &
ç
->
≈
;

2520 if(
≤
->
›
){

2521 
≤
->
›
->
	`ªÀa£
(pn);

2523 if(
ç
->
bufs
)

2524 
	`k‰ì
(
ç
->
bufs
);

2525 if(
ç
->
p
)

2526 
	`‰ì_∑ges
(()
ç
->
p
,ç->
‹dî
);

2527 
ç
->
ƒ
 = 0;

2528 
ç
->
p
 =Åp->
bufs
 =Åp->
›
 = 
NULL
;

2532 
	`tc_gë_hódî_buf
(
tc_hb_poﬁ
 *
ç
, 
tc_hódî_buf
 **
thb
)

2534 
tcb_node_poﬁ_t
 *
äp
;

2535 
tcb_node_t
 *
ä
;

2537 if(!
ç
 || !
thb
){

2538 
	`¥ötk
("övÆidÖ¨amëî i¿%s!\n",
__FUNCTION__
);

2541 
äp
 = &
ç
->
≈
;

2542 *
thb
 = 
NULL
;

2543 if(!
äp
->
›
){

2544 
	`¥ötk
("poolÇode hasÇo op!\n");

2547 
äp
->
›
->
	`gë
—≈,&
ä
);

2548 if(
ä
){

2549 *
thb
 = 
	`gë_thb_‰om_node
(
ä
);

2550 
	`©omic_öc
(&((*
thb
)->
ªf
));

2554 *
thb
 = 
NULL
;

2557 
	`tc_åy_gë_hódî_buf
(
tc_hb_poﬁ
 *
ç
, 
tc_hódî_buf
 **
thb
)

2559 
tcb_node_poﬁ_t
 *
äp
;

2560 
tcb_node_t
 *
ä
;

2562 if(!
ç
 || !
thb
){

2563 
	`¥ötk
("övÆidÖ¨amëî i¿%s!\n",
__FUNCTION__
);

2566 
äp
 = &
ç
->
≈
;

2567 *
thb
 = 
NULL
;

2568 if(!
äp
->
›
){

2569 
	`¥ötk
("poolÇode hasÇo op!\n");

2572 
äp
->
›
->
	`åy_gë
—≈,&
ä
);

2573 if(
ä
){

2574 *
thb
 = 
	`gë_thb_‰om_node
(
ä
);

2575 
	`©omic_öc
(&((*
thb
)->
ªf
));

2579 *
thb
 = 
NULL
;

2583 
	`tc_put_hódî_buf
(
tc_hb_poﬁ
 *
ç
, 
tc_hódî_buf
 *
thb
)

2585 
tcb_node_poﬁ_t
 *
äp
;

2587 if(!
ç
 || !
thb
){

2588 
	`¥ötk
("övÆidÖ¨amëî i¿%s!\n",
__FUNCTION__
);

2591 
äp
 = &
ç
->
≈
;

2592 if(!
äp
->
›
){

2593 
	`¥ötk
("poolÇode hasÇo op!\n");

2596 
äp
->
›
->
	`put
—≈,&
thb
->
node
);

2599 
	`tc_gë_hb_poﬁ_íåy_numbî
(
tc_hb_poﬁ
 *
ç
)

2601 
tcb_node_poﬁ_t
 *
äp
;

2603 if(!
ç
){

2604 
	`¥ötk
("övÆidÖ¨amëî i¿%s!\n",
__FUNCTION__
);

2605  
EINVAL
;

2607 
äp
 = &
ç
->
≈
;

2608 if(!
äp
->
›
){

2609 
	`¥ötk
("poolÇode hasÇo op!\n");

2610  
EINVAL
;

2612  
äp
->
›
->
	`gë_cuº_poﬁ_íåy_numbî
(tnp);

2616 
tc_hb_poﬁ_›î©i⁄
 
thb_›
 =

2618 .
¸óã
 = 
tc_¸óã_hódî_buf„r_poﬁ
,

2619 .
de°‹y
 = 
tc_de°‹y_hódî_buf„r_poﬁ
,

2620 .
gë_hódî_buf
 = 
tc_gë_hódî_buf
,

2621 .
åy_gë_hódî_buf
 = 
tc_åy_gë_hódî_buf
,

2622 .
put_hódî_buf
 = 
tc_put_hódî_buf
,

2623 .
gë_hb_poﬁ_íåy_numbî
 = 
tc_gë_hb_poﬁ_íåy_numbî
,

2626 
	`£tup_thb_poﬁ
()

2628 
ªt
 = 0;

2630 
thb_poﬁ
 = 
	`kzÆloc
((*thb_poﬁ),
GFP_KERNEL
);

2631 if(!
thb_poﬁ
)

2632  -
ENOMEM
;

2634 
thb_poﬁ
->
›
 = &
thb_›
;

2635 
ªt
 = 
thb_poﬁ
->
›
->
	`¸óã
(
TC_HEADER_BUFFER_POOL_LEN
);

2636  
ªt
;

2639 
	`˛ónup_thb_poﬁ
(
tc_hb_poﬁ
 *
ç
)

2641 if(
ç
 =
NULL
){

2642 
	`¥ötk
("övÆidÖ¨amëî! i¿%s\n",
__FUNCTION__
);

2646 if(
ç
->
›
 !
NULL
)

2647 
ç
->
›
->
	`de°‹y
(tp);

2649 
	`tc_de°‹y_hódî_buf„r_poﬁ
(
ç
);

2651 
	`k‰ì
(
ç
);

2655  
	`tw_c‹e_öô
()

2657 
ªt
;

2659 
	`INIT_LIST_HEAD
(&
tw_chùdev
);

2660 
	`INIT_LIST_HEAD
(&
tw_chùdrv
);

2661 
	`INIT_LIST_HEAD
(&
tw_tc_dev
);

2662 
	`INIT_LIST_HEAD
(&
tw_tc_drv
);

2663 
ªt
 = 
	`bus_ªgi°î
(&
tw_vútuÆ_bus
);

2664 if(
ªt
){

2665 
	`dbg
("tw_virtual busÑegister failed!\n");

2666  
ªt
;

2669 if(
	`ªque°_devno_ªsour˚
())

2670 
îr_devno
;

2671 if(
	`£tup_thb_poﬁ
())

2672 
îr_hb_poﬁ
;

2675 
kroŸ
 = 
	`tw_¸óã_dú
("twñl",
NULL
);

2676 if(
kroŸ
 =
NULL
) {

2677 
	`dbg
("Err: failed inÑoot dirÅwell!\n");

2678 
îr_tw_dú
;

2691 
îr_tw_dú
:

2692 
	`tw_ªmove_dú
(
kroŸ
);

2693 
îr_hb_poﬁ
:

2694 
	`˛ónup_thb_poﬁ
(
thb_poﬁ
);

2695 
îr_devno
:

2696 
	`‰ì_devno_ªsour˚
();

2697 
	`bus_uƒegi°î
(&
tw_vútuÆ_bus
);

2698  
ªt
;

2702  
	`tw_c‹e_exô
()

2704 
	`tw_ªmove_dú
(
kroŸ
);

2706 
	`˛ónup_thb_poﬁ
(
thb_poﬁ
);

2707 
	`‰ì_devno_ªsour˚
();

2709 
	`bus_uƒegi°î
(&
tw_vútuÆ_bus
);

2710 
	`¥ötk
("alláreÑeleased!\n");

	@../../tw5864/device_layer/tc_audio_de.c

1 
	~<tw5864/tc_comm⁄.h
>

3 
tw_chù_audio_∑øm_my
 
	gdef_audio_∑rm_de
 = {

4 .
i_bô_wide
 = 
TW_AUDIO_16BIT
,

5 .
	gi_ßm∂e_øã
 = 
TW_AUDIO_8K
,

6 .
	ge_audio_ty≥
 = 
TW_AUDIO_PCM
,

10 
	$de_buf_¥ï¨e
(
tc_queue
 * 
tq
, *
¥iv
,
tc_buf„r
 *
tc
)

12 
tc_buf„r_kîn
 *
tck
;

13 
tw_audio_de
 * 
tde
 = (tw_audio_dê*)
¥iv
;

14 
tw_audio_ch™_drivî
 *
driv
 = 
	`c⁄èöî_of
(
tde
->
tsd
.
≥d
,tw_audio_ch™_drivî, 
audio_ed
);

15 
tw_audio_∑ckë_queue_t
 *
adpq
;

16 
tw_audio_∑ckë_£˘i⁄_t
 *
as
;

17 
tw_audio_ch™_buf_poﬁ_t
 *
adpoﬁ
;

19 
adpq
 = &
driv
->
audio_∑ckë_queue
;

20 
adpoﬁ
 = &
driv
->
audio_buf_poﬁ
;

22 
tc_åa˚
;

25 
adpq
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(adpq);

26 
	`dbg
("after get consumer!\n");

27 
as
 = 
adpq
->
cuº_c⁄sumî
;

28 if(!
as
){

29 
	`dbg
("\n we get sectionÇothing!---------------------------------\n");

36 
	`muãx_lock
(&
tde
->
tsd
.
queue
->
lock
);

38 
tck
 = 
tq
->
bufs
[tq->
wp
];

40 
tck
->
ödex
 = 
as
->
id
;

41 
tck
->
ty≥
 = 
MEM_MMAP
;

42 
	`£t_tck_°©e
(
tck
,
STATE_READY
);

43 
tck
->
ißlign
 = (()
as
->
d©a
 >> 
PAGE_SHIFT
)? 1: 0;

44 
tck
->
off_to_∑ge
 = (()
as
->
d©a
) & 0xFFF;

45 
tck
->
°¨t
 = 
as
->
d©a
;

46 
tck
->
size
 = 
tde
->
tsd
.
queue
->
unô_size
;

47 
	`queue_öc_wp
(
tde
->
tsd
.
queue
);

48 
	`muãx_u∆ock
(&
tde
->
tsd
.
queue
->
lock
);

55 
	}
}

57 
	$de_buf_ªÀa£
(
tc_queue
 * 
tq
, * 
¥iv
, 
tc_buf„r_kîn
 *
tb
)

59 
ªt
 = 0;

60 
tw_audio_de
 * 
tde
 = (tw_audio_dê*)
¥iv
;

61 
tw_audio_ch™_drivî
 *
driv
 = 
	`c⁄èöî_of
(
tde
->
tsd
.
≥d
,tw_audio_ch™_drivî, 
audio_ed
);

62 
tw_audio_∑ckë_queue_t
 *
adpq
;

63 
tw_audio_ch™_buf_poﬁ_t
 *
adpoﬁ
;

65 
tc_åa˚
;

66 
adpq
 = &
driv
->
audio_∑ckë_queue
;

67 
adpoﬁ
 = &
driv
->
audio_buf_poﬁ
;

68 
adpq
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊dpq, 
adpoﬁ
);

69  
ªt
;

70 
	}
}

72 
tc_queue_›s
 
	gde_queue_›s
 = {

73 .
buf_¥ï¨e
 = 
de_buf_¥ï¨e
,

74 .
	gbuf_ªÀa£
 = 
de_buf_ªÀa£
,

136 
tw_audio_drivî_t
 * 
	$lookup_drive_ö°™˚_de
(
tw_£rvi˚_devi˚
 *
tsd
)

138 
tw_audio_drivî_t
 *
p
 = 
tsd
->
¥iv©e_d©a
;

139 
ld
 = 
	`gë_phch™_id_‰om_ïobj
(&
tsd
->
ïobj
);

140 
uÀn
 = (
tw_audio_drivî_t
);

141 * 
q
 = (*)&
p
[
ld
];

142 
q
 = q - 17*
uÀn
;

143 
	`¥ötk
("%†ld = %lu, decodîádd = %∞fú°Éncodîádd should bê%p\n",
__FUNCTION__
,
ld
,&
p
[ld],
q
);

145  &
p
[
ld
];

147 
	}
}

150 
	$tde_˛ónup
(*
¨g
)

152 
tw_audio_de
 *
tde
 = (tw_audio_dê*)
¨g
;

154 
tc_åa˚
;

155 
	`tc_queue_ªÀa£
(
tde
->
tsd
.
queue
);

156 
	`k‰ì
(
tde
);

157 
	}
}

161 
	$audi_de_pﬁlög
(*
p
)

163 
tw_audio_de
 *
tde
 = (tw_audio_dê*)
p
;

164 
tw_audio_ch™_drivî
 *
driv
 = 
	`c⁄èöî_of
(
tde
->
tsd
.
≥d
,tw_audio_ch™_drivî, 
audio_ed
);

165 
tw_audio_∑ckë_queue_t
 *
adpq
 = &
driv
->
audio_∑ckë_queue
;

166 
ƒ
 = 
adpq
->
›
->
	`gë_cuº_queue_íåy_numbî
(adpq);

168 if(
ƒ
)

170 
	`wake_up
(&
tde
->
waô_pﬁl
);

177 
	}
}

180 
	$audio_de_›í
(
tw_£rvi˚_devi˚
 *
tsd
,
fûe
 *
f
)

182 
ªt
 = 0;

183 
ed_tcb_t
 *
aded
;

184 
tw_audio_de
 *
tde
 = 
	`c⁄èöî_of
(
tsd
,tw_audio_de,tsd);

186 
tc_åa˚
;

188 if(!
tde
)

189  -
EINVAL
;

190 if(
f
->
¥iv©e_d©a
){

191 
	`dbg
("haveálready opened!\n");

195 if(!
tde
->
tsd
.
≥d
){

196 
	`dbg
("audio decoder hasÇo driveráttached!\n");

197 
ªt
 = -1;

198  
ªt
;

202 
tde
->
timî_id
 = 
	`AddF‹FúeTimîJob
(20,
audi_de_pﬁlög
,tde);

203 if(
tde
->
timî_id
 =
ADDJOBERROR
){

204 
	`¥ötk
("ö %†addÅimî job faûed!\n",
__FUNCTION__
);

205  
ªt
;

207 
aded
 = 
tde
->
tsd
.
≥d
;

208 
ªt
 = 
aded
->
›
->
	`›í
(aded);

209 if(
ªt
 !
TW_OK
){

210 
	`¥ötk
("ö %†audiÿdecodî drivî o≥¿Áûed!\n",
__FUNCTION__
);

211  
ªt
;

213 
f
->
¥iv©e_d©a
 = 
tde
;

215  
ªt
;

216 
	}
}

220 
ssize_t
 
	$audio_de_ªad
(
fûe
 *
f
,
__u£r
 *
buff
,
size_t
 
cou¡
, 
loff_t
 * 
lof
)

223 
	}
}

226 
	$w©ch_time°amp
(
time
)

228 
œ°
 = 0, 
˙t
 = 0,
dñè
 = 0;

230 
˙t
 = 
time
;

231 
dñè
 = (0x10000 + 
˙t
 - 
œ°
)&0xffff;

232 if(
dñè
 > 100 && 
œ°
 != 0){

233 
	`dbg
("%†l⁄gÅimêha†nÿ√w føme!\n",
__FUNCTION__
);

235 
œ°
 = 
˙t
;

236 
	}
}

239 
ssize_t
 
	$¥o˚ss_logic_‰ame
(
tw_audio_∑ckë_queue_t
 *
adpq
, 
tw_audio_ch™_buf_poﬁ_t
 *
adpoﬁ
, 
uÀn
, 
éí
,

240 c⁄° 
__u£r
 *
buff
, 
size_t
 * 
off£t
, 
loff_t
 *
lof
,
time_°ï
 )

242 
ªt
 = 0,
ªmaö
 = 
éí
;

243 
size_t
 
œ°_ªmaö
;

244 
tw_audio_∑ckë_£˘i⁄_t
 *
as
;

245 
iof
 = ()(*
off£t
 - 
TW_TOTAL_AUDIO_FRAMEHEADER_LEN
);

246 
tw_‰ame_hódî_t
 *
ph
 = (tw_‰ame_hódî_à*)&
buff
[
iof
];

247 
tw_audio_‰ame_∑d_t
 *
∑d
 = (tw_audio_‰ame_∑d_à*)
ph
->pad;

249 
icou¡
 =0;

252 
ªmaö
 > 0){

253 
icou¡
++;

254 if((
as
 = 
adpq
->
cuº_¥odu˚r
)){

255 if–
∑d
->
ßm∂e_øã
 !
as
->ßm∂e_øã ||Öad->
bô_wide
 !as->bô_widê||Öad->
ty≥
 !=ás->type){

256 
as
->
∑ylﬂd_Àn
 = (
ªmaö
 > 
uÀn
)? ulen:remain;

257 if(
as
->
∑ylﬂd_Àn
 < 
uÀn
Ë
	`¥ötk
("oneÜogic frame isÅoo small!\n");

258 
as
->
ßm∂e_øã
 = 
∑d
->sample_rate;

259 
as
->
ty≥
 = 
∑d
->type;

260 
as
->
bô_wide
 = 
∑d
->bit_wide;

261 
as
->
time°amp
 = 
ph
->
timeSèmp
;

262 
	`w©ch_time°amp
(
ph
->
timeSèmp
);

263 
	`c›y_‰om_u£r
(
as
->
d©a
,&
buff
[*
off£t
],as->
∑ylﬂd_Àn
);

264 if(
as
->
∑ylﬂd_Àn
 < 
uÀn
)

265 
dól_èû
;

266 
adpq
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(adpq);

267 *
off£t
 +
as
->
∑ylﬂd_Àn
;

268 
ªmaö
 -
as
->
∑ylﬂd_Àn
;

272 
	`c›y_‰om_u£r
(&
as
->
d©a
[
œ°_ªmaö
],&
buff
[*
off£t
],
uÀn
 -last_remain);

273 
as
->
∑ylﬂd_Àn
 = 
uÀn
;

274 
adpq
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(adpq);

275 *
off£t
 +
uÀn
 -
œ°_ªmaö
;

276 
ªmaö
 -
uÀn
 -
œ°_ªmaö
;

281 
adpq
->
›
->
	`gë_cuº_¥odu˚r_‰om_poﬁ
◊dpq,
adpoﬁ
);

282 
as
 = 
adpq
->
cuº_¥odu˚r
;

283 if(
as
){

284 
as
->
∑ylﬂd_Àn
 = (
ªmaö
 > 
uÀn
)? ulen:remain;

285 
as
->
ßm∂e_øã
 = 
∑d
->sample_rate;

286 
as
->
ty≥
 = 
∑d
->type;

287 
as
->
bô_wide
 = 
∑d
->bit_wide;

288 
as
->
time°amp
 = 
ph
->
timeSèmp
;

289 
	`w©ch_time°amp
(
ph
->
timeSèmp
);

290 
	`c›y_‰om_u£r
(
as
->
d©a
,&
buff
[*
off£t
],as->
∑ylﬂd_Àn
);

291 if(
as
->
∑ylﬂd_Àn
 < 
uÀn
){

292 
dól_èû
;

294 
adpq
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(adpq);

295 *
off£t
 +
as
->
∑ylﬂd_Àn
;

296 
ªmaö
 -
as
->
∑ylﬂd_Àn
;

300 
	`dbg
("canÇot get section!!!!!!!!!!!!!!!!!!!!!!!!\n");

301 
ªt
 = -
ENOMEM
;

302 
Áûed
;

306 
dól_èû
:

307 if(
ªmaö
)

308 
œ°_ªmaö
 = 
as
->
∑ylﬂd_Àn
;

310 
œ°_ªmaö
 = 0;

313 *
lof
 +*
off£t
;

314 
ªt
 = 
éí
-
ªmaö
;

315  
ªt
;

316 
Áûed
:

317  
ªt
;

318 
	}
}

322 
ssize_t
 
	$audio_de_wrôe
 (
fûe
 *
f
, c⁄° 
__u£r
 *
buff
, 
size_t
 
cou¡
, 
loff_t
 *
lof
)

324 
ªt
 = 0;

325 
tŸÆ_∑yÀn
;

326 
tw_audio_de
 *
tde
 = (tw_audio_dê*)
f
->
¥iv©e_d©a
;

327 
tw_audio_ch™_drivî
 *
driv
 = 
	`c⁄èöî_of
(
tde
->
tsd
.
≥d
,tw_audio_ch™_drivî, 
audio_ed
);

328 
tw_audio_∑ckë_queue_t
 *
adpq
 = &
driv
->
audio_∑ckë_queue
;

329 
tw_audio_ch™_buf_poﬁ_t
 *
adpoﬁ
 = &
driv
->
audio_buf_poﬁ
;

330 
tw_‰ame_hódî_t
 *
ph
 = (tw_‰ame_hódî_à*)
buff
;

332 
tw_audio_‰ame_∑d_t
 *
∑d
 = (tw_audio_‰ame_∑d_à*)
ph
->pad;

334 
size_t
 
off£t
 = 0;

335 
g≠
 = 0,
∑d_ƒ
 = 0;

336 
unô_∑yÀn
 = 384;

337 
time_dñè
 = 20;

339 
	`down
(&
tde
->
£m
);

343 
off£t
 +
TW_TOTAL_AUDIO_FRAMEHEADER_LEN
;

344 #ifde‡
TW_CONFIG_ADD_NAL


345 
tŸÆ_∑yÀn
 = 
∑d
->
‰ame_size
 - (
ext_h264_«l_bô°ªam_t
);

347 
tŸÆ_∑yÀn
 = 
∑d
->
‰ame_size
;

350 
ªt
 = 
	`¥o˚ss_logic_‰ame
(
adpq
,
adpoﬁ
,
unô_∑yÀn
,
tŸÆ_∑yÀn
,
buff
,&
off£t
,
lof
,
time_dñè
);

351 if(
ªt
 < 0){

352 
	`up
(&
tde
->
£m
);

353  
ªt
;

355 
g≠
 = 
tŸÆ_∑yÀn
-
ªt
;

356 if(
off£t
 >
cou¡
-3)

358 
∑d_ƒ
 = (
off£t
 + 
g≠
) & 0x3;

359 if(
g≠
 < 
unô_∑yÀn
){

360 if(
off£t
 + 
g≠
 + 
∑d_ƒ
 + 
TW_TOTAL_AUDIO_FRAMEHEADER_LEN
 >
cou¡
)

361 
out
;

362 
ph
 = (
tw_‰ame_hódî_t
 *)&
buff
[
off£t
 + 
g≠
 + 
∑d_ƒ
];

363 
off£t
 +
g≠
;

364 
off£t
 +
∑d_ƒ
;

368 
	`¥ötk
("data wrong format!!!!!!!!!!!!!!!!\n");

369 
	`up
(&
tde
->
£m
);

370  -
EINVAL
;

372 
∑d
 = (
tw_audio_‰ame_∑d_t
 *)
ph
->pad;

374 
out
:

375 
	`up
(&
tde
->
£m
);

377  (
ssize_t
)
off£t
;

378 
	}
}

392 
	$audio_de_io˘l
 (
fûe
 *
f
, 
cmd
, 
¨g
)

394 
ªt
 = 0;

395 
tw_audio_de
 *
tde
 = (tw_audio_dê*)
f
->
¥iv©e_d©a
;

396 
ídpoöt_tcb
 *
ed
;

398 
cmd
)

402 
	`dbg
("Ÿhî cmd i¿%s\n",
__FUNCTION__
);

403 if(!
tde
->
tsd
.
≥d
){

404 
	`¥ötk
("the device hasÇo driverÉd!\n");

405 
ªt
 = 
EFAULT
;

408 
ed
 = 
tde
->
tsd
.
≥d
;

409 
ªt
 = 
ed
->
›
->
	`io˘l
”d,
cmd
,
¨g
);

413  
ªt
;

414 
	}
}

418 
	$audio_de_ªÀa£
(
fûe
 *
f
)

420 
ªt
;

421 
ed_tcb_t
 *
aded
;

422 
tw_audio_de
 *
tde
 = (tw_audio_dê*)
f
->
¥iv©e_d©a
;

425 
tc_åa˚
;

426 
	`down
(&
tde
->
£m
);

427 
aded
 = 
tde
->
tsd
.
≥d
;

428 
ªt
 = 
aded
->
›
->
	`˛o£
(aded);

429 
	`DñëeF‹FúeTimîJob
(
tde
->
timî_id
);

430 
	`tc_queue_ª£t
(
tde
->
tsd
.
queue
);

432 
	`up
(&
tde
->
£m
);

433 
f
->
¥iv©e_d©a
 = 
NULL
;

434  
ªt
;

435 
	}
}

439 
	$audio_de_pﬁl
(
fûe
 *fûe, 
pﬁl_èbÀ_°ru˘
 *
waô
)

441 
mask
 = 0;

442 
tw_audio_de
 *
tde
 = (tw_audio_dê*)
fûe
->
¥iv©e_d©a
;

443 
tw_audio_ch™_drivî
 *
driv
 = 
	`c⁄èöî_of
(
tde
->
tsd
.
≥d
,tw_audio_ch™_drivî, 
audio_ed
);

444 
tw_audio_∑ckë_queue_t
 *
adpq
 = &
driv
->
audio_∑ckë_queue
;

446 
	`down
(&
tde
->
£m
);

447 
	`pﬁl_waô
(
fûe
,&
tde
->
waô_pﬁl
,
waô
);

448 if(
adpq
->
›
->
	`gë_cuº_queue_íåy_numbî
(adpq))

450 
mask
 |
POLLIN
 | 
POLLRDNORM
;

456 
	`up
(&
tde
->
£m
);

457  
mask
;

458 
	}
}

462 
	$audio_de_öô
(
tw_chù_devi˚
 *
tcd
,
cmd_¨g
 *
¨g
,
tw_£rvi˚_devi˚
 **
tsd
)

465 
tw_audio_de
 *
tde
;

467 
tde
 = 
	`kzÆloc
((*tde),
GFP_KERNEL
);

468 if(
NULL
 =
tde
)

469  -
ENOMEM
;

470 *
tsd
 = &
tde
->tsd;

472 
tde
->
tsd
.
˛ón_up
 = 
tde_˛ónup
;

473 
tde
->
tsd
.
queue
 = 
	`kzÆloc
((
tc_queue
),
GFP_KERNEL
);

474 if(!
tde
->
tsd
.
queue
)

475  -
ENOMEM
;

476 
	`tc_queue_öô
(
tde
->
tsd
.
queue
,&
de_queue_›s
,
NULL
,512,10,tde);

477 
tde
->
«me
 = "tw5864-audio_decoder";

478 
tde
->
u£rs
 = 1;

480 
	`tc_£t_audio_∑øm
(&
tde
->
∑ø
,&
def_audio_∑rm_de
);

481 
	`öô_MUTEX
(&
tde
->
£m
);

482 
	`öô_waôqueue_hód
(&
tde
->
waô_pﬁl
);

484 
	}
}

486 
	$audio_de_de°‹y
(
tw_£rvi˚_devi˚
 *
tsd
)

488 
tw_audio_de
 *
tde
;

490 if(!
tsd
)

493 
tde
 = 
	`c⁄èöî_of
(
tsd
,
tw_audio_de
,tsd);

494 if(
tde
->
tsd
.
queue
)

495 
	`k‰ì
(
tde
->
tsd
.
queue
);

496 
	`k‰ì
(
tde
);

497 
	}
}

500 
tsd_fûe_›î©i⁄s
 
	gaudio_de_f›s
 = {

501 .
ow√r
 = 
THIS_MODULE
,

502 .
	göô
 = 
audio_de_öô
,

503 .
	gde°‹y

audio_de_de°‹y
,

504 .
	g›í
 = 
audio_de_›í
,

505 .
	gªad
 = 
audio_de_ªad
,

506 .
	gwrôe
 = 
audio_de_wrôe
,

507 .
	gio˘l
 = 
audio_de_io˘l
,

508 .
	gªÀa£

audio_de_ªÀa£
,

509 .
	gpﬁl
 = 
audio_de_pﬁl
,

512 
tw_dev_id
 
	gtw_audio_de_id
 = {

513 .
ïobj
 = {

514 .
víd‹_id
 = 
TWELL
,

515 .
	gbus_id
 = 1,

516 .
	gchù_id
 = 
TW5864
,

517 .
	gfunc_id
 = (
STREAM_TYPE_AUDIO
 << 16Ë| 
CODEC_AUDIO_ADPCM
,

518 .
	gty≥
 = 
TW_DECODER
,

519 .
	gkey
 = {0},

521 .
	gvîsi⁄
 = 0,

524 
tw_dev_èbÀ_id
 *
	gtde_èbÀ
 = 
NULL
;

526 
	$tw_audio_de_öô
(* 
d©a
)

529 
tde_èbÀ
 = 
	`kzÆloc
((
tw_dev_èbÀ_id
),
GFP_KERNEL
);

530 if(!
tde_èbÀ
){

531 
	`dbg
("nÿmem i¿%s\n",
__FUNCTION__
);

532  -
ENOMEM
;

534 
	`INIT_LIST_HEAD
(&
tde_èbÀ
->
li°
);

535 
tde_èbÀ
->
tid
 = &
tw_audio_de_id
;

536 
tde_èbÀ
->
›s
 = &
audio_de_f›s
;

537 
tde_èbÀ
->
∑ø
 = 
d©a
;

538 
	`ªgi°î_tc_devi˚
(
tde_èbÀ
);

539 
	`¥ötk
("decodî <0x%8p>\n",
d©a
);

541 
	}
}

543 
	$tw_audio_de_ªmove
()

545 if(
tde_èbÀ
)

546 
	`uƒegi°î_tc_devi˚
(
tde_èbÀ
);

547 
tde_èbÀ
 = 
NULL
;

548 
	}
}

	@../../tw5864/device_layer/tc_audio_en.c

1 
	~<tw5864/tc_comm⁄.h
>

3 
tw_chù_audio_∑øm_my
 
	gdef_audio_∑rm_í
 = {

4 .
i_bô_wide
 = 
TW_AUDIO_16BIT
,

5 .
	gi_ßm∂e_øã
 = 
TW_AUDIO_8K
,

6 .
	ge_audio_ty≥
 = 
TW_AUDIO_ADPCM_32K
,

10 
	$if_exi°
(*
ba£
, 
Àn
, 
key
)

12 *
p
 = 
ba£
;

14 
p
 !
ba£
+
Àn
){

15 if(
key
 =*
p
++)

19 
	}
}

23 
	$´_buf_¥ï¨e
(
tc_queue
 * 
tq
, *
¥iv
, 
tc_buf„r
 
__u£r
 *
tc
)

25 
tc_buf„r_kîn
 *
tck
,*
tmp
;

26 
tw_audio_í
 * 
èe
 = (tw_audio_í *)
¥iv
;

27 
tw_audio_∑ckë_queue_t
 *
adpq
;

28 
tw_audio_∑ckë_£˘i⁄_t
 *
as
;

29 
tw_audio_ch™_buf_poﬁ_t
 *
adpoﬁ
;

30 
ƒ_ªady
,
ƒ_hódî
,
buf„r_√ed
 = 
PAGE_SIZE
,
us
 = 
tc
->
__tc__size
;

31 
tc_hódî_buf
 *
thb
;

32 
idx
,
œ
 = 0;

33 
off£t
 = 0,
ns
 = 0;

34 
tw_audio_ch™_drivî
 *
driv
 = 
	`c⁄èöî_of
(
èe
->
tsd
.
≥d
,tw_audio_ch™_drivî, 
audio_ed
);

36 
adpq
 = &
driv
->
audio_∑ckë_queue
;

37 
adpoﬁ
 = &
driv
->
audio_buf_poﬁ
;

40 
tmp
 = 
tq
->
bufs
[0];

41 if((
STATE_READY
 =
	`gë_tck_°©e
(
tmp
)Ë&& (0 !tmp->
œ°_¥ï¨e
)){

43 
tc
->
__tc__ƒ_‰ame
 = 1;

44 if(
tmp
->
œ°_¥ï¨e
 > 
us
){

45 
tc
->
__tc__size
 = 
tmp
->
œ°_¥ï¨e
;

46  -
ENOMEM
;

48 
tc
->
__tc__size
 = 
tmp
->
œ°_¥ï¨e
;

49 
tmp
->
œ°_¥ï¨e
 = 0;

53 
ªåy
:

54 
ƒ_ªady
 = 
adpq
->
›
->
	`gë_cuº_queue_íåy_numbî
(adpq);

56 
thb_poﬁ
->
›
->
	`åy_gë_hódî_buf
—hb_poﬁ,&
thb
);

57 if(!
thb
){

58 
	`dbg
("gë hódî_buf„∏nŸhög i¿%s!\n",
__FUNCTION__
);

59  -
EAGAIN
;

61 
ƒ_hódî
 = 
	`round_low
(
thb
->
unô_size
,
MIN_HEADER_LEN_AUDIO
);

62 
ƒ_ªady
 = 
	`tc_mö
“r_ªady,
ƒ_hódî
);

63 
ƒ_ªady
 = 
	`tc_mö
“r_ªady,
tq
->
buf_ƒ
);

64 
tc
->
__tc__ƒ_‰ame
 = 0;

65 
idx
 = 0; idx < 
ƒ_ªady
; idx++){

66 
as
 = 
NULL
;

67 if(!
adpq
->
cuº_c⁄sumî
){

68 
adpq
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(adpq);

69 if(!
adpq
->
cuº_c⁄sumî
){

70 
	`dbg
("gëáudiÿ∑ckëÇŸhög! i¿%s!\n",
__FUNCTION__
);

71 
tc
->
__tc__size
 = 
buf„r_√ed
;

72 if(
PAGE_SIZE
 ==
tc
->
__tc__size
)

74 
thb_poﬁ
->
›
->
	`put_hódî_buf
—hb_poﬁ,
thb
);

75  -
EAGAIN
;

83 if(
èe
->
disˇrd
){

84 
adpq
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊dpq,
adpoﬁ
);

85 
thb_poﬁ
->
›
->
	`put_hódî_buf
—hb_poﬁ,
thb
);

86 
èe
->
disˇrd
 = 0;

87 
ªåy
;

89 
adpq
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
◊dpq->cuº_c⁄sumî,&
as
);

90 
adpq
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊dpq,
adpoﬁ
);

91 
tck
 = 
tq
->
bufs
[
idx
];

92 
tck
->
ödex
 = 
idx
;

93 
tck
->
ty≥
 = 
MEM_MMAP
;

94 
tck
->
thb
 =Åhb;

95 
tck
->
hﬁdî
 = 
as
;

96 
tck
->
ißlign
 = ((()
as
->
d©a
) & 0xFFF)? 0: 1;

97 
tck
->
off_to_∑ge
 = (()
as
->
d©a
) & 0xFFF;

98 
tck
->
°¨t
 = (
__u32
 *)
as
->
d©a
;

99 
tck
->
size
 = 
as
->
∑ylﬂd_Àn
;

101 
œ
 = 
tck
->
off_to_∑ge
 -Üa;

102 if(
œ
 < 0)

103 
ns
 = 
	`tc_Æign_up
(
tck
->
size
,
PAGE_SIZE
);

105 
ns
 = 
	`tc_Æign_up
(
tck
->
size
,
as
->
£˘i⁄_size
);

107 if(
buf„r_√ed
 + 
ns
 > 
us
){

108 if(0 =
idx
){

109 
tc
->
__tc__size
 = 
buf„r_√ed
 + 
ns
;

110 
tc
->
__tc__ƒ_‰ame
 = 1;

111 
	`£t_tck_°©e
(
tck
,
STATE_READY
);

112 
	`tc_buf„r_£t_audio_d©a
((
tc_buf„r
 *)(
thb
->
d©a
),
tck
,
as
,&
off£t
);

113 
tmp
->
œ°_¥ï¨e
 = 
tc
->
__tc__size
;

115  -
ENOMEM
;

119 
as
->
›
->
	`ª„ªn˚
◊s,&
adpq
->
cuº_c⁄sumî
);

120 
as
->
›
->
	`ªÀa£
(&as,
adpoﬁ
);

121 
tck
->
hﬁdî
 = 
NULL
;

126 
œ
 = 
tck
->
off_to_∑ge
;

127 
buf„r_√ed
 +
ns
;

128 
tc
->
__tc__size
 = 
buf„r_√ed
;

129 
	`£t_tck_°©e
(
tck
,
STATE_READY
);

130 
	`tc_buf„r_£t_audio_d©a
((
tc_buf„r
 *)(
thb
->
d©a
),
tck
,
as
,&
off£t
);

131 
tc
->
__tc__ƒ_‰ame
++;

135 
	}
}

137 
	$´_buf_ªÀa£
(
tc_queue
 * 
tq
, * 
¥iv
, 
tc_buf„r_kîn
 *
tb
)

139 
ªt
 = 0,
ƒ
 = 0;

140 
tw_audio_í
 * 
èe
 = (tw_audio_í *)
¥iv
;

141 
tw_audio_∑ckë_£˘i⁄_t
 *
as
 = 
NULL
;

142 
tw_audio_ch™_drivî
 *
driv
 = 
	`c⁄èöî_of
(
èe
->
tsd
.
≥d
,tw_audio_ch™_drivî, 
audio_ed
);

143 
tw_audio_ch™_buf_poﬁ_t
 *
adpoﬁ
 = &
driv
->
audio_buf_poﬁ
;

144 
tc_buf„r_kîn
 *
tck
 = 
tb
;

147 if(!
adpoﬁ
){

148 
	`dbg
("chan_buf_pool is NULL!\n");

149  -
EINVAL
;

152 if(!
tck
->
thb
 || !tck->
hﬁdî
){

153 
	`dbg
("övÆidÖ¨amëî†öÅck! -->%s\n",
__FUNCTION__
);

154  -
EINVAL
;

156 
thb_poﬁ
->
›
->
	`put_hódî_buf
—hb_poﬁ,
tck
->
thb
);

158 (
tck
 = 
tq
->
bufs
[
ƒ
]Ë&& (
STATE_BUSY
 =
	`gë_tck_°©e
(tck))){

159 
as
 = (
tw_audio_∑ckë_£˘i⁄_t
 *)
tck
->
hﬁdî
;

160 
as
->
›
->
	`ªÀa£
(&as,
adpoﬁ
);

161 
	`£t_tck_°©e
(
tck
,
STATE_FREE
);

162 
ƒ
++;

163 if(
ƒ
 >
tq
->
buf_ƒ
)

167  
ªt
;

168 
	}
}

173 
tc_queue_›s
 
	g´_queue_›s
 =

175 .
buf_¥ï¨e
 = 
´_buf_¥ï¨e
,

176 .
	gbuf_ªÀa£
 = 
´_buf_ªÀa£
,

179 
	$ªque°_mem‹y
(
fûe
 *
f
,
¨g
)

181 
ªt
 = 0;

182 
tc_buf„r
 *
tc
 = (tc_buf„∏*)
¨g
;

183 
tw_audio_í
 * 
èe
 = (tw_audio_í *)
f
->
¥iv©e_d©a
;

184 
tc_queue
 *
q
 = 
èe
->
tsd
.
queue
;

187 
	`down
(&
èe
->
£m
);

188 #ifde‡
STATIC_COUNTING


202 if(!
q
->
›s
){

203 
	`dbg
("tq hasÇo ops!\n");

204 
ªt
 = -
EINVAL
;

205 
out
;

207 if(!
q
->
›s
->
buf_¥ï¨e
){

208 
	`dbg
("tq->ops hasÇo buf_prepare!\n");

209 
ªt
 = -
EINVAL
;

210 
out
;

212 
ªt
 = 
q
->
›s
->
	`buf_¥ï¨e
(q,
èe
,
tc
);

213 
out
:

214 
	`up
(&
èe
->
£m
);

215  
ªt
;

216 
	}
}

248 
	$ªÀa£_mem‹y
(
fûe
 *
f
,
¨g
)

250 
ªt
 = 0;

251 
tw_audio_í
 * 
èe
 = (tw_audio_í *)
f
->
¥iv©e_d©a
;

252 
tc_queue
 *
tq
 = 
èe
->
tsd
.
queue
;

253 
tc_buf„r_kîn
 * 
tck
;

255 
	`down
(&
èe
->
£m
);

256 #ifde‡
STATIC_COUNTING


260 
tck
 = 
tq
->
bufs
[0];

261 if(!
tq
->
›s
 || !tq->›s->
buf_ªÀa£
){

262 
	`dbg
("no ops orÇo buf_release!\n");

263 
ªt
 = -
EINVAL
;

264 
out
;

266 
ªt
 = 
tq
->
›s
->
	`buf_ªÀa£
—q,
èe
,
tck
);

267 
out
:

268 
	`up
(&
èe
->
£m
);

270 
	}
}

278 
	$èe_˛ónup
(* 
¨g
)

280 
tw_audio_í
 *
èe
 = (tw_audio_í *)
¨g
;

282 
tc_åa˚
;

283 
	`tc_queue_ªÀa£
(
èe
->
tsd
.
queue
);

284 
	`k‰ì
(
èe
);

285 
	}
}

288 
tw_audio_drivî_t
 * 
	$lookup_drive_ö°™˚
(
tw_£rvi˚_devi˚
 *
tsd
)

290 
tw_audio_drivî_t
 *
p
 = 
tsd
->
¥iv©e_d©a
;

291 
ld
 = 
	`gë_phch™_id_‰om_ïobj
(&
tsd
->
ïobj
);

292 
	`¥ötk
("tsd->mö‹ = %d,Üd = %luÉncodîádd = %8p\n",
tsd
->
mö‹
,
ld
,&
p
[ld]);

294  &
p
[
ld
];

296 
	}
}

299 
	$audi_í_pﬁlög
(*
p
)

301 
tw_audio_í
 *
èe
 = (tw_audio_í *)
p
;

302 
tw_audio_∑ckë_queue_t
 *
adpq
;

303 
ƒ
;

304 
tw_audio_ch™_drivî
 *
driv
 = 
	`c⁄èöî_of
(
èe
->
tsd
.
≥d
,tw_audio_ch™_drivî, 
audio_ed
);

307 
adpq
 = &
driv
->
audio_∑ckë_queue
;

308 
ƒ
 = 
adpq
->
›
->
	`gë_cuº_queue_íåy_numbî
(adpq);

309 if(
ƒ
)

311 
	`wake_up
(&
èe
->
waô_pﬁl
);

319 
	}
}

324 
	$audio_í_›í
(
tw_£rvi˚_devi˚
 *
tsd
,
fûe
 *
f
)

326 
ªt
 = 0;

327 
ed_tcb_t
 *
´d
;

328 
tw_audio_í
 *
èe
 = 
	`c⁄èöî_of
(
tsd
,tw_audio_en,tsd);

330 
tc_åa˚
;

332 if(!
èe
->
tsd
.
≥d
){

333 
	`dbg
("audio dev hasÇo driveráttached!\n");

334 
ªt
 = -1;

335  
ªt
;

339 
èe
->
timî_id
 = 
	`AddF‹FúeTimîJob
(12,
audi_í_pﬁlög
,tae);

340 if(
èe
->
timî_id
 =
ADDJOBERROR
){

341 
	`¥ötk
("ö %†addÅimî job faûed!\n",
__FUNCTION__
);

342 
ªt
 = -1;

343  
ªt
;

345 
´d
 = 
èe
->
tsd
.
≥d
;

346 
ªt
 = 
´d
->
›
->
	`›í
(aed);

347 if(
ªt
 !
TW_OK
){

348 
	`¥ötk
("ö %†audio_drivî o≥¿Áûed!\n",
__FUNCTION__
);

349 
ªt
 = -1;

350  
ªt
;

352 
f
->
¥iv©e_d©a
 = 
èe
;

353  
ªt
;

354 
	}
}

358 
ssize_t
 
	$audio_í_ªad
(
fûe
 *
f
,
__u£r
 *
buff
,
size_t
 
cou¡
, 
loff_t
 * 
lof
)

360 
off£t
 = 0;

361 
tw_audio_í
 *
èe
 = (tw_audio_í *)
f
->
¥iv©e_d©a
;

362 
tw_audio_ch™_drivî
 *
driv
 = 
	`c⁄èöî_of
(
èe
->
tsd
.
≥d
,tw_audio_ch™_drivî, 
audio_ed
);

363 
∑yÀn
 = 
	`gë_∑ylﬂd_Àn
(&
èe
->
∑ø
);

364 
queue_íåy
 = 0;

365 
size_t
 
˙
 = 
cou¡
,
mö
 = 
∑yÀn
 + (
tw_‰ame_hódî_t
Ë+ (
tw_audio_‰ame_∑d_t
);

366 
__u£r
 *
p
 = 
buff
;

367 
tw_audio_∑ckë_queue_t
 *
adpq
 = &
driv
->
audio_∑ckë_queue
;

368 
tw_audio_ch™_buf_poﬁ_t
 *
adpoﬁ
 = &
driv
->
audio_buf_poﬁ
;

369 
tw_‰ame_hódî_t
 *
‰ame_hód
 = 
NULL
;

370 
tw_audio_∑ckë_£˘i⁄_t
 *
as
 = 
NULL
;

371 
loff_t
 
‰ame_off£t
;

372 
tw_audio_∑ckë_£˘i⁄_t
 *
™Ÿhî
 = 
NULL
;

374 
	`down
(&
èe
->
£m
);

375 
	`dbg
("˙ = %d,mö = %d\n", 
˙
,
mö
);

376 
˙
 >
mö
){

377 
	`dbg
("ícodîádd = <%8p>, queue_íåyÇumbî = %lu\n",
driv
,
queue_íåy
);

378 
queue_íåy
 = 
adpq
->
›
->
	`gë_cuº_queue_íåy_numbî
(adpq);

379 
adpq
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(adpq);

380 
as
 = 
adpq
->
cuº_c⁄sumî
;

381 if(!
as
){

383 
	`¥ötk
("no consumer!\n");

384 
out
;

388 
as
->
›
->
	`ª„ªn˚
◊s,&
™Ÿhî
);

389 
adpq
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊dpq,
adpoﬁ
);

390 if(
™Ÿhî
){

392 
	`¥ötk
("off£à%d\n",
off£t
);

393 
‰ame_off£t
 = 0;

394 
™Ÿhî
->
›
->
	`submô
◊nŸhî,&
buff
[
off£t
],
˙
,&
‰ame_off£t
,
TW_MASTER_BITSTREAM
,
adpoﬁ
);

395 
™Ÿhî
->
›
->
	`ªÀa£
(&™Ÿhî,
adpoﬁ
);

397 
‰ame_hód
 = (
tw_‰ame_hódî_t
 *)&
buff
[
off£t
];

398 
off£t
 +
‰ame_off£t
;

399 
p
 = (*)&
buff
[
off£t
];

400 ()
p
 & 0x3){

401 
	`¥ötk
("doingÖadding!\n");

402 
	`__put_u£r
(0, 
p
++);

403 
‰ame_hód
->
∑ylﬂdLí
++;

404 
‰ame_off£t
 += 1;

405 
off£t
++;

408 if(
˙
 >
‰ame_off£t
)

409 
˙
 = c¿-
‰ame_off£t
;

411 
out
;

415 
out
:

416 
	`up
(&
èe
->
£m
);

417 *
lof
 = 
off£t
;

418 
	`dbg
("ªad %d byãs\n",
off£t
);

419  (
ssize_t
)
off£t
;

420 
	}
}

424 
ssize_t
 
	$audio_í_wrôe
 (
fûe
 *
f
, c⁄° 
__u£r
 *
buff
, 
size_t
 
cou¡
, 
loff_t
 *
lof
)

427 
ªt
 = 0,
idx
 = 0,
ªmaö
 = 
cou¡
;

428 
ƒ
 = 0,
√t_∑yÀn
;

429 
tw_audio_í
 *
èe
 = (tw_audio_í *)
f
->
¥iv©e_d©a
;

430 
tw_audio_ch™_drivî
 *
driv
 = 
	`c⁄èöî_of
(
èe
->
tsd
.
≥d
,tw_audio_ch™_drivî, 
audio_ed
);

431 
tw_audio_∑ckë_queue_t
 *
adpq
;

432 
tw_audio_ch™_buf_poﬁ_t
 *
adpoﬁ
;

433 
tw_audio_∑ckë_£˘i⁄_t
 *
as
;

435 
adpq
 = &
driv
->
audio_∑ckë_queue
;

436 
adpoﬁ
 = &
driv
->
audio_buf_poﬁ
;

437 
	`down
(&
èe
->
£m
);

439 
√t_∑yÀn
 = 
	`gë_∑ylﬂd_Àn
(&
èe
->
∑ø
);

441 
ƒ
 = 
	`round_up
(
cou¡
,
√t_∑yÀn
);

443 ; 
idx
 < 
ƒ
; idx++,
ªmaö
 = 
cou¡
 -(idx >> 9)){

444 
adpq
->
›
->
	`gë_cuº_¥odu˚r_‰om_poﬁ
◊dpq,
adpoﬁ
);

445 
as
 = 
adpq
->
cuº_¥odu˚r
;

446 if(
as
){

447 
as
->
∑ylﬂd_Àn
 = (
ªmaö
 > 512)? 512:remain;

449 if(
	`c›y_‰om_u£r
(
as
->
d©a
, 
buff
,
cou¡
)){

450 
	`dbg
("copy from user failed!\n");

451 
ªt
 = -
EFAULT
;

452 
Áûed_out
;

455 
adpq
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(adpq);

458 
	`dbg
("canÇot get section!\n");

459 
out
;

462 
out
:

463 
ªt
 = 
cou¡
-
ªmaö
;

464 
Áûed_out
:

465 
	`up
(&
èe
->
£m
);

466  
ªt
;

468 
	}
}

470 
	$audio_í_io˘l
 (
fûe
 *
f
, 
cmd
, 
¨g
)

472 
ªt
 = 0;

473 
tw_audio_í
 *
èe
 = (tw_audio_í *)
f
->
¥iv©e_d©a
;

474 
ídpoöt_tcb
 *
ed
;

475 
tc_queue
 *
tq
 = 
èe
->
tsd
.
queue
;

476 
tc_buf„r_kîn
 * 
tck
;

478 
cmd
)

481 
TW_CODEC_CHAN_REQUEST_MEM
:

482 
ªt
 = 
	`ªque°_mem‹y
(
f
,
¨g
);

484 
TW_CODEC_CHAN_RELEASE_MEM
:

485 
ªt
 = 
	`ªÀa£_mem‹y
(
f
,
¨g
);

487 
TW_CODEC_CHAN_DISCAED_FRAME
:

488 
èe
->
disˇrd
 = 1;

489 
	`£t_tq_°©e_busy
(
tq
);

490 
tck
 = 
tq
->
bufs
[0];

491 
ªt
 = 
tq
->
›s
->
	`buf_ªÀa£
—q,
èe
,
tck
);

492 if(
ªt
)

493 
	`¥ötk
("disˇrd fømê---ªÀa£ faûed! i¿%s\n",
__FUNCTION__
);

496 
	`dbg
("Ÿhî cmd i¿%s\n",
__FUNCTION__
);

497 if(!
èe
->
tsd
.
≥d
){

498 
	`¥ötk
("the device hasÇo driverÉd!\n");

499 
ªt
 = 
EFAULT
;

502 
ed
 = 
èe
->
tsd
.
≥d
;

503 
ªt
 = 
ed
->
›
->
	`io˘l
”d,
cmd
,
¨g
);

507  
ªt
;

508 
	}
}

512 
	$audio_í_ªÀa£
(
fûe
 *
f
)

514 
ªt
;

515 
ed_tcb_t
 *
´d
;

516 
tw_audio_í
 *
èe
 = (tw_audio_í *)
f
->
¥iv©e_d©a
;

517 
tw_audio_ch™_drivî
 *
driv
 = 
	`c⁄èöî_of
(
èe
->
tsd
.
≥d
,tw_audio_ch™_drivî, 
audio_ed
);

519 
tc_åa˚
;

520 
	`down
(&
èe
->
£m
);

521 
´d
 = &
driv
->
audio_ed
;

522 
ªt
 = 
´d
->
›
->
	`˛o£
(aed);

523 
	`DñëeF‹FúeTimîJob
(
èe
->
timî_id
);

524 
	`tc_queue_ª£t
(
èe
->
tsd
.
queue
);

525 
	`up
(&
èe
->
£m
);

527 
f
->
¥iv©e_d©a
 = 
NULL
;

528  
ªt
;

529 
	}
}

533 
	$audio_í_pﬁl
(
fûe
 *fûe, 
pﬁl_èbÀ_°ru˘
 *
waô
)

535 
mask
 = 0;

536 
tw_audio_í
 *
èe
 = (tw_audio_í *)
fûe
->
¥iv©e_d©a
;

537 
tw_audio_ch™_drivî
 *
driv
 = 
	`c⁄èöî_of
(
èe
->
tsd
.
≥d
,tw_audio_ch™_drivî, 
audio_ed
);

538 
tw_audio_∑ckë_queue_t
 *
adpq
 = &
driv
->
audio_∑ckë_queue
;

540 
	`down
(&
èe
->
£m
);

541 
	`pﬁl_waô
(
fûe
,&
èe
->
waô_pﬁl
,
waô
);

542 if(
adpq
->
›
->
	`gë_cuº_queue_íåy_numbî
(adpq))

544 
mask
 |
POLLIN
 | 
POLLRDNORM
;

551 
	`up
(&
èe
->
£m
);

552  
mask
;

553 
	}
}

558 
	$audio_í_öô
(
tw_chù_devi˚
 *
tcd
,
cmd_¨g
 *
¨g
,
tw_£rvi˚_devi˚
 **
tsd
)

560 
tw_audio_í
 *
èe
;

562 
tc_åa˚
;

563 
èe
 = 
	`kzÆloc
((*èe),
GFP_KERNEL
);

564 if(
NULL
 =
èe
)

565  -
ENOMEM
;

566 *
tsd
 = &
èe
->tsd;

568 
èe
->
tsd
.
˛ón_up
 = 
èe_˛ónup
;

569 
èe
->
tsd
.
queue
 = 
	`kzÆloc
((
tc_queue
),
GFP_KERNEL
);

570 if(
NULL
 =
èe
->
tsd
.
queue
)

571  -
ENOMEM
;

573 
	`tc_queue_öô
(
èe
->
tsd
.
queue
,&
´_queue_›s
,
NULL
,512,10,tae);

574 
èe
->
«me
 = "tw5864-audio_encoder";

575 
èe
->
u£rs
 = 1;

577 
	`tc_£t_audio_∑øm
(&
èe
->
∑ø
,&
def_audio_∑rm_í
);

578 
	`öô_MUTEX
(&
èe
->
£m
);

579 
	`öô_waôqueue_hód
(&
èe
->
waô_pﬁl
);

581 
	}
}

583 
	$audio_í_de°‹y
(
tw_£rvi˚_devi˚
 *
tsd
)

585 
tw_audio_í
 *
èe
;

586 
tc_åa˚
;

588 if(!
tsd
)

590 
èe
 = 
	`c⁄èöî_of
(
tsd
,
tw_audio_í
,tsd);

591 if(
èe
->
tsd
.
queue
)

592 
	`k‰ì
(
èe
->
tsd
.
queue
);

593 
	`k‰ì
(
èe
);

594 
	}
}

597 
tsd_fûe_›î©i⁄s
 
	gaudio_í_f›s
 = {

598 .
ow√r
 = 
THIS_MODULE
,

599 .
	göô
 = 
audio_í_öô
,

600 .
	gde°‹y

audio_í_de°‹y
,

601 .
	g›í
 = 
audio_í_›í
,

602 .
	gªad
 = 
audio_í_ªad
,

603 .
	gwrôe
 = 
audio_í_wrôe
,

604 .
	gio˘l
 = 
audio_í_io˘l
,

605 .
	gªÀa£

audio_í_ªÀa£
,

606 .
	gpﬁl
 = 
audio_í_pﬁl
,

609 
tw_dev_id
 
	gtw_audio_í_id
 = {

610 .
ïobj
 = {

611 .
víd‹_id
 = 
TWELL
,

612 .
	gbus_id
 = 1,

613 .
	gchù_id
 = 
TW5864
,

614 .
	gfunc_id
 = (
STREAM_TYPE_AUDIO
 << 16Ë| 
CODEC_AUDIO_ADPCM
,

615 .
	gty≥
 = 
TW_ENCODER
,

616 .
	gkey
 = {0},

618 .
	gvîsi⁄
 = 0,

621 
tw_dev_èbÀ_id
 *
	gèe_èbÀ
 = 
NULL
;

623 
	$tw_audio_í_öô
(* 
d©a
)

625 
èe_èbÀ
 = 
	`kzÆloc
((
tw_dev_èbÀ_id
),
GFP_KERNEL
);

626 if(!
èe_èbÀ
){

627 
	`dbg
("nÿmem i¿%s\n",
__FUNCTION__
);

628  -
ENOMEM
;

630 
	`INIT_LIST_HEAD
(&
èe_èbÀ
->
li°
);

631 
èe_èbÀ
->
tid
 = &
tw_audio_í_id
;

632 
èe_èbÀ
->
›s
 = &
audio_í_f›s
;

633 
èe_èbÀ
->
∑ø
 = 
d©a
;

635 
	`ªgi°î_tc_devi˚
(
èe_èbÀ
);

636 
	`¥ötk
("ícodî <0x%8p>\n",
d©a
);

638 
	}
}

640 
	$tw_audio_í_ªmove
()

642 if(
èe_èbÀ
)

643 
	`uƒegi°î_tc_devi˚
(
èe_èbÀ
);

644 
èe_èbÀ
 = 
NULL
;

645 
	}
}

	@../../tw5864/device_layer/tc_buffer.c

1 
	~<tw5864/tc_comm⁄.h
>

2 
	$£t_tq_°©e_busy
(
tc_queue
 *
tq
)

4 
tc_buf„r_kîn
 *
tck
;

5 
cix
 = 0;

7 (
tck
 = 
tq
->
bufs
[
cix
]Ë&& (
STATE_READY
 =
	`gë_tck_°©e
(tck))){

8 
	`£t_tck_°©e
(
tck
,
STATE_BUSY
);

9 
cix
++;

11 
	}
}

14 
	$ˇlc_d©a_•™
(
tc_buf„r_kîn
 *
tck
)

16 
s
 = 0,
ƒ
 = 
tck
->
ödex
,
idx
;

17 
tc_buf„r_kîn
 *
tk
;

18 
tc_queue
 *
tq
 = 
tck
->tq;

19 
o
;

21 
tk
 = 
tq
->
bufs
[0];

22 
o
 = 
tk
->
off_to_∑ge
;

23 if(
o
 >= 4096)

24 
	`dbg
("BUG:Åhe off_to_page isÅoo big!\n");

27 
idx
 = 0; idx < 
ƒ
;)

29 
tk
 = 
tq
->
bufs
[
idx
];

30 if(
tk
->
tq
->
unô_size
 >
PAGE_SIZE
)

32 
s
 +
	`tc_Æign_up
(
tk
->
size
, 
PAGE_SIZE
);

36 
s
 +
	`tc_Æign_up
(
tk
->
size
,tk->
tq
->
unô_size
);

38 
idx
++;

39 if(
idx
 >
tq
->
buf_ƒ
)

42 if(
tk
->
tq
->
unô_size
 < 
PAGE_SIZE
)

43 
s
 +
o
;

46  
s
;

47 
	}
}

51 
	$tc_buf„r_£t_audio_d©a
(
tc_buf„r
 *
tc
, 
tc_buf„r_kîn
 *
tck
,
tw_audio_∑ckë_£˘i⁄_t
 *
èps
, *
off
)

53 
tc_buf„r
 
°ck
 = {0};

54 
tc_‰ame_hódî
 
tfh
 = {0};

55 
tc_audio_‰ame_∑d
 
èÂ
 = {0};

56 
tc_‰ame_hódî
 *
±fh
;

58 
x
 = 
PAGE_SIZE
 - (*
off
 + 
MIN_COMMON_HEAD_LEN
);

59 
s
;

60 *
de°
;

64 
±fh
 = (
tc_‰ame_hódî
 *)((*)(
tc
->
tc_‰ame_hód
Ë+ *
off
);

65 
de°
 = (*)
tc
 + *
off
;

66 
s
 = 
	`ˇlc_d©a_•™
(
tck
);

69 
èÂ
.
ty≥
 = 
èps
->type;

70 
èÂ
.
bô_wide
 = 
èps
->bit_wide;

71 
èÂ
.
ßm∂e_øã
 = 
èps
->sample_rate;

72 
èÂ
.
bô_øã
 = 0;

73 
èÂ
.
‰ame_off£t
 = 
x
 + 
s
;

74 
èÂ
.
‰ame_size
 = 
èps
->
∑ylﬂd_Àn
;

77 
tfh
.
codecTy≥
 = 
TW_AUDIO_CODEC_TYPE
;

78 
tfh
.
°ªamTy≥
 = 
TW_MASTER_BITSTREAM
;

79 
tfh
.
‰ameSîül
 = 
èps
->frameSerial;

80 
tfh
.
‰ameTy≥
 = 
AUDIO_FRAME_TYPE
;

81 
tfh
.
timeSèmp
 = 
èps
->
time°amp
;

82 
tfh
.
∑ylﬂd_off£t
 = (
tc_‰ame_hódî
);

83 
tfh
.
∑ylﬂdLí
 = (
tc_audio_‰ame_∑d
Ë+ 
èÂ
.
‰ame_size
;

86 
°ck
.
ödex
 = 
tck
->index;

87 
°ck
.
ty≥
 = 
tck
->type;

88 
°ck
.
Êag
 = 
tck
->flag;

90 
°ck
.
__tc__°©e
 = 
tck
->
°©e
;

91 
°ck
.
__tc__ißlign
 = 
tck
->
ißlign
;

92 
°ck
.
__tc__off_to_∑ge
 = 
tck
->
off_to_∑ge
;

93 
°ck
.
__tc__°¨t
 = 
tck
->
°¨t
;

94 
°ck
.
__tc__size
 = 
èps
->
∑ylﬂd_Àn
;

95 
	`mem˝y
(
±fh
->
∑d
,&
èÂ
,(
tc_audio_‰ame_∑d
));

96 
	`mem˝y
(
±fh
,&
tfh
,(
tc_‰ame_hódî
));

97 
	`mem˝y
(
de°
,&
°ck
,(
tc_buf„r
));

98 *
off
 +
	`tc_Æign_up
(
MIN_HEADER_LEN_AUDIO
,4);

99 
	}
}

103 
	$ˇlc_‰ame_size
(
tc_buf„r_kîn
 *
tck
)

105 
size
 = 0,
idx
 = 0;

107 
tck
->
sg
[
idx
].
ˇºõr
 &&Åck->sg[idx].
addr
 &&Åck->sg[idx].
Àn
){

108 
size
 +
tck
->
sg
[
idx
].
Àn
;

109 
idx
++;

110 if(
idx
 >
SCATTRT_MAX_ENTRY
)

115  
size
;

116 
	}
}

121 
	$tc_buf„r_£t_h264_d©a
(
is_ma°î
,
tc_buf„r
 *
tc
, 
tc_buf„r_kîn
 *
tck
, 
tw_video_‰ame_tcb_t
 *
vf
,*
off
)

123 
tc_buf„r
 
°ck
 = {0};

124 
tc_‰ame_hódî
 
tfh
 = {0};

125 
tc_h264_idr_‰ame_∑d
 
tvÂ
 = {0};

126 
tc_‰ame_hódî
 *
±fh
;

127 
h264_«l_t
 *
«l
 = &
vf
->nal;

128 
‰ame_size
 = 0;

129 
x
 = 
PAGE_SIZE
 - (*
off
 + 
MIN_COMMON_HEAD_LEN
);

130 
y
 = 
PAGE_SIZE
 - (*
off
 + (
tc_buf„r
));

131 
s
;

132 *
de°
;

133 
tc_‰ame_hódî
 *
ç
;

134 *
çp
;

137 
±fh
 = (
tc_‰ame_hódî
 *)((*)(
tc
->
tc_‰ame_hód
Ë+ *
off
);

138 
de°
 = (*)
tc
 + *
off
;

139 if((()
±fh
Ë- (()
tc
) >= 4000){

140 
	`¥ötk
("\n\n&&&&&&&&&&&&&impossübÀ&&&&&&&&&&&&&&&&&&&&&&&&&&&&& %p, %p\n", 
±fh
, 
tc
);

142 if((()
de°
Ë- (()
tc
) >= 4000){

143 
	`¥ötk
("\n\n**************impossübÀ**************************** %∞%p\n", 
de°
, 
tc
);

145 
ç
 = (
tc_‰ame_hódî
 *)((
tc_buf„r
 *)
de°
)->
tc_‰ame_hód
;

146 
‰ame_size
 = 
tck
->
size
;

149 
s
 = 
	`ˇlc_d©a_•™
(
tck
);

152 if(
H264_FRAME_TYPE_IDR
 =
vf
->
‰ame_ty≥
){

154 
tvÂ
.
Âs
 = 
vf
->fps;

155 
tvÂ
.
öô_qp
 = 
vf
->
i_öô_qp
;

156 
tvÂ
.
log2MaxFømeNumNöus4
 = 
vf
->
i_log_g›_vÆue
;

157 
tvÂ
.
mb_width_möus1
 = 
vf
->
i_mb_x
;

158 
tvÂ
.
mb_height_möus1
 = 
vf
->
i_mb_y
;

159 
tvÂ
.
i_cuº_qp
 = 
vf
->i_curr_qp;

161 
tvÂ
.
•s_‰ame_off£t
 = 
x
 + 
s
;

162 
tvÂ
.
•s_‰ame_size
 = 
«l
->
•s_∑ysize
;

163 
tvÂ
.
µs_‰ame_off£t
 =ÅvÂ.
•s_‰ame_off£t
 + 
«l
->
•s_∑ysize
;

164 
tvÂ
.
µs_‰ame_size
 = 
«l
->
µs_∑ysize
;

165 
tvÂ
.
idr_‰ame_off£t
 =ÅvÂ.
µs_‰ame_off£t
 + 
«l
->
µs_∑ysize
;

166 
tvÂ
.
idr_‰ame_size
 = 
vf
->
‰ame_Àn
;

173 
tfh
.
codecTy≥
 = 
TW_VIDEO_H264_CODEC_TYPE
;

174 if(
is_ma°î
)

175 
tfh
.
°ªamTy≥
 = 
TW_MASTER_BITSTREAM
;

177 
tfh
.
°ªamTy≥
 = 
TW_SUB_BITSTREAM
;

179 
tfh
.
‰ameSîül
 = 
vf
->
‰ame_numbî
;

180 
tfh
.
‰ameTy≥
 = 
vf
->
‰ame_ty≥
;

181 
tfh
.
timeSèmp
 = 
vf
->
time°amp
;

182 if(
H264_FRAME_TYPE_IDR
 =
vf
->
‰ame_ty≥
){

183 
tfh
.
∑ylﬂd_off£t
 = (
tc_‰ame_hódî
);

184 
tfh
.
∑ylﬂdLí
 = (
tc_h264_idr_‰ame_∑d
Ë+ 
‰ame_size
;

188 
tfh
.
∑ylﬂd_off£t
 = 
y
 + 
s
;

189 
tfh
.
∑ylﬂdLí
 = 
‰ame_size
;

193 
°ck
.
ödex
 = 
tck
->index;

194 
°ck
.
ty≥
 = 
tck
->type;

195 
°ck
.
Êag
 = 
tck
->flag;

197 
°ck
.
__tc__°©e
 = 
tck
->
°©e
;

198 
°ck
.
__tc__ißlign
 = 1;

199 
°ck
.
__tc__off_to_∑ge
 = 0;

200 
°ck
.
__tc__°¨t
 = 
tck
->
sg
[0].
addr
;

201 
°ck
.
__tc__size
 = 
‰ame_size
;

203 if(
H264_FRAME_TYPE_IDR
 =
vf
->
‰ame_ty≥
)

204 
	`mem˝y
(
±fh
->
∑d
,&
tvÂ
,(
tc_h264_idr_‰ame_∑d
));

205 
	`mem˝y
(
±fh
,&
tfh
,(
tc_‰ame_hódî
));

206 
	`mem˝y
(
de°
,&
°ck
,(
tc_buf„r
));

208 if(
H264_FRAME_TYPE_IDR
 =
vf
->
‰ame_ty≥
)

209 *
off
 +
	`tc_Æign_up
(
MIN_HEADER_LEN_VIDEO_IDR
,4);

211 *
off
 +
	`tc_Æign_up
(
MIN_HEADER_LEN_VIDEO
,4);

216 
	}
}

219 
	$tc_buf„r_£t_j≥g_d©a
(
tc_buf„r
 *
tc
, 
tc_buf„r_kîn
 *
tck
, 
tw_vb_‰ame_tcb
 *
tvf
, *
off
)

221 
tc_buf„r
 
°ck
 = {0};

222 
tc_‰ame_hódî
 
tfh
 = {0};

223 
tc_‰ame_hódî
 *
±fh
;

224 
‰ame_size
 = 0;

225 
x
 = 
PAGE_SIZE
 - (*
off
 + (
tc_buf„r
));

226 
s
;

227 *
de°
;

230 
±fh
 = (
tc_‰ame_hódî
 *)(((*)
tc
->
tc_‰ame_hód
Ë+ (*
off
));

231 
de°
 = (*)
tc
 + (*
off
);

232 
‰ame_size
 = 
tck
->
size
;

233 
s
 = 
	`ˇlc_d©a_•™
(
tck
);

236 
tfh
.
codecTy≥
 = 
TW_VIDEO_MJPEG_CODEC_TYPE
;

237 
tfh
.
°ªamTy≥
 = 
TW_MASTER_BITSTREAM
;

238 
tfh
.
‰ameSîül
 = 
tvf
->
‰ame_numbî
;

239 
tfh
.
‰ameTy≥
 = 
tvf
->
‰ame_ty≥
;

240 
tfh
.
timeSèmp
 = 
tvf
->
time°amp
;

241 
tfh
.
∑ylﬂd_off£t
 = 
x
 + 
s
;

242 
tfh
.
∑ylﬂdLí
 = 
‰ame_size
;

245 
°ck
.
ödex
 = 
tck
->index;

246 
°ck
.
ty≥
 = 
tck
->type;

247 
°ck
.
Êag
 = 
tck
->flag;

249 
°ck
.
__tc__°©e
 = 
tck
->
°©e
;

250 
°ck
.
__tc__ißlign
 = 1;

251 
°ck
.
__tc__off_to_∑ge
 = 0;

252 
°ck
.
__tc__°¨t
 = 
tck
->
sg
[0].
addr
;

253 
°ck
.
__tc__size
 = 
‰ame_size
;

254 
	`mem˝y
(
±fh
,&
tfh
,(
tc_‰ame_hódî
));

255 
	`mem˝y
(
de°
,&
°ck
,(
tc_buf„r
));

256 *
off
 +
	`tc_Æign_up
(
MIN_HEADER_LEN_JPEG
,4);

257 
	}
}

280 
	$öô_queue_bufs
(
tc_queue
 * 
tq
)

282 
idx
,
cidx
;

283 
ƒ
;

286 if(
NULL
 =
tq
->
bufs
){

287 
	`TW_DBG
(
TW_DBG_ERR
,"theÅq->bufs = NULL!\n");

288  -
EINVAL
;

291 if(0 =
tq
->
buf_ƒ
){

292 
	`TW_DBG
(
TW_DBG_ERR
,"theÅq->buf_nr = 0!\n");

293  -
EINVAL
;

296 
ƒ
 = 
	`tc_mö
(
tq
->
buf_ƒ
,
QUEUE_MAX_FRAME
);

297 if(
tq
->
buf_ƒ
 > 
QUEUE_MAX_FRAME
){

298 
	`TW_DBG
(
TW_DBG_ERR
,"max %d bufs\n",
QUEUE_MAX_FRAME
);

299 
tq
->
buf_ƒ
 = 
QUEUE_MAX_FRAME
;

302 
idx
 = 0;idx < 
ƒ
; idx++)

304 
tq
->
bufs
[
idx
] = 
	`kzÆloc
((
tc_buf„r_kîn
),
GFP_KERNEL
);

305 if(
NULL
 =
tq
->
bufs
[
idx
])

306 
˛ónup
;

307 
	`öô_waôqueue_hód
(&
tq
->
bufs
[
idx
]->
d⁄e
);

308 
tq
->
bufs
[
idx
]->
ödex
 = idx;

309 
tq
->
bufs
[
idx
]->tq =Åq;

310 
	`£t_tck_°©e
(
tq
->
bufs
[
idx
],
STATE_FREE
);

313 
˛ónup
:

314 
cidx
 = 0; cidx < 
idx
; cidx++)

316 
	`k‰ì
(
tq
->
bufs
[
cidx
]);

320 
	}
}

329 
	$tc_queue_öô
(
tc_queue
 *
q
, 
tc_queue_›s
 *
›s
, * 
dev
,

330 
usize
, 
buf_cou¡
,*
¥iv
)

332 if(
usize
 =0 || 
buf_cou¡
 == 0){

333 
	`TW_DBG
(
TW_DBG_ERR
,"init with 0 size or 0 count!\n");

337 
	`mem£t
(
q
,0,(*q));

338 
q
->
dev
 = dev;

340 
q
->
unô_size
 = 
usize
;

341 
q
->
›s
 = ops;

342 
q
->
¥iv_d©a
 = 
¥iv
;

343 
q
->
buf_ƒ
 = 
buf_cou¡
;

344 
	`muãx_öô
(&
q
->
lock
);

345 
	`öô_waôqueue_hód
(&
q
->
d⁄e
);

346 
q
->
wp
 = 0;

347 
q
->
Ω
 = 0;

348  
	`öô_queue_bufs
(
q
);

349 
	}
}

351 
	$tc_queue_ª£t
(
tc_queue
 *
q
)

353 
idx
 = 0;

354 
tc_buf„r_kîn
 * 
tck
;

356 
tc_åa˚
;

357 
	`muãx_lock
(&
q
->
lock
);

365 
	`muãx_u∆ock
(&
q
->
lock
);

367 
idx
 = 0; idx < 
q
->
buf_ƒ
; idx++)

369 
tck
 = 
q
->
bufs
[
idx
];

370 
	`öô_waôqueue_hód
(&
tck
->
d⁄e
);

371 
	`£t_tck_°©e
(
tck
,
STATE_FREE
);

373 
q
->
wp
 = 0;

374 
q
->
Ω
 = 0;

376 
	}
}

379 
	$tc_queue_ªÀa£
(
tc_queue
 *
q
)

381 
idx
 = 0;

384 
	`muãx_lock
(&
q
->
lock
);

392 
	`muãx_u∆ock
(&
q
->
lock
);

394 
idx
=0; idx < 
q
->
buf_ƒ
; idx++)

395 
	`k‰ì
(
q
->
bufs
[
idx
]);

397 
	`k‰ì
(
q
);

398 
	}
}

	@../../tw5864/device_layer/tc_chip.c

1 
	~<tw5864/tc_comm⁄.h
>

4 
	$ã°_›í
(
tw_chù_devi˚
 *
tcd
,
fûe
 * file)

6 
ªt
 = 0;

8 
tc_åa˚
;

9 if(!
tcd
->
≥d
 || !tcd->≥d->
›
)

10 
	`dbg
("öà%†havêdrivîáâached!\n",
__FUNCTION__
);

12 
ªt
 = 
tcd
->
≥d
->
›
->
	`›í
(tcd->ped);

13 if(
ªt
){

14 
	`¥ötk
("ö %†drivî o≥¿Áûed!\n", 
__FUNCTION__
);

15  
ªt
;

17 
fûe
->
¥iv©e_d©a
 = 
tcd
;

18  
ªt
;

19 
	}
}

25 
	$ã°_ªÀa£
(
tw_chù_devi˚
 *
chù_dev
, 
fûe
 *file)

27 
ªt
;

28 
tw_chù_devi˚
 *
tcd
 = (tw_chù_devi˚ *)
fûe
->
¥iv©e_d©a
;

30 
	`¥ötk
("--->fun˘i⁄ %†ˇŒed\n",
__FUNCTION__
);

31 if(!
tcd
->
≥d
 || !tcd->≥d->
›
){

32 
	`¥ötk
("tcd->ped is NULL orÖed->op is NULL\n");

33  -
EINVAL
;

36 
ªt
 = 
tcd
->
≥d
->
›
->
	`˛o£
(tcd->ped);

37 
fûe
->
¥iv©e_d©a
 = 
NULL
;

38  
ªt
;

39 
	}
}

41 
	$ã°_io˘l
(
fûe
 * 
fûp
,
cmd
, 
¨g
)

43 
tw_chù_devi˚
 *
tcd
 = (tw_chù_devi˚ *)
fûp
->
¥iv©e_d©a
;

45 
	`¥ötk
("---->fun˘i⁄ %†ˇŒed!\n",
__FUNCTION__
);

46 if(!
tcd
->
≥d
 || !tcd->≥d->
›
){

47 
	`¥ötk
("tcd->ped is NULL orÖed->op is NULL\n");

48  -
EINVAL
;

51  
tcd
->
≥d
->
›
->
	`io˘l
—cd->≥d,
cmd
,
¨g
);

52 
	}
}

55 
tcd_fûe_›î©i⁄s
 
	gã°_f›
 = {

56 .
›í
 = 
ã°_›í
,

57 .
	gªÀa£
 = 
ã°_ªÀa£
,

58 .
	gio˘l
 = 
ã°_io˘l
,

66 
	$tc_chù_öô
(
tw_chù_devi˚
 *
tcd
,
bus_id
,
chù_id
)

68 
ªt
 = 0;

69 
ïkey_t
 
key
 = {0};

70 
idx
 = 0;

72 
	`dbg
("@@@@:bus_id[%lu];chù_id[%lu]\n",
bus_id
,
chù_id
);

73 ;
idx
 < 1; idx++){

74 
	`•rötf
(
tcd
->
«me
,"%s-%02lu","tw5864",
chù_id
);

75 
	`make_key
((
ïkey_t
 *)&
key
,0x3f,0x3f,
bus_id
,0,
chù_id
,0);

76 
	`ïobj_öô
(&
tcd
->
ïobj
, 
TWELL
, 
bus_id
,
TW5864
,0,0,&
key
);

77 
tcd
->
tcd_f›s
 = &
ã°_f›
;

78 
ªt
 = 
	`ªgi°î_chù_devi˚
(
tcd
);

79 if(
ªt
){

80 
	`¥ötk
("regisrter chip dev failed!\n");

81  
ªt
;

85  
ªt
;

86 
	}
}

91 
	$tc_chù_exô
(
tw_chù_devi˚
 *
tcd
)

93 
	`uƒegi°î_chù_devi˚
(
tcd
);

94 
	}
}

	@../../tw5864/device_layer/tc_chip_ai.c

1 
	~<tw5864/tc_comm⁄.h
>

12 
	$ai_buf_¥ï¨e
(
tc_queue
 * 
tq
, *
¥iv
, 
tc_buf„r
 
__u£r
 *
tc
)

15 
	}
}

17 
	$ai_buf_ªÀa£
(
tc_queue
 * 
tq
, * 
¥iv
, 
tc_buf„r_kîn
 *
tb
)

19 
ªt
 = 0;

20  
ªt
;

21 
	}
}

26 
tc_queue_›s
 
	gai_queue_›s
 =

28 .
buf_¥ï¨e
 = 
ai_buf_¥ï¨e
,

29 .
	gbuf_ªÀa£
 = 
ai_buf_ªÀa£
,

38 
	$ai_ªque°_mem‹y
(
fûe
 *
f
,
¨g
)

40 
ªt
 = 0;

42  
ªt
;

43 
	}
}

46 
	$ai_ªÀa£_mem‹y
(
fûe
 *
f
,
¨g
)

49 
	}
}

54 
	$èi_˛ónup
(* 
¨g
)

56 
tw_chù_ai
 *
èi
 = (tw_chù_aò*)
¨g
;

58 
tc_åa˚
;

60 
	`k‰ì
(
èi
);

61 
	}
}

75 
	$audi_í_pﬁlög
(*
p
)

96 
	}
}

101 
	$chù_ai_›í
(
tw_£rvi˚_devi˚
 *
tsd
,
fûe
 *
f
)

103 
ªt
 = 0;

104 
ed_tcb_t
 *
´d
;

105 
tw_chù_ai
 *
èi
 = 
	`c⁄èöî_of
(
tsd
,tw_chip_ai,tsd);

107 
tc_åa˚
;

118 if(!
èi
->
tsd
.
≥d
){

119 
	`dbg
("ai dev hasÇo driveráttached!\n");

122 
´d
 = 
èi
->
tsd
.
≥d
;

123 
ªt
 = 
´d
->
›
->
	`›í
(aed);

124 if(
ªt
 !
TW_OK
){

125 
	`¥ötk
("ö %†audio_drivî o≥¿Áûed!\n",
__FUNCTION__
);

126 
ªt
 = -1;

127  
ªt
;

129 
f
->
¥iv©e_d©a
 = 
èi
;

130  
ªt
;

131 
	}
}

135 
ssize_t
 
	$chù_ai_ªad
(
fûe
 *
f
,
__u£r
 *
buff
,
size_t
 
cou¡
, 
loff_t
 * 
lof
)

137 
off£t
 = 0;

138  (
ssize_t
)
off£t
;

139 
	}
}

143 
ssize_t
 
	$chù_ai_wrôe
 (
fûe
 *
f
, c⁄° 
__u£r
 *
buff
, 
size_t
 
cou¡
, 
loff_t
 *
lof
)

146 
ªt
 = 0;

148  
ªt
;

150 
	}
}

152 
	$chù_ai_io˘l
 (
fûe
 *
f
, 
cmd
, 
¨g
)

154 
ªt
 = 0;

155 
tw_chù_ai
 *
èi
 = (tw_chù_aò*)
f
->
¥iv©e_d©a
;

156 
ídpoöt_tcb
 *
ed
;

158 
cmd
)

161 
TW_CODEC_CHAN_REQUEST_MEM
:

162 
ªt
 = 
	`ai_ªque°_mem‹y
(
f
,
¨g
);

164 
TW_CODEC_CHAN_RELEASE_MEM
:

165 
ªt
 = 
	`ai_ªÀa£_mem‹y
(
f
,
¨g
);

168 
	`dbg
("Ÿhî cmd i¿%s\n",
__FUNCTION__
);

169 if(!
èi
->
tsd
.
≥d
){

170 
	`¥ötk
("the device hasÇo driverÉd!\n");

171 
ªt
 = 
EFAULT
;

174 
ed
 = 
èi
->
tsd
.
≥d
;

175 
ªt
 = 
ed
->
›
->
	`io˘l
”d,
cmd
,
¨g
);

179  
ªt
;

180 
	}
}

184 
	$chù_ai_ªÀa£
(
fûe
 *
f
)

186 
ªt
;

187 
ed_tcb_t
 *
´d
;

188 
tw_chù_ai
 *
èi
 = (tw_chù_aò*)
f
->
¥iv©e_d©a
;

190 
tc_åa˚
;

191 
	`down
(&
èi
->
£m
);

192 
´d
 = 
èi
->
tsd
.
≥d
;

193 
ªt
 = 
´d
->
›
->
	`˛o£
(aed);

194 
	`DñëeF‹FúeTimîJob
(
èi
->
timî_id
);

196 
	`up
(&
èi
->
£m
);

198 
f
->
¥iv©e_d©a
 = 
NULL
;

199  
ªt
;

200 
	}
}

204 
	$chù_ai_pﬁl
(
fûe
 *fûe, 
pﬁl_èbÀ_°ru˘
 *
waô
)

206 
mask
 = 0;

224  
mask
;

225 
	}
}

230 
	$chù_ai_öô
(
tw_chù_devi˚
 *
tcd
,
cmd_¨g
 *
¨g
,
tw_£rvi˚_devi˚
 **
tsd
)

232 
tw_chù_ai
 *
èi
;

234 
tc_åa˚
;

235 
èi
 = 
	`kzÆloc
((*èi),
GFP_KERNEL
);

236 if(
NULL
 =
èi
)

237  -
ENOMEM
;

238 *
tsd
 = &
èi
->tsd;

240 
èi
->
tsd
.
˛ón_up
 = 
èi_˛ónup
;

242 
èi
->
«me
 = "tw5864-audio_input";

243 
èi
->
u£rs
 = 1;

246 
	`öô_MUTEX
(&
èi
->
£m
);

247 
	`öô_waôqueue_hód
(&
èi
->
waô_pﬁl
);

249 
	}
}

251 
	$chù_ai_de°‹y
(
tw_£rvi˚_devi˚
 *
tsd
)

253 
tw_chù_ai
 *
èi
;

254 
tc_åa˚
;

256 if(!
tsd
)

258 
èi
 = 
	`c⁄èöî_of
(
tsd
,
tw_chù_ai
,tsd);

261 
	`k‰ì
(
èi
);

262 
	}
}

265 
tsd_fûe_›î©i⁄s
 
	gchù_ai_f›s
 = {

266 .
ow√r
 = 
THIS_MODULE
,

267 .
	göô
 = 
chù_ai_öô
,

268 .
	gde°‹y

chù_ai_de°‹y
,

269 .
	g›í
 = 
chù_ai_›í
,

270 .
	gªad
 = 
chù_ai_ªad
,

271 .
	gwrôe
 = 
chù_ai_wrôe
,

272 .
	gio˘l
 = 
chù_ai_io˘l
,

273 .
	gªÀa£

chù_ai_ªÀa£
,

274 .
	gpﬁl
 = 
chù_ai_pﬁl
,

277 
tw_dev_id
 
	gtw_chù_ai_id
 = {

278 .
ïobj
 = {

279 .
víd‹_id
 = 
TWELL
,

280 .
	gbus_id
 = 1,

281 .
	gchù_id
 = 
TW5864
,

282 .
	gfunc_id
 = 0,

283 .
	gty≥
 = 
TW_AUDIO_IN
,

284 .
	gkey
 = {0},

286 .
	gvîsi⁄
 = 0,

289 
tw_dev_èbÀ_id
 *
	gèi_èbÀ
 = 
NULL
;

291 
	$tw_chù_ai_öô
(* 
d©a
)

293 
èi_èbÀ
 = 
	`kzÆloc
((
tw_dev_èbÀ_id
),
GFP_KERNEL
);

294 if(!
èi_èbÀ
){

295 
	`dbg
("nÿmem i¿%s\n",
__FUNCTION__
);

296  -
ENOMEM
;

298 
	`INIT_LIST_HEAD
(&
èi_èbÀ
->
li°
);

299 
èi_èbÀ
->
tid
 = &
tw_chù_ai_id
;

300 
èi_èbÀ
->
›s
 = &
chù_ai_f›s
;

301 
èi_èbÀ
->
∑ø
 = 
d©a
;

302 
	`dbg_ïobj_¥öt
(&
èi_èbÀ
->
tid
->
ïobj
);

303 
	`ªgi°î_tc_devi˚
(
èi_èbÀ
);

305 
	}
}

307 
	$tw_chù_ai_ªmove
()

309 if(
èi_èbÀ
)

310 
	`uƒegi°î_tc_devi˚
(
èi_èbÀ
);

311 
èi_èbÀ
 = 
NULL
;

312 
	}
}

	@../../tw5864/device_layer/tc_chip_vi.c

1 
	~<tw5864/tc_comm⁄.h
>

12 
	$vi_buf_¥ï¨e
(
tc_queue
 * 
tq
, *
¥iv
, 
tc_buf„r
 
__u£r
 *
tc
)

15 
	}
}

17 
	$vi_buf_ªÀa£
(
tc_queue
 * 
tq
, * 
¥iv
, 
tc_buf„r_kîn
 *
tb
)

19 
ªt
 = 0;

20  
ªt
;

21 
	}
}

23 
tc_queue_›s
 
	gvi_queue_›s
 =

25 .
buf_¥ï¨e
 = 
vi_buf_¥ï¨e
,

26 .
	gbuf_ªÀa£
 = 
vi_buf_ªÀa£
,

29 
	$vi_ªque°_mem‹y
(
fûe
 *
f
,
¨g
)

31 
ªt
 = 0;

33  
ªt
;

34 
	}
}

36 
	$vi_ªÀa£_mem‹y
(
fûe
 *
f
,
¨g
)

39 
	}
}

42 
	$tvi_˛ónup
(* 
¨g
)

44 
tw_chù_vi
 *
tvi
 = (tw_chù_vò*)
¨g
;

46 
tc_åa˚
;

48 
	`k‰ì
(
tvi
);

49 
	}
}

63 
	$audi_í_pﬁlög
(*
p
)

84 
	}
}

89 
	$chù_vi_›í
(
tw_£rvi˚_devi˚
 *
tsd
,
fûe
 *
f
)

91 
ªt
 = 0;

92 
ed_tcb_t
 *
vid
;

93 
tw_chù_vi
 *
tvi
 = 
	`c⁄èöî_of
(
tsd
,tw_chip_vi,tsd);

95 
tc_åa˚
;

106 if(!
tvi
->
tsd
.
≥d
){

107 
	`dbg
("ai dev hasÇo driveráttached!\n");

110 
vid
 = 
tvi
->
tsd
.
≥d
;

111 
ªt
 = 
vid
->
›
->
	`›í
(vid);

112 if(
ªt
 !
TW_OK
){

113 
	`¥ötk
("ö %†audio_drivî o≥¿Áûed!\n",
__FUNCTION__
);

114 
ªt
 = -1;

115  
ªt
;

117 
f
->
¥iv©e_d©a
 = 
tvi
;

118  
ªt
;

119 
	}
}

123 
ssize_t
 
	$chù_vi_ªad
(
fûe
 *
f
,
__u£r
 *
buff
,
size_t
 
cou¡
, 
loff_t
 * 
lof
)

125 
off£t
 = 0;

126  (
ssize_t
)
off£t
;

127 
	}
}

131 
ssize_t
 
	$chù_vi_wrôe
 (
fûe
 *
f
, c⁄° 
__u£r
 *
buff
, 
size_t
 
cou¡
, 
loff_t
 *
lof
)

134 
ªt
 = 0;

136  
ªt
;

138 
	}
}

140 
	$chù_vi_io˘l
 (
fûe
 *
f
, 
cmd
, 
¨g
)

142 
ªt
 = 0;

143 
tw_chù_vi
 *
tvi
 = (tw_chù_vò*)
f
->
¥iv©e_d©a
;

144 
ídpoöt_tcb
 *
ed
;

146 
cmd
)

149 
TW_CODEC_CHAN_REQUEST_MEM
:

150 
ªt
 = 
	`vi_ªque°_mem‹y
(
f
,
¨g
);

152 
TW_CODEC_CHAN_RELEASE_MEM
:

153 
ªt
 = 
	`vi_ªÀa£_mem‹y
(
f
,
¨g
);

156 
	`dbg
("Ÿhî cmd i¿%s\n",
__FUNCTION__
);

157 if(!
tvi
->
tsd
.
≥d
){

158 
	`¥ötk
("the device hasÇo driverÉd!\n");

159 
ªt
 = -
EFAULT
;

162 
ed
 = 
tvi
->
tsd
.
≥d
;

163 
ªt
 = 
ed
->
›
->
	`io˘l
”d,
cmd
,
¨g
);

167  
ªt
;

168 
	}
}

172 
	$chù_vi_ªÀa£
(
fûe
 *
f
)

174 
ªt
;

175 
ed_tcb_t
 *
vid
;

176 
tw_chù_vi
 *
tvi
 = (tw_chù_vò*)
f
->
¥iv©e_d©a
;

178 
tc_åa˚
;

179 
	`down
(&
tvi
->
£m
);

180 
vid
 = 
tvi
->
tsd
.
≥d
;

181 
ªt
 = 
vid
->
›
->
	`˛o£
(vid);

182 
	`DñëeF‹FúeTimîJob
(
tvi
->
timî_id
);

184 
	`up
(&
tvi
->
£m
);

186 
f
->
¥iv©e_d©a
 = 
NULL
;

187  
ªt
;

188 
	}
}

192 
	$chù_vi_pﬁl
(
fûe
 *fûe, 
pﬁl_èbÀ_°ru˘
 *
waô
)

194 
mask
 = 0;

212  
mask
;

213 
	}
}

218 
	$chù_vi_öô
(
tw_chù_devi˚
 *
tcd
,
cmd_¨g
 *
¨g
,
tw_£rvi˚_devi˚
 **
tsd
)

220 
ªt
=0;

221 
tw_chù_vi
 *
tvi
;

223 
tc_åa˚
;

224 
tvi
 = 
	`kzÆloc
((*tvi),
GFP_KERNEL
);

225 if(
NULL
 =
tvi
)

226  -
ENOMEM
;

227 *
tsd
 = &
tvi
->tsd;

229 
tvi
->
tsd
.
˛ón_up
 = 
tvi_˛ónup
;

236 
tvi
->
«me
 = "tw5864-audio_input";

237 
tvi
->
u£rs
 = 1;

240 
	`öô_MUTEX
(&
tvi
->
£m
);

241 
	`öô_waôqueue_hód
(&
tvi
->
waô_pﬁl
);

242  
ªt
;

243 
	}
}

245 
	$chù_vi_de°‹y
(
tw_£rvi˚_devi˚
 *
tsd
)

247 
tw_chù_vi
 *
tvi
;

248 
tc_åa˚
;

250 if(!
tsd
)

252 
tvi
 = 
	`c⁄èöî_of
(
tsd
,
tw_chù_vi
,tsd);

255 
	`k‰ì
(
tvi
);

256 
	}
}

259 
tsd_fûe_›î©i⁄s
 
	gchù_vi_f›s
 = {

260 .
ow√r
 = 
THIS_MODULE
,

261 .
	göô
 = 
chù_vi_öô
,

262 .
	gde°‹y

chù_vi_de°‹y
,

263 .
	g›í
 = 
chù_vi_›í
,

264 .
	gªad
 = 
chù_vi_ªad
,

265 .
	gwrôe
 = 
chù_vi_wrôe
,

266 .
	gio˘l
 = 
chù_vi_io˘l
,

267 .
	gªÀa£

chù_vi_ªÀa£
,

268 .
	gpﬁl
 = 
chù_vi_pﬁl
,

271 
tw_dev_id
 
	gtw_chù_vi_id
 = {

272 .
ïobj
 = {

273 .
víd‹_id
 = 
TWELL
,

274 .
	gbus_id
 = 1,

275 .
	gchù_id
 = 
TW5864
,

276 .
	gfunc_id
 = 0,

277 .
	gty≥
 = 
TW_VIDEO_IN
,

278 .
	gkey
 = {0},

280 .
	gvîsi⁄
 = 0,

283 
tw_dev_èbÀ_id
 *
	gtvi_èbÀ
 = 
NULL
;

285 
	$tw_chù_vi_öô
(* 
d©a
)

287 
tvi_èbÀ
 = 
	`kzÆloc
((
tw_dev_èbÀ_id
),
GFP_KERNEL
);

288 if(!
tvi_èbÀ
){

289 
	`dbg
("nÿmem i¿%s\n",
__FUNCTION__
);

290  -
ENOMEM
;

292 
	`INIT_LIST_HEAD
(&
tvi_èbÀ
->
li°
);

293 
tvi_èbÀ
->
tid
 = &
tw_chù_vi_id
;

294 
tvi_èbÀ
->
›s
 = &
chù_vi_f›s
;

295 
tvi_èbÀ
->
∑ø
 = 
d©a
;

296 
	`dbg_ïobj_¥öt
(&
tvi_èbÀ
->
tid
->
ïobj
);

297 
	`ªgi°î_tc_devi˚
(
tvi_èbÀ
);

299 
	}
}

301 
	$tw_chù_vi_ªmove
()

303 if(
tvi_èbÀ
)

304 
	`uƒegi°î_tc_devi˚
(
tvi_èbÀ
);

305 
tvi_èbÀ
 = 
NULL
;

306 
	}
}

	@../../tw5864/device_layer/tc_helper.c

1 
	~<tw5864/tc_comm⁄.h
>

7 
LIST_HEAD
(
memblock_li°
);

8 
rwlock_t
 
	gmemblock_lock
 = 
RW_LOCK_UNLOCKED
;

10 
	$memblock_add
(*
±r
, 
size_t
 
size
)

12 
memblock_s
 *
m
;

14 i‡(!(
m
 = 
	`kzÆloc
((
memblock_s
), 
GFP_KERNEL
)))

15  -
ENOMEM
;

16 
m
->
±r
 =Ötr;

17 
m
->
size
 = size;

19 
	`wrôe_lock
(&
memblock_lock
);

20 
	`li°_add
(&
m
->
li°
, &
memblock_li°
);

21 
	`wrôe_u∆ock
(&
memblock_lock
);

24 
	}
}

26 
	$memblock_dñ
(
memblock_s
 *
m
)

28 
	`wrôe_lock
(&
memblock_lock
);

29 
	`li°_dñ
(&
m
->
li°
);

30 
	`wrôe_u∆ock
(&
memblock_lock
);

31 
	`k‰ì
(
m
);

32 
	}
}

34 
memblock_s
 *
	$memblock_gë
(*
±r
)

36 
li°_hód
 *
l
;

37 
memblock_s
 *
m
;

39 
	`ªad_lock
(&
memblock_lock
);

40 
	`li°_f‹_óch
(
l
, &
memblock_li°
) {

41 
m
 = 
	`li°_íåy
(
l
, 
memblock_s
, 
li°
);

42 i‡(
m
->
±r
 ==Ötr) {

44 
	`ªad_u∆ock
(&
memblock_lock
);

45  
m
;

48 
	`ªad_u∆ock
(&
memblock_lock
);

49  
NULL
;

50 
	}
}

53 *
	$tc_mÆloc
(
size_t
 
size
)

55 *
±r
;

57 i‡(!(
±r
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
)))

58  
NULL
;

59 i‡(
	`memblock_add
(
±r
, 
size
)) {

60 
	`k‰ì
(
±r
);

61  
NULL
;

63  
±r
;

64 
	}
}

66 
	$tc_‰ì
(*
±r
)

68 
memblock_s
 *
m
;

70 i‡(!
±r
)

72 i‡(!(
m
 = 
	`memblock_gë
(
±r
))) {

73 
	`¥ötk
(
KERN_ERR
 "bug: freeÇon-exist memory\n");

76 
	`memblock_dñ
(
m
);

77 
	`k‰ì
(
±r
);

78 
	}
}

84 *
	$tc_ªÆloc
(*
±r
, 
size_t
 
size
)

86 
memblock_s
 *
m
;

87 *
√w
 = 
NULL
;

89 i‡(
±r
) {

90 i‡(!(
m
 = 
	`memblock_gë
(
±r
))) {

91 
	`¥ötk
(
KERN_ERR
 "bug:ÑeallocÇon-exist memory\n");

92  
NULL
;

95 i‡(
size
 < 
m
->size){

96 
	`¥ötk
(
KERN_ERR
 "bug:ÑeallocÇot support smallÑealloc\n");

97  
NULL
;

99 i‡(
size
 =
m
->size)

100  
±r
;

101 i‡(
size
 != 0) {

102 i‡(!(
√w
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
)))

103  
NULL
;

104 
	`memmove
(
√w
, 
±r
, 
m
->
size
);

105 i‡(
	`memblock_add
(
√w
, 
size
)) {

106 
	`k‰ì
(
√w
);

107  
NULL
;

111 
	`memblock_dñ
(
m
);

112 
	`k‰ì
(
±r
);

114 i‡(
size
 != 0) {

115 i‡(!(
√w
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
)))

116  
NULL
;

117 i‡(
	`memblock_add
(
√w
, 
size
)) {

118 
	`k‰ì
(
√w
);

119  
NULL
;

124  
√w
;

125 
	}
}

127 
EXPORT_SYMBOL
(
tc_ªÆloc
);

	@../../tw5864/device_layer/tc_jpeg_en.c

1 
	~<tw5864/tc_comm⁄.h
>

4 
	$¥öt_j≥g_‰ame_hódî
(* 
±
)

6 
idx
 =0;

7 ;
idx
 < 7; idx++)

8 
	`dbg
("<0x%02X>",*
±
++);

9 
	`dbg
("\n");

10 
	}
}

13 
	$j≥g_g©hî_sˇâî_öfo
(
tw_vb_‰ame_tcb_t
 * 
vjf
,
tc_buf„r_kîn
 *
tck
)

15 
tw_vb_∑ckë_tcb_queue_t
 *
vpq
 = &
vjf
->
vb_∑ckë_queue
;

16 
tw_vb_∑ckë_tcb_t
 *
vp
 = 
NULL
;

17 
idx
 = 0,
ªt
 = 0;

19 
vpq
->
›
->
	`gë_cuº_queue_íåy_numbî
(vpq)){

20 
vpq
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(vpq);

21 
vp
 = 
vpq
->
cuº_c⁄sumî
;

22 if(
vp
){

23 
vp
->
›
->
	`ª„ªn˚
(vp,(
tw_vb_∑ckë_tcb_t
 **)&
tck
->
sg
[
idx
].
ˇºõr
);

24 
tck
->
sg
[
idx
].
addr
 = (
__u32
 *)
vp
->
d©a
;

25 
tck
->
sg
[
idx
].
Àn
 = 
vp
->
∑ylﬂd_Àn
;

26 
ªt
 +
vp
->
∑ylﬂd_Àn
;

29 
vpq
->
›
->
	`ªÀa£_cuº_c⁄sumî
(vpq,
vjf
->
poﬁ
);

30 
idx
++;

31 if(
idx
 >
SCATTRT_MAX_ENTRY
)

36 
	`dbg
("canÇot gatherállÖackages for one frame!\n");

40  
ªt
;

41 
	}
}

44 
	$vje_buf_¥ï¨e
(
tc_queue
 * 
tq
, *
¥iv
, 
tc_buf„r
 
__u£r
 *
tc
)

46 
tc_buf„r_kîn
 *
tck
,*
tmp
;

47 
tw_j≥g_í
 * 
tje
 = (tw_j≥g_í *)
¥iv
;

48 
tw_j≥g_logic_ícode_ch™
 *
driv
 = 
	`c⁄èöî_of
(
tje
->
tsd
.
≥d
,tw_j≥g_logic_ícode_ch™, 
›íed_logic_ch™_ed
);

49 
tw_vb_‰ame_tcb_queue_t
 *
vfq
 = &
driv
->
j≥g_‰ame_queue
;

50 
tw_vb_‰ame_tcb_t
 *
vjf
 = 
NULL
;

51 
buf„r_√ed
 = 
PAGE_SIZE
;

52 
ƒ_ªady
,
ƒ_hódî
,
idx
,
us
 = 
tc
->
__tc__size
;

53 
tc_hódî_buf
 *
thb
;

54 
off
 = 0;

55 
no£n£
;

58 
tmp
 = 
tq
->
bufs
[0];

59 if((
STATE_READY
 =
	`gë_tck_°©e
(
tmp
)Ë&& (0 !tmp->
œ°_¥ï¨e
)){

60 
tc
->
__tc__ƒ_‰ame
 = 1;

62 if(
tmp
->
œ°_¥ï¨e
 > 
us
){

63 
tc
->
__tc__size
 = 
tmp
->
œ°_¥ï¨e
;

64  -
ENOMEM
;

66 
tc
->
__tc__size
 = 
tmp
->
œ°_¥ï¨e
;

67 
tmp
->
œ°_¥ï¨e
 = 0;

71 
ªåy
:

72 
ƒ_ªady
 = 
vfq
->
›
->
	`gë_cuº_queue_íåy_numbî
(vfq);

74 
thb_poﬁ
->
›
->
	`gë_hódî_buf
—hb_poﬁ,&
thb
);

75 if(!
thb
){

76 
	`dbg
("gë hódî_buf„∏nŸhög i¿%s!\n",
__FUNCTION__
);

77  -
EAGAIN
;

79 
ƒ_hódî
 = 
	`round_low
(
thb
->
unô_size
,
MIN_HEADER_LEN_JPEG
);

80 
ƒ_ªady
 = 
	`tc_mö
“r_ªady,
ƒ_hódî
);

81 
ƒ_ªady
 = 
	`tc_mö
“r_ªady, 
tq
->
buf_ƒ
);

82 
tc
->
__tc__ƒ_‰ame
 = 0;

83 
idx
 = 0; idx < 
ƒ_ªady
; idx++){

84 
vjf
 = 
NULL
;

85 if(!
vfq
->
cuº_c⁄sumî
){

86 
vfq
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(vfq);

87 if(!
vfq
->
cuº_c⁄sumî
){

88 
	`dbg
("c⁄sumî i†NULL %s;\n",
__FUNCTION__
);

89 
tc
->
__tc__size
 = 
buf„r_√ed
;

90 if(
PAGE_SIZE
 !
tc
->
__tc__size
){

94 
thb_poﬁ
->
›
->
	`put_hódî_buf
—hb_poﬁ,
thb
);

95  -
EAGAIN
;

100 if(
tje
->
disˇrd
){

101 
vfq
->
›
->
	`ªÀa£_cuº_c⁄sumî
(vfq,&
driv
->
poﬁ
);

102 
thb_poﬁ
->
›
->
	`put_hódî_buf
—hb_poﬁ,
thb
);

103 
tje
->
disˇrd
 = 0;

104 
ªåy
;

107 
vfq
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(vfq->cuº_c⁄sumî,&
vjf
);

108 
vfq
->
›
->
	`ªÀa£_cuº_c⁄sumî
(vfq,&
driv
->
poﬁ
);

110 
tck
 = 
tq
->
bufs
[
idx
];

112 
tck
->
ödex
 = 
idx
;

113 
tck
->
ty≥
 = 
MEM_MMAP
;

114 
tck
->
thb
 =Åhb;

115 
tck
->
hﬁdî
 = 
vjf
;

116 
tck
->
size
 = 
vjf
->
‰ame_Àn
;

118 if((
buf„r_√ed
 + 
	`tc_Æign_up
(
tck
->
size
,
PAGE_SIZE
)Ë> 
us
){

119 if(0 =
idx
){

120 
tc
->
__tc__size
 = 
buf„r_√ed
 + 
	`tc_Æign_up
(
tck
->
size
,
PAGE_SIZE
);

121 
tc
->
__tc__ƒ_‰ame
 = 1;

122 
	`£t_tck_°©e
(
tck
,
STATE_READY
);

123 
no£n£
 = 
	`j≥g_g©hî_sˇâî_öfo
(
vjf
,
tck
);

124 
	`tc_buf„r_£t_j≥g_d©a
((
tc_buf„r
 *)(
thb
->
d©a
),
tck
,
vjf
,&
off
);

125 
tmp
->
œ°_¥ï¨e
 = 
tc
->
__tc__size
;

126 
	`dbg
("user buffer isÅoo smaller!\n");

127  -
ENOMEM
;

130 
vjf
->
›
->
	`ª„ªn˚
(vjf,&
vfq
->
cuº_c⁄sumî
);

131 
vjf
->
›
->
	`ªÀa£
(&vjf,&
driv
->
poﬁ
);

132 
tck
->
hﬁdî
 = 
NULL
;

136 
buf„r_√ed
 +
	`tc_Æign_up
(
tck
->
size
,
PAGE_SIZE
);

137 
tc
->
__tc__size
 = 
buf„r_√ed
;

138 
	`£t_tck_°©e
(
tck
,
STATE_READY
);

139 
no£n£
 = 
	`j≥g_g©hî_sˇâî_öfo
(
vjf
,
tck
);

140 
	`tc_buf„r_£t_j≥g_d©a
((
tc_buf„r
 *)(
thb
->
d©a
),
tck
,
vjf
,&
off
);

141 
tc
->
__tc__ƒ_‰ame
++;

145 
	}
}

147 
	$vje_buf_ªÀa£
(
tc_queue
 * 
tq
, * 
¥iv
, 
tc_buf„r_kîn
 *
tb
)

149 
ªt
 = 0,
idx
,
˙
 = 0;

150 
tw_j≥g_í
 * 
tje
 = (tw_j≥g_í *)
¥iv
;

151 
tw_j≥g_logic_ícode_ch™
 *
driv
 = 
	`c⁄èöî_of
(
tje
->
tsd
.
≥d
,tw_j≥g_logic_ícode_ch™, 
›íed_logic_ch™_ed
);

152 
tw_vb_poﬁ_t
 *
vjpoﬁ
 = &
driv
->
poﬁ
;

153 
tw_vb_∑ckë_tcb_t
 *
vp
 = 
NULL
;

154 
tw_vb_‰ame_tcb_t
 *
vf
 = 
NULL
;

155 
tc_buf„r_kîn
 *
tck
 = 
tq
->
bufs
[0];

159 if(!
tck
->
thb
 || !tck->
hﬁdî
){

160 
	`dbg
("övÆidÖ¨amëî†öÅck! -->%s\n",
__FUNCTION__
);

161  -
EINVAL
;

163 
thb_poﬁ
->
›
->
	`put_hódî_buf
—hb_poﬁ,
tck
->
thb
);

165 (
tck
 = 
tq
->
bufs
[
˙
]Ë&& (
STATE_BUSY
 =
	`gë_tck_°©e
(tck))){

166 
idx
 = 0;

168 
tck
->
sg
[
idx
].
ˇºõr
 &&Åck->sg[idx].
addr
 &&Åck->sg[idx].
Àn
){

169 
vp
 = (
tw_vb_∑ckë_tcb_t
 *)
tck
->
sg
[
idx
].
ˇºõr
;

170 
vp
->
›
->
	`ªÀa£
(&vp,
vjpoﬁ
);

171 
	`mem£t
(&
tck
->
sg
[
idx
],0,(
tc_sˇâî
));

172 
idx
++;

173 if(
idx
 >
SCATTRT_MAX_ENTRY
)

177 
vf
 = (
tw_vb_‰ame_tcb_t
 *)
tck
->
hﬁdî
;

178 
vf
->
›
->
	`ªÀa£
(&vf,
vjpoﬁ
);

179 
	`£t_tck_°©e
(
tck
,
STATE_FREE
);

180 
˙
++;

181 if(
˙
 >
tq
->
buf_ƒ
)

185  
ªt
;

186 
	}
}

188 
tc_queue_›s
 
	gvje_queue_›s
 =

190 .
buf_¥ï¨e
 = 
vje_buf_¥ï¨e
,

191 .
	gbuf_ªÀa£
 = 
vje_buf_ªÀa£
,

195 
	$j≥g_í_ªque°_mem‹y
(
fûe
 *
f
,
¨g
)

197 
ªt
 = 0;

198 
tc_buf„r
 *
tc
 = (tc_buf„∏*)
¨g
;

199 
tw_j≥g_í
 * 
tje
 = (tw_j≥g_í *)
f
->
¥iv©e_d©a
;

200 
tc_queue
 *
q
 = 
tje
->
tsd
.
queue
;

204 
	`down
(&
tje
->
£m
);

205 #ifde‡
STATIC_COUNTING


208 if(!
q
->
›s
){

209 
	`dbg
("tq hasÇo ops!\n");

210 
ªt
 = 
EINVAL
;

211 
out
;

213 if(!
q
->
›s
->
buf_¥ï¨e
){

214 
	`dbg
("tq->ops hasÇo buf_prepare!\n");

215 
ªt
 = 
EINVAL
;

216 
out
;

218 
ªt
 = 
q
->
›s
->
	`buf_¥ï¨e
(q,
tje
,
tc
);

219 
out
:

220 
	`up
(&
tje
->
£m
);

221  
ªt
;

222 
	}
}

225 
	$j≥g_í_ªÀa£_mem‹y
(
fûe
 *
f
,
¨g
)

227 
ªt
 = 0;

228 
tw_j≥g_í
 * 
tje
 = (tw_j≥g_í *)
f
->
¥iv©e_d©a
;

229 
tc_queue
 *
tq
 = 
tje
->
tsd
.
queue
;

230 
tc_buf„r_kîn
 * 
tck
;

232 
	`down
(&
tje
->
£m
);

233 #ifde‡
STATIC_COUNTING


236 
tck
 = 
tq
->
bufs
[0];

237 if(!
tq
->
›s
 || !tq->›s->
buf_ªÀa£
){

238 
	`dbg
("no ops orÇo buf_release!\n");

239 
ªt
 = 
EINVAL
;

240 
out
;

244 
ªt
 = 
tq
->
›s
->
	`buf_ªÀa£
—q,
tje
,
tck
);

248 
out
:

249 
	`up
(&
tje
->
£m
);

250  
ªt
;

251 
	}
}

256 
	$tje_˛ónup
(* 
¨g
)

258 
tw_j≥g_í
 *
tje
 = (tw_j≥g_í *)
¨g
;

260 
tc_åa˚
;

261 
	`tc_queue_ªÀa£
(
tje
->
tsd
.
queue
);

262 
	`k‰ì
(
tje
);

264 
	}
}

279 
	$tc_j≥g_í_pﬁlög
(*
p
)

281 
tw_j≥g_í
 *
tje
 = (tw_j≥g_í *)
p
;

282 
tw_j≥g_logic_ícode_ch™
 *
driv
 = 
	`c⁄èöî_of
(
tje
->
tsd
.
≥d
,tw_j≥g_logic_ícode_ch™, 
›íed_logic_ch™_ed
);

283 
tw_vb_‰ame_tcb_queue_t
 *
vfq
 = &
driv
->
j≥g_‰ame_queue
;

285 
ƒ
 = 
vfq
->
›
->
	`gë_cuº_queue_íåy_numbî
(vfq);

286 if(
ƒ
)

288 
	`wake_up
(&
tje
->
waô_pﬁl
);

295 
	}
}

297 
	$j≥g_í_›í
(
tw_£rvi˚_devi˚
 *
tsd
,
fûe
 *
f
)

299 
ªt
 = 0;

300 
ed_tcb_t
 *
j≥d
;

301 
tw_j≥g_í
 *
tje
 = 
	`c⁄èöî_of
(
tsd
,tw_jpeg_en,tsd);

302 
tw_j≥g_logic_ícode_ch™
 *
driv
 = 
	`c⁄èöî_of
(
tje
->
tsd
.
≥d
,tw_j≥g_logic_ícode_ch™, 
›íed_logic_ch™_ed
);

313 if(!
tje
->
tsd
.
≥d
){

314 
	`dbg
("jpeg hasÇo driveráttached!\n");

317 
tje
->
timî_id
 = 
	`AddF‹FúeTimîJob
(12,
tc_j≥g_í_pﬁlög
,tje);

318 if(
tje
->
timî_id
 =
ADDJOBERROR
){

319 
	`¥ötk
("ö %†addÅimî job faûed!\n",
__FUNCTION__
);

320 
ªt
 = -1;

321  
ªt
;

323 
j≥d
 = 
tje
->
tsd
.
≥d
;

324 
ªt
 = 
j≥d
->
›
->
	`›í
(&
driv
->
›íed_logic_ch™_ed
);

325 if(
ªt
 !
TW_OK
){

326 
	`¥ötk
("ö %†audio_drivî o≥¿Áûed!\n",
__FUNCTION__
);

327 
ªt
 = -1;

328  
ªt
;

330 
f
->
¥iv©e_d©a
 = 
tje
;

333  
ªt
;

334 
	}
}

338 
ssize_t
 
	$j≥g_í_ªad
(
fûe
 *
f
,
__u£r
 *
buff
,
size_t
 
cou¡
, 
loff_t
 * 
lof
)

340 
ssize_t
 
off£t
 = 0;

341 
tw_j≥g_í
 *
tje
 = (tw_j≥g_í *)
f
->
¥iv©e_d©a
;

342 
tw_j≥g_logic_ícode_ch™
 *
driv
 = 
	`c⁄èöî_of
(
tje
->
tsd
.
≥d
,tw_j≥g_logic_ícode_ch™, 
›íed_logic_ch™_ed
);

343 
tw_vb_poﬁ_t
 *
vjpoﬁ
 = &
driv
->
poﬁ
;

344 
tw_vb_‰ame_tcb_queue_t
 *
vjq
 = &
driv
->
j≥g_‰ame_queue
;

345 
tw_vb_‰ame_tcb_t
 *
vjf
 = 
NULL
;

346 
size_t
 
˙
 = 
cou¡
;

347 
size_t
 
mö
 = (
tw_‰ame_hódî_t
Ë+ 
vjpoﬁ
->
vb_∑ckë_buf„r_size
;

348 
loff_t
 
‰ame_off£t
;

351 
	`down
(&
tje
->
£m
);

352 
˙
 > 
mö
)

354 
vjq
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(vjq);

355 
vjf
 = 
vjq
->
cuº_c⁄sumî
;

356 if(
vjf
){

357 
‰ame_off£t
 = 0;

358 
vjf
->
›
->
	`submô
(vjf,&
buff
[
off£t
],
˙
,&
‰ame_off£t
,
TW_MASTER_BITSTREAM
,
vjpoﬁ
);

359 
vjq
->
›
->
	`ªÀa£_cuº_c⁄sumî
(vjq,
vjpoﬁ
);

360 
off£t
 +
‰ame_off£t
;

361 
˙
 -
‰ame_off£t
;

366 
	`dbg
("ˇ¿nŸ gë cunsumî i¿%s\n",
__FUNCTION__
);

367 
out
;

370 
out
:

371 
	`up
(&
tje
->
£m
);

372 *
lof
 = 
off£t
;

373 
	`dbg
("ªad %d byãs\n",
off£t
);

374  
off£t
;

375 
	}
}

379 
ssize_t
 
	$j≥g_í_wrôe
 (
fûe
 *
f
, c⁄° 
__u£r
 *
buff
, 
size_t
 
cou¡
, 
loff_t
 *
lof
)

382 
	}
}

384 
	$j≥g_í_io˘l
 (
fûe
 *
f
, 
cmd
, 
¨g
)

386 
ªt
 = 0;

387 
tw_j≥g_í
 *
tje
 = (tw_j≥g_í *)
f
->
¥iv©e_d©a
;

388 
ídpoöt_tcb
 *
ed
;

389 
tc_queue
 *
tq
 = 
tje
->
tsd
.
queue
;

390 
tc_buf„r_kîn
 * 
tck
;

393 
cmd
)

395 
TW_CODEC_CHAN_REQUEST_MEM
:

396 
ªt
 = 
	`j≥g_í_ªque°_mem‹y
(
f
,
¨g
);

398 
TW_CODEC_CHAN_RELEASE_MEM
:

399 
ªt
 = 
	`j≥g_í_ªÀa£_mem‹y
(
f
,
¨g
);

401 
TW_CODEC_CHAN_DISCAED_FRAME
:

402 
tje
->
disˇrd
 = 1;

403 
	`£t_tq_°©e_busy
(
tq
);

404 
tck
 = 
tq
->
bufs
[0];

405 
ªt
 = 
tq
->
›s
->
	`buf_ªÀa£
—q,
tje
,
tck
);

406 if(
ªt
)

407 
	`¥ötk
("disˇrd fømê---ªÀa£ faûed! i¿%s\n",
__FUNCTION__
);

410 
	`dbg
("Ÿhî cmd i¿%s\n",
__FUNCTION__
);

411 if(!
tje
->
tsd
.
≥d
){

412 
	`¥ötk
("the device hasÇo driverÉd!\n");

413 
ªt
 = 
EFAULT
;

416 
ed
 = 
tje
->
tsd
.
≥d
;

417 
ªt
 = 
ed
->
›
->
	`io˘l
”d,
cmd
,
¨g
);

421  
ªt
;

422 
	}
}

427 
	$j≥g_í_ªÀa£
(
fûe
 *
f
)

429 
ªt
;

430 
ed_tcb_t
 *
j≥d
;

431 
tw_j≥g_í
 *
tje
 = (tw_j≥g_í *)
f
->
¥iv©e_d©a
;

434 
tc_åa˚
;

435 
	`down
(&
tje
->
£m
);

436 
	`tc_queue_ª£t
(
tje
->
tsd
.
queue
);

437 
j≥d
 = 
tje
->
tsd
.
≥d
;

438 
ªt
 = 
j≥d
->
›
->
	`˛o£
(jped);

439 
	`DñëeF‹FúeTimîJob
(
tje
->
timî_id
);

441 
	`up
(&
tje
->
£m
);

442 
f
->
¥iv©e_d©a
 = 
NULL
;

443  
ªt
;

444 
	}
}

448 
	$j≥g_í_pﬁl
(
fûe
 *fûe, 
pﬁl_èbÀ_°ru˘
 *
waô
)

450 
mask
 = 0;

451 
tw_j≥g_í
 *
tje
 = (tw_j≥g_í *)
fûe
->
¥iv©e_d©a
;

452 
tw_j≥g_logic_ícode_ch™
 *
driv
 = 
	`c⁄èöî_of
(
tje
->
tsd
.
≥d
,tw_j≥g_logic_ícode_ch™, 
›íed_logic_ch™_ed
);

453 
tw_vb_‰ame_tcb_queue_t
 *
vfq
 = &
driv
->
j≥g_‰ame_queue
;

455 
	`down
(&
tje
->
£m
);

458 
	`pﬁl_waô
(
fûe
,&
tje
->
waô_pﬁl
,
waô
);

459 if(
vfq
->
›
->
	`gë_cuº_queue_íåy_numbî
(vfq))

460 
mask
 |
POLLIN
 | 
POLLRDNORM
;

461 
	`up
(&
tje
->
£m
);

462  
mask
;

463 
	}
}

468 
	$j≥g_í_öô
(
tw_chù_devi˚
 *
tcd
,
cmd_¨g
 *
¨g
,
tw_£rvi˚_devi˚
 **
tsd
)

471 
tw_j≥g_í
 *
tje
;

474 
tje
 = 
	`kzÆloc
((*tje),
GFP_KERNEL
);

475 if(
NULL
 =
tje
)

476  -
ENOMEM
;

477 *
tsd
 = &
tje
->tsd;

479 
tje
->
tsd
.
˛ón_up
 = 
tje_˛ónup
;

480 
tje
->
tsd
.
queue
 = 
	`kzÆloc
((
tc_queue
),
GFP_KERNEL
);

481 if(
NULL
 =
tje
->
tsd
.
queue
)

482  -
ENOMEM
;

484 
	`tc_queue_öô
(
tje
->
tsd
.
queue
,&
vje_queue_›s
,
NULL
,512*1024,10,tje);

485 
tje
->
«me
 = "tw5864_jpeg_encoder";

486 
tje
->
u£rs
 = 1;

489 
	`öô_MUTEX
(&
tje
->
£m
);

490 
	`öô_waôqueue_hód
(&
tje
->
waô_pﬁl
);

492 
	}
}

494 
	$j≥g_í_de°‹y
(
tw_£rvi˚_devi˚
 *
tsd
)

496 
tw_j≥g_í
 *
tje
;

497 
tc_åa˚
;

499 if(!
tsd
)

501 
tje
 = 
	`c⁄èöî_of
(
tsd
,
tw_j≥g_í
,tsd);

502 if(
tje
->
tsd
.
queue
)

503 
	`k‰ì
(
tje
->
tsd
.
queue
);

504 
	`k‰ì
(
tje
);

505 
	}
}

509 
tsd_fûe_›î©i⁄s
 
	gj≥g_í_f›s
 = {

510 .
ow√r
 = 
THIS_MODULE
,

511 .
	göô
 = 
j≥g_í_öô
,

512 .
	gde°‹y

j≥g_í_de°‹y
,

513 .
	g›í
 = 
j≥g_í_›í
,

514 .
	gªad
 = 
j≥g_í_ªad
,

515 .
	gwrôe
 = 
j≥g_í_wrôe
,

516 .
	gio˘l
 = 
j≥g_í_io˘l
,

517 .
	gªÀa£

j≥g_í_ªÀa£
,

518 .
	gpﬁl
 = 
j≥g_í_pﬁl
,

521 
tw_dev_id
 
	gtw_j≥g_í_id
 = {

522 .
ïobj
 = {

523 .
víd‹_id
 = 
TWELL
,

524 .
	gbus_id
 = 1,

525 .
	gchù_id
 = 
TW5864
,

526 .
	gfunc_id
 = (
STREAM_TYPE_MAJOR
 << 16Ë| 
CODEC_VIDEO_MJPG
,

527 .
	gty≥
 = 
TW_ENCODER
,

528 .
	gkey
 = {0},

530 .
	gvîsi⁄
 = 0,

536 
tw_dev_èbÀ_id
 *
	gtje_èbÀ
 = 
NULL
;

540 
	$tw_j≥g_í_öô
(* 
d©a
)

542 
ªt
 = 0;

543 
tje_èbÀ
 = 
	`kzÆloc
((
tw_dev_èbÀ_id
),
GFP_KERNEL
);

544 if(!
tje_èbÀ
){

545 
	`dbg
("nÿmem i¿%s\n",
__FUNCTION__
);

546  -
ENOMEM
;

548 
	`INIT_LIST_HEAD
(&
tje_èbÀ
->
li°
);

549 
tje_èbÀ
->
tid
 = &
tw_j≥g_í_id
;

550 
tje_èbÀ
->
›s
 = &
j≥g_í_f›s
;

551 
tje_èbÀ
->
∑ø
 = 
d©a
;

553 
ªt
 = 
	`ªgi°î_tc_devi˚
(
tje_èbÀ
);

554  
ªt
;

555 
	}
}

560 
	$tw_j≥g_í_ªmove
()

562 if(
tje_èbÀ
)

563 
	`uƒegi°î_tc_devi˚
(
tje_èbÀ
);

564 
tje_èbÀ
 = 
NULL
;

565 
	}
}

	@../../tw5864/device_layer/tc_video_en.c

1 
	~<tw5864/tc_comm⁄.h
>

4 
	$¥öt_‰ame_hódî
(* 
±
)

6 
idx
 =0;

7 ;
idx
 < 48; idx++){

8 if(0 =(
idx
%16))

9 
	`dbg
("\n\n");

10 
	`dbg
("<0x%02X>,",*
±
++);

12 
	`dbg
("\n\n");

13 
	}
}

16 
	$g©hî_sˇâî_öfo
(
tw_video_‰ame_tcb_t
 * 
vf
,
tc_buf„r_kîn
 *
tck
)

18 
tw_video_∑ckë_tcb_queue_t
 *
vpq
 = &
vf
->
video_∑ckë_queue
;

19 
tw_video_∑ckë_tcb_t
 *
vp
 = 
NULL
;

20 
idx
 = 0, 
ªt
 = 0;

23 
vpq
->
›
->
	`gë_cuº_queue_íåy_numbî
(vpq)){

24 
vpq
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(vpq);

25 
vp
 = 
vpq
->
cuº_c⁄sumî
;

26 if(
vp
){

27 
vp
->
›
->
	`ª„ªn˚
(vp,(
tw_video_∑ckë_tcb_t
 **)&
tck
->
sg
[
idx
].
ˇºõr
);

28 
tck
->
sg
[
idx
].
addr
 = (
__u32
 *)
vp
->
d©a
;

29 
tck
->
sg
[
idx
].
Àn
 = 
vp
->
∑ylﬂd_Àn
;

30 
ªt
 +
vp
->
∑ylﬂd_Àn
;

31 if(!
vf
->
video_ch™_buf_poﬁ
)

32 
	`dbg
("BUG:Öoﬁ i†NULL! %d\n",
__LINE__
);

34 
vpq
->
›
->
	`ªÀa£_cuº_c⁄sumî
(vpq,
vf
->
video_ch™_buf_poﬁ
);

35 
idx
++;

36 if(
idx
 >
SCATTRT_MAX_ENTRY
)

41 
	`dbg
("canÇot gatherállÖackages for one frame!\n");

45  
ªt
;

46 
	}
}

53 
	$ve_buf_¥ï¨e
(
tc_queue
 * 
tq
, *
¥iv
, 
tc_buf„r
 
__u£r
 *
tc
)

55 
tc_buf„r_kîn
 *
tck
,*
tmp
;

56 
tw_video_í
 * 
tve
 = (tw_video_í *)
¥iv
;

57 
tw_h264_logic_ícode_ch™
 *
driv
 = 
	`c⁄èöî_of
(
tve
->
tsd
.
≥d
,tw_h264_logic_ícode_ch™, 
›íed_logic_ch™_ed
);

58 
tw_video_‰ame_tcb_queue_t
 *
vfq
 = &
driv
->
ícode_‰ame_queue
;

59 
tw_video_‰ame_tcb_t
 *
vf
 = 
NULL
;

60 
is_ma°î
 = 0,
buf„r_√ed
 = 
PAGE_SIZE
;

61 
ƒ_ªady
,
ƒ_hódî
,
idx
,
us
 = 
tc
->
__tc__size
,
cix
=0;

62 
tc_hódî_buf
 *
thb
 = 
NULL
;

63 
off
 = 0,
no£n£
;

65 
tmp
 = 
tq
->
bufs
[0];

66 
is_ma°î
 = (
	`gë_°ªam_‰om_ïobj
(&
tve
->
tsd
.
ïobj
Ë=
STREAM_TYPE_MAJOR
)? 1: 0;

67 if((
STATE_READY
 =
	`gë_tck_°©e
(
tmp
)Ë&& (0 !tmp->
œ°_¥ï¨e
)){

69 
tc
->
__tc__ƒ_‰ame
 = 1;

70 if(
tmp
->
œ°_¥ï¨e
 > 
us
){

71 
tc
->
__tc__size
 = 
tmp
->
œ°_¥ï¨e
;

72  -
ENOMEM
;

74 
tc
->
__tc__size
 = 
tmp
->
œ°_¥ï¨e
;

75 
tmp
->
œ°_¥ï¨e
 = 0;

79 
ªåy
:

80 
ƒ_ªady
 = 
vfq
->
›
->
	`gë_cuº_queue_íåy_numbî
(vfq);

81 
thb_poﬁ
->
›
->
	`åy_gë_hódî_buf
—hb_poﬁ,&
thb
);

82 if(!
thb
){

83 
	`dbg
("gë hódî_buf„∏nŸhög i¿%s!\n",
__FUNCTION__
);

84  -
EAGAIN
;

86 
ƒ_hódî
 = 
	`round_low
(
thb
->
unô_size
,
MIN_HEADER_LEN_VIDEO
);

87 
ƒ_ªady
 = 
	`tc_mö
“r_ªady,
ƒ_hódî
);

88 
ƒ_ªady
 = 
	`tc_mö
“r_ªady, 
tq
->
buf_ƒ
);

89 
tc
->
__tc__ƒ_‰ame
 = 0;

90 
idx
 = 0; idx < 
ƒ_ªady
; idx++){

91 
vf
 = 
NULL
;

92 if(!
vfq
->
cuº_c⁄sumî
){

93 
vfq
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(vfq);

94 if(!
vfq
->
cuº_c⁄sumî
){

95 
	`dbg
("c⁄sumî i†NULL %s;\n",
__FUNCTION__
);

96 
tc
->
__tc__size
 = 
buf„r_√ed
;

97 if(
PAGE_SIZE
 !
tc
->
__tc__size
){

101 
thb_poﬁ
->
›
->
	`put_hódî_buf
—hb_poﬁ,
thb
);

102  -
EAGAIN
;

106 if(
tve
->
disˇrd
){

107 if(
H264_FRAME_TYPE_IDR
 !
vfq
->
cuº_c⁄sumî
->
‰ame_ty≥
)

109 
	`¥ötk
("disˇrd fømê%∞\n",
vfq
->
cuº_c⁄sumî
);

110 
vfq
->
›
->
	`ªÀa£_cuº_c⁄sumî
(vfq,&
driv
->
ícode_ch™_buf_poﬁ
);

111 
thb_poﬁ
->
›
->
	`put_hódî_buf
—hb_poﬁ,
thb
);

112 
ªåy
;

116 
tve
->
disˇrd
 = 0;

120 
vfq
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(vfq->cuº_c⁄sumî,&
vf
);

121 
vfq
->
›
->
	`ªÀa£_cuº_c⁄sumî
(vfq,&
driv
->
ícode_ch™_buf_poﬁ
);

122 
tck
 = 
tq
->
bufs
[
idx
];

123 if(
	`gë_tck_°©e
(
tck
Ë=
STATE_READY
){

124 
	`dbg
("BUG:%s,%d\n",
__FUNCTION__
,
__LINE__
);

125  -
EINVAL
;

128 
tck
->
ödex
 = 
idx
;

129 
tck
->
ty≥
 = 
MEM_MMAP
;

130 
tck
->
thb
 =Åhb;

131 
tck
->
hﬁdî
 = 
vf
;

132 if(
H264_FRAME_TYPE_IDR
 =
vf
->
‰ame_ty≥
)

133 
tck
->
size
 = 
vf
->
‰ame_Àn
 + vf->
«l
.
•s_∑ysize
 + vf->«l.
µs_∑ysize
;

135 
tck
->
size
 = 
vf
->
‰ame_Àn
;

137 if((
buf„r_√ed
 + 
	`tc_Æign_up
(
tck
->
size
,
PAGE_SIZE
)Ë> 
us
){

138 if(0 =
idx
){

139 
tc
->
__tc__size
 = 
buf„r_√ed
 + 
	`tc_Æign_up
(
tck
->
size
,
PAGE_SIZE
);

140 
tc
->
__tc__ƒ_‰ame
 = 1;

141 
	`£t_tck_°©e
(
tck
,
STATE_READY
);

142 
no£n£
 = 
	`g©hî_sˇâî_öfo
(
vf
,
tck
);

143 
	`tc_buf„r_£t_h264_d©a
(
is_ma°î
,(
tc_buf„r
 *)(
thb
->
d©a
),
tck
,
vf
,&
off
);

144 
tmp
->
œ°_¥ï¨e
 = 
tc
->
__tc__size
;

145  -
ENOMEM
;

148 
vf
->
›
->
	`ª„ªn˚
(vf,&
vfq
->
cuº_c⁄sumî
);

149 
vf
->
›
->
	`ªÀa£
(&vf,&
driv
->
ícode_ch™_buf_poﬁ
);

150 
tck
->
hﬁdî
 = 
NULL
;

154 
buf„r_√ed
 +
	`tc_Æign_up
(
tck
->
size
,
PAGE_SIZE
);

155 
tc
->
__tc__size
 = 
buf„r_√ed
;

156 
	`£t_tck_°©e
(
tck
,
STATE_READY
);

157 
no£n£
 = 
	`g©hî_sˇâî_öfo
(
vf
,
tck
);

158 
	`tc_buf„r_£t_h264_d©a
(
is_ma°î
,(
tc_buf„r
 *)(
thb
->
d©a
),
tck
,
vf
,&
off
);

159 
tc
->
__tc__ƒ_‰ame
++;

163 
	}
}

168 
	$ve_buf_ªÀa£
(
tc_queue
 * 
tq
, * 
¥iv
, 
tc_buf„r_kîn
 *
tb
)

170 
ªt
 = 0,
idx
,
˙
 = 0;

171 
tw_video_í
 * 
tve
 = (tw_video_í *)
¥iv
;

172 
tw_h264_logic_ícode_ch™
 *
driv
 = 
	`c⁄èöî_of
(
tve
->
tsd
.
≥d
,tw_h264_logic_ícode_ch™, 
›íed_logic_ch™_ed
);

173 
tw_video_ch™_buf_poﬁ_t
 *
vdpoﬁ
 = &
driv
->
ícode_ch™_buf_poﬁ
;

174 
tw_video_‰ame_tcb_t
 *
vf
 = 
NULL
;

175 
tw_video_∑ckë_tcb_t
 *
vp
 = 
NULL
;

176 
tc_buf„r_kîn
 *
tck
 = 
tq
->
bufs
[0];

179 if(!
tck
->
thb
 || !tck->
hﬁdî
){

180 
	`dbg
("övÆidÖ¨amëî†öÅck! -->%s\n",
__FUNCTION__
);

181  -
EINVAL
;

183 
thb_poﬁ
->
›
->
	`put_hódî_buf
—hb_poﬁ,
tck
->
thb
);

185 (
tck
 = 
tq
->
bufs
[
˙
]Ë&& (
STATE_BUSY
 =
	`gë_tck_°©e
(tck))){

186 
idx
 = 0;

188 
tck
->
sg
[
idx
].
ˇºõr
 &&Åck->sg[idx].
addr
 &&Åck->sg[idx].
Àn
){

189 
vp
 = (
tw_video_∑ckë_tcb_t
 *)
tck
->
sg
[
idx
].
ˇºõr
;

190 if(!
vp
->
›
 || !vp->›->
ªÀa£
){

191 
	`¥ötk
("BUG: i¿%† %d----@@@\n",
__FUNCTION__
,
__LINE__
);

192  -
EINVAL
;

194 if(!
vdpoﬁ
){

195 
	`dbg
("encode_chan_buf_pool is NULL!\n");

196  -
EINVAL
;

198 
vp
->
›
->
	`ªÀa£
(&vp,
vdpoﬁ
);

199 
	`mem£t
(&
tck
->
sg
[
idx
],0,(
tc_sˇâî
));

200 
idx
++;

201 if(
idx
 >
SCATTRT_MAX_ENTRY
)

205 
vf
 = (
tw_video_‰ame_tcb_t
 *)
tck
->
hﬁdî
;

206 if(!
vf
->
›
 || !vf->›->
ªÀa£
){

207 
	`¥ötk
("BUG: i¿%† %d----@@@\n",
__FUNCTION__
,
__LINE__
);

208  -
EINVAL
;

210 
vf
->
›
->
	`ªÀa£
(&vf,
vdpoﬁ
);

211 
	`£t_tck_°©e
(
tck
,
STATE_FREE
);

212 
˙
++;

213 if(
˙
 >
tq
->
buf_ƒ
)

216  
ªt
;

217 
	}
}

219 
tc_queue_›s
 
	gve_queue_›s
 =

221 .
buf_¥ï¨e
 = 
ve_buf_¥ï¨e
,

222 .
	gbuf_ªÀa£
 = 
ve_buf_ªÀa£
,

226 
	$h264_í_ªque°_mem‹y
(
fûe
 *
f
,
¨g
)

228 
ªt
 = 0;

230 
tc_buf„r
 *
tc
 = (tc_buf„∏*)
¨g
;

231 
tw_video_í
 * 
tve
 = (tw_video_í *)
f
->
¥iv©e_d©a
;

232 
tc_queue
 *
q
 = 
tve
->
tsd
.
queue
;

236 
	`down
(&
tve
->
£m
);

237 #ifde‡
STATIC_COUNTING


238 
	`gë_lo›_°¨t
((
tw_£rvi˚_devi˚
 *)&
tve
->
tsd
);

240 if(!
q
->
›s
){

241 
	`TW_DBG
(
TW_DBG_ERR
,"tq hasÇo ops!\n");

242 
ªt
 = 
EINVAL
;

243 
out
;

245 if(!
q
->
›s
->
buf_¥ï¨e
){

246 
	`TW_DBG
(
TW_DBG_ERR
,"tq->ops hasÇo buf_prepare!\n");

247 
ªt
 = 
EINVAL
;

248 
out
;

250 
ªt
 = 
q
->
›s
->
	`buf_¥ï¨e
(q,
tve
,
tc
);

251 #ifde‡
STATIC_COUNTING


252 
	`ˇlc_ic_ªq_time
((
tw_£rvi˚_devi˚
 *)&
tve
->
tsd
);

254 
out
:

255 
	`up
(&
tve
->
£m
);

257  
ªt
;

258 
	}
}

264 
	$h264_í_ªÀa£_mem‹y
(
fûe
 *
f
,
¨g
)

266 
ªt
 = 0;

267 
tw_video_í
 * 
tve
 = (tw_video_í *)
f
->
¥iv©e_d©a
;

268 
tc_queue
 *
tq
 = 
tve
->
tsd
.
queue
;

269 
tc_buf„r_kîn
 * 
tck
;

271 
	`down
(&
tve
->
£m
);

272 #ifde‡
STATIC_COUNTING


273 
	`gë_ic_ªl_°¨t
((
tw_£rvi˚_devi˚
 *)&
tve
->
tsd
);

275 
tck
 = 
tq
->
bufs
[0];

276 if(!
tq
->
›s
 || !tq->›s->
buf_ªÀa£
){

277 
	`TW_DBG
(
TW_DBG_ERR
,"no ops orÇo buf_release!\n");

278 
ªt
 = 
EINVAL
;

279 
out
;

283 
ªt
 = 
tq
->
›s
->
	`buf_ªÀa£
—q,
tve
,
tck
);

287 #ifde‡
STATIC_COUNTING


288 
	`ˇlc_ic_ªl_time
((
tw_£rvi˚_devi˚
 *)&
tve
->
tsd
);

289 
	`gë_lo›_íd
((
tw_£rvi˚_devi˚
 *)&
tve
->
tsd
);

291 
out
:

292 
	`up
(&
tve
->
£m
);

293  
ªt
;

294 
	}
}

299 
	$tve_˛ónup
(* 
¨g
)

301 
tw_video_í
 *
tve
 = (tw_video_í *)
¨g
;

303 
tc_åa˚
;

304 
	`tc_queue_ªÀa£
(
tve
->
tsd
.
queue
);

305 
	`k‰ì
(
tve
);

307 
	}
}

310 
tw_h264_logic_ícode_ch™_t
 * 
	$lookup_video_drive_ö°™˚
(
tw_£rvi˚_devi˚
 *
tsd
)

312 
tw_h264_logic_ícode_ch™_t
 *
p
 = 
tsd
->
¥iv©e_d©a
;

313 
ld
 = 
	`gë_phch™_id_‰om_ïobj
(&
tsd
->
ïobj
);

317  &
p
[
ld
];

319 
	}
}

322 
	$video_h264_í_pﬁlög
(*
p
)

324 
tw_video_í
 *
tve
 = (tw_video_í *)
p
;

325 
tw_h264_logic_ícode_ch™
 *
driv
 = 
	`c⁄èöî_of
(
tve
->
tsd
.
≥d
,tw_h264_logic_ícode_ch™, 
›íed_logic_ch™_ed
);

326 
tw_video_‰ame_tcb_queue_t
 *
vfq
 = &
driv
->
ícode_‰ame_queue
;

329 
ƒ
 = 
vfq
->
›
->
	`gë_cuº_queue_íåy_numbî
(vfq);

330 if(
ƒ
)

333 
	`wake_up
(&
tve
->
waô_pﬁl
);

341 
	}
}

343 
	$videoh264_í_›í
(
tw_£rvi˚_devi˚
 *
tsd
,
fûe
 *
f
)

345 
ªt
 = 0;

346 
ed_tcb_t
 *
vìd
;

347 
tw_video_í
 *
tve
 = 
	`c⁄èöî_of
(
tsd
,tw_video_en,tsd);

351 if(!
tve
->
tsd
.
≥d
){

352 
	`dbg
("video dev hasÇo driveráttached!\n");

353 
ªt
 = -1;

354  
ªt
;

356 
tve
->
timî_id
 = 
	`AddF‹FúeTimîJob
(12,
video_h264_í_pﬁlög
,tve);

357 if(
tve
->
timî_id
 =
ADDJOBERROR
){

358 
	`¥ötk
("ö %†addÅimî job faûed!\n",
__FUNCTION__
);

359 
ªt
 = -1;

360  
ªt
;

362 
vìd
 = 
tve
->
tsd
.
≥d
;

363 
ªt
 = 
vìd
->
›
->
	`›í
(veed);

364 if(
ªt
 !
TW_OK
){

365 
	`¥ötk
("ö %†audio_drivî o≥¿Áûed!\n",
__FUNCTION__
);

366 
ªt
 = -1;

367  
ªt
;

369 
f
->
¥iv©e_d©a
 = 
tve
;

372  
ªt
;

373 
	}
}

377 
ssize_t
 
	$videoh264_í_ªad
(
fûe
 *
f
,
__u£r
 *
buff
,
size_t
 
cou¡
, 
loff_t
 * 
lof
)

379 
ssize_t
 
off£t
 = 0;

380 
tw_video_í
 *
tve
 = (tw_video_í *)
f
->
¥iv©e_d©a
;

381 
tw_h264_logic_ícode_ch™
 *
driv
 = 
	`c⁄èöî_of
(
tve
->
tsd
.
≥d
,tw_h264_logic_ícode_ch™, 
›íed_logic_ch™_ed
);

382 
tw_video_ch™_buf_poﬁ_t
 *
vdpoﬁ
 = &
driv
->
ícode_ch™_buf_poﬁ
;

383 
tw_video_‰ame_tcb_queue_t
 *
vfq
 = &
driv
->
ícode_‰ame_queue
;

384 
tw_video_‰ame_tcb_t
 *
vf
 = 
NULL
;

385 
size_t
 
˙
 = 
cou¡
;

386 
size_t
 
mö
 = (
tw_‰ame_hódî_t
Ë+ 
vdpoﬁ
->
video_∑ckë_buf„r_size
;

387 
loff_t
 
‰ame_off£t
;

390 
	`down
(&
tve
->
£m
);

391 
˙
 > 
mö
)

393 
vfq
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(vfq);

394 
vf
 = 
vfq
->
cuº_c⁄sumî
;

395 if(
vf
){

396 
‰ame_off£t
 = 0;

397 
vf
->
›
->
	`submô
(vf,&
buff
[
off£t
],
˙
,&
‰ame_off£t
,
TW_MASTER_BITSTREAM
,
vdpoﬁ
);

398 
vfq
->
›
->
	`ªÀa£_cuº_c⁄sumî
(vfq,
vdpoﬁ
);

399 
off£t
 +
‰ame_off£t
;

400 
˙
 -
‰ame_off£t
;

405 
	`TW_DBG
(
TW_DBG_ERR
,"ˇ¿nŸ gë cunsumî i¿%s\n",
__FUNCTION__
);

406 
out
;

409 
out
:

410 
	`up
(&
tve
->
£m
);

411 *
lof
 = 
off£t
;

413  
off£t
;

414 
	}
}

418 
ssize_t
 
	$videoh264_í_wrôe
 (
fûe
 *
f
, c⁄° 
__u£r
 *
buff
, 
size_t
 
cou¡
, 
loff_t
 *
lof
)

421 
	}
}

423 
	$videoh264_í_io˘l
 (
fûe
 *
f
, 
cmd
, 
¨g
)

425 
ªt
 = 0;

426 
tw_video_í
 *
tve
 = (tw_video_í *)
f
->
¥iv©e_d©a
;

427 
ídpoöt_tcb
 *
ed
;

428 
tc_queue
 *
tq
 = 
tve
->
tsd
.
queue
;

429 
tc_buf„r_kîn
 * 
tck
;

434 
cmd
)

436 
TW_CODEC_CHAN_REQUEST_MEM
:

437 
ªt
 = 
	`h264_í_ªque°_mem‹y
(
f
,
¨g
);

439 
TW_CODEC_CHAN_RELEASE_MEM
:

440 
ªt
 = 
	`h264_í_ªÀa£_mem‹y
(
f
,
¨g
);

442 
TW_CODEC_CHAN_DISCAED_FRAME
:

443 
tve
->
disˇrd
 = 1;

444 
	`£t_tq_°©e_busy
(
tq
);

445 
tck
 = 
tq
->
bufs
[0];

446 
ªt
 = 
tq
->
›s
->
	`buf_ªÀa£
—q,
tve
,
tck
);

447 if(
ªt
)

448 
	`¥ötk
("discard frame ---release failed!\n");

451 
	`TW_DBG
(
TW_DBG_ERR
,"Ÿhî cmd i¿%s\n",
__FUNCTION__
);

452 if(!
tve
->
tsd
.
≥d
){

453 
	`¥ötk
("the device hasÇo driverÉd!\n");

454 
ªt
 = 
EFAULT
;

457 
ed
 = 
tve
->
tsd
.
≥d
;

458 
ªt
 = 
ed
->
›
->
	`io˘l
”d,
cmd
,
¨g
);

462  
ªt
;

463 
	}
}

468 
	$videoh264_í_ªÀa£
(
fûe
 *
f
)

470 
ªt
;

471 
ed_tcb_t
 *
vìd
;

472 
tw_video_í
 *
tve
 = (tw_video_í *)
f
->
¥iv©e_d©a
;

475 
tc_åa˚
;

476 
	`down
(&
tve
->
£m
);

477 
	`tc_queue_ª£t
(
tve
->
tsd
.
queue
);

478 
vìd
 = 
tve
->
tsd
.
≥d
;

479 
ªt
 = 
vìd
->
›
->
	`˛o£
(veed);

480 
	`DñëeF‹FúeTimîJob
(
tve
->
timî_id
);

481 
tve
->
timî_id
 = 
INVALIDTIMERID
;

483 
	`up
(&
tve
->
£m
);

484 
f
->
¥iv©e_d©a
 = 
NULL
;

485  
ªt
;

486 
	}
}

490 
	$videoh264_í_pﬁl
(
fûe
 *fûe, 
pﬁl_èbÀ_°ru˘
 *
waô
)

492 
mask
 = 0;

493 
tw_video_í
 *
tve
 = (tw_video_í *)
fûe
->
¥iv©e_d©a
;

494 
tw_h264_logic_ícode_ch™
 *
driv
 = 
	`c⁄èöî_of
(
tve
->
tsd
.
≥d
,tw_h264_logic_ícode_ch™, 
›íed_logic_ch™_ed
);

495 
tw_video_‰ame_tcb_queue_t
 *
vfq
 = &
driv
->
ícode_‰ame_queue
;

498 
	`down
(&
tve
->
£m
);

501 
	`pﬁl_waô
(
fûe
,&
tve
->
waô_pﬁl
,
waô
);

502 if(
vfq
->
›
->
	`gë_cuº_queue_íåy_numbî
(vfq))

503 
mask
 |
POLLIN
 | 
POLLRDNORM
;

504 
	`up
(&
tve
->
£m
);

505  
mask
;

506 
	}
}

511 
	$videoh264_í_öô
(
tw_chù_devi˚
 *
tcd
,
cmd_¨g
 *
¨g
,
tw_£rvi˚_devi˚
 **
tsd
)

513 
ªt
;

514 
tw_video_í
 *
tve
;

516 
tc_åa˚
;

517 
tve
 = 
	`kzÆloc
((*tve),
GFP_KERNEL
);

518 if(
NULL
 =
tve
)

519  -
ENOMEM
;

520 
	`dbg
("öô_tve[%8p]\n",
tve
);

521 *
tsd
 = &
tve
->tsd;

523 
tve
->
tsd
.
˛ón_up
 = 
tve_˛ónup
;

524 
tve
->
«me
 = "tw5864-h264master_encoder";

525 
tve
->
u£rs
 = 1;

528 
	`öô_MUTEX
(&
tve
->
£m
);

529 
	`öô_waôqueue_hód
(&
tve
->
waô_pﬁl
);

537 
tve
->
tsd
.
queue
 = 
	`kzÆloc
((
tc_queue
),
GFP_KERNEL
);

538 if(
NULL
 =
tve
->
tsd
.
queue
)

539  -
ENOMEM
;

541  
	`tc_queue_öô
(
tve
->
tsd
.
queue
,&
ve_queue_›s
,
NULL
,512*1024,10,tve);

542 
	}
}

544 
	$videoh264_í_de°‹y
(
tw_£rvi˚_devi˚
 *
tsd
)

546 
tw_video_í
 *
tve
;

547 
tc_åa˚
;

549 if(!
tsd
)

551 
tve
 = 
	`c⁄èöî_of
(
tsd
,
tw_video_í
,tsd);

552 if(
tve
->
tsd
.
queue
)

553 
	`k‰ì
(
tve
->
tsd
.
queue
);

554 
	`k‰ì
(
tve
);

555 
	}
}

559 
	$tc_video_í_ªad
(*
∑ge
, **
°¨t
, 
off_t
 
off
,
cou¡
, *
eof
, *
d©a
)

561 
Àn
 = 0;

562 
tw_dev_id
 *
id
 = (tw_dev_id *)
d©a
;

563 
li°_hód
 *
p
,*
q
,*
tmp
,*
lh
;

564 
tw_chù_devi˚
 *
tcd
;

565 
tw_£rvi˚_devi˚
 *
tsd
;

566 
ty≥
 = 
TW_ENCODER
 - 1;

569 
	`lock_chùdev
();

570 
Àn
 +
	`•rötf
(
∑ge
 +Üen,"%10s %10s %10s %10s %10s\n","req_time", "map_time", "rel_time", "min", "max");

572 
lh
 = 
	`gë_chùdev_li°hód
();

573 
	`li°_f‹_óch
(
p
,
lh
){

574 
tcd
 = 
	`c⁄èöî_of
(
p
,
tw_chù_devi˚
, 
li°
);

575 
tmp
 = &
tcd
->
tsd_li°
[
ty≥
];

576 
	`li°_f‹_óch
(
q
,
tmp
){

577 
tsd
 = 
	`c⁄èöî_of
(
q
,
tw_£rvi˚_devi˚
,
li°
);

578 if(
	`ïobj_euqÆ
(&
tsd
->
ïobj
,&
id
->epobj)){

579 
Àn
 +
	`•rötf
(
∑ge
 +Üí, "%10u %10u %10u %10u %10u\n", 
tsd
->
b_ôvÆ
.
ic_ªq_time
,Åsd->b_ôvÆ.
ic_m≠_time
,

580 
tsd
->
b_ôvÆ
.
ic_ªl_time
,Åsd->b_ôvÆ.
mö
,Åsd->b_ôvÆ.
max
);

584 
	`u∆ock_chùdev
();

586  
Àn
;

587 
	}
}

598 
tsd_fûe_›î©i⁄s
 
	gvideoh264_í_f›s
 = {

599 .
ow√r
 = 
THIS_MODULE
,

600 .
	göô
 = 
videoh264_í_öô
,

601 .
	gde°‹y

videoh264_í_de°‹y
,

602 .
	g›í
 = 
videoh264_í_›í
,

603 .
	gªad
 = 
videoh264_í_ªad
,

604 .
	gwrôe
 = 
videoh264_í_wrôe
,

605 .
	gio˘l
 = 
videoh264_í_io˘l
,

606 .
	gªÀa£

videoh264_í_ªÀa£
,

607 .
	gpﬁl
 = 
videoh264_í_pﬁl
,

610 
tw_dev_id
 
	gtw_videoh264_í_id
 = {

611 .
ïobj
 = {

612 .
víd‹_id
 = 
TWELL
,

613 .
	gbus_id
 = 1,

614 .
	gchù_id
 = 
TW5864
,

615 .
	gfunc_id
 = (
STREAM_TYPE_MAJOR
 << 16Ë| 
CODEC_VIDEO_H264
,

616 .
	gty≥
 = 
TW_ENCODER
,

617 .
	gkey
 = {0},

619 .
	gvîsi⁄
 = 0,

624 
tw_dev_id
 
	gtw_videoh264s_í_id
 = {

625 .
ïobj
 = {

626 .
víd‹_id
 = 
TWELL
,

627 .
	gbus_id
 = 1,

628 .
	gchù_id
 = 
TW5864
,

629 .
	gfunc_id
 = (
STREAM_TYPE_MINOR
 << 16Ë| 
CODEC_VIDEO_H264
,

630 .
	gty≥
 = 
TW_ENCODER
,

631 .
	gkey
 = {0},

633 .
	gvîsi⁄
 = 0,

637 
tw_dev_èbÀ_id
 *
	gtve_èbÀ
 = 
NULL
;

638 
tw_dev_èbÀ_id
 *
	gtve_sub_èbÀ
 = 
NULL
;

639 
tw_¥oc_ªgi°î_s
 *
	gtc_video
 = 
NULL
;

640 
tw_¥oc_ªgi°î_s
 *
	gtc_sub_video
 = 
NULL
;

643 
	$tw_videoh264_í_öô
(* 
d©a
)

645 
ªt
 = 0;

646 
tw_h264_logic_ícode_ch™
 *
h264
 = (tw_h264_logic_ícode_ch™ *)
d©a
;

647 
dvm_chù_t
 *
chù
 = 
	`c⁄èöî_of
(
h264
,dvm_chù_t,
h264_ma°î_ícode_logic_ch™
);

650 
tve_èbÀ
 = 
	`kzÆloc
((
tw_dev_èbÀ_id
),
GFP_KERNEL
);

651 if(!
tve_èbÀ
){

652 
	`TW_DBG
(
TW_DBG_ERR
,"nÿmem i¿%s\n",
__FUNCTION__
);

653 
îr
;

655 
	`INIT_LIST_HEAD
(&
tve_èbÀ
->
li°
);

656 
tve_èbÀ
->
tid
 = &
tw_videoh264_í_id
;

657 
tve_èbÀ
->
›s
 = &
videoh264_í_f›s
;

658 
tve_èbÀ
->
∑ø
 = 
d©a
;

660 
ªt
 = 
	`ªgi°î_tc_devi˚
(
tve_èbÀ
);

661 if(
ªt
)

662 
îr1
;

664 
tc_video
 = 
	`kzÆloc
((*tc_video),
GFP_KERNEL
);

665 if(!
tc_video
)

666 
îr1
;

667 
	`°r˝y
(
tc_video
->
«me
,"tc_video_en");

668 
tc_video
->
ªad
 = 
tc_video_í_ªad
;

669 
tc_video
->
wrôe
 = 
NULL
;

670 
tc_video
->
¥iv©e
 = &
tw_videoh264_í_id
;

671 
ªt
 = 
	`tw_moduÀ_ªgi°î
(
chù
,
tc_video
);

672 if(
ªt
)

673 
îr1
;

674  
ªt
;

676 
îr1
:

677 if(
tc_video
)

678 
	`k‰ì
(
tc_video
);

679 
	`tw_videoh264_í_ªmove
(
d©a
);

680 
îr
:

681 if(
tve_èbÀ
)

682 
	`k‰ì
(
tve_èbÀ
);

684  
ªt
;

685 
	}
}

687 
	$tw_videoh264_í_ªmove
(*
d©a
)

689 
tc_åa˚
;

690 if(
tc_video
 && 
d©a
)

691 
	`tw_moduÀ_uƒegi°î
((
dvm_chù_t
 *)
d©a
,
tc_video
);

692 if(
tve_èbÀ
)

693 
	`uƒegi°î_tc_devi˚
(
tve_èbÀ
);

694 
tve_èbÀ
 = 
NULL
;

695 
	}
}

697 
	$tw_videoh264s_í_öô
(* 
d©a
)

699 
ªt
 = 0;

700 
tve_sub_èbÀ
 = 
	`kzÆloc
((
tw_dev_èbÀ_id
),
GFP_KERNEL
);

701 if(!
tve_sub_èbÀ
){

702 
	`TW_DBG
(
TW_DBG_ERR
,"nÿmem i¿%s\n",
__FUNCTION__
);

703  -
ENOMEM
;

705 
	`INIT_LIST_HEAD
(&
tve_sub_èbÀ
->
li°
);

706 
tve_sub_èbÀ
->
tid
 = &
tw_videoh264s_í_id
;

707 
tve_sub_èbÀ
->
›s
 = &
videoh264_í_f›s
;

708 
tve_sub_èbÀ
->
∑ø
 = 
d©a
;

710 
ªt
 = 
	`ªgi°î_tc_devi˚
(
tve_sub_èbÀ
);

711  
ªt
;

712 
	}
}

714 
	$tw_videoh264s_í_ªmove
(* 
d©a
)

716 if(
tve_sub_èbÀ
)

717 
	`uƒegi°î_tc_devi˚
(
tve_sub_èbÀ
);

718 
tve_sub_èbÀ
 = 
NULL
;

719 
	}
}

	@../../tw5864/device_layer/video_en_driver.c

1 
	~<tw5864/tc_comm⁄.h
>

3 
	$tw_video_í_drivî_öô
(
tw_chù_devi˚
 *
tcd
,
tw_£rvi˚_devi˚
 * 
tsd
,* 
∑ø
,
cmd_¨g
 *
¨g
)

5 
ªt
;

6 
bus_id
,
chù_id
,
lg_id
;

7 
dvm_chù_t
 *
chù
 = (dvm_chù_à*)
∑ø
;

8 
tw_h264_logic_ícode_ch™_t
 *
ved
;

10 
bus_id
 = 
	`gë_busid_‰om_ïobj
(&
tcd
->
ïobj
);

11 
chù_id
 = 
	`gë_chùid_‰om_ïobj
(&
tcd
->
ïobj
);

12 
lg_id
 = 
¨g
->
ch™√l_idx
;

14 
ved
 = 
chù
->
h264_ma°î_ícode_logic_ch™
;

15 
ved
 +
lg_id
;

17 
	`¥ötk
("ved[0x%8p]Üogic_id =%dö %s---> \n",
ved
,
lg_id
, 
__FUNCTION__
);

18 
ªt
 = 
	`öô_tw5864_h264_ícode_ch™
(
ved
, 
chù
->
bus_id
, chù->
chù_id
, 
lg_id
, 
TW_MASTER_BITSTREAM
, chip);

19 if(
ªt
){

20 
	`dbg
("h264 master driv init failed!\n");

21  
ªt
;

23 
tsd
->
≥d
 = &
ved
->
›íed_logic_ch™_ed
;

24  
ªt
;

25 
	}
}

28 
	$tw_video_í_drivî_ªmove
(
tw_chù_devi˚
 *
tcd
,
tw_£rvi˚_devi˚
 * 
tsd
,* 
∑ø
,
cmd_¨g
 *
¨g
)

30 
tw_h264_logic_ícode_ch™_t
 *
vd
;

32 
tc_åa˚
;

33 if(!
tsd
->
≥d
){

34 
	`dbg
("tsd hasÇoÉd!\n");

37 
vd
 = 
	`c⁄èöî_of
(
tsd
->
≥d
,
tw_h264_logic_ícode_ch™_t
,
›íed_logic_ch™_ed
);

38 
	`ªmove_tw5864_h264_ícode_ch™
(
vd
);

39 
	}
}

42 
tw_dev_id
 
	gtw_video_í_dev_id
 =

44 .
ïobj
 = {

45 .
víd‹_id
 = 
TWELL
,

46 .
	gbus_id
 = 1,

47 .
	gchù_id
 = 
TW5864
,

48 .
	gfunc_id
 = 
STREAM_TYPE_MAJOR
 | 
CODEC_VIDEO_H264
,

49 .
	gty≥
 = 
TW_ENCODER
,

51 .
	gvîsi⁄
 = 1,

55 
tsd_drivî_›î©i⁄s
 
	gtw_video_í_›s
 =

57 .
öô
 = 
tw_video_í_drivî_öô
,

58 .
	gªmove
 = 
tw_video_í_drivî_ªmove
,

61 
tw_£rvi˚_drivî
 
	gtw_video_í_driv
 =

63 .
drivî
 = {

64 .
«me
 = "tw5864_video_driv",

66 .
	gdevi˚_id
 = {

67 .
tid
 = &
tw_video_í_dev_id
,

68 .
	g›s
 = &
tw_video_í_›s
,

74 
	$tw5864_video_í_drivî_öô
(* 
∑ø
)

76 
tc_åa˚
;

77 
tw_video_í_driv
.
devi˚_id
.
∑ø
 =Öara;

78  
	`ªgi°î_tc_drivî
(&
tw_video_í_driv
);

79 
	}
}

82 
	$tw5864_video_í_drivî_ªmove
()

84 
	`uƒegi°î_tc_drivî
(&
tw_video_í_driv
);

85 
	}
}

96 
	$tw_videosub_í_drivî_öô
(
tw_chù_devi˚
 *
tcd
,
tw_£rvi˚_devi˚
 * 
tsd
,* 
∑ø
,
cmd_¨g
 *
¨g
)

98 
ªt
;

99 
bus_id
,
chù_id
,
lg_id
;

100 
dvm_chù_t
 *
chù
 = (dvm_chù_à*)
∑ø
;

101 
tw_h264_logic_ícode_ch™_t
 *
ved
;

103 
bus_id
 = 
	`gë_busid_‰om_ïobj
(&
tcd
->
ïobj
);

104 
chù_id
 = 
	`gë_chùid_‰om_ïobj
(&
tcd
->
ïobj
);

105 
lg_id
 = 
¨g
->
ch™√l_idx
;

107 
ved
 = 
chù
->
h264_sub_ícode_logic_ch™
;

108 
ved
 +
lg_id
;

110 
	`¥ötk
("ved[0x%8p] i¿%s---> \n",
ved
, 
__FUNCTION__
);

111 
ªt
 = 
	`öô_tw5864_h264_ícode_ch™
(
ved
, 
chù
->
bus_id
, chù->
chù_id
, 
lg_id
, 
TW_SUB_BITSTREAM
, chip);

112 if(
ªt
){

113 
	`dbg
("sub h264 driv init failed!\n");

114  
ªt
;

116 
tsd
->
≥d
 = &
ved
->
›íed_logic_ch™_ed
;

117  
ªt
;

118 
	}
}

122 
tw_dev_id
 
	gtw_videosub_í_dev_id
 =

124 .
ïobj
 = {

125 .
víd‹_id
 = 
TWELL
,

126 .
	gbus_id
 = 1,

127 .
	gchù_id
 = 
TW5864
,

128 .
	gfunc_id
 = (
STREAM_TYPE_MINOR
 << 16Ë| 
CODEC_VIDEO_H264
,

129 .
	gty≥
 = 
TW_ENCODER
,

131 .
	gvîsi⁄
 = 1,

135 
tsd_drivî_›î©i⁄s
 
	gtw_videosub_í_›s
 =

137 .
öô
 = 
tw_videosub_í_drivî_öô
,

140 
tw_£rvi˚_drivî
 
	gtw_videosub_í_driv
 =

142 .
drivî
 = {

143 .
«me
 = "tw5864_videosub_driv",

145 .
	gdevi˚_id
 = {

146 .
tid
 = &
tw_videosub_í_dev_id
,

147 .
	g›s
 = &
tw_videosub_í_›s
,

153 
	$tw5864_videosub_í_drivî_öô
(* 
∑ø
)

155 
tc_åa˚
;

156 
tw_videosub_í_driv
.
devi˚_id
.
∑ø
 =Öara;

157  
	`ªgi°î_tc_drivî
(&
tw_videosub_í_driv
);

158 
	}
}

161 
	$tw5864_videosub_í_drivî_ªmove
()

163 
	`uƒegi°î_tc_drivî
(&
tw_videosub_í_driv
);

164 
	}
}

	@../../tw5864/include/tw5864/HalSoftTimerLib.h

1 #i‚de‡
__HALSOFTTIMERLIB_H


2 
	#__HALSOFTTIMERLIB_H


	)

4 #ifde‡
__˝lu•lus


9 
	#MAXSINGLEFIREQUEUENUM
 (128)

	)

10 
	#MAXFORFIREQUEUENUM
 (128)

	)

12 
	#ADDJOBERROR
 (
MAXSINGLEFIREQUEUENUM
+2)

	)

13 
	#GETFREETMCBERROR
 
ADDJOBERROR


	)

14 
	#INVALIDTIMERID
 
ADDJOBERROR


	)

16 (*
timîHook
)(* 
	tc⁄ãxt
);

18 
Re£tSig«lTimî
();

19 
Re£tF‹Timî
();

20 
AddSögÀFúeTimîJob
(
__u32
 
tick
, 
timîHook
 
fun
, * 
c⁄ãxt
);

21 
DñëeSögÀFúeTimîJob
(
ödex
);

22 
AddF‹FúeTimîJob
(
__u32
 
tick
, 
timîHook
 
fun
, * 
c⁄ãxt
);

23 
DñëeF‹FúeTimîJob
(
ödex
);

24 
TigîSögÀFúeTimî
();

25 
TigîF‹FúeTimî
();

26 
u32
 
gë_tw_sy°em_tick
();

27 
åiggî_timî0_dma
();

29 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/algo_h264_driver.h

1 #i‚def 
ALGO_NAL_DRIVER_H


2 
	#ALGO_NAL_DRIVER_H


	)

4 #ifde‡
__˝lu•lus


9 
	#SLICE_HEAD_BUF_SIZE
 (128)

	)

10 #ifde‡ 
ADD_DVM_NAL_HEAD


11 
	#NAL_HEAD_LEN
 (12)

	)

13 
	#NAL_HEAD_LEN
 (8)

	)

15 
	#MAX_SPS_RBSP_LEN
 (
SLICE_HEAD_BUF_SIZE
-
NAL_HEAD_LEN
)

	)

16 
	#MAX_PPS_RBSP_LEN
 
MAX_SPS_RBSP_LEN


	)

17 
	#MAX_SLICE_HEAD_LEN
 
MAX_SPS_RBSP_LEN


	)

19 
	#NAL_FILL_ZERO_NUM
 0

	)

20 
	e¥ofûe_e


22 
PROFILE_BASELINE
 = 66,

23 
PROFILE_MAIN
 = 77,

24 
PROFILE_EXTENTED
 = 88,

25 
PROFILE_HIGH
 = 100,

26 
PROFILE_HIGH10
 = 110,

27 
PROFILE_HIGH422
 = 122,

28 
PROFILE_HIGH444
 = 144

31 
	e«l_unô_ty≥
 {

32 
NAL_UNKNOWN
 = 0,

33 
NAL_SLICE
 = 1,

34 
NAL_SLICE_DPA
 = 2,

35 
NAL_SLICE_DPB
 = 3,

36 
NAL_SLICE_DPC
 = 4,

37 
NAL_SLICE_IDR
 = 5,

38 
NAL_SEI
 = 6,

39 
NAL_SPS
 = 7,

40 
NAL_PPS
 = 8,

41 
NAL_AUD
 = 9,

42 
NAL_SERIAL_OVER
 = 10,

43 
NAL_STREAM_OVER
 = 11,

44 
NAL_PADDING
 = 12,

45 
NAL_TYPE_EX_PIC
 = 24,

46 
NAL_TYPE_EX_VIDEO
 = 25,

47 
NAL_TYPE_EX_AUDIO
 = 26,

48 
NAL_TYPE_EX_MV
 = 27

51 
	eDVM_NAL_TYPE_EX_PIC
{

52 
NAL_TYPE_EX_P_MJPEG
 = 0x80,

53 
NAL_TYPE_EX_P_BMP
 = 0x81,

56 
	eDVM_NAL_TYPE_EX_V
{

57 
NAL_TYPE_EX_V_MPEG
 = 0x90,

60 
	eDVM_NAL_TYPE_EX_A
{

61 
NAL_TYPE_EX_A_PCM
 = 0xC0,

62 
NAL_TYPE_EX_A_ALAW
 = 0xC1,

63 
NAL_TYPE_EX_A_ULAW
 = 0xC2,

64 
NAL_TYPE_EX_A_ADPCM
 = 0xC3,

65 
NAL_TYPE_EX_A_IMAADPCM
 = 0xC4,

68 
	eDVM_NAL_TYPE_EX_MV
{

69 
NAL_TYPE_EX_MV_D1
 = 0xD1,

72 
	e«l_¥i‹ôy


74 
NAL_PRIORITY_DISPOSABLE
 = 0,

75 
NAL_PRIORITY_LOW
 = 1,

76 
NAL_PRIORITY_HIGH
 = 2,

77 
NAL_PRIORITY_HIGHEST
 = 3

80 
	eedvm_«l_ty≥


82 
DVM_NAL_UNKNOWN
 = 0,

83 
DVM_NAL_MV
 = 0x50,

84 
DVM_NAL_MJPEG
 = 0x80,

85 
DVM_NAL_BMP
 = 0x81,

86 
DVM_NAL_SPS
 = 0xA0,

87 
DVM_NAL_PPS
 = 0xA1,

88 
DVM_NAL_SLICE
 = 0xB0,

89 
DVM_NAL_SLICE_IDR
 = 0xB1,

90 
DVM_NAL_SLICE_DPA
 = 0xB2,

91 
DVM_NAL_SLICE_DPB
 = 0xB3,

92 
DVM_NAL_SLICE_DPC
 = 0xB4,

93 
DVM_NAL_SLICE_P
 = 0xB5,

94 
DVM_NAL_SLICE_I
 = 0xB6,

95 
DVM_NAL_AUDIO_PCM
 = 0xC0,

96 
DVM_NAL_AUDIO_ALAW
 = 0xC1,

97 
DVM_NAL_AUDIO_ULAW
 = 0xC2,

98 
DVM_NAL_AUDIO_ADPCM
 = 0xC3,

99 
DVM_NAL_AUDIO_IMAADPCM
 = 0xC4,

102 #ifde‡ 
ADD_DVM_NAL_HEAD


103 
	s_èg_dvm_«l_hód
 {

104 
u8
 
e_«l_ty≥
;

105 
u8
 
i_«l_size_0_7
;

106 
u8
 
i_«l_size_8_15
;

107 
u8
 
i_«l_size_16_23
;

108 }
STRUCT_PACKET_ALIGN
(1);

111 
	s«l_öfo
{

112 #i‡
NAL_FILL_ZERO_NUM


113 
__u8
 
zîo1
;

114 
__u8
 
zîo2
;

116 
__u8
 
zîo3
;

117 
__u8
 
zîo4
;

118 
__u8
 
zîo5
;

119 
__u8
 
c⁄°™t_vÆue_1
;

120 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

121 
__u8
 
«l_unô_ty≥
 : 5;

122 
__u8
 
«l_ªf_idc
 : 2;

123 
__u8
 
f‹biddí_zîo_bô
 : 1;

124 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

125 
__u8
 
f‹biddí_zîo_bô
 : 1;

126 
__u8
 
«l_ªf_idc
 : 2;

127 
__u8
 
«l_unô_ty≥
 : 5;

129 #îr‹ 
⁄e
 
of
 
__LITTLE_ENDIAN_BITFIELD
 
‹
 
__BIG_ENDIAN_BITFIELD
 
mu°
 
be
 
deföed


131 }
	tSTRUCT_PACKET_ALIGN
(1Ë
	tNAL_INFO
;

133 
	sh264_«l_hód
{

134 #ifde‡ 
ADD_DVM_NAL_HEAD


135 
DVM_NAL_HEAD
 
hód
;

137 
H264_NAL_INFO
 
«l
;

138 
u8
 
rb•
[0];

139 }
STRUCT_PACKET_ALIGN
(1);

141 
	sext_h264_«l_hód
{

142 #ifde‡ 
ADD_DVM_NAL_HEAD


143 
DVM_NAL_HEAD
 
hód
;

145 
H264_NAL_INFO
 
«l
;

146 
u8
 
ext_ty≥
;

147 
u8
 
rb•
[0];

148 }
STRUCT_PACKET_ALIGN
(1);

150 
	sh264_«l
 {

151 
i_ªf_idc
;

152 
i_ty≥
;

153 
i_ãmp_bôÆign_numbî
;

154 
__u32
 
i_ãmp_bôÆign_c⁄ã¡
;

155 
__u8
 *
¶i˚_hód_buf
;

156 
__u8
 *
•s_∑ylﬂd
;

157 
•s_∑ysize
;

158 
__u8
 *
µs_∑ylﬂd
;

159 
µs_∑ysize
;

160 
__u8
 *
¶i˚_∑ylﬂd
;

161 
¶i˚_∑ysize
;

164 
	sh264_•s


166 
i_¥ofûe_idc
;

167 
b_c⁄°øöt_£t0
;

168 
b_c⁄°øöt_£t1
;

169 
b_c⁄°øöt_£t2
;

170 
i_Àvñ_idc
;

171 
i_id
;

172 
i_log2_max_‰ame_num
;

173 
i_poc_ty≥
;

175 
i_log2_max_poc_lsb
;

177 
b_dñè_pic_‹dî_Æways_zîo
;

178 
i_off£t_f‹_n⁄_ªf_pic
;

179 
i_off£t_f‹_t›_to_bŸtom_fõld
;

180 
i_num_ªf_‰ames_ö_poc_cy˛e
;

181 
i_off£t_f‹_ªf_‰ame
[256];

183 
i_num_ªf_‰ames
;

184 
b_g≠s_ö_‰ame_num_vÆue_Ælowed
;

185 
i_mb_width
;

186 
i_mb_height
;

187 
b_‰ame_mbs_⁄ly
;

188 
b_mb_ad≠tive_‰ame_fõld
;

189 
b_dúe˘8x8_ö„ªn˚
;

191 
b_¸›
;

192 
b_vui
;

195 
	sh264_µs


197 
i_id
;

198 
i_•s_id
;

200 
b_ˇbac
;

202 
b_pic_‹dî
;

203 
i_num_¶i˚_groups
;

205 
i_num_ªf_idx_l0_a˘ive
;

206 
i_num_ªf_idx_l1_a˘ive
;

208 
b_weighãd_¥ed
;

209 
b_weighãd_bùªd
;

211 
i_pic_öô_qp
;

212 
i_pic_öô_qs
;

214 
i_chroma_qp_ödex_off£t
;

216 
b_deblockög_fûãr_c⁄åﬁ
;

217 
b_c⁄°øöed_öåa_¥ed
;

218 
b_ªdund™t_pic_˙t
;

221 
	e¶i˚_ty≥


223 
SLICE_TYPE_P
 = 0,

224 
SLICE_TYPE_B
 = 1,

225 
SLICE_TYPE_I
 = 2,

226 
SLICE_TYPE_SP
 = 3,

227 
SLICE_TYPE_SI
 = 4

230 
	sh264_¶i˚_hódî


232 
h264_•s_t
 *
•s
;

233 
h264_µs_t
 *
µs
;

235 
i_ty≥
;

236 
i_fú°_mb
;

237 
i_œ°_mb
;

238 
i_µs_id
;

239 
i_‰ame_num
;

240 
b_fõld_pic
;

241 
b_bŸtom_fõld
;

242 
i_idr_pic_id
;

243 
i_poc_lsb
;

244 
i_dñè_poc_bŸtom
;

245 
i_dñè_poc
[2];

246 
i_ªdund™t_pic_˙t
;

247 
b_dúe˘_•©ül_mv_¥ed
;

248 
b_num_ªf_idx_ovîride
;

249 
i_num_ªf_idx_l0_a˘ive
;

250 
i_num_ªf_idx_l1_a˘ive
;

251 
b_ªf_pic_li°_ª‹dîög_l0
;

252 
b_ªf_pic_li°_ª‹dîög_l1
;

255 
idc
;

256 
¨g
;

257 }
ªf_pic_li°_‹dî
[2][16];

259 
i_ˇbac_öô_idc
;

260 
i_qp_dñè
;

261 
b_•_f‹_swidth
;

262 
i_qs_dñè
;

265 
i_dißbÀ_deblockög_fûãr_idc
;

266 
i_Æpha_c0_off£t
;

267 
i_bëa_off£t
;

271 
gí_h264_•s
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
tw_video_‰ame_tcb_t
 *
‰ame
);

272 
gí_h264_µs
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
tw_video_‰ame_tcb_t
 *
‰ame
);

273 
gí_h264_¶i˚hód
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
tw_video_‰ame_tcb_t
 *
‰ame
, 
‰ame_ty≥
);

274 
gí_ext_«l_audio_hódî
(*
buf
, 
audio_ty≥
, 
Àn
);

275 
gí_ext_mj≥g_hódî
(*
buf
, 
Àn
);

276 
gí_ext_mv_hódî
(*
buf
, 
Àn
);

279 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/bar_ctl.h

1 #i‚de‡
__CROSSBAR_CTROL_H__


2 
	#__CROSSBAR_CTROL_H__


	)

4 #ifde‡
__˝lu•lus


10 
	#TW_MAX_VI
 16

	)

12 
	#TW_MAX_GRP
 4

	)

14 
	#TW_MAX_CAPABILITY
 (7)

	)

16 
	#TW_BUS_MAX_D1
 2

	)

19 
	#TW_CHN_NO
 (
TW_MAX_VI
 / 
TW_MAX_GRP
)

	)

21 
	#IO_BLOCK
 1

	)

22 
	#IO_NOBLOCK
 0

	)

24 
	#TW_INVAL_CHN
 (-1)

	)

27 
	#TW_GRP_MAX_PFRAME
 25

28 
	#TW_GRP_MAX_NFRAME
 30

29 

	)

41 
	eGROUP_MODE
{

42 
MODE_D1
,

43 
MODE_D1_HALFD1
,

44 
MODE_D1_HALFD1_CIF
,

45 
MODE_D1_CIF
,

46 
MODE_HALFD1
,

47 
MODE_HALFD1_CIF
,

48 
MODE_CIF
,

49 
MODE_NONE
,

52 
	#TW_VI_PAL
 
TW_VIDEO_STANDARD_PAL


	)

53 
	#TW_VI_NTSC
 
TW_VIDEO_STANDARD_NTSC


	)

56 
gΩ_id
;

57 
ö_£À˘
[
TW_CHN_NO
];

58 
ö_m≠
[
TW_CHN_NO
];

59 
ö_fmt
[
TW_CHN_NO
];

60 
ö_øã
[
TW_CHN_NO
];

61 
out_øã
[
TW_CHN_NO
];

62 
tŸÆ‰m
;

63 
GROUP_MODE
 
mode
;

64 
tŸÆ
;

65 }
	tVGROUP_S
;

81 
cb_˘æ_ˇlcuœã
(*
chn
, *
f‹m©
, *
øã
, 
n‹m
, 
VGROUP_S
 *
vgroup
, 
cou¡
, 
adju°
);

97 
¥evõw_˘æ_ˇlcuœã
(*
chn
, *
f‹m©
, *
øã
, 
n‹m
, 
VGROUP_S
 *
vgroup
, 
cou¡
, 
adju°
);

100 
u32
 
gë_bôs_m≠
(u32 
§c
, u32 
èrgë
);

102 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/bitstream.h

1 #i‚de‡
BITSTREAM_H


2 
	#BITSTREAM_H


	)

4 #ifde‡
__˝lu•lus


9 
	sGëBôC⁄ãxt


11 c⁄° 
uöt8_t
 *
buf„r
, *
buf„r_íd
;

12 
ödex
;

13 
size_ö_bôs
;

14 }
	tGëBôC⁄ãxt
;

16 
	#NEG_SSR32
(
a
,
s
Ë((–
öt32_t
)◊))>>(32-(s)))

	)

17 
	#NEG_USR32
(
a
,
s
Ë(((
uöt32_t
)◊))>>(32-(s)))

	)

20 
ölöe
 
u«lig√d32_be
(c⁄° *
v
)

22 c⁄° 
uöt8_t
 *
p
=
v
;

23  (((
p
[0]<<8) |Ö[1])<<16) | (p[2]<<8) | (p[3]);

26 
	#OPEN_READER
(
«me
, 
gb
)\

27 
«me
##
_ödex
(
gb
)->
ödex
;\

28 
«me
##
_ˇche
= 0;\

29 

	)

30 
	#CLOSE_READER
(
«me
, 
gb
)\

31 (
gb
)->
ödex

«me
##
_ödex
;\

32 

	)

33 
	#UPDATE_CACHE
(
«me
, 
gb
)\

34 
«me
##
_ˇche

	`u«lig√d32_be
–((c⁄° 
uöt8_t
 *)(
gb
)->
buf„r
)+“ame##
_ödex
>>3) ) << (name##_index&0x07);\

35 

	)

36 
	#SKIP_COUNTER
(
«me
, 
gb
, 
num
)\

37 
«me
##
_ödex
 +(
num
);\

38 

	)

39 
	#LAST_SKIP_BITS
(
«me
, 
gb
, 
num
Ë
	`SKIP_COUNTER
“ame, gb,Çum)

	)

41 
	#SHOW_UBITS
(
«me
, 
gb
, 
num
)\

42 
	`NEG_USR32
(
«me
##
_ˇche
, 
num
)

	)

44 
	#GET_CACHE
(
«me
, 
gb
)\

45 ((
uöt32_t
)
«me
##
_ˇche
)

	)

47 
ölöe
 
gë_bôs_cou¡
(
GëBôC⁄ãxt
 *
s
)

49  
s
->
ödex
;

52 
ölöe
 
gë_bôs
(
GëBôC⁄ãxt
 *
s
, 
n
)

54 
tmp
;

55 
OPEN_READER
(
ª
, 
s
)

56 
UPDATE_CACHE
(
ª
, 
s
)

57 
tmp

SHOW_UBITS
(
ª
, 
s
, 
n
);

58 
LAST_SKIP_BITS
(
ª
, 
s
, 
n
)

59 
CLOSE_READER
(
ª
, 
s
)

60  
tmp
;

63 
ölöe
 
gë_bôs1
(
GëBôC⁄ãxt
 *
s
)

65 
ödex

s
->index;

66 
uöt8_t
 
ªsu…

s
->
buf„r
[ 
ödex
>>3 ];

67 
ªsu…
 <<(
ödex
&0x07);

68 
ªsu…
 >>= 7;

69 
s
->
ödex
++;

70  
ªsu…
;

73 
ölöe
 
öô_gë_bôs
(
GëBôC⁄ãxt
 *
s
, c⁄° 
uöt8_t
 *
buf„r
, 
bô_size
)

75 
buf„r_size
 = (
bô_size
+7)>>3;

77 if(
buf„r_size
 < 0 || 
bô_size
 < 0)

79 
buf„r_size
 = 
bô_size
 = 0;

80 
buf„r
 = 
NULL
;

82 
s
->
buf„r
 = buffer;

83 
s
->
size_ö_bôs
 = 
bô_size
;

84 
s
->
buf„r_íd
 = 
buf„r
 + 
buf„r_size
;

85 
s
->
ödex
=0;

88 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/bs.h

1 #i‚de‡
_BS_H


2 
	#_BS_H


	)

4 #ifde‡
__˝lu•lus


9 
	sbs_s


11 
__u8
 *
p_°¨t
;

12 
__u8
 *
p
;

13 
__u8
 *
p_íd
;

15 
i_À·
;

16 }
	tbs_t
;

18 
ölöe
 
bs_öô
(
bs_t
 *
s
, *
p_d©a
, 
i_d©a
)

20 
s
->
p_°¨t
 = 
p_d©a
;

21 
s
->
p
 = 
p_d©a
;

22 
s
->
p_íd
 = s->
p
 + 
i_d©a
;

23 
s
->
i_À·
 = 8;

26 
ölöe
 
bs_pos
–
bs_t
 *
s
 )

28 –8 * ( 
s
->
p
 - s->
p_°¨t
 ) + 8 - s->
i_À·
 );

31 
ölöe
 
bs_eof
–
bs_t
 *
s
 )

33 –
s
->
p
 >s->
p_íd
 ? 1: 0 );

36 
ölöe
 
bs_Àn
(
bs_t
 *
s
)

38  (
s
->
p
 - s->
p_°¨t
);

41 
ölöe
 
bs_À·
(
bs_t
 *
s
)

43  (8-
s
->
i_À·
);

46 
ölöe
 
bs_dúe˘_wrôe
(
bs_t
 *
s
, 
u8
 
vÆue
)

48 *
s
->
p
 = 
vÆue
;

49 
s
->
p
++;

50 
s
->
i_À·
 = 8;

53 
ölöe
 
bs_wrôe
(
bs_t
 *
s
, 
i_cou¡
, 
u32
 
i_bôs
)

55 if–
s
->
p
 >s->
p_íd
 - 4 )

57  
i_cou¡
 > 0 )

59 if–
i_cou¡
 < 32 )

60 
i_bôs
 &(1<<
i_cou¡
)-1;

61 if–
i_cou¡
 < 
s
->
i_À·
 )

63 *
s
->
p
 = (*s->∞<< 
i_cou¡
Ë| 
i_bôs
;

64 
s
->
i_À·
 -
i_cou¡
;

69 *
s
->
p
 = (*s->∞<< s->
i_À·
Ë| (
i_bôs
 >> (
i_cou¡
 - s->i_left));

70 
i_cou¡
 -
s
->
i_À·
;

71 
s
->
p
++;

72 
s
->
i_À·
 = 8;

77 
ölöe
 
bs_wrôe1
–
bs_t
 *
s
, 
u32
 
i_bô
 )

79 if–
s
->
p
 < s->
p_íd
 )

81 *
s
->
p
 <<= 1;

82 *
s
->
p
 |
i_bô
;

83 
s
->
i_À·
--;

84 if–
s
->
i_À·
 == 0 )

86 
s
->
p
++;

87 
s
->
i_À·
 = 8;

92 
ölöe
 
bs_Æign_0
–
bs_t
 *
s
 )

94 if–
s
->
i_À·
 != 8 )

96 *
s
->
p
 <<s->
i_À·
;

97 
s
->
i_À·
 = 8;

98 
s
->
p
++;

102 
ölöe
 
bs_sh_Æign
–
bs_t
 *
s
 )

104 if–
s
->
i_À·
 != 8 )

106 *
s
->
p
 <<s->
i_À·
;

107 
s
->
i_À·
 = 8;

111 
ölöe
 
bs_Æign_1
–
bs_t
 *
s
 )

113 if–
s
->
i_À·
 != 8 )

115 *
s
->
p
 <<s->
i_À·
;

116 *
s
->
p
 |(1 << s->
i_À·
) - 1;

117 
s
->
i_À·
 = 8;

118 
s
->
p
++;

122 
ölöe
 
bs_Æign
–
bs_t
 *
s
 )

124 
bs_Æign_0
–
s
 );

128 
ölöe
 
bs_wrôe_ue
–
bs_t
 *
s
, 
u32
 
vÆ
 )

130 
i_size
 = 0;

131 c⁄° 
i_size0_255
[256] =

143 if–
vÆ
 == 0 )

145 
bs_wrôe1
–
s
, 1 );

149 
tmp
 = ++
vÆ
;

151 if–
tmp
 >= 0x00010000 )

153 
i_size
 += 16;

154 
tmp
 >>= 16;

156 if–
tmp
 >= 0x100 )

158 
i_size
 += 8;

159 
tmp
 >>= 8;

161 
i_size
 +
i_size0_255
[
tmp
];

163 
bs_wrôe
–
s
, 2 * 
i_size
 - 1, 
vÆ
 );

167 
ölöe
 
bs_wrôe_£
–
bs_t
 *
s
, 
vÆ
 )

169 
bs_wrôe_ue
–
s
, 
vÆ
 <= 0 ? -val * 2 : val * 2 - 1);

172 
ölöe
 
bs_wrôe_ã
–
bs_t
 *
s
, 
x
, 
vÆ
 )

174 if–
x
 == 1 )

176 
bs_wrôe1
–
s
, 1&~
vÆ
 );

178 if–
x
 > 1 )

180 
bs_wrôe_ue
–
s
, 
vÆ
 );

184 
ölöe
 
bs_rb•_åaûög
–
bs_t
 *
s
 )

186 
bs_wrôe1
–
s
, 1 );

187 if–
s
->
i_À·
 != 8 )

189 
bs_wrôe
–
s
, s->
i_À·
, 0x00 );

193 
ölöe
 
bs_size_ue
–
vÆ
 )

195 c⁄° 
i_size0_254
[255] =

211 if–
vÆ
 < 255 )

213  
i_size0_254
[
vÆ
];

217 
i_size
 = 0;

219 
vÆ
++;

221 if–
vÆ
 >= 0x10000 )

223 
i_size
 += 32;

224 
vÆ
 = (val >> 16) - 1;

226 if–
vÆ
 >= 0x100 )

228 
i_size
 += 16;

229 
vÆ
 = (val >> 8) - 1;

231  
i_size0_254
[
vÆ
] + 
i_size
;

235 
ölöe
 
bs_size_£
–
vÆ
 )

237  
bs_size_ue
–
vÆ
 <= 0 ? -val * 2 : val * 2 - 1);

240 
ölöe
 
bs_size_ã
–
x
, 
vÆ
 )

242 if–
x
 == 1 )

246 if–
x
 > 1 )

248  
bs_size_ue
–
vÆ
 );

253 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/chip_bus_schedule.h

1 #i‚def 
CHIP_BUS_SCHEDULE_H


2 
	#CHIP_BUS_SCHEDULE_H


	)

4 #ifde‡
__˝lu•lus


9 
	snŸify_msg


11 
msg_ty≥
;

12 *
msg_¥iv©e
;

13 *
msg_∑øm
;

16 (*
nŸify_ªgi°î_node_¥iv
)(
	ttw_ªgi°î_node_t
 *, *, 
	ttw_nŸify_msg
 *);

17 (*
m©ch_ªgsôî_node_¥iv_id
)(
	ttw_ªgi°î_node_t
 *, *, );

19 
	stw_ªgi°î_node_›î©i⁄
{

20 (*
öô_com∂ëe
)(
tw_ªgi°î_node_t
 *);

21 (*
waô_com∂ëe
)(
tw_ªgi°î_node_t
 *);

22 (*
com∂ëe_d⁄e
)(
tw_ªgi°î_node_t
 *);

25 
	#to_gë_ªgi°î_node
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_ªgi°î_node_t
, 
li°
)

	)

26 
	stw_ªgi°î_node
{

27 
li°_hód
 
li°
;

28 
com∂ëi⁄
 
waô_°›
;

30 *
ªgi°î_node_¥iv
;

31 
nŸify_ªgi°î_node_¥iv
 
nŸify_¥iv
;

32 
m©ch_ªgsôî_node_¥iv_id
 
m©ch_id
;

34 
tw_ªgi°î_node_›î©i⁄
 *
›
;

37 
	sªgi°î_èbÀ_node_›î©i⁄
{

38 (*
ªgi°î_node_öto_èbÀ
)(
tw_ªgi°î_èbÀ_t
 *, 
tw_ªgi°î_node_t
 *);

39 (*
uƒegi°î_node_‰om_èbÀ
)(
tw_ªgi°î_èbÀ_t
 *, 
tw_ªgi°î_node_t
 *);

40 (*
föd_ªgi°î_node_ö_èbÀ
)(
tw_ªgi°î_èbÀ_t
 *, 
tw_ªgi°î_node_t
 **, );

41 (*
gë_cuº_ªgi°î_node_numbî
)(
tw_ªgi°î_èbÀ_t
 *);

44 
	sªgi°î_èbÀ_node
{

45 
•ölock_t
 
lock
;

46 
li°_hód
 
ªgi°î_hódî
;

47 
©omic_t
 
cuº_ªgi°î_íåy_numbî
;

49 
ªgi°î_èbÀ_node_›î©i⁄
 *
›
;

52 
	stw_roŸ_bus
{

53 
tw_ªgi°î_èbÀ_t
 
roŸ_ªgi°î_èbÀ
;

56 
	sty≥_bus_›î©i⁄
{

57 (*
öô
)(
ty≥_bus_t
 *, );

59 (*
ªgi°î_chù_bus_öto_ty≥_bus_èbÀ
)(
ty≥_bus_t
 *
bus
, 
tw_chù_bus_t
 *
chù_bus
);

60 (*
uƒegi°î_chù_bus_öto_ty≥_bus_èbÀ
)(
ty≥_bus_t
 *
bus
, 
tw_chù_bus_t
 *
chù_bus
);

61 (*
föd_chù_bus_ö_ty≥_bus_èbÀ
)(
ty≥_bus_t
 *
bus
, 
tw_chù_bus_t
 **
chù_bus
, 
chù_id
);

64 
	#to_gë_ty≥_bus_wôh_ªgi°î_node
(
node
Ë
	`c⁄èöî_of
“ode, 
ty≥_bus_t
, 
ªgi°î_node
)

	)

65 
	sty≥_bus
{

66 
tw_ªgi°î_node_t
 
ªgi°î_node
;

67 
tw_ªgi°î_èbÀ_t
 
ty≥_bus_roŸ_ªgi°î_èbÀ
;

68 
bus_id
;

70 
ty≥_bus_›î©i⁄
 *
›
;

73 
	schù_bus_›î©i⁄
{

74 (*
öô
)(
tw_chù_bus_t
 *, , );

77 
	#to_gë_chù_bus_wôh_chù_ªgi°î_node
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_chù_bus_t
, 
chù_ªgi°î_node
)

	)

78 
	stw_chù_bus
{

79 
tw_ªgi°î_node_t
 
chù_ªgi°î_node
;

80 
bus_id
;

81 
chù_id
;

83 
chù_bus_›î©i⁄
 *
›
;

86 
gë_roŸ_bus
(
tw_roŸ_bus_t
 **
±r_roŸ_bus
);

87 
gë_tw_ho°_bus
(
ty≥_bus_t
 **
±r_ty≥_bus
);

88 
gë_tw_pci_bus
(
ty≥_bus_t
 **
±r_ty≥_bus
);

89 
gí_tw_bus_evít
();

90 
waô_tw_bus_evít
();

92 
öô_tw_roŸ_bus
();

93 
ªmove_tw_roŸ_bus
();

94 
öô_ty≥_bus
(
ty≥_bus_t
 *
bus
, 
bus_id
);

95 
ªmove_ty≥_bus
(
ty≥_bus_t
 *
bus
);

96 
öô_chù_bus
(
tw_chù_bus_t
 *
chù_bus
, 
bus_id
, 
chù_id
);

97 
ªmove_chù_bus
(
tw_chù_bus_t
 *
chù_bus
, 
bus_id
);

98 
öô_ídpoöt_tcb
(
ed_tcb_t
 *
ed_tcb
, 
bus_id
, 
chù_id
, 
ty≥_id
, 
group_ch™_id
, 
logic_ch™_id
, *
¥iv
, 
nŸify_ªgi°î_node_¥iv
 
nŸify_¥iv
, 
m©ch_ªgsôî_node_¥iv_id
 
m©ch_id
, 
fsm_°©e_å™s„r_m©rix_èbÀ_t
 *
fsm_èbÀ
);

99 
öô_ªgi°î_èbÀ_node
(
tw_ªgi°î_èbÀ_t
 *
èbÀ
);

100 
öô_ªgi°î_node
(
tw_ªgi°î_node_t
 *
node
, *
¥iv
, 
nŸify_ªgi°î_node_¥iv
 
nŸify_¥iv
, 
m©ch_ªgsôî_node_¥iv_id
 
m©ch_id
);

102 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/ddr_burst_interface.h

1 #i‚def 
DDR_BURST_INTERFACE_H


2 
	#DDR_BURST_INTERFACE_H


	)

4 #ifde‡
__˝lu•lus


9 
	#MPI_ACCESS_PAGE_MODE_REG_OFFSET
 (0x00030)

	)

10 
	#MPI_CMD_STATUS_REG_OFFSET
 (0x80000)

	)

11 
	#MPI_BURST_DDR_ADDR_REG_OFFSET
 (0x80004)

	)

12 
	#MPI_BURST_SRAM_ADDR_REG_OFFSET
 (0x80008)

	)

13 
	#MPI_DPRAM_BASE_OFFSET
 (0x84000)

	)

15 
	#DPRAM_SEGMENT_SIZE
 (0x0800)

	)

16 
	#DPRAM_PAGE_SIZE
 (0x0800)

	)

17 
	#DPRAM_PAGE_NUMBER
 (1)

	)

19 
	#BURST_INTERFACE_CHECKUP_TIMEOUT
 (200)

	)

21 
	#VIDEO_BITSTREAM_DDR_SECTION_NUMBER
 (8)

	)

23 
	sac˚ss_∑ge_mode_ªg
{

24 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

25 
u32
 
∑ge_id
 : 8;

26 
u32
 
ª£rve8_12
 : 5;

27 
u32
 
mpi_bur°_ªad_4_íabÀ
 : 1;

28 
u32
 
ddr_a_b_£À˘
 : 1;

29 
u32
 
bur°_mode_í
 : 1;

30 
u32
 
ª£rve16_31
 : 16;

31 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

32 
u32
 
ª£rve16_31
 : 16;

33 
u32
 
bur°_mode_í
 : 1;

34 
u32
 
ddr_a_b_£À˘
 : 1;

35 
u32
 
mpi_bur°_ªad_4_íabÀ
 : 1;

36 
u32
 
ª£rve8_12
 : 5;

37 
u32
 
∑ge_id
 : 8;

44 
ac˚ss_∑ge_mode_ªg
 
bô_vÆue
;

45 
u32
 
vÆue
;

46 }
	tac˚ss_∑ge_mode_ªg_vÆue
;

48 
	sbur°_cmd_°©us_ªg
{

49 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

50 
u32
 
bur°_Àn
 : 16;

51 
u32
 
bur°_dú
 : 1;

52 
u32
 
bur°_åiggî
 : 1;

53 
u32
 
ª£rve18_23
 : 6;

54 
u32
 
ddr_bur°_íd_Êag
 : 1;

55 
u32
 
ddr_sögÀ_ac˚ss_îr_öt_íabÀ
 : 1;

56 
u32
 
ddr_bur°_ac˚ss_îr_öt_íabÀ
 : 1;

57 
u32
 
bur°_íd_öt_íabÀ
 : 1;

58 
u32
 
ddr_sögÀ_ac˚ss_îr_Êag
 : 1;

59 
u32
 
ddr_sögÀ_ac˚ss_busy_Êag
 : 1;

60 
u32
 
ddr_bur°_îr_Êag
 : 1;

61 
u32
 
ddr_bur°_busy_Êag
 : 1;

62 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

63 
u32
 
ddr_bur°_busy_Êag
 : 1;

64 
u32
 
ddr_bur°_îr_Êag
 : 1;

65 
u32
 
ddr_sögÀ_ac˚ss_busy_Êag
 : 1;

66 
u32
 
ddr_sögÀ_ac˚ss_îr_Êag
 : 1;

67 
u32
 
bur°_íd_öt_íabÀ
 : 1;

68 
u32
 
ddr_bur°_ac˚ss_îr_öt_íabÀ
 : 1;

69 
u32
 
ddr_sögÀ_ac˚ss_îr_öt_íabÀ
 : 1;

70 
u32
 
ddr_bur°_íd_Êag
 : 1;

71 
u32
 
ª£rve18_23
 : 6;

72 
u32
 
bur°_åiggî
 : 1;

73 
u32
 
bur°_dú
 : 1;

74 
u32
 
bur°_Àn
 : 16;

81 
bur°_cmd_°©us_ªg
 
bô_vÆue
;

82 
u32
 
vÆue
;

83 }
	tbur°_cmd_°©us_ªg_vÆue
;

85 
	sbur°_ddr_ba£_addr_ªg
{

86 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

87 
u32
 
ddr_ba£_addr
 : 28;

88 
u32
 
ª£rve28_31
 : 4;

89 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

90 
u32
 
ª£rve28_31
 : 4;

91 
u32
 
ddr_ba£_addr
 : 28;

98 
bur°_ddr_ba£_addr_ªg
 
bô_vÆue
;

99 
u32
 
vÆue
;

100 }
	tbur°_ddr_ba£_addr_ªg_vÆue
;

102 
	sbur°_§am_ba£_addr_ªg
{

103 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

104 
u32
 
§am_ba£_addr
 : 16;

105 
u32
 
ª£rve16_31
 : 16;

106 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

107 
u32
 
ª£rve16_31
 : 16;

108 
u32
 
§am_ba£_addr
 : 16;

115 
bur°_§am_ba£_addr_ªg
 
bô_vÆue
;

116 
u32
 
vÆue
;

117 }
	tbur°_§am_ba£_addr_ªg_vÆue
;

119 
	sddr_bur°_öãrÁ˚_ªg_›î©i⁄
{

120 (*
öô
)(
ddr_bur°_öãrÁ˚_t
 *);

121 (*
ª£t
)(
ddr_bur°_öãrÁ˚_t
 *);

122 (*
gë_∑ge_mode_ªg
)(
ddr_bur°_öãrÁ˚_t
 *, 
dvm_chù_t
 *);

123 (*
upd©e_∑ge_mode_ªg
)(
ddr_bur°_öãrÁ˚_t
 *, 
dvm_chù_t
 *);

124 (*
gë_bur°_öãrÁ˚_∑øm
)(
ddr_bur°_öãrÁ˚_t
 *, 
dvm_chù_t
 *);

125 (*
upd©e_bur°_öãrÁ˚_∑øm
)(
ddr_bur°_öãrÁ˚_t
 *, 
dvm_chù_t
 *);

127 (*
íabÀ_ac˚ss_§am_block
)(
ddr_bur°_öãrÁ˚_t
 *);

128 (*
íabÀ_ac˚ss_ddr_block
)(
ddr_bur°_öãrÁ˚_t
 *);

129 (*
£À˘_ddr_A
)(
ddr_bur°_öãrÁ˚_t
 *);

130 (*
£À˘_ddr_B
)(
ddr_bur°_öãrÁ˚_t
 *);

131 (*
íabÀ_ªad_4
)(
ddr_bur°_öãrÁ˚_t
 *);

132 (*
dißbÀ_ªad_4
)(
ddr_bur°_öãrÁ˚_t
 *);

133 (*
£t_ddr_∑ge_numbî
)(
ddr_bur°_öãrÁ˚_t
 *, 
∑ge_id
);

135 (*
£t_ddr_bur°_∑øm
)(
ddr_bur°_öãrÁ˚_t
 *, 
Àn
, 
dú
);

136 (*
°¨t_ddr_bur°
)(
ddr_bur°_öãrÁ˚_t
 *);

137 (*
öt_íabÀ
)(
ddr_bur°_öãrÁ˚_t
 *, , , );

138 (*
gë_sögÀ_ac˚ss_îr_Êag
)(
ddr_bur°_öãrÁ˚_t
 *);

139 (*
gë_bur°_ac˚ss_îr_Êag
)(
ddr_bur°_öãrÁ˚_t
 *);

140 (*
gë_bur°_busy_Êag
)(
ddr_bur°_öãrÁ˚_t
 *);

141 (*
gë_bur°_íd_Êag
)(
ddr_bur°_öãrÁ˚_t
 *);

142 (*
˛ór_bur°_íd_Êag
)(
ddr_bur°_öãrÁ˚_t
 *);

143 (*
£t_bur°_ddr_addr
)(
ddr_bur°_öãrÁ˚_t
 *, 
u32
 
addr_off£t
);

144 (*
£t_bur°_§am_addr
)(
ddr_bur°_öãrÁ˚_t
 *, 
u32
 
addr_off£t
);

146 (*
pio_ho°_to_§am_wrôe
)(
ddr_bur°_öãrÁ˚_t
 *, 
d¥am_∑ge_node_t
 *, 
u32
 *, );

147 (*
dma_ho°_to_§am_wrôe
)(
ddr_bur°_öãrÁ˚_t
 *, 
d¥am_∑ge_node_t
 *, 
dma_addr_t
 , );

148 (*
pio_ho°_to_§am_ªad
)(
ddr_bur°_öãrÁ˚_t
 *, 
d¥am_∑ge_node_t
 *, 
u32
 *, );

149 (*
dma_ho°_to_§am_ªad
)(
ddr_bur°_öãrÁ˚_t
 *, 
d¥am_∑ge_node_t
 *, 
dma_addr_t
 , );

151 (*
°¨t_block_å™s„r_‰om_§am_to_ddr
)(
ddr_bur°_öãrÁ˚_t
 *, 
d¥am_∑ge_node_t
 *, 
u32
 , , , );

152 (*
°¨t_n⁄block_å™s„r_‰om_§am_to_ddr
)(
ddr_bur°_öãrÁ˚_t
 *, 
d¥am_∑ge_node_t
 *, 
u32
 , , , );

153 (*
°¨t_block_å™s„r_‰om_ddr_to_§am
)(
ddr_bur°_öãrÁ˚_t
 *, 
d¥am_∑ge_node_t
 *, 
u32
 , , , );

154 (*
°¨t_n⁄block_å™s„r_‰om_ddr_to_§am
)(
ddr_bur°_öãrÁ˚_t
 *, 
d¥am_∑ge_node_t
 *, 
u32
 , , , );

155 (*
˛ór_bur°_d⁄e
)(
ddr_bur°_öãrÁ˚_t
 *);

158 
	sddr_bur°_öãrÁ˚_ªg
{

159 
ac˚ss_∑ge_mode_ªg_vÆue
 
∑ge_mode_ªg_vÆue
;

160 
u32
 
ac˚ss_∑ge_mode_ªg_off£t
;

162 
bur°_cmd_°©us_ªg_vÆue
 
cmd_°©us_ªg_vÆue
;

163 
u32
 
bur°_cmd_°©us_ªg_off£t
;

165 
bur°_ddr_ba£_addr_ªg_vÆue
 
ddr_ba£_addr_ªg_vÆue
;

166 
u32
 
bur°_ddr_addr_ªg_off£t
;

168 
bur°_§am_ba£_addr_ªg_vÆue
 
§am_ba£_addr_ªg_vÆue
;

169 
u32
 
bur°_§am_addr_ªg_off£t
;

171 
ddr_bur°_öãrÁ˚_ªg_›î©i⁄
 *
›
;

172 
dvm_chù_t
 *
chù
;

175 
	sd¥am_∑ge_node_›î©i⁄
{

176 
u32
 (*
gë_∑ge_ba£
)(
d¥am_∑ge_node_t
 *);

177 
u32
 (*
gë_∑ge_off£t
)(
d¥am_∑ge_node_t
 *);

178 (*
gë_∑ge_size
)(
d¥am_∑ge_node_t
 *);

181 
	sd¥am_∑ge_node
{

182 
u32
 
d¥am_ba£
;

183 
u32
 
d¥am_∑ge_ba£_off£t
;

184 
∑ge_size
;

186 
d¥am_∑ge_node_›î©i⁄
 *
›
;

189 
	sd¥am_∑ge_ªsour˚_m™age_›î©i⁄
{

190 (*
öô
)(
d¥am_∑ge_ªsour˚_m™age_t
 *);

191 (*
gë_d¥am_∑ge
)(
d¥am_∑ge_ªsour˚_m™age_t
 *, 
d¥am_∑ge_node_t
 **);

192 (*
put_d¥am_∑ge
)(
d¥am_∑ge_ªsour˚_m™age_t
 *, 
d¥am_∑ge_node_t
 **);

193 (*
gë_ˇn_u£_ªsour˚_numbî
)(
d¥am_∑ge_ªsour˚_m™age_t
 *);

196 
	sd¥am_∑ge_ªsour˚_m™age
{

197 
d¥am_∑ge_node_t
 
d¥am
[
DPRAM_PAGE_NUMBER
];

198 
d¥am_numbî
, 
cuº_u£d_d¥am_ödex
;

199 
©omic_t
 
cuº_ˇn_u£_d¥am_∑ge_numbî
;

200 
•ölock_t
 
lock
;

202 
d¥am_∑ge_ªsour˚_m™age_›î©i⁄
 *
›
;

205 
	sddr_video_bô°ªam_buf_node_›î©i⁄
{

206 (*
gë_buf_id
)(
ddr_video_bô°ªam_buf_node_t
 *);

207 (*
gë_buf_ö_chù_a_‹_b
)(
ddr_video_bô°ªam_buf_node_t
 *);

208 (*
gë_∑ge_id
)(
ddr_video_bô°ªam_buf_node_t
 *);

209 
u32
 (*
gë_buf_ba£_off£t
)(
ddr_video_bô°ªam_buf_node_t
 *);

212 
	#DDR_CHIP_A
 (0)

	)

213 
	#DDR_CHIP_B
 (1)

	)

214 
	sddr_video_bô°ªam_buf_node
{

215 
u32
 
buf_ba£_off£t
;

216 
buf_id
, 
ddr_phy_∑ge_id
;

217 
chù_a_‹_b
;

219 
ddr_video_bô°ªam_buf_node_›î©i⁄
 *
›
;

222 
	sddr_video_bô°ªam_ªsour˚_m™age_›î©i⁄
{

223 (*
öô
)(
ddr_video_bô°ªam_ªsour˚_m™age_t
 *);

224 (*
gë_video_bô°ªam
)(
ddr_video_bô°ªam_ªsour˚_m™age_t
 *, 
ddr_video_bô°ªam_buf_node_t
 **);

225 (*
put_video_bô°ªam
)(
ddr_video_bô°ªam_ªsour˚_m™age_t
 *, 
ddr_video_bô°ªam_buf_node_t
 **);

226 (*
gë_ˇn_u£_ªsour˚_numbî
)(
ddr_video_bô°ªam_ªsour˚_m™age_t
 *);

229 
	sddr_video_bô°ªam_ªsour˚_m™age
{

230 
ddr_video_bô°ªam_buf_node_t
 
ddr_buf_£˘i⁄
[
VIDEO_BITSTREAM_DDR_SECTION_NUMBER
];

231 
ddr_buf_£˘i⁄_numbî
, 
cuº_u£d_ddr_buf_£˘i⁄_ödex
;

232 
©omic_t
 
cuº_ˇn_u£_ddr_buf_£˘i⁄_numbî
;

233 
•ölock_t
 
lock
;

235 
ddr_video_bô°ªam_ªsour˚_m™age_›î©i⁄
 *
›
;

238 
	#DPRAM_BLOCK_TRANSFER_REQUEST
 (0)

	)

239 
	#DPRAM_NONBLOCK_TRANSFER_REQUEST
 (1)

	)

240 
	#to_gë_d¥am_ªque°_wôh_ªque°_node
(
node
Ë
	`c⁄èöî_of
“ode, 
d¥am_ªque°_t
, 
ªque°_node
)

	)

241 
	sd¥am_ªque°
{

242 
ty≥
;

243 *
c⁄ãxt
;

244 (*
ªq_ˇŒback
)(
d¥am_ªque°_t
 *, *);

245 
tcb_node_t
 
ªque°_node
;

248 
	sd¥am_ªque°_queue_›î©i⁄
{

249 (*
öô
)(
d¥am_ªque°_queue_t
 *);

250 (*
gë_queue_cuº_íåy_numbî
)(
d¥am_ªque°_queue_t
 *);

251 (*
put_£rvi˚_ªque°_öto_queue
)(
d¥am_ªque°_queue_t
 *, 
d¥am_ªque°_t
 *);

252 (*
put_£rvi˚_ªque°_öto_queue_hódî
)(
d¥am_ªque°_queue_t
 *, 
d¥am_ªque°_t
 *);

253 (*
åy_gë_cuº_c⁄sumî_‰om_queue
)(
d¥am_ªque°_queue_t
 *);

254 (*
ªÀa£_cuº_c⁄sumî
)(
d¥am_ªque°_queue_t
 *);

255 (*
åiggî_chù_≥ndög_£rvi˚_ªque°
)(
d¥am_ªque°_queue_t
 *);

258 
	sd¥am_ªque°_queue
{

259 
tcb_node_queue_t
 
ªque°_queue
;

260 
d¥am_ªque°_t
 *
cuº_£rvi˚_ªq
;

261 
•ölock_t
 
lock
;

263 
d¥am_ªque°_queue_›î©i⁄
 *
›
;

266 
	sd¥am_c⁄åﬁ_›î©i⁄
{

267 (*
öô
)(
d¥am_c⁄åﬁ_t
 *, 
dvm_chù_t
 *);

268 (*
is_ˇn_submô_h264_ícode_£rvi˚_ªq
)(
d¥am_c⁄åﬁ_t
 *, 
ddr_video_bô°ªam_buf_node_t
 **);

269 (*
ªÀa£_h264_ddr_∑ge_ªsour˚
)(
d¥am_c⁄åﬁ_t
 *, 
ddr_video_bô°ªam_buf_node_t
 **);

270 (*
is_ˇn_submô_move_d©a_‰om_ho°_to_d¥am_£rvi˚_ªq
)(
d¥am_c⁄åﬁ_t
 *, 
d¥am_∑ge_node_t
 **);

271 (*
nŸify_íd_move_d©a_‰om_d¥am_to_ddr_£rvi˚_ªq
)(
d¥am_c⁄åﬁ_t
 *, 
d¥am_∑ge_node_t
 **);

272 (*
is_ˇn_submô_move_d©a_‰om_ddr_to_d¥am_£rvi˚_ªq
)(
d¥am_c⁄åﬁ_t
 *, 
d¥am_∑ge_node_t
 **);

273 (*
nŸify_íd_move_d©a_‰om_d¥am_to_ho°_£rvi˚_ªq
)(
d¥am_c⁄åﬁ_t
 *, 
d¥am_∑ge_node_t
 **);

274 (*
submô_ªad_h264_bô°ªam_ªq
)(
d¥am_c⁄åﬁ_t
 *, 
tw_h264_logic_ícode_ch™_t
 *);

275 (*
ack_ªad_h264_bô°ªam_ªq
)(
d¥am_c⁄åﬁ_t
 *, 
tw_h264_logic_ícode_ch™_t
 *);

276 (*
submô_wrôe_video_ícode_osd_d©a_ªq
)(
d¥am_c⁄åﬁ_t
 *, 
osd_ª˘™gÀ_íåy_t
 *);

277 (*
ack_wrôe_video_ícode_osd_d©a_ªq
)(
d¥am_c⁄åﬁ_t
 *, 
osd_ª˘™gÀ_íåy_t
 *);

278 (*
submô_wrôe_video_ícode_osd_©å_ªq
)(
d¥am_c⁄åﬁ_t
 *, 
osd_©åibuã_ªgs_group_t
 *);

279 (*
ack_wrôe_video_ícode_osd_©å_ªq
)(
d¥am_c⁄åﬁ_t
 *, 
osd_©åibuã_ªgs_group_t
 *);

280 (*
submô_ªad_audio_ªq
)(
d¥am_c⁄åﬁ_t
 *, 
tw_audio_drivî_t
 *);

281 (*
ack_ªad_audio_ªq
)(
d¥am_c⁄åﬁ_t
 *, 
tw_audio_drivî_t
 *);

282 (*
submô_wrôe_audio_ªq
)(
d¥am_c⁄åﬁ_t
 *, 
tw_audio_drivî_t
 *);

283 (*
ack_wrôe_audio_ªq
)(
d¥am_c⁄åﬁ_t
 *, 
tw_audio_drivî_t
 *);

284 (*
submô_ªad_mj≥g_ªq
)(
d¥am_c⁄åﬁ_t
 *, 
tw_j≥g_logic_ícode_ch™_t
 *);

285 (*
ack_ªad_mj≥g_ªq
)(
d¥am_c⁄åﬁ_t
 *, 
tw_j≥g_logic_ícode_ch™_t
 *);

288 
	#HOST_END_BUS_BUSY
 (1)

	)

289 
	#DDR_END_BUS_BUSY
 (2)

	)

290 
	#BUS_IDLE
 (0)

	)

291 
	sd¥am_c⁄åﬁ
{

292 
•ölock_t
 
lock
;

293 
©omic_t
 
bus_°©e
;

294 
dvm_chù_t
 *
chù
;

295 
ddr_bur°_öãrÁ˚_t
 
bur°_öãrÁ˚
;

296 
d¥am_ªque°_queue_t
 
ªque°_queue
;

297 
d¥am_∑ge_ªsour˚_m™age_t
 
d¥am_ªsour˚
;

298 
ddr_video_bô°ªam_ªsour˚_m™age_t
 
video_bô°ªam_ªsour˚
;

300 
d¥am_c⁄åﬁ_›î©i⁄
 *
›
;

303 
öô_ddr_bur°_öãrÁ˚_t
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
dvm_chù_t
 *
chù
);

304 
öô_d¥am_∑ge_ªsour˚_m™age
(
d¥am_∑ge_ªsour˚_m™age_t
 *
d¥am_∑ge_ªsour˚
);

305 
öô_ddr_video_bô°ªam_ªsour˚_m™age
(
ddr_video_bô°ªam_ªsour˚_m™age_t
 *
video_bô°ªam_ªsour˚
);

306 
öô_d¥am_ªque°_£rvi˚_tcb
(
d¥am_ªque°_t
 *
ªque°_tcb
);

307 
öô_d¥am_ªque°_queue
(
d¥am_ªque°_queue_t
 *
ªque°_queue
);

308 
öô_d¥am_c⁄åﬁ
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
dvm_chù_t
 *
chù
);

310 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/dma.h

1 #i‚de‡
__DMA_H__


2 
	#__DMA_H__


	)

4 #ifde‡
__˝lu•lus


9 
	#DISRC_OFFSET
 (0)

	)

10 
	#DISRCC_OFFSET
 (4)

	)

11 
	#DIDST_OFFSET
 (8)

	)

12 
	#DIDSTC_OFFSET
 (0xc)

	)

13 
	#DCON_OFFSET
 (0x10)

	)

14 
	#DSTAT_OFFSET
 (0x14)

	)

15 
	#DCSRC_OFFSET
 (0x18)

	)

16 
	#DCDST_OFFSET
 (0x1c)

	)

17 
	#DMASKTRIG_OFFSET
 (0x20)

	)

19 
	#VLC_ENCODER_PING
 (0x2000)

	)

20 
	#VLC_ENCODER_DMA_LEN
 (4096)

	)

21 
	#VLC_ENCODER_PONG
 (0x3000)

	)

22 
	#FPGA_LEN_OFFSET_MASK
 (0x7ff)

	)

24 
	sègDMA


26 vﬁ©ûê
u32
 
DISRC
;

27 vﬁ©ûê
u32
 
DISRCC
;

28 vﬁ©ûê
u32
 
DIDST
;

29 vﬁ©ûê
u32
 
DIDSTC
;

30 vﬁ©ûê
u32
 
DCON
;

31 vﬁ©ûê
u32
 
DSTAT
;

32 vﬁ©ûê
u32
 
DCSRC
;

33 vﬁ©ûê
u32
 
DCDST
;

34 vﬁ©ûê
u32
 
DMASKTRIG
;

35 }
	tDMA_REG
;

37 
	sDMA∑øm


39 
u32
 
§cAddr
;

40 
s32
 
ifSrcAddrCh™ge
;

41 
u32
 
de°Addr
;

42 
s32
 
ifDe°AddrCh™ge
;

43 
cou¡
;

44 
dsz
;

45 }
	tDMA_PARAM
;

47 
Âga_dma_ª˚ive
(
u32
 
§c
, u32 
de°
, u32 
Àn
);

49 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/dvm_common.h

1 #i‚def 
DVM_COMMON_H


2 
	#DVM_COMMON_H


	)

4 #ifde‡
__˝lu•lus


9 
	~<löux/ty≥s.h
>

10 
	~<löux/moduÀ.h
>

11 
	~<löux/moduÀ∑øm.h
>

12 
	~<löux/i›‹t.h
>

13 
	~<löux/kî√l.h
>

14 
	~<löux/li°.h
>

15 
	~<löux/dñay.h
>

16 
	~<löux/öô.h
>

17 
	~<löux/öãºu±.h
>

18 
	~<löux/kmod.h
>

19 
	~<löux/i2c.h
>

20 
	~<löux/°rögify.h
>

21 
	~<löux/muãx.h
>

22 
	~<löux/¶ab.h
>

23 
	~<löux/vmÆloc.h
>

24 
	~<löux/mm.h
>

25 
	~<löux/waô.h
>

26 
	~<löux/com∂ëi⁄.h
>

27 
	~<löux/time.h
>

28 
	~<löux/dma-m≠pög.h
>

29 
	~<löux/∂©f‹m_devi˚.h
>

30 
	~<löux/videodev2.h
>

31 
	~<löux/dma-m≠pög.h
>

32 
	~<löux/kthªad.h
>

33 
	~<löux/highmem.h
>

34 
	~<löux/‰ìzî.h
>

35 
	~<löux/pﬁl.h
>

36 
	~<löux/úq.h
>

37 
	~<löux/io˘l.h
>

38 
	~<löux/¥oc_fs.h
>

39 
	~<löux/£q_fûe.h
>

40 
	~<löux/vîsi⁄.h
>

42 
	~<asm/io.h
>

43 
	~<asm/∑ge.h
>

44 
	~<asm/úq.h
>

45 
	~<asm/©omic.h
>

46 
	~<asm/dma.h
>

47 
	~<asm/uac˚ss.h
>

49 
	#TW5864_CHIP


	)

51 #ifdef 
ARM_PLATFORM


52 
	~<asm/mach/úq.h
>

53 
	~<asm/mach/dma.h
>

54 
	~<asm/¨ch/ªgs-úq.h
>

55 
	~<asm/¨ch/ªgs-gpio.h
>

56 
	~<asm/¨ch/ªgs-•i.h
>

57 
	~<asm/£m≠h‹e.h
>

60 #ifde‡
POWERPC_PLATFORM


61 #ifde‡
POWERPC_PCI_PLATFORM


62 
	~<löux/pci.h
>

64 
	#PCI_VENDOR_ID_TW5864
 0x10ì

	)

65 
	#PCI_DEVICE_ID_TW5864
 0x0300

	)

67 
	#PCI_VENDOR_ID_TW5864
 0x1797

	)

68 
	#PCI_DEVICE_ID_TW5864
 0x5864

	)

73 
	~<medü/v4l2-comm⁄.h
>

74 
	~<medü/v4l2-dev.h
>

75 #i‚de‡
POWERPC_PLATFORM


76 
	~<medü/video-buf.h
>

80 
	#MJPEG_MODULE


	)

81 
	#MV_MODULE


	)

82 
	#OSD_MODULE


	)

83 
	#TESTING_TIMESTAMP


	)

84 
	#SUBMIT_OSD_DATA_BY_DPRAM


	)

85 
	#USE_POLLING_DMA


	)

86 
	#HARDWARE_FILL_HEADER


	)

89 
	#USE_ON_CHIP_TIMER


	)

91 
	#TW5864_ASIC_NEW


	)

94 #ifdef 
POWERPC_PLATFORM


95 
	#MAX_CHIP_NUM_IN_BOARD
 (4)

	)

96 
	#INVALID_CHIP_ID
 (
MAX_CHIP_NUM_IN_BOARD
)

	)

97 
	#MAX_GROUP_NUMBER_PER_CHIP
 (4)

	)

98 #i‚de‡
POWERPC_PCI_PLATFORM


99 
	#UPM_SYNC_MODE


	)

101 
	#DEFAULT_FRAME_WIDTH
 (704)

	)

102 
	#DEFAULT_FRAME_HEIGHT
 (576)

	)

104 #ifdef 
ARM_S3C2410_TW5864_PLATFORM


105 
	#MAX_CHIP_NUM_IN_BOARD
 (1)

	)

106 
	#INVALID_CHIP_ID
 (
MAX_CHIP_NUM_IN_BOARD
)

	)

107 
	#MAX_CHANNEL_PER_CHIP
 (16)

	)

108 
	#DEFAULT_FRAME_WIDTH
 (704)

	)

109 
	#DEFAULT_FRAME_HEIGHT
 (576)

	)

113 
	#DATA_SECTION_ALIGN
(
x
Ë
	`__©åibuã__
 ((
	`Æig√d
(x)))

	)

114 
	#STRUCT_PACKET_ALIGN
(
x
Ë
	`__©åibuã__
 ((
∑cked
))

	)

118 
	#TW_CHIP_IOC_MAGIC
 'H'

	)

119 
	#TW_CODEC_IOC_MAGIC
 'S'

	)

121 
	#H264_MIN
(
a
,
b
Ë–◊)<(bË? (aË: (bË)

	)

122 
	#H264_MAX
(
a
,
b
Ë–◊)>(bË? (aË: (bË)

	)

123 
	#ABS
(
x
Ë(((x)<0Ë? -(xË: (x))

	)

124 
	#H264_MEDIAN
(
mö
, 
max
, 
x
Ë(
	`H264_MIN
(
	`H264_MAX
((mö), (x)), (max)))

	)

125 
	#H264_MIN3
(
a
,
b
,
c
Ë
	`H264_MIN
(◊),
	`X264_MIN
((b),(c)))

	)

126 
	#H264_MAX3
(
a
,
b
,
c
Ë
	`H264_MAX
(◊),
	`X264_MAX
((b),(c)))

	)

127 
	#H264_MIN4
(
a
,
b
,
c
,
d
Ë
	`H264_MIN
(◊),
	`X264_MIN3
((b),(c),(d)))

	)

128 
	#H264_MAX4
(
a
,
b
,
c
,
d
Ë
	`H264_MAX
(◊),
	`X264_MAX3
((b),(c),(d)))

	)

129 
	#XCHG
(
ty≥
,
a
,
b
Ë{Åy≥ 
t
 =á;á = b; b =Å; }

	)

131 
	#WIDTH_FRAME_720P
 (1280)

	)

132 
	#WIDTH_FRAME_4CIF_PAL
 (704)

	)

133 
	#WIDTH_FRAME_4CIF_NTSC
 (704)

	)

134 
	#WIDTH_FRAME_D1_PAL
 (704)

135 
	#WIDTH_FRAME_D1_NTSC
 (704)

	)

136 
	#WIDTH_FRAME_HALF_D1_PAL
 (720)

	)

137 
	#WIDTH_FRAME_HALF_D1_NTSC
 (720)

	)

138 
	#WIDTH_FRAME_VGA
 (640)

	)

139 
	#WIDTH_FRAME_CIF_PAL
 (
WIDTH_FRAME_D1_PAL
>>1)

	)

140 
	#WIDTH_FRAME_CIF_NTSC
 (
WIDTH_FRAME_D1_NTSC
>>1)

	)

141 
	#WIDTH_FRAME_QCIF_PAL
 (
WIDTH_FRAME_D1_PAL
>>2)

	)

142 
	#WIDTH_FRAME_QCIF_NTSC
 (
WIDTH_FRAME_D1_NTSC
>>2)

	)

143 
	#WIDTH_FRAME_QVGA
 (
WIDTH_FRAME_VGA
>>1)

	)

145 
	#HEIGHT_FRAME_720P
 (720)

	)

146 
	#HEIGHT_FRAME_4CIF_PAL
 (576)

	)

147 
	#HEIGHT_FRAME_4CIF_NTSC
 (480)

	)

148 
	#HEIGHT_FRAME_D1_PAL
 (576)

	)

149 
	#HEIGHT_FRAME_D1_NTSC
 (480)

	)

150 
	#HEIGHT_FRAME_HALF_D1_PAL
 (288)

	)

151 
	#HEIGHT_FRAME_HALF_D1_NTSC
 (240)

	)

152 
	#HEIGHT_FRAME_VGA
 (480)

	)

153 
	#HEIGHT_FRAME_CIF_PAL
 (
HEIGHT_FRAME_D1_PAL
>>1)

	)

154 
	#HEIGHT_FRAME_CIF_NTSC
 (
HEIGHT_FRAME_D1_NTSC
>>1)

	)

155 
	#HEIGHT_FRAME_QCIF_PAL
 (
HEIGHT_FRAME_D1_PAL
>>2)

	)

156 
	#HEIGHT_FRAME_QCIF_NTSC
 (
HEIGHT_FRAME_D1_NTSC
>>2)

	)

157 
	#HEIGHT_FRAME_QVGA
 (
HEIGHT_FRAME_VGA
>>1)

	)

159 
	#MAX_FRAME_WIDTH
 (
WIDTH_FRAME_720P
)

	)

160 
	#MIN_FRAME_WIDTH
 (
WIDTH_FRAME_QCIF_PAL
)

	)

161 
	#MAX_FRAME_HEIGHT
 (
HEIGHT_FRAME_720P
)

	)

162 
	#MIN_FRAME_HEIGHT
 (
HEIGHT_FRAME_QCIF_NTSC
)

	)

163 
	#MAX_FRAME_RATE_PAL
 (25)

	)

164 
	#MAX_FRAME_RATE_NTSC
 (30)

	)

165 
	#MAX_FRAME_RATE_VGA
 (60)

	)

166 
	#MIN_FRAME_RATE
 (0)

	)

167 
	#MAX_GOP
 (65535)

	)

168 
	#MIN_GOP
 (100)

	)

169 
	#MAX_I_P_STRIDE
 (
MAX_GOP
)

	)

170 
	#MIN_I_P_STRIDE
 (25)

	)

171 
	#MASTER_MAX_BIT_RATE
 (3000000)

	)

172 
	#MASTER_MIN_BIT_RATE
 (64000)

	)

173 
	#SUB_MAX_BIT_RATE
 (1000000)

	)

174 
	#SUB_MIN_BIT_RATE
 (32000)

	)

176 
	#DEFAULT_I_P_STRIDE
 (
MIN_I_P_STRIDE
)

	)

177 
	#DEFAULT_GOP_VALUE
 (
MIN_GOP
)

	)

178 
	#DEFAULT_BITRATE_D1SIZE
 (2000000)

	)

179 
	#DEFAULT_BITRATE_VGASIZE
 (2000000)

180 
	#DEFAULT_BITRATE_QVGASIZE
 (700000)

181 
	#DEFAULT_BITRATE_CIFSIZE
 (1000000)

	)

182 
	#DEFAULT_BITRATE_QCIFSIZE
 (500000)

	)

183 
	#DEFAULT_QP
 (28)

	)

184 
	#DEFAULT_LEVEL_IDC
 (30)

	)

185 
	#DEFAULT_FRAMERATE_PAL
 (
MAX_FRAME_RATE_PAL
)

	)

186 
	#DEFAULT_FRAMERATE_NTSC
 (
MAX_FRAME_RATE_NTSC
)

	)

187 
	#DEFAULT_FRAMERATE_VGA
 (
MAX_FRAME_RATE_VGA
)

	)

190 
	#TW5864_LOGIC_VD_CHAN0
 (0)

	)

191 
	#TW5864_LOGIC_VD_CHAN1
 (1)

	)

192 
	#TW5864_LOGIC_VD_CHAN2
 (2)

	)

193 
	#TW5864_LOGIC_VD_CHAN3
 (3)

	)

194 
	#TW5864_LOGIC_VD_CHAN4
 (4)

	)

195 
	#TW5864_LOGIC_VD_CHAN5
 (5)

	)

196 
	#TW5864_LOGIC_VD_CHAN6
 (6)

	)

197 
	#TW5864_LOGIC_VD_CHAN7
 (7)

	)

198 
	#TW5864_LOGIC_VD_CHAN8
 (8)

	)

199 
	#TW5864_LOGIC_VD_CHAN9
 (9)

	)

200 
	#TW5864_LOGIC_VD_CHAN10
 (10)

	)

201 
	#TW5864_LOGIC_VD_CHAN11
 (11)

	)

202 
	#TW5864_LOGIC_VD_CHAN12
 (12)

	)

203 
	#TW5864_LOGIC_VD_CHAN13
 (13)

	)

204 
	#TW5864_LOGIC_VD_CHAN14
 (14)

	)

205 
	#TW5864_LOGIC_VD_CHAN15
 (15)

	)

206 
	#TW5864_CROSS_BUS_LOGIC_VD_CHAN_NUMBER
 (16)

	)

207 
	#TW5864_PHY_VD_CHAN_NUMBER
 (16)

	)

208 
	#TW5864_LOGIC_VD_INVALID
 (-1)

	)

209 
	#TW5864_PHY_VJ_CHAN_NUMBER
 (16)

	)

211 
	#TW_AUDIO_IN_CHAN0_ID
 (0)

	)

212 
	#TW_AUDIO_IN_CHAN1_ID
 (1)

	)

213 
	#TW_AUDIO_IN_CHAN2_ID
 (2)

	)

214 
	#TW_AUDIO_IN_CHAN3_ID
 (3)

	)

215 
	#TW_AUDIO_IN_CHAN4_ID
 (4)

	)

216 
	#TW_AUDIO_IN_CHAN5_ID
 (5)

	)

217 
	#TW_AUDIO_IN_CHAN6_ID
 (6)

	)

218 
	#TW_AUDIO_IN_CHAN7_ID
 (7)

	)

219 
	#TW_AUDIO_IN_CHAN8_ID
 (8)

	)

220 
	#TW_AUDIO_IN_CHAN9_ID
 (9)

	)

221 
	#TW_AUDIO_IN_CHAN10_ID
 (10)

	)

222 
	#TW_AUDIO_IN_CHAN11_ID
 (11)

	)

223 
	#TW_AUDIO_IN_CHAN12_ID
 (12)

	)

224 
	#TW_AUDIO_IN_CHAN13_ID
 (13)

	)

225 
	#TW_AUDIO_IN_CHAN14_ID
 (14)

	)

226 
	#TW_AUDIO_IN_CHAN15_ID
 (15)

	)

227 
	#TW_AUDIO_IN_SPEAKER_ID
 (16)

	)

228 
	#TW_AUDIO_OUT_SPEAKER_ID
 (17)

	)

229 
	#TW_AUDIO_OUT_PLAYBACK_ID
 (18)

	)

231 
	#TW_TRUE
 1

	)

232 
	#TW_FALSE
 0

	)

234 
	#TW_DBG_DEBUG
 3

	)

235 
	#TW_DBG_INFO
 2

	)

236 
	#TW_DBG_ERR
 1

	)

237 
	#TW_DBG_FATAL
 0

	)

239 
	#TW_DBG_CUR_LEVEL
 
TW_DBG_DEBUG


	)

241 
	#MESSAGE_LOG


	)

242 #i‚de‡
MESSAGE_LOG


243 
	#TW_DBG
(
Àvñ
, 
fmt
...) \

245 if(
Àvñ
 <
TW_DBG_CUR_LEVEL
){\

246 
	`¥ötk
("<%d>%s, %d:", 
Àvñ
, 
__FUNCTION__
, 
__LINE__
);\

247 
	`¥ötk
(
fmt
);\

249 }0)

	)

252 
	#MESSAGE_LEN
 (0x40000)

	)

254 
	#tw_mesßge_log
(
fmt
...) \

256 if(
mesßge_log
) { \

257 
mesßge_log
->
íd
 +
	`•rötf
(mesßge_log->
buf
 + mesßge_log->íd, 
fmt
); \

258 if(
mesßge_log
->
íd
 >(
MESSAGE_LEN
 - (MESSAGE_LEN>>8))) {\

259 
mesßge_log
->
íd
 = 0; \

261 
	`wake_up_öãºu±ibÀ
(&
mesßge_log
->
waô
);\

263 }0)

	)

265 
	#TW_DBG
(
Àvñ
, 
fmt
...) \

267 if(
Àvñ
 <
TW_DBG_CUR_LEVEL
){\

268 
	`tw_mesßge_log
("<%d>%s, %d:", 
Àvñ
, 
__FUNCTION__
, 
__LINE__
);\

269 
	`tw_mesßge_log
(
fmt
);\

271 }0)

	)

275 
tcb_node
 
	ttcb_node_t
;

276 
tcb_poﬁ
 
	ttcb_node_poﬁ_t
;

277 
tcb_node_queue
 
	ttcb_node_queue_t
;

280 
nŸify_msg
 
	ttw_nŸify_msg
;

281 
tw_ªgi°î_node
 
	ttw_ªgi°î_node_t
;

282 
ªgi°î_èbÀ_node
 
	ttw_ªgi°î_èbÀ_t
;

283 
tw_roŸ_bus
 
	ttw_roŸ_bus_t
;

284 
ty≥_bus
 
	tty≥_bus_t
;

285 
tw_chù_bus
 
	ttw_chù_bus_t
;

288 
ídpoöt_id
 
	ted_id
;

289 
ídpoöt_tcb
 
	ted_tcb_t
;

290 
fsm_°©e_å™s„r_m©rix_èbÀ
 
	tfsm_°©e_å™s„r_m©rix_èbÀ_t
;

291 
tw_ed_fsm
 
	ttw_ed_fsm_t
;

292 
hcd_öãrÁ˚_›î©i⁄
 
	ttw_hcd_öãrÁ˚_›î©i⁄
;

295 
«l_¥i‹ôy
 
	t«l_¥i‹ôy_e
;

296 
«l_unô_ty≥
 
	t«l_unô_ty≥_e
;

297 
‰ame_ty≥
 
	t‰ame_ty≥_e
;

298 
¶i˚_ty≥
 
	t¶i˚_ty≥_e
;

299 
h264_«l
 
	th264_«l_t
;

300 #ifde‡ 
ADD_DVM_NAL_HEAD


301 
_èg_dvm_«l_hód
 
	tDVM_NAL_HEAD
;

303 
«l_öfo
 
	tH264_NAL_INFO
;

304 
h264_«l_hód
 
	th264_«l_bô°ªam_t
;

305 
ext_h264_«l_hód
 
	text_h264_«l_bô°ªam_t
;

306 
h264_•s
 
	th264_•s_t
;

307 
h264_µs
 
	th264_µs_t
;

308 
h264_¶i˚_hódî
 
	th264_¶i˚_hódî_t
;

311 
ö£π_03_°©e_machöe
 
	tö£π_03_°©e_machöe_t
;

312 
tw_video_ch™_buf_poﬁ
 
	ttw_video_ch™_buf_poﬁ_t
;

313 
tw_video_∑ckë_tcb
 
	ttw_video_∑ckë_tcb_t
;

314 
tw_video_∑ckë_tcb_queue
 
	ttw_video_∑ckë_tcb_queue_t
;

315 
tw_video_‰ame_tcb
 
	ttw_video_‰ame_tcb_t
;

316 
tw_video_‰ame_tcb_queue
 
	ttw_video_‰ame_tcb_queue_t
;

317 #ifde‡ 
MV_MODULE


318 
tw_video_mv_∑ckë_tcb
 
	ttw_video_mv_∑ckë_tcb_t
;

319 
tw_video_mv_∑ckë_tcb_queue
 
	ttw_video_mv_∑ckë_tcb_queue_t
;

320 
tw_video_mv_‰ame_tcb
 
	ttw_video_mv_‰ame_tcb_t
;

321 
tw_video_mv_‰ame_tcb_queue
 
	ttw_video_mv_‰ame_tcb_queue_t
;

325 
cbr_rc_°ru˘
 
	ttw_cbr_rc_∑øm_t
;

326 
øã_c⁄åﬁ_drivî_›
 
	ttw_rc_drivî_›
;

327 
vbr_rc_°ru˘
 
	ttw_vbr_rc_°ru˘_t
;

328 
cbr_drivî
 
	ttw_cbr_drivî_t
;

329 
vbr_drivî
 
	ttw_vbr_drivî_t
;

330 
rc_t›_drivî
 
	ttw_rc_drivî_t
;

332 #ifde‡ 
OSD_MODULE


334 
osd_©åibuã_ªgs
 
	tosd_©åibuã_ªgs_t
;

335 
osd_©åibuã_ªgs_group
 
	tosd_©åibuã_ªgs_group_t
;

336 
ícode_osd_timî_©å
 
	tícode_osd_timî_©å_t
;

337 
ícode_osd_°rög_©å
 
	tícode_osd_°rög_©å_t
;

338 
ícode_osd_mask_©å
 
	tícode_osd_mask_©å_t
;

339 
ª˘™gÀ_©åibuã
 
	tª˘™gÀ_©åibuã_t
;

340 
osd_mb_poﬁ
 
	tosd_mb_poﬁ_t
;

341 
osd_mb_ch¨_íåy
 
	tosd_mb_ch¨_íåy_t
;

342 
osd_ª˘™gÀ_d¥am_tcb
 
	tosd_ª˘™gÀ_d¥am_tcb_t
;

343 
osd_ª˘™gÀ_íåy
 
	tosd_ª˘™gÀ_íåy_t
;

344 
osd_ch™_ígöe
 
	tosd_ch™_ígöe_t
;

345 
_TW_OSD_PARAM
 
	tTW_OSD_PARAM
;

349 
tw_time°amp
 
	ttw_time°amp_t
;

350 
tw_h264_ícode_c⁄figuøti⁄
 
	ttw_h264_ícode_c⁄figuøti⁄_t
;

351 
tw_h264_ícode_¥›îty
 
	ttw_h264_ícode_¥›îty_t
;

352 
tw_h264_logic_video_¶Ÿ
 
	ttw_h264_logic_video_¶Ÿ_t
;

353 
vd_ch™_m≠_öfo
 
	tvd_ch™_m≠_öfo_t
;

354 
tw5864_vd_¸oss_bus
 
	ttw5864_vd_¸oss_bus_t
;

355 
tw_vd_‹ig_buf_öfo
 
	ttw_vd_‹ig_buf_öfo_t
;

356 
tw_h264_phy_video_¶Ÿ
 
	ttw_h264_phy_video_¶Ÿ_t
;

357 
tw_h264_ícode_c⁄åﬁ
 
	ttw_h264_ícode_c⁄åﬁ_t
;

358 
ícode_ch™_£rvi˚_tcb
 
	tícode_ch™_£rvi˚_tcb_t
;

359 
chù_ícode_ch™_£rvi˚_queue
 
	tchù_ícode_ch™_£rvi˚_queue_t
;

360 
tw_h264_logic_ícode_ch™
 
	ttw_h264_logic_ícode_ch™_t
;

361 
ddr_bô°ªam_hódî
 
	tddr_bô°ªam_hódî_t
;

362 
ddr_video_bô°ªam_hódî
 
	tddr_video_bô°ªam_hódî_t
;

365 
tw_j≥g_logic_ícode_ch™
 
	ttw_j≥g_logic_ícode_ch™_t
;

369 
tw_audio_£˘i⁄_des¸ùt‹
 
	ttw_audio_des¸ùt‹_t
;

370 
tw_audio_∑øm
 
	ttw_audio_∑øm_t
;

371 
audio_c⁄fig_des¸ùt‹
 
	ttw_audio_c⁄fig_des¸ùt‹_t
;

372 
audio_ícode_c⁄åﬁ
 
	taudio_ícode_c⁄åﬁ_t
;

373 
audio_pcm_ícode_±r_c⁄åﬁ
 
	taudio_pcm_ícode_±r_c⁄åﬁ_t
;

374 
audio_pcm_ícode_d©a_addr
 
	taudio_pcm_ícode_d©a_addr_t
;

375 
audio_adpcm_ícode_±r_c⁄åﬁ
 
	taudio_adpcm_ícode_±r_c⁄åﬁ_t
;

376 
audio_adpcm_ícode_d©a_addr
 
	taudio_adpcm_ícode_d©a_addr_t
;

377 
chù_audio_ícode
 
	tchù_audio_ícode_t
;

378 
audio_decode_c⁄åﬁ
 
	taudio_decode_c⁄åﬁ_t
;

379 
audio_decode_±r_c⁄åﬁ
 
	taudio_decode_±r_c⁄åﬁ_t
;

380 
audio_decode_d©a_addr
 
	taudio_decode_d©a_addr_t
;

381 
chù_audio_decode
 
	tchù_audio_decode_t
;

382 
audio_íabÀ_c⁄åﬁ
 
	taudio_íabÀ_c⁄åﬁ_t
;

383 
chù_audio
 
	tchù_audio_t
;

386 
audio_£˘i⁄_des¸ùt‹
 
	taudio_£˘i⁄_des¸ùt‹_t
;

387 
tw_audio_ch™_buf_poﬁ
 
	ttw_audio_ch™_buf_poﬁ_t
;

388 
tw_audio_∑ckë_£˘i⁄
 
	ttw_audio_∑ckë_£˘i⁄_t
;

389 
tw_audio_∑ckë_queue
 
	ttw_audio_∑ckë_queue_t
;

392 
tw_audio_ch™_drivî
 
	ttw_audio_drivî_t
;

393 
audio_£˘i⁄_±r_öfo
 
	taudio_£˘i⁄_±r_öfo_t
;

396 
ddr_bur°_öãrÁ˚_ªg
 
	tddr_bur°_öãrÁ˚_t
;

397 
d¥am_∑ge_node
 
	td¥am_∑ge_node_t
;

398 
d¥am_∑ge_ªsour˚_m™age
 
	td¥am_∑ge_ªsour˚_m™age_t
;

399 
ddr_video_bô°ªam_buf_node
 
	tddr_video_bô°ªam_buf_node_t
;

400 
ddr_video_bô°ªam_ªsour˚_m™age
 
	tddr_video_bô°ªam_ªsour˚_m™age_t
;

401 
d¥am_ªque°
 
	td¥am_ªque°_t
;

402 
d¥am_ªque°_queue
 
	td¥am_ªque°_queue_t
;

403 
d¥am_c⁄åﬁ
 
	td¥am_c⁄åﬁ_t
;

407 
	tblockøm_addr
;

408 
	tÂga_ªg_addr
;

409 
dvm4000i_chù
 
	tdvm_chù_t
;

410 
tw5864_öãºu±_c⁄åﬁ
 
	ttw5864_öãºu±_c⁄åﬁ_t
;

418 
avSync_‰ame_buf_poﬁ
 
	tavSync_‰ame_buf_poﬁ_t
;

419 
avSync_‰ame_tcb
 
	tavSync_‰ame_tcb_t
;

420 
avSync_‰ame_queue
 
	tavSync_‰ame_queue_t
;

424 
tw5864_avSync_dev
 
	ttw5864_avSync_dev_t
;

429 
tw_kthªad_msg
 
	ttw_kthªad_msg_t
;

430 
tw_kthªad_msg_queue
 
	ttw_kthªad_msg_queue_t
;

431 
tw_kthªad_msg_poﬁ
 
	ttw_kthªad_msg_poﬁ_t
;

435 
tw_‰ame_hódî
 
	ttw_‰ame_hódî_t
;

436 
tw_h264_idr_‰ame_∑d
 
	ttw_h264_idr_‰ame_∑d_t
;

437 
tw_video_mŸi⁄_ve˘‹_∑d
 
	ttw_video_mŸi⁄_ve˘‹_∑d_t
;

438 
tw_audio_‰ame_∑d
 
	ttw_audio_‰ame_∑d_t
;

440 
	~<tw5864/HÆSo·TimîLib.h
>

441 
	~<tw5864/dma.h
>

443 
	~<tw5864/dvm_√w_buf.h
>

444 
	~<tw5864/chù_bus_scheduÀ.h
>

445 
	~<tw5864/tw_ídpoöt.h
>

446 
	~<tw5864/tw_kthªad_msg.h
>

447 
	~<tw5864/ddr_bur°_öãrÁ˚.h
>

448 
	~<tw5864/b¨_˘l.h
>

449 
	~<tw5864/bs.h
>

450 
	~<tw5864/bô°ªam.h
>

451 
	~<tw5864/gﬁomb.h
>

452 
	~<tw5864/Ægo_h264_drivî.h
>

453 
	~<tw5864/tw_h264_video_buf.h
>

454 
	~<tw5864/dvm_rc.h
>

455 #ifde‡ 
OSD_MODULE


456 
	~<tw5864/dvm_osd.h
>

458 
	~<tw5864/tw_h264_ícode.h
>

460 
	~<tw5864/tw_audio_i›.h
>

461 
	~<tw5864/tw_audio_buf.h
>

462 
	~<tw5864/tw_audio_ch™_drivî.h
>

464 
	~<tw5864/tw_vb_comm⁄.h
>

465 
	~<tw5864/tw_j≥g_codec.h
>

467 
	~<tw5864/tw_avSync_devi˚_buf.h
>

468 
	~<tw5864/tw_avSync_devi˚.h
>

471 
	~<tw5864/¥oc_íåy.h
>

472 
	~<tw5864/tc_comm⁄.h
>

473 
	~<tw5864/tw_chù_drivî.h
>

474 
	~<tw5864/tw_chù_ai.h
>

475 
	~<tw5864/tw_chù_ao.h
>

476 
	~<tw5864/tw_chù_vi.h
>

477 
	~<tw5864/tw_chù_vo.h
>

478 
	~<tw5864/tw_decode_sync.h
>

479 
	~<tw5864/tw_video_di•œy.h
>

480 
	~<tw5864/tw5864_chù.h
>

482 
	~<tw5864/tw_öãrÁ˚.h
>

484 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/dvm_new_buf.h

1 #i‚def 
DVM_NEW_BUF_H


2 
	#DVM_NEW_BUF_H


	)

4 #ifde‡
__˝lu•lus


9 
	eTCB_NODE_STATE
 {

10 
TCB_IDLE_STATE
 = 0,

11 
TCB_STANDBY_STATE
,

12 
TCB_RUNNING_STATE
,

13 
TCB_SUSPEND_STATE
,

14 
TCB_CLOSE_STATE


17 
	stcb_node_›î©i⁄
{

18 (*
öô
)(
tcb_node_t
 *);

19 (*
£t_¥iv
)(
tcb_node_t
 *, *);

20 (*
ª„ªn˚
)(
tcb_node_t
 *,Åcb_node_t **);

21 (*
ªÀa£
)(
tcb_node_t
 *, 
tcb_node_poﬁ_t
 *);

22 (*
upd©e_°©e
)(
tcb_node_t
 *, );

25 
	stcb_node
{

26 
li°_hód
 
li°
;

27 *
tcb_¥iv
;

28 
©omic_t
 
ªf_cou¡
;

29 
TCB_NODE_STATE
 
°©e
;

31 
tcb_node_›î©i⁄
 *
›
;

34 
	stcb_poﬁ_›î©i⁄
{

35 (*
öô
)(
tcb_node_poﬁ_t
 *, );

36 (*
ªÀa£
)(
tcb_node_poﬁ_t
 *);

38 (*
gë
)(
tcb_node_poﬁ_t
 *, 
tcb_node_t
 **);

39 (*
åy_gë
)(
tcb_node_poﬁ_t
 *, 
tcb_node_t
 **);

40 (*
put
)(
tcb_node_poﬁ_t
 *, 
tcb_node_t
 *);

42 (*
gë_cuº_poﬁ_íåy_numbî
)(
tcb_node_poﬁ_t
 *);

45 
	stcb_poﬁ
{

46 
li°_hód
 
poﬁ_hódî
;

47 
waô_queue_hód_t
 
waô
;

48 
•ölock_t
 
lock
;

49 
©omic_t
 
cuº_poﬁ_íåy_numbî
;

50 
poﬁ_íåy_numbî
;

52 
tcb_poﬁ_›î©i⁄
 *
›
;

55 
	stcb_node_queue_›î©i⁄
{

56 (*
gë_queue_cuº_íåy_numbî
)(
tcb_node_queue_t
 *);

58 (*
öô
)(
tcb_node_queue_t
 *);

59 (*
put
)(
tcb_node_queue_t
 *, 
tcb_node_t
 *);

60 (*
put_hódî
)(
tcb_node_queue_t
 *, 
tcb_node_t
 *);

61 (*
gë
)(
tcb_node_queue_t
 *, 
tcb_node_t
 **);

62 (*
gë_èûî
)(
tcb_node_queue_t
 *, 
tcb_node_t
 **);

63 (*
åy_gë
)(
tcb_node_queue_t
 *, 
tcb_node_t
 **);

64 (*
åy_gë_èûî
)(
tcb_node_queue_t
 *, 
tcb_node_t
 **);

67 
	stcb_node_queue
{

68 
•ölock_t
 
lock
;

69 
li°_hód
 
queue_hódî
;

70 
waô_queue_hód_t
 
waô
;

71 
©omic_t
 
cuº_queue_íåy_numbî
;

73 
tcb_node_queue_›î©i⁄
 *
›
;

76 
tcb_node_›î©i⁄
 
tcb_node_›
;

77 
tcb_poﬁ_›î©i⁄
 
tcb_node_poﬁ_›
;

78 
tcb_node_queue_›î©i⁄
 
tcb_node_queue_›
;

80 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/dvm_osd.h

1 #i‚def 
DVM_OSD_H


2 
	#DVM_OSD_H


	)

4 #ifde‡
__˝lu•lus


9 
	#TIMER_RECTANGLE_ID
 (0)

	)

10 
	#CHAN_NAME_RECTANGLE_ID
 (1)

	)

11 
	#SUBTILTE1_RECTANGLE_ID
 (2)

	)

12 
	#SUBTILTE2_RECTANGLE_ID
 (3)

	)

13 
	#SUBTILTE3_RECTANGLE_ID
 (4)

	)

14 
	#SUBTILTE4_RECTANGLE_ID
 (5)

	)

15 
	#SHELTER1_RECTANGLE_ID
 (6)

	)

16 
	#SHELTER2_RECTANGLE_ID
 (7)

	)

18 
	#NAME_LEN
 (32)

	)

19 
	#SUB_LEN
 (44)

	)

20 
	#OSD_ATTR_DISPLAY_OFF
 (0)

	)

21 
	#OSD_ATTR_DISPLAY_ON
 (0x1)

	)

22 
	#OSD_FONT_12
 (0x2)

	)

23 
	#OSD_FONT_24
 (0x8)

	)

24 
	#OSD_FONT_MASK
 (0xe)

	)

25 
	#CHAR_RECTANGLE_X_LEFT
 (8)

	)

26 
	#CHAR_RECTANGLE_Y_LEFT
 (2)

	)

28 
	s_TW_OSD_PARAM
 {

29 
ch™√l
;

30 
«me
[
NAME_LEN
];

31 
«me_©åib
;

32 
«me_pos_x
;

33 
«me_pos_y
;

34 
time_©åib
;

35 
time_pos_x
;

36 
time_pos_y
;

37 
shñãr1_©åib
;

38 
shñãr1_pos_x
;

39 
shñãr1_pos_y
;

40 
shñãr1_width
;

41 
shñãr1_height
;

42 
shñãr2_©åib
;

43 
shñãr2_pos_x
;

44 
shñãr2_pos_y
;

45 
shñãr2_width
;

46 
shñãr2_height
;

47 
subtôÀ1
[
SUB_LEN
];

48 
subtôÀ1_©åib
;

49 
subtôÀ1_pos_x
;

50 
subtôÀ1_pos_y
;

51 
subtôÀ2
[
SUB_LEN
];

52 
subtôÀ2_©åib
;

53 
subtôÀ2_pos_x
;

54 
subtôÀ2_pos_y
;

55 
subtôÀ3
[
SUB_LEN
];

56 
subtôÀ3_©åib
;

57 
subtôÀ3_pos_x
;

58 
subtôÀ3_pos_y
;

59 
subtôÀ4
[
SUB_LEN
];

60 
subtôÀ4_©åib
;

61 
subtôÀ4_pos_x
;

62 
subtôÀ4_pos_y
;

65 
	#OSD_CHAN_RECTANGLE_NUMBER
 (8)

	)

66 
	#OSD_CHAN_MAX_STRING_RECTANGLE_NUMBER
 (7)

	)

67 
	#OSD_MB_ENTRY_NUMBER
 (1024)

	)

68 
	#OSD_MB_BUF_CHAR_BITMAP_LEN
 (32>>2)

	)

70 
	#INVALID_OSD_VALUE_ID
 (-1)

	)

72 
	#ENCODE_OSD_MODE0
 (0)

	)

73 
	#ENCODE_OSD_MODE1
 (1)

	)

74 
	#ENCODE_OSD_MODE2
 (2)

	)

75 
	#ENCODE_OSD_MODE3
 (3)

	)

78 
	sosd_©åibuã_ªgs1
{

79 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

80 
u32
 
ª˘™gÀ_mb_x
:7;

81 
u32
 
ª˘™gÀ_mb_y
:7;

82 
u32
 
ª˘™gÀ_mb_x_width
:7;

83 
u32
 
ª˘™gÀ_mb_y_height
:7;

84 
u32
 
d©a_ba£_addr8
:1;

85 
u32
 
mode
:2;

86 
u32
 
íabÀ
:1;

87 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

88 
u32
 
íabÀ
:1;

89 
u32
 
mode
:2;

90 
u32
 
d©a_ba£_addr8
:1;

91 
u32
 
ª˘™gÀ_mb_y_height
:7;

92 
u32
 
ª˘™gÀ_mb_x_width
:7;

93 
u32
 
ª˘™gÀ_mb_y
:7;

94 
u32
 
ª˘™gÀ_mb_x
:7;

98 }
STRUCT_PACKET_ALIGN
(1);

100 
	uosd_©å_ªg1_vÆue
{

101 
osd_©åibuã_ªgs1
 
ªg1
;

102 
u32
 
vÆue
;

103 }
STRUCT_PACKET_ALIGN
(1);

105 
	sosd_©åibuã_ªgs2
{

106 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

107 
u32
 
mode1_‰⁄t_v
:8;

108 
u32
 
mode1_‰⁄t_u
:8;

109 
u32
 
mode1_‰⁄t_y
:8;

110 
u32
 
d©a_ba£_addr_7_0
:8;

111 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

112 
u32
 
d©a_ba£_addr_7_0
:8;

113 
u32
 
mode1_‰⁄t_y
:8;

114 
u32
 
mode1_‰⁄t_u
:8;

115 
u32
 
mode1_‰⁄t_v
:8;

119 }
STRUCT_PACKET_ALIGN
(1);

121 
	uosd_©å_ªg2_vÆue
{

122 
osd_©åibuã_ªgs2
 
ªg2
;

123 
u32
 
vÆue
;

124 }
STRUCT_PACKET_ALIGN
(1);

126 
	sosd_©åibuã_ªgs3
{

127 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

128 
u32
 
mode1_background_v
:8;

129 
u32
 
mode1_background_u
:8;

130 
u32
 
mode1_background_y
:8;

131 
u32
 
d©a_ba£_m≠_mode
:2;

132 
u32
 
osd_d©a_addªss_off£t
:3;

133 
u32
 
ª£rved
:3;

134 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

135 
u32
 
ª£rved
:3;

136 
u32
 
osd_d©a_addªss_off£t
:3;

137 
u32
 
d©a_ba£_m≠_mode
:2;

138 
u32
 
mode1_background_y
:8;

139 
u32
 
mode1_background_u
:8;

140 
u32
 
mode1_background_v
:8;

144 }
STRUCT_PACKET_ALIGN
(1);

146 
	uosd_©å_ªg3_vÆue
{

147 
osd_©åibuã_ªgs3
 
ªg3
;

148 
u32
 
vÆue
;

149 }
STRUCT_PACKET_ALIGN
(1);

151 
	sosd_©åibuã_ªgs_›î©i⁄
{

152 (*
£t
)(
osd_©åibuã_ªgs_t
 *);

153 (*
£t_no_di•œy
)(
osd_©åibuã_ªgs_t
 *);

154 (*
ª£t
)(
osd_©åibuã_ªgs_t
 *);

157 
	sosd_©åibuã_ªgs
{

158 
osd_©å_ªg1_vÆue
 
ªg1_vÆue
;

159 
osd_©å_ªg2_vÆue
 
ªg2_vÆue
;

160 
osd_©å_ªg3_vÆue
 
ªg3_vÆue
;

163 
	eENCODE_OSD_TIMER_DISPLAY
{

164 
YEAR_MONTH_DAY_HOUR_MINUTE_SECOND
=0,

165 
YEAR_NONTH_DAY_NEWLINE_HOUR_MINUTE_SECOND_LEFT_ALIGN
,

166 
YEAR_MONTH_DAY_NEWLINE_HOUR_MINUTE_SECOND_RIGHT_ALIGN
,

167 
DONT_DISPLAY_TIMER
,

170 
osd_sy°em_timî
 
	tosd_sy°em_timî_t
;

171 
	sosd_sy°em_timî
{

172 
yór
;

173 
m⁄th
;

174 
day
;

175 
hour
;

176 
möuã
;

177 
£c⁄d
;

178 
u32
 
√ed_upd©e_m≠_èbÀ
[
MAX_CHIP_NUM_IN_BOARD
];

181 
	sícode_osd_timî_©å_›î©i⁄
{

182 (*
ª£t
)(
ícode_osd_timî_©å_t
 *, , );

185 
	sícode_osd_timî_©å
{

186 
timî_di•œy_mode
;

187 
mb_x
, 
mb_y
;

188 
f⁄t_ty≥
;

189 
√ed_upd©e_Êag
;

190 
osd_sy°em_timî_t
 *
timî
;

191 
ícode_osd_timî_©å_›î©i⁄
 *
›
;

194 
	eENCODE_OSD_STRING_DATA_ADDR_MAP_MODE
{

195 
Y8MB_X128MB_OSDMODE013
 = 0,

196 
Y16MB_X64MB_OSDMODE013
,

197 
Y32MB_X32MB_OSDMODE013
,

198 
Y64MB_X16MB_OSDMODE013
,

201 
	sícode_osd_°rög_©å_›î©i⁄
{

202 (*
ª£t
)(
ícode_osd_°rög_©å_t
 *);

205 
	#FONT_TYPE_12X12
 (0x02)

	)

206 
	#ASCII12_PIXEL_WIDTH
 (8)

	)

207 
	#FONT12_PIXEL_WIDTH
 (12)

	)

208 
	#FONT_TYPE_16X16
 (0x04)

	)

209 
	#ASCII16_PIXEL_WIDTH
 (8)

	)

210 
	#FONT16_PIXEL_WIDTH
 (16)

	)

211 
	#FONT_TYPE_24X24
 (0x08)

	)

212 
	#ASCII24_PIXEL_WIDTH
 (12)

	)

213 
	#FONT24_PIXEL_WIDTH
 (24)

	)

214 
	#MB_PIXEL_WIDTH
 (16)

	)

215 
	sícode_osd_°rög_©å
{

216 
mb_x
, 
mb_y
;

217 
mb_width
, 
mb_height
;

218 
d©a_addr_m≠_mode
;

219 
√ed_upd©e_Êag
;

220 
u8
 *
°rög
;

221 
°rög_Àn
;

222 
f⁄t_ty≥
;

223 
ícode_osd_°rög_©å_›î©i⁄
 *
›
;

226 
	sícode_osd_mask_©å_›î©i⁄
{

227 (*
ª£t
)(
ícode_osd_mask_©å_t
 *);

230 
	sícode_osd_mask_©å
{

231 
mb_x
, 
mb_y
;

232 
mask_width
, 
mask_height
;

233 
y_vÆue
, 
u_vÆue
, 
v_vÆue
;

234 
d©a_addr_m≠_mode
;

235 
√ed_upd©e_Êag
;

236 
is_di•œy
;

237 
ícode_osd_mask_©å_›î©i⁄
 *
›
;

240 
	sosd_mb_poﬁ_›î©i⁄
{

241 (*
¸óã
)(
osd_mb_poﬁ_t
 *
ch™_osd_mb_buf_poﬁ
, );

242 (*
ªÀa£
)(
osd_mb_poﬁ_t
 *
ch™_osd_mb_buf_poﬁ
);

244 (*
gë
)(
osd_mb_poﬁ_t
 *, 
osd_mb_ch¨_íåy_t
 **, 
osd_ª˘™gÀ_íåy_t
 *);

245 (*
åy_gë
)(
osd_mb_poﬁ_t
 *, 
osd_mb_ch¨_íåy_t
 **, 
osd_ª˘™gÀ_íåy_t
 *);

246 (*
put
)(
osd_mb_poﬁ_t
 *, 
osd_mb_ch¨_íåy_t
 *);

247 (*
gë_osd_mb_tcb_poﬁ_íåy_numbî
)(
osd_mb_poﬁ_t
 *
ch™_osd_buf_poﬁ
);

250 
	sosd_mb_poﬁ
{

251 
mb_ch¨_ˇche_‹dî
;

252 
tcb_node_poﬁ_t
 
osd_mb_ch¨_poﬁ_tcb
;

253 
dvm_chù_t
 *
chù
;

254 
osd_mb_ch¨_íåy_t
 *
mb_ch¨_íåy_ˇche
;

256 
osd_mb_poﬁ_›î©i⁄
 *
›
;

259 
	sosd_mb_ch¨_›î©i⁄
{

260 (*
ª£t
)(
osd_mb_ch¨_íåy_t
 *);

261 (*
ªÀa£
)(
osd_mb_ch¨_íåy_t
 *);

262 (*
upd©e_mb_vútuÆ_d©a
)(
osd_mb_ch¨_íåy_t
 *, , );

263 (*
upd©e_Âga_osd_d©a
)(
osd_mb_ch¨_íåy_t
 *);

266 
	#to_gë_osd_mb_ch¨_íåy_wôh_node
(
node
Ë
	`c⁄èöî_of
“ode, 
osd_mb_ch¨_íåy_t
, 
osd_mb_node
)

	)

267 
	sosd_mb_ch¨_íåy
{

268 
osd_mb_poﬁ_t
 *
poﬁ
;

269 
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
;

270 
tcb_node_t
 
osd_mb_node
;

271 
ddr_∑ge
, 
ddr_∑ge_off£t
;

272 
u32
 
osd_d©a_addr_ba£
;

274 
u8
 
mb_ch¨_buf
[
OSD_MB_BUF_CHAR_BITMAP_LEN
<<2];

275 
u32
 *
∑ylﬂd
, 
∑ylﬂd_Àn
;

276 
ªf_mb_x
, 
ªf_mb_y
;

278 
osd_mb_ch¨_›î©i⁄
 *
›
;

281 
	sosd_ª˘™gÀ_d¥am_tcb_›î©i⁄
{

282 (*
öô
)(
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
);

283 (*
submô_wrôe_osd_ª˘™gÀ_d©a_ªq
)(
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
, 
dvm_chù_t
 *
chù
);

284 (*
submô_wrôe_osd_ª˘™gÀ_©å
)(
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
, 
dvm_chù_t
 *
chù
);

285 (*
ª•⁄£_wrôe_osd_ª˘™gÀ
)(
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
, 
dvm_chù_t
 *
chù
);

288 
	sosd_ª˘™gÀ_d¥am_tcb
{

289 
d¥am_ªque°_t
 
osd_d©a_ªq
;

290 
d¥am_∑ge_node_t
 *
d¥am_∑ge
;

292 
osd_ª˘™gÀ_d¥am_tcb_›î©i⁄
 *
›
;

295 
	sosd_ª˘™gÀ_›î©i⁄
{

296 (*
ª£t
)(
osd_ª˘™gÀ_íåy_t
 *);

297 (*
˛o£_ª˘™gÀ
)(
osd_ª˘™gÀ_íåy_t
 *);

298 (*
put_mb_öto_ª˘™gÀ
)(
osd_ª˘™gÀ_íåy_t
 *, 
osd_mb_ch¨_íåy_t
 *);

299 (*
åy_gë_mb_‰om_ª˘™gÀ
)(
osd_ª˘™gÀ_íåy_t
 *, 
osd_mb_ch¨_íåy_t
 **);

300 (*
upd©e_ª˘™gÀ_Âga_buf
)(
osd_ª˘™gÀ_íåy_t
 *);

301 (*
upd©e_ª˘™gÀ_©å_ªgs
)(
osd_ª˘™gÀ_íåy_t
 *);

302 (*
decide_ª˘™gÀ_d©a_addr_m≠
)(
osd_ª˘™gÀ_íåy_t
 *, 
video_sour˚_size
);

303 (*
£t_ª˘™gÀ_m≠_mode
)(
osd_ª˘™gÀ_íåy_t
 *, );

306 
	uª˘™gÀ_©åibuã
{

307 *
em±y_ª˘™gÀ_©åibuã
;

308 
ícode_osd_timî_©å_t
 *
time_ª˘™gÀ_©åibuã
;

309 
ícode_osd_°rög_©å_t
 *
°rög_ª˘™gÀ_©åibuã
;

310 
ícode_osd_mask_©å_t
 *
mask_ª˘™gÀ_©åibuã
;

313 
	eENCODE_OSD_RECTANGLE_TYPE
{

314 
EMPTY_RECTANGLE_ENCODE_OSD
,

315 
TIMER_RECTANGLE_ENCODE_OSD
,

316 
CHAR_RECTANGLE_ENCODE_OSD
,

317 
MASK_RECTANGLE_ENCODE_OSD
,

320 
	#to_osd_ª˘™gÀ_íåy_wôh_osd_ª˘™gÀ_d¥am_tcb
(
node
Ë
	`c⁄èöî_of
“ode, 
osd_ª˘™gÀ_íåy_t
, 
osd_d¥am_ªq
)

	)

321 
	sosd_ª˘™gÀ_íåy
{

322 
dvm_chù_t
 *
chù
;

323 
osd_ch™_ígöe_t
 *
osd_ch™_ígöe
;

324 
tcb_node_queue_t
 
mb_ch¨_queue_node
;

325 
osd_íabÀ
;

326 
√ed_upd©e_d©a
;

327 
√ed_upd©e_©å
;

328 
ª˘™gÀ_mode
;

329 
ª˘™gÀ_id
;

330 
ch™_id
;

331 
ª˘™gÀ_À·_x
, 
ª˘™gÀ_À·_y
, 
ª˘™gÀ_right_x
, 
ª˘™gÀ_right_y
;

332 
ª˘™gÀ_©åibuã_t
 
¥iv©e_©åi
;

333 
osd_©åibuã_ªgs_t
 *
©å_ªgs
;

334 
osd_d©a_addr_ba£
;

335 
osd_ª˘™gÀ_d¥am_tcb_t
 
osd_d¥am_ªq
;

337 
osd_ª˘™gÀ_›î©i⁄
 *
›
;

340 
	sosd_ch™_ígöe_›î©i⁄
{

341 (*
¸óã_ch¨_ª˘™gÀ
)(
osd_ch™_ígöe_t
 *, );

342 (*
¸óã_mask_ª˘™gÀ
)(
osd_ch™_ígöe_t
 *, );

343 #ifdef 
TESTING_TIMESTAMP


344 (*
¸óã_timî_ª˘™gÀ
)(
osd_ch™_ígöe_t
 *, , , , , );

345 (*
¸óã_ª˘™gÀ
)(
osd_ch™_ígöe_t
 *, 
TW_OSD_PARAM
 *, , , , , );

347 (*
¸óã_timî_ª˘™gÀ
)(
osd_ch™_ígöe_t
 *);

348 (*
¸óã_ª˘™gÀ
)(
osd_ch™_ígöe_t
 *, 
TW_OSD_PARAM
 *);

350 (*
˛o£_ch™_ígöe_ª˘™gÀs
)(
osd_ch™_ígöe_t
 *);

351 (*
upd©e_ícode_osd_¥›îty
)(
osd_ch™_ígöe_t
 *, 
TW_OSD_PARAM
 *);

352 (*
upd©e_Âga_osd_ícode
)(
osd_ch™_ígöe_t
 *);

353 (*
gë_ª˘™gÀ
)(
osd_ch™_ígöe_t
 *, 
osd_ª˘™gÀ_íåy_t
 **, , );

354 (*
put_ª˘™gÀ
)(
osd_ch™_ígöe_t
 *, 
osd_ª˘™gÀ_íåy_t
 *);

357 
	sosd_©åibuã_ªgs_group_›î©i⁄
{

358 (*
öô_osd_ch™_ª˘™gÀ_©å_ªgs_group
)(
osd_©åibuã_ªgs_group_t
 *);

359 (*
ch™_ª˘™gÀ_©å_ªgs_£t
)(
osd_©åibuã_ªgs_group_t
 *, 
ª˘_id
);

360 (*
ch™_ª˘™gÀ_©å_ªgs_£t_no_di•œy
)(
osd_©åibuã_ªgs_group_t
 *, 
ª˘_id
);

361 (*
ch™_ª˘™gÀ_©å_ªgs_ª£t
)(
osd_©åibuã_ªgs_group_t
 *, 
ª˘_id
);

362 (*
upd©e_ch™_ª˘™gÀ_©å_ªgs
)(
osd_©åibuã_ªgs_group_t
 *, 
dvm_chù_t
 *);

365 
	#to_osd_©åibuã_ªgs_group_wôh_osd_d¥am_ªq
(
node
Ë
	`c⁄èöî_of
“ode, 
osd_©åibuã_ªgs_group_t
, 
osd_d¥am_ªq
)

	)

366 
	sosd_©åibuã_ªgs_group
{

367 
osd_©åibuã_ªgs_t
 
©åibuã_ªgs_group
[
OSD_CHAN_RECTANGLE_NUMBER
];

368 
u32
 
osd_ch™_©å_ªg_ba£
;

369 
u32
 
osd_ch™_©å_ªg_∑ge_id
;

370 
osd_ª˘™gÀ_d¥am_tcb_t
 
osd_d¥am_ªq
;

372 
osd_©åibuã_ªgs_group_›î©i⁄
 *
ch™_ª˘_©å_ªgs_group_›
;

373 
osd_©åibuã_ªgs_›î©i⁄
 *
ª˘_©å_ªgs_›
;

376 
	#to_osd_ch™_ígöe_wôh_osd_©åibuã_ªgs_group
(
node
Ë
	`c⁄èöî_of
“ode, 
osd_ch™_ígöe_t
, 
©åibuã_ªgs
)

	)

377 
	sosd_ch™_ígöe
{

378 
•ölock_t
 
osd_lock
;

379 
©omic_t
 
osd_is_w‹kög
;

380 
com∂ëi⁄
 
waô_d⁄e
;

381 
osd_©åibuã_ªgs_group_t
 
©åibuã_ªgs
;

382 
osd_mb_poﬁ_t
 
osd_ch™_poﬁ
;

384 
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
;

385 
TW_OSD_PARAM
 
osd_ru¬ög_∑øm
;

386 
©omic_t
 
sync_osd_∑øm
;

387 
u32
 
ch™_ª˘™gÀ_u£d_m≠_èbÀ
;

388 
u32
 
ch™_d©a_ba£
;

389 
ma°îOrSub
;

390 
videoSizeMode
;

391 
osd_ª˘™gÀ_íåy_t
 
ª˘™gÀ
[
OSD_CHAN_RECTANGLE_NUMBER
];

392 
ícode_osd_timî_©å_t
 
timî_©å
;

393 
ícode_osd_°rög_©å_t
 
°rög_©å
[
OSD_CHAN_MAX_STRING_RECTANGLE_NUMBER
];

394 
ícode_osd_mask_©å_t
 
mask_©å
[
OSD_CHAN_MAX_STRING_RECTANGLE_NUMBER
];

396 
osd_ch™_ígöe_›î©i⁄
 *
›
;

400 
check_πc_time
(
timevÆ
 *
tv1
);

401 
˛o£_ícode_osd_ch™_ígöe
(
osd_ch™_ígöe_t
 *);

402 
ªmove_ícode_osd_ch™_ígöe
(
osd_ch™_ígöe_t
 *);

403 
öô_ícode_osd_ch™_ígöe
(
osd_ch™_ígöe_t
 *, );

405 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/dvm_rc.h

1 #i‚de‡
_DVM_RC_H_


2 
	#_DVM_RC_H_


	)

4 #ifde‡
__˝lu•lus


9 
__u8
 
	tboﬁón
;

11 
	#SMOOTH_WINDOW_MIN_SIZE
 (10)

	)

12 
	#SMOOTH_WINDOW_MAX_SIZE
 (60)

	)

13 
	#RC_WINDOWS_VALUE
 (20)

	)

15 
	#RC_MIN_BIT_BUDGET_CONST
 (45)

	)

16 
	#RC_RHO_BITRATE_A
 (1597)

	)

17 
	#MAX_PERCENT_QP_CHANGE_DOWN
 (5)

	)

18 
	#MAX_PERCENT_QP_CHANGE_UP
 (10)

	)

19 
	#QUANT_SCALE_MIN
 (16)

	)

20 
	#QUANT_SCALE_MAX
 (51)

	)

21 
	#QUANT_SCALE_MAX_ADD1
 (
QUANT_SCALE_MAX
+1)

	)

22 
	#HIGH_TEXT_PERCENT
 (256)

	)

23 
	#QP_LOOKUP_TABLE_STEP
 (52)

	)

26 
	scbr_rc_°ru˘


28 
b_Êag_upd©e
;

29 
bôs_u£d_‰ame
;

30 
n‹m_‰ame_bô_budgë
;

31 
bôs_f‹_n⁄ãxt_e°
;

32 
mö_‰ame_bô_budgë
;

33 
max_‰ame_bô_budgë
;

34 
¥ev_n‹m_‰ame_bôs_u£d
;

35 
bôs_≥r_‰ame
;

36 
tŸÆ_bô_dñè
;

37 
rho
;

38 
A
;

40 
nz_cou¡
;

41 
rc_wödow
;

42 
öô_rc_wödow
;

43 
¥ev_qp
;

44 
¥ev_two_qp
;

45 
¥ev_bô_budgë
;

47 
øtio
 ;

48 
tŸÆ_øtio
;

49 
fú°_‰ame_qp
;

50 
fú°_10_max_qp
;

51 
fú°_10_mö_qp
;

52 
rho_qp_èbÀ
[
QP_LOOKUP_TABLE_STEP
];

56 
	søã_c⁄åﬁ_drivî_›


58 (*
öô_rc
)(
tw_h264_logic_ícode_ch™_t
 *);

59 (*
£t_qp
)(
tw_h264_logic_ícode_ch™_t
 *, 
tw_video_‰ame_tcb_t
 *);

60 (*
upd©e_rc
)(
tw_h264_logic_ícode_ch™_t
 *);

61 (*
jump_rc
)(
tw_h264_logic_ícode_ch™_t
 *);

64 
	scbr_drivî


66 
tw_cbr_rc_∑øm_t
 
rc_∑øm
;

67 
tw_rc_drivî_›
 *
rc_›
;

70 
	svbr_rc_°ru˘


72 
b_Êag_upd©e
;

73 
bôs_u£d_‰ame
;

74 
n‹m_‰ame_bô_budgë
;

75 
bôs_f‹_n⁄ãxt_e°
;

76 
mö_‰ame_bô_budgë
;

77 
max_‰ame_bô_budgë
;

78 
¥ev_n‹m_‰ame_bôs_u£d
;

79 
bôs_≥r_‰ame
;

80 
tŸÆ_bô_dñè
;

81 
rho
;

82 
A
;

84 
nz_cou¡
;

85 
rc_wödow
;

86 
öô_rc_wödow
;

87 
¥ev_qp
;

88 
¥ev_two_qp
;

89 
¥ev_bô_budgë
;

90 
bôs_pFøme
;

92 
øtio
 ;

93 
tŸÆ_øtio
;

94 
fú°_‰ame_qp
;

95 
fú°_10_max_qp
;

96 
fú°_10_mö_qp
;

97 
rho_qp_èbÀ
[
QP_LOOKUP_TABLE_STEP
];

99 
Àak_buf„r
;

100 
buf„r_thªshﬁd
;

101 
èrgë_öô_qp
;

102 
¥e_skùnum
;

105 
	svbr_drivî


107 
tw_vbr_rc_°ru˘_t
 
rc_∑øm
;

108 
tw_rc_drivî_›
 *
rc_›
;

111 
	src_t›_drivî


113 
is_rc_image_Àvñ_¥i‹ôy
;

114 
is_rc_image_smoŸhly_¥i‹ôy
;

115 
disˇrd_‰ame_numbî_by_Àvñ
;

116 
tw_rc_drivî_›
 *
rc_›
;

117 
tw_cbr_drivî_t
 
cbr
;

118 
tw_vbr_drivî_t
 
vbr
;

121 
öô_rc_drivî
(
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
);

123 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/golomb.h

1 #i‚de‡
GOLOMB_H


2 
	#GOLOMB_H


	)

4 #ifde‡
__˝lu•lus


9 c⁄° 
__u8
 
ff_log2_èb
[256];

10 c⁄° 
__u8
 
ff_gﬁomb_vlc_Àn
[512];

11 c⁄° 
__u8
 
ff_ue_gﬁomb_vlc_code
[512];

12 c⁄° 
__s8
 
ff_£_gﬁomb_vlc_code
[512];

14 
ölöe
 
av_log2
(
v
)

16 
	gn
;

18 
	gn
 = 0;

19 if(
	gv
 & 0xffff0000)

21 
	gv
 >>= 16;

22 
	gn
 += 16;

24 if(
	gv
 & 0xff00)

26 
	gv
 >>= 8;

27 
	gn
 += 8;

29 
	gn
 +
ff_log2_èb
[
v
];

30  
	gn
;

33 
ölöe
 
gë_ue_gﬁomb
(
GëBôC⁄ãxt
 *
gb
)

35 
	gbuf
;

36 
	glog
;

38 
OPEN_READER
(
ª
, 
gb
);

39 
UPDATE_CACHE
(
ª
, 
gb
);

40 
	gbuf
=
GET_CACHE
(
ª
, 
gb
);

41 if(
	gbuf
 >= (1<<27))

43 
buf
 >>= 32 - 9;

44 
LAST_SKIP_BITS
(
ª
, 
gb
, 
ff_gﬁomb_vlc_Àn
[
buf
]);

45 
CLOSE_READER
(
ª
, 
gb
);

47  
	gff_ue_gﬁomb_vlc_code
[
buf
];

51 
	glog
2*
av_log2
(
buf
) - 31;

52 
	gbuf
>>
log
;

53 
	gbuf
--;

54 
LAST_SKIP_BITS
(
ª
, 
gb
, 32 - 
log
);

55 
CLOSE_READER
(
ª
, 
gb
);

57  
	gbuf
;

64 
ölöe
 
gë_£_gﬁomb
(
GëBôC⁄ãxt
 *
gb
)

66 
	gbuf
;

67 
	glog
;

69 
OPEN_READER
(
ª
, 
gb
);

70 
UPDATE_CACHE
(
ª
, 
gb
);

71 
	gbuf
=
GET_CACHE
(
ª
, 
gb
);

72 if(
	gbuf
 >= (1<<27))

74 
buf
 >>= 32 - 9;

75 
LAST_SKIP_BITS
(
ª
, 
gb
, 
ff_gﬁomb_vlc_Àn
[
buf
]);

76 
CLOSE_READER
(
ª
, 
gb
);

78  
	gff_£_gﬁomb_vlc_code
[
buf
];

82 
	glog
2*
av_log2
(
buf
) - 31;

83 
	gbuf
>>
log
;

85 
LAST_SKIP_BITS
(
ª
, 
gb
, 32 - 
log
);

86 
CLOSE_READER
(
ª
, 
gb
);

88 if(
	gbuf
&1)

89 
	gbuf
 = -(
buf
>>1);

91 
	gbuf
 = (
buf
>>1);

93  
	gbuf
;

97 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/proc_entry.h

1 #i‚de‡
__PROC_ENTRY_H__


2 
	#__PROC_ENTRY_H__


	)

4 #ifde‡
__˝lu•lus


8 #ifde‡
MESSAGE_LOG


9 
	smesßge_¥ivã
{

10 
waô_queue_hód_t
 
waô
;

11 
•ölock_t
 
lock
;

13 *
buf
;

14 
u32
 
buf_Àn
;

15 
u32
 
°¨t
;

16 
u32
 
íd
;

20 
	g«me
[64];

21 
¥oc_dú_íåy
 *
	gíåy
;

22 
ªad_¥oc_t
 *
	gªad
;

23 
wrôe_¥oc_t
 *
	gwrôe
;

24 *
	g¥iv©e
;

25 }
	ttw_¥oc_ªgi°î_s
;

27 #ifde‡
MESSAGE_LOG


28 
mesßge_¥ivã
 *
mesßge_log
;

31 
tw_moduÀ_ªgi°î
(
dvm_chù_t
 *
chù
, 
tw_¥oc_ªgi°î_s
 *
ªg
);

32 
tw_moduÀ_uƒegi°î
(
dvm_chù_t
 *
chù
, 
tw_¥oc_ªgi°î_s
 *
ªg
);

33 
¥oc_moduÀ_öô
();

34 
¥oc_moduÀ_ªÀa£
();

36 
©oi
(*
°r
);

37 
fûe
 *
tw_kî√l_fûe_›í
(*);

38 
tw_kî√l_fûe_˛o£
(
fûe
 *);

40 #ifde‡
ARM_PLATFORM


41 
¨gv_‰ì
(**
¨gv
);

42 **
¨gv_•lô
(
gÂ_t
 
gÂ
, c⁄° *
°r
, *
¨g˝
);

45 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tc.h

1 #i‚de‡ 
__TW_SERVICE_DEV_H__


2 
	#__TW_SERVICE_DEV_H__


	)

4 
	~<löux/devi˚.h
>

5 
	~<asm/sy°em.h
>

6 
	~<asm/ty≥s.h
>

7 
	~<löux/kobje˘.h
>

8 
	~<löux/kdev_t.h
>

10 
	#DMDEBUG


	)

11 
	#STATIC_COUNTING


	)

14 #ifde‡
DMDEBUG


15 
	#dbg
 
¥ötk


	)

16 
	#tc_åa˚
 
	`dbg
("ö fun˘i⁄:%s------------------------------------>\n",
__FUNCTION__
)

	)

18 
	#dbg
(
f‹m©
, 
¨g
...Ëdo{ }0)

	)

22 
	#U32LONG_MAX
 0xFFFFFFFFUL

	)

25 
	#PATH_LEN
 256

	)

27 
	#TWELL
 0x00000001UL

	)

29 
	#TW2851
 0x00000001UL

	)

30 
	#TW5864
 0x00000002UL

	)

34 
	#BUS_PCI
 0x00000001UL

	)

38 
	#FUNC_TYPE_OFFSET
 20

	)

39 
	#FUNC_STREAM_OFFSET
 10

	)

40 
	#FUNC_ALGORTM_OFFSET
 0

	)

41 
	#MAKE_FUNC_ID
(
t
,
s
,
a
Ë((—Ë<< 
FUNC_TYPE_OFFSET
Ë| ((sË<< 
FUNC_STREAM_OFFSET
Ë| (◊Ë<< 
FUNC_ALGORTM_OFFSET
))

	)

45 
	#STREAM_OFFSET
 26

	)

46 
	#ALGO_OFFSET
 20

	)

47 
	#BUS_OFFSET
 17

	)

48 
	#CHIP_OFFSET
 11

	)

49 
	#PHYCHAN_OFFSET
 5

	)

50 
	#LOGIC_OFFSET
 0

	)

53 
	#MAX_CHIPS_NR
 (1 << 
CHIP_OFFSET
)

	)

54 
	#MAX_PHYCHAN_PER_CHIP
 (1 << 8)

	)

55 
	#MAX_LOGCHAN_PER_PHYCHAN
 (1 << 8)

	)

56 
	#MAX_LOGCHAN_PER_PHYCHAN
 (1 << 8)

	)

60 
	#MAX_NAME_LEN
 256

	)

61 
	#TW_CHIP_MAJOR
 242

	)

62 
	#TW_SERVICE_BASE_MAJOR
 243

	)

63 
	#MAX_SERVICE_NR
 7

	)

64 
	#MAX_MINOR_NR
 255

	)

65 
	#CHIPDEV_ALIGN
 32

	)

66 
	#CHIPDEV_ALIGN_MASK
 (
CHIPDEV_ALIGN
 -1)

	)

69 
	#CHIPDEV_REGISTER
 0x0001

	)

70 
	#CHIPDEV_UNREGISTER
 0x0002

	)

71 
	#CHIPDEV_UP
 0x0003

	)

72 
	#CHIPDEV_GOING_DOWN
 0x0004

	)

73 
	#CHIPDEV_REST
 0x0005

	)

74 
	#CHIPDEV_DOWN
 0x0006

	)

78 
	#TC_HEADER_BUFFER_POOL_LEN
 0x20000

79 

	)

82 
	#tc_mö
(
x
,
y
Ë(((xË< (y))? (x): (y))

	)

83 
	#tc_max
(
x
,
y
Ë(((xË> (y))? (x): (y))

	)

86 
tc_hb_poﬁ
 *
thb_poﬁ
;

87 *
Æg‹ôhm
[];

88 *
°ªam
[];

89 
nfm
[
MAX_SERVICE_NR
];

94 
	gtc_hódî_buf
;

95 
	gtc_hb_poﬁ
;

101 
	mCODEC_VIDEO_H264
 = 0,

102 
	mCODEC_VIDEO_MJPG
,

105 
	mCODEC_AUDIO_ALAW
,

106 
	mCODEC_AUDIO_ULAW
,

107 
	mCODEC_AUDIO_ABADPCM
,

108 
	mCODEC_AUDIO_MPMLQ
,

109 
	mCODEC_AUDIO_ADPCM
,

110 
	mCODEC_AUDIO_EMBED_ADPCM
,

111 
	mCODEC_AUDIO_LDCELP
,

112 
	mCODEC_AUDIO_CSACELP
,

113 }
	tCODEC_TYPE
;

118 
	mSTREAM_TYPE_MAJOR
 = 0,

119 
	mSTREAM_TYPE_MINOR
,

120 
	mSTREAM_TYPE_PIC
,

121 
	mSTREAM_TYPE_MV
,

122 
	mSTREAM_TYPE_AUDIO
,

123 
	mSTREAM_TYPE_NOTHING
 = 0xFFFF,

124 }
	tSTREAM_TYPE
;

126 
	etw_£rvi˚_ty≥


128 
	mTW_CHIP
 = 0,

129 
	mTW_ENCODER
,

130 
	mTW_DECODER
,

131 
	mTW_VIDEO_IN
,

132 
	mTW_VIDEO_OUT
,

133 
	mTW_AUDIO_IN
,

134 
	mTW_AUDIO_OUT
,

135 
	mTW_SERVICE_TYPE_NOTHING
 = 0XFFFF,

136 }
	tTW_SERVICE_TYPE
;

138 
	etw_dev_°©e


140 
	mTW_DEV_NEEDINIT
 = 0,

141 
	mTW_DEV_CLOSED
,

142 
	mTW_DEV_IDLE
,

143 
	mTW_DEV_SUSPEND
,

144 
	mTW_DEV_BUSY
,

145 
	mTW_DEV_BROKEN
,

146 }
	tTW_DEV_STATE
;

149 
	smsg_t


151 
li°_hód
 
	mli°
;

152 
	mty≥
;

153 
	msize
;

154 *
	md©a
;

158 
	smsg_queue


160 
time_t
 
	mπime
;

161 
	mmsg_ƒ
;

162 
li°_hód
 
	mqhód
;

168 
	sdevi˚_öfo


170 
	mmaj‹
;

171 
	mmö‹
;

172 
	m∑th
[256];

176 
	scmd_¨g


178 
TW_SERVICE_TYPE
 
	mty≥
;

179 
	mch™√l_idx
;

180 
CODEC_TYPE
 
	mÆg‹ôhm
;

181 
STREAM_TYPE
 
	m°ªam
;

182 
	mdev_öfo
[0];

186 
	scmd_li°


188 
li°_hód
 
	mnode
;

189 
tw_chù_devi˚
 *
	mtcd
;

190 
cmd_¨g
 
	m¨g
;

193 
	síd_poöt_obj


195 #i‡
deföed
(
__BIG_ENDIAN_BITFIELD
)

196 
u32
 
	m°ªam
:6;

197 
u32
 
	mÆgo
:6;

198 
u32
 
	mbus_id
:3;

199 
u32
 
	mchù_id
:6;

200 
u32
 
	mphy_ch™_id
:6;

201 
u32
 
	mlgc_ch™_id
:5;

202 #ñi‡
deföed
 (
__LITTLE_ENDIAN_BITFIELD
)

203 
u32
 
	mlgc_ch™_id
:5;

204 
u32
 
	mphy_ch™_id
:6;

205 
u32
 
	mchù_id
:6;

206 
u32
 
	mbus_id
:3;

207 
u32
 
	mÆgo
:6;

208 
u32
 
	m°ªam
:6;

213 
	#KEY_MAX_LGC_ID
 0x20

	)

214 
	#KEY_MAX_PHY_ID
 0x40

	)

215 
	#KEY_MAX_CHIP_ID
 0x40

	)

216 
	#KEY_MAX_BUS_ID
 0x08

	)

217 
	#KEY_MAX_STREAM_ID
 0x40

	)

218 
	#KEY_MAX_ALGO_ID
 0x40

	)

220 
íd_poöt_obj
 
	tïkey_t
;

227 
	sïobj_t


229 
	mvíd‹_id
;

230 
	mbus_id
;

231 
	mchù_id
;

232 
	mfunc_id
;

233 
	mty≥
;

234 
ïkey_t
 
	mkey
;

243 
	stw_dev_id


245 
ïobj_t
 
	mïobj
;

246 
	mvîsi⁄
;

254 
	stw_dev_èbÀ_id


256 
li°_hód
 
	mli°
;

257 
tw_dev_id
 *
	mtid
;

258 *
	m›s
;

259 *
	m¥iv
;

260 *
	m∑ø
;

267 
	stw_chù_devi˚


269 
li°_hód
 
	mli°
;

270 
	m«me
[
MAX_NAME_LEN
];

271 
	mmö‹
;

272 
ïobj_t
 
	mïobj
;

273 
devi˚
 
	mdev
;

274 
cdev
 *
	mcdev
;

276 
tcd_fûe_›î©i⁄s
 *
	mtcd_f›s
;

277 
li°_hód
 
	mtsd_li°
[
MAX_SERVICE_NR
-1];

278 
kobje˘
 *
	mdús
[
MAX_SERVICE_NR
-1];

279 
__u32
 
	m∑dded
;

280 
tw_chù_drivî
 *
	mdrivî
;

281 
ídpoöt_tcb
 *
	m≥d
;

282 (*
	m˛ón_up
)(*);

283 *
	m¥iv
;

284 
	m¥iv_Àn
;

285 
	mtŸÆ_Àn
;

288 
	stw_chù_drivî


290 
li°_hód
 
	mli°
;

291 
	m«me
[
MAX_NAME_LEN
];

292 
devi˚_drivî
 
	mdrivî
;

293 
tw_dev_èbÀ_id
 
	mdevi˚_id
;

295 (*
	m©èch_chù
)(*
	mdriv
,
tw_chù_devi˚
 *
	mtcd
);

296 (*
	mdëach_chù
)(*
	mdriv
,
tw_chù_devi˚
 *
	mtcd
);

299 (*
	mshutdown
)(
tw_chù_devi˚
 *
	mtcd
);

300 (*
	msu•íd
)(
tw_chù_devi˚
 *
	mtcd
, 
	m•msg
);

301 (*
	mªsume
)(
tw_chù_devi˚
 *
	mtcd
);

304 (*
	mcomm™d
)(
tw_chù_devi˚
 *
	m±cd
,
	mcmd
, *
	mcmd_¨g
);

305 
li°_hód
 
	mtcd_li°
;

312 #ifde‡
STATIC_COUNTING


313 
	stc_buf_öãrvÆ


316 
u32
 
	mmö
;

317 
u32
 
	mmax
;

318 
u32
 
	mu_time
;

319 
u32
 
	mcuº_tick
;

320 
u32
 
	ms_ªq_tick
;

321 
u32
 
	ms_m≠_tick
;

322 
u32
 
	ms_ªl_tick
;

324 
u32
 
	mic_ªq_time
;

325 
u32
 
	mic_m≠_time
;

326 
u32
 
	mic_ªl_time
;

327 
u32
 
	mic4_tŸÆ_time
;

333 
	stw_£rvi˚_devi˚


335 
li°_hód
 
	mli°
;

336 
	m«me
[
MAX_NAME_LEN
];

337 
	mty≥
;

338 
ïobj_t
 
	mïobj
;

339 
	mmö‹
;

341 
devi˚
 
	mdev
;

342 
__u32
 
	m∑dded
;

343 
cdev
 *
	mcdev
;

344 
tw_chù_devi˚
 *
	m±cd
;

345 
tsd_fûe_›î©i⁄s
 *
	mtsd_f›s
;

346 
ídpoöt_tcb
 *
	m≥d
;

347 
tc_queue
 *
	mqueue
;

348 (*
	m˛ón_up
)(*);

349 *
	m¥iv©e_d©a
;

350 *
	m¥iv
;

351 #ifde‡ 
STATIC_COUNTING


352 
tc_buf_öãrvÆ
 
	mb_ôvÆ
;

373 
	stw_£rvi˚_drivî


375 
li°_hód
 
	mli°
;

376 
	m«me
[
MAX_NAME_LEN
];

377 
devi˚_drivî
 
	mdrivî
;

378 
tw_dev_èbÀ_id
 
	mdevi˚_id
;

380 (*
	m©èch_£rvi˚
)(*
	mdrv
, 
tw_£rvi˚_devi˚
 * 
	mtsd
);

381 (*
	mdëach_£rvi˚
)(*
	mdrv
, 
tw_£rvi˚_devi˚
 * 
	mtsd
);

382 (*
	mshutdown
)(
tw_£rvi˚_devi˚
 *
	mtsd
);

383 (*
	msu•íd
)(
tw_£rvi˚_devi˚
 *
	mtsd
, 
	m•msg
);

384 (*
	mªsume
)(
tw_£rvi˚_devi˚
 *
	mtsd
);

385 (*
	mcomm™d
)(
tw_£rvi˚_devi˚
 *
	mtsd
,
	mcmd
, *
	mcmd_¨g
);

386 
li°_hód
 
	mtsd_li°
;

390 
	stcd_fûe_›î©i⁄s


392 
moduÀ
 *
	mow√r
;

393 (*
	m›í
)(
	mtw_chù_devi˚
 *,
	mfûe
 *);

394 
ssize_t
 (*
ªad
)(
	mfûe
 *,
	m__u£r
 *,
	msize_t
, 
	mloff_t
 *);

395 
ssize_t
 (*
wrôe
Ë(
	mfûe
 *, c⁄° 
	m__u£r
 *, 
	msize_t
, 
	mloff_t
 *);

396 (*
	mio˘l
Ë(
	mfûe
 *, , );

397 (*
	mªÀa£
)(
	mtw_chù_devi˚
 *,
	mfûe
 *);

401 
	stsd_fûe_›î©i⁄s


403 
moduÀ
 *
	mow√r
;

404 (*
	möô
)(
	mtw_chù_devi˚
 *,
	mcmd_¨g
 *,
	mtw_£rvi˚_devi˚
 **);

405 (*
	mde°‹y
)(
	mtw_£rvi˚_devi˚
 *);

407 (*
	m›í
)(
	mtw_£rvi˚_devi˚
 *,
	mfûe
 *);

408 
ssize_t
 (*
ªad
)(
	mfûe
 *,
	m__u£r
 *,
	msize_t
, 
	mloff_t
 *);

409 
ssize_t
 (*
wrôe
Ë(
	mfûe
 *, c⁄° 
	m__u£r
 *, 
	msize_t
, 
	mloff_t
 *);

410 (*
	mio˘l
Ë(
	mfûe
 *, , );

411 (*
	mªÀa£
)(
	mfûe
 *);

412 (*
	mpﬁl
)(
fûe
 *
	mfûe
, 
pﬁl_èbÀ_°ru˘
 *
	mwaô
);

415 
	stsd_drivî_›î©i⁄s


417 (*
	möô
)(
	mtw_chù_devi˚
 *,
	mtw_£rvi˚_devi˚
 *,*,
	mcmd_¨g
 *);

418 (*
	mªmove
)(
	mtw_chù_devi˚
 *,
	mtw_£rvi˚_devi˚
 *,*,
	mcmd_¨g
 *);

421 
	stcd_drivî_›î©i⁄s


423 (*
	möô
)(
	mtw_chù_devi˚
 *,*);

424 (*
	mªmove
)(
	mtw_chù_devi˚
 *,*);

430 
	#TC_HEADER_BUFFER_LEN
 
PAGE_SIZE


	)

432 
	stc_hb_›î©i⁄


434 (*
	möô
)(
	mtc_hb_poﬁ
 *,
	mtc_hódî_buf
 *, );

435 (*
	mªÀa£
)(
	mtc_hb_poﬁ
 *, 
	mtc_hódî_buf
 *);

440 
	stc_hódî_buf


442 
•ölock_t
 
	mlock
;

443 
	mid
;

444 
©omic_t
 
	mªf
;

445 
tcb_node_t
 
	mnode
;

446 
	munô_size
;

447 *
	md©a
;

448 
tc_hb_poﬁ
 *
	mpoﬁ
;

449 
tc_hb_›î©i⁄
 *
	m›
;

452 
	#gë_thb_‰om_node
(
x
Ë
	`c⁄èöî_of
(x,
tc_hódî_buf
,
node
)

	)

454 
	stc_hb_poﬁ_›î©i⁄


456 (*
	m¸óã
)(
	msize
);

457 (*
	mde°‹y
)(
	mtc_hb_poﬁ
 *);

459 (*
	mgë_hódî_buf
)(
	mtc_hb_poﬁ
 *, 
	mtc_hódî_buf
 **);

460 (*
	måy_gë_hódî_buf
)(
	mtc_hb_poﬁ
 *, 
	mtc_hódî_buf
 **);

461 (*
	mput_hódî_buf
)(
	mtc_hb_poﬁ
 *, 
	mtc_hódî_buf
 *);

462 (*
	mgë_hb_poﬁ_íåy_numbî
)(
	mtc_hb_poﬁ
 *);

465 
	stc_hb_poﬁ


467 
	m‹dî
;

468 *
	mp
;

469 
	mƒ
;

470 
tcb_node_poﬁ_t
 
	m≈
;

471 
tc_hódî_buf
 *
	mbufs
;

472 
tc_hb_poﬁ_›î©i⁄
 *
	m›
;

478 
	#ïkey_equÆ
(
a
,
b
Ë(◊)->
°ªam
 =(b)->°ªam && (a)->
Ægo
 =(b)->Ægÿ&& (a)->
bus_id
 == (b)->bus_id \

479 && (
a
)->
chù_id
 =(
b
)->chù_id && (a)->
phy_ch™_id
 =(b)->phy_ch™_id && (a)->
lgc_ch™_id
 =(b)->lgc_ch™_id)

	)

481 
	#ïkey_equÆ_wôhout_phyid
(
a
,
b
Ë(◊)->
°ªam
 =(b)->°ªam && (a)->
Ægo
 =(b)->Ægÿ&& (a)->
bus_id
 == (b)->bus_id \

482 && (
a
)->
chù_id
 =(
b
)->chù_id &&◊)->
lgc_ch™_id
 =(b)->lgc_ch™_id)

	)

485 
	#ïobj_euqÆ
(
a
,
b
Ë(◊)->
víd‹_id
 =(b)->víd‹_id && (a)->
bus_id
 == (b)->bus_id \

486 && (
a
)->
chù_id
 =(
b
)->chù_id && (a)->
func_id
 == (b)->func_id \

487 && (
a
)->
ty≥
 =(
b
)->ty≥ )

	)

489 
	#cmd_equÆ
(
a
,
b
Ë(!
	`memcmp
((*)◊),(*)(b), (
cmd_¨g
)))

	)

491 
	#ïobj_£t
(
d
,
s
Ë(
	`mem˝y
((*)(d),(*)(s),(
ïobj_t
)))

	)

493 
	#gë_bus_id
(
key
Ë(key.
bus_id
)

	)

494 
	#gë_chù_id
(
key
Ë(key.
chù_id
)

	)

495 
	#gë_phy_id
(
key
Ë(key.
phy_ch™_id
)

	)

496 
	#gë_log_id
(
key
Ë(key.
lgc_ch™_id
)

	)

497 
	#dbg_ïobj_¥öt
(
ï
Ë
	`dbg
("vendor_id=%lu,bus_id=%lu,chip_id=%lu,func_id=%d,type=%lu,key=0x08%x stream=%d,algo=%d,bid=%d,cid=%d,p=%d,l=%d \n", \

498 (
ï
)->
víd‹_id
,”p)->
bus_id
,”p)->
chù_id
,”p)->
func_id
,”p)->
ty≥
,*((
u32
 *)&”p)->
key
),”p)->key.
°ªam
,”p)->key.
Ægo
,(ep)->key.bus_id,\

499 (
ï
)->
key
.
chù_id
,”p)->key.
phy_ch™_id
,”p)->key.
lgc_ch™_id
)

	)

502 
ölöe
 
	$make_key
(
ïkey_t
 *
key
,
°ªam
,
Ægo
,
bid
,
cid
,
pid
,
lid
)

505 if(
°ªam
 >
KEY_MAX_STREAM_ID
){

506 
	`dbg
("errÅype streamÖassed!\n");

509 if(
Ægo
 >
KEY_MAX_ALGO_ID
){

510 
	`dbg
("errálgoÅypeÖassed!\n");

513 
key
->
°ªam
 = stream;

514 
key
->
Ægo
 =álgo;

515 
key
->
bus_id
 = 
bid
;

516 
key
->
chù_id
 = 
cid
;

517 
key
->
phy_ch™_id
 = 
pid
;

518 
key
->
lgc_ch™_id
 = 
lid
;

520 
	}
}

522 
ölöe
 
	$gë_func_id_‰om_ïobj
(
ïobj_t
 *
ï
)

524  
ï
->
func_id
;

525 
	}
}

527 
ölöe
 
	$ïobj_öô
(
ïobj_t
 *
ï
, 
vid
, 
bid
,
cid
, 
fid
,
ty≥
, 
ïkey_t
 *
key
)

529 
	`mem£t
((*)
ï
, 0, (
ïobj_t
));

530 
ï
->
víd‹_id
 = 
vid
;

531 
ï
->
bus_id
 = 
bid
;

532 
ï
->
chù_id
 = 
cid
;

533 
ï
->
func_id
 = 
fid
;

534 
ï
->
ty≥
 =Åype;

535 
	`mem˝y
((*)&
ï
->
key
,(*)key,(
ïkey_t
));

537 
	}
}

539 
ölöe
 
	$ïobj_key_upd©e_phy_id
(
ïkey_t
 *
ekey
, 
phy_id
)

541 if(
phy_id
 >
KEY_MAX_PHY_ID
)

543 
ekey
->
phy_ch™_id
 = 
phy_id
;

544 
	}
}

547 
ölöe
 
	$ïobj_key_upd©e_lgc_id
(
ïkey_t
 *
ekey
, 
lgc_id
)

549 if(
lgc_id
 >
KEY_MAX_LGC_ID
)

551 
ekey
->
lgc_ch™_id
 = 
lgc_id
;

552 
	}
}

555 
ölöe
 
	$round_up
(
tŸÆ
,
unô_size
)

557  (
tŸÆ
 % 
unô_size
)? (total / unit_size) + 1:Åotal / unit_size;

558 
	}
}

560 
ölöe
 
	$round_low
(
tŸÆ
,
unô_size
)

562  (
tŸÆ
/
unô_size
);

563 
	}
}

565 
ölöe
 
	$gë_°ªam_‰om_ïobj
(
ïobj_t
 * 
ït
)

567  (
ït
->
key
.
°ªam
);

568 
	}
}

570 
ölöe
 
	$gë_Ægo_‰om_ïobj
(
ïobj_t
 * 
ït
)

572  (
ït
->
key
.
Ægo
);

573 
	}
}

575 
ölöe
 
	$gë_busid_‰om_ïobj
(
ïobj_t
 * 
ït
)

577  (
ït
->
key
.
bus_id
);

578 
	}
}

580 
ölöe
 
	$gë_chùid_‰om_ïobj
(
ïobj_t
 * 
ït
)

582  (
ït
->
key
.
chù_id
);

583 
	}
}

585 
ölöe
 
	$gë_phch™_id_‰om_ïobj
(
ïobj_t
 * 
ït
)

587  (
ït
->
key
.
phy_ch™_id
);

588 
	}
}

590 
ölöe
 
	$gë_lgcch™_id_‰om_ïobj
(
ïobj_t
 * 
ït
)

592  (
ït
->
key
.
lgc_ch™_id
);

593 
	}
}

595 
ölöe
 *
	$tcd_¥iv
(
tw_chù_devi˚
 *
tcd
)

597  (*)
tcd
 + (((
tw_chù_devi˚
Ë+ 
CHIPDEV_ALIGN_MASK
) & ~CHIPDEV_ALIGN_MASK);

598 
	}
}

600 
ölöe
 
tw_chù_devi˚
 *
	$¥iv_2_tcd
(*
¥iv
)

602 *
p
 =(*)(
¥iv
Ë-(((
tw_chù_devi˚
Ë+ 
CHIPDEV_ALIGN_MASK
) & ~CHIPDEV_ALIGN_MASK);

604  (
tw_chù_devi˚
 *)
p
;

605 
	}
}

607 
ölöe
 *
	$tsd_¥iv
(
tw_£rvi˚_devi˚
 *
tsd
)

609  (*)
tsd
 + (((
tw_£rvi˚_devi˚
Ë+ 
CHIPDEV_ALIGN_MASK
) & ~CHIPDEV_ALIGN_MASK);

610 
	}
}

625 
ölöe
 
tw_£rvi˚_devi˚
* 
	$gë_£rvi˚_dev_by_˘vl
(
tw_chù_devi˚
 *
tcd
, 
ty≥
, 
av_ty≥
, 
ch™√l
)

627 
tw_£rvi˚_devi˚
 * 
tsd
 = 
NULL
;

628 
li°_hód
 *
p
,*
h
;

630 if(
ty≥
 < 1)

631  
NULL
;

633 
h
 = &
tcd
->
tsd_li°
[
ty≥
-1];

634 
	`dbg
("ty≥ = %d\n",
ty≥
);

635 
	`li°_f‹_óch
(
p
,
h
){

636 
tsd
 = 
	`c⁄èöî_of
(
p
,
tw_£rvi˚_devi˚
, 
li°
);

637 if(
	`gë_lgcch™_id_‰om_ïobj
(&
tsd
->
ïobj
Ë=
ch™√l
){

638 if(0 =
av_ty≥
){

639 if(
CODEC_VIDEO_H264
 =
	`gë_Ægo_‰om_ïobj
(&
tsd
->
ïobj
))

640  
tsd
;

642 if(1 =
av_ty≥
){

643 if(
STREAM_TYPE_AUDIO
 =
	`gë_°ªam_‰om_ïobj
(&
tsd
->
ïobj
))

644  
tsd
;

648  
NULL
;

649 
	}
}

652 
ölöe
 
	$tc_Æign_up
(
size
, 
Æign
)

654 
ªt
;

656 
ªt
 = (
size
 + (
Æign
-1)) & (~(align-1));

657  
ªt
;

659 
	}
}

661 #ifde‡
STATIC_COUNTING


662 
ölöe
 
	$gë_lo›_°¨t
(
tw_£rvi˚_devi˚
 *
tsd
)

664 
tc_buf_öãrvÆ
 *
tbi
;

666 
tbi
 = (
tc_buf_öãrvÆ
 *)&
tsd
->
b_ôvÆ
;

667 
tbi
->
s_ªq_tick
 = 
	`gë_tw_sy°em_tick
();

668 
	}
}

671 
ölöe
 
	$ˇlc_ic_ªq_time
(
tw_£rvi˚_devi˚
 *
tsd
)

673 
tc_buf_öãrvÆ
 *
tbi
 = (tc_buf_öãrvÆ *)&
tsd
->
b_ôvÆ
;

674 
u32
 
tick
;

676 
tick
 = 
	`gë_tw_sy°em_tick
();

677 if(
tick
 >
tbi
->
s_ªq_tick
)

678 
tbi
->
ic_ªq_time
 = 
tick
 -Åbi->
s_ªq_tick
;

680 
tbi
->
ic_ªq_time
 = 
U32LONG_MAX
 - (tbi->
s_ªq_tick
 - 
tick
);

681 
	}
}

683 
ölöe
 
	$gë_ic_m≠_°¨t
(
tw_£rvi˚_devi˚
 *
tsd
)

685 
tc_buf_öãrvÆ
 *
tbi
 = (tc_buf_öãrvÆ *)&
tsd
->
b_ôvÆ
;

687 
tbi
->
s_m≠_tick
 = 
	`gë_tw_sy°em_tick
();

688 
	}
}

690 
ölöe
 
	$ˇlc_ic_m≠_time
(
tw_£rvi˚_devi˚
 *
tsd
)

692 
tc_buf_öãrvÆ
 *
tbi
 = (tc_buf_öãrvÆ *)&
tsd
->
b_ôvÆ
;

693 
u32
 
tick
;

695 
tick
 = 
	`gë_tw_sy°em_tick
();

696 if(
tick
 >
tbi
->
s_m≠_tick
)

697 
tbi
->
ic_m≠_time
 = 
tick
 -Åbi->
s_m≠_tick
;

699 
tbi
->
ic_m≠_time
 = 
U32LONG_MAX
 - (tbi->
s_m≠_tick
 - 
tick
);

700 
	}
}

702 
ölöe
 
	$gë_ic_ªl_°¨t
(
tw_£rvi˚_devi˚
 *
tsd
)

704 
tc_buf_öãrvÆ
 *
tbi
 = (tc_buf_öãrvÆ *)&
tsd
->
b_ôvÆ
;

706 
tbi
->
s_ªl_tick
 = 
	`gë_tw_sy°em_tick
();

707 
	}
}

709 
ölöe
 
	$ˇlc_ic_ªl_time
(
tw_£rvi˚_devi˚
 *
tsd
)

711 
tc_buf_öãrvÆ
 *
tbi
 = (tc_buf_öãrvÆ *)&
tsd
->
b_ôvÆ
;

712 
u32
 
tick
;

714 
tick
 = 
	`gë_tw_sy°em_tick
();

715 if(
tick
 >
tbi
->
s_ªl_tick
)

716 
tbi
->
ic_ªl_time
 = 
tick
 -Åbi->
s_ªl_tick
;

718 
tbi
->
ic_ªl_time
 = 
U32LONG_MAX
 - (tbi->
s_ªl_tick
 - 
tick
);

719 
	}
}

723 
ölöe
 
	$gë_lo›_íd
(
tw_£rvi˚_devi˚
 *
tsd
)

725 
tc_buf_öãrvÆ
 *
tbi
;

726 
tick
,
•™
;

728 
tbi
 = (
tc_buf_öãrvÆ
 *)&
tsd
->
b_ôvÆ
;

729 
tick
 = 
	`gë_tw_sy°em_tick
();

730 if(
tick
 >
tbi
->
s_ªq_tick
)

731 
•™
 = 
tick
 - 
tbi
->
s_ªq_tick
;

733 
•™
 = 
U32LONG_MAX
 - (
tbi
->
s_ªq_tick
 - 
tick
);

735 
tbi
->
ic4_tŸÆ_time
 = 
•™
;

736 if(
•™
 < 
tbi
->
mö
)Åbi->min = span;

737 if(
•™
 > 
tbi
->
max
)Åbi->max = span;

738 
	}
}

742 
lock_chùdev
();

743 
u∆ock_chùdev
();

744 
li°_hód
 * 
gë_chùdev_li°hód
();

745 
do_¸óã_£rvi˚_dev
(
tw_chù_devi˚
 * 
tcd
, 
cmd_¨g
 * 
¨g
, 
kobje˘
 * 
dú
);

746 
do_add_to_kî√l
(
tw_chù_devi˚
 * 
tcd
, *
¨g
);

747 
tw_chù_devi˚
 * 
föd_chù_dev
(
mö‹
);

748 
tw_£rvi˚_devi˚
 * 
föd_£rvi˚_dev
(
maj‹
,
mö‹
);

749 
ªgi°î_chù_devi˚
(
tw_chù_devi˚
 *
tcd
);

750 
uƒegi°î_chù_devi˚
(
tw_chù_devi˚
 * 
tcd
);

751 
ªgi°î_chù_drivî
(
tw_chù_drivî
 * 
driv
);

752 
uƒegi°î_chù_drivî
(
tw_chù_drivî
 * 
driv
);

753 
¸óã_£rvi˚_devi˚
(
tw_chù_devi˚
 * 
tcd
, 
d©a
);

754 
ªÀa£_£rvi˚_devi˚
(
tw_chù_devi˚
 *
tcd
, *
d©a
);

755 
ªgi°î_tc_devi˚
(
tw_dev_èbÀ_id
 *
√w
);

756 
uƒegi°î_tc_devi˚
(
tw_dev_èbÀ_id
 *
tb
);

757 
ªgi°î_tc_drivî
(
tw_£rvi˚_drivî
 * 
driv
);

758 
uƒegi°î_tc_drivî
(
tw_£rvi˚_drivî
 *
driv
);

759 
ªlök_tsd
(
tw_£rvi˚_devi˚
 *
ﬁd
, tw_£rvi˚_devi˚ *
√wî
);

760 
tw_chù_devi˚
 * 
tc_chùdev_Æloc
(
¥iv_size
);

761 
tc_chùdev_‰ì
(
tw_chù_devi˚
 * 
tcd
);

762 
chù_devi˚_m©ch
(
ïobj_t
 *
a
, ïobj_à*
b
);

763 
do_ªÀa£_£rvi˚_devi˚
(
tw_£rvi˚_devi˚
 *
tsd
,*
d©a
);

764 
ªÀa£_Æl_£rvi˚_devi˚
();

765 
ªÀa£_Æl_£rvi˚_devi˚_ext
();

767 
tw_c‹e_öô
();

768 
tw_c‹e_exô
();

	@../../tw5864/include/tw5864/tc_audio_decode.h

1 #i‚def 
TW_AUDIO_DE_H__


2 
	#TW_AUDIO_DE_H__


	)

4 #ifde‡
__˝lu•lus


15 
	#TW_AUDIO_8K
 (0)

	)

16 
	#TW_AUDIO_16K
 (1)

	)

18 
	#TW_AUDIO_16BIT
 (0)

	)

19 
	#TW_AUDIO_8BIT
 (1)

	)

21 
	#TW_AUDIO_PCM
 (0)

	)

22 
	#TW_AUDIO_ALAW
 (1)

	)

23 
	#TW_AUDIO_ULAW
 (2)

	)

24 
	#TW_AUDIO_ADPCM_32K
 (3)

	)

25 
	#TW_AUDIO_ADPCM_16K
 (4)

	)

26 
	#TW_AUDIO_ADPCM_48K
 (5)

	)

28 
	#AUDIO_ENABLE
 (0x0001)

	)

29 
	#AUDIO_DISABLE
 (0x0000)

	)

30 
	#AUDIO_MUTE_ENABLE
 (0x0001)

	)

31 
	#AUDIO_MUTE_DISABLE
 (0x0000)

	)

35 
	eaudio_°©e


37 
NEED_INIT
 = 0,

38 
INITED
,

39 
OPENED
,

40 
CLOSED
,

41 }
	tAUDIO_STATE
;

44 
	saudio_í_›î©i⁄


46 (*
öô
)(
tw_audio_í
 *
ai
);

50 
	stw_audio_c⁄fig


52 
ty≥
;

53 
ßm∂e_øã
;

54 
bô_wide
;

57 
	stw_audio_∑ømts


59 
tw_audio_c⁄fig
 
¥›îty
;

60 
audio_í_›î©i⁄
 *
›
;

64 
	stw_audio_de


66 
tw_£rvi˚_devi˚
 
tsd
;

67 *
«me
;

68 
u£rs
;

69 
AUDIO_STATE
 
°©e
;

70 
tw_audio_∑ømts
 
∑ø
;

71 
tw_audio_drivî_t
 *
´_driv
;

72 
tc_queue
 *
queue
;

73 
£m≠h‹e
 
£m
;

86 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tc_audio_encode.h

1 #i‚def 
TW_AUDIO_EN_H__


2 
	#TW_AUDIO_EN_H__


	)

4 #ifde‡
__˝lu•lus


12 
	#TW_CONFIG_ADD_NAL


	)

15 #ifde‡
TW_CONFIG_ADD_NAL


16 
	#TW_TOTAL_AUDIO_FRAMEHEADER_LEN
 ((
tw_‰ame_hódî_t
Ë+ (
tw_audio_‰ame_∑d_t
Ë+ (
ext_h264_«l_bô°ªam_t
))

	)

18 
	#TW_TOTAL_AUDIO_FRAMEHEADER_LEN
 ((
tw_‰ame_hódî_t
Ë+ (
tw_audio_‰ame_∑d_t
))

	)

23 
	#TW_PCM_AUDIO_LEN
 (498)

	)

24 
	#TW_ADPCM_AUDIO_LEN
 (384)

	)

26 
	#TW_AUDIO_8K
 (0)

	)

27 
	#TW_AUDIO_16K
 (1)

	)

29 
	#TW_AUDIO_16BIT
 (0)

	)

30 
	#TW_AUDIO_8BIT
 (1)

	)

32 
	#AUDIO_ENABLE
 (0x0001)

	)

33 
	#AUDIO_DISABLE
 (0x0000)

	)

34 
	#AUDIO_MUTE_ENABLE
 (0x0001)

	)

35 
	#AUDIO_MUTE_DISABLE
 (0x0000)

	)

47 
tw_audio_í
;

49 
	eaudio_°©e
{

50 
NEED_INIT
 = 0,

51 
INITED
,

52 
OPENED
,

53 
CLOSED
,

54 }
	tAUDIO_STATE
;

57 
	saudio_í_›î©i⁄


59 (*
öô
)(
tw_audio_í
 *
ai
);

62 
	stw_audio_c⁄fig


64 
ty≥
;

65 
ßm∂e_øã
;

66 
bô_wide
;

69 
	stw_chù_audio_∑øm_my


71 
u32
 
ch™ge_mask_Êag
;

72 
u8
 
i_bô_wide
;

73 
u8
 
i_ßm∂e_øã
;

74 
e_audio_ty≥
;

79 
	stw_audio_í


81 
tw_£rvi˚_devi˚
 
tsd
;

82 
tw_dev_èbÀ_id
 
tbid
;

83 *
«me
;

84 
u£rs
;

85 
AUDIO_STATE
 
°©e
;

86 
tw_chù_audio_∑øm_my
 
∑ø
;

88 
£m≠h‹e
 
£m
;

89 
waô_queue_hód_t
 
waô_pﬁl
;

90 
timî_id
;

91 
disˇrd
;

95 
	stw_audio_de


97 
tw_£rvi˚_devi˚
 
tsd
;

98 
tw_dev_èbÀ_id
 
tbid
;

99 *
«me
;

100 
u£rs
;

101 
AUDIO_STATE
 
°©e
;

102 
tw_chù_audio_∑øm_my
 
∑ø
;

104 
£m≠h‹e
 
£m
;

105 
waô_queue_hód_t
 
waô_pﬁl
;

106 
timî_id
;

109 
	stw_video_í


111 
tw_£rvi˚_devi˚
 
tsd
;

112 
tw_dev_èbÀ_id
 
tbid
;

113 *
«me
;

114 
u£rs
;

115 
°©e
;

118 
£m≠h‹e
 
£m
;

119 
waô_queue_hód_t
 
waô_pﬁl
;

120 
timî_id
;

121 
disˇrd
;

125 
	stw_j≥g_í


127 
tw_£rvi˚_devi˚
 
tsd
;

128 
tw_dev_èbÀ_id
 
tbid
;

129 *
«me
;

130 
u£rs
;

131 
°©e
;

134 
£m≠h‹e
 
£m
;

135 
waô_queue_hód_t
 
waô_pﬁl
;

136 
timî_id
;

137 
disˇrd
;

141 
	stw_chù_ai


143 
tw_£rvi˚_devi˚
 
tsd
;

144 
tw_dev_èbÀ_id
 
tbid
;

145 *
«me
;

146 
u£rs
;

147 
°©e
;

150 
£m≠h‹e
 
£m
;

151 
waô_queue_hód_t
 
waô_pﬁl
;

152 
timî_id
;

155 
	stw_chù_vi


157 
tw_£rvi˚_devi˚
 
tsd
;

158 
tw_dev_èbÀ_id
 
tbid
;

159 *
«me
;

160 
u£rs
;

161 
°©e
;

164 
£m≠h‹e
 
£m
;

165 
waô_queue_hód_t
 
waô_pﬁl
;

166 
timî_id
;

169 
ölöe
 
£t_tve_°©e
(
tw_audio_í
 *
tve
, 
AUDIO_STATE
 
√w_°©e
)

171 
tve
->
°©e
 = 
√w_°©e
;

175 
ölöe
 
£t_èe_°©e
(
tw_audio_í
 *
èe
, 
AUDIO_STATE
 
√w_°©e
)

177 
èe
->
°©e
 = 
√w_°©e
;

180 
ölöe
 
£t_tde_°©e
(
tw_audio_de
 *
tde
, 
AUDIO_STATE
 
√w_°©e
)

182 
tde
->
°©e
 = 
√w_°©e
;

185 
ölöe
 
tc_£t_audio_∑øm
(
tw_chù_audio_∑øm_my
 *
§c
,tw_chù_audio_∑øm_my *
de°
)

188 
§c
->
i_bô_wide
 = 
de°
->i_bit_wide;

189 
§c
->
i_ßm∂e_øã
 = 
de°
->i_sample_rate;

190 
§c
->
e_audio_ty≥
 = 
de°
->e_audio_type;

194 
ölöe
 
gë_∑ylﬂd_Àn
(
tw_chù_audio_∑øm_my
 *
∑ø
)

196 
ªt
 = 
U32LONG_MAX
;

198 
∑ø
->
e_audio_ty≥
)

200 
TW_AUDIO_PCM
:

201 
ªt
 = 
TW_PCM_AUDIO_LEN
;

203 
TW_AUDIO_ADPCM_32K
:

204 
TW_AUDIO_ADPCM_16K
:

205 
TW_AUDIO_ADPCM_48K
:

206 
ªt
 = 
TW_ADPCM_AUDIO_LEN
;

208 
TW_AUDIO_ALAW
:

209 
TW_AUDIO_ULAW
:

211 
¥ötk
("not supportedÇow!\n");

214  
ªt
;

251 
tw_chù_audio_∑øm_my
 
def_audio_∑rm
;

252 
tc_chù_öô
(
tw_chù_devi˚
 *
tcd
,
bus_id
,
chù_id
);

253 
tc_chù_exô
(
tw_chù_devi˚
 *
tcd
);

254 
tw_audio_í_öô
(* 
d©a
);

255 
tw_audio_í_ªmove
();

257 
tw_audio_de_öô
(* 
d©a
);

258 
tw_audio_de_ªmove
();

260 
tw_videoh264_í_öô
(* 
d©a
);

261 
tw_videoh264_í_ªmove
(*
d©a
);

263 
tw_videoh264s_í_öô
(* 
d©a
);

264 
tw_videoh264s_í_ªmove
(*
d©a
);

266 
tw_j≥g_í_öô
(* 
d©a
);

267 
tw_j≥g_í_ªmove
();

269 
tw5864_audio_de_drivî_öô
(* 
∑ø
);

270 
tw5864_audio_de_drivî_ªmove
();

272 
tw5864_audio_í_drivî_öô
(* 
∑ø
);

273 
tw5864_audio_í_drivî_ªmove
();

275 
tw5864_video_í_drivî_öô
(* 
∑ø
);

276 
tw5864_video_í_drivî_ªmove
();

278 
tw5864_videosub_í_drivî_öô
(* 
∑ø
);

279 
tw5864_videosub_í_drivî_ªmove
();

281 
tw5864_j≥g_í_drivî_öô
(* 
∑ø
);

282 
tw5864_j≥g_í_drivî_ªmove
();

284 
tw_chù_vi_öô
(* 
d©a
);

285 
tw_chù_vi_ªmove
();

287 
tw_chù_ai_öô
(* 
d©a
);

288 
tw_chù_ai_ªmove
();

291 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tc_buffer.h

1 #i‚def 
__TWELL_CORE_BUF_H__


2 
	#__TWELL_CORE_BUF_H__


	)

5 #ifde‡
__˝lu•lus


12 
	#QUEUE_MAX_FRAME
 10

	)

13 
	#SCATTRT_MAX_ENTRY
 128

	)

15 
	#MIN_COMMON_HEAD_LEN
 ((
tc_buf„r
Ë+ (
tc_‰ame_hódî
))

	)

17 
	#MIN_HEADER_LEN_AUDIO
 (
MIN_COMMON_HEAD_LEN
 + (
tc_audio_‰ame_∑d
))

	)

18 
	#MIN_HEADER_LEN_VIDEO
 
MIN_COMMON_HEAD_LEN


	)

19 
	#MIN_HEADER_LEN_VIDEO_IDR
 (
MIN_COMMON_HEAD_LEN
 + (
tc_h264_idr_‰ame_∑d
))

	)

20 
	#MIN_HEADER_LEN_JPEG
 
MIN_COMMON_HEAD_LEN


	)

22 
	etc_mem_ty≥


24 
MEM_MMAP
 = 0,

26 
	etc_buf_ty≥


28 
BUF_ENCODER_MAP
 = 0,

29 
BUF_ENCODER_SYNC
,

30 
BUF_DECODER_MAP
,

31 
BUF_DECODER_SYNC
,

35 
	etc_buf_ßèã


37 
STATE_NEEDINIT
 = 0,

38 
STATE_FREE
,

39 
STATE_READY
,

40 
STATE_BUSY
,

41 
STATE_OBSOLETE
,

45 
	stc_buf_de•t


47 
__u32
 
cou¡
;

48 
tc_buf_ty≥
 
bty≥
;

49 
tc_mem_ty≥
 
mty≥
;

52 
	stc_sˇâî


54 
__u32
 *
addr
;

55 
__u32
 
Àn
;

56 *
ˇºõr
;

60 
	#TC_BUFFER_TYPE_DS_H264
 0x0001

	)

61 
	#TC_BUFFER_TYPE_DS_AUDIO
 0x0002

	)

62 
	#TC_BUFFER_TYPE_DS_MJPEG
 0x0003

	)

69 
	stc_time


71 
hour
;

72 
mö
;

73 
£c⁄d
;

74 
ªsvîed
;

76 
	stc_d©e


78 
yór
;

79 
m⁄th
;

80 
day
;

82 
	stc_xtime


84 
tc_d©e
 
d©e
;

85 
tc_time
 
time
;

88 
	stc_buf„r_h264_d•t


90 
is_di•œy
:1;

91 
is_íd
:1;

92 
is_fûe_íd
:1;

93 
is_g›_íd
:1;

96 
	stc_buf„r


99 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

100 
ödex
:8;

101 
ty≥
:4;

102 
Êag
:4;

103 
mem‹y
:3;

104 
ªv
:13;

105 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

106 
ªv
:13;

107 
mem‹y
:3;

108 
Êag
:4;

109 
ty≥
:4;

110 
ödex
:8;

120 
tc_xtime
 
abs_time
;

121 
∑y_off
;

122 
∑y_Àn
;

123 
ds_ty≥
;

124 
is_xtime_vÆid
;

125 
¥iv©e_Àn
;

126 
¥iv©e
[0];

127 }
ds
;

131 
tc_buf_ßèã
 
°©e
;

132 
ƒ_‰ame
;

133 
ißlign
;

134 
off_to_∑ge
;

135 
__u32
 *
°¨t
;

136 
__u32
 
size
;

138 
¥iv©e_Àn
;

139 
¥iv©e
[0];

140 }
m
;

144 }
codec_öfo
;

146 
tc_‰ame_hód
[0];

152 
	#__tc__°©e
 
codec_öfo
.
m
.
°©e


	)

153 
	#__tc__ƒ_‰ame
 
codec_öfo
.
m
.
ƒ_‰ame


	)

154 
	#__tc__ißlign
 
codec_öfo
.
m
.
ißlign


	)

155 
	#__tc__off_to_∑ge
 
codec_öfo
.
m
.
off_to_∑ge


	)

156 
	#__tc__°¨t
 
codec_öfo
.
m
.
°¨t


	)

157 
	#__tc__size
 
codec_öfo
.
m
.
size


	)

160 
	#__tc__abs_time
 
codec_öfo
.
ds
.
abs_time


	)

161 
	#__tc__∑y_off
 
codec_öfo
.
ds
.
∑y_off


	)

162 
	#__tc__∑y_Àn
 
codec_öfo
.
ds
.
∑y_Àn


	)

163 
	#__tc__ds_ty≥
 
codec_öfo
.
ds
.
ds_ty≥


	)

164 
	#__tc__is_abs_time_vÆid
 
codec_öfo
.
ds
.
is_xtime_vÆid


	)

165 
	#__tc__ds_¥ivÀn
 
codec_öfo
.
ds
.
¥iv©e_Àn


	)

169 
	#INVALID_TIME
 0xAF

	)

174 
	stc_buf„r_kîn


176 
__u32
 
ödex
;

177 
tc_buf_ty≥
 
ty≥
;

178 
tc_buf_ßèã
 
°©e
;

179 
__u32
 
Êag
;

180 
timevÆ
 
time°≠
;

181 
tc_queue
 *
tq
;

182 
waô_queue_hód_t
 
d⁄e
;

183 
tc_mem_ty≥
 
mem‹y
;

184 
tc_hódî_buf
 *
thb
;

185 
__u32
 
œ°_¥ï¨e
;

187 *
hﬁdî
;

189 
ißlign
;

190 
off_to_∑ge
;

191 
__u32
 *
°¨t
;

192 
__u32
 
size
;

195 
tc_sˇâî
 
sg
[
SCATTRT_MAX_ENTRY
];

196 
tc_‰ame_hód
[0];

200 
	stc_‰ame_hódî
 {

201 
codecTy≥
;

202 
°ªamTy≥
;

203 
‰ameTy≥
;

204 
‰ameSîül
;

205 
timeSèmp
;

206 
∑ylﬂd_off£t
;

207 
∑ylﬂdLí
;

208 
∑d
[0];

211 
	stc_audio_‰ame_∑d
 {

212 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

213 
u32
 
bus_id
:4;

214 
u32
 
chù_id
:4;

215 
u32
 
ch™_id
:4;

216 
u32
 
ty≥
:4;

217 
u32
 
bô_wide
:4;

218 
u32
 
ßm∂e_øã
:4;

219 
u32
 
bô_øã
:8;

220 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

221 
u32
 
bô_øã
:8;

222 
u32
 
ßm∂e_øã
:4;

223 
u32
 
bô_wide
:4;

224 
u32
 
ty≥
:4;

225 
u32
 
ch™_id
:4;

226 
u32
 
chù_id
:4;

227 
u32
 
bus_id
:4;

231 
u32
 
‰ame_off£t
;

232 
u32
 
‰ame_size
;

233 
«l
[0];

236 
	stc_h264_idr_‰ame_∑d
{

237 
Âs
;

238 
öô_qp
;

239 
log2MaxFømeNumNöus4
;

240 
mb_width_möus1
;

241 
mb_height_möus1
;

242 
i_cuº_qp
;

243 
•s_‰ame_off£t
;

244 
•s_‰ame_size
;

245 
µs_‰ame_off£t
;

246 
µs_‰ame_size
;

247 
idr_‰ame_off£t
;

248 
idr_‰ame_size
;

249 
«l
[0];

252 
	stc_queue_›s


255 (*
buf_£tup
)(
tc_queue
 * 
tq
, *
outvÆ
);

256 (*
buf_¥ï¨e
)(
tc_queue
 * 
tq
, *
¥iv
,
tc_buf„r
 
__u£r
 *
tc
);

257 (*
buf_ªÀa£
)(
tc_queue
 * 
tq
, *
¥iv
,
tc_buf„r_kîn
 *
tc
);

258 (*
buf_to_ªady
)(
tc_queue
 * 
tq
, 
tc_buf„r_kîn
 *
tc
);

259 (*
buf_to_obsﬁëe
)(
tc_queue
 * 
tq
, 
tc_buf„r_kîn
 *
tc
);

264 
	stc_queue
 {

265 
muãx
 
lock
;

266 *
dev
;

268 
tc_buf_ty≥
 
ty≥
;

269 
unô_size
;

270 
buf_ƒ
;

271 
tc_buf„r_kîn
 *
bufs
[
QUEUE_MAX_FRAME
];

272 
wp
;

273 
Ω
;

274 
waô_queue_hód_t
 
d⁄e
;

276 
tc_queue_›s
 *
›s
;

281 *
¥iv_d©a
;

290 
ölöe
 
queue_fuŒ
(
tc_queue
 * 
tq
)

292  (
tq
->
Ω
 =—q->
wp
 + 1)%—q->
buf_ƒ
));

295 
ölöe
 
queue_em±y
(
tc_queue
 * 
tq
)

297  
tq
->
wp
 =tq->
Ω
;

302 
ölöe
 
queue_öc_wp
(
tc_queue
 * 
tq
)

304 
tq
->
wp
++;

305 
tq
->
wp
 =Åq->w∞%Åq->
buf_ƒ
;

308 
ölöe
 
queue_öc_Ω
(
tc_queue
 * 
tq
)

310 
tq
->
Ω
++;

311 
tq
->
Ω
 =Åq->Ω %Åq->
buf_ƒ
;

315 
ölöe
 
£t_tck_°©e
(
tc_buf„r_kîn
 *
tck
, 
tc_buf_ßèã
 
√w_°©e
)

317 
tck
->
°©e
 = 
√w_°©e
;

320 
ölöe
 
tc_buf_ßèã
 
gë_tck_°©e
(
tc_buf„r_kîn
 *
tck
)

322  
tck
->
°©e
;

330 
£t_tq_°©e_busy
(
tc_queue
 *
tq
);

331 
tc_buf„r_£t_audio_d©a
(
tc_buf„r
 *
tc
, 
tc_buf„r_kîn
 *
tck
,
tw_audio_∑ckë_£˘i⁄_t
 *
èps
,*
off
);

333 
tc_buf„r_£t_h264_d©a
(
is_ma°î
,
tc_buf„r
 
__u£r
 *
tc
, 
tc_buf„r_kîn
 *
tck
, 
tw_video_‰ame_tcb_t
 *
vf
,*
off
);

334 
tc_buf„r_£t_j≥g_d©a
(
tc_buf„r
 
__u£r
 *
tc
, 
tc_buf„r_kîn
 *
tck
, 
tw_vb_‰ame_tcb
 *
tvf
, *
off
);

335 
tc_queue_öô
(
tc_queue
 *
q
, 
tc_queue_›s
 *
›s
, * 
dev
,
usize
, 
buf_cou¡
,*
¥iv
);

336 
tc_queue_ª£t
(
tc_queue
 *
q
);

337 
tc_queue_ªÀa£
(
tc_queue
 *
q
);

344 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tc_common.h

1 #i‚def 
__TW_CORE_COMMON_H__


2 
	#__TW_CORE_COMMON_H__


	)

4 #ifde‡
__˝lu•lus


9 
	~<löux/ty≥s.h
>

10 
	~<löux/moduÀ.h
>

11 
	~<löux/moduÀ∑øm.h
>

12 
	~<löux/i›‹t.h
>

13 
	~<löux/kî√l.h
>

14 
	~<löux/li°.h
>

15 
	~<löux/dñay.h
>

16 
	~<löux/öô.h
>

17 
	~<löux/öãºu±.h
>

18 
	~<löux/kmod.h
>

19 
	~<löux/i2c.h
>

20 
	~<löux/°rögify.h
>

21 
	~<löux/muãx.h
>

22 
	~<löux/¶ab.h
>

23 
	~<löux/vmÆloc.h
>

24 
	~<löux/mm.h
>

25 
	~<löux/waô.h
>

26 
	~<löux/com∂ëi⁄.h
>

27 
	~<löux/time.h
>

28 
	~<löux/dma-m≠pög.h
>

29 
	~<löux/∂©f‹m_devi˚.h
>

30 
	~<löux/videodev2.h
>

31 
	~<löux/dma-m≠pög.h
>

32 
	~<löux/kthªad.h
>

33 
	~<löux/highmem.h
>

34 
	~<löux/sysfs.h
>

35 
	~<löux/pﬁl.h
>

36 
	~<löux/úq.h
>

37 
	~<löux/io˘l.h
>

38 
	~<löux/¥oc_fs.h
>

39 
	~<löux/vîsi⁄.h
>

40 
	~<asm/io.h
>

41 
	~<asm/∑ge.h
>

42 
	~<asm/úq.h
>

43 
	~<asm/©omic.h
>

44 
	~<asm/dma.h
>

45 
	~<asm/uac˚ss.h
>

48 
	~<tw5864/dvm_comm⁄.h
>

49 
	~<tw5864/tw_chù_drivî.h
>

50 
	~<tw5864/tw_codec_comm⁄.h
>

51 
	~<tw5864/tc.h
>

52 
	~<tw5864/tc_audio_ícode.h
>

53 
	~<tw5864/tc_buf„r.h
>

54 
	~<tw5864/tc_hñ≥r.h
>

56 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tc_helper.h

1 #i‚def 
__TC_HELPER_H__


2 
	#__TC_HELPER_H__


	)

4 #ifde‡
__˝lu•lus


13 
	smemblock_s


15 
li°_hód
 
li°
;

16 *
±r
;

17 
size_t
 
size
;

24 *
tc_mÆloc
(
size_t
 
size
);

25 
tc_‰ì
(*
±r
);

26 *
tc_ªÆloc
(*
±r
, 
size_t
 
size
);

39 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tc_ioctl.h

1 #i‚de‡
__DVM_CORE_IOCTL_H__


2 
	#__DVM_CORE_IOCTL_H__


	)

4 
	~<löux/io˘l.h
>

5 
	~<tw5864/tc_comm⁄.h
>

9 
	#DVM_SYS_IOC_MAGIC
 'S'

	)

10 
	#DVM_CODEC_IOC_MAGIC
 'C'

	)

11 
	#DVM_MOTION_DECTION_IOC_MAGIC
 'D'

	)

12 
	#DVM_OSD_IOC_MAGIC
 'O'

	)

13 
	#DVM_IOC_MAXNR
 (256)

	)

19 
	#DVM_SYS_GET_CHAN_WORK_MODE
 
	`_IOR
(
TW_CODEC_IOC_MAGIC
, 12, )

	)

20 
	#DVM_SYS_SET_CHAN_WORK_MODE
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 13, )

	)

21 
	#DVM_SYS_CREATE_CHAN
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 14, )

	)

22 
	#DVM_SYS_RELEASE_CHAN
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 15, )

	)

23 
	#DVM_SYS_QUERY_CAP
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 16, )

	)

24 
	#DVM_SYS_GET_CTL
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 17, )

	)

25 
	#DVM_SYS_SET_CTL
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 18, )

	)

27 
	#DVM_SYS_REQUEST_MEM
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 19, )

	)

28 
	#DVM_SYS_RELEASE_MEM
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 20, )

	)

41 
	#DVM_CODEC_GET_AUDIO_ENCODER_PARAM
 
	`_IOR
(
TW_CODEC_IOC_MAGIC
, 4, )

	)

42 
	#DVM_CODEC_SET_AUDIO_ENCODER_PARAM
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 5, )

	)

43 
	#DVM_CODEC_SET_VIDEO_TIMESTAMP_BASE
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 6, )

	)

44 
	#DVM_CODEC_GET_VIDEO_TIMESTAMP_BASE
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 7, )

	)

47 
	#DVM_MOTION_DECTION_GET_PARAM
 
	`_IOR
(
TW_CODEC_IOC_MAGIC
, 0, )

	)

48 
	#DVM_MOTION_DECTION_SET_PARAM
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 1, )

	)

51 
	#DVM_OSD_GET_PARAM
 
	`_IOR
(
TW_CODEC_IOC_MAGIC
, 0, )

	)

52 
	#DVM_OSD_SET_PARAM
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 1, )

	)

	@../../tw5864/include/tw5864/tc_video_en.h

1 #i‚def 
TW_AUDIO_EN_H__


2 
	#TW_AUDIO_EN_H__


	)

5 #ifde‡
__˝lu•lus


13 
	stw_video_∑ø


15 
id
;

21 
	stw_video_í


23 
tw_£rvi˚_devi˚
 
tsd
;

24 
tw_dev_èbÀ_id
 
tbid
;

25 *
«me
;

26 
u£rs
;

27 
°©e
;

28 
tw_video_∑ø
 
∑ø
;

29 
tw_h264_logic_ícode_ch™
 *
driv
;

30 
£m≠h‹e
 
£m
;

31 
waô_queue_hód_t
 
waô_pﬁl
;

32 
timî_id
;

36 
ölöe
 
£t_tve_°©e
(
tw_audio_í
 *
tve
, 
AUDIO_STATE
 
√w_°©e
)

38 
tve
->
°©e
 = 
√w_°©e
;

67 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw5864_chip.h

1 #i‚def 
TW5864_CHIP_H


2 
	#TW5864_CHIP_H


	)

4 #ifde‡
__˝lu•lus


9 
	#QUANTIZATION_TABLE_LEN
 (96)

	)

10 
	#VLC_LOOKUP_TABLE_LEN
 (1024)

	)

11 
	#VLC_LOOKUP_TABLE_BASE
 (0x2000)

	)

12 
	#ENCRYPT_FIRMWARE_BASE
 (0x82000)

	)

13 
	#ENCRYPT_FIRMWARE_LEN
 (2048)

	)

14 
	#START_ENCRYPT_FIRMWARE
 (0x80044)

	)

16 
	#DDRON
 (0x0001)

	)

17 
	#INTERON
 (0x0002)

	)

18 
	#CMOSON
 (0x0004)

	)

19 
	#INTRAON
 (0x0008)

	)

20 
	#DEBLOCKINGON
 (0x0010)

	)

21 
	#DAON
 (0x0020)

	)

22 
	#CIF
 (0x0000)

	)

23 
	#D1
 (0x0040)

	)

24 
	#HD_720P_1080I
 (0x0080)

	)

25 
	#HALFD1
 (0x00c0)

	)

27 
	#ENABLE_INSERT_03
 (0x00080)

	)

28 
	#ENABLE_CDC_VLCS_MAST_R
 (0x02000)

	)

29 
	#ENABLE_VLC_FLOWCONTROL
 (0x04000)

	)

30 
	#MASK_HARDWARE_INSERT_03
 (0x10000)

	)

32 
	#ENABLE_VLC_BITSTREAM_SEND_DDR
 (0x0080)

	)

34 
	#AD_DA_LOOP
 (8)

	)

35 
	#START_DAC
 (2)

	)

36 
	#START_COMS_EN
 (4)

	)

37 
	#START_ORIG_DAC
 (1)

	)

38 
	#DDR_A_CHIP
 (0<<5)

	)

39 
	#DDR_B_CHIP
 (1<<5)

	)

41 
	#MAX_MB_DELAY
 (128 * 16)

	)

42 
	#MIN_MB_DELAY
 (0)

	)

43 
	#MB_DELAY_VALUE
 (0xf<<4)

44 
	#SEARCH_WINDOW_SIZE_VALUE
 (0x0109)

	)

46 
	#DEFAULT_SYS_CLK
 185

	)

48 
	#MODE
 (0x0004)

	)

49 
	#CHIPSCOPE
 (0x000c)

	)

50 
	#TOTAL_CHAN_CUR_PTR
 (0x0010)

	)

51 
	#WORD_SHORT_CNTL
 (0x0014)

	)

52 
	#QP
 (0x0018)

	)

53 
	#CIF_MAP_D1_MODE
 (0x001c)

	)

54 
	#ORIGINALSEQUENCE
 (0x0020)

	)

55 
	#REFERENCEFRAME
 (0x0024)

	)

56 
	#CHANNEL_SELECT
 (0x0028)

	)

57 
	#CHANNEL_ID
 (0x002c)

	)

58 
	#DDRPAGE
 (0x0030)

	)

59 
	#DSP_DEBUG_CNTL
 (0x0034)

	)

60 
	#AD_ORIG_RAM_BASE
 (0x0038)

	)

61 
	#AD_CHAN_8_15_ORIG_BASE
 (0x003c)

	)

62 
	#NEW_SENSOR_CONTROL
 (0x0040)

	)

63 
	#TOTAL_CHAN_8_15_CUR_PTR
 (0x004c)

	)

64 
	#INTERSTART
 (0x0200)

	)

65 
	#WINDOWSIZE
 (0x0204)

	)

66 
	#MBADDR
 (0x0208)

	)

67 
	#INTRANDMECONTROL
 (0x020c)

	)

68 
	#REFFRAMEINDEX
 (0x0210)

	)

69 
	#LAMDA
 (0x0214)

	)

70 
	#FRAMERESOLUTION
 (0x0218)

	)

71 
	#DSP_CUR_RAM_BASE
 (0x021c)

	)

73 
	#OSD_ATTRI_BASE_REG
 (0x0220)

	)

74 
	#OSD_ATTRI_UPDATE_REG
 (0x0224)

	)

75 
	#OSD_RECTANGLE_EN_REG
 (0x0228)

	)

77 
	#ENCRYPT_CLOCK
 (0x0248)

	)

78 
	#INTRASTART
 (0x0400)

	)

79 
	#INTRA4X4_THRESHOLD_I
 (0x040c)

	)

80 
	#INTRAENABLE
 (0x0410)

	)

81 
	#MB4X4LAMDA
 (0x0414)

	)

82 
	#MEREADY
 (0x0600)

	)

83 
	#INTRA4X4_THRESHOLD_IP
 (0x604)

	)

84 
	#MBMODE
 (0x060c)

	)

85 
	#QUANTIZATION
 (0x0800)

	)

86 
	#ENCODER_VLC_PARAM
 (0x1000)

	)

87 
	#SLICE_TOTAL_BIT_NUMBER
 (0x1004)

	)

88 
	#RES_TOTAL_BIT_NUMBER
 (0x1008)

	)

89 
	#TOTAL_COEFF_NUMBER
 (0x1010)

	)

90 
	#ENCODER_VLC_INTR_STATUS
 (0x100c)

	)

91 
	#VLC_ENCODER_INTERRUPT
 (0x1014)

	)

92 
	#ENABLE_VLC_LOOKUP_TABLE
 (0x101c)

	)

94 
	#MV_VECTOR_CONTROL
 (0xfc04)

	)

96 
	#CHIP_TIEMR_INTERVAL
 (0x1804c)

	)

97 
	#ONE_MS_INTERVAL
 (0x0)

	)

98 
	#TWO_MS_INTERVAL
 (0x1)

	)

99 
	#FOUR_MS_INTERVAL
 (0x2)

	)

100 
	#EIGHT_MS_INTERVAL
 (0x3)

	)

103 
	#SENIF_BUS01_MODE
 (0x0d00)

	)

104 
	#SENIF_BUS23_MODE
 (0x0d04)

	)

105 
	#SENIF_HOR_MIR
 (0x0d08)

	)

106 
	#SENIF_VER_MIR
 (0x0d0c)

	)

107 
	#SENIF_WIDTH_PARTA
(
bus
Ë(0x0d10 + (busË* 0x10)

	)

108 
	#SENIF_WIDTH_PARTB
(
bus
Ë(0x0d14 + (busË* 0x10)

	)

109 
	#SENIF_HEIGHT_PARTA
(
bus
Ë(0x0d18 + (busË* 0x10)

	)

110 
	#SENIF_HEIGHT_PARTB
(
bus
Ë(0x0d1¯+ (busË* 0x10)

	)

111 
	#SENIF_FULL_FLAGS
 (0x0d50)

	)

112 
	#SENIF_PARTAB_SELECT
 (0x0d54)

	)

114 #ifdef 
TW5864_CHIP


115 
	#AUDIO_1MS_PLL_COUNTER_REG
 (0x4000)

	)

116 
	#AUDIO_EN_CONTROL_REG
 (0x4004)

	)

117 
	#AUDIO_IN_ORIG_EN_CONTROL_REG
 (0x4008)

	)

118 
	#AUDIO_IN_ADPCM_EN_CONTROL_REG
 (0x400c)

	)

119 
	#AUDIO_OUT_CONTROL_REG
 (0x4014)

	)

121 
	#HOST_BLOCK_RD_ADPCM_FINISH_REG
 (0x4018)

	)

122 
	#ADPCM_ENCODE_WR_PTR_CH0_CH9_REG
 (0x401c)

	)

123 
	#ADPCM_ENCODE_WR_PTR_CH10_CH16_REG
 (0x4020)

	)

124 
	#ADPCM_ENCODE_RD_PTR_CH0_CH9_REG
 (0x4024)

	)

125 
	#ADPCM_ENCODE_RD_PTR_CH10_CH16_REG
 (0x4028)

	)

127 
	#ADPCM_DECODE_RD_WR_PTR_REG
 (0x402c)

	)

129 
	#PCM_ENCODE_WR_PTR_CH0_CH7_REG
 (0x4030)

	)

130 
	#PCM_ENCODE_WR_PTR_CH8_CH15_REG
 (0x4034)

	)

131 
	#PCM_ENCODE_WR_PTR_CH16_REG
 (0x4038)

	)

132 
	#PCM_ENCODE_RD_PTR_CH0_CH7_REG
 (0x403c)

	)

133 
	#PCM_ENCODE_RD_PTR_CH8_CH15_REG
 (0x4040)

	)

134 
	#PCM_ENCODE_RD_PTR_CH16_REG
 (0x4044)

	)

135 
	#HOST_BLOCK_RD_PCM_FINISH_REG
 (0x4048)

	)

138 
	#CDC_VLCS_MASTER_REG
 (0x8008)

	)

139 
	#CHIP_IRQS_NR
 (32)

	)

140 
	#INTERRUPT_SOURCE_TRIGGER_REG_L
 (0x8800)

	)

141 
	#INTERRUPT_SOURCE_TRIGGER_REG_H
 (0x8804)

	)

142 
	#EDGE_TRIGGER
 (1)

	)

143 
	#LEVEL_TRIGGER
 (0)

	)

144 
	#INTERRUPT_SOURCE_ENABLE_REG_L
 (0x8808)

	)

145 
	#INTERRUPT_SOURCE_ENABLE_REG_H
 (0x880c)

	)

146 
	#INTERRUPT_ENABLE
 (1)

	)

147 
	#INTERRUPT_DISABLE
 (0)

	)

148 
	#INTERRUPT_CLEAR_REG_L
 (0x8810)

	)

149 
	#INTERRUPT_CLEAR_REG_H
 (0x8814)

	)

150 
	#INTERRUPT_ASSERT_REG_L
 (0x8818)

	)

151 
	#INTERRUPT_ASSERT_REG_H
 (0x881c)

	)

152 
	#INTERRUPT_OUTPUT_ASSERT_REG
 (0x8820)

	)

153 
	#INTERRUPT_STATUS_REG_L
 (0x8838)

	)

154 
	#INTERRUPT_STATUS_REG_H
 (0x883c)

	)

156 
	#INTERRUPT_FLAGS_EXT
 (0x18000)

	)

157 
	#PCI_MASTER_CONTROL
 (0x18004)

	)

158 
	#IRQ_EXT_VLC_INTR
 (1)

	)

159 
	#IRQ_EXT_ADSYNC_INTR
 (3)

	)

160 
	#IRQ_EXT_PRVEOF_INTR
 (4)

	)

161 
	#IRQ_EXT_PRVOVR_INTR
 (5)

	)

162 
	#IRQ_EXT_TIMER_INTR
 (6)

	)

163 
	#IRQ_EXT_AUDIO_EOF_INTR
 (8)

	)

164 
	#IRQ_EXT_IIC_INTR
 (24)

	)

165 
	#IRQ_EXT_AD_INTR
 (25Ë

	)

167 
	#PCI_I2C
 (0x18014)

	)

168 
	#MCU_IIC_CONF
 (0x18048)

	)

169 
	#PCI_TIMER_CONTROL
 (0x1804c)

	)

170 
	#I2C_PHASE_SHIFT
 (0x800c)

	)

172 #ifde‡
USE_ON_CHIP_TIMER


173 
	#MS_PER_TICK
 (4)

	)

175 
	#MS_PER_TICK
 (5)

	)

178 
	#IRQ_VLC_TYPE_INTR
 (0)

	)

179 
	#IRQ_BURST_TYPE_INTR
 (1)

	)

180 
	#IRQ_MV_TYPE_INTR
 (2)

	)

181 
	#IRQ_FRONT_END_TYPE_INTR
 (3)

	)

182 
	#IRQ_JPEG_TYPE_INTR
 (12)

	)

183 
	#IRQ_TIMER_TYPE_INTR
 (22)

	)

184 
	#IRQ_VLC_DONE_TYPE_INTR
 (17)

	)

185 
	#IRQ_AD_SYNC_TYPE_INTR
 (19)

	)

186 
	#IRQ_PREV_EOF_TYPE_INTR
 (20)

	)

187 
	#IRQ_PREV_OVERFLOW_TYPE_INTR
 (21)

	)

188 
	#IRQ_AUDIO_EOF_TYPE_INTR
 (24)

	)

189 
	#IRQ_IIC_DONE_INTR
 (25)

	)

190 
	#IRQ_AD_EVENT_INTR
 (26)

	)

192 
	#ASIC_FRAME_MODE
 (0x9000)

	)

193 
	#ASIC_FRAME_MODE_UPDATE
 (0x900C)

	)

195 
	#DDRBASE
 (0x80000)

	)

196 
	#DDR_BURST_REG
 (0x80040)

	)

197 
	#DDR_MAP_COMPRESS_ENABLE
 (0)

	)

198 
	#DDR_MAP_COMPRESS_DISABLE
 (1)

	)

200 
	#AUDIO_ONE_CHIP_FOUR_CHAN
 (0x3)

	)

201 
	#AUDIO_TWO_CHIP_FOUR_CHAN
 (0xc)

	)

202 
	#AUDIO_ONE_CHIP_TWO_CHAN_AND_TWO_CHIP_TWO_CHAN
 (0xa)

	)

204 
	#OSD_ATTR_REG_BASE_ADDR
 (0x047f)

	)

205 
	#OSD_ATTR_REG_SHIFT
 (10)

	)

207 
	#CHAN_VIDEO_TIMESTAMP_BASE
 (0xc00)

	)

209 
	#FPGA_LEN_OFFSET
 (4)

	)

210 
	#VLC_INTR_STATUS_MASK
 (7)

	)

211 
	#VLC_INTR_MASK_ALL
 (0xf)

	)

213 
	#VLC_INTERRUPT_NULL
 (0)

	)

214 
	#VLC_A_BANK_FULL
 (1)

	)

215 
	#VLC_B_BANK_FULL
 (2)

	)

216 
	#VLC_A_B_BANK_FULL
 (3)

	)

217 
	#VLC_END_SLICE
 (4)

	)

218 
	#VLC_A_FULL_END_SLICE
 (5)

	)

219 
	#VLC_B_FULL_END_SLICE
 (6)

	)

220 
	#VLC_BANK_END_OVERFLOW
 (7)

	)

221 
	#VLC_OVERFLOW
 (8)

	)

223 
	#FPGA_ASYNC_SECTION_LEN
 (0x200000)

	)

225 
	#FPGA_RESET_VALID
 0

	)

226 
	#FPGA_RESET_INVALID
 1

	)

229 #ifdef 
ARM_PLATFORM


230 
	#FPGA0_BASE_ADDR
 (
S3C2410_PA_FPGA
)

	)

231 
	#FPGA0_SECTION_LEN
 (0x200000)

	)

233 
	#FPGA_CCLK_PIN
 
S3C2410_GPG7


	)

234 
	#FPGA_CCLK_PIN_FN
 
S3C2410_GPG7_SPICLK1


	)

235 
	#FPGA_DIN_PIN
 
S3C2410_GPG6


	)

236 
	#FPGA_DIN_PIN_FN
 
S3C2410_GPG6_SPIMOSI1


	)

237 
	#FPGA_DONE_PIN
 
S3C2410_GPG5


	)

238 
	#FPGA_DONE_PIN_FN
 
S3C2410_GPG5_INP


	)

239 
	#FPGA_INIT_B_PIN
 
S3C2410_GPG4


	)

240 
	#FPGA_INIT_B_PIN_FN
 
S3C2410_GPG4_INP


	)

241 
	#FPGA_PROG_PIN
 
S3C2410_GPG3


	)

242 
	#FPGA_PROG_PIN_FN
 
S3C2410_GPG3_OUTP


	)

244 
	#BOARD_STATUS_INDICATION_PIN
 
S3C2410_GPF5


	)

245 
	#BOARD_STATUS_INDICATION_PIN_FN
 
S3C2410_GPF5_OUTP


	)

247 #ifdef 
ARM_S3C2410_NVS_PLATFORM


248 
	#IRQ_FPGA_PIN
 
S3C2410_GPF1


	)

249 
	#IRQ_FPGA_PIN_FN
 
S3C2410_GPF1_EINT1


	)

250 
	#UNIRQ_FPGA_PIN_FN
 
S3C2410_GPF1_INP


	)

251 
	#IRQ_FPGA
 
IRQ_EINT1


	)

252 
	#IRQ_IDE_PIN
 
S3C2410_GPF6


	)

253 
	#IRQ_IDE_PIN_FN
 
S3C2410_GPF6_EINT6


	)

254 
	#UNIRQ_IDE_PIN_FN
 
S3C2410_GPF6_INP


	)

255 
	#IRQ_IDE
 
IRQ_EINT6


	)

256 
	#IRQ_DM9K_PIN
 
S3C2410_GPF2


	)

257 
	#IRQ_DM9K_PIN_FN
 
S3C2410_GPF2_EINT2


	)

258 
	#UNIRQ_DM9K_PIN_FN
 
S3C2410_GPF2_INP


	)

259 
	#IRQ_DM9K
 
IRQ_EINT2


	)

260 
	#LOST_VIDEO_PIN
 
S3C2410_GPG0


	)

261 
	#LOST_VIDEO_PIN_FN
 
S3C2410_GPG0_EINT8


	)

262 
	#UNLOST_VIDEO_PIN_FN
 
S3C2410_GPG0_INP


	)

263 
	#LOST_VIDEO_IRQ
 
IRQ_EINT8


	)

264 
	#FPGA_RESET_PIN
 
S3C2410_GPE8


	)

265 
	#FPGA_RESET_PIN_FN
 
S3C2410_GPE8_OUTP


	)

266 
	#RESTORE_DEFAULT_PIN
 
S3C2410_GPE2


	)

267 
	#RESTORE_DEFAULT_PIN_FN
 
S3C2410_GPE2_INP


	)

269 
	#NVS_ALARM_IN_OC1
 
S3C2410_GPG8


	)

270 
	#NVS_ALARM_IN_OC1_FN
 
S3C2410_GPG8_INP


	)

271 
	#NVS_ALARM_IN_OC2
 
S3C2410_GPG9


	)

272 
	#NVS_ALARM_IN_OC2_FN
 
S3C2410_GPG9_INP


	)

273 
	#NVS_ALARM_IN_OC3
 
S3C2410_GPG10


	)

274 
	#NVS_ALARM_IN_OC3_FN
 
S3C2410_GPG10_INP


	)

275 
	#NVS_ALARM_IN_OC4
 
S3C2410_GPG11


	)

276 
	#NVS_ALARM_IN_OC4_FN
 
S3C2410_GPG11_INP


	)

277 
	#NVS_ALARM_OUT1
 
S3C2410_GPG12


	)

278 
	#NVS_ALARM_OUT1_FN
 
S3C2410_GPG12_OUTP


	)

279 
	#NVS_ALARM_OUT1_UNFN
 
S3C2410_GPG12_INP


	)

280 
	#NVS_ALARM_OUT1_INVALID
 0

	)

281 
	#NVS_ALARM_OUT1_VALID
 1

	)

282 
	#NVS_ALARM_OUT2
 
S3C2410_GPG13


	)

283 
	#NVS_ALARM_OUT2_FN
 
S3C2410_GPG13_OUTP


	)

284 
	#NVS_ALARM_OUT2_UNFN
 
S3C2410_GPG13_INP


	)

285 
	#NVS_ALARM_OUT2_INVALID
 0

	)

286 
	#NVS_ALARM_OUT2_VALID
 1

	)

288 #ifdef 
ARM_S3C2440_DVR_PLATFORM


289 
	#IRQ_FPGA_PIN
 
S3C2410_GPF0


	)

290 
	#IRQ_FPGA_PIN_FN
 
S3C2410_GPF0_EINT0


	)

291 
	#UNIRQ_FPGA_PIN_FN
 
S3C2410_GPF0_INP


	)

292 
	#IRQ_FPGA
 
IRQ_EINT0


	)

293 
	#IRQ_IDE_PIN
 
S3C2410_GPF6


	)

294 
	#IRQ_IDE_PIN_FN
 
S3C2410_GPF6_EINT6


	)

295 
	#UNIRQ_IDE_PIN_FN
 
S3C2410_GPF6_INP


	)

296 
	#IRQ_IDE
 
IRQ_EINT6


	)

297 
	#IRQ_DM9K_PIN
 
S3C2410_GPF4


	)

298 
	#IRQ_DM9K_PIN_FN
 
S3C2410_GPF4_EINT4


	)

299 
	#UNIRQ_DM9K_PIN_FN
 
S3C2410_GPF4_INP


	)

300 
	#IRQ_DM9K
 
IRQ_EINT4


	)

301 
	#FPGA_RESET_PIN
 
S3C2410_GPG0


	)

302 
	#FPGA_RESET_PIN_FN
 
S3C2410_GPG0_OUTP


	)

304 #ifdef 
ARM_S3C2440_ANALOG_VGA_DVR


305 
	#IRQ_FPGA_PIN
 
S3C2410_GPF1


	)

306 
	#IRQ_FPGA_PIN_FN
 
S3C2410_GPF1_EINT1


	)

307 
	#UNIRQ_FPGA_PIN_FN
 
S3C2410_GPF1_INP


	)

308 
	#IRQ_FPGA
 
IRQ_EINT1


	)

309 
	#IRQ_IDE_PIN
 
S3C2410_GPF6


	)

310 
	#IRQ_IDE_PIN_FN
 
S3C2410_GPF6_EINT6


	)

311 
	#UNIRQ_IDE_PIN_FN
 
S3C2410_GPF6_INP


	)

312 
	#IRQ_IDE
 
IRQ_EINT6


	)

313 
	#IRQ_DM9K_PIN
 
S3C2410_GPF2


	)

314 
	#IRQ_DM9K_PIN_FN
 
S3C2410_GPF2_EINT2


	)

315 
	#UNIRQ_DM9K_PIN_FN
 
S3C2410_GPF2_INP


	)

316 
	#IRQ_DM9K
 
IRQ_EINT2


	)

317 
	#FPGA_RESET_PIN
 
S3C2410_GPE8


	)

318 
	#FPGA_RESET_PIN_FN
 
S3C2410_GPE8_OUTP


	)

321 
	#DMA_AUDIO_CHAN
 (1)

	)

322 
	#IRQ_DMA_AUDIO
 
IRQ_DMA1


	)

324 
	#DMA_IDE_CHAN
 (0)

	)

325 
	#IRQ_IDE_DMA
 
IRQ_DMA0


	)

326 
	#IDE_DEMAND_DMA_CON_AUTO
 (
S3C2410_DCON_SYNC_HCLK
|
S3C2410_DCON_INTREQ
|
S3C2410_DCON_WHOLE_SERVICE
|
S3C2410_DCON_CH0_XDREQ0
|
S3C2410_DCON_HWTRIG
|
S3C2410_DCON_HALFWORD
)

	)

327 
	#IDE_DEMAND_DMA_CON_NOAUTO
 (
S3C2410_DCON_SYNC_HCLK
|
S3C2410_DCON_INTREQ
|
S3C2410_DCON_WHOLE_SERVICE
|
S3C2410_DCON_CH0_XDREQ0
|
S3C2410_DCON_HWTRIG
|
S3C2410_DCON_NORELOAD
|
S3C2410_DCON_HALFWORD
)

	)

328 
	#IDE_HANDSHAKE_DMA_CON_AUTO
 (
S3C2410_DCON_HANDSHAKE
|
S3C2410_DCON_SYNC_HCLK
|
S3C2410_DCON_INTREQ
|
S3C2410_DCON_WHOLE_SERVICE
|
S3C2410_DCON_CH0_XDREQ0
|
S3C2410_DCON_HWTRIG
|
S3C2410_DCON_HALFWORD
)

	)

329 
	#IDE_HANDSHAKE_DMA_CON_NOAUTO
 (
S3C2410_DCON_HANDSHAKE
|
S3C2410_DCON_SYNC_HCLK
|
S3C2410_DCON_INTREQ
|
S3C2410_DCON_WHOLE_SERVICE
|
S3C2410_DCON_CH0_XDREQ0
|
S3C2410_DCON_HWTRIG
|
S3C2410_DCON_NORELOAD
|
S3C2410_DCON_HALFWORD
)

	)

332 #ifdef 
POWERPC_PLATFORM


333 
	#TEST_REG
 (0x00)

	)

334 
	#TW2815_INT
 (0x01)

	)

335 
	#ALM_IN_HIGH
 (0x02)

	)

336 
	#ALM_IN_LOW
 (0x03)

	)

337 
	#FPGA_INT_ID
 (0x04)

	)

338 
	#FPGA_CHIP_ALL_MASK
 (0x1f)

	)

339 
	#FPGA_CHIP_1_INT_ID
 (0x10)

	)

340 
	#FPGA_CHIP_2_INT_ID
 (0x08)

	)

341 
	#FPGA_CHIP_3_INT_ID
 (0x04)

	)

342 
	#FPGA_CHIP_4_INT_ID
 (0x02)

	)

343 
	#FPGA_CHIP_5_INT_ID
 (0x01)

	)

344 
	#RESET_REG
 (0x08)

	)

345 
	#RESET_REG_TW2835
 (0x80)

	)

346 
	#RESET_REG_VGA
 (0x40)

	)

347 
	#RESET_REG_FPGA_CHIP_5
 (0x20)

	)

348 
	#RESET_REG_FPGA_CHIP_4
 (0x10)

	)

349 
	#RESET_REG_FPGA_CHIP_3
 (0x08)

	)

350 
	#RESET_REG_FPGA_CHIP_2
 (0x04)

	)

351 
	#RESET_REG_FPGA_CHIP_1
 (0x02)

	)

352 
	#CPLD_BASE_ADDR
 (0x50000000)

	)

353 
	#CPLD_SECTION_LEN
 (0x100000)

	)

355 
	#FPGA0_BASE_ADDR
 (0x60000000)

	)

356 
	#FPGA1_BASE_ADDR
 (0x60400000)

	)

357 
	#FPGA2_BASE_ADDR
 (0x60800000)

	)

358 
	#FPGA3_BASE_ADDR
 (0x60c00000)

	)

359 
	#FPGA4_BASE_ADDR
 (0x61000000)

	)

361 
	#FPGA0_SYNC_BASE_ADDR
 (0x70000000)

	)

362 
	#FPGA1_SYNC_BASE_ADDR
 (0x70400000)

	)

363 
	#FPGA2_SYNC_BASE_ADDR
 (0x70800000)

	)

364 
	#FPGA3_SYNC_BASE_ADDR
 (0x70c00000)

	)

365 
	#FPGA4_SYNC_BASE_ADDR
 (0x71000000)

	)

366 
	#FPGA_SYNC_SECTION_LEN
 (0x100000)

	)

368 #ifde‡
POWERPC_PCI_PLATFORM


369 
	#IRQ_FPGA
 (0x13)

	)

371 
	#IRQ_FPGA
 (0x30)

	)

373 
	#IRQT_LOW
 (
IRQ_TYPE_LEVEL_LOW
)

	)

374 
	#IRQ_SYS_INTERNAL
 (0x41)

	)

377 
	#ENCODE_4_D1
 (0x00000000)

	)

378 
	#ENCODE_16_CIF
 (0x00000001)

	)

379 
	#ENCODE_WORK_MODE_MASK
 (0x00000003)

	)

383 
u8
 
fú°_devi˚_numbî
;

384 
u32
 
video_ícode_w‹k_mode
;

385 
u32
 
ícode_ªg_4
;

386 
u32
 
Âga_sync_ba£_addr
;

387 
u32
 
Âga_sync_£˘i⁄_Àn
;

388 
u32
 
Âga_async_ba£_addr
;

389 
u32
 
Âga_async_£˘i⁄_Àn
;

390 
u32
 
ddr_m≠_mode
;

391 }
	tDVMNVS_CHIP_VIDEO_ENCODE_CAPABILITY
;

393 
	stw5864_öãºu±_c⁄åﬁ_sy°em_öãrÁ˚_›î©i⁄
{

394 (*
öô
)(
tw5864_öãºu±_c⁄åﬁ_t
 *, 
dvm_chù_t
 *
chù
);

395 (*
íabÀ_öãºu±_sour˚
)(
tw5864_öãºu±_c⁄åﬁ_t
 *, 
u32
 
sour˚
);

396 (*
dißbÀ_öãºu±_sour˚
)(
tw5864_öãºu±_c⁄åﬁ_t
 *, 
u32
 
sour˚
);

397 (*
£t_öãºu±_sour˚_edge_åiggî
)(
tw5864_öãºu±_c⁄åﬁ_t
 *, 
u32
 
sour˚
);

398 (*
£t_öãºu±_sour˚_Àvñ_åiggî
)(
tw5864_öãºu±_c⁄åﬁ_t
 *, 
u32
 
sour˚
);

401 
	stw5864_öãºu±_c⁄åﬁ_h¨dw¨e_öãrÁ˚_›î©i⁄
{

402 (*
gë_öãºu±_°©us
)(
tw5864_öãºu±_c⁄åﬁ_t
 *);

403 (*
ack_öãºu±
)(
tw5864_öãºu±_c⁄åﬁ_t
 *, 
u32
 
sour˚
);

406 
	schù_úq_a˘i⁄
{

407 
úq_h™dÀr_t
 
h™dÀr
;

408 
úq
;

409 
Êags
;

410 c⁄° *
«me
;

411 *
c⁄ãxt
;

412 
chù_úq_a˘i⁄
 *
√xt
;

415 
	schù_úq_desc
{

416 
u32
 
úq
;

417 
u32
 
úq_cou¡
;

418 
u32
 
úqs_unh™dÀd
;

419 
•ölock_t
 
lock
;

420 
©omic_t
 
dïth
;

421 
chù_úq_a˘i⁄
 
a˘i⁄
;

422 c⁄° *
«me
;

427 
	stw5864_öãºu±_c⁄åﬁ
{

428 
•ölock_t
 
lock
;

429 
__u32
 
öãºu±_sour˚
;

430 
__u32
 
öãºu±_sour˚_åiggî_mode
;

431 
__u32
 
öãºu±_sour˚_as£π
;

432 
__u32
 
chù_öãºu±_ouçut_as£π
;

433 
__u32
 
chù_öãºu±_°©us
;

435 
chù_úq_desc
 chù_úq_desc[
CHIP_IRQS_NR
];

437 
chù_úq
;

438 
dvm_chù_t
 *
chù
;

440 
tw5864_öãºu±_c⁄åﬁ_sy°em_öãrÁ˚_›î©i⁄
 *
sy°em_›
;

441 
tw5864_öãºu±_c⁄åﬁ_h¨dw¨e_öãrÁ˚_›î©i⁄
 *
h¨dw¨e_›
;

444 
	schù_io_›î©i⁄
{

445 
u32
 (*
chù_ªad32
)(
dvm_chù_t
 *, u32 
off£t
);

446 
u16
 (*
chù_ªad16
)(
dvm_chù_t
 *, 
u32
 
off£t
);

447 
u8
 (*
chù_ªad8
)(
dvm_chù_t
 *, 
u32
 
off£t
);

448 (*
chù_ªad_block
)(
dvm_chù_t
 *, 
u32
 
off£t
, 
Àn
, u32 *
de°
);

449 (*
chù_wrôe32
)(
dvm_chù_t
 *, 
u32
 
off£t
, u32 
vÆue
);

450 (*
chù_wrôe16
)(
dvm_chù_t
 *, 
u32
 
off£t
, 
u16
 
vÆue
);

451 (*
chù_wrôe8
)(
dvm_chù_t
 *, 
u32
 
off£t
, 
u8
 
vÆue
);

452 (*
chù_wrôe_block
)(
dvm_chù_t
 *, 
u32
 
off£t
, 
Àn
, u32 *
§c
);

455 
	#to_gë_chù_wôh_chù_d¥am_c⁄åﬁÀr
(
node
Ë
	`c⁄èöî_of
“ode, 
dvm_chù_t
, 
chù_d¥am_c⁄åﬁÀr
)

	)

456 
	#to_gë_chù_wôh_chù_¸oss_bus
(
node
Ë
	`c⁄èöî_of
“ode, 
dvm_chù_t
, 
chù_vd_¸oss_bus
)

	)

457 
	#to_gë_chù_wôh_chù_vj_bus
(
node
Ë
	`c⁄èöî_of
“ode, 
dvm_chù_t
, 
chù_vj_bus
)

	)

458 
	#to_gë_chù_wôh_chù_drivî
(
node
Ë
	`c⁄èöî_of
“ode, 
dvm_chù_t
, 
chù_drivî
)

	)

459 
	#to_gë_chù_wôh_chù_bus
(
node
Ë
	`c⁄èöî_of
“ode, 
dvm_chù_t
, 
tw5864_chù_bus
)

	)

460 
	#to_gë_chù_wôh_chù_ícode_£rvi˚_queue
(
node
Ë
	`c⁄èöî_of
“ode, 
dvm_chù_t
, 
chù_ícode_£rvi˚_queue
)

	)

461 
	#CHIP_NAME_LEN
 (32)

	)

462 
	sdvm4000i_chù


464 
«me
[
CHIP_NAME_LEN
];

465 
bus_id
;

466 
chù_id
;

467 
fú°_devi˚_id
;

468 
©omic_t
 
›í_ch™_numbî
;

469 
DVMNVS_CHIP_VIDEO_ENCODE_CAPABILITY
 *
video_ícode_ˇp
;

471 
u32
 
sys_˛ock
;

473 
ªsour˚
 *resource;

474 
__iomem
 *
ªgs
;

475 
∑_ªgs
;

476 
ªsour˚
 *
sync_ªsour˚
;

477 
__iomem
 *
sync_ªgs
;

478 
∑_sync_ªgs
;

479 
tw5864_öãºu±_c⁄åﬁ_t
 
tw5864_öt_c⁄åﬁ
;

481 
•ölock_t
 
lock
;

482 
tw_h264_logic_ícode_ch™_t
 *
cuº_h264_ícode_ch™
;

483 
vlc_pög_p⁄g_ödex
;

484 (*
ªgi°î_cuº_h264_ícode_ch™
)(
dvm_chù_t
 *, 
tw_h264_logic_ícode_ch™_t
 *);

485 (*
uƒegi°î_cuº_h264_ícode_ch™
)(
dvm_chù_t
 *, 
tw_h264_logic_ícode_ch™_t
 *);

487 (*
ªgi°î_timî
)(
dvm_chù_t
 *, 
úq_h™dÀr_t
);

488 (*
íabÀ_timî
)(
dvm_chù_t
 *);

489 (*
dißbÀ_timî
)(
dvm_chù_t
 *);

490 (*
uƒegi°î_timî
)(
dvm_chù_t
 *);

492 (*
chù_›í
)(
dvm_chù_t
 *);

493 (*
chù_˛o£
)(
dvm_chù_t
 *);

494 (*
chù_£t_övÆid
)(
dvm_chù_t
 *);

495 (*
chù_£t_vÆid
)(
dvm_chù_t
 *);

496 (*
chù_ª£t
)(
dvm_chù_t
 *);

497 
chù_io_›î©i⁄
 *
io_›
;

498 
chù_pﬁlög_timeid
;

499 (*
add_chù_pﬁlög_èsk
)(
dvm_chù_t
 *);

500 (*
dñëe_chù_pﬁlög_èsk
)(
dvm_chù_t
 *);

502 
tw_chù_bus_t
 
tw5864_chù_bus
;

503 
chù_audio_t
 
chù_audio
;

504 
d¥am_c⁄åﬁ_t
 
chù_d¥am_c⁄åﬁÀr
;

505 
tw5864_vd_¸oss_bus_t
 
chù_vd_¸oss_bus
;

506 
tw5864_vj_bus_t
 
chù_vj_bus
;

507 
chù_ícode_ch™_£rvi˚_queue_t
 
chù_ícode_£rvi˚_queue
;

509 
chù_drivî_t
 *
chù_drivî
;

510 
tw_chù_ai_drivî_t
 *
chù_ai_drivî
;

511 
tw_chù_vi_drivî_t
 *
chù_vi_drivî
;

512 
tw_di•œy_drivî_t
 *
di•œy_drivî
;

514 
tw_audio_drivî_t
 
audio_ch™_drivî
[
TW_AUDIO_CHAN_NUMBER
];

515 
tw_h264_logic_ícode_ch™_t
 
h264_ma°î_ícode_logic_ch™
[
TW5864_PHY_VD_CHAN_NUMBER
];

516 
tw_h264_logic_ícode_ch™_t
 
h264_sub_ícode_logic_ch™
[
TW5864_PHY_VD_CHAN_NUMBER
];

517 #ifde‡ 
MJPEG_MODULE


518 
tw_j≥g_logic_ícode_ch™_t
 
j≥g_ícode_ch™
[
TW5864_PHY_VJ_CHAN_NUMBER
];

520 
tw5864_avSync_dev_t
 
av_avSync_devi˚_ch™
[
TW5864_PHY_VD_CHAN_NUMBER
];

523 
¥oc_dú_íåy
 *
¥oc_íåy
;

524 
tw_¥oc_ªgi°î_s
 
chù_¥oc
, 
h264_¥oc
, 
j≥g_¥oc
, 
audio_¥oc
;

527 
	sFPGA_DDR_BURST_REG
{

528 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

529 
u32
 
ddr_›_ba£_addr
 : 20,

530 
ª£rved
 : 4,

531 
ddr_Àn
 : 4,

532 
ddr_ªad_°©us
 : 1,

533 
ddr_wrôe_°©us
 : 1,

534 
ddr_ªad
 : 1,

535 
ddr_wrôe
 : 1;

536 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

537 
u32
 
ddr_wrôe
 : 1,

538 
ddr_ªad
 : 1,

539 
ddr_wrôe_°©us
 : 1,

540 
ddr_ªad_°©us
 : 1,

541 
ddr_Àn
 : 4,

542 
ª£rved
 : 4,

543 
ddr_›_ba£_addr
 : 20;

548 
FPGA_DDR_BURST_REG
 
ªg
;

549 
u32
 
vÆue
;

550 }
	tFPGA_DDR_BURST_CONTROLLER
;

552 
ölöe
 
chù_úq_desc
 *
chù_úq_to_desc
(
dvm_chù_t
 *
chù
, 
úq
)

554 
tw5864_öãºu±_c⁄åﬁ_t
 *
úq_˘æ
;

556 if(
chù
){

557 
úq_˘æ
 = &
chù
->
tw5864_öt_c⁄åﬁ
;

558  (
úq
 < 
CHIP_IRQS_NR
Ë? 
úq_˘æ
->
chù_úq_desc
 + irq : 
NULL
;

561  
NULL
;

565 
gë_tw5864_avSync_devi˚
(
tw5864_avSync_dev_t
 **
±r_devi˚
, 
öode_id
);

566 
dißbÀ_timî_öt
();

567 
íabÀ_timî_öt
();

568 
dißbÀ_chù_öt
(
dvm_chù_t
 *
chù
);

569 
íabÀ_chù_öt
(
dvm_chù_t
 *
chù
);

571 
chù_ªque°_úq
(
dvm_chù_t
 *
chù
, 
u32
 
úq
, 
úq_h™dÀr_t
 
h™dÀr
, c⁄° *
dev«me
, *
c⁄ãxt
);

572 
chù_‰ì_úq
(
dvm_chù_t
 *
chù
, 
u32
 
úq
, *
c⁄ãxt
);

573 
chù_íabÀ_úq
(
dvm_chù_t
 *
chù
, 
u32
 
úq
);

574 
chù_dißbÀ_úq
(
dvm_chù_t
 *
chù
, 
u32
 
úq
);

577 
mpb_wrôe
(
dvm_chù_t
 *
chù
, 
u32
 
addr
,u32 
d©a
);

578 
u32
 
mpb_ªad
(
dvm_chù_t
 *
chù
, u32 
addr
);

579 
pci_i2c_ªad
(
dvm_chù_t
 *
chù
, 
u8
 
devid
, u8 
dev‚
, u8 *
buf
);

580 
pci_i2c_wrôe
(
dvm_chù_t
 *
chù
, 
u8
 
devid
, u8 
dev‚
, u8 
buf
);

581 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_audio_buf.h

1 #i‚def 
TW_AUDIO_BUF_H


2 
	#TW_AUDIO_BUF_H


	)

4 #ifde‡
__˝lu•lus


9 
	#AUDIO_CHAN_BUF_POOL_LEN
 (0x10000)

10 

	)

11 
	#DñèT_8K_16BIT_1ms_LEN
 (16)

	)

12 
	#DñèT_16K_16BIT_1ms_LEN
 (32)

	)

13 
	#DñèT_8K_8BIT_1ms_LEN
 (8)

	)

14 
	#DñèT_16K_8BIT_1ms_LEN
 (16)

	)

16 
	stw_audio_ch™_buf_poﬁ_›î©i⁄
{

17 (*
¸óã
)(
tw_audio_ch™_buf_poﬁ_t
 *, );

18 (*
ªÀa£
)(
tw_audio_ch™_buf_poﬁ_t
 *);

20 (*
gë_audio_£˘i⁄_tcb
)(
tw_audio_ch™_buf_poﬁ_t
 *, 
tw_audio_∑ckë_£˘i⁄_t
 **);

21 (*
åy_gë_audio_£˘i⁄_tcb
)(
tw_audio_ch™_buf_poﬁ_t
 *, 
tw_audio_∑ckë_£˘i⁄_t
 **);

22 (*
put_audio_£˘i⁄_tcb
)(
tw_audio_ch™_buf_poﬁ_t
 *, 
tw_audio_∑ckë_£˘i⁄_t
 *);

23 (*
gë_audio_£˘i⁄_tcb_poﬁ_íåy_numbî
)(
tw_audio_ch™_buf_poﬁ_t
 *);

26 
	stw_audio_ch™_buf_poﬁ
{

27 
audio_buf„r_íåy_‹dî
;

28 
u8
 *
audio_buf„r_ˇche
;

30 
u32
 
audio_£˘i⁄_tcb_numbî
;

31 
tcb_node_poﬁ_t
 
poﬁ_node
;

32 
tw_audio_∑ckë_£˘i⁄_t
 *
audio_£˘i⁄_tcb_ˇche
;

34 
tw_audio_ch™_buf_poﬁ_›î©i⁄
 *
›
;

37 
	stw_audio_∑ckë_£˘i⁄_›î©i⁄
{

38 (*
öô
)(
tw_audio_∑ckë_£˘i⁄_t
 *
audio_∑ckë_£˘i⁄
, 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
, 
id
);

39 (*
ª£t
)(
tw_audio_∑ckë_£˘i⁄_t
 *
audio_∑ckë_£˘i⁄
);

40 (*
ªÀa£
)(
tw_audio_∑ckë_£˘i⁄_t
 **
±r_audio_∑ckë_£˘i⁄
, 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
);

41 (*
ª„ªn˚
)(
tw_audio_∑ckë_£˘i⁄_t
 *
§c_audio_∑ckë_£˘i⁄
,Åw_audio_∑ckë_£˘i⁄_à**
de°_audio_∑ckë_£˘i⁄
);

42 (*
dma_m≠
)(
tw_audio_∑ckë_£˘i⁄_t
 *
audio_∑ckë_£˘i⁄
, 
dma_d©a_dúe˘i⁄
 
dúe˘i⁄
);

43 (*
dma_unm≠
)(
tw_audio_∑ckë_£˘i⁄_t
 *
audio_∑ckë_£˘i⁄
, 
dma_d©a_dúe˘i⁄
 
dúe˘i⁄
);

44 
size_t
 (*
submô
)(
tw_audio_∑ckë_£˘i⁄_t
 *, 
__u£r
 *, size_à, 
loff_t
 *, , 
tw_audio_ch™_buf_poﬁ_t
 *);

47 
	#to_gë_tw_audio_∑ckë_£˘i⁄
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_audio_∑ckë_£˘i⁄_t
, 
∑ckë_node
)

	)

48 
	stw_audio_∑ckë_£˘i⁄
{

49 
©omic_t
 
ªf_cou¡
;

50 
tcb_node_t
 
∑ckë_node
;

51 
•ölock_t
 
lock
;

53 
id
;

54 
£˘i⁄_size
;

55 
∑ylﬂd_Àn
;

56 
ßm∂e_øã
;

57 
ty≥
;

58 
bô_wide
;

59 
c⁄sumî_off£t
;

60 
u32
 
‰ameSîül
;

61 
__u32
 
time°amp
;

62 
tw_audio_des¸ùt‹_t
 
des¸ùt‹
;

64 
u8
 *
d©a
;

65 
dma_addr_t
 
dma_addr
;

67 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
;

68 
tw_audio_∑ckë_£˘i⁄_›î©i⁄
 *
›
;

71 
	stw_audio_∑ckë_queue_›î©i⁄
{

72 (*
gë
)(
tw_audio_∑ckë_queue_t
 *, 
tw_audio_∑ckë_£˘i⁄_t
 **);

73 (*
åy_gë
)(
tw_audio_∑ckë_queue_t
 *, 
tw_audio_∑ckë_£˘i⁄_t
 **);

74 (*
gë_èûî
)(
tw_audio_∑ckë_queue_t
 *, 
tw_audio_∑ckë_£˘i⁄_t
 **);

75 (*
åy_gë_èûî
)(
tw_audio_∑ckë_queue_t
 *, 
tw_audio_∑ckë_£˘i⁄_t
 **);

76 (*
put
)(
tw_audio_∑ckë_queue_t
 *, 
tw_audio_∑ckë_£˘i⁄_t
 *);

77 (*
put_hódî
)(
tw_audio_∑ckë_queue_t
 *, 
tw_audio_∑ckë_£˘i⁄_t
 *);

79 (*
gë_cuº_¥odu˚r_‰om_poﬁ
)(
tw_audio_∑ckë_queue_t
 *, 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
);

80 (*
åy_gë_cuº_¥odu˚r_‰om_poﬁ
)(
tw_audio_∑ckë_queue_t
 *, 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
);

81 (*
put_cuº_¥odu˚r_öto_queue
)(
tw_audio_∑ckë_queue_t
 *);

82 (*
ªÀa£_cuº_¥odu˚r
)(
tw_audio_∑ckë_queue_t
 *, 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
);

83 (*
gë_cuº_c⁄sumî_‰om_queue
)(
tw_audio_∑ckë_queue_t
 *);

84 (*
åy_gë_cuº_c⁄sumî_‰om_queue
)(
tw_audio_∑ckë_queue_t
 *);

85 (*
ªÀa£_cuº_c⁄sumî
)(
tw_audio_∑ckë_queue_t
 *, 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
);

87 (*
gë_cuº_queue_íåy_numbî
)(
tw_audio_∑ckë_queue_t
 *);

88 (*
ªÀa£
)(
tw_audio_∑ckë_queue_t
 *, 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
);

89 (*
öô
)(
tw_audio_∑ckë_queue_t
 *);

92 
	stw_audio_∑ckë_queue
{

93 
u32
 
°¨t_time°amp
, 
tŸÆ_duøti⁄
;

94 
tcb_node_queue_t
 
queue_node
;

95 
tw_audio_∑ckë_£˘i⁄_t
 *
cuº_c⁄sumî
;

96 
tw_audio_∑ckë_£˘i⁄_t
 *
cuº_¥odu˚r
;

97 
•ölock_t
 
lock
;

99 
tw_audio_∑ckë_queue_›î©i⁄
 *
›
;

103 
öô_tw_audio_∑ckë_queue
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
);

104 
ªmove_tw_audio_∑ckë_queue
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
, 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
);

105 
öô_audio_ch™_buf_poﬁ
(
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
);

106 
ªmove_audio_ch™_buf_poﬁ
(
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
);

108 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_audio_chan_driver.h

1 #i‚def 
TW_AUDIO_CHAN_DRIVER_H


2 
	#TW_AUDIO_CHAN_DRIVER_H


	)

4 #ifde‡
__˝lu•lus


9 
	saudio_£˘i⁄_±r_öfo_›î©i⁄
{

10 (*
öô
)(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
);

11 (*
upd©e_hódî_±r
)(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
, 
chù_audio_t
 *
chù_audio
);

12 (*
upd©e_èûî_±r
)(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
, 
chù_audio_t
 *
chù_audio
);

13 (*
queue_ˇ∑côy
)(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
);

14 (*
upd©e_cuº_£˘i⁄_off£t
)(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
, 
chù_audio_t
 *
chù_audio
);

15 (*
gë_upd©e_föish_id
)(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
);

18 
	saudio_£˘i⁄_±r_öfo
{

19 
audio_£˘i⁄_queue_hódî_±r
;

20 
audio_£˘i⁄_queue_hódî_±r_ext_Êag
;

21 
œ°_audio_£˘i⁄_queue_hódî_±r_ext_Êag
;

22 
audio_£˘i⁄_queue_èûî_±r
;

23 
audio_£˘i⁄_queue_èûî_±r_ext_Êag
;

24 
£˘i⁄_queue_size
;

25 
disˇrd_numbî
;

26 
∑ge_id
;

27 
chù_a_‹_b
;

28 
ddr_íd_addr
;

30 
audio_£˘i⁄_±r_öfo_›î©i⁄
 *
›
;

33 
	eaudio_drivî_ty≥
{

34 
TW_AUDIO_ENCODE
 = 0,

35 
TW_AUDIO_DECODE


38 
	#to_tw_audio_ch™_drivî_wôh_audio_ed
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_audio_drivî_t
, 
audio_ed
)

	)

39 
	#to_gë_audio_ch™_drivî_wôh_audio_£˘i⁄
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_audio_drivî_t
, 
audio_£˘i⁄_∑øm
)

	)

40 
	stw_audio_ch™_drivî
 {

41 
tw_time°amp_t
 
time°amp
;

42 
tw_audio_∑ckë_queue_t
 
audio_∑ckë_queue
;

43 
tw_audio_ch™_buf_poﬁ_t
 
audio_buf_poﬁ
;

44 
audio_£˘i⁄_±r_öfo_t
 
audio_£˘i⁄_∑øm
;

46 
©omic_t
 
íabÀ
;

47 
audio_drivî_ty≥
 
ty≥
;

48 
ed_tcb_t
 
audio_ed
;

49 
audio_logic_ch™_id
;

50 
©omic_t
 
audio_sync_disˇrd_numbî
;

51 
u32
 
i_‰ame_£rül
;

52 
u32
 
disˇrd_numbî
;

53 
©omic_t
 
›íed_Êag
;

54 
d¥am_ªque°_t
 
audio_bô°ªam_ªq
;

55 
d¥am_∑ge_node_t
 *
d¥am_∑ge
;

56 
chù_audio_t
 *
chù_audio
;

57 
tw5864_avSync_dev_t
 *
tw_devi˚_ch™
;

60 
ª£t_tw5864_audio_ícode_ch™
(
tw_audio_drivî_t
 *
audio_drivî
);

61 
öô_tw5864_audio_ícode_ch™
(
tw_audio_drivî_t
 *
audio_drivî
, 
chù_audio_t
 *
chù_audio
, 
bus_id
, 
chù_id
, 
group_ch™_id
);

62 
ªmove_tw5864_audio_ícode_ch™
(
tw_audio_drivî_t
 *
audio_drivî
);

63 
ª£t_tw5864_audio_decode_ch™
(
tw_audio_drivî_t
 *
audio_drivî
);

64 
öô_tw5864_audio_decode_ch™
(
tw_audio_drivî_t
 *
audio_drivî
, 
chù_audio_t
 *
chù_audio
, 
bus_id
, 
chù_id
, 
group_ch™_id
);

65 
ªmove_tw5864_audio_decode_ch™
(
tw_audio_drivî_t
 *
audio_drivî
);

67 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_audio_iop.h

1 #i‚def 
TW_AUDIO_IOP


2 
	#TW_AUDIO_IOP


	)

4 #ifde‡
__˝lu•lus


9 
	#TW_AUDIO_BUF_PAGE_ID
 (14)

	)

10 
	#TW_AUDIO_BUF_OF_DDR_ID
 (
DDR_CHIP_B
)

	)

11 
	#TW_PCM_AUDIO_LEN
 (498)

	)

12 
	#TW_ADPCM_AUDIO_LEN
 (384)

	)

14 
	#TW_AUDIO_IN_CHAN_NUMBER
 (17)

	)

15 
	#TW_AUDIO_OUT_CHAN_NUMBER
 (2)

	)

16 
	#TW_AUDIO_CHAN_NUMBER
 (
TW_AUDIO_IN_CHAN_NUMBER
+
TW_AUDIO_OUT_CHAN_NUMBER
)

	)

18 
	#AUDIO_SECTION_SIZE
 (0x200)

	)

19 
	#AUDIO_OUT_SECTION_VALID_SIZE
 (0x180)

	)

21 
	#INVALID_TW_AUDIO_SECTION_ID
 (-1)

	)

22 
	#AUDIO_IN_PCM_CHAN_SECTION_NUMBER
 (6)

	)

23 
	#AUDIO_IN_ADPCM_CHAN_SECTION_NUMBER
 (4)

	)

24 
	#AUDIO_OUT_CHAN_SECTION_NUMBER
 (8)

	)

26 
	#AUDIO_ENABLE
 (0x0001)

	)

27 
	#AUDIO_DISABLE
 (0x0000)

	)

28 
	#AUDIO_MUTE_ENABLE
 (0x0001)

	)

29 
	#AUDIO_MUTE_DISABLE
 (0x0000)

	)

31 
	saudio_¥›îty_upd©e_›î©i⁄
 {

32 (*
öô
)(
tw_audio_∑øm_t
 *, 
tw_audio_c⁄fig_des¸ùt‹_t
 *);

33 (*
upd©e_ßm∂e_øã
)(
tw_audio_∑øm_t
 *, );

34 (*
gë_ßm∂e_øã
)(
tw_audio_∑øm_t
 *);

35 (*
upd©e_bô_wide
)(
tw_audio_∑øm_t
 *, );

36 (*
gë_bô_wide
)(
tw_audio_∑øm_t
 *);

37 (*
upd©e_ty≥
)(
tw_audio_∑øm_t
 *, );

38 (*
gë_ty≥
)(
tw_audio_∑øm_t
 *);

41 
	saudio_c⁄fig_des¸ùt‹
{

42 
ty≥
;

43 
ßm∂e_øã
;

44 
bô_wide
;

45 }
STRUCT_PACKET_ALIGN
(1);

47 
	stw_audio_∑øm
 {

48 
tw_audio_c⁄fig_des¸ùt‹_t
 
¥›îty
;

49 
audio_¥›îty_upd©e_›î©i⁄
 *
›
;

52 
	stw_audio_£˘i⁄_des¸ùt‹_›î©i⁄
 {

53 (*
öô_audio_des¸ùt‹
)(
tw_audio_des¸ùt‹_t
 *, *);

54 
u32
 (*
gë_audio_des¸ùt‹_time°amp
)(
tw_audio_des¸ùt‹_t
 *);

55 (*
£t_audio_des¸ùt‹_time°amp
)(
tw_audio_des¸ùt‹_t
 *, 
u32
);

56 (*
gë_audio_des¸ùt‹_ßm∂e_øã
)(
tw_audio_des¸ùt‹_t
 *);

57 (*
£t_audio_des¸ùt‹_ßm∂e_øã
)(
tw_audio_des¸ùt‹_t
 *, );

58 (*
gë_audio_des¸ùt‹_ty≥
)(
tw_audio_des¸ùt‹_t
 *);

59 (*
£t_audio_des¸ùt‹_ty≥
)(
tw_audio_des¸ùt‹_t
 *, );

60 (*
gë_audio_des¸ùt‹_bô_wide
)(
tw_audio_des¸ùt‹_t
 *);

61 (*
£t_audio_des¸ùt‹_bô_wide
)(
tw_audio_des¸ùt‹_t
 *, );

62 
u32
 (*
gë_audio_des¸ùt‹_vÆid_Àn
)(
tw_audio_des¸ùt‹_t
 *);

63 (*
£t_audio_des¸ùt‹_vÆid_Àn
)(
tw_audio_des¸ùt‹_t
 *, 
u32
);

66 
	saudio_£˘i⁄_des¸ùt‹
 {

67 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

68 
u32
 
time°amp
:16;

69 
u32
 
ßm∂e_øã
:2;

70 
u32
 
ty≥
:4;

71 
u32
 
bô_wide
:1;

72 
u32
 
vÆid_Àn
:9;

73 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

74 
u32
 
vÆid_Àn
:9;

75 
u32
 
bô_wide
:1;

76 
u32
 
ty≥
:4;

77 
u32
 
ßm∂e_øã
:2;

78 
u32
 
time°amp
:16;

82 }
STRUCT_PACKET_ALIGN
(1);

84 
	stw_audio_£˘i⁄_des¸ùt‹
 {

85 
audio_£˘i⁄_des¸ùt‹_t
 *
des¸ùt‹
;

86 
tw_audio_£˘i⁄_des¸ùt‹_›î©i⁄
 *
›
;

89 
öô_tw_audio_des¸ùt‹
(
tw_audio_des¸ùt‹_t
 *, *);

90 
öô_audio_ícode_¥›îty
(
tw_audio_∑øm_t
 *, 
tw_audio_c⁄fig_des¸ùt‹_t
 *);

91 
öô_audio_decode_¥›îty
(
tw_audio_∑øm_t
 *, 
tw_audio_c⁄fig_des¸ùt‹_t
 *);

93 
	saudio_íabÀ_c⁄åﬁ_ªg
 {

94 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

95 
u32
 
	gadpcm_decode_íabÀ
 : 1;

96 
u32
 
	gpcm_ícode_íabÀ
 : 1;

97 
u32
 
	gadpcm_ícode_íabÀ
 : 1;

98 
u32
 
	gª£rve
 : 29;

99 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

100 
u32
 
	gª£rve
 : 29;

101 
u32
 
	gadpcm_ícode_íabÀ
 : 1;

102 
u32
 
	gpcm_ícode_íabÀ
 : 1;

103 
u32
 
	gadpcm_decode_íabÀ
 : 1;

107 }
STRUCT_PACKET_ALIGN
(1);

109 
	uaudio_íabÀ_c⁄åﬁ_uni⁄
{

110 
audio_íabÀ_c⁄åﬁ_ªg
 
	gbô_vÆue
;

111 
u32
 
	gvÆue
;

112 }
	tSTRUCT_PACKET_ALIGN
(1Ë
	taudio_íabÀ_c⁄åﬁ_ªg_vÆue
;

114 
	saudio_pcm_ícode_c⁄åﬁ_ªg
 {

115 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

116 
u32
 
	gaudio_ch™0_í
 : 1;

117 
u32
 
	gaudio_ch™1_í
 : 1;

118 
u32
 
	gaudio_ch™2_í
 : 1;

119 
u32
 
	gaudio_ch™3_í
 : 1;

120 
u32
 
	gaudio_ch™4_í
 : 1;

121 
u32
 
	gaudio_ch™5_í
 : 1;

122 
u32
 
	gaudio_ch™6_í
 : 1;

123 
u32
 
	gaudio_ch™7_í
 : 1;

124 
u32
 
	gaudio_ch™8_í
 : 1;

125 
u32
 
	gaudio_ch™9_í
 : 1;

126 
u32
 
	gaudio_ch™10_í
 : 1;

127 
u32
 
	gaudio_ch™11_í
 : 1;

128 
u32
 
	gaudio_ch™12_í
 : 1;

129 
u32
 
	gaudio_ch™13_í
 : 1;

130 
u32
 
	gaudio_ch™14_í
 : 1;

131 
u32
 
	gaudio_ch™15_í
 : 1;

132 
u32
 
	g•ókî_í
 : 1;

133 
u32
 
	gAD_BIT_WIDE
 : 1;

134 
u32
 
	gaudio_ty≥
 : 4;

135 
u32
 
	gaudio_ßm∂e_øã
 : 2;

136 
u32
 
	gaudio_lo›back_ch™_id
 : 5;

137 
u32
 
	gaudio_lo›back_íabÀ
 : 1;

138 
u32
 
	gaudio_ad_lo›
 : 1;

139 
u32
 
	g¨m_mode_‹_pci_mod
 : 1;

140 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

141 
u32
 
	g¨m_mode_‹_pci_mod
 : 1;

142 
u32
 
	gaudio_ad_lo›
 : 1;

143 
u32
 
	gaudio_lo›back_íabÀ
 : 1;

144 
u32
 
	gaudio_lo›back_ch™_id
 : 5;

145 
u32
 
	gaudio_ßm∂e_øã
 : 2;

146 
u32
 
	gaudio_ty≥
 : 4;

147 
u32
 
	gAD_BIT_WIDE
 : 1;

148 
u32
 
	g•ókî_í
 : 1;

149 
u32
 
	gaudio_ch™15_í
 : 1;

150 
u32
 
	gaudio_ch™14_í
 : 1;

151 
u32
 
	gaudio_ch™13_í
 : 1;

152 
u32
 
	gaudio_ch™12_í
 : 1;

153 
u32
 
	gaudio_ch™11_í
 : 1;

154 
u32
 
	gaudio_ch™10_í
 : 1;

155 
u32
 
	gaudio_ch™9_í
 : 1;

156 
u32
 
	gaudio_ch™8_í
 : 1;

157 
u32
 
	gaudio_ch™7_í
 : 1;

158 
u32
 
	gaudio_ch™6_í
 : 1;

159 
u32
 
	gaudio_ch™5_í
 : 1;

160 
u32
 
	gaudio_ch™4_í
 : 1;

161 
u32
 
	gaudio_ch™3_í
 : 1;

162 
u32
 
	gaudio_ch™2_í
 : 1;

163 
u32
 
	gaudio_ch™1_í
 : 1;

164 
u32
 
	gaudio_ch™0_í
 : 1;

168 }
STRUCT_PACKET_ALIGN
(1);

171 
audio_pcm_ícode_c⁄åﬁ_ªg
 
	gbô_vÆue
;

172 
u32
 
	gvÆue
;

173 }
	tSTRUCT_PACKET_ALIGN
(1Ë
	taudio_pcm_ícode_c⁄åﬁ_ªg_vÆue
;

175 
	saudio_adpcm_ícode_c⁄åﬁ_ªg
 {

176 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

177 
u32
 
	gaudio_ch™0_í
 : 1;

178 
u32
 
	gaudio_ch™1_í
 : 1;

179 
u32
 
	gaudio_ch™2_í
 : 1;

180 
u32
 
	gaudio_ch™3_í
 : 1;

181 
u32
 
	gaudio_ch™4_í
 : 1;

182 
u32
 
	gaudio_ch™5_í
 : 1;

183 
u32
 
	gaudio_ch™6_í
 : 1;

184 
u32
 
	gaudio_ch™7_í
 : 1;

185 
u32
 
	gaudio_ch™8_í
 : 1;

186 
u32
 
	gaudio_ch™9_í
 : 1;

187 
u32
 
	gaudio_ch™10_í
 : 1;

188 
u32
 
	gaudio_ch™11_í
 : 1;

189 
u32
 
	gaudio_ch™12_í
 : 1;

190 
u32
 
	gaudio_ch™13_í
 : 1;

191 
u32
 
	gaudio_ch™14_í
 : 1;

192 
u32
 
	gaudio_ch™15_í
 : 1;

193 
u32
 
	g•ókî_í
 : 1;

194 
u32
 
	gª£rve
 : 15;

195 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

196 
u32
 
	gª£rve
 : 15;

197 
u32
 
	g•ókî_í
 : 1;

198 
u32
 
	gaudio_ch™15_í
 : 1;

199 
u32
 
	gaudio_ch™14_í
 : 1;

200 
u32
 
	gaudio_ch™13_í
 : 1;

201 
u32
 
	gaudio_ch™12_í
 : 1;

202 
u32
 
	gaudio_ch™11_í
 : 1;

203 
u32
 
	gaudio_ch™10_í
 : 1;

204 
u32
 
	gaudio_ch™9_í
 : 1;

205 
u32
 
	gaudio_ch™8_í
 : 1;

206 
u32
 
	gaudio_ch™7_í
 : 1;

207 
u32
 
	gaudio_ch™6_í
 : 1;

208 
u32
 
	gaudio_ch™5_í
 : 1;

209 
u32
 
	gaudio_ch™4_í
 : 1;

210 
u32
 
	gaudio_ch™3_í
 : 1;

211 
u32
 
	gaudio_ch™2_í
 : 1;

212 
u32
 
	gaudio_ch™1_í
 : 1;

213 
u32
 
	gaudio_ch™0_í
 : 1;

217 }
STRUCT_PACKET_ALIGN
(1);

220 
audio_adpcm_ícode_c⁄åﬁ_ªg
 
	gbô_vÆue
;

221 
u32
 
	gvÆue
;

222 }
	tSTRUCT_PACKET_ALIGN
(1Ë
	taudio_adpcm_ícode_c⁄åﬁ_ªg_vÆue
;

224 
	saduio_decode_c⁄åﬁ_ªg
 {

225 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

226 
u32
 
	gaudio_out_ch™0_muã
 : 1;

227 
u32
 
	gaudio_out_ch™0_DA_BIT_WIDE
 : 1;

228 
u32
 
	gaudio_out_ch™1_muã
 : 1;

229 
u32
 
	gaudio_out_ch™1_DA_BIT_WIDE
 : 1;

230 
u32
 
	gaudio_out_ch™0_íabÀ
 : 1;

231 
u32
 
	gaudio_out_ch™1_íabÀ
 : 1;

232 
u32
 
	gª£rve
 : 26;

233 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

234 
u32
 
	gª£rve
 : 26;

235 
u32
 
	gaudio_out_ch™1_íabÀ
 : 1;

236 
u32
 
	gaudio_out_ch™0_íabÀ
 : 1;

237 
u32
 
	gaudio_out_ch™1_DA_BIT_WIDE
 : 1;

238 
u32
 
	gaudio_out_ch™1_muã
 : 1;

239 
u32
 
	gaudio_out_ch™0_DA_BIT_WIDE
 : 1;

240 
u32
 
	gaudio_out_ch™0_muã
 : 1;

244 }
STRUCT_PACKET_ALIGN
(1);

247 
aduio_decode_c⁄åﬁ_ªg
 
	gbô_vÆue
;

248 
u32
 
	gvÆue
;

249 }
	tSTRUCT_PACKET_ALIGN
(1Ë
	taduio_decode_c⁄åﬁ_ªg_vÆue
;

251 
	saudio_adpcm_ícode_±r_ch0_ch9_ªg
 {

252 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

253 
u32
 
	gaudio_ch™0_±r
 : 3;

254 
u32
 
	gaudio_ch™1_±r
 : 3;

255 
u32
 
	gaudio_ch™2_±r
 : 3;

256 
u32
 
	gaudio_ch™3_±r
 : 3;

257 
u32
 
	gaudio_ch™4_±r
 : 3;

258 
u32
 
	gaudio_ch™5_±r
 : 3;

259 
u32
 
	gaudio_ch™6_±r
 : 3;

260 
u32
 
	gaudio_ch™7_±r
 : 3;

261 
u32
 
	gaudio_ch™8_±r
 : 3;

262 
u32
 
	gaudio_ch™9_±r
 : 3;

263 
u32
 
	gª£rve
 : 2;

264 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

265 
u32
 
	gª£rve
 : 2;

266 
u32
 
	gaudio_ch™9_±r
 : 3;

267 
u32
 
	gaudio_ch™8_±r
 : 3;

268 
u32
 
	gaudio_ch™7_±r
 : 3;

269 
u32
 
	gaudio_ch™6_±r
 : 3;

270 
u32
 
	gaudio_ch™5_±r
 : 3;

271 
u32
 
	gaudio_ch™4_±r
 : 3;

272 
u32
 
	gaudio_ch™3_±r
 : 3;

273 
u32
 
	gaudio_ch™2_±r
 : 3;

274 
u32
 
	gaudio_ch™1_±r
 : 3;

275 
u32
 
	gaudio_ch™0_±r
 : 3;

279 }
STRUCT_PACKET_ALIGN
(1);

282 
audio_adpcm_ícode_±r_ch0_ch9_ªg
 
	gbô_vÆue
;

283 
u32
 
	gvÆue
;

284 }
	tSTRUCT_PACKET_ALIGN
(1Ë
	taudio_adpcm_ícode_±r_ch0_ch9_ªg_vÆue
;

286 
	saudio_adpcm_ícode_±r_ch10_ch16_ªg
 {

287 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

288 
u32
 
	gaudio_ch™10_±r
 : 3;

289 
u32
 
	gaudio_ch™11_±r
 : 3;

290 
u32
 
	gaudio_ch™12_±r
 : 3;

291 
u32
 
	gaudio_ch™13_±r
 : 3;

292 
u32
 
	gaudio_ch™14_±r
 : 3;

293 
u32
 
	gaudio_ch™15_±r
 : 3;

294 
u32
 
	gaudio_ch™16_±r
 : 3;

295 
u32
 
	gª£rve
 : 11;

296 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

297 
u32
 
	gª£rve
 : 11;

298 
u32
 
	gaudio_ch™16_±r
 : 3;

299 
u32
 
	gaudio_ch™15_±r
 : 3;

300 
u32
 
	gaudio_ch™14_±r
 : 3;

301 
u32
 
	gaudio_ch™13_±r
 : 3;

302 
u32
 
	gaudio_ch™12_±r
 : 3;

303 
u32
 
	gaudio_ch™11_±r
 : 3;

304 
u32
 
	gaudio_ch™10_±r
 : 3;

308 }
STRUCT_PACKET_ALIGN
(1);

311 
audio_adpcm_ícode_±r_ch10_ch16_ªg
 
	gbô_vÆue
;

312 
u32
 
	gvÆue
;

313 }
	tSTRUCT_PACKET_ALIGN
(1Ë
	taudio_adpcm_ícode_±r_ch10_ch16_ªg_vÆue
;

315 
	saudio_decode_wr_rd_±r_ªg
 {

316 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

317 
u32
 
	gch™0_rd_±r
 : 4;

318 
u32
 
	gch™1_rd_±r
 : 4;

319 
u32
 
	gch™0_wr_±r
 : 4;

320 
u32
 
	gch™1_wr_±r
 : 4;

321 
u32
 
	gª£rve
 : 16;

322 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

323 
u32
 
	gª£rve
 : 16;

324 
u32
 
	gch™1_wr_±r
 : 4;

325 
u32
 
	gch™0_wr_±r
 : 4;

326 
u32
 
	gch™1_rd_±r
 : 4;

327 
u32
 
	gch™0_rd_±r
 : 4;

331 }
STRUCT_PACKET_ALIGN
(1);

334 
audio_decode_wr_rd_±r_ªg
 
	gbô_vÆue
;

335 
u32
 
	gvÆue
;

336 }
	tSTRUCT_PACKET_ALIGN
(1Ë
	taudio_decode_wr_rd_±r_ªg_vÆue
;

338 
	saudio_pcm_ícode_±r_ch0_ch7_ªg
 {

339 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

340 
u32
 
	gaudio_ch™0_±r
 : 4;

341 
u32
 
	gaudio_ch™1_±r
 : 4;

342 
u32
 
	gaudio_ch™2_±r
 : 4;

343 
u32
 
	gaudio_ch™3_±r
 : 4;

344 
u32
 
	gaudio_ch™4_±r
 : 4;

345 
u32
 
	gaudio_ch™5_±r
 : 4;

346 
u32
 
	gaudio_ch™6_±r
 : 4;

347 
u32
 
	gaudio_ch™7_±r
 : 4;

348 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

349 
u32
 
	gaudio_ch™7_±r
 : 4;

350 
u32
 
	gaudio_ch™6_±r
 : 4;

351 
u32
 
	gaudio_ch™5_±r
 : 4;

352 
u32
 
	gaudio_ch™4_±r
 : 4;

353 
u32
 
	gaudio_ch™3_±r
 : 4;

354 
u32
 
	gaudio_ch™2_±r
 : 4;

355 
u32
 
	gaudio_ch™1_±r
 : 4;

356 
u32
 
	gaudio_ch™0_±r
 : 4;

360 }
STRUCT_PACKET_ALIGN
(1);

363 
audio_pcm_ícode_±r_ch0_ch7_ªg
 
	gbô_vÆue
;

364 
u32
 
	gvÆue
;

365 }
	tSTRUCT_PACKET_ALIGN
(1Ë
	taudio_pcm_ícode_±r_ch0_ch7_ªg_vÆue
;

367 
	saudio_pcm_ícode_±r_ch8_ch15_ªg
 {

368 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

369 
u32
 
	gaudio_ch™08_±r
 : 4;

370 
u32
 
	gaudio_ch™09_±r
 : 4;

371 
u32
 
	gaudio_ch™10_±r
 : 4;

372 
u32
 
	gaudio_ch™11_±r
 : 4;

373 
u32
 
	gaudio_ch™12_±r
 : 4;

374 
u32
 
	gaudio_ch™13_±r
 : 4;

375 
u32
 
	gaudio_ch™14_±r
 : 4;

376 
u32
 
	gaudio_ch™15_±r
 : 4;

377 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

378 
u32
 
	gaudio_ch™15_±r
 : 4;

379 
u32
 
	gaudio_ch™14_±r
 : 4;

380 
u32
 
	gaudio_ch™13_±r
 : 4;

381 
u32
 
	gaudio_ch™12_±r
 : 4;

382 
u32
 
	gaudio_ch™11_±r
 : 4;

383 
u32
 
	gaudio_ch™10_±r
 : 4;

384 
u32
 
	gaudio_ch™09_±r
 : 4;

385 
u32
 
	gaudio_ch™08_±r
 : 4;

389 }
STRUCT_PACKET_ALIGN
(1);

392 
audio_pcm_ícode_±r_ch8_ch15_ªg
 
	gbô_vÆue
;

393 
u32
 
	gvÆue
;

394 }
	tSTRUCT_PACKET_ALIGN
(1Ë
	taudio_pcm_ícode_±r_ch8_ch15_ªg_vÆue
;

396 
	saudio_pcm_ícode_±r_ch16_ªg
 {

397 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

398 
u32
 
	gaudio_ch™16_±r
 : 4;

399 
u32
 
	gª£rve
 : 28;

400 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

401 
u32
 
	gª£rve
 : 28;

402 
u32
 
	gaudio_ch™16_±r
 : 4;

406 }
STRUCT_PACKET_ALIGN
(1);

409 
audio_pcm_ícode_±r_ch16_ªg
 
	gbô_vÆue
;

410 
u32
 
	gvÆue
;

411 }
	tSTRUCT_PACKET_ALIGN
(1Ë
	taudio_pcm_ícode_±r_ch16_ªg_vÆue
;

413 
	saudio_íabÀ_c⁄åﬁ_›î©i⁄
 {

414 (*
	ggë_adpcm_decode_°©e
)(
	gaudio_íabÀ_c⁄åﬁ_t
 *);

415 (*
	gupd©e_íabÀ_adpcm_decode
)(
	gaudio_íabÀ_c⁄åﬁ_t
 *, 
	gí
);

416 (*
	g£t_íabÀ_adpcm_decode
)(
	gaudio_íabÀ_c⁄åﬁ_t
 *, 
	gí
, 
	gdvm_chù_t
 *);

418 (*
	ggë_pcm_ícode_°©e
)(
	gaudio_íabÀ_c⁄åﬁ_t
 *);

419 (*
	gupd©e_íabÀ_pcm_ícode
)(
	gaudio_íabÀ_c⁄åﬁ_t
 *, 
	gí
);

420 (*
	g£t_íabÀ_pcm_ícode
)(
	gaudio_íabÀ_c⁄åﬁ_t
 *, 
	gí
, 
	gdvm_chù_t
 *);

422 (*
	ggë_adpcm_ícode_°©e
)(
	gaudio_íabÀ_c⁄åﬁ_t
 *);

423 (*
	gupd©e_íabÀ_adpcm_ícode
)(
	gaudio_íabÀ_c⁄åﬁ_t
 *, 
	gí
);

424 (*
	g£t_íabÀ_adpcm_ícode
)(
	gaudio_íabÀ_c⁄åﬁ_t
 *, 
	gí
, 
	gdvm_chù_t
 *);

426 (*
	göô
)(
	gaudio_íabÀ_c⁄åﬁ_t
 *);

427 (*
	ggë_íabÀ_c⁄åﬁ_∑øm
)(
	gaudio_íabÀ_c⁄åﬁ_t
 *, 
	gdvm_chù_t
 *);

428 (*
	g£t_íabÀ_c⁄åﬁ_∑øm
)(
	gaudio_íabÀ_c⁄åﬁ_t
 *, 
	gdvm_chù_t
 *);

431 
	saudio_íabÀ_c⁄åﬁ
 {

432 
audio_íabÀ_c⁄åﬁ_ªg_vÆue
 
	gvÆue
;

433 
u32
 
	gªg_off£t
;

434 
audio_íabÀ_c⁄åﬁ_›î©i⁄
 *
	g›
;

437 
	saudio_pcm_ícode_wr_rd_±r_›î©i⁄
 {

438 (*
	göô
)(
	gaudio_pcm_ícode_±r_c⁄åﬁ_t
 *);

439 (*
	ggë_pcm_wr_rd_±r
)(
	gaudio_pcm_ícode_±r_c⁄åﬁ_t
 *, 
	gdvm_chù_t
 *);

441 (*
	ggë_ch™_wr_±r
)(
	gaudio_pcm_ícode_±r_c⁄åﬁ_t
 *, , *);

442 (*
	ggë_ch™_rd_±r
)(
	gaudio_pcm_ícode_±r_c⁄åﬁ_t
 *, , *);

443 (*
	ggë_ch™_£˘i⁄_numbî
)(
	gaudio_pcm_ícode_±r_c⁄åﬁ_t
 *);

445 (*
	g£t_rd_föish_numbî
)(
	gaudio_pcm_ícode_±r_c⁄åﬁ_t
 *, , 
	gdvm_chù_t
 *);

448 
	saudio_pcm_ícode_±r_c⁄åﬁ
 {

449 
audio_pcm_ícode_±r_ch0_ch7_ªg_vÆue
 
	gch0_ch7_wr_±r_vÆue
;

450 
u32
 
	gch0_ch7_wr_±r_ªg_off£t
;

451 
audio_pcm_ícode_±r_ch8_ch15_ªg_vÆue
 
	gch8_ch15_wr_±r_vÆue
;

452 
u32
 
	gch8_ch15_wr_±r_ªg_off£t
;

453 
audio_pcm_ícode_±r_ch16_ªg_vÆue
 
	gch16_wr_±r_vÆue
;

454 
u32
 
	gch16_wr_±r_ªg_off£t
;

456 
audio_pcm_ícode_±r_ch0_ch7_ªg_vÆue
 
	gch0_ch7_rd_±r_vÆue
;

457 
u32
 
	gch0_ch7_rd_±r_ªg_off£t
;

458 
audio_pcm_ícode_±r_ch8_ch15_ªg_vÆue
 
	gch8_ch15_rd_±r_vÆue
;

459 
u32
 
	gch8_ch15_rd_±r_ªg_off£t
;

460 
audio_pcm_ícode_±r_ch16_ªg_vÆue
 
	gch16_rd_±r_vÆue
;

461 
u32
 
	gch16_rd_±r_ªg_off£t
;

463 
u32
 
	grd_föish_numbî_ªg_off£t
;

465 
	g£˘i⁄_numbî
;

467 
audio_pcm_ícode_wr_rd_±r_›î©i⁄
 *
	g›
;

470 
	#ADUIO_DATA_ADDR_PCM_ENCODE_TYPE
 (0x00)

	)

471 
	saudio_pcm_ícode_d©a_addr_ªg
 {

472 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

473 
u32
 
	g£˘i⁄_off£t
 : 7;

474 
u32
 
	g£˘i⁄_id
 : 3;

475 
u32
 
	gch™_id
 : 5;

476 
u32
 
	gpcm_ty≥
 : 1;

477 
u32
 
	gª£rve
 : 16;

478 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

479 
u32
 
	gª£rve
 : 16;

480 
u32
 
	gpcm_ty≥
 : 1;

481 
u32
 
	gch™_id
 : 5;

482 
u32
 
	g£˘i⁄_id
 : 3;

483 
u32
 
	g£˘i⁄_off£t
 : 7;

487 }
STRUCT_PACKET_ALIGN
(1);

490 
audio_pcm_ícode_d©a_addr_ªg
 
	gbô_vÆue
;

491 
u32
 
	gvÆue
;

492 }
	tSTRUCT_PACKET_ALIGN
(1Ë
	taudio_pcm_ícode_d©a_addr_ªg_vÆue
;

494 
	saudio_pcm_ícode_d©a_addr_›î©i⁄
{

495 (*
	g£t_ªg_bô_£˘i⁄_off£t
)(
	gaudio_pcm_ícode_d©a_addr_t
 *, 
	gu32
 );

496 
u32
 (*
gë_ªg_bô_£˘i⁄_off£t
)(
	gaudio_pcm_ícode_d©a_addr_t
 *);

498 (*
	g£t_ªg_bô_£˘i⁄_id
)(
	gaudio_pcm_ícode_d©a_addr_t
 *, 
	gu32
 );

499 
u32
 (*
gë_ªg_bô_£˘i⁄_id
)(
	gaudio_pcm_ícode_d©a_addr_t
 *);

501 (*
	g£t_ªg_bô_ch™_id
)(
	gaudio_pcm_ícode_d©a_addr_t
 *, 
	gu32
 );

502 
u32
 (*
gë_ªg_bô_ch™_id
)(
	gaudio_pcm_ícode_d©a_addr_t
 *);

504 (*
	g£t_ªg_bô_pcm_ty≥
)(
	gaudio_pcm_ícode_d©a_addr_t
 *);

505 
u32
 (*
gë_ªg_bô_pcm_ty≥
)(
	gaudio_pcm_ícode_d©a_addr_t
 *);

507 
u32
 (*
gë_pcm_ícode_d©a_addr
)(
	gaudio_pcm_ícode_d©a_addr_t
 *);

508 (*
	ggë_buf_∑ge_id
)(
	gaudio_pcm_ícode_d©a_addr_t
 *);

509 (*
	ggë_buf_ö_chù_a_‹_b
)(
	gaudio_pcm_ícode_d©a_addr_t
 *);

510 
u32
 (*
gë_pcm_ícode_d©a_addr_ö_ho°_íd_off£t
)(
	gaudio_pcm_ícode_d©a_addr_t
 *);

511 
u32
 (*
gë_pcm_ícode_d©a_addr_ö_ddr_íd_off£t
)(
	gaudio_pcm_ícode_d©a_addr_t
 *);

512 (*
	göô
)(
	gaudio_pcm_ícode_d©a_addr_t
 *, , );

515 
	saudio_pcm_ícode_d©a_addr
 {

516 
	gbuf_∑ge_id
, 
	gchù_a_‹_b
;

517 
audio_pcm_ícode_d©a_addr_ªg_vÆue
 
	gvÆue
;

518 
audio_pcm_ícode_d©a_addr_›î©i⁄
 *
	g›
;

521 
	saudio_adpcm_ícode_wr_rd_±r_›î©i⁄
 {

522 (*
	göô
)(
	gaudio_adpcm_ícode_±r_c⁄åﬁ_t
 *);

523 (*
	ggë_adpcm_wr_rd_±r
)(
	gaudio_adpcm_ícode_±r_c⁄åﬁ_t
 *, 
	gdvm_chù_t
 *);

525 (*
	ggë_ch™_wr_±r
)(
	gaudio_adpcm_ícode_±r_c⁄åﬁ_t
 *, , *);

526 (*
	ggë_ch™_rd_±r
)(
	gaudio_adpcm_ícode_±r_c⁄åﬁ_t
 *, , *);

527 (*
	ggë_ch™_£˘i⁄_numbî
)(
	gaudio_adpcm_ícode_±r_c⁄åﬁ_t
 *);

529 (*
	g£t_rd_föish_numbî
)(
	gaudio_adpcm_ícode_±r_c⁄åﬁ_t
 *, , 
	gdvm_chù_t
 *);

532 
	saudio_adpcm_ícode_±r_c⁄åﬁ
 {

533 
audio_adpcm_ícode_±r_ch0_ch9_ªg_vÆue
 
	gch0_ch9_wr_±r_vÆue
;

534 
u32
 
	gch0_ch9_wr_±r_ªg_off£t
;

535 
audio_adpcm_ícode_±r_ch10_ch16_ªg_vÆue
 
	gch10_ch16_wr_±r_vÆue
;

536 
u32
 
	gch10_ch16_wr_±r_ªg_off£t
;

538 
audio_adpcm_ícode_±r_ch0_ch9_ªg_vÆue
 
	gch0_ch9_rd_±r_vÆue
;

539 
u32
 
	gch0_ch9_rd_±r_ªg_off£t
;

540 
audio_adpcm_ícode_±r_ch10_ch16_ªg_vÆue
 
	gch10_ch16_rd_±r_vÆue
;

541 
u32
 
	gch10_ch16_rd_±r_ªg_off£t
;

543 
u32
 
	grd_föish_numbî_ªg_off£t
;

544 
	g£˘i⁄_numbî
;

546 
audio_adpcm_ícode_wr_rd_±r_›î©i⁄
 *
	g›
;

549 
	#ADUIO_DATA_ADDR_ADPCM_ENCODE_TYPE
 (0x02)

	)

550 
	saudio_adpcm_ícode_d©a_addr_ªg
 {

551 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

552 
u32
 
	g£˘i⁄_off£t
 : 7;

553 
u32
 
	g£˘i⁄_id
 : 2;

554 
u32
 
	gch™_id
 : 5;

555 
u32
 
	gadpcm_ícode_ty≥
 : 2;

556 
u32
 
	gª£rve
 : 16;

557 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

558 
u32
 
	gª£rve
 : 16;

559 
u32
 
	gadpcm_ícode_ty≥
 : 2;

560 
u32
 
	gch™_id
 : 5;

561 
u32
 
	g£˘i⁄_id
 : 2;

562 
u32
 
	g£˘i⁄_off£t
 : 7;

566 }
STRUCT_PACKET_ALIGN
(1);

569 
audio_adpcm_ícode_d©a_addr_ªg
 
	gbô_vÆue
;

570 
u32
 
	gvÆue
;

571 }
	taudio_adpcm_ícode_d©a_addr_ªg_vÆue
;

573 
	saudio_adpcm_ícode_d©a_addr_›î©i⁄
 {

574 (*
	g£t_ªg_bô_£˘i⁄_off£t
)(
	gaudio_adpcm_ícode_d©a_addr_t
 *, 
	gu32
 );

575 
u32
 (*
gë_ªg_bô_£˘i⁄_off£t
)(
	gaudio_adpcm_ícode_d©a_addr_t
 *);

577 (*
	g£t_ªg_bô_£˘i⁄_id
)(
	gaudio_adpcm_ícode_d©a_addr_t
 *, 
	gu32
 );

578 
u32
 (*
gë_ªg_bô_£˘i⁄_id
)(
	gaudio_adpcm_ícode_d©a_addr_t
 *);

580 (*
	g£t_ªg_bô_ch™_id
)(
	gaudio_adpcm_ícode_d©a_addr_t
 *, 
	gu32
 );

581 
u32
 (*
gë_ªg_bô_ch™_id
)(
	gaudio_adpcm_ícode_d©a_addr_t
 *);

583 (*
	g£t_ªg_bô_adpcm_ty≥
)(
	gaudio_adpcm_ícode_d©a_addr_t
 *);

584 
u32
 (*
gë_ªg_bô_adpcm_ty≥
)(
	gaudio_adpcm_ícode_d©a_addr_t
 *);

586 
u32
 (*
gë_adpcm_ícode_d©a_addr
)(
	gaudio_adpcm_ícode_d©a_addr_t
 *);

587 (*
	ggë_buf_∑ge_id
)(
	gaudio_adpcm_ícode_d©a_addr_t
 *);

588 (*
	ggë_buf_ö_chù_a_‹_b
)(
	gaudio_adpcm_ícode_d©a_addr_t
 *);

589 
u32
 (*
gë_adpcm_ícode_d©a_addr_ö_ho°_íd_off£t
)(
	gaudio_adpcm_ícode_d©a_addr_t
 *);

590 
u32
 (*
gë_adpcm_ícode_d©a_addr_ö_ddr_íd_off£t
)(
	gaudio_adpcm_ícode_d©a_addr_t
 *);

591 (*
	göô
)(
	gaudio_adpcm_ícode_d©a_addr_t
 *, , );

594 
	saudio_adpcm_ícode_d©a_addr
 {

595 
	gbuf_∑ge_id
, 
	gchù_a_‹_b
;

596 
audio_adpcm_ícode_d©a_addr_ªg_vÆue
 
	gvÆue
;

597 
audio_adpcm_ícode_d©a_addr_›î©i⁄
 *
	g›
;

600 
	saudio_ícode_c⁄åﬁ_›î©i⁄
 {

601 (*
	gíabÀ_pcm_ch™
)(
	gaudio_ícode_c⁄åﬁ_t
 *, );

602 (*
	gdißbÀ_pcm_ch™
)(
	gaudio_ícode_c⁄åﬁ_t
 *, );

603 (*
	g£t_íabÀ_pcm_ch™
)(
	gaudio_ícode_c⁄åﬁ_t
 *, , , 
	gdvm_chù_t
 *);

604 (*
	ggë_pcm_ch™_°©e
)(
	gaudio_ícode_c⁄åﬁ_t
 *, );

605 (*
	göô_audio_pcm
)(
	gaudio_ícode_c⁄åﬁ_t
 *);

607 (*
	gíabÀ_adpcm_ch™
)(
	gaudio_ícode_c⁄åﬁ_t
 *, );

608 (*
	gdißbÀ_adpcm_ch™
)(
	gaudio_ícode_c⁄åﬁ_t
 *, );

609 (*
	g£t_íabÀ_adpcm_ch™
)(
	gaudio_ícode_c⁄åﬁ_t
 *, , , 
	gdvm_chù_t
 *);

610 (*
	ggë_adpcm_ch™_°©e
)(
	gaudio_ícode_c⁄åﬁ_t
 *, );

611 (*
	göô_audio_adpcm
)(
	gaudio_ícode_c⁄åﬁ_t
 *);

613 (*
	gupd©e_audio_ßm∂e_øã
)(
	gaudio_ícode_c⁄åﬁ_t
 *, );

614 (*
	ggë_audio_ßm∂e_øã
)(
	gaudio_ícode_c⁄åﬁ_t
 *);

615 (*
	g£t_audio_ßm∂e_øã
)(
	gaudio_ícode_c⁄åﬁ_t
 *, , 
	gdvm_chù_t
 *);

617 (*
	gupd©e_audio_ty≥
)(
	gaudio_ícode_c⁄åﬁ_t
 *, );

618 (*
	ggë_audio_ty≥
)(
	gaudio_ícode_c⁄åﬁ_t
 *);

619 (*
	g£t_audio_ty≥
)(
	gaudio_ícode_c⁄åﬁ_t
 *, , 
	gdvm_chù_t
 *);

621 (*
	gupd©e_bô_wide
)(
	gaudio_ícode_c⁄åﬁ_t
 *, );

622 (*
	ggë_bô_wide
)(
	gaudio_ícode_c⁄åﬁ_t
 *);

623 (*
	g£t_bô_wide
)(
	gaudio_ícode_c⁄åﬁ_t
 *, , 
	gdvm_chù_t
 *);

625 (*
	g£t_audio_∑øm
)(
	gaudio_ícode_c⁄åﬁ_t
 *, 
	gdvm_chù_t
 *);

626 (*
	ggë_audio_∑øm
)(
	gaudio_ícode_c⁄åﬁ_t
 *, 
	gdvm_chù_t
 *);

629 
	saudio_ícode_c⁄åﬁ
 {

630 
audio_pcm_ícode_c⁄åﬁ_ªg_vÆue
 
	gpcm_vÆue
;

631 
u32
 
	gpcm_ªg_off£t
;

632 
audio_adpcm_ícode_c⁄åﬁ_ªg_vÆue
 
	gadpcm_vÆue
;

633 
u32
 
	gadpcm_ªg_off£t
;

635 
audio_ícode_c⁄åﬁ_›î©i⁄
 *
	g›
;

638 
	schù_audio_ícode_›î©i⁄
 {

639 (*
	göô
)(
chù_audio_ícode_t
 *
	gaudio_ícode
);

641 (*
	g£t_íabÀ_audio_ícode_ch™
)(
chù_audio_ícode_t
 *
	gaudio_ícode
, 
	gch™_id
, 
	gíabÀ
, 
dvm_chù_t
 *
	gchù
);

642 (*
	gupd©e_íabÀ_audio_ícode_ch™
)(
chù_audio_ícode_t
 *
	gaudio_ícode
, 
	gch™_id
, 
	gíabÀ
);

643 (*
	ggë_audio_ícode_ch™_íabÀ_°©e
)(
chù_audio_ícode_t
 *
	gaudio_ícode
, 
	gch™_id
);

645 (*
	ggë_audio_ícode_ch™_rd_±r
)(
chù_audio_ícode_t
 *
	gaudio_ícode
, 
	gch™_id
, *
	gext_Êag
, *
	gqueue_size
);

646 (*
	ggë_audio_ícode_ch™_wr_±r
)(
chù_audio_ícode_t
 *
	gaudio_ícode
, 
	gch™_id
, *
	gext_Êag
, *
	gqueue_size
);

648 (*
	ggë_audio_ícode_∑øm
)(
chù_audio_ícode_t
 *
	gaudio_ícode
, 
dvm_chù_t
 *
	gchù
);

649 (*
	g£t_audio_ícode_∑øm
)(
chù_audio_ícode_t
 *
	gaudio_ícode
, 
dvm_chù_t
 *
	gchù
);

650 (*
	g£t_föish_rd_±r
)(
chù_audio_ícode_t
 *
	gaudio_ícode
, 
	gföish_rd_±r
, 
dvm_chù_t
 *
	gchù
);

653 
	#to_gë_chù_audio_ícode_wôh_¥›îty
(
node
Ë
	`c⁄èöî_of
“ode, 
chù_audio_ícode_t
, 
c⁄fig_∑øm
)

	)

654 
	schù_audio_ícode
 {

655 
tw_audio_∑øm_t
 
	gc⁄fig_∑øm
;

656 
audio_ícode_c⁄åﬁ_t
 
	gaudio_c⁄åﬁ
;

657 
audio_pcm_ícode_±r_c⁄åﬁ_t
 
	gpcm_audio_±r
;

658 
audio_pcm_ícode_d©a_addr_t
 
	gpcm_audio_d©a_ba£
;

659 
audio_adpcm_ícode_±r_c⁄åﬁ_t
 
	gadpcm_audio_±r
;

660 
audio_adpcm_ícode_d©a_addr_t
 
	gadpcm_audio_d©a_ba£
;

662 
chù_audio_ícode_›î©i⁄
 *
	g›
;

665 
	saudio_decode_c⁄åﬁ_›î©i⁄
 {

666 (*
	göô
)(
	gaudio_decode_c⁄åﬁ_t
 *);

668 (*
	gupd©e_decode_ch™_muã
)(
audio_decode_c⁄åﬁ_t
 *
	gdecode_c⁄åﬁ
, 
	gch™_id
, 
	gmuã
);

669 (*
	ggë_decode_ch™_muã
)(
audio_decode_c⁄åﬁ_t
 *
	gdecode_c⁄åﬁ
, 
	gch™_id
);

670 (*
	g£t_decode_ch™_muã
)(
audio_decode_c⁄åﬁ_t
 *
	gdecode_c⁄åﬁ
, 
	gch™_id
, 
	gmuã
, 
dvm_chù_t
 *
	gchù
);

672 (*
	gupd©e_decode_ch™_bô_wide
)(
audio_decode_c⁄åﬁ_t
 *
	gdecode_c⁄åﬁ
, 
	gch™_id
, 
	gbô_wide
);

673 (*
	ggë_decode_ch™_bô_wide
)(
audio_decode_c⁄åﬁ_t
 *
	gdecode_c⁄åﬁ
, 
	gch™_id
);

674 (*
	g£t_decode_ch™_bô_wide
)(
audio_decode_c⁄åﬁ_t
 *
	gdecode_c⁄åﬁ
, 
	gch™_id
, 
	gbô_wide
, 
dvm_chù_t
 *
	gchù
);

676 (*
	gupd©e_decode_ch™_íabÀ
)(
audio_decode_c⁄åﬁ_t
 *
	gdecode_c⁄åﬁ
, 
	gch™_id
, 
	gíabÀ
);

677 (*
	ggë_decode_ch™_íabÀ
)(
audio_decode_c⁄åﬁ_t
 *
	gdecode_c⁄åﬁ
, 
	gch™_id
);

678 (*
	g£t_decode_ch™_íabÀ
)(
audio_decode_c⁄åﬁ_t
 *
	gdecode_c⁄åﬁ
, 
	gch™_id
, 
	gíabÀ
, 
dvm_chù_t
 *
	gchù
);

680 (*
	g£t_decode_∑øm
)(
audio_decode_c⁄åﬁ_t
 *
	gdecode_c⁄åﬁ
, 
dvm_chù_t
 *
	gchù
);

681 (*
	ggë_decode_∑øm
)(
audio_decode_c⁄åﬁ_t
 *
	gdecode_c⁄åﬁ
, 
dvm_chù_t
 *
	gchù
);

684 
	saudio_decode_c⁄åﬁ
 {

685 
aduio_decode_c⁄åﬁ_ªg_vÆue
 
	gvÆue
;

686 
u32
 
	gªg_off£t
;

687 
audio_decode_c⁄åﬁ_›î©i⁄
 *
	g›
;

690 
	saudio_decode_±r_c⁄åﬁ_›î©i⁄
 {

691 (*
	göô
)(
	gaudio_decode_±r_c⁄åﬁ_t
 *);

692 (*
	ggë_adpcm_wr_rd_±r
)(
	gaudio_decode_±r_c⁄åﬁ_t
 *, 
	gdvm_chù_t
 *);

694 (*
	ggë_ch™_wr_±r
)(
	gaudio_decode_±r_c⁄åﬁ_t
 *, , *);

695 (*
	ggë_ch™_rd_±r
)(
	gaudio_decode_±r_c⁄åﬁ_t
 *, , *);

696 (*
	ggë_ch™_£˘i⁄_numbî
)(
	gaudio_decode_±r_c⁄åﬁ_t
 *);

697 (*
	g£t_föish_wr_±r
)(
	gaudio_decode_±r_c⁄åﬁ_t
 *, 
	gföish_id
, 
dvm_chù_t
 *
	gchù
, 
	gch™_id
);

700 
	saudio_decode_±r_c⁄åﬁ
 {

701 
audio_decode_wr_rd_±r_ªg_vÆue
 
	gwr_rd_vÆue
;

702 
u32
 
	gwr_rd_ªg_off£t
;

703 
	g£˘i⁄_numbî
;

705 
audio_decode_±r_c⁄åﬁ_›î©i⁄
 *
	g›
;

708 
	#AUDIO_DATA_ADDR_ADPCM_DECODE_TYPE
 (0x18)

	)

709 
	saudio_decode_d©a_addr_ªg
 {

710 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

711 
u32
 
	g£˘i⁄_off£t
 : 7;

712 
u32
 
	g£˘i⁄_id
 : 3;

713 
u32
 
	gch™_id
 : 1;

714 
u32
 
	gdecode_ty≥
 : 5;

715 
u32
 
	gª£rve
 : 16;

716 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

717 
u32
 
	gª£rve
 : 16;

718 
u32
 
	gdecode_ty≥
 : 5;

719 
u32
 
	gch™_id
 : 1;

720 
u32
 
	g£˘i⁄_id
 : 3;

721 
u32
 
	g£˘i⁄_off£t
 : 7;

725 }
STRUCT_PACKET_ALIGN
(1);

728 
audio_decode_d©a_addr_ªg
 
	gbô_vÆue
;

729 
u32
 
	gvÆue
;

730 }
	tSTRUCT_PACKET_ALIGN
(1Ë
	taudio_decode_d©a_addr_ªg_vÆue
;

732 
	saudio_decode_d©a_addr_›î©i⁄
 {

733 (*
	g£t_ªg_bô_£˘i⁄_off£t
)(
	gaudio_decode_d©a_addr_t
 *, 
	gu32
 );

734 
u32
 (*
gë_ªg_bô_£˘i⁄_off£t
)(
	gaudio_decode_d©a_addr_t
 *);

735 (*
	g£t_ªg_bô_£˘i⁄_id
)(
	gaudio_decode_d©a_addr_t
 *, 
	gu32
 );

736 
u32
 (*
gë_ªg_bô_£˘i⁄_id
)(
	gaudio_decode_d©a_addr_t
 *);

737 (*
	g£t_ªg_bô_ch™_id
)(
	gaudio_decode_d©a_addr_t
 *, 
	gu32
 );

738 
u32
 (*
gë_ªg_bô_ch™_id
)(
	gaudio_decode_d©a_addr_t
 *);

739 (*
	g£t_ªg_bô_decode_ty≥
)(
	gaudio_decode_d©a_addr_t
 *);

740 
u32
 (*
gë_ªg_bô_decode_ty≥
)(
	gaudio_decode_d©a_addr_t
 *);

741 
u32
 (*
gë_decode_d©a_addr
)(
	gaudio_decode_d©a_addr_t
 *);

742 (*
	ggë_buf_∑ge_id
)(
	gaudio_decode_d©a_addr_t
 *);

743 (*
	ggë_buf_ö_chù_a_‹_b
)(
	gaudio_decode_d©a_addr_t
 *);

744 
u32
 (*
gë_adpcm_decode_d©a_addr_ö_ho°_íd_off£t
)(
	gaudio_decode_d©a_addr_t
 *);

745 
u32
 (*
gë_adpcm_decode_d©a_addr_ö_ddr_íd_off£t
)(
	gaudio_decode_d©a_addr_t
 *);

746 (*
	göô
)(
	gaudio_decode_d©a_addr_t
 *);

749 
	saudio_decode_d©a_addr
 {

750 
	gbuf_∑ge_id
, 
	gchù_a_‹_b
;

751 
audio_decode_d©a_addr_ªg_vÆue
 
	gvÆue
;

752 
audio_decode_d©a_addr_›î©i⁄
 *
	g›
;

755 
	schù_audio_decode_›î©i⁄
 {

756 (*
	göô
)(
chù_audio_decode_t
 *
	gaudio_decode
);

758 (*
	gupd©e_íabÀ_audio_decode_ch™
)(
chù_audio_decode_t
 *
	gaudio_decode
, 
	gch™_id
, 
	gíabÀ
);

759 (*
	ggë_audio_decode_ch™_íabÀ_°©e
)(
chù_audio_decode_t
 *
	gaudio_decode
, 
	gch™_id
);

760 (*
	g£t_íabÀ_audio_decode_ch™
)(
chù_audio_decode_t
 *
	gaudio_decode
, 
	gch™_id
, 
	gíabÀ
, 
dvm_chù_t
 *
	gchù
);

762 (*
	gupd©e_muã_audio_decode_ch™
)(
chù_audio_decode_t
 *
	gaudio_decode
, 
	gch™_id
, 
	gmuã
);

763 (*
	ggë_audio_decode_muã_°©e
)(
chù_audio_decode_t
 *
	gaudio_decode
, 
	gch™_id
);

764 (*
	g£t_muã_audio_decode_ch™
)(
chù_audio_decode_t
 *
	gaudio_decode
, 
	gch™_id
, 
	gmuã
, 
dvm_chù_t
 *
	gchù
);

766 (*
	ggë_audio_decode_ch™_rd_±r
)(
chù_audio_decode_t
 *
	gaudio_decode
, 
	gch™_id
, *
	gext_Êag
, *
	gqueue_size
);

767 (*
	ggë_audio_decode_ch™_wr_±r
)(
chù_audio_decode_t
 *
	gaudio_decode
, 
	gch™_id
, *
	gext_Êag
, *
	gqueue_size
);

769 (*
	ggë_audio_decode_∑øm
)(
chù_audio_decode_t
 *
	gaudio_decode
, 
dvm_chù_t
 *
	gchù
);

770 (*
	g£t_audio_decode_∑øm
)(
chù_audio_decode_t
 *
	gaudio_decode
, 
dvm_chù_t
 *
	gchù
);

773 
	#to_gë_chù_audio_decode_wôh_¥›îty
(
node
Ë
	`c⁄èöî_of
“ode, 
chù_audio_decode_t
, 
c⁄fig_∑øm
)

	)

774 
	schù_audio_decode
 {

775 
tw_audio_∑øm_t
 
	gc⁄fig_∑øm
;

776 
audio_decode_c⁄åﬁ_t
 
	gaudio_c⁄åﬁ
;

777 
audio_decode_±r_c⁄åﬁ_t
 
	gaudio_±r
;

778 
audio_decode_d©a_addr_t
 
	gaudio_d©a_ba£
;

780 
chù_audio_decode_›î©i⁄
 *
	g›
;

783 
	schù_audio_›î©i⁄
 {

784 (*
	göô
)(
chù_audio_t
 *
	gchù_audio
);

786 (*
	g£t_ícode_audio_ch™_ty≥
)(
chù_audio_t
 *
	gchù_audio
, 
	gty≥
);

787 (*
	gupd©e_ícode_audio_ch™_ty≥
)(
chù_audio_t
 *
	gchù_audio
, 
	gty≥
);

788 (*
	ggë_ícode_audio_ch™_ty≥
)(
chù_audio_t
 *
	gchù_audio
);

790 (*
	g£t_decode_audio_ch™_ty≥
)(
chù_audio_t
 *
	gchù_audio
, 
	gty≥
);

791 (*
	gupd©e_decode_audio_ch™_ty≥
)(
chù_audio_t
 *
	gchù_audio
, 
	gty≥
);

792 (*
	ggë_decode_audio_ch™_ty≥
)(
chù_audio_t
 *
	gchù_audio
);

794 (*
	g£t_íabÀ_audio_ch™
)(
chù_audio_t
 *
	gchù_audio
, 
	gch™_id
, 
	gíabÀ
);

795 (*
	gupd©e_íabÀ_audio_ch™
)(
chù_audio_t
 *
	gchù_audio
, 
	gch™_id
, 
	gíabÀ
);

796 (*
	ggë_audio_ch™_íabÀ_°©e
)(
chù_audio_t
 *
	gchù_audio
, 
	gch™_id
);

798 (*
	g£t_muã_audio_ch™
)(
chù_audio_t
 *
	gchù_audio
, 
	gch™_id
, 
	gmuã
);

799 (*
	gupd©e_muã_audio_ch™
)(
chù_audio_t
 *
	gchù_audio
, 
	gch™_id
, 
	gmuã
);

800 (*
	ggë_audio_ch™_muã_°©e
)(
chù_audio_t
 *
	gchù_audio
, 
	gch™_id
);

802 (*
	ggë_chù_audio_∑øm
)(
chù_audio_t
 *
	gchù_audio
);

803 (*
	g£t_chù_audio_∑øm
)(
chù_audio_t
 *
	gchù_audio
);

805 (*
	g¥o˚ss_audio_ícode
)(
chù_audio_t
 *
	gchù_audio
);

806 (*
	g¥o˚ss_audio_decode
)(
chù_audio_t
 *
	gchù_audio
);

807 (*
	ggë_audio_ch™_drivî
)(
chù_audio_t
 *
	gchù_audio
, 
	gch™_id
, 
tw_audio_drivî_t
 **
	g±r_audio_drivî
);

810 
	#to_gë_chù_audio_wôh_audio_íabÀ
(
node
Ë
	`c⁄èöî_of
“ode, 
chù_audio_t
, 
audio_íabÀ
)

	)

811 
	#to_gë_chù_audio_wôh_audio_ícode
(
node
Ë
	`c⁄èöî_of
“ode, 
chù_audio_t
, 
audio_ícode
)

	)

812 
	#to_gë_chù_audio_wôh_audio_decode
(
node
Ë
	`c⁄èöî_of
“ode, 
chù_audio_t
, 
audio_decode
)

	)

813 
	schù_audio
 {

814 
audio_íabÀ_c⁄åﬁ_t
 
	gaudio_íabÀ
;

815 
chù_audio_ícode_t
 
	gaudio_ícode
;

816 
chù_audio_decode_t
 
	gaudio_decode
;

817 
dvm_chù_t
 *
	gchù
;

819 
chù_audio_›î©i⁄
 *
	g›
;

823 
tw_audio_c⁄fig_des¸ùt‹_t
 
deÁu…_audio_ícode_c⁄fig_des¸ùt‹
;

824 
tw_audio_c⁄fig_des¸ùt‹_t
 
deÁu…_audio_decode_c⁄fig_des¸ùt‹
;

826 
gë_powî_ba£
(
u32
 
vÆue
);

827 
öô_audio_íabÀ_c⁄åﬁ
(
audio_íabÀ_c⁄åﬁ_t
 *);

828 
öô_audio_pcm_ícode_±r_c⁄åﬁ
(
audio_pcm_ícode_±r_c⁄åﬁ_t
 *);

829 
öô_audio_pcm_ícode_d©a_addr
(
audio_pcm_ícode_d©a_addr_t
 *);

830 
öô_audio_adpcm_ícode_±r_c⁄åﬁ
(
audio_adpcm_ícode_±r_c⁄åﬁ_t
 *);

831 
öô_audio_adpcm_ícode_d©a_addr
(
audio_adpcm_ícode_d©a_addr_t
 *);

832 
öô_audio_ícode_c⁄åﬁ
(
audio_ícode_c⁄åﬁ_t
 *);

833 
öô_audio_decode_c⁄åﬁ
(
audio_decode_c⁄åﬁ_t
 *);

834 
öô_audio_decode_±r_c⁄åﬁ
(
audio_decode_±r_c⁄åﬁ_t
 *);

835 
öô_audio_decode_d©a_addr
(
audio_decode_d©a_addr_t
 *);

836 
öô_chù_audio_ícode
(
chù_audio_ícode_t
 *);

837 
öô_chù_audio_decode
(
chù_audio_decode_t
 *);

838 
öô_chù_audio
(
chù_audio_t
 *, 
dvm_chù_t
 *, );

839 
ªmove_chù_audio
(
chù_audio_t
 *
chù_audio
);

841 
öô_submô_ªcv_audio_bô°ªam_£rvi˚
(
d¥am_ªque°_t
 *
d¥am_ªq
, 
tw_audio_drivî_t
 *
audio_ch™_drivî
);

842 
öô_submô_£nd_audio_bô°ªam_£rvi˚
(
d¥am_ªque°_t
 *
d¥am_ªq
, 
tw_audio_drivî_t
 *
audio_ch™_drivî
);

844 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_avSync_device.h

1 #i‚de‡
TW_AVSYNC_DEVICE_H


2 
	#TW_AVSYNC_DEVICE_H


	)

4 #ifde‡
__˝lu•lus


9 
	#DEV_NAME_LEN
 32

	)

10 
	stw5864_avSync_dev


12 
«me
[
DEV_NAME_LEN
];

13 
bus_id
;

14 
chù_id
;

15 
dev_öode_id
;

16 
id
;

17 
video_devi˚
 
vfd
;

18 
£m≠h‹e
 
£m
;

19 
©omic_t
 
›íed_Êags
;

20 
waô_queue_hód_t
 
waô_pﬁl
;

22 
tw_h264_logic_ícode_ch™_t
 *
h264_ma°î_ícode_drivî
;

23 
tw_h264_logic_ícode_ch™_t
 *
h264_sub_ícode_drivî
;

24 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_ícode_drivî
;

25 
tw_audio_drivî_t
 *
audio_ícode_drivî
;

26 
tw_audio_drivî_t
 *
audio_decode_drivî
;

28 
avSync_‰ame_queue_t
 
avSync_‰ame_queue
;

29 
avSync_‰ame_buf_poﬁ_t
 
devi˚_buf_poﬁ
;

32 
öô_tw5864_avSync_dev
(
tw5864_avSync_dev_t
 *
dev
, 
bus_id
, 
chù_id
, 
öode_id
, 
id
);

33 
ªmove_tw5864_avSync_dev
(
tw5864_avSync_dev_t
 *
dev
);

34 
böd_av_devi˚_™d_drivî
(
tw5864_avSync_dev_t
 *
tw_devi˚_ch™
, 
tw_h264_logic_ícode_ch™_t
 *
h264_ma°î_ícode_logic_ch™
,Åw_h264_logic_ícode_ch™_à*
h264_sub_ícode_logic_ch™
, 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
, 
tw_audio_drivî_t
 *
audio_ícode_drivî
);

35 
unböd_av_devi˚_™d_drivî
(
tw5864_avSync_dev_t
 *
tw_devi˚_ch™
, 
tw_h264_logic_ícode_ch™_t
 *
h264_ma°î_ícode_logic_ch™
,Åw_h264_logic_ícode_ch™_à*
h264_sub_ícode_logic_ch™
, 
tw_j≥g_logic_ícode_ch™_t
 * 
j≥g_logic_ch™
, 
tw_audio_drivî_t
 *
audio_ícode_drivî
);

38 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_avSync_device_buf.h

1 #i‚def 
TW_AVSYNC_DEVICE_BUF_H


2 
	#TW_AVSYNC_DEVICE_BUF_H


	)

4 #ifde‡
__˝lu•lus


9 
	savSync_‰ame_buf_poﬁ_›î©i⁄
{

10 (*
¸óã
)(
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
, );

11 (*
ªÀa£
)(
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
);

13 (*
gë_avSync_‰ame_tcb
)(
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
, 
avSync_‰ame_tcb_t
 **
±r_‰ame
);

14 (*
åy_gë_avSync_‰ame_tcb
)(
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
, 
avSync_‰ame_tcb_t
 **
±r_‰ame
);

15 (*
put_avSync_‰ame_tcb
)(
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
, 
avSync_‰ame_tcb_t
 *
‰ame
);

16 (*
gë_avSync_‰ame_tcb_poﬁ_íåy_numbî
)(
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
);

19 
	savSync_‰ame_buf_poﬁ
{

20 
avSync_‰ame_íåy_numbî
;

21 
tcb_node_poﬁ_t
 
avSync_‰ame_poﬁ_node
;

22 
avSync_‰ame_tcb_t
 *
avSync_‰ame_poﬁ
;

24 
avSync_‰ame_buf_poﬁ_›î©i⁄
 *
›
;

27 
	savSync_‰ame_tcb_›î©i⁄
{

28 (*
öô
)(
avSync_‰ame_tcb_t
 *
‰ame
);

29 (*
ª£t
)(
avSync_‰ame_tcb_t
 *
‰ame
);

30 (*
ªÀa£
)(
avSync_‰ame_tcb_t
 **
±r_‰ame
, 
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
);

31 (*
ª„ªn˚
)(
avSync_‰ame_tcb_t
 *
§c_‰ame
,ávSync_‰ame_tcb_à**
±r_de°_‰ame
);

33 
size_t
 (*
submô
)(
avSync_‰ame_tcb_t
 *
avSync_‰ame
, 
__u£r
 *
d©a
, size_à
cou¡
, 
loff_t
 *
µos
, *
‰ame_íd
, 
tw5864_avSync_dev_t
 *
dev
);

36 
	#CURR_SUBMIT_IS_264_MASTER_FRAME
 (0)

	)

37 
	#CURR_SUBMIT_IS_264_MASTER_MV_FRAME
 (1)

	)

38 
	#CURR_SUBMIT_IS_264_SUB_FRAME
 (2)

	)

39 
	#CURR_SUBMIT_IS_264_SUB_MV_FRAME
 (3)

	)

40 
	#CURR_SUBMIT_IS_AUDIO_FRAME
 (4)

	)

41 
	#CURR_SUBMIT_IS_JPEG_FRAME
 (5)

	)

42 
	#to_gë_avSync_‰ame_tcb
(
node
Ë
	`c⁄èöî_of
“ode, 
avSync_‰ame_tcb_t
, 
‰ame_node
)

	)

43 
	savSync_‰ame_tcb
{

44 
©omic_t
 
ªf_cou¡
;

45 
•ölock_t
 
lock
;

46 
tcb_node_t
 
‰ame_node
;

48 
cuº_submô_tcb
;

49 
tw_video_‰ame_tcb_t
 *
h264_ma°î_‰ame
;

50 #ifde‡ 
MV_MODULE


51 
tw_video_mv_‰ame_tcb_t
 *
h264_ma°î_mv_‰ame
;

53 
tw_video_‰ame_tcb_t
 *
h264_sub_‰ame
;

54 #ifde‡ 
MV_MODULE


55 
tw_video_mv_‰ame_tcb_t
 *
h264_sub_mv_‰ame
;

57 
tw_audio_∑ckë_£˘i⁄_t
 *
audio_ícode_‰ame
;

58 
tw_audio_∑ckë_£˘i⁄_t
 *
audio_decode_‰ame
;

59 #ifde‡
MJPEG_MODULE


60 
tw_vb_‰ame_tcb_t
 *
j≥g_‰ame
;

62 
avSync_‰ame_tcb_›î©i⁄
 *
›
;

65 
	savSync_‰ame_queue_›î©i⁄
{

66 (*
gë
)(
avSync_‰ame_queue_t
 *, 
avSync_‰ame_tcb_t
 **);

67 (*
åy_gë
)(
avSync_‰ame_queue_t
 *, 
avSync_‰ame_tcb_t
 **);

68 (*
gë_èûî
)(
avSync_‰ame_queue_t
 *, 
avSync_‰ame_tcb_t
 **);

69 (*
åy_gë_èûî
)(
avSync_‰ame_queue_t
 *, 
avSync_‰ame_tcb_t
 **);

70 (*
put
)(
avSync_‰ame_queue_t
 *, 
avSync_‰ame_tcb_t
 *);

71 (*
put_hódî
)(
avSync_‰ame_queue_t
 *, 
avSync_‰ame_tcb_t
 *);

73 (*
gë_cuº_¥odu˚r_‰om_poﬁ
)(
avSync_‰ame_queue_t
 *, 
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
);

74 (*
åy_gë_cuº_¥odu˚r_‰om_poﬁ
)(
avSync_‰ame_queue_t
 *, 
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
);

75 (*
put_cuº_¥odu˚r_öto_queue
)(
avSync_‰ame_queue_t
 *);

76 (*
ªÀa£_cuº_¥odu˚r
)(
avSync_‰ame_queue_t
 *, 
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
);

77 (*
gë_cuº_c⁄sumî_‰om_queue
)(
avSync_‰ame_queue_t
 *);

78 (*
åy_gë_cuº_c⁄sumî_‰om_queue
)(
avSync_‰ame_queue_t
 *);

79 (*
ªÀa£_cuº_c⁄sumî
)(
avSync_‰ame_queue_t
 *, 
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
);

81 (*
gë_cuº_queue_íåy_numbî
)(
avSync_‰ame_queue_t
 *);

82 (*
ªÀa£
)(
avSync_‰ame_queue_t
 *, 
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
);

83 (*
öô
)(
avSync_‰ame_queue_t
 *);

86 
	savSync_‰ame_queue
{

87 
u32
 
°¨t_time°amp
, 
tŸÆ_duøti⁄
;

88 
tcb_node_queue_t
 
queue_node
;

89 
avSync_‰ame_tcb_t
 *
cuº_c⁄sumî
;

90 
avSync_‰ame_tcb_t
 *
cuº_¥odu˚r
;

91 
•ölock_t
 
lock
;

93 
avSync_‰ame_queue_›î©i⁄
 *
›
;

96 
öô_avSync_‰ame_queue
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
);

97 
ªmove_avSync_‰ame_queue
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
, 
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
);

98 
öô_avSync_‰ame_buf_poﬁ
(
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
);

99 
ªmove_avSync_‰ame_buf_poﬁ
(
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
);

102 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_chip_ai.h

1 #i‚de‡
_TW_CHIP_AI_H__


2 
	#_TW_CHIP_AI_H__


	)

4 #ifde‡
__˝lu•lus


8 
	#TW_DRIVER_AI_IOC_MAGIC
 'H'

	)

10 
	#TW_AI_SET_AUDIO_SYS_PARM
 
	`_IOW
(
TW_DRIVER_AI_IOC_MAGIC
, 49, )

	)

11 
	#TW_AI_GET_AUDIO_SYS_PARM
 
	`_IOR
(
TW_DRIVER_AI_IOC_MAGIC
, 48, )

	)

12 
	#TW_AI_GET_AUDIO_CHN_PARM
 
	`_IOR
(
TW_DRIVER_AI_IOC_MAGIC
, 47, )

	)

13 
	#TW_AI_SET_AUDIO_GAIN
 
	`_IOW
(
TW_DRIVER_AI_IOC_MAGIC
, 02, )

	)

14 
	#TW_AI_MAX_CHNL
 (4)

	)

16 
	#TW_AI_CLOCK_MODE
 (0x06c)

	)

17 
	#TW_AI_SYNC_MODE
 (0x062)

	)

18 
	#TW_AI_BITS
 (0x06c)

	)

19 
	#TW_AI_SAMPLE_RATE
 (0x075)

	)

21 
	#TW_AI_GAIN_21
 (0x060)

	)

22 
	#TW_AI_GAIN_43
 (0x061)

	)

23 
	#MAX_AI_GAIN
 (15)

	)

24 
	#DEFAULT_AI_GAIN
 (8)

	)

25 
	#MIN_AI_GAIN
 (0)

	)

27 
	#to_gë_chù_ai_drivî_wôh_›íed_logic_ch™_ed
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_chù_ai_drivî_t
, 
›íed_ai_ed
)

	)

29 
	eAUDIO_SYNC_MODE
{

30 
AUDIO_SYNC_MODE_I2S
 = 0,

31 
AUDIO_SYNC_MODE_DSP
,

34 
	eAUDIO_CLOCK_MODE
{

35 
AUDIO_CLOCK_SLAVE
 = 0,

36 
AUDIO_CLOCK_MASTER
,

39 
tw_chù_ai_drivî
 
	ttw_chù_ai_drivî_t
;

40 
tw_chù_ai_›î©i⁄
 
	ttw_chù_ai_›î©i⁄_t
;

41 
tw_chù_ai_¥›îty
 
	ttw_chù_ai_¥›îty_t
;

42 
tw_chù_ai_¥›îty_›î©i⁄
 
	ttw_chù_ai_¥›îty_›î©i⁄_t
;

43 
tw_chù_ai_c⁄fig_¥›îty
 
	ttw_chù_ai_c⁄fig_¥›îty_t
;

45 
	stw_chù_ai_sys
{

46 
u32
 
ch™gemask
;

47 
	#TW_CHIP_AI_CHANGEMASK_CLOCK_MODE
 (0x0001)

	)

48 
	#TW_CHIP_AI_CHANGEMASK_SYNC_MODE
 (0x0002)

	)

49 
	#TW_CHIP_AI_CHANGEMASK_SAMPLE_RATE
 (0x0004)

	)

50 
	#TW_CHIP_AI_CHANGEMASK_BITS
 (0x0008)

	)

51 
	#TW_CHIP_AI_CHANGEMASK_MASKALL
 (0x000f)

	)

53 
AUDIO_CLOCK_MODE
 
˛ock_mode
;

54 
AUDIO_SYNC_MODE
 
sync_mode
;

55 
TW_AUDIO_SAMPLE_RATE
 
ßm∂e_øã
;

56 
TW_AUDIO_BIT
 
bôs
;

61 
u32ChùID
;

62 
u32Ch™√l
;

63 
u32Vﬁume
;

64 } 
	tAI_CH_VOLUME
;

66 
	stw_chù_ai_¥›îty
{

67 
u32
 
ch™√l
;

68 
u32
 
ch™gemask
;

69 
	#TW_CHIP_AI_CHANGEMASK_GAIN
 (0x0001)

	)

70 
u32
 
gaö
;

73 
	stw_chù_ai_¥›îty_›î©i⁄
{

74 (*
öô
)(
tw_chù_ai_¥›îty_t
 *, 
u32
);

75 (*
ª£t
)(
tw_chù_ai_¥›îty_t
 *);

77 
u32
 (*
gë_gaö
)(
tw_chù_ai_¥›îty_t
 *);

78 (*
£t_gaö
)(
tw_chù_ai_¥›îty_t
 *, 
u32
);

79 (*
upd©e
)(
tw_chù_ai_¥›îty_t
 *, 
dvm_chù_t
 *
chù
);

82 
	stw_chù_ai_c⁄fig_¥›îty
{

83 
tw_chù_ai_¥›îty_t
 
audio_¥›îty
;

84 
tw_chù_ai_¥›îty_›î©i⁄_t
 *
›
;

87 
	stw_chù_ai_›î©i⁄
{

88 (*
öô
)(
tw_chù_ai_drivî_t
 *);

89 (*
ªÀa£
)(
tw_chù_ai_drivî_t
 *);

90 (*
ª£t
)(
tw_chù_ai_drivî_t
 *);

92 (*
gë_˛ock_mode
)(
tw_chù_ai_drivî_t
 *);

93 (*
£t_˛ock_mode
)(
tw_chù_ai_drivî_t
 *, 
AUDIO_CLOCK_MODE
);

94 (*
gë_sync_mode
)(
tw_chù_ai_drivî_t
 *);

95 (*
£t_sync_mode
)(
tw_chù_ai_drivî_t
 *, 
AUDIO_SYNC_MODE
);

96 (*
gë_ßm∂e_øã
)(
tw_chù_ai_drivî_t
 *);

97 (*
£t_ßm∂e_øã
)(
tw_chù_ai_drivî_t
 *, 
TW_AUDIO_SAMPLE_RATE
);

98 (*
gë_bôs
)(
tw_chù_ai_drivî_t
 *);

99 (*
£t_bôs
)(
tw_chù_ai_drivî_t
 *, 
TW_AUDIO_BIT
);

102 
	stw_chù_ai_drivî
{

103 
©omic_t
 
›íed_Êag
;

104 
ed_tcb_t
 
›íed_ai_ed
;

106 
dvm_chù_t
 *
chù
;

108 
AUDIO_CLOCK_MODE
 
˛ock_mode
;

109 
AUDIO_SYNC_MODE
 
sync_mode
;

110 
TW_AUDIO_SAMPLE_RATE
 
ßm∂e_øã
;

111 
TW_AUDIO_BIT
 
bôs
;

113 
tw_chù_ai_c⁄fig_¥›îty_t
 
audio_¥›îty
[
TW_AI_MAX_CHNL
];

115 
tw_chù_ai_›î©i⁄_t
 *
›
;

118 
öô_chù_ai_drivî
(
tw_£rvi˚_devi˚
 *
tsd
,
dvm_chù_t
 *
chù
);

119 
ªmove_chù_ai_drivî
(
tw_£rvi˚_devi˚
 *
tsd
);

120 
tw5864_chù_ai_drivî_öô
(* 
∑ø
);

121 
tw5864_chù_ai_drivî_ªmove
();

123 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_chip_ao.h

1 #i‚de‡
_TW_CHIP_AO_H__


2 
	#_TW_CHIP_AO_H__


	)

4 #ifde‡
__˝lu•lus


9 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_chip_driver.h

1 #i‚de‡
__TW_CHIP_DRIVER_H__


2 
	#__TW_CHIP_DRIVER_H__


	)

4 #ifde‡
__˝lu•lus


9 
	#TW_CHIP_IOC_MAGIC
 'H'

	)

12 
	#TW_CHIP_VD_WORK_MODE_SET
 
	`_IOW
(
TW_CHIP_IOC_MAGIC
, 255, )

	)

13 
	#TW_CHIP_VD_WORK_MODE_GET
 
	`_IOR
(
TW_CHIP_IOC_MAGIC
, 254, )

	)

16 
	#TW_VIDEO_BUS_PARAM_SET
 
	`_IOR
(
TW_CHIP_IOC_MAGIC
, 253, )

	)

17 
	#TW_VIDEO_BUS_PARAM_GET
 
	`_IOR
(
TW_CHIP_IOC_MAGIC
, 252, )

	)

18 
	#TW_CHIP_VD_CONFIG_PARAM_SET
 
	`_IOR
(
TW_CHIP_IOC_MAGIC
, 251, )

	)

19 
	#TW_CHIP_VD_CONFIG_PARAM_GET
 
	`_IOR
(
TW_CHIP_IOC_MAGIC
, 250, )

	)

20 
	#TW_CHIP_AUDIO_ENCODE_PARAM_SET
 
	`_IOR
(
TW_CHIP_IOC_MAGIC
, 249, )

	)

21 
	#TW_CHIP_AUDIO_ENCODE_PARAM_GET
 
	`_IOW
(
TW_CHIP_IOC_MAGIC
, 248, )

	)

22 
	#TW_CHIP_AUDIO_DECODE_PARAM_SET
 
	`_IOR
(
TW_CHIP_IOC_MAGIC
, 247, )

	)

23 
	#TW_CHIP_AUDIO_DECODE_PARAM_GET
 
	`_IOW
(
TW_CHIP_IOC_MAGIC
, 246, )

	)

24 
	#TW_CHIP_CREATE_CHAN
 
	`_IOW
(
TW_CHIP_IOC_MAGIC
, 245, )

	)

25 
	#TW_CHIP_RELEASE_CHAN
 
	`_IOW
(
TW_CHIP_IOC_MAGIC
, 244, )

	)

26 
	#TW_CHIP_ID_GET
 
	`_IOR
(
TW_CHIP_IOC_MAGIC
, 243, )

	)

27 
	#TW_CHIP_CTL_OP
 
	`_IOW
(
TW_CHIP_IOC_MAGIC
, 200, )

	)

28 
	#TW_CHIP_CONFIG_WRITE_REG
 
	`_IOW
(
TW_CHIP_IOC_MAGIC
, 201, )

	)

29 
	#TW_CHIP_CONFIG_READ_REG
 
	`_IOR
(
TW_CHIP_IOC_MAGIC
, 202, )

	)

30 
	#TW_CHIP_VIN_CHAN_NUMBER_GET
 
	`_IOR
(
TW_CHIP_IOC_MAGIC
, 203, )

	)

31 
	#TW_CHIP_VOUT_CHAN_NUMBER_GET
 
	`_IOR
(
TW_CHIP_IOC_MAGIC
, 204, )

	)

32 
	#TW_CHIP_AIN_CHAN_NUMBER_GET
 
	`_IOR
(
TW_CHIP_IOC_MAGIC
, 205, )

	)

33 
	#TW_CHIP_AOUT_CHAN_NUMBER_GET
 
	`_IOR
(
TW_CHIP_IOC_MAGIC
, 206, )

	)

34 
	#TW_CHIP_LOGIC_MAP_TABLE_SET
 
	`_IOW
(
TW_CHIP_IOC_MAGIC
, 207, )

	)

35 
	#TW_CHIP_LOGIC_MAP_TABLE_GET
 
	`_IOW
(
TW_CHIP_IOC_MAGIC
, 208, )

	)

36 
	#TW_CHIP_VD_CHNL_CONFIG_GET
 
	`_IOR
(
TW_CHIP_IOC_MAGIC
, 209, )

	)

37 
	#TW_CHIP_VD_CHNL_CONFIG_SET
 
	`_IOR
(
TW_CHIP_IOC_MAGIC
, 210, )

	)

40 
	#TW_VIDEO_BUS_PARAM_ENABLE_CHANGE_VIDEO_STANDARD_MASK
 (0x00000001)

	)

42 
	#TW_CHIP_AUDIO_ENCODE_PARAM_ENABLE_CHANGE_BIT_WIDE_MASK
 (0x00000001)

	)

43 
	#TW_CHIP_AUDIO_ENCODE_PARAM_ENABLE_CHANGE_SAMPLE_RATE_MASK
 (0x00000002)

	)

44 
	#TW_CHIP_AUDIO_ENCODE_PARAM_ENABLE_CHANGE_ENCODE_TYPE_MASK
 (0x00000004)

	)

46 
	#TW_CHIP_AUDIO_DECODE_PARAM_ENABLE_CHANGE_BIT_WIDE_MASK
 (0x00000001)

	)

47 
	#TW_CHIP_AUDIO_DECODE_PARAM_ENABLE_CHANGE_SAMPLE_RATE_MASK
 (0x00000002)

	)

48 
	#TW_CHIP_AUDIO_DECODE_PARAM_ENABLE_CHANGE_ENCODE_TYPE_MASK
 (0x00000004)

	)

51 
	#to_gë_chù_drivî_wôh_›íed_logic_ch™_ed
(
node
Ë
	`c⁄èöî_of
“ode, 
chù_drivî_t
, 
›íed_c⁄åﬁ_ed
)

	)

53 
	eTW_AUDIO_SAMPLE_RATE
{

54 
TW_AUDIO_8000
 = 0,

55 
TW_AUDIO_16000
,

56 
TW_AUDIO_32000
,

57 
TW_AUDIO_44100
,

58 
TW_AUDIO_48000
,

59 
TW_AUDIO_RESERVED
,

62 
	eTW_AUDIO_BIT
{

63 
TW_AUDIO_16BIT
 = 0,

64 
TW_AUDIO_8BIT
,

67 
tw_chù_video_∑øm
 
	ttw_chù_video_∑øm_t
;

68 
video_bus_›î©i⁄
 
	tvideo_bus_›î©i⁄_t
;

69 
tw_video_bus
 
	ttw_video_bus_t
;

70 
audio_bus_›î©i⁄
 
	taudio_bus_›î©i⁄_t
;

71 
tw_audio_bus
 
	ttw_audio_bus_t
;

72 
chù_drivî_›î©i⁄
 
	tchù_drivî_›î©i⁄_t
;

73 
chù_drivî
 
	tchù_drivî_t
;

74 
tw_logic_m≠_èbÀ
 
	ttw_logic_m≠_èbÀ_t
;

75 
tw_logic_phy_èbÀ
 
	ttw_logic_phy_èbÀ_t
;

76 
tw_logic_phy_›î©i⁄
 
	ttw_logic_phy_›î©i⁄_t
;

78 
	eTW_AUDIO_TYPE
{

79 
TW_AUDIO_PCM
 = 0,

80 
TW_AUDIO_ALAW
,

81 
TW_AUDIO_ULAW
,

82 
TW_AUDIO_ADPCM_32K
,

83 
TW_AUDIO_ADPCM_16K
,

84 
TW_AUDIO_ADPCM_48K


87 
	eTW_VIDEO_MD_TRIGGER_MODE
{

88 
VIDEO_MD_TRIGGER_AUTO
 = 0,

89 
VIDEO_MD_TRIGGER_USER
,

92 
	eTW_VIDEO_MD_SEL
{

93 
TW_VIDEO_MD_ODD
 = 0,

94 
TW_VIDEO_MD_EVEN
,

95 
TW_VIDEO_MD_BOTH
,

98 
	eTW_VIDEO_MD_REF
{

99 
TW_VIDEO_MD_REF_AUTO
,

100 
TW_VIDEO_MD_REF_USER
,

103 
	stw_ªg_c⁄f
{

104 
u32
 
addr
;

105 
u32
 
vÆ
;

108 
	stw_video_md_∑øm
{

112 
	stw_chù_vi_öfo
{

113 
u32
 
i_vö_ch™_nubmî
;

114 
u32
 
i_vö_ad_ch™_numbî
;

115 
u32
 
i_ˇsˇde_vö_ad_ch™_numbî
;

117 
	stw_chù_vo_öfo
{

118 
u32
 
i_vout_ch™_nubmî
;

119 
u32
 
i_vout_ad_ch™_numbî
;

121 
	stw_chù_ai_öfo
{

122 
u32
 
i_aö_ch™_nubmî
;

123 
u32
 
i_aö_ad_ch™_numbî
;

124 
u32
 
i_ˇsˇde_aö_ad_ch™_numbî
;

126 
	stw_chù_ao_öfo
{

127 
u32
 
i_aout_ch™_nubmî
;

128 
u32
 
i_aout_ad_ch™_numbî
;

131 
	stw_chù_id_öfo
{

132 
u32
 
i_víd‹_id
;

133 
u32
 
i_vîsi⁄_id
;

136 
	stw_chù_audio_∑øm
{

137 
u32
 
ch™ge_mask_Êag
;

138 
u32
 
ch™√l
;

139 
u8
 
i_bô_wide
;

140 
u8
 
i_ßm∂e_øã
;

141 
u16
 
e_audio_ty≥
;

144 
	eLOGIC_MAP_TABLE_TYPE
{

145 
LOGIC_MAP_TABLE_BIND_H264E
 = 0,

146 
LOGIC_MAP_TABLE_BIND_H264D
,

147 
LOGIC_MAP_TABLE_BIND_AENC
,

148 
LOGIC_MAP_TABLE_BIND_ADEC
,

149 
LOGIC_MAP_TABLE_BIND_JPEGE
,

150 
LOGIC_MAP_TABLE_BIND_RESERVED
,

153 
	stw_logic_m≠_èbÀ
{

154 
u32
 
i_ch™_numbî
;

155 
LOGIC_MAP_TABLE_TYPE
 
e_böd_ty≥
;

158 #i‡
deföed
(
__BIG_ENDIAN_BITFIELD
)

159 
u32
 
logic_¶Ÿ_id
:16;

160 
u32
 
phy_¶Ÿ_id
:16;

161 #ñi‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

162 
u32
 
phy_¶Ÿ_id
:16;

163 
u32
 
logic_¶Ÿ_id
:16;

167 }
m≠_èbÀ
[0];

170 
	stw_logic_phy_›î©i⁄
{

171 (*
öô
)(
tw_logic_phy_èbÀ_t
 *);

172 (*
ª£t
)(
tw_logic_phy_èbÀ_t
 *);

173 (*
ªÀa£
)(
tw_logic_phy_èbÀ_t
 *);

175 (*
föd_logic_by_phy
)(
tw_logic_phy_èbÀ_t
 *, 
LOGIC_MAP_TABLE_TYPE
, 
u32
, u32 *);

176 (*
föd_phy_by_logic
)(
tw_logic_phy_èbÀ_t
 *, 
LOGIC_MAP_TABLE_TYPE
, 
u32
, u32 *);

177 (*
upd©e_m≠_èbÀ
)(
tw_logic_phy_èbÀ_t
 *, 
LOGIC_MAP_TABLE_TYPE
, 
tw_logic_m≠_èbÀ_t
 *);

178 (*
gë_m≠_èbÀ
)(
tw_logic_phy_èbÀ_t
 *, 
LOGIC_MAP_TABLE_TYPE
, 
tw_logic_m≠_èbÀ_t
 *);

181 
	stw_logic_phy_èbÀ
{

182 
•ölock_t
 
lock
;

183 
tw_logic_m≠_èbÀ_t
 *
logic_èlbe
[
LOGIC_MAP_TABLE_BIND_RESERVED
];

185 
tw_logic_phy_›î©i⁄_t
 *
›
;

188 
	stw_chù_video_∑øm
{

189 
u32
 
ch™ge_mask_Êag
;

190 
TW_VIDEO_STANDARD
 
e_video_°™d¨d
;

193 
	stw_vd_ch™_∑øm
{

194 
u32
 
ch™ge_mask_Êag
;

195 
u8
 
i_phy_ch™_id
;

196 
u8
 
i_phy_ch™_íabÀ
;

197 
u8
 
i_phy_ch™_Âs
;

198 
u8
 
i_ª£rve
;

199 
u32
 
h‹_ªvî£
;

200 
u32
 
vî_ªvî£
;

201 
u16
 
i_phy_video_width_mb_size
;

202 
u16
 
i_phy_video_height_mb_size
;

205 
	stw_chù_vd_∑øm
{

206 
u32
 
i_vd_ch™_numbî
;

207 
tw_vd_ch™_∑øm
 
vd_ch™_∑øm
[
TW5864_PHY_VD_CHAN_NUMBER
];

210 
	svideo_bus_›î©i⁄
{

211 (*
öô
)(
tw_video_bus_t
 *, 
dvm_chù_t
 *);

212 (*
ªÀa£
)(
tw_video_bus_t
 *);

213 (*
ª£t
)(
tw_video_bus_t
 *);

215 (*
gë_video_°™d¨d
)(
tw_video_bus_t
 *);

216 (*
£t_video_°™d¨d
)(
tw_video_bus_t
 *, );

217 (*
nŸify_logic_ch™_ch™ge
)(
tw_video_bus_t
 *);

218 (*
nŸify_su•íd_logic_ch™
)(
tw_video_bus_t
 *);

219 (*
nŸify_ªsume_logic_ch™
)(
tw_video_bus_t
 *);

222 
	stw_video_bus
{

223 
tw_chù_video_∑øm_t
 
video_∑øm
;

225 
tw5864_vd_¸oss_bus_t
 *
vd_bus_drivî
;

226 
tw5864_vj_bus_t
 *
vj_bus_drivî
;

228 
video_bus_›î©i⁄_t
 *
›
;

231 
	saudio_bus_›î©i⁄
{

232 (*
öô
)(
tw_audio_bus_t
 *, 
dvm_chù_t
 *);

233 (*
ªÀa£
)(
tw_audio_bus_t
 *);

234 (*
ª£t
)(
tw_audio_bus_t
 *);

237 
	stw_audio_bus
{

238 
chù_audio_t
 *
chù_audio_drivî
;

240 
audio_bus_›î©i⁄_t
 *
›
;

243 
	schù_drivî_›î©i⁄
{

244 (*
öô
)(
chù_drivî_t
 *);

245 (*
ªÀa£
)(
chù_drivî_t
 *);

246 (*
ª£t
)(
chù_drivî_t
 *);

249 
	schù_drivî
{

250 
©omic_t
 
›íed_Êag
;

251 
ed_tcb_t
 
›íed_c⁄åﬁ_ed
;

253 
dvm_chù_t
 *
chù
;

254 
tw_video_bus_t
 
video_bus
;

255 
tw_audio_bus_t
 
audio_bus
;

256 
tw_logic_phy_èbÀ_t
 
logic_m≠_phy
;

258 
chù_drivî_›î©i⁄_t
 *
›
;

262 
tw5864_chù_drivî_öô
();

263 
tw5864_chù_drivî_ªmove
();

267 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_chip_vi.h

1 #i‚de‡
_TW_CHIP_VI_H__


2 
	#_TW_CHIP_VI_H__


	)

4 #ifde‡
__˝lu•lus


8 
	#TW_DRIVER_VI_IOC_MAGIC
 'H'

	)

10 
	#TW_VI_SET_VIDEO_AD_PARM
 
	`_IOW
(
TW_DRIVER_VI_IOC_MAGIC
, 51, )

	)

11 
	#TW_VI_GET_VIDEO_AD_PARM
 
	`_IOR
(
TW_DRIVER_VI_IOC_MAGIC
, 52, )

	)

12 
	#TW_VI_GET_FEATURE
 
	`_IOR
(
TW_DRIVER_VI_IOC_MAGIC
, 147, )

	)

13 
	#TW_VI_SET_FEATURE
 
	`_IOW
(
TW_DRIVER_VI_IOC_MAGIC
, 146, )

	)

14 
	#TW_VI_GET_VIDEO_STANDARD
 
	`_IOR
(
TW_DRIVER_VI_IOC_MAGIC
, 145, )

	)

16 
	#TW_VI_SET_VIDEO_TYPE
 
	`_IOW
(
TW_DRIVER_VI_IOC_MAGIC
, 55, )

	)

18 
	#TW_VI_MAX_CHNL
 (16)

	)

19 
	#TW_VI_ON_CHIP_CHNL
 (4Ë

	)

21 
	#TW_VI_BRIGHNESS
 (0x00A)

	)

22 
	#TW_VI_CONTRAST
 (0x009)

	)

23 
	#TW_VI_SATURATION_U
 (0x00B)

	)

24 
	#TW_VI_SATURATION_V
 (0x00C)

	)

25 
	#TW_VI_HUE
 (0x007)

	)

26 
	#TW_VI_SHARPNESS
 (0x008)

	)

28 
	#TW_VI_STANDARD
 (0x00e)

	)

31 
	#TW_VI_SYSTEM_RESET
 (0xef0)

	)

32 
	#TW_VI_SYSTEM_CLOCK
 (0xefc)

	)

33 
	#TW_VI_SYSTEM_CLOCK_REVERSE
 (0xefdË

	)

34 
	#TW_VI_SYSTEM_VIDEO_STANDARD
 (0x260Ë

	)

35 
	#TW_VI_SYSTEM_IN_WIDTH
(
n
Ë(0x200 + (n<<2)Ë

	)

36 
	#TW_VI_SYSTEM_IN_HEIGHT
(
n
Ë(0x201 + (n<<2)Ë

	)

37 
	#TW_VI_SYSTEM_OUT_WIDTH
(
n
Ë(0x202 + (n<<2)Ë

	)

38 
	#TW_VI_SYSTEM_OUT_HEIGHT
(
n
Ë(0x203 + (n<<2)Ë

	)

41 
	#TW_VI_EVENT_CONTROL
(
n
Ë(0x300 + (n<<3))

	)

42 
	#TW_VI_EVENT_MD_TMPSENS
(
n
Ë(0x301 + (n<<3)Ë

	)

43 
	#TW_VI_EVENT_MD_FIELD
(
n
Ë(0x302 + (n<<3)Ë

	)

44 
	#TW_VI_EVENT_MD_CELL
(
n
Ë(0x303 + (n<<3)Ë

	)

45 
	#TW_VI_EVENT_MD_SPSENS
(
n
Ë(0x304 + (n<<3)Ë

	)

46 
	#TW_VI_EVENT_ND_TMPSENS
(
n
Ë(0x305 + (n<<3)Ë

	)

49 
	#TW_VI_EVENT_MOTION_L
 (0x2d0)

	)

50 
	#TW_VI_EVENT_MOTION_H
 (0x2d1)

	)

51 
	#TW_VI_EVENT_NIGHT_L
 (0x2d2)

	)

52 
	#TW_VI_EVENT_NIGHT_H
 (0x2d3)

	)

53 
	#TW_VI_EVENT_BLIND_L
 (0x2d4)

	)

54 
	#TW_VI_EVENT_BLIND_H
 (0x2d5)

	)

55 
	#TW_VI_EVENT_NOVIDEO_L
 (0x2d6)

	)

56 
	#TW_VI_EVENT_NOVIDEO_H
 (0x2d7)

	)

57 
	#TW_VI_EVENT_UNDERFLOW_L
 (0x2e0)

	)

58 
	#TW_VI_EVENT_UNDERFLOW_H
 (0x2e1)

	)

59 
	#TW_VI_EVENT_OVERFLOW_L
 (0x2e2)

	)

60 
	#TW_VI_EVENT_OVERFLOW_H
 (0x2e3)

	)

62 
	#TW_VI_EVENT_MASK_MOTION_L
 (0x2d8)

	)

63 
	#TW_VI_EVENT_MASK_MOTION_H
 (0x2d9)

	)

64 
	#TW_VI_EVENT_MASK_NIGHT_L
 (0x2da)

	)

65 
	#TW_VI_EVENT_MASK_NIGHT_H
 (0x2db)

	)

66 
	#TW_VI_EVENT_MASK_BLIND_L
 (0x2dc)

	)

67 
	#TW_VI_EVENT_MASK_BLIND_H
 (0x2dd)

	)

68 
	#TW_VI_EVENT_MASK_NOVIDEO_L
 (0x2de)

	)

69 
	#TW_VI_EVENT_MASK_NOVIDEO_H
 (0x2df)

	)

70 
	#TW_VI_EVENT_MASK_UNDERFLOW_L
 (0x2e8)

	)

71 
	#TW_VI_EVENT_MASK_UNDERFLOW_H
 (0x2e9)

	)

72 
	#TW_VI_EVENT_MASK_OVERFLOW_L
 (0x2ó)

	)

73 
	#TW_VI_EVENT_MASK_OVERFLOW_H
 (0x2eb)

	)

75 
	#TW_VI_EVENT_SUMMARY_L
 (0x2f0)

	)

76 
	#TW_VI_EVENT_SUMMARY_H
 (0x2f1)

	)

78 
	#CHIP_VI_EVENT_MIN_SENSITIVE
 (0Ë

	)

79 
	#CHIP_VI_EVENT_MAX_SENSITIVE
 (15Ë

	)

81 
	eCHIP_VI_STANDARD
 {

82 
CHIP_VI_STANDARD_NTSC_M
,

83 
CHIP_VI_STANDARD_PAL_BDGHI
,

84 
CHIP_VI_STANDARD_SECAM
,

85 
CHIP_VI_STANDARD_NTSC443
,

86 
CHIP_VI_STANDARD_PAL_M
,

87 
CHIP_VI_STANDARD_PAL_CN
,

88 
CHIP_VI_STANDARD_PAL_60
,

89 
CHIP_VI_STANDARD_INVALID
,

90 
CHIP_VI_STANDARD_AUTO
,

93 
	#DEFAULT_VI_STANDARD
 
CHIP_VI_STANDARD_AUTO


	)

95 
	eCHIP_VI_EVENT
{

96 
CHIP_VI_EVENT_MOTION
 = 0,

97 
CHIP_VI_EVENT_NIGHT
,

98 
CHIP_VI_EVENT_BLIND
,

99 
CHIP_VI_EVENT_LOST
,

100 
CHIP_VI_EVENT_UNDERFLOW
,

101 
CHIP_VI_EVENT_OVERFLOW
,

102 
CHIP_VI_EVENT_RESERVED
,

105 
	eMOTION_TRIGGER_MODE
{

106 
MOTION_TRIGGER_AUTIO
 = 0,

107 
MOTION_TRIGGER_USER
,

108 
MOTION_TRIGGER_RESERVED
,

111 
tw_chù_vi_„©uª
 
	ttw_chù_vi_„©uª_t
;

112 
tw_chù_vi_¥›îty_›î©i⁄
 
	ttw_chù_vi_¥›îty_›î©i⁄_t
;

113 
tw_chù_vi_c⁄fig_¥›îty
 
	ttw_chù_vi_c⁄fig_¥›îty_t
;

114 
tw_chù_vi_¥›îty
 
	ttw_chù_vi_¥›îty_t
;

115 
tw_chù_vi_›î©i⁄
 
	ttw_chù_vi_›î©i⁄_t
;

116 
tw_vi_evít_a˘i⁄
 
	ttw_vi_evít_a˘i⁄_t
;

117 
tw_chù_vi_evít
 
	ttw_chù_vi_evít_t
;

118 
tw_chù_vi_drivî
 
	ttw_chù_vi_drivî_t
;

119 (*
evít_h™dÀr
)(
	tu32
, *);

121 
	#to_gë_chù_vi_drivî_wôh_›íed_logic_ch™_ed
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_chù_vi_drivî_t
, 
›íed_vi_ed
)

	)

123 
	#MAX_VI_BRIGHNESS
 (255)

	)

124 
	#DEFAULT_VI_BRIGHTNESS
 (128)

	)

125 
	#MIN_VI_BRIGHNESS
 (0)

	)

127 
	#MAX_VI_CONTRAST
 (255)

	)

128 
	#DEFAULT_VI_CONTRAST
 (100)

	)

129 
	#MIN_VI_CONTRAST
 (0)

	)

131 
	#MAX_VI_SATURATION
 (255)

	)

132 
	#DEFAULT_VI_SATURATION
 (128)

	)

133 
	#MIN_VI_SATURATION
 (0)

	)

135 
	#MAX_VI_HUE
 (255)

	)

136 
	#DEFAULT_VI_HUE
 (128)

	)

137 
	#MIN_VI_HUE
 (0)

	)

139 
	#MAX_VI_SHARPNESS
 (15)

	)

140 
	#DEFAULT_VI_SHARPNESS
 (1)

	)

141 
	#MIN_VI_SHARPNESS
 (0)

	)

143 
	#TW_VI_FEATURE_ENABLE_CHANGE_MODE_MASK
 (0x01)

	)

144 
	#TW_VI_FEATURE_ENABLE_CHANGE_MOTION_MASK
 (0x02)

	)

145 
	#TW_VI_FEATURE_ENABLE_CHANGE_NIGHT_MASK
 (0x04)

	)

146 
	#TW_VI_FEATURE_ENABLE_CHANGE_BLIND_MASK
 (0x08)

	)

147 
	#TW_VI_FEATURE_ENABLE_CHANGE_NOVIDEO_MASK
 (0x010)

	)

148 
	#TW_VI_FEATURE_ENABLE_CHANGE_UNDERFLOW_MASK
 (0x020)

	)

149 
	#TW_VI_FEATURE_ENABLE_CHANGE_OVERFLOW_MASK
 (0x040)

	)

150 
	#TW_VI_FEATURE_ENABLE_CHANGE_MASK_ALL
 (0x07f)

	)

152 
	#TW_VI_FEATURE_ON
 (1)

	)

153 
	#TW_VI_FEATURE_OFF
 (0)

	)

155 
	stw_chù_vi_„©uª
{

156 
u32
 
ch™√l
;

157 
u32
 
ch™ge_mask
;

159 
MOTION_TRIGGER_MODE
 
e_mŸi⁄_mode
;

160 
u32
 
i_mŸi⁄_£nsôive
;

161 
u32
 
i_night_£nsôive
;

162 
u32
 
i_blöd_£nsôive
;

164 
u8
 
b_novideo_íabÀ
;

165 
u8
 
b_undîÊow_íabÀ
;

166 
u8
 
b_ovîÊow_íabÀ
;

167 
u8
 
b_ª£rved
[1];

170 
	stw_chù_vi_¥›îty
{

171 
u32
 
chù_num
;

172 
u32
 
u32Ch™√l
;

173 
u32
 
u32Mask
;

175 
	#MASK_VI_BRIGHTNESS
 (0x01)

	)

176 
	#MASK_VI_CONTRAST
 (0x02)

	)

177 
	#MASK_VI_SATURATION
 (0x04)

	)

178 
	#MASK_VI_HUE
 (0x08)

	)

179 
	#MASK_VI_SHARPNESS
 (0x10)

	)

180 
	#MASK_VI_ALL
 (0x1f)

	)

182 
u32
 
u32Brighäess
;

183 
u32
 
u32C⁄åa°
;

184 
u32
 
u32S©uøti⁄
;

185 
u32
 
u32Hue
;

186 
u32
 
u32Sh¨≤ess
;

191 
u32ChùID
;

192 
u32Ch™√l
;

193 
CHIP_VI_STANDARD
 
eVideoTy≥
;

194 }
	tVI_CH_VIDEOTYPE
;

196 
	stw_chù_vi_¥›îty_›î©i⁄
{

197 (*
öô
)(
tw_chù_vi_¥›îty_t
 *, 
u32
 
chn
);

198 (*
ª£t
)(
tw_chù_vi_¥›îty_t
 *);

200 
u32
 (*
gë_brighäess
)(
tw_chù_vi_¥›îty_t
 *);

201 (*
£t_brighäess
)(
tw_chù_vi_¥›îty_t
 *, 
u32
);

202 
u32
 (*
gë_c⁄åa°
)(
tw_chù_vi_¥›îty_t
 *);

203 (*
£t_c⁄åa°
)(
tw_chù_vi_¥›îty_t
 *, 
u32
);

204 
u32
 (*
gë_ßtuøti⁄
)(
tw_chù_vi_¥›îty_t
 *);

205 (*
£t_ßtuøti⁄
)(
tw_chù_vi_¥›îty_t
 *, 
u32
);

206 
u32
 (*
gë_hue
)(
tw_chù_vi_¥›îty_t
 *);

207 (*
£t_hue
)(
tw_chù_vi_¥›îty_t
 *, 
u32
);

208 
u32
 (*
gë_sh¨≤ess
)(
tw_chù_vi_¥›îty_t
 *);

209 (*
£t_sh¨≤ess
)(
tw_chù_vi_¥›îty_t
 *, 
u32
);

211 (*
upd©e
)(
tw_chù_vi_drivî_t
 *, 
tw_chù_vi_c⁄fig_¥›îty_t
 *);

214 
	stw_chù_vi_c⁄fig_¥›îty
{

215 
tw_chù_vi_¥›îty_t
 
video_¥›îty
;

216 
tw_chù_vi_„©uª_t
 
video_„©uª
;

217 
tw_chù_vi_¥›îty_›î©i⁄_t
 *
›
;

220 
	stw_chù_vi_›î©i⁄
{

221 (*
öô
)(
tw_chù_vi_drivî_t
*);

222 (*
ª£t
)(
tw_chù_vi_drivî_t
*);

223 (*
ªÀa£
)(
tw_chù_vi_drivî_t
*);

225 (*
£t_video_°™d¨d
)(
tw_chù_vi_drivî_t
 *, 
CHIP_VI_STANDARD
);

226 (*
£t_video_°™d¨d_ext
)(
tw_chù_vi_drivî_t
 *, 
CHIP_VI_STANDARD
);

227 (*
gë_video_°™d¨d
)(
tw_chù_vi_drivî_t
 *);

229 
u32
 (*
gë_video_evít
)(
tw_chù_vi_drivî_t
 *);

232 
	stw_vi_evít_a˘i⁄
{

233 
evít_h™dÀr
 
h™dÀr
;

234 
u32
 
evít
;

235 *
c⁄ãxt
;

236 
tw_vi_evít_a˘i⁄_t
 *
√xt
;

239 
	stw_chù_vi_evít
{

240 
CHIP_VI_EVENT
 
evít
;

241 
u32
 
cou¡
;

242 
u32
 
unh™dÀd
;

243 
u32
 
evít_Êags
;

244 
•ölock_t
 
lock
;

245 
tw_vi_evít_a˘i⁄_t
 
a˘i⁄
;

246 c⁄° *
«me
;

249 
	stw_chù_vi_drivî
{

250 
©omic_t
 
›íed_Êag
;

251 
ed_tcb_t
 
›íed_vi_ed
;

253 
dvm_chù_t
 *
chù
;

254 
CHIP_VI_STANDARD
 
video_°™d¨d
;

256 
u32
 
evít_Êags
;

257 
u32
 
evít_timî
;

258 
tw_chù_vi_evít_t
 
drivî_evít
[
CHIP_VI_EVENT_RESERVED
];

259 
tw_chù_vi_c⁄fig_¥›îty_t
 
video_¥›îty
[
TW_VI_MAX_CHNL
];

261 
tw_chù_vi_›î©i⁄_t
 *
›
;

263 
tw_¥oc_ªgi°î_s
 
vi_¥oc
;

266 
öô_chù_vi_drivî
(
tw_£rvi˚_devi˚
 *
tsd
, 
dvm_chù_t
 *
chù
);

267 
ªmove_chù_vi_drivî
(
tw_£rvi˚_devi˚
 *
tsd
);

268 
tw5864_chù_vi_drivî_öô
(* 
∑ø
);

269 
tw5864_chù_vi_drivî_ªmove
();

271 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_chip_vo.h

1 #i‚de‡
_TW_CHIP_VO_H__


2 
	#_TW_CHIP_VO_H__


	)

4 #ifde‡
__˝lu•lus


9 
tw_vo_drivî
 
	ttw_vo_drivî_t
;

10 
tw_vo_›î©i⁄
 
	ttw_vo_›î©i⁄_t
;

12 
	stw_vo_›î©i⁄
{

13 (*
öô
)(
tw_vo_drivî_t
 *);

14 (*
ª£t
)(
tw_vo_drivî_t
 *);

15 (*
ªÀa£
)(
tw_vo_drivî_t
 *);

18 
	stw_vo_drivî
{

19 
©omic_t
 
›íed_Êag
;

20 
ed_tcb_t
 
›íed_vo_ed
;

22 
dvm_chù_t
 *
chù
;

23 
CHIP_VI_STANDARD
 
video_°™d¨d
;

25 
tw_vo_›î©i⁄_t
 *
›
;

26 
tw_¥oc_ªgi°î_s
 
vo_¥oc
;

29 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_codec_common.h

1 #i‚de‡
__TW_CODEC_COMMON_H__


2 
	#__TW_CODEC_COMMON_H__


	)

4 #ifde‡
__˝lu•lus


10 
	#TW_CODEC_CHAN_REQUEST_MEM
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 243, )

	)

11 
	#TW_CODEC_CHAN_RELEASE_MEM
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 242, )

	)

12 
	#TW_CODEC_CHAN_DISCAED_FRAME
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 244, )

	)

13 
	#TW_CODEC_CHAN_FLUSH
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 150, )

	)

14 
	#TW_CODEC_CHAN_CHANG_MODE
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 151, )

15 
	#TW_CODEC_CHAN_TS_RESYNC
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 152, )

	)

16 
	#TW_CODEC_CHAN_AVSYNC_BIND
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 153, )

17 

	)

19 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_common.h

18 #i‚de‡
_TW_COMMON_H__


19 
	#_TW_COMMON_H__


	)

21 #ifde‡
__˝lu•lus


27 
ID_SYS
,

28 
ID_VB
,

29 
ID_VI
,

30 
ID_VO
,

31 
ID_H264E
,

32 
ID_H264D
,

33 
ID_JPEG
,

34 
ID_AUDIO_ENC
,

35 
ID_AUDIO_DEC
,

36 
ID_END
,

37 }
	tSYSTEM_ID_U
;

39 
	#DRIVER_VERSION
 "TW5864_0.1"

	)

41 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_common_err.h

1 #i‚de‡
_TW_COMMON_ERR_H__


2 
	#_TW_COMMON_ERR_H__


	)

4 #ifde‡
__˝lu•lus


9 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_decode_sync.h

1 #i‚de‡
__TW_DECODE_SYNC_H__


2 
	#__TW_DECODE_SYNC_H__


	)

4 #ifde‡
__˝lu•lus


9 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_devices.h

1 #i‚de‡
DVM4000I_H


2 
	#DVM4000I_H


	)

4 #ifde‡
__˝lu•lus


9 
	#DEV_NAME_LEN
 32

	)

10 
	sdvm_video_devi˚
{

11 
«me
[
DEV_NAME_LEN
];

12 
devi˚_id
;

13 
devi˚_ty≥
;

14 
devi˚_°©e
;

15 
£m≠h‹e
 
devi˚_lock
;

16 
dvm_chù_t
 *
chù
;

17 
video_devi˚
 
vfd
;

19 
li°_hód
 
devi˚_li°
;

20 (*
ªgi°î_devi˚
)(
chù_ªgi°î_t
 *, 
dvm_video_devi˚_t
 *);

21 (*
uƒegi°î_devi˚
)(
chù_ªgi°î_t
 *, 
dvm_video_devi˚_t
 *);

22 
li°_hód
 
›íed_devi˚_li°
;

23 (*
ªgi°î_›íed_devi˚
)(
dvm_chù_t
 *, 
dvm_video_devi˚_t
 *);

24 (*
uƒegi°î_›íed_devi˚
)(
dvm_chù_t
 *, 
dvm_video_devi˚_t
 *);

26 
•ölock_t
 
devi˚_m≠_lock
;

27 *
£rvi˚_ch™_drivî
;

28 (*
©èch_£rvi˚_ch™_drivî
)(
dvm_video_devi˚_t
 *, *);

29 (*
dëach_£rvi˚_ch™_drivî
)(
dvm_video_devi˚_t
 *);

30 
waô_queue_hód_t
 
waô_pﬁl
;

31 
ssize_t
 (*
ªad
)(
dvm_video_devi˚_t
 *, 
__u£r
 *, 
size_t
 , 
loff_t
 *);

32 
ssize_t
 (*
wrôe
)(
dvm_video_devi˚_t
 *, c⁄° 
__u£r
 *, 
size_t
 , 
loff_t
 *);

36 
dvm_video_devi˚_ªmove
();

37 
dvm_video_devi˚_öô
(
dvm_chù_t
 *, );

38 
dvm_video_group_ªmove
(
dvm_video_group_t
 *);

39 
dvm_video_group_öô
(
dvm_chù_t
 *, );

40 
ªmove_ícode_ch™
(
dvm_h264_ícode_t
 *);

41 
ícode_ch™_öô
(
dvm_video_group_t
 *, );

43 
¥o˚ss_¶i˚_hódî_ªq
(
dvm_h264_ícode_t
 *);

44 
¥o˚ss_µs_ªq
(
dvm_h264_ícode_t
 *);

45 
¥o˚ss_•s_ªq
(
dvm_h264_ícode_t
 *);

47 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_endpoint.h

1 #i‚def 
TW_ENDPOINT


2 
	#TW_ENDPOINT


	)

4 #ifde‡
__˝lu•lus


9 
	#TW_OK
 (0)

	)

10 
	#TW_ERR
 (-1)

	)

12 
	eTW_ED_STATUS
{

13 
TW_ED_UNREGISTER
 = 0,

14 
TW_ED_CLOSED
,

15 
TW_ED_IDLE
,

16 
TW_ED_STANDBY
,

17 
TW_ED_SUSPEND
,

18 
TW_ED_RUNNING
,

19 
TW_ED_TRANSFERING


22 
	eTW_ED_EVENT
{

23 
TW_ED_CLOSE_EVENT
 = 0,

24 
TW_ED_TIMEOUT_EVENT
,

25 
TW_ED_SUSPEND_EVENT
,

26 
TW_ED_RESUME_EVENT
,

27 
TW_ED_OPEN_EVENT
,

28 
TW_ED_DELIVER_EVENT
,

31 
	#TW_ED_STATE_NUMBER
 (7)

	)

32 
	#TW_ED_EVENT_NUMBER
 (6)

	)

33 
	stw_ed_fsm_å™s„r_≥ndög
{

34 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

35 
u32
 
˛o£_≥ndög_Êag
 : 1;

36 
u32
 
timeout_≥ndög_Êag
 : 1;

37 
u32
 
su•íd_≥ndög_Êag
 : 1;

38 
u32
 
ªsume_≥ndög_Êag
 : 1;

39 
u32
 
›í_≥ndög_Êag
 : 1;

40 
u32
 
dñivî_≥ndög_Êag
 : 1;

41 
u32
 
íabÀ_°©e_å™s„r_Êag
 : 1;

42 
u32
 
íabÀ_åiggî_≥ndög_Êag
 : 1;

43 
u32
 
√ed_sync
 : 1;

44 
u32
 
ª£rve
 : 23;

45 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

46 
u32
 
ª£rve
 : 23;

47 
u32
 
√ed_sync
 : 1;

48 
u32
 
íabÀ_åiggî_≥ndög_Êag
 : 1;

49 
u32
 
íabÀ_°©e_å™s„r_Êag
 : 1;

50 
u32
 
dñivî_≥ndög_Êag
 : 1;

51 
u32
 
›í_≥ndög_Êag
 : 1;

52 
u32
 
ªsume_≥ndög_Êag
 : 1;

53 
u32
 
su•íd_≥ndög_Êag
 : 1;

54 
u32
 
timeout_≥ndög_Êag
 : 1;

55 
u32
 
˛o£_≥ndög_Êag
 : 1;

61 (*
fsm_å™s„r_a˘i⁄
)(
	ttw_ed_fsm_t
 *, *
	tc⁄ãxt
);

62 
	sfsm_°©e_å™s„r_m©rix_èbÀ
{

63 
fsm_å™s„r_a˘i⁄
 
a˘i⁄
[
TW_ED_STATE_NUMBER
][
TW_ED_EVENT_NUMBER
];

64 
fsm_å™s„r_a˘i⁄
 
sync_hook
;

67 
	stw_ed_fsm_›î©i⁄
{

68 (*
öô
)(
tw_ed_fsm_t
 *);

69 (*
ª£t
)(
tw_ed_fsm_t
 *);

70 (*
ªgi°î_èbÀ
)(
tw_ed_fsm_t
 *, 
fsm_°©e_å™s„r_m©rix_èbÀ_t
 *, *);

71 (*
uƒegi°î_èbÀ
)(
tw_ed_fsm_t
 *);

72 (*
upd©e_√ed_sync_hook
)(
tw_ed_fsm_t
 *, 
í
);

73 (*
upd©e_íabÀ_°©e_å™s„r
)(
tw_ed_fsm_t
 *, 
í
);

74 (*
upd©e_íabÀ_åiggî_≥ndög_evít
)(
tw_ed_fsm_t
 *, 
í
);

75 (*
ch™ge_°©e
)(
tw_ed_fsm_t
 *, 
TW_ED_STATUS
 
°©e
);

76 (*
ªq_fsm_evít
)(
tw_ed_fsm_t
 *, 
TW_ED_EVENT
 
evít
);

77 (*
ack_fsm_evít
)(
tw_ed_fsm_t
 *, 
TW_ED_EVENT
 
evít
);

78 (*
gí_fsm_evít
)(
tw_ed_fsm_t
 *, 
TW_ED_EVENT
 
evít
);

79 (*
å™s„r
)(
tw_ed_fsm_t
 *, 
TW_ED_EVENT
 
evít
);

80 (*
gë_cuº_°©e
)(
tw_ed_fsm_t
 *);

81 (*
gë_œ°_°©e
)(
tw_ed_fsm_t
 *);

84 
	stw_ed_fsm
{

85 
œ°_°©e
, 
cuº_°©e
;

86 *
c⁄ãxt
;

87 
•ölock_t
 
lock
;

88 
tw_ed_fsm_å™s„r_≥ndög
 
å™s„r_≥ndög
;

89 
fsm_°©e_å™s„r_m©rix_èbÀ_t
 *
èbÀ
;

91 
tw_ed_fsm_›î©i⁄
 *
›
;

94 
	eTW_DIRECTION
{

95 
TW_READ
 = 0,

96 
TW_WRITE


99 
	eTW_ED_BUS_ID
{

100 
TW_ED_HOST_BUS
 = 0,

101 
TW_ED_PCI_BUS
,

102 
INVALID_TW_ED_BSU_ID


105 
	eTW_ED_TYPE_ID
{

106 
TW_ED_CONTROL
 = 0,

107 
TW_ED_VIDEO_ENCODE_IN
,

108 
TW_ED_VIDEO_PREVIEW_IN
,

109 
TW_ED_VIDEO_ENCODE_OSD_OUT
,

110 
TW_ED_VIDEO_DECODE_OUT
,

111 
TW_ED_VIDEO_PREVIEW_OUT
,

112 
TW_ED_VIDEO_DECODE_OSG_OUT
,

113 
TW_ED_AUDIO_ENCODE_IN
,

114 
TW_ED_AUDIO_DECODE_OUT
,

115 
INVALID_TW_ED_TYPE_ID


118 
	#BUS_NUMBER_MASK
 (0xf)

	)

119 
	#CHIP_NUMBER_MASK
 (0xf)

	)

120 
	#TYPE_NUMBER_MASK
 (0xf)

	)

121 
	#GROUP_CHAN_NUMBER_MASK
 (0x3ff)

	)

122 
	#LOGIC_CHAN_NUMBER_MASK
 (0x3ff)

	)

123 
	sídpoöt_id
{

124 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

125 
u32
 
bus_id
:4;

126 
u32
 
chù_id
:4;

127 
u32
 
ty≥_id
:4;

128 
u32
 
group_ch™_id
:10;

129 
u32
 
logic_ch™_id
:10;

130 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

131 
u32
 
logic_ch™_id
:10;

132 
u32
 
group_ch™_id
:10;

133 
u32
 
ty≥_id
:4;

134 
u32
 
chù_id
:4;

135 
u32
 
bus_id
:4;

141 
	#to_gë_ídpoöt_tcb_wôh_ªgi°î_node
(
node
Ë
	`c⁄èöî_of
“ode, 
ed_tcb_t
, 
ed
)

	)

142 
	#to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
node
Ë
	`c⁄èöî_of
“ode, 
ed_tcb_t
, 
ed_fsm
)

	)

143 
	sídpoöt_tcb
{

144 
ed_id
 
id
;

145 
©omic_t
 
°©e
;

146 
tw_ed_fsm_t
 
ed_fsm
;

147 
tw_ªgi°î_node_t
 
ed
;

149 
tw_hcd_öãrÁ˚_›î©i⁄
 *
›
;

152 
	shcd_öãrÁ˚_›î©i⁄
{

153 (*
›í
)(
ed_tcb_t
 *);

154 (*
˛o£
)(
ed_tcb_t
 *);

155 (*
su•íd
)(
ed_tcb_t
 *);

156 (*
ªsume
)(
ed_tcb_t
 *);

157 (*
io˘l
)(
ed_tcb_t
 *, , );

158 (*
gë_°©e
)(
ed_tcb_t
 *);

161 
drivî_åiggî_≥ndög_evít
(
ed_tcb_t
 *
ed_tcb
, 
í
);

162 
drivî_gí_˛o£_evít
(
ed_tcb_t
 *
ed_tcb
, 
ˇn_å™s„r
);

163 
drivî_gí_timeout_evít
(
ed_tcb_t
 *
ed_tcb
, 
ˇn_å™s„r
);

164 
drivî_gí_su•íd_evít
(
ed_tcb_t
 *
ed_tcb
, 
ˇn_å™s„r
);

165 
drivî_gí_ªsume_evít
(
ed_tcb_t
 *
ed_tcb
, 
ˇn_å™s„r
);

166 
drivî_gí_›í_evít
(
ed_tcb_t
 *
ed_tcb
, 
ˇn_å™s„r
);

167 
drivî_gí_dñivî_evít
(
ed_tcb_t
 *
ed_tcb
, 
ˇn_å™s„r
);

171 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_h264_encode.h

1 #i‚def 
TW_H264_ENCODE_H


2 
	#TW_H264_ENCODE_H


	)

4 #ifde‡
__˝lu•lus


9 
	#AD_IS_READY
 (1)

	)

10 
	#SLICEHEAD_IS_READY
 (2)

	)

11 
	#HAVE_HARDWARE_BUF_CACHE
 (4)

	)

12 
	#DEV_CAN_SERVICE
 (3)

	)

13 
	#FIRST_START_DISCARD_FRAME_NUMBER
 (4)

	)

14 
	#ENCODE_CHAN_TIMEOUT
 (100/
MS_PER_TICK
)

	)

15 
	#ENCODE_CHAN_MONITOR_COUNTER
 (1)

	)

16 
	#TIMER_1MS
 (1/
MS_PER_TICK
)

	)

17 
	#TIMER_5MS
 (5/
MS_PER_TICK
)

	)

18 
	#TIMER_40MS
 (40/
MS_PER_TICK
)

	)

19 
	#TIMER_200MS
 (200/
MS_PER_TICK
)

	)

20 
	#TIMER_500MS
 (500/
MS_PER_TICK
)

	)

21 
	#TIMER_1_SECOND
 (1000/
MS_PER_TICK
)

	)

22 
	#TIMER_1_MINUTE
 (60000/
MS_PER_TICK
)

	)

24 
	#VLC_STATUS_NULL
 (0)

	)

25 
	#VLC_STATUS_NEED_PROCESS
 (1)

	)

26 
	#VLC_STATUS_OVER
 (2)

	)

27 
	#VLC_NO_PACKET_BUF
 (3)

	)

29 
	#READ_H264_BITSTREAM_BY_RAM
 (0)

	)

30 
	#READ_H264_BITSTREAM_BY_DDR
 (1)

	)

32 
	#VIDEO_MASTER_OR_SUB_FLAG_LEFT_SHIFT_NUMBER
 (1)

	)

33 
	#VIDEO_LOGIC_MASTER_OR_SUB_MASK
 (1)

	)

34 
	#VD_CHANNEL_VALID
 (0x9000)

	)

35 
	#VD_CHANNEL_SWITCH
 (0x9004)

	)

36 
	#VD_CHANNEL_DOWNSAMPLE
 (0x9008)

	)

37 
	#VD_CHANNEL_INTERLACE
 (0x900c)

	)

38 
	#VD_BUS_MAX_CHANNEL
 (0x9010)

	)

39 
	#VD_BUS_MAX_LINE0
 (0x9014)

	)

40 
	#VD_BUS_MAX_LINE1
 (0x9018)

	)

41 
	#VD_CHANNEL_FORMAT0
 (0x9020)

	)

42 
	#VD_CHANNEL_FORMAT1
 (0x9024)

	)

43 
	#VD_CHANNEL_LMAP
(
pos
Ë(0x9100 + (posË* (Ë* 2)

	)

44 
	#VD_CHANNEL_HMAP
(
pos
Ë(0x9100 + (posË* (Ë* 2 + ())

	)

45 
	#VD_BUS_MAP
(
bus
Ë(0x9200 + (busË* ())

	)

47 
tw_h264_ícode_„©uª_∑øm
 
	ttw_h264_ícode_„©uª_∑øm_t
;

48 
tw_h264_ícode_„©uª
 
	ttw_h264_ícode_„©uª_t
;

49 
tw_h264_ícode_„©uª_›î©i⁄
 
	ttw_h264_ícode_„©uª_›î©i⁄_t
;

50 
tw_h264_ícode_rc
 
	ttw_h264_ícode_rc_t
;

51 
tw_h264_ícode_rc_∑øm
 
	ttw_h264_ícode_rc_∑øm_t
;

52 
tw_h264_ícode_dñè
 
	ttw_h264_ícode_dñè_t
;

53 
	eTW_VIDEO_SIZE
{

54 
TW_VIDEO_SIZE_QCIF
 = 0,

55 
TW_VIDEO_SIZE_QHALF_D1
,

56 
TW_VIDEO_SIZE_CIF
,

57 
TW_VIDEO_SIZE_HALF_D1
,

58 
TW_VIDEO_SIZE_D1
,

59 
TW_VIDEO_SIZE_USER
,

62 
	eTW_VIDEO_STANDARD
{

63 
TW_VIDEO_STANDARD_PAL
,

64 
TW_VIDEO_STANDARD_NTSC
,

65 
TW_VIDEO_STANDARD_USER_DEFINE
,

68 
	eTW_H264_RC_TYPE
{

69 
TW_H264_NO_RC
,

70 
TW_H264_CBR
,

71 
TW_H264_VBR
,

74 
	eTW_RC_IMAGE_PRIORITY
{

75 
TW_RC_IMAGE_QUALITY_FIRST
 = 0,

76 
TW_RC_IMAGE_SMOOTH_FIRST
,

79 
	eTW_CROSS_BUS_WORK_MODE
{

80 
TW_CROSS_BUS_4D1_REALTIME
 = 0,

81 
TW_CROSS_BUS_8HÆfD1_REALTIME
,

82 
TW_CROSS_BUS_16CIF_REALTIME
,

83 
TW_CROSS_BUS_UNREALTIME
,

86 
	stw_time°amp_›î©i⁄
{

87 (*
öô
)(
tw_time°amp_t
 *);

88 (*
ª£t
)(
tw_time°amp_t
 *);

89 (*
£t_time°amp
)(
tw_time°amp_t
 *, 
time°amp
, *
ˇŒ_‚_«me
);

90 
u32
 (*
gë_time°amp
)(
tw_time°amp_t
 *);

93 
	stw_time°amp
{

94 
©omic_t
 
fú°_sync
;

95 
œ°_timî_cou¡
, 
cuº_timî_cou¡
;

96 
tŸÆ_dñè_timî_cou¡
;

98 
tw_time°amp_›î©i⁄
 *
›
;

102 
	#DVM_CODEC_GET_VIDEO_ENCODER_PARAM
 
	`_IOR
(
TW_CODEC_IOC_MAGIC
, 0, )

	)

103 
	#DVM_CODEC_SET_VIDEO_ENCODER_PARAM
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 1, )

	)

105 
	#DVM_CODEC_SET_VIDEO_TIMESTAMP_BASE
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 2, )

	)

106 
	#DVM_CODEC_GET_VIDEO_TIMESTAMP_BASE
 
	`_IOR
(
TW_CODEC_IOC_MAGIC
, 3, )

	)

109 
	#DVM_MOTION_DECTION_GET_PARAM
 
	`_IOR
(
TW_CODEC_IOC_MAGIC
, 4, )

	)

110 
	#DVM_MOTION_DECTION_SET_PARAM
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 5, )

	)

113 
	#TW_LOGIC_CHAN_OSD_GET_PARAM
 
	`_IOR
(
TW_CODEC_IOC_MAGIC
, 6, )

	)

114 
	#TW_LOGIC_CHAN_OSD_SET_PARAM
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 7, )

	)

115 
	#TW_H264_ENCODE_CHAN_MAP_GET
 
	`_IOR
(
TW_CODEC_IOC_MAGIC
, 8, )

	)

116 
	#TW_LOGIC_CHAN_ENABLE_SET
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 9, )

	)

117 
	#TW_LOGIC_CHAN_DISABLE_SET
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 10, )

	)

118 
	#TW_H264_ENCODE_FEATURE_SET
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 11, )

	)

119 
	#TW_H264_ENCODE_FEATURE_GET
 
	`_IOR
(
TW_CODEC_IOC_MAGIC
, 12, )

	)

121 
	#TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_DEINTERLACE_MASK
 0x00000001

	)

122 
	#TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_SKIP_MASK
 0x00000002

	)

123 
	#TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_I_4X4_MASK
 0x00000004

	)

124 
	#TW_H264_ENABLE_CHANGE_HALF_PIXEL_MASK
 0x00000008

	)

125 
	#TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_QUARTER_PIXEL_MASK
 0x00000010

	)

126 
	#TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_MB_DELAY_MASK
 0x00000020

	)

128 
	#TW_H264_FEATURE_ON
 1

	)

129 
	#TW_H264_FEATURE_OFF
 0

	)

131 
	#TW_H264_ENCODE_RC_SET
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 13, )

	)

132 
	#TW_H264_ENCODE_RC_GET
 
	`_IOR
(
TW_CODEC_IOC_MAGIC
, 14, )

	)

133 
	#TW_H264_ENCODE_RC_PARAM_SET
 
	`_IOW
(
TW_CODEC_IOC_MAGIC
, 15, )

	)

134 
	#TW_H264_ENCODE_RC_PARAM_GET
 
	`_IOR
(
TW_CODEC_IOC_MAGIC
, 16, )

	)

136 
	#TW_H264_ENCODE_RC_ENABLE_CHANGE_RC_TYPE_MASK
 0x00000001

	)

137 
	#TW_H264_ENCODE_RC_ENABLE_CHANGE_IMAGE_PRIORITY_MASK
 0x00000002

	)

138 
	#TW_H264_ENCODE_RC_ENABLE_CHANGE_DEFAULT_QP_MASK
 0x00000004

	)

140 
	stw_h264_ch™_m≠_öfo
{

141 
u16
 
i_logic_ch™_id
;

142 
u16
 
i_phy_ch™_id
;

145 
	stw_h264_ícode_rc
{

146 
u32
 
ch™ge_mask_Êag
;

147 
u32
 
e_rc_ty≥
;

148 
u32
 
e_image_¥i‹ôy
;

149 
u32
 
i_deÁu…_qp
;

152 
	stw_h264_ícode_rc_∑øm
{

153 
u32
 
e_rc_ty≥
;

154 
u8
 
rc_∑øm
[0];

157 
	stw_h264_ícode_„©uª_∑øm
{

158 
u32
 
ch™ge_mask_Êag
;

159 
u8
 
b_íabÀ_deöãæa˚
;

160 
u8
 
b_íabÀ_skù
;

161 
u8
 
b_íabÀ_I_4X4
;

162 
u8
 
b_íabÀ_hÆf_pixñ
;

163 
u8
 
b_íabÀ_qu¨ãr_pixñ
;

164 
u32
 
i_mb_dñay_vÆue
;

167 
	stw_h264_ícode_„©uª_›î©i⁄
{

168 (*
öô
)(
tw_h264_ícode_„©uª_t
 *);

169 (*
ª£t
)(
tw_h264_ícode_„©uª_t
 *);

171 (*
upd©e_deöãæa˚
)(
tw_h264_ícode_„©uª_t
 *, );

172 (*
gë_deöãæa˚
)(
tw_h264_ícode_„©uª_t
 *);

173 (*
upd©e_skù
)(
tw_h264_ícode_„©uª_t
 *, );

174 (*
gë_skù
)(
tw_h264_ícode_„©uª_t
 *);

175 (*
upd©e_i_4x4
)(
tw_h264_ícode_„©uª_t
 *, );

176 (*
gë_i_4x4
)(
tw_h264_ícode_„©uª_t
 *);

177 (*
upd©e_hÆf_pixñ
)(
tw_h264_ícode_„©uª_t
 *, );

178 (*
gë_hÆf_pixñ
)(
tw_h264_ícode_„©uª_t
 *);

179 (*
upd©e_qu¨ãr_pixñ
)(
tw_h264_ícode_„©uª_t
 *, );

180 (*
gë_qu¨ãr_pixñ
)(
tw_h264_ícode_„©uª_t
 *);

181 (*
upd©e_mb_dñay
)(
tw_h264_ícode_„©uª_t
 *, 
u32
);

182 
u32
 (*
gë_mb_dñay
)(
tw_h264_ícode_„©uª_t
 *);

185 
	stw_h264_ícode_„©uª
{

186 
tw_h264_ícode_„©uª_∑øm_t
 
„©uª_∑øm
;

187 
tw_h264_ícode_„©uª_›î©i⁄
 *
›
;

190 
	eTW5864_ENCODE_CONFIG_CHANGED_MASK


192 
TW5864_ENCODE_CONFIG_VIDEO_STANDARD_CHANGED
 = 0x00000001,

193 
TW5864_ENCODE_CONFIG_ENABLE_DEINTERLACE_CHANGED
 = 0x00000002,

194 
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
 = 0x00000004,

195 
TW5864_ENCODE_CONFIG_BITRATE_CHANGED
 = 0x00000008,

196 
TW5864_ENCODE_CONFIG_FPS_CHANGED
 = 0x00000010,

197 
TW5864_ENCODE_CONFIG_KEYFRAME_INTERVALS_CHANGED
 = 0x00000020,

198 
TW5864_ENCODE_CONFIG_GOP_INTERVALS_CHANGED
 = 0x00000040,

199 
TW5864_ENCODE_CONFIG_RCTYPE_CHANGED
 = 0x00000080,

200 
TW5864_ENCODE_CONFIG_IMAGE_LEVEL_CHANGED
 = 0x00000100,

201 
TW5864_ENCODE_CONFIG_QPI_CHANGED
 = 0x00000200,

202 
TW5864_ENCODE_CONFIG_QPP_CHANGED
 = 0x00000400,

203 
TW5864_ENCODE_CONFIG_QPB_CHANGED
 = 0x00000800,

206 
	#TW_h264_ENCODER_PARAM_BPS_MASK
 0x0001

	)

207 
	#TW_h264_ENCODER_PARAM_FPS_MASK
 0x0002

	)

208 
	#TW_h264_ENCODER_PARAM_IP_STRIDE_MASK
 0x0004

	)

209 
	#TW_h264_ENCODER_PARAM_PB_STRIDE_MASK
 0x0008

	)

210 
	#TW_h264_ENCODER_PARAM_GOP_MASK
 0x0010

	)

211 
	#TW_h264_ENCODER_PARAM_FORCE_I_MASK
 0x0020

	)

212 
	#TW_h264_ENCODER_PARAM_WIDTH_MASK
 0x0040

	)

213 
	#TW_h264_ENCODER_PARAM_HEIGHT_MASK
 0x0080

	)

215 
	stw_h264_ícode_∑øm
{

216 
u32
 
ch™ge_mask_Êag
;

217 
u32
 
i_bps
;

218 
u32
 
i_Âs
;

219 
u32
 
i_I_P_°ride
;

220 
u32
 
i_P_B_°ride
;

221 
u32
 
i_g›_vÆue
;

222 
u32
 
b_f‹˚_I_Êag
;

223 
u16
 
i_logic_video_width_mb_size
;

224 
u16
 
i_logic_video_height_mb_size
;

227 
	#TW5864_ENCODE_CONFIG_MASKALL
 (0xfff)

	)

228 
	#TW_ENCODE_PROPERTY_CHANGED
 (1)

	)

229 
	#TW_ENCODE_PROPERTY_NO_CHANGED
 (0)

	)

231 
	stw_h264_ícode_c⁄figuøti⁄


233 
u32
 
ch™gedMask
;

234 
TW_VIDEO_STANDARD
 
videoSènd¨d
;

235 
íabÀSubmôMŸi⁄Ve˘‹
;

236 
íabÀMŸi⁄Ve˘‹A«ly£s
;

237 
TW_VIDEO_SIZE
 
ícodeSize
;

238 
width
;

239 
height
;

240 
bôøã
;

241 
Âs
;

242 
keyFømeI¡îvÆs
;

243 
g›I¡îvÆs
;

244 
¥i
;

245 
À·_pixñ_x
, 
À·_pixñ_y
;

246 
right_pixñ_x
, 
right_pixñ_y
;

247 
imageLevñ
;

248 
qpi
;

249 
qµ
;

250 
qpb
;

253 
	stw_h264_ícode_¥›îty_›î©i⁄
{

254 (*
upd©e_ícode_¥›îty
)(
tw_h264_ícode_¥›îty_t
 *, 
tw_h264_ícode_c⁄figuøti⁄_t
 *
c⁄fig_∑øm
);

255 (*
is_videoSènd¨d_ch™ged
)(
tw_h264_ícode_¥›îty_t
 *);

256 (*
gë_videoSènd¨d
)(
tw_h264_ícode_¥›îty_t
 *);

257 (*
is_ícodeSize_ch™ged
)(
tw_h264_ícode_¥›îty_t
 *);

258 (*
gë_ícodeSize
)(
tw_h264_ícode_¥›îty_t
 *);

259 (*
gë_ícodeSize_width
)(
tw_h264_ícode_¥›îty_t
 *);

260 (*
gë_ícodeSize_height
)(
tw_h264_ícode_¥›îty_t
 *);

261 (*
is_èrgë_bôøã_ch™ged
)(
tw_h264_ícode_¥›îty_t
 *);

262 (*
gë_èrgë_bôøã
)(
tw_h264_ícode_¥›îty_t
 *);

263 (*
is_èrgë_Âs_ch™ged
)(
tw_h264_ícode_¥›îty_t
 *);

264 (*
gë_èrgë_Âs
)(
tw_h264_ícode_¥›îty_t
 *);

265 (*
is_keyFømeI¡îvÆs_ch™ged
)(
tw_h264_ícode_¥›îty_t
 *);

266 (*
gë_keyFømeI¡îvÆs
)(
tw_h264_ícode_¥›îty_t
 *);

267 (*
is_g›I¡îvÆs_ch™ged
)(
tw_h264_ícode_¥›îty_t
 *);

268 (*
gë_g›I¡îvÆs
)(
tw_h264_ícode_¥›îty_t
 *);

269 (*
is_rcTy≥_ch™ged
)(
tw_h264_ícode_¥›îty_t
 *);

270 (*
gë_rcTy≥
)(
tw_h264_ícode_¥›îty_t
 *);

271 (*
is_ümgeLevñ_ch™ged
)(
tw_h264_ícode_¥›îty_t
 *);

272 (*
gë_ümgeLevñ
)(
tw_h264_ícode_¥›îty_t
 *);

273 (*
is_qpi_ch™ged
)(
tw_h264_ícode_¥›îty_t
 *);

274 (*
gë_qpi
)(
tw_h264_ícode_¥›îty_t
 *);

275 (*
is_qµ_ch™ged
)(
tw_h264_ícode_¥›îty_t
 *);

276 (*
gë_qµ
)(
tw_h264_ícode_¥›îty_t
 *);

277 (*
is_qpb_ch™ged
)(
tw_h264_ícode_¥›îty_t
 *);

278 (*
gë_qpb
)(
tw_h264_ícode_¥›îty_t
 *);

281 
	stw_h264_ícode_¥›îty
{

282 
tw_h264_ícode_c⁄figuøti⁄_t
 
ícode_¥›îty
;

283 
tw_h264_ícode_„©uª_t
 
ícode_„©uª
;

284 
tw_h264_ícode_rc_t
 
ícode_rc
;

285 
•ölock_t
 
lock
;

286 
tw_h264_ícode_¥›îty_›î©i⁄
 *
›
;

289 
	stw_vd_‹ig_buf_öfo_›î©i⁄
{

290 (*
öô
)(
tw_vd_‹ig_buf_öfo_t
 *, 
¶Ÿ_id
);

291 (*
fú°_sync_‹ig_buf_öfo
)(
tw_vd_‹ig_buf_öfo_t
 *, 
dvm_chù_t
 *
chù
);

292 (*
vd_‹ig_buf_ªady
)(
tw_vd_‹ig_buf_öfo_t
 *, 
dvm_chù_t
 *
chù
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
);

293 (*
gë_vd_ad_phy_±r
)(
tw_vd_‹ig_buf_öfo_t
 *, 
dvm_chù_t
 *
chù
);

294 (*
£t_vd_upd©e_‹ig_buf_ªg
)(
tw_vd_‹ig_buf_öfo_t
 *, 
dvm_chù_t
 *
chù
);

295 (*
£t_vd_cuº_ícode_±r
)(
tw_vd_‹ig_buf_öfo_t
 *, 
dvm_chù_t
 *
chù
, 
tw_h264_logic_ícode_ch™_t
 *
logic_ícode_ch™
);

296 (*
upd©e_vd_ícode_±r
)(
tw_vd_‹ig_buf_öfo_t
 *);

297 (*
upd©e_time°amp
)(
tw_vd_‹ig_buf_öfo_t
 *, 
dvm_chù_t
 *
chù
);

298 
u32
 (*
gë_time°amp
)(
tw_vd_‹ig_buf_öfo_t
 *);

299 (*
so·w¨e_disˇrd_‰ame
)(
tw_vd_‹ig_buf_öfo_t
 *, 
dvm_chù_t
 *
chù
, 
tw_h264_logic_ícode_ch™_t
 *);

300 (*
ícode_ídof¶i˚_nŸify
)(
tw_vd_‹ig_buf_öfo_t
 *, 
tw_h264_logic_ícode_ch™_t
 *);

301 (*
ícode_uƒegi°î_nŸify
)(
tw_vd_‹ig_buf_öfo_t
 *, 
tw_h264_logic_ícode_ch™_t
 *);

304 
	stw_vd_‹ig_buf_öfo
{

305 
©omic_t
 
°›_check_ad
;

306 
•ölock_t
 
lock
;

307 
phy_¶Ÿ_id
;

308 
fú°_°¨t_disˇrd_‰ame_numbî
;

309 
u32
 
vd_‹ig_ad_phy_±r
;

310 
u32
 
vd_upd©e_‹ig_ad_phy_±r
;

311 
u32
 
vd_ícode_±r
;

312 
tw_time°amp_t
 
vd_ícode_time°amp
;

313 
vd_±r_check_cou¡
;

314 
u32
 
logic_ch™_ad_ªady_m≠_èbÀ
;

315 
u32
 
logic_ch™_ícode_ovî_m≠_èbÀ
;

317 
tw_vd_‹ig_buf_öfo_›î©i⁄
 *
›
;

320 
tw_ad≠tive_deöãæa˚_c⁄åﬁ
;

321 
	stw_ad≠tive_deöãæa˚_c⁄åﬁ_›î©i⁄
{

322 (*
öô
)(
tw_ad≠tive_deöãæa˚_c⁄åﬁ
 *);

323 (*
ª£t
)(
tw_ad≠tive_deöãæa˚_c⁄åﬁ
 *);

325 (*
adju°_£nsôive
)(
tw_ad≠tive_deöãæa˚_c⁄åﬁ
 *, 
u32
);

326 (*
upd©e
)(
tw_ad≠tive_deöãæa˚_c⁄åﬁ
 *);

327 (*
dëe˘
)(
tw_ad≠tive_deöãæa˚_c⁄åﬁ
 *, 
dvm_chù_t
 *
chù
, 
u32
);

328 (*
isch™ge
)(
tw_ad≠tive_deöãæa˚_c⁄åﬁ
 *);

331 
	stw_ad≠tive_deöãæa˚_c⁄åﬁ
{

332 
u32
 
œ°_Êags
;

333 
u32
 
cuº_Êags
;

335 
u32
 
£nsôive
;

336 
u32
 
íabÀ
;

338 
tw_ad≠tive_deöãæa˚_c⁄åﬁ_›î©i⁄
 *
›
;

341 
	stw_h264_phy_video_¶Ÿ_›î©i⁄
{

342 (*
öô
)(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
phy_¶Ÿ_id
, 
TW_VIDEO_SIZE
 
video_size
);

343 (*
¶Ÿ_ª£t
)(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
dvm_chù_t
 *
chù
);

344 (*
¶Ÿ_so·w¨e_disˇrd_‰ame
)(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
dvm_chù_t
 *
chù
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
);

345 (*
¶Ÿ_ad_is_ªady
)(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
dvm_chù_t
 *
chù
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
);

346 (*
¶Ÿ_fú°_°¨t
)(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
dvm_chù_t
 *
chù
);

347 (*
¶Ÿ_íd_°›
)(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
);

348 (*
£t_¶Ÿ_ícode_±r
)(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
dvm_chù_t
 *
chù
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
);

349 
u32
 (*
gë_time°amp
)(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
);

350 (*
ícode_ídof¶i˚_nŸify
)(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
);

351 (*
ícode_uƒegi°î_nŸify
)(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
);

352 (*
upd©e_m≠_logic_¶Ÿ
)(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
m≠_logic_id
, 
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
);

353 (*
gë_video_size
)(
tw_h264_phy_video_¶Ÿ_t
 *);

354 (*
£t_video_size
)(
tw_h264_phy_video_¶Ÿ_t
 *, 
TW_VIDEO_SIZE
 
video_size
);

355 (*
gë_phy_¶Ÿ_by_phy_¶Ÿ_id
)(
dvm_chù_t
 *, 
phy_¶o_id
, 
tw_h264_phy_video_¶Ÿ_t
 **);

358 
	stw_h264_phy_video_¶Ÿ
{

360 
©omic_t
 
fú°_°¨t_Êag
;

361 
phy_¶Ÿ_id
;

362 
phy_bus_id
;

363 
m≠_logic_id
;

364 
tw_h264_logic_video_¶Ÿ_t
 *
¸oss_bus_logic_video_¶Ÿ
;

365 
tw_vd_‹ig_buf_öfo_t
 
vd_‹ig_buf
;

366 
TW_VIDEO_SIZE
 
video_size
;

368 
tw_h264_phy_video_¶Ÿ_›î©i⁄
 *
›
;

370 
tw_ªgi°î_èbÀ_t
 
logic_ch™_èbÀ
;

371 
tw_ªgi°î_èbÀ_t
 
›íed_logic_ch™_èbÀ
;

373 
tw_ad≠tive_deöãæa˚_c⁄åﬁ
 
deöãæa˚
;

375 
ícode_ch™_m⁄ô‹_timeid
;

376 (*
°¨t_ícode_ch™_m⁄ô‹_hook
)(
tw_h264_phy_video_¶Ÿ_t
 *);

377 (*
dñëe_ícode_ch™_m⁄ô‹_hook
)(
tw_h264_phy_video_¶Ÿ_t
 *);

380 
	stw_h264_logic_video_¶Ÿ_›î©i⁄
{

381 (*
öô
)(
tw_h264_logic_video_¶Ÿ_t
 *, 
logic_¶Ÿ_id
, 
TW_VIDEO_SIZE
 
video_size
);

382 (*
£t_m≠PhySlŸId
)(
tw_h264_logic_video_¶Ÿ_t
 *, 
phy_¶Ÿ_id
);

383 (*
gë_m≠PhySlŸId
)(
tw_h264_logic_video_¶Ÿ_t
 *, 
phy_¶Ÿ
);

384 (*
£t_disˇrdTabÀ
)(
tw_h264_logic_video_¶Ÿ_t
 *, 
u32
 
disˇrdTabÀ
);

385 
u32
 (*
gë_disˇrdTabÀ
)(
tw_h264_logic_video_¶Ÿ_t
 *);

386 (*
£t_roundTabÀSåide
)(
tw_h264_logic_video_¶Ÿ_t
 *, 
roundTabÀSåide
);

387 (*
gë_roundTabÀSåide
)(
tw_h264_logic_video_¶Ÿ_t
 *);

388 (*
˛ór_√edUpd©eFœg
)(
tw_h264_logic_video_¶Ÿ_t
 *);

389 (*
gë_√edUpd©eFœg
)(
tw_h264_logic_video_¶Ÿ_t
 *);

390 (*
gë_video_size
)(
tw_h264_logic_video_¶Ÿ_t
 *);

391 (*
£t_video_size
)(
tw_h264_logic_video_¶Ÿ_t
 *, 
TW_VIDEO_SIZE
 
video_size
);

392 
u32
 (*
gë_Âs
)(
tw_h264_logic_video_¶Ÿ_t
 *);

393 (*
£t_Âs
)(
tw_h264_logic_video_¶Ÿ_t
 *, 
u32
);

394 
u32
 (*
gë_íabÀ¶Ÿ
)(
tw_h264_logic_video_¶Ÿ_t
 *);

395 (*
£t_íabÀ¶Ÿ
)(
tw_h264_logic_video_¶Ÿ_t
 *, 
u32
 );

397 (*
£t_chù_íd_logic_video_¶Ÿ_∑øm
)(
tw_h264_logic_video_¶Ÿ_t
 *, 
dvm_chù_t
 *);

398 
u32
 (*
gë_chù_íd_logic_video_¶Ÿ_∑øm
)(
tw_h264_logic_video_¶Ÿ_t
 *, 
dvm_chù_t
 *);

401 
	stw_h264_logic_video_¶Ÿ
{

402 
u32
 
logicSlŸId
;

403 
u32
 
m≠PhySlŸId
;

404 
u32
 
íabÀSlŸ
;

405 
u32
 
¶ŸFps
;

406 
u32
 
disˇrdTabÀ
;

407 
u32
 
roundTabÀSåide
;

408 
u32
 
h‹_ªvî£
;

409 
u32
 
vî_ªvî£
;

410 
TW_VIDEO_SIZE
 
video_size
;

411 
©omic_t
 
√edUpd©eFœg
;

413 
tw_h264_logic_video_¶Ÿ_›î©i⁄
 *
›
;

416 
	svd_ch™_m≠_öfo
{

417 
u32
 
phy_¶Ÿ_id
;

418 
u32
 
m≠_logic_¶Ÿ_id
;

419 
u32
 
íabÀ
;

420 
u32
 
Âs
;

421 
u32
 
roundTabÀSåide
;

422 
TW_VIDEO_SIZE
 
video_size
;

423 
u32
 
logic_¶Ÿ_disˇrd_èbÀ
;

426 
	stw5864_vd_¸oss_bus_›î©i⁄
{

427 (*
öô
)(
tw5864_vd_¸oss_bus_t
 *, 
TW_CROSS_BUS_WORK_MODE
 
mode
, 
TW_VIDEO_STANDARD
 
video_°™d¨d
);

428 (*
ª£t
)(
tw5864_vd_¸oss_bus_t
 *);

429 (*
gë_logic_video_¶Ÿ_by_logic_id
)(
tw5864_vd_¸oss_bus_t
 *, 
logic_¶Ÿ_id
, 
tw_h264_logic_video_¶Ÿ_t
 **);

430 (*
gë_logic_video_¶Ÿ_by_phy_id
)(
tw5864_vd_¸oss_bus_t
 *, 
¶Ÿ_id
, 
tw_h264_logic_video_¶Ÿ_t
 **);

431 (*
gë_phy_video_¶Ÿ_by_logic_id
)(
tw5864_vd_¸oss_bus_t
 *, 
logic_¶Ÿ_id
, 
tw_h264_phy_video_¶Ÿ_t
 **);

432 (*
gë_phy_video_¶Ÿ_by_phy_id
)(
tw5864_vd_¸oss_bus_t
 *, 
¶Ÿ_id
, 
tw_h264_phy_video_¶Ÿ_t
 **);

434 (*
gë_w‹k_mode
)(
tw5864_vd_¸oss_bus_t
 *);

435 (*
upd©e_w‹k_mode
)(
tw5864_vd_¸oss_bus_t
 *, 
TW_CROSS_BUS_WORK_MODE
 
mode
);

437 (*
ˇlcuœã_¸oss_bus_m≠_èbÀ
)(
tw5864_vd_¸oss_bus_t
 *, 
vd_ch™_m≠_öfo_t
 *);

438 (*
£t_chù_íd_¸oss_bus
)(
tw5864_vd_¸oss_bus_t
 *, 
dvm_chù_t
 *);

441 
	stw5864_vd_¸oss_bus
{

442 
TW_CROSS_BUS_WORK_MODE
 
mode
;

443 
GROUP_MODE
 
bus_mode
[
TW_MAX_GRP
];

444 
disˇrd_°ride_limô
;

445 
tw_h264_logic_video_¶Ÿ_t
 
logic_video_¶Ÿ
[
TW5864_CROSS_BUS_LOGIC_VD_CHAN_NUMBER
];

446 
tw_h264_phy_video_¶Ÿ_t
 
phy_video_¶Ÿ
[
TW5864_PHY_VD_CHAN_NUMBER
];

448 
tw5864_vd_¸oss_bus_›î©i⁄
 *
›
;

451 
	stw_h264_ícode_c⁄åﬁ_›î©i⁄
{

452 (*
öô
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

453 (*
ª£t
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

455 (*
£t_•s
)(
tw_h264_ícode_c⁄åﬁ_t
*);

456 (*
£t_µs
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

457 (*
£t_¶i˚_hód
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

458 (*
gíî©‹_hód
)(
tw_h264_ícode_c⁄åﬁ_t
 *, 
tw_video_‰ame_tcb_t
 *
‰ame
);

460 (*
ˇlcuœã_‰ame_ty≥
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

461 (*
gë_‰ame_ty≥
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

462 (*
f‹˚_I_‰ame
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

463 (*
upd©e_©_ícode_‰ame_ok
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

464 (*
upd©e_©_disˇrd_‰ame
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

465 (*
upd©e_©_ícode_‰ame_îr
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

466 (*
upd©e_image_ªsﬁuti⁄
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

467 (*
upd©e_Âs_disˇrd_èbÀ
)(
tw_h264_ícode_c⁄åﬁ_t
 *, 
u32
 , u32);

469 (*
gë_¶i˚_hód_™d_ad_°©us
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

470 (*
˛ór_¶i˚_hód_™d_ad_°©us
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

471 (*
upd©e_¶i˚_hód_ªady
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

472 (*
˛ór_¶i˚_hód_ªady
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

473 (*
upd©e_ad_ªady
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

474 (*
˛ór_ad_ªady
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

475 (*
gë_ad_°©us
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

477 
u32
 (*
gë_time°amp
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

478 (*
fú°_°¨t
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

479 (*
°¨t_ícode
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

481 (*
úq_func
)(
úq
, *);

482 (*
ªad_vlc_∑øm
)(
tw_h264_ícode_c⁄åﬁ_t
 *, 
dvm_chù_t
 *
chù
);

483 (*
ˇlcuœã_mov_∑øm
)(
tw_h264_ícode_c⁄åﬁ_t
 *, 
dvm_chù_t
 *
chù
);

484 (*
mov_vlc_codög
)(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
, 
dvm_chù_t
 *
chù
);

485 (*
chù_pög_p⁄g_upd©e
)(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
, 
dvm_chù_t
 *
chù
);

486 (*
nŸify
)(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
, 
dvm_chù_t
 *
chù
);

487 (*
ch™_ˇn_com∂ëe
)(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
);

490 
	stw_h264_ícode_dñè
{

491 
timevÆ
 
œ°_time
;

492 
timevÆ
 
cuº_time
;

494 
u32
 
max_dñè
;

495 
u32
 
cur_dñè
;

496 
u32
 
mö_dñè
;

498 
	stw_h264_ícode_c⁄åﬁ
 {

499 
©omic_t
 
¶i˚_hód_™d_ad_°©us
;

500 
‰ame_ty≥
;

502 
©omic_t
 
íabÀ
;

504 
b_f‹˚_i_‰ame
;

505 
u32
 
i_‰ameNumbî
;

506 
u32
 
i_‰ame_£rül
;

507 
i_¶i˚_‰ame_num
;

508 
i_¸ossbus_Âs
;

509 
i_so·w¨e_disˇrd_‰ame_èbÀ
;

510 
i_disˇrd_‰ame_numbî
;

511 
i_‰ame_≥r_£c⁄d
;

512 
i_p_°ride
;

513 
i_g›_°ride
;

514 
i_åiggî_sync_cou¡î
;

515 
i_°©i°ic_möuãr_cou¡î
;

516 
ad_check
;

517 
ad_dñè1
;

518 
ad_dñè2
;

519 
ad_dñè3
;

520 
u64
 
œ°_jiffõs
;

521 
u32
 
i_cuº_Âs
;

522 
u32
 
i_ﬁd_Âs
;

523 
i_Âm
;

524 
u32
 
i_Âs
;

525 
ad_ªady
;

527 
i_œ°_idr
;

528 
i_idr_pic_id
;

529 
i_mb_x
;

530 
i_mb_y
;

531 
i_fú°_mb
;

532 
i_fú°_mb_x_™d_y
;

533 
i_cuº_œmda
;

534 
i_cuº_qp
;

535 
i_vd_ª„ªn˚_±r
;

537 
u32
 
tŸÆ_‰ame_Àn
;

538 
‰ame_ba£_addr
;

539 
£˘i⁄_numbî
;

540 
have_ªcv_£˘i⁄_numbî
;

541 
£˘i⁄_Àn
;

542 
èûî_Àn
;

544 
h264_•s_t
 
•s_¨øy
[1];

545 
h264_µs_t
 
µs_¨øy
[1];

546 
h264_¶i˚_hódî_t
 
¶i˚_hód_¨øy
[1];

547 
h264_•s_t
 *
•s
;

548 
h264_µs_t
 *
µs
;

549 
h264_¶i˚_hódî_t
 *
¶i˚_hód
;

551 
ovîÊow
;

552 
u32
 
vlc_°©us
;

553 
u32
 
vlcI¡rLí
;

555 
tw_h264_ícode_dñè_t
 
ícode_dñè
;

556 
tw_h264_ícode_c⁄åﬁ_›î©i⁄
 *
›
;

558 
ícode_timeout_m⁄ô‹_timeid
;

559 (*
add_ícode_timeout_hook
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

560 (*
dñëe_ícode_timeout_hook
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

562 
dñay_ª°¨t_ícode_timeid
;

563 (*
add_dñay_ª°¨t_ícode_hook
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

564 (*
dñëe_dñay_ª°¨t_ícode_hook
)(
tw_h264_ícode_c⁄åﬁ_t
 *);

567 
	eTW5864_REQ_TYPE
{

568 
DVM_CHIP_REQ_FIRST_STRAT_ENCODE_CHAN
,

569 
DVM_CHIP_REQ_START_ENCODE_CHAN
,

572 
	#to_gë_ícode_ch™_£rvi˚_tcb_wôh_£rvi˚_tcb
(
node
Ë
	`c⁄èöî_of
“ode, 
ícode_ch™_£rvi˚_tcb_t
, 
£rvi˚_tcb
)

	)

573 
	sícode_ch™_£rvi˚_tcb
{

574 
tcb_node_t
 
£rvi˚_tcb
;

575 
TW5864_REQ_TYPE
 
ty≥
;

576 *
c⁄ãxt
;

577 (*
ªq_ˇŒback
)(*
c⁄ãxt
);

580 
	schù_ícode_ch™_£rvi˚_queue_›î©i⁄
{

581 (*
öô
)(
chù_ícode_ch™_£rvi˚_queue_t
 *);

582 (*
gë_queue_cuº_íåy_numbî
)(
chù_ícode_ch™_£rvi˚_queue_t
 *);

583 (*
put_£rvi˚_ªque°_öto_queue
)(
chù_ícode_ch™_£rvi˚_queue_t
 *, 
ícode_ch™_£rvi˚_tcb_t
 *);

584 (*
put_£rvi˚_ªque°_öto_queue_hódî
)(
chù_ícode_ch™_£rvi˚_queue_t
 *, 
ícode_ch™_£rvi˚_tcb_t
 *);

585 (*
åy_gë_cuº_c⁄sumî_‰om_queue
)(
chù_ícode_ch™_£rvi˚_queue_t
 *);

586 (*
ªÀa£_cuº_c⁄sumî
)(
chù_ícode_ch™_£rvi˚_queue_t
 *);

587 (*
åiggî_chù_≥ndög_£rvi˚_ªque°
)(
chù_ícode_ch™_£rvi˚_queue_t
 *);

590 
	schù_ícode_ch™_£rvi˚_queue
{

591 
•ölock_t
 
lock
;

592 
©omic_t
 
h264_ma°î_ˇn_ªcv_numbî
;

593 
©omic_t
 
h264_ddr_ˇche_numbî
;

594 
tcb_node_queue_t
 
£rvi˚_queue_node
;

595 
ícode_ch™_£rvi˚_tcb_t
 *
cuº_c⁄sumî
;

597 
chù_ícode_ch™_£rvi˚_queue_›î©i⁄
 *
›
;

600 
	#to_gë_tw_h264_ícode_ch™_wôh_logic_ch™_ed
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_h264_logic_ícode_ch™_t
, 
logic_ch™_ed
)

	)

601 
	#to_gë_tw_h264_ícode_ch™_wôh_›íed_logic_ch™_ed
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_h264_logic_ícode_ch™_t
, 
›íed_logic_ch™_ed
)

	)

602 
	#to_gë_tw_h264_ícode_ch™_wôh_vd_ªf
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_h264_logic_ícode_ch™_t
, 
vd_ªf
)

	)

603 
	#to_gë_tw_h264_ícode_ch™_wôh_ícode_¥›îty
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_h264_logic_ícode_ch™_t
, 
ícode_¥›îty
)

	)

604 
	#to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_h264_logic_ícode_ch™_t
, 
ícode_c⁄åﬁ
)

	)

605 
	#to_gë_tw_h264_ícode_ch™_wôh_osd_ígöe
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_h264_logic_ícode_ch™_t
, 
ícode_osd_ígöe
)

	)

606 
	#to_gë_tw_h264_ícode_ch™_wôh_ícode_ªque°_tcb
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_h264_logic_ícode_ch™_t
, 
ícode_ªque°_tcb
)

	)

607 
	stw_h264_logic_ícode_ch™


609 
phy_¶Ÿ_id
;

610 
logic_ch™_id
;

611 
ty≥
;

612 
ªad_bô°ªam_mode
;

613 
©omic_t
 
›íed_Êag
;

614 
©omic_t
 
have_dñivî_sync_Êag
;

615 
ed_tcb_t
 
logic_ch™_ed
;

616 
ed_tcb_t
 
›íed_logic_ch™_ed
;

617 
n⁄block_msg_timî_id
[
REQ_MSG_NUMBER
];

618 
dñay_msg_timî_id
[
REQ_MSG_NUMBER
];

620 
dvm_chù_t
 *
chù
;

621 
tw5864_avSync_dev_t
 *
tw_devi˚_ch™
;

622 
tw_h264_phy_video_¶Ÿ_t
 *
ma°î_¶Ÿ
;

624 
tw_h264_ícode_¥›îty_t
 
ícode_¥›îty
;

625 
tw_h264_ícode_c⁄åﬁ_t
 
ícode_c⁄åﬁ
;

626 #ifde‡ 
OSD_MODULE


627 
osd_ch™_ígöe_t
 
ícode_osd_ígöe
;

629 
tw_rc_drivî_t
 
rc_drivî
;

630 
ícode_ch™_£rvi˚_tcb_t
 
ícode_ªque°_tcb
;

631 
d¥am_ªque°_t
 
ªad_video_bô°ªam_ªq
;

632 
d¥am_∑ge_node_t
 *
d¥am_∑ge
;

633 
ddr_video_bô°ªam_buf_node_t
 *
video_bô°ªam_buf
;

635 
tw_video_ch™_buf_poﬁ_t
 
ícode_ch™_buf_poﬁ
;

636 
tw_video_‰ame_tcb_queue_t
 
ícode_‰ame_queue
;

637 #ifde‡ 
MV_MODULE


638 
tw_video_mv_‰ame_tcb_queue_t
 
ícode_mv_‰ame_queue
;

642 
	sddr_bô°ªam_hódî
{

643 
vÆid
;

644 
ma°îOrSub
;

645 
‰ameTy≥
;

646 
ch™_id_™d_‹ig_id
;

647 
off£t
;

648 
Àn
;

649 
timeSèmp
;

650 
ª£rvî1
;

651 
ª£rvî2
;

652 
ª£rvî3
;

653 
ª£rvî4
;

656 
	sddr_video_bô°ªam_hódî
{

657 
ddr_bô°ªam_hódî_t
 
mvFœgs_hódî
;

658 
ddr_bô°ªam_hódî_t
 
mvVext‹_hódî
;

659 
ddr_bô°ªam_hódî_t
 
h264_bô°ªam_hódî
;

662 
	#VIDEO_SIZE_FROM_VD
 0

	)

663 
	#VIDEO_SIZE_FROM_VJ
 1

	)

665 
u32
 
ölöe
 
VIDEO_SIZE_TO_WIDTH
(
§c
, 
TW_VIDEO_SIZE
 
size
, 
TW_VIDEO_STANDARD
 
°™d¨d
)

667 if(
°™d¨d
 =
TW_VIDEO_STANDARD_PAL
) {

668 
size
) {

669 
TW_VIDEO_SIZE_QCIF
:

670 if(
§c
 =
VIDEO_SIZE_FROM_VD
) {

671  
WIDTH_FRAME_QCIF_PAL
;

673  (
WIDTH_FRAME_4CIF_PAL
>>2);

675 
TW_VIDEO_SIZE_CIF
:

676 if(
§c
 =
VIDEO_SIZE_FROM_VD
) {

677  
WIDTH_FRAME_CIF_PAL
;

679  (
WIDTH_FRAME_4CIF_PAL
>>1);

681 
TW_VIDEO_SIZE_HALF_D1
:

682 if(
§c
 =
VIDEO_SIZE_FROM_VD
) {

683  
WIDTH_FRAME_HALF_D1_PAL
;

687 
TW_VIDEO_SIZE_D1
:

688 if(
§c
 =
VIDEO_SIZE_FROM_VD
) {

689  
WIDTH_FRAME_D1_PAL
;

693 
TW_VIDEO_SIZE_QHALF_D1
:

694 
TW_VIDEO_SIZE_USER
:

696  (
WIDTH_FRAME_4CIF_PAL
>>1);

698 }if(
°™d¨d
 =
TW_VIDEO_STANDARD_NTSC
){

699 
size
) {

700 
TW_VIDEO_SIZE_QCIF
:

701 if(
§c
 =
VIDEO_SIZE_FROM_VD
) {

702  
WIDTH_FRAME_QCIF_NTSC
;

704  (
WIDTH_FRAME_4CIF_NTSC
>>2);

706 
TW_VIDEO_SIZE_CIF
:

707 if(
§c
 =
VIDEO_SIZE_FROM_VD
) {

708  
WIDTH_FRAME_CIF_NTSC
;

710  (
WIDTH_FRAME_4CIF_NTSC
>>1);

712 
TW_VIDEO_SIZE_HALF_D1
:

713 if(
§c
 =
VIDEO_SIZE_FROM_VD
) {

714  
WIDTH_FRAME_HALF_D1_NTSC
;

718 
TW_VIDEO_SIZE_D1
:

719 if(
§c
 =
VIDEO_SIZE_FROM_VD
) {

720  
WIDTH_FRAME_D1_NTSC
;

724 
TW_VIDEO_SIZE_QHALF_D1
:

725 
TW_VIDEO_SIZE_USER
:

727  (
WIDTH_FRAME_4CIF_NTSC
>>1);

734 
u32
 
ölöe
 
VIDEO_SIZE_TO_HEIGHT
(
§c
, 
TW_VIDEO_SIZE
 
size
, 
TW_VIDEO_STANDARD
 
°™d¨d
)

736 if(
°™d¨d
 =
TW_VIDEO_STANDARD_PAL
) {

737 
size
) {

738 
TW_VIDEO_SIZE_QCIF
:

739  
HEIGHT_FRAME_QCIF_PAL
;

740 
TW_VIDEO_SIZE_CIF
:

741  
HEIGHT_FRAME_CIF_PAL
;

742 
TW_VIDEO_SIZE_HALF_D1
:

743  
HEIGHT_FRAME_HALF_D1_PAL
;

744 
TW_VIDEO_SIZE_D1
:

745  
HEIGHT_FRAME_D1_PAL
;

746 
TW_VIDEO_SIZE_QHALF_D1
:

747 
TW_VIDEO_SIZE_USER
:

749  
HEIGHT_FRAME_CIF_PAL
;

751 }if(
°™d¨d
 =
TW_VIDEO_STANDARD_NTSC
){

752 
size
) {

753 
TW_VIDEO_SIZE_QCIF
:

754  
HEIGHT_FRAME_QCIF_NTSC
;

755 
TW_VIDEO_SIZE_CIF
:

756  
HEIGHT_FRAME_CIF_NTSC
;

757 
TW_VIDEO_SIZE_HALF_D1
:

758  
HEIGHT_FRAME_HALF_D1_NTSC
;

759 
TW_VIDEO_SIZE_D1
:

760  
HEIGHT_FRAME_D1_NTSC
;

761 
TW_VIDEO_SIZE_QHALF_D1
:

762 
TW_VIDEO_SIZE_USER
:

764  
HEIGHT_FRAME_CIF_NTSC
;

771 
u32
 
ölöe
 
VIDEO_SIZE_FROM_WIDTH_HEIGHT
(u32 
width
, u32 
height
, 
TW_VIDEO_STANDARD
 
°™d¨d
)

773 if((
width
 =720Ë|| (width =
WIDTH_FRAME_D1_PAL
Ë|| (width =
WIDTH_FRAME_D1_NTSC
Ë|| (width =
WIDTH_FRAME_4CIF_PAL
Ë|| (width =
WIDTH_FRAME_4CIF_NTSC
)) {

774 if((
height
 =
HEIGHT_FRAME_HALF_D1_PAL
Ë|| (heighà=
HEIGHT_FRAME_HALF_D1_NTSC
)) {

775  
TW_VIDEO_SIZE_HALF_D1
;

777  
TW_VIDEO_SIZE_D1
;

780 if((
width
 =(720>>1)Ë|| (width =
WIDTH_FRAME_CIF_PAL
Ë|| (width =
WIDTH_FRAME_CIF_NTSC
)|| (width =(
WIDTH_FRAME_4CIF_PAL
>>1)Ë|| (width =(
WIDTH_FRAME_4CIF_NTSC
>>1))) {

781  
TW_VIDEO_SIZE_CIF
;

784 if((
width
 =
HEIGHT_FRAME_QCIF_PAL
Ë|| (width =
HEIGHT_FRAME_QCIF_NTSC
Ë|| (width =(
WIDTH_FRAME_4CIF_PAL
>>2)Ë|| (width =(
WIDTH_FRAME_4CIF_NTSC
>>2))) {

785  
TW_VIDEO_SIZE_QCIF
;

788  
TW_VIDEO_SIZE_USER
;

791 
öô_tw5864_ícode_time°amp
(
tw_time°amp_t
 *
tw5864_ícode_time°amp
);

792 
öô_tw5864_vd_¸oss_bus
(
tw5864_vd_¸oss_bus_t
 *, 
TW_CROSS_BUS_WORK_MODE
 
mode
, 
TW_VIDEO_STANDARD
 
video_°™d¨d
);

793 
ªmove_tw5864_vd_¸oss_bus
(
tw5864_vd_¸oss_bus_t
 *
vd_¸oss_bus
);

794 
öô_tw5864_h264_ícode_ch™
(
tw_h264_logic_ícode_ch™_t
 *, 
bus_id
, 
chù_id
, 
phy_¶Ÿ_id
, 
ty≥
, 
dvm_chù_t
 *
chù
);

795 
ªmove_tw5864_h264_ícode_ch™
(
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
);

796 
nŸify_ªmove_ícode_ch™_£rvi˚
(
ícode_ch™_£rvi˚_tcb_t
 *
cuº_c⁄sumî
);

797 
öô_ícode_ch™_£rvi˚_tcb_wôh_nuŒ
(
ícode_ch™_£rvi˚_tcb_t
 *
ícode_ªque°_tcb
);

798 
öô_ícode_ch™_£rvi˚_tcb_wôh_fú°_°¨t
(
ícode_ch™_£rvi˚_tcb_t
 *
ícode_ªque°_tcb
);

799 
öô_ícode_ch™_£rvi˚_tcb_wôh_°¨t_ícode
(
ícode_ch™_£rvi˚_tcb_t
 *
ícode_ªque°_tcb
);

800 
h264_logic_ícode_ch™_dñay_ª°¨t_ícode
(
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
);

802 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_h264_video_buf.h

1 #i‚def 
TW_H264_VIDEO_BUF_H


2 
	#TW_H264_VIDEO_BUF_H


	)

4 #ifde‡
__˝lu•lus


9 
	#VIDEO_MASTER_CHAN_BUF_POOL_LEN
 (0x80000)

10 
	#VIDEO_SUB_CHAN_BUF_POOL_LEN
 (0x20000)

11 
	#MŸi⁄Ve˘‹BôFœg_BUF_LEN
 (24)

	)

13 
	sö£π_03_°©e_machöe
{

14 
å™_°©e
;

15 
å™s„r
;

18 
	stw_video_ch™_buf_poﬁ_›î©i⁄
{

19 (*
¸óã
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, );

20 (*
ªÀa£
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

22 (*
gë_video_∑ckë_tcb
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_∑ckë_tcb_t
 **
∑ckë
);

23 (*
åy_gë_video_∑ckë_tcb
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_∑ckë_tcb_t
 **
∑ckë
);

24 (*
put_video_∑ckë_tcb
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_∑ckë_tcb_t
 *
∑ckë
);

25 (*
gë_video_∑ckë_tcb_poﬁ_íåy_numbî
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

27 (*
gë_video_‰ame_tcb
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_‰ame_tcb_t
 **
‰ame
);

28 (*
åy_gë_video_‰ame_tcb
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_‰ame_tcb_t
 **
‰ame
);

29 (*
put_video_‰ame_tcb
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_‰ame_tcb_t
 *
‰ame
);

30 (*
gë_video_‰ame_tcb_poﬁ_íåy_numbî
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

32 #ifde‡ 
MV_MODULE


33 (*
gë_video_mv_∑ckë_tcb
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_mv_∑ckë_tcb_t
 **
∑ckë
);

34 (*
åy_gë_video_mv_∑ckë_tcb
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_mv_∑ckë_tcb_t
 **
∑ckë
);

35 (*
put_video_mv_∑ckë_tcb
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_mv_∑ckë_tcb_t
 *
∑ckë
);

36 (*
gë_video_mv_∑ckë_tcb_poﬁ_íåy_numbî
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

38 (*
gë_video_mv_‰ame_tcb
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_mv_‰ame_tcb_t
 **
‰ame
);

39 (*
åy_gë_video_mv_‰ame_tcb
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_mv_‰ame_tcb_t
 **
‰ame
);

40 (*
put_video_mv_‰ame_tcb
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_mv_‰ame_tcb_t
 *
‰ame
);

41 (*
gë_video_mv_‰ame_tcb_poﬁ_íåy_numbî
)(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

45 
	stw_video_ch™_buf_poﬁ
{

46 
ˇche_‹dî
;

47 *
ˇche_buf„r
;

49 
video_∑ckë_buf„r_size
;

50 
video_∑ckë_íåy_numbî
;

51 
tcb_node_poﬁ_t
 
video_∑ckë_poﬁ_tcb
;

52 
tw_video_∑ckë_tcb_t
 *
video_∑ckë_íåy_poﬁ
;

54 
video_‰ame_íåy_numbî
;

55 
tcb_node_poﬁ_t
 
video_‰ame_poﬁ_tcb
;

56 
tw_video_‰ame_tcb_t
 *
video_‰ame_íåy_poﬁ
;

57 #ifde‡ 
MV_MODULE


58 
mv_ˇche_‹dî
;

59 *
mv_ˇche_buf„r
;

61 
mv_∑ckë_buf„r_size
;

62 
mv_∑ckë_íåy_numbî
;

63 
tcb_node_poﬁ_t
 
mv_∑ckë_poﬁ_tcb
;

64 
tw_video_mv_∑ckë_tcb_t
 *
mv_∑ckë_íåy_poﬁ
;

66 
mv_‰ame_íåy_numbî
;

67 
tcb_node_poﬁ_t
 
mv_‰ame_poﬁ_tcb
;

68 
tw_video_mv_‰ame_tcb_t
 *
mv_‰ame_íåy_poﬁ
;

70 
tw_video_ch™_buf_poﬁ_›î©i⁄
 *
›
;

73 
	stw_video_∑ckë_›î©i⁄


75 (*
öô
)(
tw_video_∑ckë_tcb_t
 *
∑ckë
, 
tw_video_ch™_buf_poﬁ_t
 *
poﬁ
, 
id
);

76 (*
ª£t
)(
tw_video_∑ckë_tcb_t
 *
∑ckë
);

77 (*
ªÀa£
)(
tw_video_∑ckë_tcb_t
 **
∑ckë
, 
tw_video_ch™_buf_poﬁ_t
 *
poﬁ
);

78 (*
ª„ªn˚
)(
tw_video_∑ckë_tcb_t
 *
§c_∑ckë
,Åw_video_∑ckë_tcb_à**
±r_de°_∑ckë
);

80 (*
dma_m≠
)(
tw_video_∑ckë_tcb_t
 *
∑ckë
, 
dma_d©a_dúe˘i⁄
 
dúe˘i⁄
);

81 (*
dma_unm≠
)(
tw_video_∑ckë_tcb_t
 *
∑ckë
, 
dma_d©a_dúe˘i⁄
 
dúe˘i⁄
);

83 
size_t
 (*
submô
)(
tw_video_∑ckë_tcb_t
 *
∑ckë
, 
__u£r
 *
d©a
, size_à
cou¡
, 
loff_t
 *
µos
, 
h264_«l_t
 *
«l
);

86 
	#to_video_∑ckë_buf_tcb
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_video_∑ckë_tcb_t
, 
∑ckë_node
)

	)

87 
	stw_video_∑ckë_tcb


89 
©omic_t
 
ªf_cou¡
;

90 
•ölock_t
 
lock
;

91 
tcb_node_t
 
∑ckë_node
;

92 
∑ckë_id
;

94 
∑ckë_size
;

95 
∑ylﬂd_Àn
;

96 
c⁄sumî_Àn
;

97 
id_of_∑ckë_queue
;

99 
u8
 *
d©a
;

100 
dma_addr_t
 
dma_addr
;

102 
tw_video_∑ckë_›î©i⁄
 *
›
;

105 
	stw_video_∑ckë_queue_›î©i⁄
{

106 (*
gë
)(
tw_video_∑ckë_tcb_queue_t
 *, 
tw_video_∑ckë_tcb_t
 **);

107 (*
åy_gë
)(
tw_video_∑ckë_tcb_queue_t
 *, 
tw_video_∑ckë_tcb_t
 **);

108 (*
gë_èûî
)(
tw_video_∑ckë_tcb_queue_t
 *, 
tw_video_∑ckë_tcb_t
 **);

109 (*
åy_gë_èûî
)(
tw_video_∑ckë_tcb_queue_t
 *, 
tw_video_∑ckë_tcb_t
 **);

110 (*
put
)(
tw_video_∑ckë_tcb_queue_t
 *, 
tw_video_∑ckë_tcb_t
 *);

111 (*
put_hódî
)(
tw_video_∑ckë_tcb_queue_t
 *, 
tw_video_∑ckë_tcb_t
 *);

113 (*
gë_cuº_¥odu˚r_‰om_poﬁ
)(
tw_video_∑ckë_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

114 (*
åy_gë_cuº_¥odu˚r_‰om_poﬁ
)(
tw_video_∑ckë_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

115 (*
put_cuº_¥odu˚r_öto_queue
)(
tw_video_∑ckë_tcb_queue_t
 *);

116 (*
ªÀa£_cuº_¥odu˚r
)(
tw_video_∑ckë_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

117 (*
gë_cuº_c⁄sumî_‰om_queue
)(
tw_video_∑ckë_tcb_queue_t
 *);

118 (*
åy_gë_cuº_c⁄sumî_‰om_queue
)(
tw_video_∑ckë_tcb_queue_t
 *);

119 (*
ªÀa£_cuº_c⁄sumî
)(
tw_video_∑ckë_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

121 (*
gë_cuº_queue_íåy_numbî
)(
tw_video_∑ckë_tcb_queue_t
 *);

122 (*
ªÀa£
)(
tw_video_∑ckë_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

123 (*
öô
)(
tw_video_∑ckë_tcb_queue_t
 *);

126 
	stw_video_∑ckë_tcb_queue
{

127 
u32
 
°¨t_time°amp
, 
tŸÆ_duøti⁄
;

128 
tcb_node_queue_t
 
queue_node
;

129 
tw_video_∑ckë_tcb_t
 *
cuº_c⁄sumî
;

130 
tw_video_∑ckë_tcb_t
 *
cuº_¥odu˚r
;

131 
•ölock_t
 
lock
;

133 
tw_video_∑ckë_queue_›î©i⁄
 *
›
;

136 
	stw_video_‰ame_tcb_›î©i⁄
 {

137 (*
öô
)(
tw_video_‰ame_tcb_t
 *
‰ame
);

138 (*
ª£t
)(
tw_video_‰ame_tcb_t
 *
‰ame
);

139 (*
ªÀa£
)(
tw_video_‰ame_tcb_t
 **
±r_‰ame
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

140 (*
ª„ªn˚
)(
tw_video_‰ame_tcb_t
 *
§c_‰ame
,Åw_video_‰ame_tcb_à**
±r_de°_‰ame
);

142 
size_t
 (*
submô
)(
tw_video_‰ame_tcb_t
 *
‰ame
, 
__u£r
 *
d©a
, size_à
cou¡
, 
loff_t
 *
µos
, 
ma°îOrSubFœg
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

145 
	#to_video_‰ame_tcb
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_video_‰ame_tcb_t
, 
‰ame_node
)

	)

146 
	stw_video_‰ame_tcb
{

147 
•ölock_t
 
lock
;

148 
©omic_t
 
ªf_cou¡
;

149 
tcb_node_t
 
‰ame_node
;

151 
‰ame_ty≥
;

152 
h264_«l_t
 
«l
;

153 
‰ame_Àn
;

154 
c⁄sumî_‰ame_off£t
;

155 
__u32
 
time°amp
;

156 
duøti⁄
;

157 
i_öô_qp
;

158 
i_cuº_qp
;

159 
i_mb_x
;

160 
i_mb_y
;

161 
i_log_g›_vÆue
;

162 
‰ame_numbî
;

163 
Âs
;

164 
‰ame_is_îr
;

166 
tw_video_∑ckë_tcb_queue_t
 
video_∑ckë_queue
;

167 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
;

168 
tw_video_‰ame_tcb_›î©i⁄
 *
›
;

171 
	stw_video_‰ame_queue_›î©i⁄
{

172 (*
gë
)(
tw_video_‰ame_tcb_queue_t
 *, 
tw_video_‰ame_tcb_t
 **);

173 (*
åy_gë
)(
tw_video_‰ame_tcb_queue_t
 *, 
tw_video_‰ame_tcb_t
 **);

174 (*
gë_èûî
)(
tw_video_‰ame_tcb_queue_t
 *, 
tw_video_‰ame_tcb_t
 **);

175 (*
åy_gë_èûî
)(
tw_video_‰ame_tcb_queue_t
 *, 
tw_video_‰ame_tcb_t
 **);

176 (*
put
)(
tw_video_‰ame_tcb_queue_t
 *, 
tw_video_‰ame_tcb_t
 *);

177 (*
put_hódî
)(
tw_video_‰ame_tcb_queue_t
 *, 
tw_video_‰ame_tcb_t
 *);

179 (*
gë_cuº_¥odu˚r_‰om_poﬁ
)(
tw_video_‰ame_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

180 (*
åy_gë_cuº_¥odu˚r_‰om_poﬁ
)(
tw_video_‰ame_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

181 (*
put_cuº_¥odu˚r_öto_queue
)(
tw_video_‰ame_tcb_queue_t
 *);

182 (*
ªÀa£_cuº_¥odu˚r
)(
tw_video_‰ame_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

183 (*
gë_cuº_c⁄sumî_‰om_queue
)(
tw_video_‰ame_tcb_queue_t
 *);

184 (*
åy_gë_cuº_c⁄sumî_‰om_queue
)(
tw_video_‰ame_tcb_queue_t
 *);

185 (*
ªÀa£_cuº_c⁄sumî
)(
tw_video_‰ame_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

186 (*
put_cuº_c⁄sumî_öto_queue_hódî
)(
tw_video_‰ame_tcb_queue_t
 *);

188 (*
gë_cuº_queue_íåy_numbî
)(
tw_video_‰ame_tcb_queue_t
 *);

189 (*
ªÀa£
)(
tw_video_‰ame_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

190 (*
öô
)(
tw_video_‰ame_tcb_queue_t
 *);

193 
	stw_video_‰ame_tcb_queue
{

194 
u32
 
°¨t_time°amp
, 
tŸÆ_duøti⁄
;

195 
tcb_node_queue_t
 
queue_node
;

196 
tw_video_‰ame_tcb_t
 *
cuº_c⁄sumî
;

197 
tw_video_‰ame_tcb_t
 *
cuº_¥odu˚r
;

198 
•ölock_t
 
lock
;

200 
tw_video_‰ame_queue_›î©i⁄
 *
›
;

203 #ifde‡ 
MV_MODULE


204 
	stw_video_mv_∑ckë_tcb_›î©i⁄
{

205 (*
öô
)(
tw_video_mv_∑ckë_tcb_t
 *
∑ckë
, 
tw_video_ch™_buf_poﬁ_t
 *
poﬁ
, 
id
);

206 (*
ª£t
)(
tw_video_mv_∑ckë_tcb_t
 *
∑ckë
);

207 (*
ªÀa£
)(
tw_video_mv_∑ckë_tcb_t
 **
±r_∑ckë
, 
tw_video_ch™_buf_poﬁ_t
 *
poﬁ
);

208 (*
ª„ªn˚
)(
tw_video_mv_∑ckë_tcb_t
 *
§c_∑ckë
,Åw_video_mv_∑ckë_tcb_à**
±r_de°_∑ckë
);

210 (*
dma_m≠
)(
tw_video_mv_∑ckë_tcb_t
 *
∑ckë
, 
dma_d©a_dúe˘i⁄
 
dúe˘i⁄
);

211 (*
dma_unm≠
)(
tw_video_mv_∑ckë_tcb_t
 *
∑ckë
, 
dma_d©a_dúe˘i⁄
 
dúe˘i⁄
);

213 
size_t
 (*
submô
)(
tw_video_mv_∑ckë_tcb_t
 *
∑ckë
, 
__u£r
 *
d©a
, size_à
cou¡
, 
loff_t
 *
µos
);

216 
	#to_gë_tw_video_mv_∑ckë_tcb
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_video_mv_∑ckë_tcb_t
, 
mv_∑ckë_node
)

	)

217 
	stw_video_mv_∑ckë_tcb
{

218 
•ölock_t
 
lock
;

219 
©omic_t
 
ªf_cou¡
;

220 
tcb_node_t
 
mv_∑ckë_node
;

222 
__u8
 *
d©a
;

223 
__u32
 
d©a_size
;

224 
__u8
 *
mvVe˘‹_buf
;

225 
__u32
 
mvVe˘‹_Àn
;

226 
dma_addr_t
 
dma_addr
;

228 
tw_video_mv_∑ckë_tcb_›î©i⁄
 *
›
;

231 
	stw_video_mv_∑ckë_tcb_queue_›î©i⁄
{

232 (*
gë
)(
tw_video_mv_∑ckë_tcb_queue_t
 *, 
tw_video_mv_∑ckë_tcb_t
 **);

233 (*
åy_gë
)(
tw_video_mv_∑ckë_tcb_queue_t
 *, 
tw_video_mv_∑ckë_tcb_t
 **);

234 (*
gë_èûî
)(
tw_video_mv_∑ckë_tcb_queue_t
 *, 
tw_video_mv_∑ckë_tcb_t
 **);

235 (*
åy_gë_èûî
)(
tw_video_mv_∑ckë_tcb_queue_t
 *, 
tw_video_mv_∑ckë_tcb_t
 **);

236 (*
put
)(
tw_video_mv_∑ckë_tcb_queue_t
 *, 
tw_video_mv_∑ckë_tcb_t
 *);

237 (*
put_hódî
)(
tw_video_mv_∑ckë_tcb_queue_t
 *, 
tw_video_mv_∑ckë_tcb_t
 *);

239 (*
gë_cuº_¥odu˚r_‰om_poﬁ
)(
tw_video_mv_∑ckë_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

240 (*
åy_gë_cuº_¥odu˚r_‰om_poﬁ
)(
tw_video_mv_∑ckë_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

241 (*
put_cuº_¥odu˚r_öto_queue
)(
tw_video_mv_∑ckë_tcb_queue_t
 *);

242 (*
ªÀa£_cuº_¥odu˚r
)(
tw_video_mv_∑ckë_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

243 (*
gë_cuº_c⁄sumî_‰om_queue
)(
tw_video_mv_∑ckë_tcb_queue_t
 *);

244 (*
åy_gë_cuº_c⁄sumî_‰om_queue
)(
tw_video_mv_∑ckë_tcb_queue_t
 *);

245 (*
ªÀa£_cuº_c⁄sumî
)(
tw_video_mv_∑ckë_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

247 (*
gë_cuº_queue_íåy_numbî
)(
tw_video_mv_∑ckë_tcb_queue_t
 *);

248 (*
ªÀa£
)(
tw_video_mv_∑ckë_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

249 (*
öô
)(
tw_video_mv_∑ckë_tcb_queue_t
 *);

252 
	stw_video_mv_∑ckë_tcb_queue
{

253 
u32
 
°¨t_time°amp
, 
tŸÆ_duøti⁄
;

254 
tcb_node_queue_t
 
queue_node
;

255 
tw_video_mv_∑ckë_tcb_t
 *
cuº_c⁄sumî
;

256 
tw_video_mv_∑ckë_tcb_t
 *
cuº_¥odu˚r
;

257 
•ölock_t
 
lock
;

259 
tw_video_mv_∑ckë_tcb_queue_›î©i⁄
 *
›
;

262 
	stw_video_mv_‰ame_tcb_›î©i⁄
{

263 (*
öô
)(
tw_video_mv_‰ame_tcb_t
 *
‰ame
);

264 (*
ª£t
)(
tw_video_mv_‰ame_tcb_t
 *
‰ame
);

265 (*
ªÀa£
)(
tw_video_mv_‰ame_tcb_t
 **
±r_‰ame
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

266 (*
ª„ªn˚
)(
tw_video_mv_‰ame_tcb_t
 *
§c_‰ame
,Åw_video_mv_‰ame_tcb_à**
±r_de°_‰ame
);

268 
size_t
 (*
submô
)(
tw_video_mv_‰ame_tcb_t
 *
‰ame
, 
__u£r
 *
d©a
, size_à
cou¡
, 
loff_t
 *
µos
, 
ma°îOrSubFœg
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

271 
	#to_gë_tw_video_mv_‰ame_tcb
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_video_mv_‰ame_tcb_t
, 
mv_‰ame_node
)

	)

272 
	stw_video_mv_‰ame_tcb
{

273 
•ölock_t
 
lock
;

274 
©omic_t
 
ªf_cou¡
;

275 
tcb_node_t
 
mv_‰ame_node
;

276 
__u8
 
mvFœg_buf
[
MŸi⁄Ve˘‹BôFœg_BUF_LEN
];

277 
__u32
 
mvFœg_Àn
;

278 
__u32
 
mvBuf_∑yLﬂdLí
;

279 
__u32
 
time°amp
;

280 
‰ame_numbî
;

282 
tw_video_mv_∑ckë_tcb_queue_t
 
mv_queue
;

283 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
;

284 
tw_video_mv_‰ame_tcb_›î©i⁄
 *
›
;

287 
	stw_video_mv_‰ame_tcb_queue_›î©i⁄
{

288 (*
gë
)(
tw_video_mv_‰ame_tcb_queue_t
 *, 
tw_video_mv_‰ame_tcb_t
 **);

289 (*
åy_gë
)(
tw_video_mv_‰ame_tcb_queue_t
 *, 
tw_video_mv_‰ame_tcb_t
 **);

290 (*
gë_èûî
)(
tw_video_mv_‰ame_tcb_queue_t
 *, 
tw_video_mv_‰ame_tcb_t
 **);

291 (*
åy_gë_èûî
)(
tw_video_mv_‰ame_tcb_queue_t
 *, 
tw_video_mv_‰ame_tcb_t
 **);

292 (*
put
)(
tw_video_mv_‰ame_tcb_queue_t
 *, 
tw_video_mv_‰ame_tcb_t
 *);

293 (*
put_hódî
)(
tw_video_mv_‰ame_tcb_queue_t
 *, 
tw_video_mv_‰ame_tcb_t
 *);

295 (*
gë_cuº_¥odu˚r_‰om_poﬁ
)(
tw_video_mv_‰ame_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

296 (*
åy_gë_cuº_¥odu˚r_‰om_poﬁ
)(
tw_video_mv_‰ame_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

297 (*
put_cuº_¥odu˚r_öto_queue
)(
tw_video_mv_‰ame_tcb_queue_t
 *);

298 (*
ªÀa£_cuº_¥odu˚r
)(
tw_video_mv_‰ame_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

299 (*
gë_cuº_c⁄sumî_‰om_queue
)(
tw_video_mv_‰ame_tcb_queue_t
 *);

300 (*
åy_gë_cuº_c⁄sumî_‰om_queue
)(
tw_video_mv_‰ame_tcb_queue_t
 *);

301 (*
ªÀa£_cuº_c⁄sumî
)(
tw_video_mv_‰ame_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

303 (*
gë_cuº_queue_íåy_numbî
)(
tw_video_mv_‰ame_tcb_queue_t
 *);

304 (*
ªÀa£
)(
tw_video_mv_‰ame_tcb_queue_t
 *, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

305 (*
öô
)(
tw_video_mv_‰ame_tcb_queue_t
 *);

308 
	stw_video_mv_‰ame_tcb_queue
{

309 
u32
 
°¨t_time°amp
, 
tŸÆ_duøti⁄
;

310 
tcb_node_queue_t
 
queue_node
;

311 
tw_video_mv_‰ame_tcb_t
 *
cuº_c⁄sumî
;

312 
tw_video_mv_‰ame_tcb_t
 *
cuº_¥odu˚r
;

313 
•ölock_t
 
lock
;

315 
tw_video_mv_‰ame_tcb_queue_›î©i⁄
 *
›
;

319 
öô_tw_video_∑ckë_tcb_queue
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
);

320 
ªmove_tw_video_∑ckë_tcb_queue
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

321 
öô_tw_video_‰ame_tcb_queue
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
);

322 
ªmove_tw_video_‰ame_tcb_queue
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

323 #ifde‡ 
MV_MODULE


324 
öô_tw_video_mv_∑ckë_tcb_queue
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_queue
);

325 
ªmove_tw_video_mv_∑ckë_tcb_queue
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

326 
öô_tw_video_mv_‰ame_tcb_queue
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
);

327 
ªmove_tw_video_mv_‰ame_tcb_queue
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

329 
öô_tw_video_ch™_buf_poﬁ
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
buf_Àn
);

330 
ªmove_tw_video_ch™_buf_poﬁ
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
);

332 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_interface.h

1 #i‚def 
DVM_INTERFACE_H


2 
	#DVM_INTERFACE_H


	)

4 #ifde‡
__˝lu•lus


13 
	#TW_VIDEO_H264_CODEC_TYPE
 (0)

	)

14 
	#TW_VIDEO_MJPEG_CODEC_TYPE
 (1)

	)

15 
	#TW_AUDIO_CODEC_TYPE
 (2)

	)

18 
	#TW_MASTER_BITSTREAM
 (0)

	)

19 
	#TW_SUB_BITSTREAM
 (1)

	)

22 
	#H264_FRAME_TYPE_IDR
 (0)

	)

23 
	#H264_FRAME_TYPE_I
 (1)

	)

24 
	#H264_FRAME_TYPE_P
 (2)

	)

25 
	#H264_FRAME_TYPE_B
 (3)

	)

26 
	#H264_FRAME_TYPE_SI
 (4)

	)

27 
	#H264_FRAME_TYPE_SP
 (5)

	)

28 
	#H264_MV_FRAME_TYPE
 (6)

	)

29 
	#MJPEG_FRAME_TYPE
 (7)

	)

30 
	#AUDIO_FRAME_TYPE
 (8)

	)

59 
	stw_‰ame_hódî
 {

60 
codecTy≥
;

61 
°ªamTy≥
;

62 
‰ameTy≥
;

63 
‰ameSîül
;

64 
timeSèmp
;

65 
∑ylﬂd_off£t
;

66 
∑ylﬂdLí
;

67 
∑d
[0];

72 
	stw_h264_idr_‰ame_∑d
 {

73 
Âs
;

74 
öô_qp
;

75 
log2MaxFømeNumNöus4
;

76 
mb_width_möus1
;

77 
mb_height_möus1
;

78 
i_cuº_qp
;

79 
•s_‰ame_off£t
;

80 
•s_‰ame_size
;

81 
µs_‰ame_off£t
;

82 
µs_‰ame_size
;

83 
idr_‰ame_off£t
;

84 
idr_‰ame_size
;

85 
«l
[0];

90 
	stw_video_mŸi⁄_ve˘‹_∑d
 {

91 
mvFœgs_off£t
;

92 
mvFœgs_size
;

93 
mŸi⁄Ve˘‹_off£t
;

94 
mŸi⁄Ve˘‹_size
;

95 
«l
[0];

100 
	stw_audio_‰ame_∑d
 {

101 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

102 
u32
 
bus_id
:4;

103 
u32
 
chù_id
:4;

104 
u32
 
ch™_id
:4;

105 
u32
 
ty≥
:4;

106 
u32
 
bô_wide
:4;

107 
u32
 
ßm∂e_øã
:4;

108 
u32
 
bô_øã
:8;

109 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

110 
u32
 
bô_øã
:8;

111 
u32
 
ßm∂e_øã
:4;

112 
u32
 
bô_wide
:4;

113 
u32
 
ty≥
:4;

114 
u32
 
ch™_id
:4;

115 
u32
 
chù_id
:4;

116 
u32
 
bus_id
:4;

120 
u32
 
‰ame_off£t
;

121 
u32
 
‰ame_size
;

122 
«l
[0];

152 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_jpeg_codec.h

6 #i‚def 
_TW_JPEG_CODEC_H__


7 
	#_TW_JPEG_CODEC_H__


	)

9 #ifde‡
__˝lu•lus


14 
	#VIDEO_JPEG_CMD_PATH0
 (0xC800)

	)

15 
	#VIDEO_JPEG_CMD_PATH1
 (0xC804)

	)

16 
	#VIDEO_JPEG_DDR_BASE
 (0x28800)

	)

17 
	#VIDEO_JPEG_BUF_POOL_LEN
 (0x80000)

18 
	#VIDEO_JPEG_PATH_CNT
 (2)

	)

19 
	#VIDEO_JPEG_PATH0
 (0)

	)

20 
	#VIDEO_JPEG_PATH1
 (1)

	)

21 
	#VIDEO_JPEG_PATH_BUF
 (4Ë

	)

23 
	#JPEG_CMD_SINGLE
 (0x001)

	)

24 
	#JPEG_CMD_BURST
 (0x002)

	)

25 
	#JPEG_CMD_CHANNEL
(
n
Ë((“Ë& 0xf)<<2)

	)

26 
	#JPEG_CMD_FORMAT
(
fmt
Ë(((fmtË& 0x3Ë<< 6)

	)

27 
	#JPEG_CMD_PROG
 (0x100)

	)

28 
	#JPEG_CMD_DSAMPLE
 (0x200)

	)

30 
	#JPEG_ENCODE_QSCALE
 (0xd000)

	)

31 
	#JPEG_FRAME_VLD_0
 (0xd004)

	)

32 
	#JPEG_FRAME_VLD_1
 (0xd008)

	)

33 
	#JPEG_ENABLE_JPEG
 (0xd00c)

	)

34 
	#JPEG_IRQ
 (0xd010)

	)

35 
	#JPEG_LENGTH
(
n
Ë(0xd040 + (nË* ())

	)

36 
	#JPEG_TIMESTAMP
(
bufid
Ë(0xd060 + ((bufidË/ 2Ë* ())

	)

37 
	#JPEG_VIDEO_FORMAT
 (0xd07c)

	)

38 
	#JPEG_MODULE_REST
 (0xd0fc)

	)

40 
	#JPEG_CAP_PATH0_ENABLE
 (0xd014)

	)

41 
	#JPEG_CAP_PATH1_ENABLE
 (0xd018)

	)

42 
	#JPEG_CAP_TIMEOUT
 (0xd01c)

	)

44 
	#MJPEG_WIDTH_FRAME_D1_PAL
 (720)

	)

45 
	#MJPEG_WIDTH_FRAME_D1_NTSC
 (720)

	)

46 
	#MJPEG_HEIGHT_FRAME_D1_PAL
 (576)

	)

47 
	#MJPEG_HEIGHT_FRAME_D1_NTSC
 (480)

	)

50 
	#DVM_JPEG_IOC_MAGIC
 
TW_CODEC_IOC_MAGIC


	)

51 
	#TW_MJPEG_ENCODE_PARAM_GET
 
	`_IOR
(
DVM_JPEG_IOC_MAGIC
, 17, )

	)

52 
	#TW_MJPEG_ENCODE_PARAM_SET
 
	`_IOW
(
DVM_JPEG_IOC_MAGIC
, 18, )

	)

54 
	#TW5864_MJPEG_MIN_INTERVAL
 (80)

	)

56 
tw_j≥g_ícode_¥›îty
 
	ttw_j≥g_ícode_¥›îty_t
;

57 
tw_j≥g_ícode_c⁄åﬁ
 
	ttw_j≥g_ícode_c⁄åﬁ_t
;

58 
tw_mj≥g_ícode_∑øm
 
	ttw_mj≥g_ícode_∑øm_t
;

59 
tw_j≥g_phy_video_¶Ÿ
 
	ttw_j≥g_phy_video_¶Ÿ_t
;

60 
tw5864_vj_bus
 
	ttw5864_vj_bus_t
;

61 
tw_vj_‹ig_buf_öfo
 
	ttw_vj_‹ig_buf_öfo_t
;

62 
tw5864_vj_bus_›î©i⁄
 
	ttw5864_vj_bus_›î©i⁄_t
;

63 
j≥g_£rvi˚_queue
 
	tj≥g_£rvi˚_queue_t
;

64 
j≥g_£rvi˚_tcb
 
	tj≥g_£rvi˚_tcb_t
;

65 
tw5864_mj≥g_∑th
 
	ttw5864_mj≥g_∑th_t
;

66 
tw5864_mj≥g_∑th_›î©i⁄
 
	ttw5864_mj≥g_∑th_›î©i⁄_t
;

68 
	eTW5864_JPEG_REQ_TYPE
{

69 
DVM_CHIP_REQ_SINGLE
,

70 
DVM_CHIP_REQ_BURST
,

73 
	#to_gë_j≥g_£rvi˚_tcb_wôh_£rvi˚_tcb
(
node
Ë
	`c⁄èöî_of
“ode, 
j≥g_£rvi˚_tcb_t
, 
£rvi˚_tcb
)

	)

74 
	#to_gë_j≥g_ch™√l_wôh_ícode_¥›îty
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_j≥g_logic_ícode_ch™_t
, 
ícode_¥›îty
)

	)

75 
	#to_gë_j≥g_ch™√l_wôh_logic_ch™_ed
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_j≥g_logic_ícode_ch™_t
, 
logic_ch™_ed
)

	)

77 
	sj≥g_£rvi˚_tcb
{

78 
tcb_node_t
 
£rvi˚_tcb
;

79 
TW5864_JPEG_REQ_TYPE
 
ty≥
;

80 *
c⁄ãxt
;

81 (*
ªq_ˇŒback
)(*
c⁄ãxt
);

84 
	sj≥g_£rvi˚_queue_›î©i⁄
{

85 (*
öô
)(
j≥g_£rvi˚_queue_t
 *);

86 (*
gë_queue_cuº_íåy_numbî
)(
j≥g_£rvi˚_queue_t
 *);

87 (*
put_£rvi˚_ªque°_öto_queue
)(
j≥g_£rvi˚_queue_t
 *, 
j≥g_£rvi˚_tcb_t
 *);

88 (*
put_£rvi˚_ªque°_öto_queue_hódî
)(
j≥g_£rvi˚_queue_t
 *, 
j≥g_£rvi˚_tcb_t
 *);

89 (*
åy_gë_cuº_c⁄sumî_‰om_queue
)(
j≥g_£rvi˚_queue_t
 *);

90 (*
ªÀa£_cuº_c⁄sumî
)(
j≥g_£rvi˚_queue_t
 *);

91 (*
åiggî_≥ndög_£rvi˚_ªque°
)(
j≥g_£rvi˚_queue_t
 *);

94 
	sj≥g_£rvi˚_queue
{

95 
•ölock_t
 
lock
;

96 
©omic_t
 
j≥g_ªsour˚
;

97 
tcb_node_queue_t
 
£rvi˚_queue
;

98 
j≥g_£rvi˚_tcb_t
 *
cuº_c⁄sumî
;

100 
j≥g_£rvi˚_queue_›î©i⁄
 *
›
;

103 
	stw_vj_‹ig_buf_öfo_›î©i⁄
{

105 (*
gë_chn_id
)(
tw_vj_‹ig_buf_öfo_t
 *);

107 (*
gë_chn_ªs
)(
tw_vj_‹ig_buf_öfo_t
 *);

109 (*
√w_‰ame_±r
)(
tw_vj_‹ig_buf_öfo_t
 *);

111 (*
‰ame_vÆid
)(
tw_vj_‹ig_buf_öfo_t
 * );

113 (*
íabÀ_ícode
)(
tw_vj_‹ig_buf_öfo_t
 * );

114 (*
dißbÀ_ícode
)(
tw_vj_‹ig_buf_öfo_t
 *);

115 (*
com∂©e
)(
tw_vj_‹ig_buf_öfo_t
 *);

117 (*
gë_Àngth
)(
tw_vj_‹ig_buf_öfo_t
 * );

119 (*
gë_time°amp
)(
tw_vj_‹ig_buf_öfo_t
 * );

120 (*
m¨k_ußbÀ
)(
tw_vj_‹ig_buf_öfo_t
 * );

121 (*
£t_qsˇÀ
)(
tw_vj_‹ig_buf_öfo_t
 *, );

122 (*
£t_f‹m©
)(
tw_vj_‹ig_buf_öfo_t
 *, );

123 (*
gë_ﬁd_buf
)(
tw_vj_‹ig_buf_öfo_t
 *);

126 
	stw_vj_‹ig_buf_öfo
{

127 
©omic_t
 
ª„ªn˚
;

128 
∑th_id
;

129 
buf_id
;

130 
u32
 
∑ge_id
;

131 
u32
 
ddr_phy_ba£
;

132 
dvm_chù_t
 *
chù
;

133 
u32
 
œ°_tick
;

134 
u32
 
vÆid_time
;

135 
tw_vj_‹ig_buf_öfo_›î©i⁄
 *
›
;

138 
	stw_j≥g_phy_video_¶Ÿ_›î©i⁄
{

139 (*
öô
)(
tw_j≥g_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
phy_¶Ÿ_id
);

142 
	stw_j≥g_phy_video_¶Ÿ
{

143 
©omic_t
 
°¨t_Êag
;

144 
phy_¶Ÿ_id
;

145 
TW_VIDEO_SIZE
 
video_size
;

146 
tw_vj_‹ig_buf_öfo_t
 *
‹ig_buf_öfo
;

148 
tw_j≥g_phy_video_¶Ÿ_›î©i⁄
 *
›
;

150 
tw_ªgi°î_èbÀ_t
 
logic_ch™_èbÀ
;

151 
tw_ªgi°î_èbÀ_t
 
›íed_logic_ch™_èbÀ
;

154 
	eTW_MJPEG_IMAGE_LEVEL_E
{

155 
MJPEG_IMAGE_LEVEL_0
 = 0,

156 
MJPEG_IMAGE_LEVEL_1
,

157 
MJPEG_IMAGE_LEVEL_2
,

158 
MJPEG_IMAGE_LEVEL_3
,

159 
MJPEG_IMAGE_LEVEL_4
,

160 
MJPEG_IMAGE_LEVEL_RESERVE
,

163 
	#TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_IMAGE_LEVEL_MASK
 0x00000001

	)

164 
	#TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_IMAGE_WIDTH_MASK
 0x00000002

	)

165 
	#TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_IMAGE_HEIGHT_MASK
 0x00000004

	)

166 
	#TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_CAPTURE_FRAME_NUMBER_MASK
 0x00000008

	)

167 
	#TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_CAPTURE_FRAME_STRIDE_MASK
 0x00000010

	)

168 
	#TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_CAPTURE_TYPE_MASK
 0x00000020

	)

170 
	#TW_MJPEG_ENCODE_PARAM_CAPTURE_TYPE_TIMER
 (1 << 31)

	)

171 
	#TW_MJPEG_ENCODE_PARAM_CAPTURE_TYPE_USER
 (1 << 30)

	)

173 
	stw_mj≥g_ícode_∑øm
{

174 
u32
 
ch™ge_mask_Êag
;

175 
u32
 
e_image_Àvñ
;

176 
u32
 
i_image_width_mb_size
;

177 
u32
 
i_image_height_mb_size
;

178 
u32
 
i_ˇ±uª_‰ame_numbî
;

179 
u32
 
i_ˇ±uª_‰ame_°ride
;

180 
u32
 
i_ˇ±uª_ty≥
;

183 
	stw_j≥g_ícode_¥›îty_›î©i⁄
{

184 (*
öô
)(
tw_j≥g_ícode_¥›îty_t
 *);

185 (*
ª£t
)(
tw_j≥g_ícode_¥›îty_t
 *);

187 
u32
 (*
gë_image_Àvñ
)(
tw_j≥g_ícode_¥›îty_t
 *);

188 
u32
 (*
gë_mb_width
)(
tw_j≥g_ícode_¥›îty_t
 *);

189 
u32
 (*
gë_mb_height
)(
tw_j≥g_ícode_¥›îty_t
 *);

190 
u32
 (*
gë_ˇ±uª_numbî
)(
tw_j≥g_ícode_¥›îty_t
 *);

191 
u32
 (*
gë_ˇ±uª_°ride
)(
tw_j≥g_ícode_¥›îty_t
 *);

192 
u32
 (*
gë_ˇ±uª_ty≥
)(
tw_j≥g_ícode_¥›îty_t
 *);

194 (*
£t_image_Àvñ
)(
tw_j≥g_ícode_¥›îty_t
 *, 
TW_MJPEG_IMAGE_LEVEL_E
);

195 (*
£t_mb_width
)(
tw_j≥g_ícode_¥›îty_t
 *, 
u32
);

196 (*
£t_mb_height
)(
tw_j≥g_ícode_¥›îty_t
 *, 
u32
);

197 (*
£t_ˇ±uª_numbî
)(
tw_j≥g_ícode_¥›îty_t
 *, 
u32
);

198 (*
£t_ˇ±uª_°ride
)(
tw_j≥g_ícode_¥›îty_t
 *, 
u32
);

199 (*
£t_ˇ±uª_ty≥
)(
tw_j≥g_ícode_¥›îty_t
 *, 
u32
);

202 
	stw_j≥g_ícode_¥›îty
{

203 
tw_mj≥g_ícode_∑øm_t
 
ícode_¥›îty
;

204 
•ölock_t
 
lock
;

205 
tw_j≥g_ícode_¥›îty_›î©i⁄
 *
›
;

208 
	stw_j≥g_ícode_c⁄åﬁ
{

210 
u32
 
tŸÆ_‰ame_Àn
;

211 
©omic_t
 
fú°_∑ckë
;

212 
‰ame_ba£_addr
;

213 
£˘i⁄_numbî
;

214 
have_ªcv_£˘i⁄_numbî
;

215 
£˘i⁄_Àn
;

216 
èûî_Àn
;

218 
cuº_qsˇÀ
;

219 
TW_VIDEO_SIZE
 
cuº_size
;

220 
cuº_öãrvÆ
;

222 
u32
 
ˇ±uª_Êags
;

223 
ˇ±uª_À·_cou¡
;

225 
u32
 
œ°_jiffõs
;

226 
u32
 
‰ame_öãrvÆ
;

227 
©omic_t
 
vÆid
;

228 
u32
 
lo°_‰ame
;

230 
u32
 
timî_id
;

231 
u32
 
timeout_id
;

232 
u32
 
œ°_time_tick
;

235 (*
°¨t_j≥g
)(
tw_j≥g_logic_ícode_ch™_t
 *);

236 (*
move_j≥g
)(
tw_j≥g_logic_ícode_ch™_t
 *);

237 (*
ªad_∑øm
)(
tw_j≥g_logic_ícode_ch™_t
 *);

238 (*
nŸify
)(
tw_j≥g_logic_ícode_ch™_t
 *);

239 (*
timeout_hook
)(*);

240 (*
timî_hook
)(*);

241 (*
upd©e_ru¬ög_c⁄fig
)(
tw_j≥g_ícode_c⁄åﬁ_t
 *, 
tw_mj≥g_ícode_∑øm_t
 *);

245 
	stw_j≥g_logic_ícode_ch™


247 
phy_¶Ÿ_id
;

248 
logic_ch™_id
;

249 
©omic_t
 
›íed_Êag
;

250 
u32
 
i_‰ame_£rül
;

251 
ed_tcb_t
 
logic_ch™_ed
;

252 
ed_tcb_t
 
›íed_logic_ch™_ed
;

253 
tw_time°amp_t
 
time°amp
;

255 
dvm_chù_t
 *
chù
;

256 
tw_j≥g_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

257 
tw5864_avSync_dev_t
 *
tw_devi˚_ch™
;

258 
tw_j≥g_ícode_¥›îty_t
 
ícode_¥›îty
;

259 
tw_j≥g_ícode_c⁄åﬁ_t
 
ícode_c⁄åﬁ
;

260 
j≥g_£rvi˚_tcb_t
 
ícode_ªque°_tcb
;

262 
d¥am_ªque°_t
 
ªad_video_bô°ªam_ªq
;

263 
d¥am_∑ge_node_t
 *
d¥am_∑ge
;

265 
tw_vb_poﬁ_t
 
poﬁ
;

266 
tw_vb_‰ame_tcb_queue_t
 
j≥g_‰ame_queue
;

269 
	stw5864_mj≥g_∑th_›î©i⁄
{

270 (*
is_busy
)(
tw5864_mj≥g_∑th_t
 *);

271 (*
vÆid_nŸify
)(
tw5864_mj≥g_∑th_t
 *);

272 (*
sögÀ_ˇp
)(
tw5864_mj≥g_∑th_t
 *, 
tw_j≥g_logic_ícode_ch™_t
 *);

273 (*
bur°_ˇp
)(
tw5864_mj≥g_∑th_t
 *, 
tw_j≥g_logic_ícode_ch™_t
 *);

274 (*
°¨t_ícodög
)(*);

275 (*
sync_∑th
)(
tw5864_mj≥g_∑th_t
 *);

276 
timîHook
 
timeout_hook
;

279 
	stw5864_mj≥g_∑th
{

280 
u32
 
∑th_id
;

281 
u32
 
time_id
;

282 
u32
 
dñay_time_id
;

283 
©omic_t
 
bur°_Êag
;

284 
tw5864_vj_bus_t
 *
vj_bus
;

285 
u32
 
cuºít_‰ame_±r
;

286 
u32
 
cuºít_ícodög_±r
;

287 
u32
 
cuºít_c⁄sumî_±r
;

288 
tw_j≥g_logic_ícode_ch™_t
 *
logic_ícodög_èbÀ
[
VIDEO_JPEG_PATH_BUF
];

290 
tw5864_mj≥g_∑th_›î©i⁄_t
 *
›
;

292 
	stw5864_vj_bus_›î©i⁄
{

293 (*
öô
)(
tw5864_vj_bus_t
 *);

294 (*
ªÀa£
)(
tw5864_vj_bus_t
 *);

296 (*
úq
)(, *);

297 (*
°¨t_m⁄ô‹_èsk
)(*);

298 (*
°›_m⁄ô‹_èsk
)(*);

299 (*
ª£t
)(
tw5864_vj_bus_t
 *);

302 
	stw5864_vj_bus
{

303 
•ölock_t
 
lock
;

304 
u32
 
time_id
;

305 
j≥g_£rvi˚_queue_t
 
j≥g_£rvi˚_queue
;

306 
©omic_t
 
busy
;

307 
u32
 
∑th_swôch
;

308 
u32
 
i_°©ic_£c⁄d_cou¡î
;

309 
u32
 
i_ãmp_Âs_cou¡î
;

310 
u32
 
cuºít_Âs
;

311 
tw5864_mj≥g_∑th_t
 
mj≥g_∑th
[
VIDEO_JPEG_PATH_CNT
];

312 
tw_vj_‹ig_buf_öfo_t
 
vj_‹ig_buf
[
VIDEO_JPEG_PATH_BUF
 * 
VIDEO_JPEG_PATH_CNT
];

313 
tw_j≥g_phy_video_¶Ÿ_t
 
phy_video_¶Ÿ
[
TW5864_PHY_VJ_CHAN_NUMBER
];

315 
tw5864_vj_bus_›î©i⁄
 *
›
;

318 
	#to_gë_tw_j≥g_ícode_ch™_wôh_logic_ch™_ed
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_j≥g_logic_ícode_ch™_t
, 
logic_ch™_ed
)

	)

319 
	#to_gë_tw_j≥g_ícode_ch™_wôh_›íed_logic_ch™_ed
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_j≥g_logic_ícode_ch™_t
, 
›íed_logic_ch™_ed
)

	)

320 
	#to_gë_tw_j≥g_ícode_ch™_wôh_ícode_c⁄åﬁ
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_j≥g_logic_ícode_ch™_t
, 
ícode_c⁄åﬁ
)

	)

321 
	#to_gë_tw_j≥g_ícode_ch™_wôh_ícode_ªque°_tcb
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_j≥g_logic_ícode_ch™_t
, 
ícode_ªque°_tcb
)

	)

323 
öô_tw5864_vj_bus
(
tw5864_vj_bus_t
 *);

324 
ªmove_tw5864_vj_bus
(
tw5864_vj_bus_t
 *
vj_bus
);

325 
öô_tw5864_j≥g_ícode_ch™
(
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ícode_ch™
, 
bus_id
, 
chù_id
, 
phy_¶Ÿ_id
, 
dvm_chù_t
 *
chù
);

326 
ªmove_tw5864_j≥g_ícode_ch™
(
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ícode_ch™
);

330 
	#JFIF_HEADER_SIZE


	)

333 
	#SOI
 (0xffd8)

334 
	#EOI
 (0xffd9)

335 
	#APP
(
n
) (0xffe0 +Ç)

336 
	#JFIF_ID
 ("JFIF")

337 
	#SOF
(
n
) (0xffc0 +Ç)

338 
	#SOS
 (0xffda)

339 
	#COM
 (0xfffe)

340 
	#DNL
 (0xffdc)

341 
	#DRI
 (0xffdd)

342 
	#DQT
 (0xffdb)

343 
	#DHT
 (0xffc4)

344 

	)

345 #¥agm®
∑ck
(1)

348 
	sAPP_m¨k
{

349 
	gÊag
;

350 
	g£gmít_Àn
;

351 
	g°rög
[5];

352 
	gvîsi⁄
;

353 
	gunô
;

354 
	gwidth
;

355 
	gheight
;

356 
	gsˇÀ_width
;

357 
	gsˇÀ_height
;

358 
	gsˇÀ_nbôs
[0];

362 
	sDQT_èbÀ
{

363 
	gÊag
;

364 
	g£gmít_Àn
;

365 
	squ™t_èb
{

366 #i‡
deföed
(
__BIG_ENDIAN_BITFIELD
)

367 
	gbôs
:4;

368 
	gid
:4;

369 #ñi‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

370 
	gid
:4;

371 
	gbôs
:4;

375 
	gDQT_TABLE
[0];

376 }
	gèbÀ
;

380 
	sSOF_èbÀ
{

381 
	gÊag
;

382 
	g£gmít_Àn
;

383 
	gbôs
;

384 
	gheight
;

385 
	gwidth
;

386 
	gcﬁ‹
;

387 
	scﬁ‹_comp
{

388 
	gcﬁ‹_id
;

389 
	gHV
;

390 
	gQDT_id
;

391 }
	gcomp
[0];

395 
	sDHT_èbÀ
{

396 
	gÊag
;

397 
	g£gmít_Àn
;

398 
	shuffm™_èbÀ
{

399 #i‡
deföed
(
__BIG_ENDIAN_BITFIELD
)

400 
	gid
:4;

401 
	gty≥
:4;

402 #ñi‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

403 
	gty≥
:4;

404 
	gid
:4;

408 
	gnbôs
[16];

409 
	gèbÀ_d©a
[0];

410 }
	ghuff_èbÀ
[0];

414 
	sDRI_èbÀ
{

415 
	gÊag
;

416 
	g£gmít_Àn
;

417 
	göãrvÆ
;

420 
	sSOS_èbÀ
{

421 
	gÊag
;

422 
	g£gmít_Àn
;

423 
	gcﬁ‹_comp_id
;

425 
	sSTART_INFO
{

426 #i‡
deföed
(
__BIG_ENDIAN_BITFIELD
)

427 
	gDC_èbÀ
:4;

428 
	gAC_èbÀ
:4;

429 #ñi‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

430 
	gAC_èbÀ
:4;

431 
	gDC_èbÀ
:4;

435 
	gd©a_°¨t
;

436 
	gd©a_íd
;

437 
	gd©a_£À˘
;

438 }
	g°¨t_öfo
[0];

441 
	sCOM_£gmít
{

442 
	gÊag
;

443 
	g£gmít_Àn
;

444 
	g°rög
[0];

446 #¥agm®
∑ck
()

448 
ölöe
 
sw≠_sh‹t
(
d©a
)

450 #ifde‡
__BIG_ENDIAN_BITFIELD


451  
	gd©a
;

453 
	gãmp
 = 0;

455 
	gãmp
 = 
d©a
 & 0x00ff;

457  (
	gãmp
<<8 | 
	gd©a
>>8);

461 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_kthread_msg.h

1 #i‚def 
TW_KTHREAD_MSG_H


2 
	#TW_KTHREAD_MSG_H


	)

4 #ifde‡
__˝lu•lus


9 
	#REQ_ALGO_SLICE_HEAD
 (0)

	)

10 
	#REQ_AV_SYNC
 (1)

	)

11 
	#REQ_ALGO_CHIP_RESET
 (2)

	)

12 
	#REQ_ALGO_NULL
 (3)

	)

13 
	#SYSTEM_ESCAPE_MSG
 (4)

	)

14 
	#INVALID_REQ_ALGO
 (
SYSTEM_ESCAPE_MSG
+1)

	)

15 
	#REQ_MSG_NUMBER
 (
INVALID_REQ_ALGO
)

	)

17 
	#BLOCK_OP
 (0)

	)

18 
	#NONBLOCK_OP
 (1)

	)

19 
	#DELAY_OP
 (2)

	)

20 
	#NONBLOCK_COUNT
 (1)

	)

21 
	#DELAY_COUNT
 (20)

	)

24 
	stw_kthªad_msg_›î©i⁄
{

25 (*
öô
)(
tw_kthªad_msg_t
 *, 
tw_kthªad_msg_poﬁ_t
 *);

26 (*
ª£t
)(
tw_kthªad_msg_t
 *);

27 (*
ªÀa£
)(
tw_kthªad_msg_t
 **);

28 (*
upd©e_∑øm
)(
tw_kthªad_msg_t
 *, 
dvm_chù_t
 * , , *);

31 
	#to_gë_tw_kthªad_msg
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_kthªad_msg_t
, 
msg_node
)

	)

32 
	stw_kthªad_msg
{

33 
tcb_node_t
 
msg_node
;

34 
©omic_t
 
ªf_cou¡
;

35 
•ölock_t
 
lock
;

36 
tw_kthªad_msg_poﬁ_t
 *
msg_poﬁ
;

38 
dvm_chù_t
 *
chù
;

39 
msg_ty≥
;

40 *
msg_c⁄ãxt
;

42 
tw_kthªad_msg_›î©i⁄
 *
›
;

45 
	stw_kthªad_msg_queue_›î©i⁄
{

46 (*
öô
)(
tw_kthªad_msg_queue_t
 *);

47 (*
put
)(
tw_kthªad_msg_queue_t
 *, 
tw_kthªad_msg_t
 *);

48 (*
gë
)(
tw_kthªad_msg_queue_t
 *, 
tw_kthªad_msg_t
 **);

49 (*
ªÀa£
)(
tw_kthªad_msg_queue_t
 *);

51 (*
gë_cuº_c⁄sumî_‰om_queue
)(
tw_kthªad_msg_queue_t
 *);

52 (*
ªÀa£_cuº_c⁄sumî
)(
tw_kthªad_msg_queue_t
 *);

53 (*
gë_cuº_queue_íåy_numbî
)(
tw_kthªad_msg_queue_t
 *);

56 
	stw_kthªad_msg_queue
{

57 
tcb_node_queue_t
 
queue_node
;

58 
tw_kthªad_msg_t
 *
cuº_c⁄sumî
;

59 
•ölock_t
 
lock
;

61 
tw_kthªad_msg_queue_›î©i⁄
 *
›
;

64 
	stw_kthªad_msg_poﬁ_›î©i⁄
{

65 (*
gë
)(
tw_kthªad_msg_poﬁ_t
 *, 
tw_kthªad_msg_t
 **);

66 (*
åy_gë
)(
tw_kthªad_msg_poﬁ_t
 *, 
tw_kthªad_msg_t
 **);

67 (*
put
)(
tw_kthªad_msg_poﬁ_t
 *, 
tw_kthªad_msg_t
 *);

68 (*
ªÀa£
)(
tw_kthªad_msg_poﬁ_t
 *);

69 (*
öô
)(
tw_kthªad_msg_poﬁ_t
 *);

72 
	stw_kthªad_msg_poﬁ
{

73 
tcb_node_poﬁ_t
 
poﬁ_node
;

74 
msg_íåy_numbî
;

75 
tw_kthªad_msg_t
 *
msg_ˇche_poﬁ
;

76 
tw_kthªad_msg_poﬁ_›î©i⁄
 *
›
;

79 
gë_msg_queue_hódî
(
tw_kthªad_msg_queue_t
 **
±r_queue
);

80 
öô_tw_kthªad_msg_queue
(
tw_kthªad_msg_queue_t
 *
msg_queue
);

81 
ªmove_tw_kthªad_msg_queue
(
tw_kthªad_msg_queue_t
 *
msg_queue
);

83 
gë_msg_poﬁ_hódî
(
tw_kthªad_msg_poﬁ_t
 **
msg_poﬁ
);

84 
öô_tw_kthªad_msg_poﬁ
(
tw_kthªad_msg_poﬁ_t
 *
msg_poﬁ
);

85 
ªmove_tw_kthªad_msg_poﬁ
(
tw_kthªad_msg_poﬁ_t
 *
msg_poﬁ
);

87 
ícode_ch™_gí_ªq_msg
(
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
, 
msg_ty≥
, 
block
);

89 
°¨t_dvm_kthªad
();

90 
°›_dvm_kthªad
();

92 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_vb_common.h

19 #i‚def 
_TW_VB_COMMON_H__


20 
	#_TW_VB_COMMON_H__


	)

22 #ifde‡
__˝lu•lus


27 
tw_vb_poﬁ
 
	ttw_vb_poﬁ_t
;

29 
tw_vb_∑ckë_tcb
 
	ttw_vb_∑ckë_tcb_t
;

30 
tw_vb_∑ckë_tcb_queue
 
	ttw_vb_∑ckë_tcb_queue_t
;

32 
tw_vb_‰ame_tcb
 
	ttw_vb_‰ame_tcb_t
;

33 
tw_vb_‰ame_tcb_queue
 
	ttw_vb_‰ame_tcb_queue_t
;

35 
	stw_vb_poﬁ_›î©i⁄
{

36 (*
¸óã
)(
tw_vb_poﬁ_t
 *
poﬁ
, *, 
size
);

37 (*
ªÀa£
)(
tw_vb_poﬁ_t
 *
poﬁ
);

39 (*
gë_∑ckë_tcb
)(
tw_vb_poﬁ_t
 *
poﬁ
, 
tw_vb_∑ckë_tcb_t
 **
∑ckë
);

40 (*
åy_gë_∑ckë_tcb
)(
tw_vb_poﬁ_t
 *
poﬁ
, 
tw_vb_∑ckë_tcb_t
 **
∑ckë
);

41 (*
put_∑ckë_tcb
)(
tw_vb_poﬁ_t
 *
poﬁ
, 
tw_vb_∑ckë_tcb_t
 *
∑ckë
);

42 (*
gë_∑ckë_tcb_poﬁ_íåy_numbî
)(
tw_vb_poﬁ_t
 *
poﬁ
);

44 (*
gë_‰ame_tcb
)(
tw_vb_poﬁ_t
 *
poﬁ
, 
tw_vb_‰ame_tcb_t
 **
‰ame
);

45 (*
åy_gë_‰ame_tcb
)(
tw_vb_poﬁ_t
 *
poﬁ
, 
tw_vb_‰ame_tcb_t
 **
‰ame
);

46 (*
put_‰ame_tcb
)(
tw_vb_poﬁ_t
 *
poﬁ
, 
tw_vb_‰ame_tcb_t
 *
‰ame
);

47 (*
gë_‰ame_tcb_poﬁ_íåy_numbî
)(
tw_vb_poﬁ_t
 *
poﬁ
);

50 
	stw_vb_poﬁ
{

51 
ˇche_‹dî
;

52 *
ˇche_buf„r
;

54 
vb_∑ckë_buf„r_size
;

55 
vb_∑ckë_íåy_numbî
;

56 
tcb_node_poﬁ_t
 
vb_∑ckë_poﬁ_tcb
;

57 
tw_vb_∑ckë_tcb_t
 *
vb_∑ckë_íåy_poﬁ
;

59 
vb_‰ame_íåy_numbî
;

60 
tcb_node_poﬁ_t
 
vb_‰ame_poﬁ_tcb
;

61 
tw_vb_‰ame_tcb_t
 *
vb_‰ame_íåy_poﬁ
;

63 
tw_vb_poﬁ_›î©i⁄
 *
›
;

66 
	stw_vb_∑ckë_›î©i⁄


68 (*
öô
)(
tw_vb_∑ckë_tcb_t
 *
∑ckë
, 
tw_vb_poﬁ_t
 *
poﬁ
, 
id
);

69 (*
ª£t
)(
tw_vb_∑ckë_tcb_t
 *
∑ckë
);

70 (*
ªÀa£
)(
tw_vb_∑ckë_tcb_t
 **
∑ckë
, 
tw_vb_poﬁ_t
 *
poﬁ
);

71 (*
ª„ªn˚
)(
tw_vb_∑ckë_tcb_t
 *
§c_∑ckë
,Åw_vb_∑ckë_tcb_à**
±r_de°_∑ckë
);

73 (*
dma_m≠
)(
tw_vb_∑ckë_tcb_t
 *
∑ckë
, 
dma_d©a_dúe˘i⁄
 
dúe˘i⁄
);

74 (*
dma_unm≠
)(
tw_vb_∑ckë_tcb_t
 *
∑ckë
, 
dma_d©a_dúe˘i⁄
 
dúe˘i⁄
);

76 
size_t
 (*
submô
)(
tw_vb_∑ckë_tcb_t
 *
∑ckë
, 
__u£r
 *
d©a
, size_à
cou¡
, 
loff_t
 *
µos
, 
ö£π_03_°©e_machöe_t
 *
machöe
);

79 
	#to_vb_∑ckë_tcb
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_vb_∑ckë_tcb_t
, 
∑ckë_node
)

	)

80 
	stw_vb_∑ckë_tcb


82 
©omic_t
 
ªf_cou¡
;

83 
•ölock_t
 
lock
;

84 
tcb_node_t
 
∑ckë_node
;

85 
∑ckë_id
;

87 
∑ckë_size
;

88 
∑ylﬂd_Àn
;

89 
c⁄sumî_Àn
;

90 
id_of_∑ckë_queue
;

92 
u8
 *
d©a
;

93 
dma_addr_t
 
dma_addr
;

95 
tw_vb_∑ckë_›î©i⁄
 *
›
;

98 
	stw_vb_∑ckë_queue_›î©i⁄
{

99 (*
gë
)(
tw_vb_∑ckë_tcb_queue_t
 *, 
tw_vb_∑ckë_tcb_t
 **);

100 (*
åy_gë
)(
tw_vb_∑ckë_tcb_queue_t
 *, 
tw_vb_∑ckë_tcb_t
 **);

101 (*
gë_èûî
)(
tw_vb_∑ckë_tcb_queue_t
 *, 
tw_vb_∑ckë_tcb_t
 **);

102 (*
åy_gë_èûî
)(
tw_vb_∑ckë_tcb_queue_t
 *, 
tw_vb_∑ckë_tcb_t
 **);

103 (*
put
)(
tw_vb_∑ckë_tcb_queue_t
 *, 
tw_vb_∑ckë_tcb_t
 *);

104 (*
put_hódî
)(
tw_vb_∑ckë_tcb_queue_t
 *, 
tw_vb_∑ckë_tcb_t
 *);

106 (*
gë_cuº_¥odu˚r_‰om_poﬁ
)(
tw_vb_∑ckë_tcb_queue_t
 *, 
tw_vb_poﬁ_t
 *
poﬁ
);

107 (*
åy_gë_cuº_¥odu˚r_‰om_poﬁ
)(
tw_vb_∑ckë_tcb_queue_t
 *, 
tw_vb_poﬁ_t
 *
poﬁ
);

108 (*
put_cuº_¥odu˚r_öto_queue
)(
tw_vb_∑ckë_tcb_queue_t
 *);

109 (*
ªÀa£_cuº_¥odu˚r
)(
tw_vb_∑ckë_tcb_queue_t
 *, 
tw_vb_poﬁ_t
 *
poﬁ
);

110 (*
gë_cuº_c⁄sumî_‰om_queue
)(
tw_vb_∑ckë_tcb_queue_t
 *);

111 (*
åy_gë_cuº_c⁄sumî_‰om_queue
)(
tw_vb_∑ckë_tcb_queue_t
 *);

112 (*
ªÀa£_cuº_c⁄sumî
)(
tw_vb_∑ckë_tcb_queue_t
 *, 
tw_vb_poﬁ_t
 *
poﬁ
);

114 (*
gë_cuº_queue_íåy_numbî
)(
tw_vb_∑ckë_tcb_queue_t
 *);

115 (*
ªÀa£
)(
tw_vb_∑ckë_tcb_queue_t
 *, 
tw_vb_poﬁ_t
 *
poﬁ
);

116 (*
öô
)(
tw_vb_∑ckë_tcb_queue_t
 *);

119 
	stw_vb_∑ckë_tcb_queue
{

120 
u32
 
°¨t_time°amp
, 
tŸÆ_duøti⁄
;

121 
tcb_node_queue_t
 
queue_node
;

122 
tw_vb_∑ckë_tcb_t
 *
cuº_c⁄sumî
;

123 
tw_vb_∑ckë_tcb_t
 *
cuº_¥odu˚r
;

124 
•ölock_t
 
lock
;

126 
tw_vb_∑ckë_queue_›î©i⁄
 *
›
;

129 
	stw_vb_‰ame_tcb_›î©i⁄
 {

130 (*
öô
)(
tw_vb_‰ame_tcb_t
 *
‰ame
);

131 (*
ª£t
)(
tw_vb_‰ame_tcb_t
 *
‰ame
);

132 (*
ªÀa£
)(
tw_vb_‰ame_tcb_t
 **
±r_‰ame
, 
tw_vb_poﬁ_t
 *
poﬁ
);

133 (*
ª„ªn˚
)(
tw_vb_‰ame_tcb_t
 *
§c_‰ame
,Åw_vb_‰ame_tcb_à**
±r_de°_‰ame
);

135 
size_t
 (*
submô
)(
tw_vb_‰ame_tcb_t
 *
‰ame
, 
__u£r
 *
d©a
, size_à
cou¡
, 
loff_t
 *
µos
, 
ma°îOrSubFœg
, 
tw_vb_poﬁ_t
 *
poﬁ
);

138 
	#to_vb_‰ame_tcb
(
node
Ë
	`c⁄èöî_of
“ode, 
tw_vb_‰ame_tcb_t
, 
‰ame_node
)

	)

139 
	stw_vb_‰ame_tcb
{

140 
•ölock_t
 
lock
;

141 
©omic_t
 
ªf_cou¡
;

142 
tcb_node_t
 
‰ame_node
;

144 
‰ame_ty≥
;

145 
h264_«l_t
 
«l
;

146 
‰ame_Àn
;

147 
c⁄sumî_‰ame_off£t
;

148 
__u32
 
time°amp
;

149 
i_öô_qp
;

150 
i_cuº_qp
;

151 
i_mb_x
;

152 
i_mb_y
;

153 
‰ame_numbî
;

154 
‰ame_is_îr
;

155 
u32
 
‰ame_Êags
;

157 
tw_vb_∑ckë_tcb_queue_t
 
vb_∑ckë_queue
;

158 
tw_vb_poﬁ_t
 *
poﬁ
;

159 
tw_vb_‰ame_tcb_›î©i⁄
 *
›
;

162 
	stw_vb_‰ame_queue_›î©i⁄
{

164 (*
gë
)(
tw_vb_‰ame_tcb_queue_t
 *, 
tw_vb_‰ame_tcb_t
 **);

165 (*
åy_gë
)(
tw_vb_‰ame_tcb_queue_t
 *, 
tw_vb_‰ame_tcb_t
 **);

166 (*
gë_èûî
)(
tw_vb_‰ame_tcb_queue_t
 *, 
tw_vb_‰ame_tcb_t
 **);

167 (*
åy_gë_èûî
)(
tw_vb_‰ame_tcb_queue_t
 *, 
tw_vb_‰ame_tcb_t
 **);

168 (*
put
)(
tw_vb_‰ame_tcb_queue_t
 *, 
tw_vb_‰ame_tcb_t
 *);

169 (*
put_hódî
)(
tw_vb_‰ame_tcb_queue_t
 *, 
tw_vb_‰ame_tcb_t
 *);

171 (*
gë_cuº_¥odu˚r_‰om_poﬁ
)(
tw_vb_‰ame_tcb_queue_t
 *, 
tw_vb_poﬁ_t
 *
poﬁ
);

172 (*
åy_gë_cuº_¥odu˚r_‰om_poﬁ
)(
tw_vb_‰ame_tcb_queue_t
 *, 
tw_vb_poﬁ_t
 *
poﬁ
);

173 (*
put_cuº_¥odu˚r_öto_queue
)(
tw_vb_‰ame_tcb_queue_t
 *);

174 (*
ªÀa£_cuº_¥odu˚r
)(
tw_vb_‰ame_tcb_queue_t
 *, 
tw_vb_poﬁ_t
 *
poﬁ
);

175 (*
gë_cuº_c⁄sumî_‰om_queue
)(
tw_vb_‰ame_tcb_queue_t
 *);

176 (*
åy_gë_cuº_c⁄sumî_‰om_queue
)(
tw_vb_‰ame_tcb_queue_t
 *);

177 (*
ªÀa£_cuº_c⁄sumî
)(
tw_vb_‰ame_tcb_queue_t
 *, 
tw_vb_poﬁ_t
 *
poﬁ
);

179 (*
gë_cuº_queue_íåy_numbî
)(
tw_vb_‰ame_tcb_queue_t
 *);

180 (*
ªÀa£
)(
tw_vb_‰ame_tcb_queue_t
 *, 
tw_vb_poﬁ_t
 *
poﬁ
);

181 (*
öô
)(
tw_vb_‰ame_tcb_queue_t
 *);

184 
	stw_vb_‰ame_tcb_queue
{

185 
u32
 
°¨t_time°amp
, 
tŸÆ_duøti⁄
;

186 
tcb_node_queue_t
 
queue_node
;

187 
tw_vb_‰ame_tcb_t
 *
cuº_c⁄sumî
;

188 
tw_vb_‰ame_tcb_t
 *
cuº_¥odu˚r
;

189 
•ölock_t
 
lock
;

191 
tw_vb_‰ame_queue_›î©i⁄
 *
›
;

194 
tw_¸óã_∑ckë_tcb_queue
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
);

195 
tw_de°roy_∑ckë_tcb_queue
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
, 
tw_vb_poﬁ_t
 *
poﬁ
);

197 
tw_¸óã_‰ame_tcb_queue
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
);

198 
tw_de°roy_‰ame_tcb_queue
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
, 
tw_vb_poﬁ_t
 *
poﬁ
);

200 
tw_¸óã_poﬁ
(
tw_vb_poﬁ_t
 *
poﬁ
, *, 
buf_Àn
);

201 
tw_de°roy_poﬁ
(
tw_vb_poﬁ_t
 *
poﬁ
);

203 #ifde‡
__˝lu•lus


	@../../tw5864/include/tw5864/tw_video_display.h

1 #i‚de‡
__TW_VIDEO_DISPLAY_H__


2 
	#__TW_VIDEO_DISPLAY_H__


	)

4 #ifde‡
__˝lu•lus


9 
	#MAX_DISPLAY_INTERFACE
 (4)

	)

10 
	#MAX_DISPLAY_POSITION
 (16)

	)

12 
	#DISP_REG_BASE
 (0xa800)

	)

13 
	#DISP_RD_WR_PTR
(
ch
Ë(
DISP_REG_BASE
 + ((ch)<< 4Ë+ 0x00)

	)

14 
	#DISP_CH_BUF
(
ch
Ë(
DISP_REG_BASE
 + ((ch)<< 4Ë+ 0x04)

	)

15 
	#DISP_DMA_MODE
(
ch
Ë(
DISP_REG_BASE
 + ((ch)<< 4Ë+ 0x08)

	)

16 
	#DISP_MODE
 (
DISP_REG_BASE
 + 0x0104)

	)

17 
	#DISP_CHNL_FMT07
 (
DISP_REG_BASE
 + 0x0108)

	)

18 
	#DISP_CHNL_FMT8f
 (
DISP_REG_BASE
 + 0x010c)

	)

19 
	#DISP_OUT_MODE
 (
DISP_REG_BASE
 + 0x0118)

	)

20 
	#DISP_OUT_NORM
 (
DISP_REG_BASE
 + 0x011c)

	)

21 
	#DISP_SIE_FMT
(
gΩ
Ë(
DISP_REG_BASE
 + 0x0120 + ((gΩË<< 4))

	)

22 
	#DISP_SIE_SEL_L
(
gΩ
Ë(
DISP_REG_BASE
 + 0x0124 + ((gΩË<< 4))

	)

23 
	#DISP_SIE_SEL_H
(
gΩ
Ë(
DISP_REG_BASE
 + 0x0128 + ((gΩË<< 4))

	)

25 
	#DISP_IRQ_MODE
 (
DISP_REG_BASE
 + 0x01fc)

	)

26 
	#DISP_IRQ_FLAGS
 (
DISP_REG_BASE
 + 0x01f8)

	)

27 
	#DISP_IRQ_DMA_FLAGS
 (
DISP_REG_BASE
 + 0x01f4)

	)

28 
	#DISP_IRQ_LOST_SYNC
 (
DISP_REG_BASE
 + 0x01f0)

	)

30 
	eTW_DISPLAY_INTERFACE_MODE
{

31 
TW_DISPLAY_INTERFACE_MODE_27M
 = 0,

32 
TW_DISPLAY_INTERFACE_MODE_54M
,

33 
TW_DISPLAY_INTERFACE_MODE_108M
,

34 
TW_DISPLAY_INTERFACE_MODE_RESERVE
,

37 
	eTW_DISPLAY_POSITION_STATE
{

38 
TW_DISPLAY_POSITION_STATE_UNUSED
 = 0,

39 
TW_DISPLAY_POSITION_STATE_USED
,

40 
TW_DISPLAY_POSITION_STATE_RESERVE
,

43 
tw_di•œy_drivî
 
	ttw_di•œy_drivî_t
;

44 
tw_di•œy_›î©i⁄
 
	ttw_di•œy_›î©i⁄_t
;

45 
tw_di•œy_öãrÁ˚
 
	ttw_di•œy_öãrÁ˚_t
;

46 
tw_di•œy_öãrÁ˚_›î©i⁄
 
	ttw_di•œy_öãrÁ˚_›î©i⁄_t
;

47 
tw_di•œy_pha£
 
	ttw_di•œy_pha£_t
;

48 
tw_di•œy_pha£_›î©i⁄
 
	ttw_di•œy_pha£_›î©i⁄_t
;

49 
tw_di•œy_posôi⁄
 
	ttw_di•œy_posôi⁄_t
;

50 
tw_di•œy_posôi⁄_›î©i⁄
 
	ttw_di•œy_posôi⁄_›î©i⁄_t
;

52 
	stw_di•œy_posôi⁄_›î©i⁄
{

53 (*
öô
)(
tw_di•œy_posôi⁄_t
 *, 
tw_di•œy_pha£_t
*, 
u32
);

54 (*
ª£t
)(
tw_di•œy_posôi⁄_t
 *);

55 (*
ªÀa£
)(
tw_di•œy_posôi⁄_t
 *);

57 (*
gë_°©e
)(
tw_di•œy_posôi⁄_t
 *);

58 (*
gë_posôi⁄
)(
tw_di•œy_posôi⁄_t
 *);

59 (*
ch™ge_pos_size
)(
tw_di•œy_posôi⁄_t
 *, 
u32
 , u32, u32 , u32);

61 (*
böd
)(
tw_di•œy_posôi⁄_t
 *, *);

62 (*
unböd
)(
tw_di•œy_posôi⁄_t
 *, *);

63 (*
sync
)(
tw_di•œy_posôi⁄_t
 *, *);

65 (*
£nd
)(
tw_di•œy_posôi⁄_t
 *);

66 (*
∑u£
)(
tw_di•œy_posôi⁄_t
 *);

67 (*
ªsume
)(
tw_di•œy_posôi⁄_t
 *);

68 (*
disˇrd
)(
tw_di•œy_posôi⁄_t
 *);

71 
	stw_di•œy_posôi⁄
{

72 
•ölock_t
 
lock
;

73 
u32
 
posôi⁄
;

74 
TW_DISPLAY_POSITION_STATE
 
°©e
;

76 
u32
 
°¨tx
, 
°¨ty
, 
width
, 
height
;

78 
tw_di•œy_pha£_t
 *
pha£
;

79 *
c⁄ãxt
;

81 
tw_di•œy_posôi⁄_›î©i⁄_t
 *
›
;

84 
	stw_di•œy_pha£_›î©i⁄
{

85 (*
öô
)(
tw_di•œy_pha£_t
 *);

86 (*
ª£t
)(
tw_di•œy_pha£_t
 *);

87 (*
ªÀa£
)(
tw_di•œy_pha£_t
 *);

89 (*
check_bound¨y
)(
tw_di•œy_pha£_t
 *, 
tw_di•œy_posôi⁄_t
 *);

92 
	stw_di•œy_pha£
{

93 
u32
 
pha£
;

95 
tw_di•œy_öãrÁ˚_t
 *
öãrÁ˚
;

96 
tw_di•œy_posôi⁄_t
 
posôi⁄
[
MAX_DISPLAY_POSITION
];

98 
tw_di•œy_pha£_t
 *
∑ª¡
, *
siblög
, *
chûd
;

99 
tw_di•œy_pha£_›î©i⁄_t
 *
›
;

102 
	stw_di•œy_öãrÁ˚_›î©i⁄
{

103 (*
öô
)(
tw_di•œy_öãrÁ˚_t
 *, 
u32
 
p‹t
, 
dvm_chù_t
 *);

104 (*
ª£t
)(
tw_di•œy_öãrÁ˚_t
 *);

105 (*
ªÀa£
)(
tw_di•œy_öãrÁ˚_t
 *);

107 (*
upd©e
)(
tw_di•œy_öãrÁ˚_t
 *);

109 
u32
 (*
gë_p‹t
)(
tw_di•œy_öãrÁ˚_t
 *);

110 
u32
 (*
gë_ˇ∑bûôy
)(
tw_di•œy_öãrÁ˚_t
 *);

111 
u32
 (*
gë_mode
)(
tw_di•œy_öãrÁ˚_t
 *);

112 (*
£t_mode
)(
tw_di•œy_öãrÁ˚_t
 *, 
TW_DISPLAY_INTERFACE_MODE
);

115 
	stw_di•œy_öãrÁ˚
{

116 
TW_DISPLAY_INTERFACE_MODE
 
ˇ∑bûôy
;

117 
u32
 
p‹t
;

118 
TW_DISPLAY_INTERFACE_MODE
 
mode
;

120 
tw_di•œy_pha£_t
 *
roŸ
;

121 
dvm_chù_t
 *
chù
;

122 
tw_di•œy_öãrÁ˚_›î©i⁄_t
 *
›
;

125 
	stw_di•œy_›î©i⁄
{

126 (*
öô
)(
tw_di•œy_drivî_t
 *);

127 (*
ª£t
)(
tw_di•œy_drivî_t
 *);

128 (*
ªÀa£
)(
tw_di•œy_drivî_t
 *);

130 (*
gë_video_°™d¨d
)(
tw_di•œy_drivî_t
 *);

131 (*
£t_video_°™d¨d
)(
tw_di•œy_drivî_t
 *, 
TW_VIDEO_STANDARD
);

134 
	stw_di•œy_drivî
{

135 
©omic_t
 
›íed_Êag
;

136 
ed_tcb_t
 
›íed_di•œy_ed
;

138 
TW_VIDEO_STANDARD
 
video_°™d¨d
;

139 
dvm_chù_t
 *
chù
;

140 
tw_di•œy_öãrÁ˚_t
 
öãrÁ˚
[
MAX_DISPLAY_INTERFACE
];

142 
tw_di•œy_›î©i⁄_t
 *
›
;

143 
tw_¥oc_ªgi°î_s
 
di•œy_¥oc
;

146 
öô_di•œy_drivî
(
dvm_chù_t
 *
chù
);

147 
ªmove_di•œy_drivî
(
tw_di•œy_drivî_t
 *
drivî
);

149 #ifde‡
__˝lu•lus


	@../../tw5864/interface/tw_interface.h

1 #i‚def 
DVM_INTERFACE_H


2 
	#DVM_INTERFACE_H


	)

4 #ifde‡
__˝lu•lus


13 
	#TW_VIDEO_H264_CODEC_TYPE
 (0)

	)

14 
	#TW_VIDEO_MJPEG_CODEC_TYPE
 (1)

	)

15 
	#TW_AUDIO_IAM_CODEC_TYPE
 (2)

	)

18 
	#TW_H264_MASTER_BITSTREAM
 (0)

	)

19 
	#TW_H264_SUB_BITSTREAM
 (1)

	)

21 
	stw_‰ame_hódî


23 
‰ame_hódî_size
;

24 
codecTy≥
;

25 
°ªamTy≥
;

26 
‰ameTy≥
;

27 
‰ameSîül
;

28 
timeSèmp
;

29 
∑ylﬂdLí
;

30 
∑ylﬂd_off£t
;

31 
∑d
[0];

34 
	stw_h264_idr_‰ame_∑d


36 
Âs
;

37 
log2MaxFømeNumNöus4
;

38 
mb_width_möus1
;

39 
mb_height_möus1
;

40 
öô_qp
;

41 
•s_‰ame_off£t
;

42 
•s_‰ame_size
;

43 
µs_‰ame_off£t
;

44 
µs_‰ame_size
;

45 
idr_‰ame_off£t
;

46 
idr_‰ame_size
;

47 
∑ylﬂd
[0];

50 
	stw_video_mŸi⁄_ve˘‹_∑d
{

51 
mvFœgs_off£t
;

52 
mvFœgs_size
;

53 
mŸi⁄Ve˘‹_off£t
;

54 
mŸi⁄Ve˘‹_size
;

55 
∑ylﬂd
[0];

58 
	stw_audio_‰ame_∑d
{

59 #i‡
deföed
(
__LITTLE_ENDIAN_BITFIELD
)

60 
u32
 
bus_id
:4;

61 
u32
 
chù_id
:4;

62 
u32
 
ch™_id
:4;

63 
u32
 
ty≥
:4;

64 
u32
 
bô_wide
:4;

65 
u32
 
ßm∂e_øã
:4;

66 
u32
 
bô_øã
:8;

67 #ñi‡
deföed
 (
__BIG_ENDIAN_BITFIELD
)

68 
u32
 
bô_øã
:8;

69 
u32
 
ßm∂e_øã
:4;

70 
u32
 
bô_wide
:4;

71 
u32
 
ty≥
:4;

72 
u32
 
ch™_id
:4;

73 
u32
 
chù_id
:4;

74 
u32
 
bus_id
:4;

78 
u32
 
‰ame_off£t
;

79 
u32
 
‰ame_size
;

80 
∑ylﬂd
[0];

108 #ifde‡
__˝lu•lus


	@../../tw5864/tw5864/algo_h264_driver.c

1 
	~<tw5864/dvm_comm⁄.h
>

5 
	$h264_gí_•s_rb•
(*
p_d©a
, 
h264_•s_t
 *
•s
)

7 
bs_t
 
bs
, *
s
;

9 
s
 = &
bs
;

10 
	`bs_öô
(
s
, 
p_d©a
, 
MAX_SPS_RBSP_LEN
);

11 
	`bs_wrôe
(
s
, 8, 
•s
->
i_¥ofûe_idc
);

12 
	`bs_wrôe
(
s
, 8, ((
•s
->
b_c⁄°øöt_£t0
<<7)|(•s->
b_c⁄°øöt_£t1
<<6)|(•s->
b_c⁄°øöt_£t2
<<5)));

13 
	`bs_wrôe
(
s
, 8, 
•s
->
i_Àvñ_idc
 );

14 
	`bs_wrôe_ue
(
s
, 
•s
->
i_id
);

15 
	`bs_wrôe_ue
(
s
, 
•s
->
i_log2_max_‰ame_num
 - 4);

16 
	`bs_wrôe_ue
(
s
, 
•s
->
i_poc_ty≥
);

17 if(
•s
->
i_poc_ty≥
 == 0)

18 
	`bs_wrôe_ue
(
s
, 
•s
->
i_log2_max_poc_lsb
 - 4);

19 i‡(
•s
->
i_poc_ty≥
 == 1) {

20 
i
;

21 
	`bs_wrôe
(
s
, 1, 
•s
->
b_dñè_pic_‹dî_Æways_zîo
);

22 
	`bs_wrôe_£
(
s
, 
•s
->
i_off£t_f‹_n⁄_ªf_pic
);

23 
	`bs_wrôe_£
(
s
, 
•s
->
i_off£t_f‹_t›_to_bŸtom_fõld
);

24 
	`bs_wrôe_ue
(
s
, 
•s
->
i_num_ªf_‰ames_ö_poc_cy˛e
);

25 
i
 = 0; i < 
•s
->
i_num_ªf_‰ames_ö_poc_cy˛e
; i++)

26 
	`bs_wrôe_£
(
s
, 
•s
->
i_off£t_f‹_ªf_‰ame
[
i
]);

28 
	`bs_wrôe_ue
(
s
, 
•s
->
i_num_ªf_‰ames
);

29 
	`bs_wrôe
(
s
, 1, 
•s
->
b_g≠s_ö_‰ame_num_vÆue_Ælowed
);

30 
	`bs_wrôe_ue
(
s
, 
•s
->
i_mb_width
 - 1);

31 
	`bs_wrôe_ue
(
s
, 
•s
->
i_mb_height
 - 1);

32 
	`bs_wrôe
(
s
, 1, 
•s
->
b_‰ame_mbs_⁄ly
);

33 if–!
•s
->
b_‰ame_mbs_⁄ly
)

34 
	`bs_wrôe
(
s
, 1, 
•s
->
b_mb_ad≠tive_‰ame_fõld
);

35 
	`bs_wrôe
(
s
, 1, 
•s
->
b_dúe˘8x8_ö„ªn˚
);

36 
	`bs_wrôe
(
s
, 1, 0);

37 
	`bs_wrôe
(
s
, 1, 0);

38 
	`bs_rb•_åaûög
(
s
);

39  
	`bs_Àn
(
s
);

40 
	}
}

42 
	$gí_h264_•s
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
tw_video_‰ame_tcb_t
 *
‰ame
)

44 
h264_«l_t
 *
«l
;

45 
h264_«l_bô°ªam_t
 *
h264_«l_•s_hód
;

46 
H264_NAL_INFO
 *
«l_öfo
;

47 #ifde‡ 
ADD_DVM_NAL_HEAD


48 
DVM_NAL_HEAD
 *
«l_•s_hód
;

49 
Àn
;

51 
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
;

52 
tw_video_∑ckë_tcb_t
 *
∑ckë
;

54 
«l
 = &
‰ame
->nal;

55 
video_∑ckë_queue
 = &
‰ame
->video_packet_queue;

56 
∑ckë
 = 
video_∑ckë_queue
->
cuº_¥odu˚r
;

57 
«l
->
•s_∑ylﬂd
 = &
∑ckë
->
d©a
[
‰ame
->
‰ame_Àn
];

58 
	`mem£t
(
«l
->
•s_∑ylﬂd
, 0, 64);

59 
h264_«l_•s_hód
 = (
h264_«l_bô°ªam_t
*)
«l
->
•s_∑ylﬂd
;

60 #ifde‡ 
ADD_DVM_NAL_HEAD


61 
«l_•s_hód
 = &
h264_«l_•s_hód
->
hód
;

63 
«l_öfo
 = &
h264_«l_•s_hód
->
«l
;

65 #ifde‡ 
ADD_DVM_NAL_HEAD


66 
«l_•s_hód
->
e_«l_ty≥
 = 
DVM_NAL_SPS
;

68 #i‡
NAL_FILL_ZERO_NUM


69 
«l_öfo
->
zîo1
 = 0;

70 
«l_öfo
->
zîo2
 = 0;

72 
«l_öfo
->
zîo3
 = 0;

73 
«l_öfo
->
zîo4
 = 0;

74 
«l_öfo
->
zîo5
 = 0;

75 
«l_öfo
->
c⁄°™t_vÆue_1
 = 1;

76 
«l_öfo
->
«l_ªf_idc
 = 
«l
->
i_ªf_idc
 = 
NAL_PRIORITY_HIGHEST
;

77 
«l_öfo
->
«l_unô_ty≥
 = 
«l
->
i_ty≥
 = 
NAL_SPS
;

78 
«l_öfo
->
f‹biddí_zîo_bô
 = 0;

80 
«l
->
•s_∑ysize
 = (
h264_«l_bô°ªam_t
);

81 
«l
->
•s_∑ysize
 +
	`h264_gí_•s_rb•
(
h264_«l_•s_hód
->
rb•
, 
h264_ícode_c⁄åﬁ
->
•s
);

82 
‰ame
->
‰ame_Àn
 +
«l
->
•s_∑ysize
;

84 #ifde‡ 
ADD_DVM_NAL_HEAD


85 
Àn
 = 
«l
->
•s_∑ysize
 - (
DVM_NAL_HEAD
);

86 
«l_•s_hód
->
i_«l_size_0_7
 = (
Àn
 & 0xff);

87 
«l_•s_hód
->
i_«l_size_8_15
 = ((
Àn
>>8) & 0xff);

88 
«l_•s_hód
->
i_«l_size_16_23
 = ((
Àn
>>16) & 0xff);

90  
«l
->
•s_∑ysize
;

91 
	}
}

93 
	$h264_gí_µs_rb•
(*
p_d©a
, 
h264_µs_t
 *
µs
)

95 
bs_t
 
bs
, *
s
;

97 
s
 = &
bs
;

98 
	`bs_öô
(
s
, 
p_d©a
, 
MAX_PPS_RBSP_LEN
);

99 
	`bs_wrôe_ue
(
s
, 
µs
->
i_id
);

100 
	`bs_wrôe_ue
(
s
, 
µs
->
i_•s_id
);

101 
	`bs_wrôe
(
s
, 1, 
µs
->
b_ˇbac
);

102 
	`bs_wrôe
(
s
, 1, 
µs
->
b_pic_‹dî
);

103 
	`bs_wrôe_ue
(
s
, 
µs
->
i_num_¶i˚_groups
 - 1);

104 
	`bs_wrôe_ue
(
s
, 
µs
->
i_num_ªf_idx_l0_a˘ive
 - 1);

105 
	`bs_wrôe_ue
(
s
, 
µs
->
i_num_ªf_idx_l1_a˘ive
 - 1);

106 
	`bs_wrôe
(
s
, 1, 
µs
->
b_weighãd_¥ed
);

107 
	`bs_wrôe
(
s
, 2, 
µs
->
b_weighãd_bùªd
);

108 
	`bs_wrôe_£
(
s
, 
µs
->
i_pic_öô_qp
 - 26);

109 
	`bs_wrôe_£
(
s
, 
µs
->
i_pic_öô_qs
 - 26);

110 
	`bs_wrôe_£
(
s
, 
µs
->
i_chroma_qp_ödex_off£t
);

111 
	`bs_wrôe
(
s
, 1, 
µs
->
b_deblockög_fûãr_c⁄åﬁ
);

112 
	`bs_wrôe
(
s
, 1, 
µs
->
b_c⁄°øöed_öåa_¥ed
);

113 
	`bs_wrôe
(
s
, 1, 
µs
->
b_ªdund™t_pic_˙t
);

114 
	`bs_rb•_åaûög
(
s
);

115  
	`bs_Àn
(
s
);

116 
	}
}

118 
	$gí_h264_µs
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
tw_video_‰ame_tcb_t
 *
‰ame
)

120 
h264_«l_t
 *
«l
;

121 
h264_«l_bô°ªam_t
 *
h264_«l_µs_hód
;

122 
H264_NAL_INFO
 *
«l_öfo
;

123 #ifde‡ 
ADD_DVM_NAL_HEAD


124 
DVM_NAL_HEAD
 *
«l_µs_hód
;

125 
Àn
;

127 
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
;

128 
tw_video_∑ckë_tcb_t
 *
∑ckë
;

130 
«l
 = &
‰ame
->nal;

131 
video_∑ckë_queue
 = &
‰ame
->video_packet_queue;

132 
∑ckë
 = 
video_∑ckë_queue
->
cuº_¥odu˚r
;

133 
«l
->
µs_∑ylﬂd
 = &
∑ckë
->
d©a
[
‰ame
->
‰ame_Àn
];

134 
	`mem£t
(
«l
->
µs_∑ylﬂd
, 0, 64);

135 
h264_«l_µs_hód
 = (
h264_«l_bô°ªam_t
*)
«l
->
µs_∑ylﬂd
;

136 #ifde‡ 
ADD_DVM_NAL_HEAD


137 
«l_µs_hód
 = &
h264_«l_µs_hód
->
hód
;

139 
«l_öfo
 = &
h264_«l_µs_hód
->
«l
;

141 #ifde‡ 
ADD_DVM_NAL_HEAD


142 
«l_µs_hód
->
e_«l_ty≥
 = 
DVM_NAL_PPS
;

144 #i‡
NAL_FILL_ZERO_NUM


145 
«l_öfo
->
zîo1
 = 0;

146 
«l_öfo
->
zîo2
 = 0;

148 
«l_öfo
->
zîo3
 = 0;

149 
«l_öfo
->
zîo4
 = 0;

150 
«l_öfo
->
zîo5
 = 0;

151 
«l_öfo
->
c⁄°™t_vÆue_1
 = 1;

152 
«l_öfo
->
«l_ªf_idc
 = 
«l
->
i_ªf_idc
 = 
NAL_PRIORITY_HIGHEST
;

153 
«l_öfo
->
«l_unô_ty≥
 = 
«l
->
i_ty≥
 = 
NAL_PPS
;

154 
«l_öfo
->
f‹biddí_zîo_bô
 = 0;

156 
«l
->
µs_∑ysize
 = (
h264_«l_bô°ªam_t
);

157 
«l
->
µs_∑ysize
 +
	`h264_gí_µs_rb•
(
h264_«l_µs_hód
->
rb•
, 
h264_ícode_c⁄åﬁ
->
µs
);

158 
‰ame
->
‰ame_Àn
 +
«l
->
µs_∑ysize
;

160 #ifde‡ 
ADD_DVM_NAL_HEAD


161 
Àn
 = 
«l
->
µs_∑ysize
 - (
DVM_NAL_HEAD
);

162 
«l_µs_hód
->
i_«l_size_0_7
 = (
Àn
 & 0xff);

163 
«l_µs_hód
->
i_«l_size_8_15
 = ((
Àn
>>8) & 0xff);

164 
«l_µs_hód
->
i_«l_size_16_23
 = ((
Àn
>>16) & 0xff);

166  
«l
->
µs_∑ysize
;

167 
	}
}

169 
	$h264_gí_¶i˚_hód
(*
p_d©a
, 
h264_¶i˚_hódî_t
 *
¶i˚_hód
, 
h264_«l_t
 *
«l
)

171 
bs_t
 
bs
, *
s
;

173 
s
 = &
bs
;

174 
	`bs_öô
(
s
, 
p_d©a
, 
MAX_SLICE_HEAD_LEN
);

175 
	`bs_wrôe_ue
(
s
, 
¶i˚_hód
->
i_fú°_mb
);

176 
	`bs_wrôe_ue
(
s
, 
¶i˚_hód
->
i_ty≥
);

177 
	`bs_wrôe_ue
(
s
, 
¶i˚_hód
->
i_µs_id
);

178 
	`bs_wrôe
(
s
, 
¶i˚_hód
->
•s
->
i_log2_max_‰ame_num
, sli˚_hód->
i_‰ame_num
);

179 if(
«l
->
i_ty≥
 =
NAL_SLICE_IDR
)

180 
	`bs_wrôe_ue
(
s
, 
¶i˚_hód
->
i_idr_pic_id
);

181 if(
¶i˚_hód
->
•s
->
i_poc_ty≥
 == 0) {

182 
¶i˚_hód
->
i_poc_lsb
 = (¶i˚_hód->
i_‰ame_num
<<1);

183 
	`bs_wrôe
(
s
, 
¶i˚_hód
->
•s
->
i_log2_max_poc_lsb
, sli˚_hód->
i_poc_lsb
);

185 if(
¶i˚_hód
->
i_ty≥
 =
SLICE_TYPE_P
 || sli˚_hód->i_ty≥ =
SLICE_TYPE_SP
 || sli˚_hód->i_ty≥ =
SLICE_TYPE_B
 ) {

186 
	`bs_wrôe1
(
s
, 
¶i˚_hód
->
b_num_ªf_idx_ovîride
);

187 if(
¶i˚_hód
->
b_num_ªf_idx_ovîride
==1) {

188 i‡(
¶i˚_hód
->
i_ty≥
 =
SLICE_TYPE_P
)

189 
	`bs_wrôe_ue
(
s
, 
¶i˚_hód
->
i_‰ame_num
-1);

194 i‡(
¶i˚_hód
->
i_ty≥
 !
SLICE_TYPE_I
 && sli˚_hód->i_ty≥ !
SLICE_TYPE_SI
) {

195 
¶i˚_hód
->
b_ªf_pic_li°_ª‹dîög_l0
 = 0;

196 
	`bs_wrôe1
(
s
, 
¶i˚_hód
->
b_ªf_pic_li°_ª‹dîög_l0
);

198 i‡(
«l
->
i_ªf_idc
 !
NAL_PRIORITY_DISPOSABLE
) {

199 i‡(
«l
->
i_ty≥
 =
NAL_SLICE_IDR
) {

200 
	`bs_wrôe1
(
s
, 0);

201 
	`bs_wrôe1
(
s
, 0);

203 
	`bs_wrôe1
(
s
, 0);

205 
	`bs_wrôe_£
(
s
, 
¶i˚_hód
->
i_qp_dñè
 );

207 i‡(
s
->
i_À·
 != 8){

208 
«l
->
i_ãmp_bôÆign_c⁄ã¡
 = ((
s
->
p
[0])<<s->
i_À·
);

209 
«l
->
i_ãmp_bôÆign_numbî
 = 8-
s
->
i_À·
;

211 
«l
->
i_ãmp_bôÆign_c⁄ã¡
 = 0;

212 
«l
->
i_ãmp_bôÆign_numbî
 = 0;

215  
	`bs_Àn
(
s
);

216 
	}
}

218 
	$gí_h264_¶i˚hód
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
tw_video_‰ame_tcb_t
 *
‰ame
, 
‰ame_ty≥
)

220 
h264_«l_t
 *
«l
;

221 
h264_«l_bô°ªam_t
 *
h264_«l_¶i˚_hód
;

222 
H264_NAL_INFO
 *
«l_öfo
;

223 #ifde‡ 
ADD_DVM_NAL_HEAD


224 
DVM_NAL_HEAD
 *
«l_¶i˚_hód
;

225 
Àn
;

227 
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
;

228 
tw_video_∑ckë_tcb_t
 *
∑ckë
;

229 
u8
 *
ch
;

230 
u32
 
ãmp_vÆue
;

232 
«l
 = &
‰ame
->nal;

233 
video_∑ckë_queue
 = &
‰ame
->video_packet_queue;

234 
∑ckë
 = 
video_∑ckë_queue
->
cuº_¥odu˚r
;

235 
«l
->
¶i˚_∑ylﬂd
 = &
∑ckë
->
d©a
[
‰ame
->
‰ame_Àn
];

236 
	`mem£t
(
«l
->
¶i˚_∑ylﬂd
, 0, 64);

237 
h264_«l_¶i˚_hód
 = (
h264_«l_bô°ªam_t
*)
«l
->
¶i˚_∑ylﬂd
;

238 #ifde‡ 
ADD_DVM_NAL_HEAD


239 
«l_¶i˚_hód
 = &
h264_«l_¶i˚_hód
->
hód
;

241 
«l_öfo
 = &
h264_«l_¶i˚_hód
->
«l
;

243 
‰ame_ty≥
){

244 
H264_FRAME_TYPE_P
:

245 #ifde‡ 
ADD_DVM_NAL_HEAD


246 
«l_¶i˚_hód
->
e_«l_ty≥
 = 
DVM_NAL_SLICE_P
;

247 
«l_¶i˚_hód
->
i_«l_size_0_7
 = 0;

248 
«l_¶i˚_hód
->
i_«l_size_8_15
 = 0;

249 
«l_¶i˚_hód
->
i_«l_size_16_23
 = 0;

251 
«l_öfo
->
«l_unô_ty≥
 = 
«l
->
i_ty≥
 = 
NAL_SLICE
;

253 
H264_FRAME_TYPE_I
:

254 #ifde‡ 
ADD_DVM_NAL_HEAD


255 
«l_¶i˚_hód
->
e_«l_ty≥
 = 
DVM_NAL_SLICE_I
;

256 
«l_¶i˚_hód
->
i_«l_size_0_7
 = 0;

257 
«l_¶i˚_hód
->
i_«l_size_8_15
 = 0;

258 
«l_¶i˚_hód
->
i_«l_size_16_23
 = 0;

260 
«l_öfo
->
«l_unô_ty≥
 = 
«l
->
i_ty≥
 = 
NAL_SLICE
;

263 #ifde‡ 
ADD_DVM_NAL_HEAD


264 
«l_¶i˚_hód
->
e_«l_ty≥
 = 
DVM_NAL_SLICE_IDR
;

265 
«l_¶i˚_hód
->
i_«l_size_0_7
 = 0;

266 
«l_¶i˚_hód
->
i_«l_size_8_15
 = 0;

267 
«l_¶i˚_hód
->
i_«l_size_16_23
 = 0;

269 
«l_öfo
->
«l_unô_ty≥
 = 
«l
->
i_ty≥
 = 
NAL_SLICE_IDR
;

272 #i‡
NAL_FILL_ZERO_NUM


273 
«l_öfo
->
zîo1
 = 0;

274 
«l_öfo
->
zîo2
 = 0;

276 
«l_öfo
->
zîo3
 = 0;

277 
«l_öfo
->
zîo4
 = 0;

278 
«l_öfo
->
zîo5
 = 0;

279 
«l_öfo
->
c⁄°™t_vÆue_1
 = 1;

280 
«l_öfo
->
f‹biddí_zîo_bô
 = 0;

281 
«l_öfo
->
«l_ªf_idc
 = 
«l
->
i_ªf_idc
 = 
NAL_PRIORITY_LOW
;

283 
«l
->
¶i˚_∑ysize
 = (
h264_«l_bô°ªam_t
);

284 
«l
->
¶i˚_∑ysize
 +
	`h264_gí_¶i˚_hód
(
h264_«l_¶i˚_hód
->
rb•
, 
h264_ícode_c⁄åﬁ
->
¶i˚_hód
,Çal);

285 
‰ame
->
‰ame_Àn
 +
«l
->
¶i˚_∑ysize
;

286 
ch
 = &
∑ckë
->
d©a
[
‰ame
->
‰ame_Àn
];

287 
‰ame
->
‰ame_Àn
&0x1) {

289 
«l
->
i_ãmp_bôÆign_c⁄ã¡
 <<= 8;

292 
‰ame
->
‰ame_Àn
--;

293 
ch
--;

294 
ãmp_vÆue
 = *
ch
;

295 
ãmp_vÆue
 <<= 8;

296 
ãmp_vÆue
 |(
«l
->
i_ãmp_bôÆign_c⁄ã¡
);

297 
«l
->
i_ãmp_bôÆign_c⁄ã¡
 = 
ãmp_vÆue
;

298 
«l
->
i_ãmp_bôÆign_numbî
 += 8;

302 
‰ame
->
i_öô_qp
 = 
h264_ícode_c⁄åﬁ
->
µs
->
i_pic_öô_qp
;

303  
«l
->
¶i˚_∑ysize
;

304 
	}
}

306 
	$gí_ext_«l_audio_hódî
(*
buf
, 
audio_ty≥
, 
Àn
)

308 
ext_h264_«l_bô°ªam_t
 *
ext_«l_audio_hód
 = (ext_h264_«l_bô°ªam_t*)
buf
;

309 #ifde‡ 
ADD_DVM_NAL_HEAD


310 
DVM_NAL_HEAD
 *
«l_audio_hód
;

312 
H264_NAL_INFO
 *
«l_öfo
;

313 
ªt
 ;

315 #ifde‡ 
ADD_DVM_NAL_HEAD


316 
«l_audio_hód
 = &
ext_«l_audio_hód
->
hód
;

318 
«l_öfo
 = &
ext_«l_audio_hód
->
«l
;

320 #ifde‡ 
ADD_DVM_NAL_HEAD


321 
ªt
 = (
ext_h264_«l_bô°ªam_t
Ë+ 
Àn
 - (
DVM_NAL_HEAD
);

322 
«l_audio_hód
->
i_«l_size_0_7
 = (
ªt
&0xff);

323 
«l_audio_hód
->
i_«l_size_8_15
 = ((
ªt
>>8)&0xff);

324 
«l_audio_hód
->
i_«l_size_16_23
 = ((
ªt
>>16)&0xff);

326 
audio_ty≥
){

328 
TW_AUDIO_PCM
:

329 #ifde‡ 
ADD_DVM_NAL_HEAD


330 
«l_audio_hód
->
e_«l_ty≥
 = 
DVM_NAL_AUDIO_PCM
;

332 
ext_«l_audio_hód
->
ext_ty≥
 = 
NAL_TYPE_EX_A_PCM
;

334 
TW_AUDIO_ALAW
:

335 #ifde‡ 
ADD_DVM_NAL_HEAD


336 
«l_audio_hód
->
e_«l_ty≥
 = 
DVM_NAL_AUDIO_ALAW
;

338 
ext_«l_audio_hód
->
ext_ty≥
 = 
NAL_TYPE_EX_A_ALAW
;

340 
TW_AUDIO_ULAW
:

341 #ifde‡ 
ADD_DVM_NAL_HEAD


342 
«l_audio_hód
->
e_«l_ty≥
 = 
DVM_NAL_AUDIO_ULAW
;

344 
ext_«l_audio_hód
->
ext_ty≥
 = 
NAL_TYPE_EX_A_ULAW
;

346 
TW_AUDIO_ADPCM_32K
:

347 #ifde‡ 
ADD_DVM_NAL_HEAD


348 
«l_audio_hód
->
e_«l_ty≥
 = 
DVM_NAL_AUDIO_IMAADPCM
;

350 
ext_«l_audio_hód
->
ext_ty≥
 = 
NAL_TYPE_EX_A_IMAADPCM
;

352 
TW_AUDIO_ADPCM_48K
:

353 #ifde‡ 
ADD_DVM_NAL_HEAD


354 
«l_audio_hód
->
e_«l_ty≥
 = 
DVM_NAL_AUDIO_IMAADPCM
;

356 
ext_«l_audio_hód
->
ext_ty≥
 = 
NAL_TYPE_EX_A_IMAADPCM
;

358 
TW_AUDIO_ADPCM_16K
:

359 #ifde‡ 
ADD_DVM_NAL_HEAD


360 
«l_audio_hód
->
e_«l_ty≥
 = 
DVM_NAL_AUDIO_IMAADPCM
;

362 
ext_«l_audio_hód
->
ext_ty≥
 = 
NAL_TYPE_EX_A_IMAADPCM
;

365 #i‡
NAL_FILL_ZERO_NUM


366 
«l_öfo
->
zîo1
 = 0;

367 
«l_öfo
->
zîo2
 = 0;

369 
«l_öfo
->
zîo3
 = 0;

370 
«l_öfo
->
zîo4
 = 0;

371 
«l_öfo
->
zîo5
 = 0;

372 
«l_öfo
->
c⁄°™t_vÆue_1
 = 1;

373 
«l_öfo
->
f‹biddí_zîo_bô
 = 0;

374 
«l_öfo
->
«l_ªf_idc
 = 
NAL_PRIORITY_LOW
;

375 
«l_öfo
->
«l_unô_ty≥
 = 
NAL_TYPE_EX_AUDIO
;

377 
ªt
 = (
ext_h264_«l_bô°ªam_t
Ë+ 
Àn
;

378  
ªt
;

379 
	}
}

381 
	$gí_ext_mj≥g_hódî
(*
buf
, 
Àn
)

383 
ext_h264_«l_bô°ªam_t
 *
ext_«l_mj≥g_hód
 = (ext_h264_«l_bô°ªam_t*)
buf
;

384 #ifde‡ 
ADD_DVM_NAL_HEAD


385 
DVM_NAL_HEAD
 *
«l_mj≥g_hód
;

387 
H264_NAL_INFO
 *
«l_öfo
;

388 
ªt
 ;

390 #ifde‡ 
ADD_DVM_NAL_HEAD


391 
«l_mj≥g_hód
 = &
ext_«l_mj≥g_hód
->
hód
;

393 
«l_öfo
 = &
ext_«l_mj≥g_hód
->
«l
;

394 #ifde‡ 
ADD_DVM_NAL_HEAD


395 
ªt
 = (
ext_h264_«l_bô°ªam_t
Ë+ 
Àn
 - (
DVM_NAL_HEAD
);

396 
«l_mj≥g_hód
->
i_«l_size_0_7
 = (
ªt
&0xff);

397 
«l_mj≥g_hód
->
i_«l_size_8_15
 = ((
ªt
>>8)&0xff);

398 
«l_mj≥g_hód
->
i_«l_size_16_23
 = ((
ªt
>>16)&0xff);

399 
«l_mj≥g_hód
->
e_«l_ty≥
 = 
DVM_NAL_MJPEG
;

401 #i‡
NAL_FILL_ZERO_NUM


402 
«l_öfo
->
zîo1
 = 0;

403 
«l_öfo
->
zîo2
 = 0;

405 
«l_öfo
->
zîo3
 = 0;

406 
«l_öfo
->
zîo4
 = 0;

407 
«l_öfo
->
zîo5
 = 0;

408 
«l_öfo
->
c⁄°™t_vÆue_1
 = 1;

409 
«l_öfo
->
f‹biddí_zîo_bô
 = 0;

410 
«l_öfo
->
«l_ªf_idc
 = 
NAL_PRIORITY_LOW
;

411 
«l_öfo
->
«l_unô_ty≥
 = 
NAL_TYPE_EX_PIC
;

413 
ext_«l_mj≥g_hód
->
ext_ty≥
 = 
NAL_TYPE_EX_P_MJPEG
;

414 
ªt
 = (
ext_h264_«l_bô°ªam_t
Ë+ 
Àn
;

415  
ªt
;

416 
	}
}

418 
	$gí_ext_mv_hódî
(*
buf
, 
Àn
)

420 
ext_h264_«l_bô°ªam_t
 *
ext_«l_mv_hód
 = (ext_h264_«l_bô°ªam_t*)
buf
;

421 #ifde‡ 
ADD_DVM_NAL_HEAD


422 
DVM_NAL_HEAD
 *
«l_mv_hód
;

424 
H264_NAL_INFO
 *
«l_öfo
;

425 
ªt
 ;

427 #ifde‡ 
ADD_DVM_NAL_HEAD


428 
«l_mv_hód
 = &
ext_«l_mv_hód
->
hód
;

430 
«l_öfo
 = &
ext_«l_mv_hód
->
«l
;

432 #ifde‡ 
ADD_DVM_NAL_HEAD


433 
ªt
 = (
ext_h264_«l_bô°ªam_t
Ë+ 
Àn
 - (
DVM_NAL_HEAD
);

434 
«l_mv_hód
->
i_«l_size_0_7
 = (
ªt
&0xff);

435 
«l_mv_hód
->
i_«l_size_8_15
 = ((
ªt
>>8)&0xff);

436 
«l_mv_hód
->
i_«l_size_16_23
 = ((
ªt
>>16)&0xff);

437 
«l_mv_hód
->
e_«l_ty≥
 = 
DVM_NAL_MV
;

439 #i‡
NAL_FILL_ZERO_NUM


440 
«l_öfo
->
zîo1
 = 0;

441 
«l_öfo
->
zîo2
 = 0;

443 
«l_öfo
->
zîo3
 = 0;

444 
«l_öfo
->
zîo4
 = 0;

445 
«l_öfo
->
zîo5
 = 0;

446 
«l_öfo
->
c⁄°™t_vÆue_1
 = 1;

447 
«l_öfo
->
f‹biddí_zîo_bô
 = 0;

448 
«l_öfo
->
«l_ªf_idc
 = 
NAL_PRIORITY_LOW
;

449 
«l_öfo
->
«l_unô_ty≥
 = 
NAL_TYPE_EX_MV
;

451 
ext_«l_mv_hód
->
ext_ty≥
 = 
NAL_TYPE_EX_MV_D1
;

452 
ªt
 = (
ext_h264_«l_bô°ªam_t
Ë+ 
Àn
;

453  
ªt
;

454 
	}
}

	@../../tw5864/tw5864/bar_ctl.c

7 
	~<tw5864/dvm_comm⁄.h
>

9 
	#ROL
(
vÆ
, 
bôs
, 
wide
, 
mask
) do{ \

10 *(
vÆ
Ë(*(vÆ)<<(
bôs
Ë| *(vÆ)>>((
wide
Ë- (bôs))Ë& (
mask
); \

11 }0)

	)

12 
	#ROR
(
vÆ
, 
bôs
, 
wide
, 
mask
) do{ \

13 *(
vÆ
Ë(*(vÆ)>>(
bôs
Ë| *(vÆ)<<((
wide
Ë- (bôs))Ë& (
mask
); \

14 }0)

	)

16 
	gPAL_MAP
[13] = {

23 
	gNTSC_MAP
[16] = {

30 
	gGROUP_MAP
[121] = {

55 
u32
 
	$gë_bôs_m≠
(
u32
 
m
, u32 
n
)

57 
i
, 
div
, 
hÆf
, 
smÆl
;

58 
m≠
, 
mask
;

60 
mask
 = 0;

61 
i
 = 0; i < 
m
; i++){

62 
mask
 |(1 << 
i
);

65 if(
n
 > 
m
){

66  
mask
;

69 
m≠
 =0x00000000;

70 if((
m
 =0Ë|| (
n
 == 0)){

71  
m≠
;

72 }if(
m
 <
n
){

73  
mask
;

76 
hÆf
 = ((
m
) / 2);

77 if(
n
 <
hÆf
){

78 
smÆl
 = 
n
;

80 
smÆl
 = 
m
 - 
n
;

82 
div
 = 
m
 / 
smÆl
;

84 if(
m
 > 0){

85 
i
 = 0; i < 
smÆl
; i++){

86 
m≠
 |1 << (
i
 * 
div
);

90 if(
n
 > 
hÆf
){

91 
m≠
 = (~m≠Ë& 
mask
;

93 !(
m≠
 & 0x00000001)){

94 
	`ROR
(&
m≠
, 1, 
m
, 
mask
);

97  (
m≠
 & 
mask
);

98 
	}
}

100 
ölöe
 
	$loˇã_m≠
(
d1
, 
cif
)

102 if((
d1
 > 15Ë|| (d1 < 5Ë|| (
cif
 < 1) || (cif > 11))

108  (
d1
 - 5Ë* 11 + 
cif
 - 1;

109 
	}
}

119 
	$cb_ªsﬁve_gΩ
(*
ö_ch∆
, *
ö_fmt
, *
ö_‰m
,

120 
VGROUP_S
 *
vgΩ
, 
tŸÆ
, 
gΩ˙t
)

122 
i
 = 0, 
j
 = 0, 
k
 = 0, 
d1_˙t
 = 0, 
hÆfd1_˙t
 = 0, 
ãmp
 = 0, 
cif_˙t
 = 0;

123 
övÆ
 = 0;

124 
f‹m©
[
TW_MAX_VI
], 
‰m_øã
[TW_MAX_VI];

125 
ãmp_ch
[
TW_MAX_VI
] = {0};

126 
d1_±r
, 
cif_±r
, 
dú
 = 0;

127 
gΩ_m≠
 = 0x0;

129 if((
tŸÆ
 <0Ë|| (
gΩ˙t
 <= 0))

134 
	`mem£t
(
f‹m©
, 0, (Ë* 
TW_MAX_VI
);

135 
	`mem£t
(
‰m_øã
, 0, (Ë* 
TW_MAX_VI
);

137 
i
 = 0; i < 
gΩ˙t
; i++)

139 
j
 = 0; j < 
TW_CHN_NO
; j++)

141 
vgΩ
[
i
].
ö_£À˘
[
j
] = 
TW_INVAL_CHN
;

142 
vgΩ
[
i
].
ö_fmt
[
j
] = 
TW_VIDEO_SIZE_USER
;

143 
vgΩ
[
i
].
ö_øã
[
j
] = -1;

148 
i
 = 0, 
j
 = 0, 
k
 = 0; i < 
tŸÆ
; i++)

150 if(
ö_ch∆
[
i
] =
TW_INVAL_CHN
)

152 
övÆ
++;

155 if((
ö_fmt
[
i
] =
TW_VIDEO_SIZE_D1
Ë|| (ö_fmt[i] =
TW_VIDEO_SIZE_HALF_D1
))

157 
ãmp_ch
[
j
] = 
ö_ch∆
[
i
];

158 
f‹m©
[
j
] = 
ö_fmt
[
i
];

159 
‰m_øã
[
j
] = 
ö_‰m
[
i
];

160 
d1_˙t
++;

161 if(
ö_fmt
[
i
] =
TW_VIDEO_SIZE_HALF_D1
)

163 
hÆfd1_˙t
++;

165 
j
++;

169 
ãmp_ch
[
tŸÆ
 - 
k
 - 1] = 
ö_ch∆
[
i
];

170 
f‹m©
[
tŸÆ
 - 
k
 - 1] = 
ö_fmt
[
i
];

171 
‰m_øã
[
tŸÆ
 - 
k
 - 1] = 
ö_‰m
[
i
];

172 
k
++;

175 
tŸÆ
 -
övÆ
;

177 
i
 = 0; i < (
d1_˙t
 - 1); i++)

179 
j
 = 
i
; j < 
d1_˙t
; j++)

181 if(
‰m_øã
[
i
] > frm_øã[
j
])

183 
ãmp
 = 
ãmp_ch
[
i
];

184 
ãmp_ch
[
i
] =Åemp_ch[
j
];

185 
ãmp_ch
[
j
] = 
ãmp
;

187 
ãmp
 = 
f‹m©
[
i
];

188 
f‹m©
[
i
] = f‹m©[
j
];

189 
f‹m©
[
j
] = 
ãmp
;

191 
ãmp
 = 
‰m_øã
[
i
];

192 
‰m_øã
[
i
] = frm_øã[
j
];

193 
‰m_øã
[
j
] = 
ãmp
;

199 
i
 = 
d1_˙t
; i < 
tŸÆ
 -1; i++)

201 
j
 = 
i
; j < 
tŸÆ
; j++)

203 if(
‰m_øã
[
i
] > frm_øã[
j
])

205 
ãmp
 = 
ãmp_ch
[
i
];

206 
ãmp_ch
[
i
] =Åemp_ch[
j
];

207 
ãmp_ch
[
j
] = 
ãmp
;

209 
ãmp
 = 
f‹m©
[
i
];

210 
f‹m©
[
i
] = f‹m©[
j
];

211 
f‹m©
[
j
] = 
ãmp
;

213 
ãmp
 = 
‰m_øã
[
i
];

214 
‰m_øã
[
i
] = frm_øã[
j
];

215 
‰m_øã
[
j
] = 
ãmp
;

220 
cif_˙t
 = 
tŸÆ
 - 
d1_˙t
;

223 if(
tŸÆ
 <
gΩ˙t
)

225 
i
 = 0; i < 
tŸÆ
; i++)

227 
vgΩ
[
i
].
ö_£À˘
[0] = 
ãmp_ch
[i];

228 
vgΩ
[
i
].
ö_fmt
[0] = 
f‹m©
[i];

229 
vgΩ
[
i
].
ö_øã
[0] = 
‰m_øã
[i];

230 
vgΩ
[
i
].
tŸÆ
 = 1;

237 if((
d1_˙t
 <
gΩ˙t
Ë|| (d1_˙à=
tŸÆ
Ë|| (
hÆfd1_˙t
 ==Åotal))

255 
gΩ_m≠
 = 0xffffffff;

257 
gΩ_m≠
 = 
GROUP_MAP
[
	`loˇã_m≠
(
d1_˙t
, 
cif_˙t
)];

261 if(!
gΩ_m≠
)

264 
	`TW_DBG
(
TW_DBG_ERR
, "d⁄'àexsô m≠, %dD1 + %dCIF = %d\n", 
d1_˙t
, 
cif_˙t
);

267 
d1_±r
 = 
d1_˙t
 - 1;

268 
cif_±r

d1_˙t
;

270 
j
 = 0; j < 
gΩ˙t
; j++){

271 
dú
 = !dir;

272 if(
dú
){

273 
i
 = (
gΩ˙t
 - 1); i >= 0; i--){

274 if(
gΩ_m≠
 & (0x80000000 >> (
i
 * 
TW_CHN_NO
 + 
j
)))

276 if(
d1_±r
 < 0){

279 
vgΩ
[
i
].
ö_£À˘
[
j
] = 
ãmp_ch
[
d1_±r
];

280 
vgΩ
[
i
].
ö_fmt
[
j
] = 
f‹m©
[
d1_±r
];

281 
vgΩ
[
i
].
ö_øã
[
j
] = 
‰m_øã
[
d1_±r
];

282 
vgΩ
[
i
].
tŸÆ
++;

283 
d1_±r
--;

287 
i
 = 0; i < 
gΩ˙t
; i++){

288 if(
gΩ_m≠
 & (0x80000000 >> (
i
 * 
TW_CHN_NO
 + 
j
)))

290 if(
d1_±r
 < 0){

293 
vgΩ
[
i
].
ö_£À˘
[
j
] = 
ãmp_ch
[
d1_±r
];

294 
vgΩ
[
i
].
ö_fmt
[
j
] = 
f‹m©
[
d1_±r
];

295 
vgΩ
[
i
].
ö_øã
[
j
] = 
‰m_øã
[
d1_±r
];

296 
vgΩ
[
i
].
tŸÆ
++;

297 
d1_±r
--;

304 
i
 = 0; i < 
gΩ˙t
; i++)

306 
j
 = 0; j < 
TW_CHN_NO
; j++)

308 if(
gΩ_m≠
 & (0x00008000 >> (
i
 * 
TW_CHN_NO
 + 
j
)))

310 if(
cif_±r
 >
tŸÆ
){

313 if(
vgΩ
[
i
].
ö_£À˘
[
j
] !
TW_INVAL_CHN
) {

316 
vgΩ
[
i
].
ö_£À˘
[
j
] = 
ãmp_ch
[
cif_±r
];

317 
vgΩ
[
i
].
ö_fmt
[
j
] = 
f‹m©
[
cif_±r
];

318 
vgΩ
[
i
].
ö_øã
[
j
] = 
‰m_øã
[
cif_±r
];

319 
cif_±r
++;

320 
vgΩ
[
i
].
tŸÆ
++;

326 
	}
}

329 
	$cb_ªsﬁve_out‰ame
(
VGROUP_S
 *
vgΩ
, 
n‹m
, 
i•ªvõw
)

332 
i
 = 0, 
cif_˙t
 = 0, 
hÆfd1_˙t
 = 0, 
d1_˙t
 = 0;

333 
sum
 = 0, 
lo°
 = 0;

334 
max_‰møã
 = (
n‹m
 =
TW_VIDEO_STANDARD_PAL
Ë? 
TW_GRP_MAX_PFRAME
:
TW_GRP_MAX_NFRAME
;

337 if(
i•ªvõw
)

339 
	`mem˝y
(
vgΩ
->
out_øã
, vgΩ->
ö_øã
, (Ë* 
TW_CHN_NO
);

343 
i
 = 0; i < 
vgΩ
->
tŸÆ
; i++)

345 
vgΩ
->
ö_fmt
[
i
])

347 
TW_VIDEO_SIZE_CIF
:

348 
cif_˙t
++;

350 
TW_VIDEO_SIZE_QCIF
:

351 
cif_˙t
++;

353 
TW_VIDEO_SIZE_HALF_D1
:

354 
hÆfd1_˙t
++;

355 
sum
 +
vgΩ
->
ö_øã
[
i
];

357 
TW_VIDEO_SIZE_D1
:

358 
d1_˙t
++;

359 
sum
 +
vgΩ
->
ö_øã
[
i
];

362 
	`TW_DBG
(
TW_DBG_ERR
, "unknow¿videÿsizê%d\n", 
vgΩ
->
ö_fmt
[
i
]);

367 if((((
d1_˙t
 + 
hÆfd1_˙t
Ë=2)||((d1_˙à+ hÆfd1_˙tË=3)Ë&& 
cif_˙t
)

369 
	`TW_DBG
(
TW_DBG_ERR
, "nŸ suµ‹à%dd1 + %dcif\n", (
d1_˙t
 + 
hÆfd1_˙t
), 
cif_˙t
);

373 if(
d1_˙t
 && !
hÆfd1_˙t
 && !
cif_˙t
)

375 
vgΩ
->
mode
 = 
MODE_D1
;

377 if(
d1_˙t
 && 
hÆfd1_˙t
 && !
cif_˙t
)

379 
vgΩ
->
mode
 = 
MODE_D1_HALFD1
;

382 if(
d1_˙t
 && 
hÆfd1_˙t
 && 
cif_˙t
)

384 
vgΩ
->
mode
 = 
MODE_D1_HALFD1_CIF
;

387 if(
d1_˙t
 && !
hÆfd1_˙t
 && 
cif_˙t
)

389 
vgΩ
->
mode
 = 
MODE_D1_CIF
;

391 if(!
d1_˙t
 && 
hÆfd1_˙t
 && !
cif_˙t
)

393 
vgΩ
->
mode
 = 
MODE_HALFD1
;

396 if(!
d1_˙t
 && 
hÆfd1_˙t
 && 
cif_˙t
)

398 
vgΩ
->
mode
 = 
MODE_HALFD1_CIF
;

401 if(!
d1_˙t
 && !
hÆfd1_˙t
 && 
cif_˙t
)

403 
vgΩ
->
mode
 = 
MODE_CIF
;

405 if(!
d1_˙t
 && !
hÆfd1_˙t
 && !
cif_˙t
)

407 
vgΩ
->
mode
 = 
MODE_NONE
;

410 
lo°
 = 
sum
;

411 
	`mem˝y
(
vgΩ
->
out_øã
, vgΩ->
ö_øã
, (Ë* 
TW_CHN_NO
);

413 if(((
d1_˙t
 > 1Ë|| (
hÆfd1_˙t
 > 1)) && (halfd1_cnt != 2))

415 
sum
 > 
max_‰møã
)

417 
i
 = 0; i < 
vgΩ
->
tŸÆ
; i++)

419 if(
vgΩ
->
out_øã
[
i
] > (
max_‰møã
 / 
TW_CHN_NO
))

421 
vgΩ
->
out_øã
[
i
]--;

422 
sum
--;

423 if(
sum
 <
max_‰møã
)

432 
vgΩ
->
tŸÆ‰m
 = 
sum
;

433 
lo°
 -
sum
;

435  
lo°
;

436 
	}
}

438 
	$vîfiy_m≠
(
tŸÆ
, *
m≠
, 
bô˙t
)

440 
i
 = 0, 
j
 = 0, 
‰©e
 = 0;

441 *
ãmp_m≠
 = 
m≠
;

443 
i
 = 0; i < 
bô˙t
; i++)

445 
‰©e
 = 0;

446 
j
 = 0; j < 
tŸÆ
; j++)

448 
‰©e
 +(
ãmp_m≠
[
j
]>>
i
) & 0x01;

450 if(
‰©e
 > 2)

454 if((
‰©e
 >= 2) && ((

455 ((
ãmp_m≠
[0]>>(
i
+1)) & 0x01)

456 + ((
ãmp_m≠
[1]>>(
i
+1)) & 0x01)

457 + ((
ãmp_m≠
[2]>>(
i
+1)) & 0x01)

458 + ((
ãmp_m≠
[3]>>(
i
+1)) & 0x01)) >=2))

465 
	}
}

468 
	$cb_ªsﬁve_m≠
(
VGROUP_S
 *
vgΩ
, 
n‹m
, 
i•ªvõw
)

470 
i
 = 0, 
j
 = 0, 
k
 = 0, 
have_cif
 = 0;

471 
‰©e
 = 0;

472 
max_‰møã
 = (
n‹m
 =
TW_VIDEO_STANDARD_PAL
) ? 25:30;

473 *
ãmp_øã
 = 
vgΩ
->
out_øã
;

474 *
ãmp_ch
 = 
vgΩ
->
ö_£À˘
;

475 *
ãmp_m≠
 = 
vgΩ
->
ö_m≠
;

476 
mask
 = 0x1ffffff;

479 
	`mem˝y
(
ãmp_ch
, 
vgΩ
->
ö_£À˘
, (Ë* 
TW_CHN_NO
);

480 
	`mem£t
(
ãmp_m≠
, 0, (Ë* 
TW_CHN_NO
);

482 if(
i•ªvõw
)

484 
i
 = 0; i < 
TW_CHN_NO
; i++)

486 if(
vgΩ
->
ö_£À˘
[
i
] != -1)

488 if(
n‹m
 =
TW_VIDEO_STANDARD_PAL
){

489 if(
vgΩ
->
out_øã
[
i
] < ((
max_‰møã
 + 1) >> 1)){

490 
vgΩ
->
ö_m≠
[
i
] = 
PAL_MAP
[vgΩ->
out_øã
[i]];

493 
vgΩ
->
ö_m≠
[
i
] = ~
PAL_MAP
[
max_‰møã
 - vgΩ->
out_øã
[i]];

495 
mask
 = 0x1ffffff;

498 if(
vgΩ
->
out_øã
[
i
] <((
max_‰møã
 + 1) >> 1)){

499 
vgΩ
->
ö_m≠
[
i
] = 
NTSC_MAP
[vgΩ->
out_øã
[i]];

502 
vgΩ
->
ö_m≠
[
i
] = ~
NTSC_MAP
[
max_‰møã
 - vgΩ->
out_øã
[i]];

504 
mask
 = 0x3fffffff;

506 
vgΩ
->
ö_m≠
[
i
] &
mask
;

513 
i
 = 0; i < 
vgΩ
->
tŸÆ
; i++)

515 if((
vgΩ
->
ö_fmt
[
i
] =
TW_VIDEO_SIZE_CIF
Ë|| (vgΩ->ö_fmt[i] =
TW_VIDEO_SIZE_QCIF
))

517 
have_cif
 = 1;

519 if(
n‹m
 =
TW_VIDEO_STANDARD_PAL
)

521 if(
vgΩ
->
out_øã
[
i
] < ((
max_‰møã
 + 1) >> 1))

523 
vgΩ
->
ö_m≠
[
i
] = 
PAL_MAP
[vgΩ->
out_øã
[i]];

527 
vgΩ
->
ö_m≠
[
i
] = ~
PAL_MAP
[
max_‰møã
 - vgΩ->
out_øã
[i]];

529 
mask
 = 0x1ffffff;

533 if(
vgΩ
->
out_øã
[
i
] <((
max_‰møã
 + 1) >> 1))

535 
vgΩ
->
ö_m≠
[
i
] = 
NTSC_MAP
[vgΩ->
out_øã
[i]];

539 
vgΩ
->
ö_m≠
[
i
] = ~
NTSC_MAP
[
max_‰møã
 - vgΩ->
out_øã
[i]];

541 
mask
 = 0x3fffffff;

543 
vgΩ
->
ö_m≠
[
i
] &
mask
;

547 if(
have_cif
 || ((
vgΩ
->
mode
 =
MODE_HALFD1
Ë&& (vgΩ->
tŸÆ
 == 2)))

552 
i
 = 0; i < 
vgΩ
->
tŸÆ
 - 1; i++)

554 
j
 = 
i
; j < 
vgΩ
->
tŸÆ
; j++)

556 if(
ãmp_øã
[
i
] <Åemp_øã[
j
])

559 
‰©e
 = 
vgΩ
->
ö_øã
[
i
];

560 
vgΩ
->
ö_øã
[
i
] = vgΩ->ö_øã[
j
];

561 
vgΩ
->
ö_øã
[
j
] = 
‰©e
;

563 
‰©e
 = 
ãmp_øã
[
i
];

564 
ãmp_øã
[
i
] =Åemp_øã[
j
];

565 
ãmp_øã
[
j
] = 
‰©e
;

567 
‰©e
 = 
ãmp_ch
[
i
];

568 
ãmp_ch
[
i
] =Åemp_ch[
j
];

569 
ãmp_ch
[
j
] = 
‰©e
;

571 
‰©e
 = 
ãmp_m≠
[
i
];

572 
ãmp_m≠
[
i
]ãmp_m≠[
j
];

573 
ãmp_m≠
[
j
]
‰©e
;

578 if(
n‹m
 =
TW_VIDEO_STANDARD_NTSC
)

580 if(
ãmp_øã
[0] == 9)

581 
j
=1;

583 
j
=2;

587 if((
ãmp_øã
[0] > 7) && (temp_rate[0] < 10))

588 
j
=1;

590 
j
=3;

592 
i
 = 0; i < 
vgΩ
->
tŸÆ
; i++)

595 
	`ROL
(&
ãmp_m≠
[
i
], 
j
*i, 
max_‰møã
, 
mask
);

598 if(!
	`vîfiy_m≠
(
vgΩ
->
tŸÆ
, 
ãmp_m≠
, 
max_‰møã
))

603 
i
 = 0; i <
max_‰møã
; i++)

605 
	`ROR
(&
ãmp_m≠
[1], 1, 
max_‰møã
, 
mask
);

606 
j
 = 0; j <
max_‰møã
; j++)

608 
	`ROR
(&
ãmp_m≠
[2], 1, 
max_‰møã
, 
mask
);

609 
k
 = 0; k <
max_‰møã
; k++)

611 
	`ROR
(&
ãmp_m≠
[3], 1, 
max_‰møã
, 
mask
);

612 if(!
	`vîfiy_m≠
(
vgΩ
->
tŸÆ
, 
ãmp_m≠
, 
max_‰møã
))

620 
	`TW_DBG
(
TW_DBG_ERR
, "u«bÀÅÿgíî©êm≠ (%d, %d, %d, %dËtŸÆ %d\n", 
ãmp_øã
[0],Åemp_øã[1],Åemp_øã[2],Åemp_øã[3], 
vgΩ
->
tŸÆ
);

622  
TW_ERR
;

623 
	}
}

639 
	$cb_˘æ_ˇlcuœã
(*
chn
, *
f‹m©
, *
øã
, 
n‹m
, 
VGROUP_S
 *
vgroup
, 
cou¡
, 
adju°
)

641 
i
 = 0, 
j
 = 0, 
lo°
 = 0;

642 
s32Rë
 = 0;

643 
övÆid
 = 0;

644 
VGROUP_S
 
loˇl_gΩ
[
TW_MAX_GRP
];

645 
loˇl_chn
[
TW_MAX_VI
];

646 
loˇl_f‹m©
[
TW_MAX_VI
];

647 
loˇl_øã
[
TW_MAX_VI
];

648 
ch™_mask
 = 0;

650 
	`mem£t
(
loˇl_gΩ
, 0, (
VGROUP_S
Ë* 
TW_MAX_GRP
);

651 
	`mem£t
(
loˇl_chn
, 0, (local_chn));

652 
	`mem£t
(
loˇl_f‹m©
, 0, (local_format));

653 
	`mem£t
(
loˇl_øã
, 0, (local_rate));

655 if((
cou¡
 < 0Ë|| (cou¡ > 
TW5864_PHY_VD_CHAN_NUMBER
)) {

656 
	`TW_DBG
(
TW_DBG_ERR
, "ch™√»cou¡ %d ovîÊow\n", 
cou¡
);

657  -
EINVAL
;

659 
	`TW_DBG
(
TW_DBG_INFO
, "n‹m %d, cou¡ %d,ádju° %d\n", 
n‹m
, 
cou¡
, 
adju°
);

660 
i
 = 0; i < 
cou¡
; i++)

662 if((
chn
[
i
] >
TW5864_PHY_VD_CHAN_NUMBER
) || (chn[i] < 0))

664 
	`TW_DBG
(
TW_DBG_ERR
, "ch™√»numbî %d ovîÊow\n", 
chn
[
i
]);

665  -
EINVAL
;

667 
loˇl_chn
[
i
] = 
chn
[i];

668 
loˇl_f‹m©
[
i
] = 
f‹m©
[i];

669 
loˇl_øã
[
i
] = 
øã
[i];

670 
ch™_mask
 |1<<
loˇl_chn
[
i
];

673 
j
 = 0;

674 ; 
i
 < 
TW_MAX_VI
; i++)

676 (
ch™_mask
&(1 << 
j
)Ë&& (j < 
TW_MAX_VI
))

677 
j
++;

678 
loˇl_chn
[
i
] = 
j
++;

679 
loˇl_f‹m©
[
i
] = 
TW_VIDEO_SIZE_D1
;

680 
loˇl_øã
[
i
] = 0;

683 
s32Rë
 = 
	`cb_ªsﬁve_gΩ
(
loˇl_chn
, 
loˇl_f‹m©
, 
loˇl_øã
, 
loˇl_gΩ
, 
cou¡
, 
TW_MAX_GRP
);

684 if(
s32Rë
){

685 
	`TW_DBG
(
TW_DBG_ERR
, "UnableÅo fix group\n");

686  
s32Rë
;

689 
övÆid
 = 
cou¡
;

690 
i
 = 0; i < 
TW_MAX_GRP
; i++)

692 
lo°
 +
	`cb_ªsﬁve_out‰ame
(&
loˇl_gΩ
[
i
], 
n‹m
, 0);

693 
s32Rë
 = 
	`cb_ªsﬁve_m≠
(&
loˇl_gΩ
[
i
], 
n‹m
, 0);

694 if(
s32Rë
){

695 
	`TW_DBG
(
TW_DBG_ERR
, "UnableÅo fix map\n");

696  -
EINVAL
;

698 
j
 = 0; j < 
TW_CHN_NO
; j++)

700 if(
loˇl_gΩ
[
i
].
tŸÆ
 < (
j
 + 1))

702 
loˇl_gΩ
[
i
].
ö_£À˘
[
j
] = 
loˇl_chn
[
övÆid
++];

703 
loˇl_gΩ
[
i
].
ö_m≠
[
j
] = 0x0;

704 
loˇl_gΩ
[
i
].
ö_øã
[
j
] = 0x0;

705 
loˇl_gΩ
[
i
].
out_øã
[
j
] = 0x0;

706 
loˇl_gΩ
[
i
].
ö_fmt
[
j
] = 
TW_VIDEO_SIZE_D1
;

709 
loˇl_gΩ
[
i
].
gΩ_id
 = i;

712 if(
lo°
 < 0)

716 
	`mem˝y
(
vgroup
, 
loˇl_gΩ
, (
VGROUP_S
Ë* 
TW_MAX_GRP
);

718 if(
lo°
 && !
adju°
)

720 
	`TW_DBG
(
TW_DBG_ERR
, "Too many frame in one bus\n");

722  
lo°
;

727 
	}
}

737 
	$¥evõw_ªsﬁve_gΩ
(*
ö_ch∆
, *
ö_fmt
, *
ö_‰m
,

738 
VGROUP_S
 *
vgΩ
, 
tŸÆ
, 
gΩ˙t
)

740 
cif
[
TW_MAX_VI
], 
d1
[TW_MAX_VI], 
qcif
[TW_MAX_VI];

741 
cif_˙t
 = 0, 
d1_˙t
 = 0, 
qcif_˙t
 = 0;

742 
i
,
j
,
k
;

743 
ˇ∑bûôy
 = 0;

746 if(!
ö_ch∆
 || !
ö_fmt
 || !
ö_‰m
 || !
vgΩ
 || (
tŸÆ
 > 
TW_MAX_VI
)

747 || (
tŸÆ
 < 0Ë|| (
gΩ˙t
 > 
TW_MAX_GRP
) || (grpcnt < 0))

752 
i
 = 0; i < 
tŸÆ
; i++)

754 
ö_fmt
[
i
])

756 
TW_VIDEO_SIZE_D1
:

757 
d1
[
d1_˙t
] = 
ö_ch∆
[
i
];

758 
d1
[
d1_˙t
] <<= 16;

759 
d1
[
d1_˙t
] |
ö_‰m
[
i
];

760 
d1_˙t
++;

761 
ˇ∑bûôy
 += 8;

763 
TW_VIDEO_SIZE_CIF
:

764 
cif
[
cif_˙t
] = 
ö_ch∆
[
i
];

765 
cif
[
cif_˙t
] <<= 16;

766 
cif
[
cif_˙t
] |
ö_‰m
[
i
];

767 
cif_˙t
++;

768 
ˇ∑bûôy
 += 4;

770 
TW_VIDEO_SIZE_QCIF
:

771 
qcif
[
qcif_˙t
] = 
ö_ch∆
[
i
];

772 
qcif
[
qcif_˙t
] <<= 16;

773 
qcif
[
qcif_˙t
] |
ö_‰m
[
i
];

774 
qcif_˙t
++;

775 
ˇ∑bûôy
 += 1;

783 if((
d1_˙t
 =1Ë&& (
cif_˙t
 == 4))

785 
i
 = 0; i < 
gΩ˙t
; i++)

787 
vgΩ
[
i
].
ö_£À˘
[0] = 
cif
[i]>>16;

788 
vgΩ
[
i
].
ö_øã
[0] = 
cif
[i] & 0xffff;

789 
vgΩ
[
i
].
ö_fmt
[0] = 
TW_VIDEO_SIZE_CIF
;

790 
vgΩ
[
i
].
tŸÆ
 = 1;

791 if(
d1_˙t
 && (
i
 == 0))

793 
vgΩ
[
i
].
ö_£À˘
[2] = 
d1
[i]>>16;

794 
vgΩ
[
i
].
ö_øã
[2] = 
d1
[i] & 0xffff;

795 
vgΩ
[
i
].
ö_fmt
[2] = 
TW_VIDEO_SIZE_D1
;

796 
vgΩ
[
i
].
tŸÆ
 = 2;

799 
vgΩ
[0].
mode
 = 
MODE_NONE
;

805 if(((
cif_˙t
 =9Ë|| (cif_˙à=10)Ë&& !
d1_˙t
 && !
qcif_˙t
)

807 
j
 = 0;

808 
i
 = 0; i < 8; i++)

810 if(((
i
 % 
TW_MAX_GRP
) == 0) && (i != 0))

812 
j
++;

814 
vgΩ
[
i
 % 
TW_MAX_GRP
].
ö_£À˘
[
j
] = 
cif
[i]>>16;

815 
vgΩ
[
i
 % 
TW_MAX_GRP
].
ö_øã
[
j
] = 
cif
[i] & 0xffff;

816 
vgΩ
[
i
 % 
TW_MAX_GRP
].
ö_fmt
[
j
] = 
TW_VIDEO_SIZE_CIF
;

817 
vgΩ
[
i
 % 
TW_MAX_GRP
].
tŸÆ
 = 2;

821 
j
 = 0; 
i
 < 
tŸÆ
; i++, j++)

823 
vgΩ
[0].
ö_£À˘
[2 + 
j
] = 
cif
[
i
]>>16;

824 
vgΩ
[0].
ö_øã
[2 + 
j
] = 
cif
[
i
] & 0xffff;

825 
vgΩ
[0].
ö_fmt
[2 + 
j
] = 
TW_VIDEO_SIZE_CIF
;

826 
vgΩ
[0].
tŸÆ
 += 1;

828 
vgΩ
[0].
mode
 = 
MODE_NONE
;

834 if(
ˇ∑bûôy
 > 32)

839 
vgΩ
[0].
mode
 = 
MODE_D1
;

840 
j
 = 0;

842 
i
 = 0; (ò< 
d1_˙t
Ë&& (
j
 < 
TW_MAX_GRP
); i++)

844 
vgΩ
[
j
].
ö_£À˘
[2] = 
d1
[
i
]>>16;

845 
vgΩ
[
j
].
ö_øã
[2] = 
d1
[
i
] & 0xffff;

846 
vgΩ
[
j
].
ö_fmt
[2] = 
TW_VIDEO_SIZE_D1
;

847 
vgΩ
[
j
].
tŸÆ
 += 1;

848 
j
++;

852 
i
 = 0, 
k
 = 0; (ò< 
cif_˙t
Ë&& (
j
 < 
TW_MAX_GRP
); i++)

854 if((
k
 % 2 == 0) && (k != 0))

856 
k
 = 0;

857 
j
++;

859 
vgΩ
[
j
].
ö_£À˘
[
k
] = 
cif
[
i
]>>16;

860 
vgΩ
[
j
].
ö_øã
[
k
] = 
cif
[
i
] & 0xffff;

861 
vgΩ
[
j
].
ö_fmt
[
k
] = 
TW_VIDEO_SIZE_CIF
;

862 
vgΩ
[
j
].
tŸÆ
 += 1;

863 
k
++;

868 
i
 = 0, 
k
 = 0; i < 
qcif_˙t
; i++)

870 if((
k
 % 4 == 0) && (k != 0))

872 
k
 = 0;

873 
j
++;

876 if(
j
 =
TW_MAX_GRP
)

881 
vgΩ
[
j
].
ö_£À˘
[
k
] = 
qcif
[
i
]>>16;

882 
vgΩ
[
j
].
ö_øã
[
k
] = 
qcif
[
i
] & 0xffff;

883 
vgΩ
[
j
].
ö_fmt
[
k
] = 
TW_VIDEO_SIZE_QCIF
;

884 
vgΩ
[
j
].
tŸÆ
 += 1;

885 
k
++;

888 if((
i
 < 
qcif_˙t
Ë&& (
j
 =
TW_MAX_GRP
))

890 
k
 = 0; (k < 
TW_CHN_NO
Ë&& (
i
 < 
qcif_˙t
); k++)

892 if(
k
 == 2)

896 
vgΩ
[0].
ö_£À˘
[
k
] = 
qcif
[
i
]>>16;

897 
vgΩ
[0].
ö_øã
[
k
] = 
qcif
[
i
] & 0xffff;

898 
vgΩ
[0].
ö_fmt
[
k
] = 
TW_VIDEO_SIZE_QCIF
;

899 
vgΩ
[0].
tŸÆ
 += 1;

900 
i
++;

902 
vgΩ
[0].
mode
 = 
MODE_NONE
;

905 if(
i
 !
qcif_˙t
)

911 
	}
}

927 
	$¥evõw_˘æ_ˇlcuœã
(*
chn
, *
f‹m©
, *
øã
, 
n‹m
, 
VGROUP_S
 *
vgroup
, 
cou¡
, 
adju°
)

929 
i
 = 0, 
j
 = 0, 
lo°
 = 0;

930 
s32Rë
 = 0;

931 
övÆid
 = 0;

932 
VGROUP_S
 
loˇl_gΩ
[
TW_MAX_GRP
];

933 
loˇl_chn
[
TW_MAX_VI
];

934 
loˇl_f‹m©
[
TW_MAX_VI
];

935 
loˇl_øã
[
TW_MAX_VI
];

936 
ch™_mask
 = 0;

938 
	`mem£t
(
loˇl_gΩ
, 0xff, (
VGROUP_S
Ë* 
TW_MAX_GRP
);

939 
	`mem£t
(
loˇl_chn
, 0, (local_chn));

940 
	`mem£t
(
loˇl_f‹m©
, 0, (local_format));

941 
	`mem£t
(
loˇl_øã
, 0, (local_rate));

944 
adju°
 = 1;

946 
i
 = 0; i < 
cou¡
; i++)

948 if((
chn
[
i
] >= 16) || (chn[i] < 0))

952 
loˇl_chn
[
i
] = 
chn
[i];

953 
loˇl_f‹m©
[
i
] = 
f‹m©
[i];

954 
loˇl_øã
[
i
] = 
øã
[i];

955 
ch™_mask
 |1<<
loˇl_chn
[
i
];

959 
j
 = 0;

960 ; 
i
 < 
TW_MAX_VI
; i++)

962 (
ch™_mask
&(1 << 
j
)Ë&& (j < 
TW_MAX_VI
))

963 
j
++;

964 
loˇl_chn
[
i
] = 
j
++;

965 
loˇl_f‹m©
[
i
] = 
TW_VIDEO_SIZE_D1
;

966 
loˇl_øã
[
i
] = 0;

969 
s32Rë
 = 
	`¥evõw_ªsﬁve_gΩ
(
loˇl_chn
, 
loˇl_f‹m©
, 
loˇl_øã
, 
loˇl_gΩ
, 
cou¡
, 
TW_MAX_GRP
);

970 if(
s32Rë
){

971  
s32Rë
;

974 
övÆid
 = 
cou¡
;

975 
i
 = 0; i < 
TW_MAX_GRP
; i++)

977 
lo°
 +
	`cb_ªsﬁve_out‰ame
(&
loˇl_gΩ
[
i
], 
n‹m
, 1);

978 
s32Rë
 = 
	`cb_ªsﬁve_m≠
(&
loˇl_gΩ
[
i
], 
n‹m
, 1);

979 if(
s32Rë
){

982 
loˇl_gΩ
[
i
].
gΩ_id
 = i;

983 
j
 = 0; j < 
TW_CHN_NO
; j++)

985 if(
loˇl_gΩ
[
i
].
ö_£À˘
[
j
] == -1)

987 
loˇl_gΩ
[
i
].
ö_£À˘
[
j
] = 
loˇl_chn
[
övÆid
++];

988 
loˇl_gΩ
[
i
].
ö_m≠
[
j
] = 0x0;

989 
loˇl_gΩ
[
i
].
ö_øã
[
j
] = 0x0;

990 
loˇl_gΩ
[
i
].
out_øã
[
j
] = 0x0;

991 
loˇl_gΩ
[
i
].
ö_fmt
[
j
] = 
TW_VIDEO_SIZE_QCIF
;

996 if(
lo°
 < 0)

1001 if(
lo°
 && !
adju°
)

1003  
lo°
;

1006 
	`mem˝y
(
vgroup
, 
loˇl_gΩ
, (
VGROUP_S
Ë* 
TW_MAX_GRP
);

1009 
	}
}

	@../../tw5864/tw5864/chip_bus_scheduler.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
tw_roŸ_bus_t
 
	groŸ_bus
;

4 
ty≥_bus_t
 
	gtw_ho°_bus
;

5 
ty≥_bus_t
 
	gtw_pci_bus
;

7 
	$ªgi°î_node_öô_com∂ëe
(
tw_ªgi°î_node_t
 *
node
)

9 if(
node
 !
NULL
){

10 
	`öô_com∂ëi⁄
(&
node
->
waô_°›
);

12 
	}
}

14 
	$ªgi°î_node_waô_com∂ëe
(
tw_ªgi°î_node_t
 *
node
)

16 if(
node
 !
NULL
){

17 
	`waô_f‹_com∂ëi⁄
(&
node
->
waô_°›
);

19 
	}
}

21 
	$ªgi°î_node_com∂ëe_d⁄e
(
tw_ªgi°î_node_t
 *
node
)

23 if(
node
 !
NULL
){

24 
	`com∂ëe_Æl
(&
node
->
waô_°›
);

26 
	}
}

28 
tw_ªgi°î_node_›î©i⁄
 
	gtw_ªgi°î_node_›
 = {

29 .
öô_com∂ëe
 = 
ªgi°î_node_öô_com∂ëe
,

30 .
	gwaô_com∂ëe
 = 
ªgi°î_node_waô_com∂ëe
,

31 .
	gcom∂ëe_d⁄e
 = 
ªgi°î_node_com∂ëe_d⁄e
,

34 
	$öô_ªgi°î_node
(
tw_ªgi°î_node_t
 *
node
, *
¥iv
, 
nŸify_ªgi°î_node_¥iv
 
nŸify_¥iv
, 
m©ch_ªgsôî_node_¥iv_id
 
m©ch_id
)

36 if(
node
 !
NULL
){

37 
	`INIT_LIST_HEAD
(&
node
->
li°
);

38 
node
->
ªgi°î_node_¥iv
 = 
¥iv
;

39 
node
->
nŸify_¥iv
 =Çotify_priv;

40 
node
->
m©ch_id
 = match_id;

41 
node
->
›
 = &
tw_ªgi°î_node_›
;

42 
node
->
›
->
	`öô_com∂ëe
(node);

43 
node
->
›
->
	`com∂ëe_d⁄e
(node);

45 
	}
}

47 
	$ªgi°î_èbÀ_node_ªgi°î_node_öto_èbÀ
(
tw_ªgi°î_èbÀ_t
 *
ªgi°î_èbÀ
, 
tw_ªgi°î_node_t
 *
ªgi°î_node
)

49 if((
ªgi°î_èbÀ
!=
NULL
Ë&& (
ªgi°î_node
!=NULL)){

50 
Êags
;

51 
	`•ö_lock_úqßve
(&
ªgi°î_èbÀ
->
lock
, 
Êags
);

52 
	`©omic_öc
(&
ªgi°î_èbÀ
->
cuº_ªgi°î_íåy_numbî
);

53 if(
ªgi°î_node
->
›
 !
NULL
){

54 
ªgi°î_node
->
›
->
	`öô_com∂ëe
(register_node);

56 
	`li°_add_èû
(&
ªgi°î_node
->
li°
, &
ªgi°î_èbÀ
->
ªgi°î_hódî
);

57 
	`•ö_u∆ock_úqª°‹e
(&
ªgi°î_èbÀ
->
lock
, 
Êags
);

59 
	}
}

61 
	$ªgi°î_èbÀ_node_uƒegi°î_node_‰om_èbÀ
(
tw_ªgi°î_èbÀ_t
 *
ªgi°î_èbÀ
, 
tw_ªgi°î_node_t
 *
±r_ªgi°î_node
)

63 if((
ªgi°î_èbÀ
!=
NULL
Ë&& (
±r_ªgi°î_node
!=NULL)){

64 if(
	`©omic_ªad
(&
ªgi°î_èbÀ
->
cuº_ªgi°î_íåy_numbî
)){

65 
tw_ªgi°î_node_t
 *
ªgi°î_node
;

66 
li°_hód
 *
li°
;

67 
Êags
;

68 
	`•ö_lock_úqßve
(&
ªgi°î_èbÀ
->
lock
, 
Êags
);

69 
	`li°_f‹_óch
(
li°
, &
ªgi°î_èbÀ
->
ªgi°î_hódî
){

70 
ªgi°î_node
 = 
	`to_gë_ªgi°î_node
(
li°
);

71 if(
±r_ªgi°î_node
 =
ªgi°î_node
){

72 
	`•ö_u∆ock_úqª°‹e
(&
ªgi°î_èbÀ
->
lock
, 
Êags
);

73 if(
±r_ªgi°î_node
->
nŸify_¥iv
 !
NULL
){

74 
±r_ªgi°î_node
->
	`nŸify_¥iv
’å_ªgi°î_node,Öå_ªgi°î_node->
ªgi°î_node_¥iv
, 
NULL
);

76 if(
±r_ªgi°î_node
->
›
 !
NULL
){

77 
±r_ªgi°î_node
->
›
->
	`waô_com∂ëe
(ptr_register_node);

80 
	`•ö_lock_úqßve
(&
ªgi°î_èbÀ
->
lock
, 
Êags
);

81 
	`©omic_dec
(&
ªgi°î_èbÀ
->
cuº_ªgi°î_íåy_numbî
);

82 
	`li°_dñ_öô
(&
ªgi°î_node
->
li°
);

83 
	`•ö_u∆ock_úqª°‹e
(&
ªgi°î_èbÀ
->
lock
, 
Êags
);

87 
	`•ö_u∆ock_úqª°‹e
(&
ªgi°î_èbÀ
->
lock
, 
Êags
);

90 
	}
}

92 
	$ªgi°î_èbÀ_node_föd_ªgi°î_node_ö_èbÀ
(
tw_ªgi°î_èbÀ_t
 *
ªgi°î_èbÀ
, 
tw_ªgi°î_node_t
 **
±r_ªgi°î_node
, 
¨g_id
)

94 if((
ªgi°î_èbÀ
!=
NULL
Ë&& (
±r_ªgi°î_node
!=NULL)){

95 *
±r_ªgi°î_node
 = 
NULL
;

96 if(
	`©omic_ªad
(&
ªgi°î_èbÀ
->
cuº_ªgi°î_íåy_numbî
)){

97 
tw_ªgi°î_node_t
 *
ªgi°î_node
;

98 
li°_hód
 *
li°
;

99 
Êags
;

101 
	`•ö_lock_úqßve
(&
ªgi°î_èbÀ
->
lock
, 
Êags
);

102 
	`li°_f‹_óch
(
li°
, &
ªgi°î_èbÀ
->
ªgi°î_hódî
){

103 
ªgi°î_node
 = 
	`to_gë_ªgi°î_node
(
li°
);

104 if(
ªgi°î_node
->
m©ch_id
 !
NULL
){

105 if(
ªgi°î_node
->
	`m©ch_id
‘egi°î_node,Ñegi°î_node->
ªgi°î_node_¥iv
, 
¨g_id
Ë=
TW_OK
){

106 *
±r_ªgi°î_node
 = 
ªgi°î_node
;

111 
	`•ö_u∆ock_úqª°‹e
(&
ªgi°î_èbÀ
->
lock
, 
Êags
);

114 
	}
}

116 
	$ªgi°î_èbÀ_node_gë_cuº_ªgi°î_node_numbî
(
tw_ªgi°î_èbÀ_t
 *
ªgi°î_èbÀ
)

118 
ªt
 = 0;

119 if(
ªgi°î_èbÀ
 !
NULL
){

120 
ªt
 = 
	`©omic_ªad
(&
ªgi°î_èbÀ
->
cuº_ªgi°î_íåy_numbî
);

122  
ªt
;

123 
	}
}

125 
ªgi°î_èbÀ_node_›î©i⁄
 
	gªgi°î_èbÀ_node_›
 = {

126 .
ªgi°î_node_öto_èbÀ
 = 
ªgi°î_èbÀ_node_ªgi°î_node_öto_èbÀ
,

127 .
	guƒegi°î_node_‰om_èbÀ
 = 
ªgi°î_èbÀ_node_uƒegi°î_node_‰om_èbÀ
,

128 .
	gföd_ªgi°î_node_ö_èbÀ
 = 
ªgi°î_èbÀ_node_föd_ªgi°î_node_ö_èbÀ
,

129 .
	ggë_cuº_ªgi°î_node_numbî
 = 
ªgi°î_èbÀ_node_gë_cuº_ªgi°î_node_numbî
,

132 
	$öô_ªgi°î_èbÀ_node
(
tw_ªgi°î_èbÀ_t
 *
èbÀ
)

134 if(
èbÀ
 !
NULL
){

135 
	`•ö_lock_öô
(&
èbÀ
->
lock
);

136 
	`INIT_LIST_HEAD
(&
èbÀ
->
ªgi°î_hódî
);

137 
	`©omic_£t
(&
èbÀ
->
cuº_ªgi°î_íåy_numbî
, 0);

138 
èbÀ
->
›
 = &
ªgi°î_èbÀ_node_›
;

140 
	}
}

142 
	$gë_roŸ_bus
(
tw_roŸ_bus_t
 **
±r_roŸ_bus
)

144 *
±r_roŸ_bus
 = &
roŸ_bus
;

145 
	}
}

147 
	$gë_tw_ho°_bus
(
ty≥_bus_t
 **
±r_ty≥_bus
)

149 *
±r_ty≥_bus
 = &
tw_ho°_bus
;

150 
	}
}

152 
	$gë_tw_pci_bus
(
ty≥_bus_t
 **
±r_ty≥_bus
)

154 *
±r_ty≥_bus
 = &
tw_pci_bus
;

155 
	}
}

157 
	$öô_tw_roŸ_bus
()

159 
	`öô_ªgi°î_èbÀ_node
(&
roŸ_bus
.
roŸ_ªgi°î_èbÀ
);

160 
	`öô_ty≥_bus
(&
tw_ho°_bus
, 
TW_ED_HOST_BUS
);

161 
	`öô_ty≥_bus
(&
tw_pci_bus
, 
TW_ED_PCI_BUS
);

162 
	}
}

164 
	$ªmove_tw_roŸ_bus
()

166 
tw_roŸ_bus_t
 *
roŸ_bus
;

167 
ty≥_bus_t
 *
tw_ho°_bus
;

168 
ty≥_bus_t
 *
tw_pci_bus
;

170 
	`gë_roŸ_bus
(&
roŸ_bus
);

171 
	`gë_tw_ho°_bus
(&
tw_ho°_bus
);

172 
	`gë_tw_pci_bus
(&
tw_pci_bus
);

174 if(
tw_ho°_bus
->
ty≥_bus_roŸ_ªgi°î_èbÀ
.
›
->
	`gë_cuº_ªgi°î_node_numbî
(&tw_host_bus->type_bus_root_register_table) == 0){

175 
tw_ho°_bus
->
ªgi°î_node
.
›
->
	`com∂ëe_d⁄e
(&tw_host_bus->register_node);

177 
roŸ_bus
->
roŸ_ªgi°î_èbÀ
.
›
->
	`uƒegi°î_node_‰om_èbÀ
(&roŸ_bus->roŸ_ªgi°î_èbÀ, &
tw_ho°_bus
->
ªgi°î_node
);

178 if(
tw_pci_bus
->
ty≥_bus_roŸ_ªgi°î_èbÀ
.
›
->
	`gë_cuº_ªgi°î_node_numbî
(&tw_pci_bus->type_bus_root_register_table) == 0){

179 
tw_pci_bus
->
ªgi°î_node
.
›
->
	`com∂ëe_d⁄e
(&tw_pci_bus->register_node);

181 
roŸ_bus
->
roŸ_ªgi°î_èbÀ
.
›
->
	`uƒegi°î_node_‰om_èbÀ
(&roŸ_bus->roŸ_ªgi°î_èbÀ, &
tw_pci_bus
->
ªgi°î_node
);

182 
	}
}

184 
	$nŸify_ªgi°î_ty≥_bus
(
tw_ªgi°î_node_t
 *
node
, *
¥iv
, 
tw_nŸify_msg
 *
msg
)

186 if((
node
!=
NULL
Ë&& (
¥iv
!=NULL)){

187 
ty≥_bus_t
 *
ty≥_bus
 = (ty≥_bus_t*)
¥iv
;

188 
tw_ªgi°î_èbÀ_t
 *
ty≥_bus_roŸ_ªgi°î_èbÀ
 = &
ty≥_bus
->type_bus_root_register_table;

190 if(
	`©omic_ªad
(&
ty≥_bus_roŸ_ªgi°î_èbÀ
->
cuº_ªgi°î_íåy_numbî
)){

191 
tw_ªgi°î_node_t
 *
ªgi°î_node
;

192 
li°_hód
 *
li°
;

193 
Êags
;

194 
	`•ö_lock_úqßve
(&
ty≥_bus_roŸ_ªgi°î_èbÀ
->
lock
, 
Êags
);

195 
	`li°_f‹_óch
(
li°
, &
ty≥_bus_roŸ_ªgi°î_èbÀ
->
ªgi°î_hódî
){

196 
ªgi°î_node
 = 
	`to_gë_ªgi°î_node
(
li°
);

197 
	`•ö_u∆ock_úqª°‹e
(&
ty≥_bus_roŸ_ªgi°î_èbÀ
->
lock
, 
Êags
);

198 if(
ªgi°î_node
->
nŸify_¥iv
 !
NULL
){

199 
ªgi°î_node
->
	`nŸify_¥iv
‘egi°î_node,Ñegi°î_node->
ªgi°î_node_¥iv
, 
NULL
);

201 if(
ªgi°î_node
->
›
 !
NULL
){

202 
ªgi°î_node
->
›
->
	`waô_com∂ëe
(register_node);

204 
	`•ö_lock_úqßve
(&
ty≥_bus_roŸ_ªgi°î_èbÀ
->
lock
, 
Êags
);

206 
	`•ö_u∆ock_úqª°‹e
(&
ty≥_bus_roŸ_ªgi°î_èbÀ
->
lock
, 
Êags
);

208 if(
ty≥_bus
->
ªgi°î_node
.
›
 !
NULL
){

209 
ty≥_bus
->
ªgi°î_node
.
›
->
	`waô_com∂ëe
(&type_bus->register_node);

212 
	}
}

214 
	$m©ch_ªgsôî_ty≥_bus
(
tw_ªgi°î_node_t
 *
node
, *
¥iv
, 
id
)

216 
ªt
 = 
TW_ERR
;

217 if((
node
!=
NULL
Ë&& (
¥iv
!=NULL)){

218 
ty≥_bus_t
 *
bus
 = (ty≥_bus_t*)
¥iv
;

219 if(
bus
->
bus_id
 =
id
){

220 
ªt
 = 
TW_OK
;

223  
ªt
;

224 
	}
}

226 
	$ty≥_bus_öô
(
ty≥_bus_t
 *
bus
, 
bus_id
)

228 if(
bus
 !
NULL
){

229 
tw_roŸ_bus_t
 *
roŸBus
;

230 
bus
->
bus_id
 = bus_id;

231 
	`öô_ªgi°î_node
(&
bus
->
ªgi°î_node
, bus, 
nŸify_ªgi°î_ty≥_bus
, 
m©ch_ªgsôî_ty≥_bus
);

232 
	`öô_ªgi°î_èbÀ_node
(&
bus
->
ty≥_bus_roŸ_ªgi°î_èbÀ
);

233 
	`gë_roŸ_bus
(&
roŸBus
);

234 if(
roŸBus
->
roŸ_ªgi°î_èbÀ
.
›
 !
NULL
){

235 
roŸBus
->
roŸ_ªgi°î_èbÀ
.
›
->
	`ªgi°î_node_öto_èbÀ
(&roŸBus->roŸ_ªgi°î_èbÀ, &
bus
->
ªgi°î_node
);

238 
	}
}

240 
	$ty≥_bus_ªgi°î_chù_bus_öto_ty≥_bus_èbÀ
(
ty≥_bus_t
 *
bus
, 
tw_chù_bus_t
 *
chù_bus
)

242 if((
bus
!=
NULL
Ë&& (
chù_bus
!=NULL)){

243 
tw_ªgi°î_èbÀ_t
 *
ty≥_bus_roŸ_ªgi°î_èbÀ
;

244 
ty≥_bus_roŸ_ªgi°î_èbÀ
 = &
bus
->type_bus_root_register_table;

245 if(
ty≥_bus_roŸ_ªgi°î_èbÀ
->
›
 !
NULL
){

246 
ty≥_bus_roŸ_ªgi°î_èbÀ
->
›
->
	`ªgi°î_node_öto_èbÀ
—y≥_bus_roŸ_ªgi°î_èbÀ, &
chù_bus
->
chù_ªgi°î_node
);

249 
	}
}

251 
	$ty≥_bus_uƒegi°î_chù_bus_öto_ty≥_bus_èbÀ
(
ty≥_bus_t
 *
bus
, 
tw_chù_bus_t
 *
chù_bus
)

253 if((
bus
!=
NULL
Ë&& (
chù_bus
!=NULL)){

254 
tw_ªgi°î_èbÀ_t
 *
ty≥_bus_roŸ_ªgi°î_èbÀ
;

255 
ty≥_bus_roŸ_ªgi°î_èbÀ
 = &
bus
->type_bus_root_register_table;

256 if(
ty≥_bus_roŸ_ªgi°î_èbÀ
->
›
 !
NULL
){

257 
ty≥_bus_roŸ_ªgi°î_èbÀ
->
›
->
	`uƒegi°î_node_‰om_èbÀ
—y≥_bus_roŸ_ªgi°î_èbÀ, &
chù_bus
->
chù_ªgi°î_node
);

259 if(
	`©omic_ªad
(&
ty≥_bus_roŸ_ªgi°î_èbÀ
->
cuº_ªgi°î_íåy_numbî
) <= 0){

260 
tw_ªgi°î_node_t
 *
ªgi°î_node
;

261 
ªgi°î_node
 = &
bus
->register_node;

262 if(
ªgi°î_node
->
›
 !
NULL
){

263 
ªgi°î_node
->
›
->
	`com∂ëe_d⁄e
(register_node);

267 
	}
}

269 
	$ty≥_bus_föd_chù_bus_ö_ty≥_bus_èbÀ
(
ty≥_bus_t
 *
bus
, 
tw_chù_bus_t
 **
chù_bus
, 
chù_id
)

271 if(
bus
 !
NULL
){

272 
tw_ªgi°î_èbÀ_t
 *
ty≥_bus_roŸ_ªgi°î_èbÀ
;

273 
tw_ªgi°î_node_t
 *
ªgi°î_node
;

274 
ty≥_bus_roŸ_ªgi°î_èbÀ
 = &
bus
->type_bus_root_register_table;

275 
ty≥_bus_roŸ_ªgi°î_èbÀ
->
›
->
	`föd_ªgi°î_node_ö_èbÀ
—y≥_bus_roŸ_ªgi°î_èbÀ, &
ªgi°î_node
, 
chù_id
);

276 if(
ªgi°î_node
 !
NULL
){

277 *
chù_bus
 = 
	`to_gë_chù_bus_wôh_chù_ªgi°î_node
(
ªgi°î_node
);

279 *
chù_bus
 = 
NULL
;

282 
	}
}

284 
ty≥_bus_›î©i⁄
 
	gty≥_bus_›
 = {

285 .
öô
 = 
ty≥_bus_öô
,

287 .
	gªgi°î_chù_bus_öto_ty≥_bus_èbÀ
 = 
ty≥_bus_ªgi°î_chù_bus_öto_ty≥_bus_èbÀ
,

288 .
	guƒegi°î_chù_bus_öto_ty≥_bus_èbÀ
 = 
ty≥_bus_uƒegi°î_chù_bus_öto_ty≥_bus_èbÀ
,

289 .
	gföd_chù_bus_ö_ty≥_bus_èbÀ
 = 
ty≥_bus_föd_chù_bus_ö_ty≥_bus_èbÀ
,

292 
	$öô_ty≥_bus
(
ty≥_bus_t
 *
bus
, 
bus_id
)

294 if(
bus
 !
NULL
){

295 
bus
->
›
 = &
ty≥_bus_›
;

296 
bus
->
›
->
	`öô
(bus, 
bus_id
);

298 
	}
}

300 
	$ªmove_ty≥_bus
(
ty≥_bus_t
 *
bus
)

302 if(
bus
 !
NULL
){

303 
tw_roŸ_bus_t
 *
roŸBus
;

304 
	`gë_roŸ_bus
(&
roŸBus
);

305 
roŸBus
->
roŸ_ªgi°î_èbÀ
.
›
->
	`uƒegi°î_node_‰om_èbÀ
(&roŸBus->roŸ_ªgi°î_èbÀ, &
bus
->
ªgi°î_node
);

307 
	}
}

309 
	$nŸify_ªgi°î_chù_bus
(
tw_ªgi°î_node_t
 *
node
, *
¥iv
, 
tw_nŸify_msg
 *
msg
)

311 if((
node
!=
NULL
Ë&& (
¥iv
!=NULL)){

314 
	}
}

316 
	$m©ch_ªgsôî_chù_bus
(
tw_ªgi°î_node_t
 *
node
, *
¥iv
, 
id
)

318 
ªt
 = 
TW_ERR
;

319 if((
node
!=
NULL
Ë&& (
¥iv
!=NULL)){

320 
tw_chù_bus_t
 *
bus
 = (tw_chù_bus_t*)
¥iv
;

321 if(
bus
->
chù_id
 =
id
){

322 
ªt
 = 
TW_OK
;

325  
ªt
;

326 
	}
}

328 
	$chù_bus_öô
(
tw_chù_bus_t
 *
chù_bus
, 
bus_id
, 
chù_id
)

330 if(
chù_bus
 !
NULL
){

331 
ty≥_bus_t
 *
ty≥_bus
;

333 
chù_bus
->
bus_id
 = bus_id;

334 
chù_bus
->
chù_id
 = chip_id;

335 
	`öô_ªgi°î_node
(&
chù_bus
->
chù_ªgi°î_node
, chù_bus, 
nŸify_ªgi°î_chù_bus
, 
m©ch_ªgsôî_chù_bus
);

336 if(
bus_id
 =
TW_ED_HOST_BUS
){

337 
	`gë_tw_ho°_bus
(&
ty≥_bus
);

338 if(
ty≥_bus
->
›
 !
NULL
){

339 
ty≥_bus
->
›
->
	`ªgi°î_chù_bus_öto_ty≥_bus_èbÀ
—y≥_bus, 
chù_bus
);

341 } if(
bus_id
 =
TW_ED_PCI_BUS
){

342 
	`gë_tw_pci_bus
(&
ty≥_bus
);

343 if(
ty≥_bus
->
›
 !
NULL
){

344 
ty≥_bus
->
›
->
	`ªgi°î_chù_bus_öto_ty≥_bus_èbÀ
—y≥_bus, 
chù_bus
);

347 
	`¥ötk
("%s.%d:ÇÿsuΩp‹àbus\n", 
__FUNCTION__
, 
__LINE__
);

350 
	}
}

352 
chù_bus_›î©i⁄
 
	gchù_bus_›
 = {

353 .
öô
 = 
chù_bus_öô
,

356 
	$öô_chù_bus
(
tw_chù_bus_t
 *
chù_bus
, 
bus_id
, 
chù_id
)

358 if(
chù_bus
 !
NULL
){

359 
chù_bus
->
›
 = &
chù_bus_›
;

360 
chù_bus
->
›
->
	`öô
(chù_bus, 
bus_id
, 
chù_id
);

362 
	}
}

364 
	$ªmove_chù_bus
(
tw_chù_bus_t
 *
chù_bus
, 
bus_id
)

366 
ty≥_bus_t
 *
ty≥_bus
;

367 
tw_ªgi°î_èbÀ_t
 *
ho°_chù_èbÀ
;

368 
tw_ªgi°î_node_t
 *
ªgi°î_node
;

369 if(
chù_bus
 =
NULL
){

372 
ªgi°î_node
 = &
chù_bus
->
chù_ªgi°î_node
;

373 if(
bus_id
 =
TW_ED_HOST_BUS
){

374 
	`gë_tw_ho°_bus
(&
ty≥_bus
);

375 
ho°_chù_èbÀ
 = &
ty≥_bus
->
ty≥_bus_roŸ_ªgi°î_èbÀ
;

376 if(
ªgi°î_node
->
›
 !
NULL
){

377 
ªgi°î_node
->
›
->
	`com∂ëe_d⁄e
(register_node);

379 if(
ho°_chù_èbÀ
->
›
 !
NULL
){

380 
ho°_chù_èbÀ
->
›
->
	`uƒegi°î_node_‰om_èbÀ
(ho°_chù_èbÀ, 
ªgi°î_node
);

382 } if(
bus_id
 =
TW_ED_PCI_BUS
){

383 
	`gë_tw_pci_bus
(&
ty≥_bus
);

384 
ho°_chù_èbÀ
 = &
ty≥_bus
->
ty≥_bus_roŸ_ªgi°î_èbÀ
;

385 if(
ªgi°î_node
->
›
 !
NULL
){

386 
ªgi°î_node
->
›
->
	`com∂ëe_d⁄e
(register_node);

388 if(
ho°_chù_èbÀ
->
›
 !
NULL
){

389 
ho°_chù_èbÀ
->
›
->
	`uƒegi°î_node_‰om_èbÀ
(ho°_chù_èbÀ, 
ªgi°î_node
);

392 
	`¥ötk
("%s.%d:Éº bus_id %d\n", 
__FUNCTION__
, 
__LINE__
, 
bus_id
);

394 
	}
}

396 
	$tw_ed_fsm_öô
(
tw_ed_fsm_t
 *
ed_fsm
)

398 if(
ed_fsm
 !
NULL
){

399 
ed_fsm
->
œ°_°©e
 =Éd_fsm->
cuº_°©e
 = 
TW_ED_UNREGISTER
;

400 
ed_fsm
->
c⁄ãxt
 = 
NULL
;

401 
	`•ö_lock_öô
(&
ed_fsm
->
lock
);

402 
ed_fsm
->
å™s„r_≥ndög
.
˛o£_≥ndög_Êag
 = 0;

403 
ed_fsm
->
å™s„r_≥ndög
.
timeout_≥ndög_Êag
 = 0;

404 
ed_fsm
->
å™s„r_≥ndög
.
su•íd_≥ndög_Êag
 = 0;

405 
ed_fsm
->
å™s„r_≥ndög
.
ªsume_≥ndög_Êag
 = 0;

406 
ed_fsm
->
å™s„r_≥ndög
.
›í_≥ndög_Êag
 = 0;

407 
ed_fsm
->
å™s„r_≥ndög
.
dñivî_≥ndög_Êag
 = 0;

408 
ed_fsm
->
å™s„r_≥ndög
.
íabÀ_°©e_å™s„r_Êag
 = 0;

409 
ed_fsm
->
å™s„r_≥ndög
.
íabÀ_åiggî_≥ndög_Êag
 = 0;

410 
ed_fsm
->
å™s„r_≥ndög
.
√ed_sync
 = 0;

411 
ed_fsm
->
å™s„r_≥ndög
.
ª£rve
 = 0;

412 
ed_fsm
->
èbÀ
 = 
NULL
;

414 
	}
}

416 
	$tw_ed_fsm_ª£t
(
tw_ed_fsm_t
 *
ed_fsm
)

418 if(
ed_fsm
 !
NULL
){

419 
Êags
;

420 
	`•ö_lock_úqßve
(&
ed_fsm
->
lock
, 
Êags
);

421 
ed_fsm
->
å™s„r_≥ndög
.
˛o£_≥ndög_Êag
 = 0;

422 
ed_fsm
->
å™s„r_≥ndög
.
timeout_≥ndög_Êag
 = 0;

423 
ed_fsm
->
å™s„r_≥ndög
.
su•íd_≥ndög_Êag
 = 0;

424 
ed_fsm
->
å™s„r_≥ndög
.
ªsume_≥ndög_Êag
 = 0;

425 
ed_fsm
->
å™s„r_≥ndög
.
›í_≥ndög_Êag
 = 0;

426 
ed_fsm
->
å™s„r_≥ndög
.
dñivî_≥ndög_Êag
 = 0;

427 
ed_fsm
->
å™s„r_≥ndög
.
íabÀ_°©e_å™s„r_Êag
 = 0;

428 
ed_fsm
->
å™s„r_≥ndög
.
íabÀ_åiggî_≥ndög_Êag
 = 0;

429 
ed_fsm
->
å™s„r_≥ndög
.
√ed_sync
 = 0;

430 
ed_fsm
->
å™s„r_≥ndög
.
ª£rve
 = 0;

431 
	`•ö_u∆ock_úqª°‹e
(&
ed_fsm
->
lock
, 
Êags
);

433 
	}
}

435 
	$tw_ed_fsm_ªgi°î_èbÀ
(
tw_ed_fsm_t
 *
ed_fsm
, 
fsm_°©e_å™s„r_m©rix_èbÀ_t
 *
fsm_èbÀ
, *
c⁄ãxt
)

437 if(
ed_fsm
 !
NULL
){

438 
Êags
;

439 
	`•ö_lock_úqßve
(&
ed_fsm
->
lock
, 
Êags
);

440 
ed_fsm
->
c⁄ãxt
 = context;

441 
ed_fsm
->
èbÀ
 = 
fsm_èbÀ
;

442 
	`•ö_u∆ock_úqª°‹e
(&
ed_fsm
->
lock
, 
Êags
);

444 
	}
}

446 
	$tw_ed_fsm_uƒegi°î_èbÀ
(
tw_ed_fsm_t
 *
ed_fsm
)

448 if(
ed_fsm
 !
NULL
){

449 
Êags
;

450 
	`•ö_lock_úqßve
(&
ed_fsm
->
lock
, 
Êags
);

451 
ed_fsm
->
c⁄ãxt
 = 
NULL
;

452 
ed_fsm
->
èbÀ
 = 
NULL
;

453 
	`•ö_u∆ock_úqª°‹e
(&
ed_fsm
->
lock
, 
Êags
);

455 
	}
}

457 
	$tw_ed_fsm_upd©e_√ed_sync_hook
(
tw_ed_fsm_t
 *
ed_fsm
, 
í
)

459 if(
ed_fsm
 !
NULL
){

460 
Êags
;

461 
	`•ö_lock_úqßve
(&
ed_fsm
->
lock
, 
Êags
);

462 
ed_fsm
->
å™s„r_≥ndög
.
√ed_sync
 = 
í
;

463 
	`•ö_u∆ock_úqª°‹e
(&
ed_fsm
->
lock
, 
Êags
);

465 
	}
}

467 
	$tw_ed_fsm_upd©e_íabÀ_°©e_å™s„r
(
tw_ed_fsm_t
 *
ed_fsm
, 
í
)

469 if(
ed_fsm
 !
NULL
){

470 
Êags
;

471 
	`•ö_lock_úqßve
(&
ed_fsm
->
lock
, 
Êags
);

472 
ed_fsm
->
å™s„r_≥ndög
.
íabÀ_°©e_å™s„r_Êag
 = 
í
;

473 
	`•ö_u∆ock_úqª°‹e
(&
ed_fsm
->
lock
, 
Êags
);

475 
	}
}

477 
	$tw_ed_fsm_upd©e_íabÀ_åiggî_≥ndög_evít
(
tw_ed_fsm_t
 *
ed_fsm
, 
í
)

479 if(
ed_fsm
 !
NULL
){

480 
Êags
;

482 
	`•ö_lock_úqßve
(&
ed_fsm
->
lock
, 
Êags
);

483 
ed_fsm
->
å™s„r_≥ndög
.
íabÀ_åiggî_≥ndög_Êag
 = 
í
;

484 
	`•ö_u∆ock_úqª°‹e
(&
ed_fsm
->
lock
, 
Êags
);

486 if(
ed_fsm
->
å™s„r_≥ndög
.
íabÀ_åiggî_≥ndög_Êag
){

487 if(
ed_fsm
->
å™s„r_≥ndög
.
›í_≥ndög_Êag
){

488 
	`¥ötk
("\n%s.%d: %d-%d->%d\n", 
__FUNCTION__
, 
__LINE__
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
”d_fsm),Éd_fsm->›->
	`gë_œ°_°©e
”d_fsm), 
TW_ED_OPEN_EVENT
);

489 
ed_fsm
->
›
->
	`å™s„r
”d_fsm, 
TW_ED_OPEN_EVENT
);

490 
	`¥ötk
("%s.%d: %d-%d->%d\n\n", 
__FUNCTION__
, 
__LINE__
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
”d_fsm),Éd_fsm->›->
	`gë_œ°_°©e
”d_fsm), 
TW_ED_OPEN_EVENT
);

492 if(
ed_fsm
->
å™s„r_≥ndög
.
dñivî_≥ndög_Êag
){

493 
	`¥ötk
("\n%s.%d: %d-%d->%d\n", 
__FUNCTION__
, 
__LINE__
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
”d_fsm),Éd_fsm->›->
	`gë_œ°_°©e
”d_fsm), 
TW_ED_DELIVER_EVENT
);

494 
ed_fsm
->
›
->
	`å™s„r
”d_fsm, 
TW_ED_DELIVER_EVENT
);

495 
	`¥ötk
("%s.%d: %d-%d->%d\n\n", 
__FUNCTION__
, 
__LINE__
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
”d_fsm),Éd_fsm->›->
	`gë_œ°_°©e
”d_fsm), 
TW_ED_DELIVER_EVENT
);

497 if(
ed_fsm
->
å™s„r_≥ndög
.
su•íd_≥ndög_Êag
){

498 
	`¥ötk
("\n%s.%d: %d-%d->%d\n", 
__FUNCTION__
, 
__LINE__
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
”d_fsm),Éd_fsm->›->
	`gë_œ°_°©e
”d_fsm), 
TW_ED_SUSPEND_EVENT
);

499 
ed_fsm
->
›
->
	`å™s„r
”d_fsm, 
TW_ED_SUSPEND_EVENT
);

500 
	`¥ötk
("%s.%d: %d-%d->%d\n\n", 
__FUNCTION__
, 
__LINE__
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
”d_fsm),Éd_fsm->›->
	`gë_œ°_°©e
”d_fsm), 
TW_ED_SUSPEND_EVENT
);

502 if(
ed_fsm
->
å™s„r_≥ndög
.
ªsume_≥ndög_Êag
){

503 
	`¥ötk
("\n%s.%d: %d-%d->%d\n", 
__FUNCTION__
, 
__LINE__
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
”d_fsm),Éd_fsm->›->
	`gë_œ°_°©e
”d_fsm), 
TW_ED_RESUME_EVENT
);

504 
ed_fsm
->
›
->
	`å™s„r
”d_fsm, 
TW_ED_RESUME_EVENT
);

505 
	`¥ötk
("%s.%d: %d-%d->%d\n\n", 
__FUNCTION__
, 
__LINE__
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
”d_fsm),Éd_fsm->›->
	`gë_œ°_°©e
”d_fsm), 
TW_ED_RESUME_EVENT
);

507 if(
ed_fsm
->
å™s„r_≥ndög
.
timeout_≥ndög_Êag
){

508 
	`¥ötk
("\n%s.%d: %d-%d->%d\n", 
__FUNCTION__
, 
__LINE__
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
”d_fsm),Éd_fsm->›->
	`gë_œ°_°©e
”d_fsm), 
TW_ED_TIMEOUT_EVENT
);

509 
ed_fsm
->
›
->
	`å™s„r
”d_fsm, 
TW_ED_TIMEOUT_EVENT
);

510 
	`¥ötk
("%s.%d: %d-%d->%d\n\n", 
__FUNCTION__
, 
__LINE__
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
”d_fsm),Éd_fsm->›->
	`gë_œ°_°©e
”d_fsm), 
TW_ED_TIMEOUT_EVENT
);

512 if(
ed_fsm
->
å™s„r_≥ndög
.
˛o£_≥ndög_Êag
){

513 
	`¥ötk
("\n%s.%d: %d-%d->%d\n", 
__FUNCTION__
, 
__LINE__
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
”d_fsm),Éd_fsm->›->
	`gë_œ°_°©e
”d_fsm), 
TW_ED_CLOSE_EVENT
);

514 
ed_fsm
->
›
->
	`å™s„r
”d_fsm, 
TW_ED_CLOSE_EVENT
);

515 
	`¥ötk
("%s.%d: %d-%d->%d\n\n", 
__FUNCTION__
, 
__LINE__
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
”d_fsm),Éd_fsm->›->
	`gë_œ°_°©e
”d_fsm), 
TW_ED_CLOSE_EVENT
);

517 
	`•ö_lock_úqßve
(&
ed_fsm
->
lock
, 
Êags
);

518 
ed_fsm
->
å™s„r_≥ndög
.
íabÀ_åiggî_≥ndög_Êag
 = 0;

519 
	`•ö_u∆ock_úqª°‹e
(&
ed_fsm
->
lock
, 
Êags
);

522 
	}
}

524 
	$tw_ed_fsm_ch™ge_°©e
(
tw_ed_fsm_t
 *
ed_fsm
, 
TW_ED_STATUS
 
°©e
)

526 if(
ed_fsm
 !
NULL
){

527 
Êags
;

528 
	`•ö_lock_úqßve
(&
ed_fsm
->
lock
, 
Êags
);

529 
ed_fsm
->
œ°_°©e
 =Éd_fsm->
cuº_°©e
;

530 
ed_fsm
->
cuº_°©e
 = 
°©e
;

531 
	`•ö_u∆ock_úqª°‹e
(&
ed_fsm
->
lock
, 
Êags
);

533 
	}
}

535 
	$tw_ed_fsm_ªq_fsm_evít
(
tw_ed_fsm_t
 *
ed_fsm
, 
TW_ED_EVENT
 
evít
)

537 if(
ed_fsm
 !
NULL
){

538 
Êags
;

539 
	`•ö_lock_úqßve
(&
ed_fsm
->
lock
, 
Êags
);

540 
evít
){

541 
TW_ED_DELIVER_EVENT
:

542 
ed_fsm
->
å™s„r_≥ndög
.
dñivî_≥ndög_Êag
 = 1;

544 
TW_ED_TIMEOUT_EVENT
:

545 
ed_fsm
->
å™s„r_≥ndög
.
timeout_≥ndög_Êag
 = 1;

547 
TW_ED_SUSPEND_EVENT
:

548 
ed_fsm
->
å™s„r_≥ndög
.
su•íd_≥ndög_Êag
 = 1;

550 
TW_ED_RESUME_EVENT
:

551 
ed_fsm
->
å™s„r_≥ndög
.
ªsume_≥ndög_Êag
 = 1;

553 
TW_ED_OPEN_EVENT
:

554 
ed_fsm
->
å™s„r_≥ndög
.
›í_≥ndög_Êag
 = 1;

557 
TW_ED_CLOSE_EVENT
:

558 
ed_fsm
->
å™s„r_≥ndög
.
˛o£_≥ndög_Êag
 = 1;

561 
	`•ö_u∆ock_úqª°‹e
(&
ed_fsm
->
lock
, 
Êags
);

563 
	}
}

565 
	$tw_ed_fsm_ack_fsm_evít
(
tw_ed_fsm_t
 *
ed_fsm
, 
TW_ED_EVENT
 
evít
)

567 if(
ed_fsm
 !
NULL
){

568 
Êags
;

569 
	`•ö_lock_úqßve
(&
ed_fsm
->
lock
, 
Êags
);

570 
ed_fsm
->
å™s„r_≥ndög
.
íabÀ_°©e_å™s„r_Êag
 = 0;

571 
evít
){

572 
TW_ED_DELIVER_EVENT
:

573 
ed_fsm
->
å™s„r_≥ndög
.
dñivî_≥ndög_Êag
 = 0;

575 
TW_ED_TIMEOUT_EVENT
:

576 
ed_fsm
->
å™s„r_≥ndög
.
timeout_≥ndög_Êag
 = 0;

578 
TW_ED_SUSPEND_EVENT
:

579 
ed_fsm
->
å™s„r_≥ndög
.
su•íd_≥ndög_Êag
 = 0;

581 
TW_ED_RESUME_EVENT
:

582 
ed_fsm
->
å™s„r_≥ndög
.
ªsume_≥ndög_Êag
 = 0;

584 
TW_ED_OPEN_EVENT
:

585 
ed_fsm
->
å™s„r_≥ndög
.
›í_≥ndög_Êag
 = 0;

588 
TW_ED_CLOSE_EVENT
:

589 
ed_fsm
->
å™s„r_≥ndög
.
˛o£_≥ndög_Êag
 = 0;

592 
	`•ö_u∆ock_úqª°‹e
(&
ed_fsm
->
lock
, 
Êags
);

594 
	}
}

596 
	$tw_ed_fsm_gí_fsm_evít
(
tw_ed_fsm_t
 *
ed_fsm
, 
TW_ED_EVENT
 
evít
)

598 
ªt
 = 
TW_ERR
;

599 if(
ed_fsm
 !
NULL
){

600 
ed_fsm
->
›
->
	`ªq_fsm_evít
”d_fsm, 
evít
);

601 if(
ed_fsm
->
å™s„r_≥ndög
.
íabÀ_°©e_å™s„r_Êag
){

602 
ªt
 = 
ed_fsm
->
›
->
	`å™s„r
”d_fsm, 
evít
);

605  
ªt
;

606 
	}
}

608 
	$tw_ed_fsm_å™s„r
(
tw_ed_fsm_t
 *
ed_fsm
, 
TW_ED_EVENT
 
evít
)

610 
ªt
 = 
TW_ERR
;

612 if(
ed_fsm
 !
NULL
){

613 
fsm_å™s„r_a˘i⁄
 
a˘i⁄
 = 
NULL
;

614 
fsm_å™s„r_a˘i⁄
 
sync_hook
 = 
NULL
;

615 
œ°_°©e
, 
cuº_°©e
;

617 
ed_fsm
->
›
->
	`ack_fsm_evít
”d_fsm, 
evít
);

618 
cuº_°©e
 = 
ed_fsm
->
›
->
	`gë_cuº_°©e
(ed_fsm);

619 if(
ed_fsm
->
èbÀ
 !
NULL
){

620 
a˘i⁄
 = 
ed_fsm
->
èbÀ
->a˘i⁄[
cuº_°©e
][
evít
];

621 
sync_hook
 = 
ed_fsm
->
èbÀ
->sync_hook;

624 if(
a˘i⁄
 !
NULL
){

625 
ªt
 = 
	`a˘i⁄
(
ed_fsm
,Éd_fsm->
c⁄ãxt
);

626 if(
ed_fsm
->
å™s„r_≥ndög
.
√ed_sync
){

627 
ed_fsm
->
›
->
	`upd©e_√ed_sync_hook
(ed_fsm, 0);

628 
cuº_°©e
 = 
ed_fsm
->
›
->
	`gë_cuº_°©e
(ed_fsm);

629 
œ°_°©e
 = 
ed_fsm
->
›
->
	`gë_œ°_°©e
(ed_fsm);

630 if((
sync_hook
!=
NULL
Ë&& (
cuº_°©e
==
TW_ED_IDLE
Ë&& ((
œ°_°©e
==
TW_ED_SUSPEND
)||÷a°_°©e==
TW_ED_TRANSFERING
))){

631 
ªt
 = 
	`sync_hook
(
ed_fsm
,Éd_fsm->
c⁄ãxt
);

636  
ªt
;

637 
	}
}

639 
	$tw_ed_fsm_gë_cuº_°©e
(
tw_ed_fsm_t
 *
ed_fsm
)

641 if(
ed_fsm
 !
NULL
){

642  
ed_fsm
->
cuº_°©e
;

644  
TW_ED_UNREGISTER
;

646 
	}
}

648 
	$tw_ed_fsm_gë_œ°_°©e
(
tw_ed_fsm_t
 *
ed_fsm
)

650 if(
ed_fsm
 !
NULL
){

651  
ed_fsm
->
œ°_°©e
;

653  
TW_ED_UNREGISTER
;

655 
	}
}

657 
tw_ed_fsm_›î©i⁄
 
	gtw_ed_fsm_›
 ={

658 .
öô
 = 
tw_ed_fsm_öô
,

659 .
	gª£t
 = 
tw_ed_fsm_ª£t
,

660 .
	gªgi°î_èbÀ
 = 
tw_ed_fsm_ªgi°î_èbÀ
,

661 .
	guƒegi°î_èbÀ
 = 
tw_ed_fsm_uƒegi°î_èbÀ
,

662 .
	gupd©e_√ed_sync_hook
 = 
tw_ed_fsm_upd©e_√ed_sync_hook
,

663 .
	gupd©e_íabÀ_°©e_å™s„r
 = 
tw_ed_fsm_upd©e_íabÀ_°©e_å™s„r
,

664 .
	gupd©e_íabÀ_åiggî_≥ndög_evít
 = 
tw_ed_fsm_upd©e_íabÀ_åiggî_≥ndög_evít
,

665 .
	gch™ge_°©e
 = 
tw_ed_fsm_ch™ge_°©e
,

666 .
	gªq_fsm_evít
 = 
tw_ed_fsm_ªq_fsm_evít
,

667 .
	gack_fsm_evít
 = 
tw_ed_fsm_ack_fsm_evít
,

668 .
	ggí_fsm_evít
 = 
tw_ed_fsm_gí_fsm_evít
,

669 .
	gå™s„r
 = 
tw_ed_fsm_å™s„r
,

670 .
	ggë_cuº_°©e
 = 
tw_ed_fsm_gë_cuº_°©e
,

671 .
	ggë_œ°_°©e
 = 
tw_ed_fsm_gë_œ°_°©e
,

674 
	$öô_ed_fsm
(
tw_ed_fsm_t
 *
ed_fsm
, 
fsm_°©e_å™s„r_m©rix_èbÀ_t
 *
fsm_èbÀ
, *
c⁄ãxt
)

676 if(
ed_fsm
 !
NULL
){

677 
ed_fsm
->
›
 = &
tw_ed_fsm_›
;

678 
ed_fsm
->
›
->
	`öô
(ed_fsm);

679 
ed_fsm
->
›
->
	`ªgi°î_èbÀ
”d_fsm, 
fsm_èbÀ
, 
c⁄ãxt
);

681 
	}
}

683 
	$drivî_åiggî_≥ndög_evít
(
ed_tcb_t
 *
ed_tcb
, 
í
)

685 if(
ed_tcb
 !
NULL
){

686 
tw_ed_fsm_t
 *
ed_fsm
 = &
ed_tcb
->ed_fsm;

687 
ed_fsm
->
›
->
	`upd©e_íabÀ_åiggî_≥ndög_evít
”d_fsm, 
í
);

689 
	}
}

691 
	$drivî_gí_˛o£_evít
(
ed_tcb_t
 *
ed_tcb
, 
ˇn_å™s„r
)

693 if(
ed_tcb
 !
NULL
){

694 
tw_ed_fsm_t
 *
ed_fsm
 = &
ed_tcb
->ed_fsm;

695 
Êags
;

696 
	`loˇl_úq_ßve
(
Êags
);

697 if(
ˇn_å™s„r
){

698 
ed_fsm
->
›
->
	`upd©e_íabÀ_°©e_å™s„r
(ed_fsm, 1);

699 
ed_fsm
->
›
->
	`gí_fsm_evít
”d_fsm, 
TW_ED_CLOSE_EVENT
);

701 
ed_fsm
->
›
->
	`ªq_fsm_evít
”d_fsm, 
TW_ED_CLOSE_EVENT
);

702 
ed_fsm
->
›
->
	`upd©e_íabÀ_åiggî_≥ndög_evít
”d_fsm,Éd_fsm->
å™s„r_≥ndög
.
íabÀ_åiggî_≥ndög_Êag
);

704 
	`loˇl_úq_ª°‹e
(
Êags
);

706 
	}
}

708 
	$drivî_gí_timeout_evít
(
ed_tcb_t
 *
ed_tcb
, 
ˇn_å™s„r
)

710 if(
ed_tcb
 !
NULL
){

711 
tw_ed_fsm_t
 *
ed_fsm
 = &
ed_tcb
->ed_fsm;

712 
Êags
;

713 
	`loˇl_úq_ßve
(
Êags
);

714 if(
ˇn_å™s„r
){

715 
ed_fsm
->
›
->
	`upd©e_íabÀ_°©e_å™s„r
(ed_fsm, 1);

716 
ed_fsm
->
›
->
	`gí_fsm_evít
”d_fsm, 
TW_ED_TIMEOUT_EVENT
);

718 
ed_fsm
->
›
->
	`ªq_fsm_evít
”d_fsm, 
TW_ED_TIMEOUT_EVENT
);

719 
ed_fsm
->
›
->
	`upd©e_íabÀ_åiggî_≥ndög_evít
”d_fsm,Éd_fsm->
å™s„r_≥ndög
.
íabÀ_åiggî_≥ndög_Êag
);

721 
	`loˇl_úq_ª°‹e
(
Êags
);

723 
	}
}

725 
	$drivî_gí_su•íd_evít
(
ed_tcb_t
 *
ed_tcb
, 
ˇn_å™s„r
)

727 if(
ed_tcb
 !
NULL
){

728 
tw_ed_fsm_t
 *
ed_fsm
 = &
ed_tcb
->ed_fsm;

729 
Êags
;

730 
	`loˇl_úq_ßve
(
Êags
);

731 if(
ˇn_å™s„r
){

732 
ed_fsm
->
›
->
	`upd©e_íabÀ_°©e_å™s„r
(ed_fsm, 1);

733 
ed_fsm
->
›
->
	`gí_fsm_evít
”d_fsm, 
TW_ED_SUSPEND_EVENT
);

735 
ed_fsm
->
›
->
	`ªq_fsm_evít
”d_fsm, 
TW_ED_SUSPEND_EVENT
);

736 
ed_fsm
->
›
->
	`upd©e_íabÀ_åiggî_≥ndög_evít
”d_fsm,Éd_fsm->
å™s„r_≥ndög
.
íabÀ_åiggî_≥ndög_Êag
);

738 
	`loˇl_úq_ª°‹e
(
Êags
);

740 
	}
}

742 
	$drivî_gí_ªsume_evít
(
ed_tcb_t
 *
ed_tcb
, 
ˇn_å™s„r
)

744 if(
ed_tcb
 !
NULL
){

745 
tw_ed_fsm_t
 *
ed_fsm
 = &
ed_tcb
->ed_fsm;

746 
Êags
;

747 
	`loˇl_úq_ßve
(
Êags
);

748 if(
ˇn_å™s„r
){

749 
ed_fsm
->
›
->
	`upd©e_íabÀ_°©e_å™s„r
(ed_fsm, 1);

750 
ed_fsm
->
›
->
	`gí_fsm_evít
”d_fsm, 
TW_ED_RESUME_EVENT
);

752 
ed_fsm
->
›
->
	`ªq_fsm_evít
”d_fsm, 
TW_ED_RESUME_EVENT
);

753 
ed_fsm
->
›
->
	`upd©e_íabÀ_åiggî_≥ndög_evít
”d_fsm,Éd_fsm->
å™s„r_≥ndög
.
íabÀ_åiggî_≥ndög_Êag
);

755 
	`loˇl_úq_ª°‹e
(
Êags
);

757 
	}
}

759 
	$drivî_gí_›í_evít
(
ed_tcb_t
 *
ed_tcb
, 
ˇn_å™s„r
)

761 if(
ed_tcb
 !
NULL
){

762 
tw_ed_fsm_t
 *
ed_fsm
 = &
ed_tcb
->ed_fsm;

763 
Êags
;

764 
	`loˇl_úq_ßve
(
Êags
);

765 if(
ˇn_å™s„r
){

766 
ed_fsm
->
›
->
	`upd©e_íabÀ_°©e_å™s„r
(ed_fsm, 1);

767 
ed_fsm
->
›
->
	`gí_fsm_evít
”d_fsm, 
TW_ED_OPEN_EVENT
);

769 
ed_fsm
->
›
->
	`ªq_fsm_evít
”d_fsm, 
TW_ED_OPEN_EVENT
);

770 
ed_fsm
->
›
->
	`upd©e_íabÀ_åiggî_≥ndög_evít
”d_fsm,Éd_fsm->
å™s„r_≥ndög
.
íabÀ_åiggî_≥ndög_Êag
);

772 
	`loˇl_úq_ª°‹e
(
Êags
);

774 
	}
}

776 
	$drivî_gí_dñivî_evít
(
ed_tcb_t
 *
ed_tcb
, 
ˇn_å™s„r
)

778 if(
ed_tcb
 !
NULL
){

779 
tw_ed_fsm_t
 *
ed_fsm
 = &
ed_tcb
->ed_fsm;

780 
Êags
;

781 
	`loˇl_úq_ßve
(
Êags
);

782 if(
ˇn_å™s„r
){

783 
ed_fsm
->
›
->
	`upd©e_íabÀ_°©e_å™s„r
(ed_fsm, 1);

784 
ed_fsm
->
›
->
	`gí_fsm_evít
”d_fsm, 
TW_ED_DELIVER_EVENT
);

786 
ed_fsm
->
›
->
	`ªq_fsm_evít
”d_fsm, 
TW_ED_DELIVER_EVENT
);

787 
ed_fsm
->
›
->
	`upd©e_íabÀ_åiggî_≥ndög_evít
”d_fsm,Éd_fsm->
å™s„r_≥ndög
.
íabÀ_åiggî_≥ndög_Êag
);

789 
	`loˇl_úq_ª°‹e
(
Êags
);

791 
	}
}

793 
	$öô_c⁄åﬁ_ed
(
ed_id
 *
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
, 
logic_ch™_id
)

795 if(
id
 !
NULL
){

796 
id
->
bus_id
 = (bus_id)&0xf;

797 
id
->
chù_id
 = (chip_id)&0xf;

798 
id
->
ty≥_id
 = 
TW_ED_CONTROL
;

799 
id
->
group_ch™_id
 = (group_chan_id)&0x3ff;

800 
id
->
logic_ch™_id
 = (logic_chan_id)&0x3ff;

802 
	}
}

804 
	$öô_video_ícode_ed
(
ed_id
 *
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
, 
logic_ch™_id
)

806 if(
id
 !
NULL
){

807 
id
->
bus_id
 = (bus_id)&0xf;

808 
id
->
chù_id
 = (chip_id)&0xf;

809 
id
->
ty≥_id
 = 
TW_ED_VIDEO_ENCODE_IN
;

810 
id
->
group_ch™_id
 = (group_chan_id)&0x3ff;

811 
id
->
logic_ch™_id
 = (logic_chan_id)&0x3ff;

813 
	}
}

815 
	$öô_video_ícode_¥evõw_ed
(
ed_id
 *
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
, 
logic_ch™_id
)

817 if(
id
 !
NULL
){

818 
id
->
bus_id
 = (bus_id)&0xf;

819 
id
->
chù_id
 = (chip_id)&0xf;

820 
id
->
ty≥_id
 = 
TW_ED_VIDEO_PREVIEW_IN
;

821 
id
->
group_ch™_id
 = (group_chan_id)&0x3ff;

822 
id
->
logic_ch™_id
 = (logic_chan_id)&0x3ff;

824 
	}
}

826 
	$öô_video_ícode_osd_out_ed
(
ed_id
 *
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
, 
logic_ch™_id
)

828 if(
id
 !
NULL
){

829 
id
->
bus_id
 = (bus_id)&0xf;

830 
id
->
chù_id
 = (chip_id)&0xf;

831 
id
->
ty≥_id
 = 
TW_ED_VIDEO_ENCODE_OSD_OUT
;

832 
id
->
group_ch™_id
 = (group_chan_id)&0x3ff;

833 
id
->
logic_ch™_id
 = (logic_chan_id)&0x3ff;

835 
	}
}

837 
	$öô_video_decode_ed
(
ed_id
 *
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
, 
logic_ch™_id
)

839 if(
id
 !
NULL
){

840 
id
->
bus_id
 = (bus_id)&0xf;

841 
id
->
chù_id
 = (chip_id)&0xf;

842 
id
->
ty≥_id
 = 
TW_ED_VIDEO_DECODE_OUT
;

843 
id
->
group_ch™_id
 = (group_chan_id)&0x3ff;

844 
id
->
logic_ch™_id
 = (logic_chan_id)&0x3ff;

846 
	}
}

848 
	$öô_video_decode_¥evõw_ed
(
ed_id
 *
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
, 
logic_ch™_id
)

850 if(
id
 !
NULL
){

851 
id
->
bus_id
 = (bus_id)&0xf;

852 
id
->
chù_id
 = (chip_id)&0xf;

853 
id
->
ty≥_id
 = 
TW_ED_VIDEO_PREVIEW_OUT
;

854 
id
->
group_ch™_id
 = (group_chan_id)&0x3ff;

855 
id
->
logic_ch™_id
 = (logic_chan_id)&0x3ff;

857 
	}
}

859 
	$öô_video_decode_osg_out_ed
(
ed_id
 *
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
, 
logic_ch™_id
)

861 if(
id
 !
NULL
){

862 
id
->
bus_id
 = (bus_id)&0xf;

863 
id
->
chù_id
 = (chip_id)&0xf;

864 
id
->
ty≥_id
 = 
TW_ED_VIDEO_DECODE_OSG_OUT
;

865 
id
->
group_ch™_id
 = (group_chan_id)&0x3ff;

866 
id
->
logic_ch™_id
 = (logic_chan_id)&0x3ff;

868 
	}
}

870 
	$öô_audio_ícode_ed
(
ed_id
 *
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
)

872 if(
id
 !
NULL
){

873 
id
->
bus_id
 = (bus_id)&0xf;

874 
id
->
chù_id
 = (chip_id)&0xf;

875 
id
->
ty≥_id
 = 
TW_ED_AUDIO_ENCODE_IN
;

876 
id
->
group_ch™_id
 = (group_chan_id)&0x3ff;

877 
id
->
logic_ch™_id
 = 0;

879 
	}
}

881 
	$öô_audio_decode_ed
(
ed_id
 *
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
)

883 if(
id
 !
NULL
){

884 
id
->
bus_id
 = (bus_id)&0xf;

885 
id
->
chù_id
 = (chip_id)&0xf;

886 
id
->
ty≥_id
 = 
TW_ED_AUDIO_DECODE_OUT
;

887 
id
->
group_ch™_id
 = (group_chan_id)&0x3ff;

888 
id
->
logic_ch™_id
 = 0;

890 
	}
}

892 
	$öô_övÆid_ed
(
ed_id
 *
id
)

894 if(
id
 !
NULL
){

895 
id
->
bus_id
 = 
INVALID_TW_ED_BSU_ID
;

896 
id
->
chù_id
 = 0;

897 
id
->
ty≥_id
 = 
INVALID_TW_ED_TYPE_ID
;

898 
id
->
group_ch™_id
 = 0;

899 
id
->
logic_ch™_id
 = 0;

901 
	}
}

903 
	$ed_tcb_öô
(
ed_tcb_t
 *
ed_tcb
, 
bus_id
, 
chù_id
, 
ty≥_id
, 
group_ch™_id
, 
logic_ch™_id
)

905 if(
ed_tcb
 !
NULL
){

906 
ty≥_id
){

907 
TW_ED_CONTROL
:

908 
	`öô_c⁄åﬁ_ed
(&
ed_tcb
->
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
, 
logic_ch™_id
);

910 
TW_ED_VIDEO_ENCODE_IN
:

911 
	`öô_video_ícode_ed
(&
ed_tcb
->
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
, 
logic_ch™_id
);

913 
TW_ED_VIDEO_PREVIEW_IN
:

914 
	`öô_video_ícode_¥evõw_ed
(&
ed_tcb
->
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
, 
logic_ch™_id
);

916 
TW_ED_VIDEO_ENCODE_OSD_OUT
:

917 
	`öô_video_ícode_osd_out_ed
(&
ed_tcb
->
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
, 
logic_ch™_id
);

919 
TW_ED_VIDEO_DECODE_OUT
:

920 
	`öô_video_decode_ed
(&
ed_tcb
->
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
, 
logic_ch™_id
);

922 
TW_ED_VIDEO_PREVIEW_OUT
:

923 
	`öô_video_decode_¥evõw_ed
(&
ed_tcb
->
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
, 
logic_ch™_id
);

925 
TW_ED_VIDEO_DECODE_OSG_OUT
:

926 
	`öô_video_decode_osg_out_ed
(&
ed_tcb
->
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
, 
logic_ch™_id
);

928 
TW_ED_AUDIO_ENCODE_IN
:

929 
	`öô_audio_ícode_ed
(&
ed_tcb
->
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
);

931 
TW_ED_AUDIO_DECODE_OUT
:

932 
	`öô_audio_decode_ed
(&
ed_tcb
->
id
, 
bus_id
, 
chù_id
, 
group_ch™_id
);

935 
INVALID_TW_ED_TYPE_ID
:

936 
	`öô_övÆid_ed
(&
ed_tcb
->
id
);

939 
	`©omic_£t
(&
ed_tcb
->
°©e
, 
TW_ED_UNREGISTER
);

941 
	}
}

943 
	$öô_ídpoöt_tcb
(
ed_tcb_t
 *
ed_tcb
, 
bus_id
, 
chù_id
, 
ty≥_id
, 
group_ch™_id
, 
logic_ch™_id
, *
¥iv
, 
nŸify_ªgi°î_node_¥iv
 
nŸify_¥iv
, 
m©ch_ªgsôî_node_¥iv_id
 
m©ch_id
, 
fsm_°©e_å™s„r_m©rix_èbÀ_t
 *
fsm_èbÀ
)

945 if(
ed_tcb
 !
NULL
){

946 
	`ed_tcb_öô
(
ed_tcb
, 
bus_id
, 
chù_id
, 
ty≥_id
, 
group_ch™_id
, 
logic_ch™_id
);

947 
	`öô_ªgi°î_node
(&
ed_tcb
->
ed
, 
¥iv
, 
nŸify_¥iv
, 
m©ch_id
);

948 
	`öô_ed_fsm
(&
ed_tcb
->
ed_fsm
, 
fsm_èbÀ
, 
¥iv
);

950 
	}
}

	@../../tw5864/tw5864/config.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
	#MPB_CMD_REG
 (0xb800)

	)

4 
	#MPB_DATA_REG
 (0xb804)

	)

5 
	#MPB_READ_MODE
 0

	)

6 
	#MPB_WRITE_MODE
 1

	)

9 
	#PLATFORM_FPGA_330


	)

13 
	#PCI_I2C_TIMEOUT
 (30000)

	)

15 
	gtbl_∑l_tw2864_comm⁄
[] = {

22 
	gtbl_¡sc_tw2864_comm⁄
[] = {

29 
	gtbl_∑l_tw2864_comm⁄2
[] = {

35 
	gtbl_tw2864_Ÿhî
[] = {

46 #ifde‡
PLATFORM_FPGA_155


49 #ifde‡
PLATFORM_FPGA_330


55 
	gtbl_∑l_tw2865_comm⁄
[] = {

62 
	gtbl_¡sc_tw2865_comm⁄
[] = {

69 
	gtbl_tw2865_Ÿhî1
[] = {

71 #ifde‡
PLATFORM_FPGA_155


74 #ifde‡
PLATFORM_FPGA_330


82 #ifde‡
PLATFORM_FPGA_155


85 #ifde‡
PLATFORM_FPGA_330


91 
	gtbl_tw2866_Ÿhî1
[] = {

93 #ifde‡
PLATFORM_FPGA_155


96 #ifde‡
PLATFORM_FPGA_330


104 #ifde‡
PLATFORM_FPGA_155


107 #ifde‡
PLATFORM_FPGA_330


114 
	gtbl_tw2865_Ÿhî2
[] = {

120 
	gtbl_tw2865_Ÿhî3
[] = {

124 
	gaudio_tw2865_comm⁄
[] = {

132 
	gaudio_tbl_∑l_tw2865_8KHz
[] = {

136 
	gaudio_tbl_∑l_tw2865_16KHz
[] = {

139 
	gaudio_tbl_¡sc_tw2865_8KHz
[] = {

143 
	gaudio_tbl_¡sc_tw2865_16KHz
[] = {

147 
pci_i2c_ªad
(
dvm_chù_t
 *
chù
, 
u8
 
devid
, u8 
dev‚
, u8 *
buf
);

148 
	$pci_i2c_mu…i_ªad
(
dvm_chù_t
 *
chù
, 
u8
 
devid
, u8 
dev‚
, u8 *
buf
, 
u32
 
cou¡
)

150 
i
 = 0;

151 
u32
 
vÆ
 = 0;

152 
timeout
 = 
PCI_I2C_TIMEOUT
;

154 
i
 = 0; i < 
cou¡
; i++)

156 
vÆ
 = (1 << 24Ë+ ((
devid
 | 0x01Ë<< 16Ë+ ((
dev‚
 + 
i
) << 8) + 0;

157 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
PCI_I2C
, 
vÆ
);

160 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
PCI_I2C
) & (0x01000000);

161 }(!
vÆ
Ë&& (--
timeout
));

162 if(!
timeout
){

163 
	`TW_DBG
(
TW_DBG_ERR
, "dev 0x%x, f¿0x%x\n", 
devid
, 
dev‚
);

164  -
ETIMEDOUT
;

166 
buf
[
i
] = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
PCI_I2C
);

169  
TW_OK
;

170 
	}
}

171 
	$pci_i2c_mu…i_wrôe
(
dvm_chù_t
 *
chù
, 
u8
 
devid
, u8 
dev‚
, u8 *
buf
, 
u32
 
cou¡
)

173 
i
 = 0;

174 
u32
 
vÆ
 = 0;

175 
timeout
 = 
PCI_I2C_TIMEOUT
;

177 
i
 = 0; i < 
cou¡
; i++)

179 
vÆ
 = (1 << 24Ë+ ((
devid
 & 0x„Ë<< 16Ë+ ((
dev‚
 + 
i
Ë<< 8Ë+ 
buf
[i];

180 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
PCI_I2C
, 
vÆ
);

182 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
PCI_I2C
) & (0x01000000);

183 }(!
vÆ
Ë&& (--
timeout
));

184 if(!
timeout
){

185 
	`TW_DBG
(
TW_DBG_ERR
, "dev 0x%x, f¿0x%x, 0x%x\n", 
devid
, 
dev‚
, 
buf
[
i
]);

186  -
ETIMEDOUT
;

190  
TW_OK
;

191 
	}
}

192 
	$pci_i2c_ªad
(
dvm_chù_t
 *
chù
, 
u8
 
devid
, u8 
dev‚
, u8 *
buf
)

194 
u32
 
vÆ
 = 0;

195 
timeout
 = 
PCI_I2C_TIMEOUT
;

197 
vÆ
 = (1 << 24Ë+ ((
devid
 | 0x01Ë<< 16Ë+ (
dev‚
 << 8) + 0;

199 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
PCI_I2C
, 
vÆ
);

201 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
PCI_I2C
) & (0x01000000);

202 }(!
vÆ
Ë&& (--
timeout
));

203 if(!
timeout
){

204 
	`TW_DBG
(
TW_DBG_ERR
, "dev 0x%x, f¿0x%x\n", 
devid
, 
dev‚
);

205  -
ETIMEDOUT
;

208 *
buf
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
PCI_I2C
);

210  
TW_OK
;

211 
	}
}

212 
	$pci_i2c_wrôe
(
dvm_chù_t
 *
chù
, 
u8
 
devid
, u8 
dev‚
, u8 
buf
)

214 
u32
 
vÆ
 = 0;

215 
timeout
 = 
PCI_I2C_TIMEOUT
;

217 
vÆ
 = (1 << 24Ë+ ((
devid
 & 0x„Ë<< 16Ë+ (
dev‚
 << 8Ë+ 
buf
;

218 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
PCI_I2C
, 
vÆ
);

220 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
PCI_I2C
) & (0x01000000);

221 }(!
vÆ
Ë&& (--
timeout
));

222 if(!
timeout
){

223 
	`TW_DBG
(
TW_DBG_ERR
, "dev 0x%x, f¿0x%x, 0x%x\n", 
devid
, 
dev‚
, 
buf
);

224  -
ETIMEDOUT
;

227  
TW_OK
;

228 
	}
}

229 
	$pci_i2c_wsˇâî
(
dvm_chù_t
 *
chù
, 
u8
 
devid
, u8 *
buf
, 
u32
 
cou¡
)

231 
i
 = 0;

232 
u32
 
vÆ
 = 0;

233 
timeout
 = 
PCI_I2C_TIMEOUT
;

235 
i
 = 0; i < 
cou¡
; i++)

237 
vÆ
 = (1 << 24Ë+ ((
devid
 & 0x„Ë<< 16Ë+ (
buf
[
i
 * 2+ 0] << 8) + buf[i * 2 +1];

238 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
PCI_I2C
, 
vÆ
);

240 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
PCI_I2C
) & (0x01000000);

241 }(!
vÆ
Ë&& (--
timeout
));

242 if(!
timeout
){

243 
	`TW_DBG
(
TW_DBG_ERR
, "dev 0x%x, f¿0x%x, 0x%x\n", 
devid
, 
buf
[
i
 * 2], buf[i * 2 + 1]);

244  -
ETIMEDOUT
;

248  
TW_OK
;

249 
	}
}

251 
	$pci_öô_tw2864
(
dvm_chù_t
 *
chù
)

253 
u32
 
vÆ
;

254 
u32
 
ch
;

256 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
MCU_IIC_CONF
);

257 
vÆ
 |= 0x01;

258 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MCU_IIC_CONF
, 
vÆ
);

259 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
I2C_PHASE_SHIFT
, 0x01);

260 
ch
 = 0 ; ch < 4 ; ch++)

262 
	`pci_i2c_mu…i_wrôe
(
chù
 , 0x56 , 
ch
 * 0x10 , 
tbl_∑l_tw2864_comm⁄
 , 16);

264 #ifde‡
PLATFORM_FPGA_155


265 
	`pci_i2c_wsˇâî
(
chù
 , 0x56 , 
tbl_tw2864_Ÿhî
 ,22);

267 
	`pci_i2c_wsˇâî
(
chù
 , 0x56 , 
tbl_tw2864_Ÿhî
 ,23);

269 
	`pci_i2c_wrôe
(
chù
, 0x56, 0xcf, 0x83);

270 
	`pci_i2c_wrôe
(
chù
, 0x56, 0xe0, 0x00);

272 
ch
 = 0 ; ch < 4 ; ch++)

274 
	`pci_i2c_mu…i_wrôe
(
chù
 , 0x54 , 
ch
 * 0x10 , 
tbl_∑l_tw2864_comm⁄
 , 16);

276 #ifde‡
PLATFORM_FPGA_155


277 
	`pci_i2c_wsˇâî
(
chù
 , 0x54 , 
tbl_tw2864_Ÿhî
 ,22);

279 
	`pci_i2c_wsˇâî
(
chù
 , 0x54 , 
tbl_tw2864_Ÿhî
 ,23);

281 
	`pci_i2c_wrôe
(
chù
, 0x54, 0xcf, 0x83);

282 
	`pci_i2c_wrôe
(
chù
, 0x54, 0xe0, 0x04);

284 
ch
 = 0 ; ch < 4 ; ch++)

286 
	`pci_i2c_mu…i_wrôe
(
chù
 , 0x52 , 
ch
 * 0x10 , 
tbl_∑l_tw2864_comm⁄
 , 16);

288 #ifde‡
PLATFORM_FPGA_155


289 
	`pci_i2c_wsˇâî
(
chù
 , 0x52 , 
tbl_tw2864_Ÿhî
 ,22);

291 
	`pci_i2c_wsˇâî
(
chù
 , 0x52 , 
tbl_tw2864_Ÿhî
 ,23);

293 
	`pci_i2c_wrôe
(
chù
, 0x52, 0xcf, 0x83);

294 
	`pci_i2c_wrôe
(
chù
, 0x52, 0xe0, 0x08);

296 
ch
 = 0 ; ch < 4 ; ch++)

298 
	`pci_i2c_mu…i_wrôe
(
chù
 , 0x52 , 
ch
 * 0x10 , 
tbl_∑l_tw2864_comm⁄
 , 16);

300 #ifde‡
PLATFORM_FPGA_155


301 
	`pci_i2c_wsˇâî
(
chù
 , 0x52 , 
tbl_tw2864_Ÿhî
 ,22);

303 
	`pci_i2c_wsˇâî
(
chù
 , 0x52 , 
tbl_tw2864_Ÿhî
 ,23);

305 
	`pci_i2c_wrôe
(
chù
, 0x52, 0xcf, 0x83);

306 
	`pci_i2c_wrôe
(
chù
, 0x52, 0xe0, 0x08);

307 
	}
}

309 
	$pci_öô_tw2865
(
dvm_chù_t
 *
chù
)

311 
u32
 
vÆ
;

312 
u32
 
ch
;

314 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
MCU_IIC_CONF
);

315 
vÆ
 |= 0x01;

316 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MCU_IIC_CONF
, 
vÆ
);

317 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
I2C_PHASE_SHIFT
, 0x01);

319 
ch
 = 0 ; ch < 4 ; ch++)

321 
	`pci_i2c_mu…i_wrôe
(
chù
, 0x50, 
ch
 * 0x10, 
tbl_∑l_tw2865_comm⁄
, 16);

323 #ifde‡
PLATFORM_FPGA_155


324 
	`pci_i2c_wsˇâî
(
chù
 , 0x50 , 
tbl_tw2865_Ÿhî1
 , 16);

326 
	`pci_i2c_wsˇâî
(
chù
 , 0x50 , 
tbl_tw2865_Ÿhî1
 , 18);

328 
	`pci_i2c_mu…i_wrôe
(
chù
 , 0x50 , 0xd0 , 
audio_tw2865_comm⁄
 , 20);

329 
	`pci_i2c_wsˇâî
(
chù
 , 0x50 , 
tbl_tw2865_Ÿhî2
 , 6);

330 
	`pci_i2c_mu…i_wrôe
(
chù
 , 0x50 , 0xf0 , 
audio_tbl_∑l_tw2865_8KHz
 , 6);

331 
	`pci_i2c_wsˇâî
(
chù
 , 0x50 , 
tbl_tw2865_Ÿhî3
 , 3);

332 
	`pci_i2c_wrôe
(
chù
, 0x50, 0xe0, 0x10);

333 
	}
}

335 
	$pci_öô_tw2866
(
dvm_chù_t
 *
chù
, 
u8
 
iic
)

337 
u32
 
ch
;

339 
ch
 = 0 ; ch < 4 ; ch++)

341 
	`pci_i2c_mu…i_wrôe
(
chù
, 
iic
, 
ch
 * 0x10, 
tbl_∑l_tw2865_comm⁄
, 16);

343 #ifde‡
PLATFORM_FPGA_155


344 
	`pci_i2c_wsˇâî
(
chù
 , 
iic
, 
tbl_tw2866_Ÿhî1
 , 17);

346 
	`pci_i2c_wsˇâî
(
chù
 , 
iic
 , 
tbl_tw2866_Ÿhî1
 , (tbl_tw2866_other1)>>1);

348 
	`pci_i2c_mu…i_wrôe
(
chù
 , 
iic
 , 0xd0 , 
audio_tw2865_comm⁄
 , 20);

349 
	`pci_i2c_wsˇâî
(
chù
 , 0x5 , 
tbl_tw2865_Ÿhî2
 , 6);

350 
	`pci_i2c_mu…i_wrôe
(
chù
 , 
iic
 , 0xf0 , 
audio_tbl_∑l_tw2865_8KHz
 , 6);

351 
	`pci_i2c_wsˇâî
(
chù
 , 
iic
 , 
tbl_tw2865_Ÿhî3
 , 3);

352 
	`pci_i2c_wrôe
(
chù
, 
iic
, 0xe0, 0x10);

353 #ifde‡
TW5864_ASIC_NEW


354 
	`pci_i2c_wrôe
(
chù
, 
iic
, 0x60, 0x15);

355 
	`pci_i2c_wrôe
(
chù
, 
iic
, 0x61, 0x3);

357 
	}
}

360 
	$pci_öô_ad
(
dvm_chù_t
 *
chù
)

362 #ifde‡
FPGA_330_5864_TESTING


363 
	`pci_öô_tw2864
(
chù
);

364 
	`pci_öô_tw2865
(
chù
);

366 
	`pci_öô_tw2866
(
chù
, 0x52);

367 
	`pci_öô_tw2866
(
chù
, 0x54);

368 
	`pci_öô_tw2866
(
chù
, 0x56);

371 #i‚de‡
PLATFORM_FPGA_155


373 if(
chù
->
chù_id
 == 0) {

374 
	`pci_i2c_wrôe
(
chù
, 0x50, 0x9f, 0x07);

375 
	`pci_i2c_wrôe
(
chù
, 0x52, 0x9f, 0x07);

376 
	`pci_i2c_wrôe
(
chù
, 0x54, 0x9f, 0x07);

377 
	`pci_i2c_wrôe
(
chù
, 0x56, 0x9f, 0x07);

381 
	}
}

385 
	$mpb_›î©i⁄
(
dvm_chù_t
 *
chù
, 
u32
 
addr
,u32 *
d©a
,u32 
mode
)

387 
u32
 
ªg_vÆue
;

388 
u32
 
timeout
 = 1000;

390 
mode
)

392 
MPB_READ_MODE
:

393 (
chù
->
io_›
->
	`chù_ªad32
(chù, 
MPB_CMD_REG
)>>31Ë&& (
timeout
--));

394 if(!
timeout
) {

395 
	`TW_DBG
(
TW_DBG_ERR
, "ªadádd∏0x%03xÅimeout\n", 
addr
);

397 
ªg_vÆue
 = ((1<<25)|(
mode
<<24)|(
addr
 << 2));

399 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MPB_CMD_REG
, 
ªg_vÆue
);

400 
timeout
 = 1000;

401 ((
chù
->
io_›
->
	`chù_ªad32
(chù, 
MPB_CMD_REG
))>>31Ë&& (
timeout
--));

402 if(!
timeout
) {

403 
	`TW_DBG
(
TW_DBG_ERR
, "ªadádd∏0x%03xÅimeout\n", 
addr
);

405 *
d©a
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
MPB_DATA_REG
);

407 
MPB_WRITE_MODE
:

408 (
chù
->
io_›
->
	`chù_ªad32
(chù, 
MPB_CMD_REG
)>>31Ë&& (
timeout
--));

409 if(!
timeout
) {

410 
	`TW_DBG
(
TW_DBG_ERR
, "wrôêadd∏0x%03xÅimeout\n", 
addr
);

412 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MPB_DATA_REG
, *
d©a
);

413 
ªg_vÆue
 = ((1<<25)|(
mode
<<24)|(
addr
 << 2));

415 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MPB_CMD_REG
, 
ªg_vÆue
);

418 
	}
}

420 
	$mpb_wrôe
(
dvm_chù_t
 *
chù
, 
u32
 
addr
,u32 
d©a
)

422 #ifde‡
PLATFORM_FPGA_155


426 
	`mpb_›î©i⁄
(
chù
, 
addr
,&
d©a
,
MPB_WRITE_MODE
);

427 
	}
}

429 
u32
 
	$mpb_ªad
(
dvm_chù_t
 *
chù
, 
u32
 
addr
)

431 
u32
 
d©a
;

433 
	`mpb_›î©i⁄
(
chù
, 
addr
,&
d©a
,
MPB_READ_MODE
);

434  
d©a
;

435 
	}
}

	@../../tw5864/tw5864/ddr_burst_interface.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 #unde‡
DDR_BURST_INTERFACE_DEBUG


5 
	$ddr_bur°_öãrÁ˚_ªg_öô
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
)

7 if(
bur°_öãrÁ˚
 !
NULL
){

8 
bur°_öãrÁ˚
->
∑ge_mode_ªg_vÆue
.
vÆue
 = 0;

9 
bur°_öãrÁ˚
->
ac˚ss_∑ge_mode_ªg_off£t
 = 
MPI_ACCESS_PAGE_MODE_REG_OFFSET
;

10 
bur°_öãrÁ˚
->
cmd_°©us_ªg_vÆue
.
vÆue
 = 0;

11 
bur°_öãrÁ˚
->
bur°_cmd_°©us_ªg_off£t
 = 
MPI_CMD_STATUS_REG_OFFSET
;

12 
bur°_öãrÁ˚
->
ddr_ba£_addr_ªg_vÆue
.
vÆue
 = 0;

13 
bur°_öãrÁ˚
->
bur°_ddr_addr_ªg_off£t
 = 
MPI_BURST_DDR_ADDR_REG_OFFSET
;

14 
bur°_öãrÁ˚
->
§am_ba£_addr_ªg_vÆue
.
vÆue
 = 0;

15 
bur°_öãrÁ˚
->
bur°_§am_addr_ªg_off£t
 = 
MPI_BURST_SRAM_ADDR_REG_OFFSET
;

17 
	}
}

19 
	$ddr_bur°_öãrÁ˚_ªg_ª£t
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
)

21 if(
bur°_öãrÁ˚
 !
NULL
){

22 
bur°_öãrÁ˚
->
∑ge_mode_ªg_vÆue
.
vÆue
 = 0;

23 
bur°_öãrÁ˚
->
cmd_°©us_ªg_vÆue
.
vÆue
 = 0;

24 
bur°_öãrÁ˚
->
ddr_ba£_addr_ªg_vÆue
.
vÆue
 = 0;

25 
bur°_öãrÁ˚
->
§am_ba£_addr_ªg_vÆue
.
vÆue
 = 0;

27 
	}
}

29 
	$ddr_bur°_öãrÁ˚_ªg_gë_∑ge_mode_ªg
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
dvm_chù_t
 *
chù
)

31 if((
bur°_öãrÁ˚
!=
NULL
Ë&& (
chù
!=NULL)){

32 
bur°_öãrÁ˚
->
∑ge_mode_ªg_vÆue
.
vÆue
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, bur°_öãrÁ˚->
ac˚ss_∑ge_mode_ªg_off£t
);

34 
	}
}

36 
	$ddr_bur°_öãrÁ˚_ªg_upd©e_∑ge_mode_ªg
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
dvm_chù_t
 *
chù
)

38 if((
bur°_öãrÁ˚
!=
NULL
Ë&& (
chù
!=NULL)){

39 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
bur°_öãrÁ˚
->
ac˚ss_∑ge_mode_ªg_off£t
, bur°_öãrÁ˚->
∑ge_mode_ªg_vÆue
.
vÆue
);

40 #ifde‡ 
DDR_BURST_INTERFACE_DEBUG


41 
	`¥ötk
("%s.%d:%x=0x%08x\n", 
__FUNCTION__
, 
__LINE__
, 
bur°_öãrÁ˚
->
ac˚ss_∑ge_mode_ªg_off£t
, 
chù
->
io_›
->
	`chù_ªad32
(chù, bur°_öãrÁ˚->
∑ge_mode_ªg_vÆue
.
vÆue
));

44 
	}
}

46 
	$ddr_bur°_öãrÁ˚_ªg_gë_bur°_öãrÁ˚_∑øm
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
dvm_chù_t
 *
chù
)

48 if((
bur°_öãrÁ˚
!=
NULL
Ë&& (
chù
!=NULL)){

49 
bur°_öãrÁ˚
->
cmd_°©us_ªg_vÆue
.
vÆue
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, bur°_öãrÁ˚->
bur°_cmd_°©us_ªg_off£t
);

50 
bur°_öãrÁ˚
->
ddr_ba£_addr_ªg_vÆue
.
vÆue
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, bur°_öãrÁ˚->
bur°_ddr_addr_ªg_off£t
);

51 
bur°_öãrÁ˚
->
§am_ba£_addr_ªg_vÆue
.
vÆue
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, bur°_öãrÁ˚->
bur°_§am_addr_ªg_off£t
);

53 
	}
}

55 
	$ddr_bur°_öãrÁ˚_ªg_upd©e_bur°_öãrÁ˚_∑øm
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
dvm_chù_t
 *
chù
)

57 if((
bur°_öãrÁ˚
!=
NULL
Ë&& (
chù
!=NULL)){

58 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
bur°_öãrÁ˚
->
bur°_ddr_addr_ªg_off£t
, bur°_öãrÁ˚->
ddr_ba£_addr_ªg_vÆue
.
vÆue
);

59 #ifde‡ 
DDR_BURST_INTERFACE_DEBUG


60 
	`¥ötk
("%s.%d:%x=0x%08x\n", 
__FUNCTION__
, 
__LINE__
, 
bur°_öãrÁ˚
->
bur°_ddr_addr_ªg_off£t
, 
chù
->
io_›
->
	`chù_ªad32
(chip, burst_interface->burst_ddr_addr_reg_offset));

62 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
bur°_öãrÁ˚
->
bur°_§am_addr_ªg_off£t
, bur°_öãrÁ˚->
§am_ba£_addr_ªg_vÆue
.
vÆue
);

63 #ifde‡ 
DDR_BURST_INTERFACE_DEBUG


64 
	`¥ötk
("%s.%d:%x=0x%08x\n", 
__FUNCTION__
, 
__LINE__
, 
bur°_öãrÁ˚
->
bur°_§am_addr_ªg_off£t
, 
chù
->
io_›
->
	`chù_ªad32
(chip, burst_interface->burst_sram_addr_reg_offset));

66 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
bur°_öãrÁ˚
->
bur°_cmd_°©us_ªg_off£t
, bur°_öãrÁ˚->
cmd_°©us_ªg_vÆue
.
vÆue
);

67 #ifde‡ 
DDR_BURST_INTERFACE_DEBUG


68 
	`¥ötk
("%s.%d:%x=0x%08x\n", 
__FUNCTION__
, 
__LINE__
, 
bur°_öãrÁ˚
->
bur°_cmd_°©us_ªg_off£t
, 
chù
->
io_›
->
	`chù_ªad32
(chip, burst_interface->burst_cmd_status_reg_offset));

70 
bur°_öãrÁ˚
->
›
->
	`°¨t_ddr_bur°
(burst_interface);

71 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
bur°_öãrÁ˚
->
bur°_cmd_°©us_ªg_off£t
, bur°_öãrÁ˚->
cmd_°©us_ªg_vÆue
.
vÆue
);

72 #ifde‡ 
DDR_BURST_INTERFACE_DEBUG


73 
	`¥ötk
("%s.%d:%x=0x%08x\n", 
__FUNCTION__
, 
__LINE__
, 
bur°_öãrÁ˚
->
bur°_cmd_°©us_ªg_off£t
, 
chù
->
io_›
->
	`chù_ªad32
(chip, burst_interface->burst_cmd_status_reg_offset));

76 
	}
}

78 
	$ddr_bur°_öãrÁ˚_ªg_íabÀ_ac˚ss_§am_block
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
)

80 if(
bur°_öãrÁ˚
 !
NULL
){

81 
bur°_öãrÁ˚
->
∑ge_mode_ªg_vÆue
.
bô_vÆue
.
bur°_mode_í
 = 1;

83 
	}
}

85 
	$ddr_bur°_öãrÁ˚_ªg_íabÀ_ac˚ss_ddr_block
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
)

87 if(
bur°_öãrÁ˚
 !
NULL
){

88 
bur°_öãrÁ˚
->
∑ge_mode_ªg_vÆue
.
bô_vÆue
.
bur°_mode_í
 = 0;

90 
	}
}

92 
	$ddr_bur°_öãrÁ˚_ªg_£À˘_ddr_A
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
)

94 if(
bur°_öãrÁ˚
 !
NULL
){

95 
bur°_öãrÁ˚
->
∑ge_mode_ªg_vÆue
.
bô_vÆue
.
ddr_a_b_£À˘
 = 0;

97 
	}
}

99 
	$ddr_bur°_öãrÁ˚_ªg_£À˘_ddr_B
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
)

101 if(
bur°_öãrÁ˚
 !
NULL
){

102 
bur°_öãrÁ˚
->
∑ge_mode_ªg_vÆue
.
bô_vÆue
.
ddr_a_b_£À˘
 = 1;

104 
	}
}

106 
	$ddr_bur°_öãrÁ˚_ªg_íabÀ_ªad_4
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
)

108 if(
bur°_öãrÁ˚
 !
NULL
){

109 
bur°_öãrÁ˚
->
∑ge_mode_ªg_vÆue
.
bô_vÆue
.
mpi_bur°_ªad_4_íabÀ
 = 1;

111 
	}
}

113 
	$ddr_bur°_öãrÁ˚_ªg_dißbÀ_ªad_4
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
)

115 if(
bur°_öãrÁ˚
 !
NULL
){

116 
bur°_öãrÁ˚
->
∑ge_mode_ªg_vÆue
.
bô_vÆue
.
mpi_bur°_ªad_4_íabÀ
 = 0;

118 
	}
}

120 
	$ddr_bur°_öãrÁ˚_ªg_£t_ddr_∑ge_numbî
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
∑ge_id
)

122 if(
bur°_öãrÁ˚
 !
NULL
){

123 
bur°_öãrÁ˚
->
∑ge_mode_ªg_vÆue
.
bô_vÆue
.
∑ge_id
 = (page_id&0xff);

125 
	}
}

127 
	$ddr_bur°_öãrÁ˚_ªg_£t_ddr_bur°_∑øm
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
bur°_Àn
, 
dú
)

129 if(
bur°_öãrÁ˚
 !
NULL
){

130 if(
dú
 =
TW_READ
){

131 
bur°_öãrÁ˚
->
cmd_°©us_ªg_vÆue
.
bô_vÆue
.
bur°_dú
 = 0;

133 
bur°_öãrÁ˚
->
cmd_°©us_ªg_vÆue
.
bô_vÆue
.
bur°_dú
 = 1;

135 
bur°_Àn
 += 3;

136 
bur°_Àn
 >>= 2;

137 
bur°_Àn
 <<= 2;

138 
bur°_öãrÁ˚
->
cmd_°©us_ªg_vÆue
.
bô_vÆue
.
bur°_Àn
 = burst_len;

140 
	}
}

142 
	$ddr_bur°_öãrÁ˚_ªg_°¨t_ddr_bur°
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
)

144 if(
bur°_öãrÁ˚
 !
NULL
){

145 
bur°_öãrÁ˚
->
cmd_°©us_ªg_vÆue
.
bô_vÆue
.
bur°_åiggî
 = 1;

147 
	}
}

149 
	$ddr_bur°_öãrÁ˚_ªg_öt_íabÀ
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
ddr_sögÀ_ac˚ss_îr_öt_íabÀ
, 
ddr_bur°_ac˚ss_îr_öt_íabÀ
, 
bur°_íd_öt_íabÀ
)

151 if(
bur°_öãrÁ˚
 !
NULL
){

152 
bur°_öãrÁ˚
->
cmd_°©us_ªg_vÆue
.
bô_vÆue
.
ddr_sögÀ_ac˚ss_îr_öt_íabÀ
 = (ddr_single_access_err_int_enable&0x1);

153 
bur°_öãrÁ˚
->
cmd_°©us_ªg_vÆue
.
bô_vÆue
.
ddr_bur°_ac˚ss_îr_öt_íabÀ
 = (ddr_burst_access_err_int_enable&0x1);

154 
bur°_öãrÁ˚
->
cmd_°©us_ªg_vÆue
.
bô_vÆue
.
bur°_íd_öt_íabÀ
 = (burst_end_int_enable&0x1);

156 
	}
}

158 
	$ddr_bur°_öãrÁ˚_ªg_gë_sögÀ_ac˚ss_îr_Êag
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
)

160  
bur°_öãrÁ˚
->
cmd_°©us_ªg_vÆue
.
bô_vÆue
.
ddr_sögÀ_ac˚ss_îr_Êag
;

161 
	}
}

163 
	$ddr_bur°_öãrÁ˚_ªg_gë_bur°_ac˚ss_îr_Êag
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
)

165  
bur°_öãrÁ˚
->
cmd_°©us_ªg_vÆue
.
bô_vÆue
.
ddr_bur°_îr_Êag
;

166 
	}
}

168 
	$ddr_bur°_öãrÁ˚_ªg_gë_bur°_busy_Êag
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
)

170  
bur°_öãrÁ˚
->
cmd_°©us_ªg_vÆue
.
bô_vÆue
.
ddr_bur°_busy_Êag
;

171 
	}
}

173 
	$ddr_bur°_öãrÁ˚_ªg_gë_bur°_íd_Êag
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
)

175  
bur°_öãrÁ˚
->
cmd_°©us_ªg_vÆue
.
bô_vÆue
.
ddr_bur°_íd_Êag
;

176 
	}
}

178 
	$ddr_bur°_öãrÁ˚_ªg_˛ór_bur°_íd_Êag
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
)

180 if(
bur°_öãrÁ˚
 !
NULL
){

181 
bur°_öãrÁ˚
->
cmd_°©us_ªg_vÆue
.
bô_vÆue
.
ddr_bur°_íd_Êag
 = 1;

183 
	}
}

185 
	$ddr_bur°_öãrÁ˚_ªg_£t_bur°_ddr_addr
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
u32
 
addr_off£t
)

187 if(
bur°_öãrÁ˚
 !
NULL
){

188 
bur°_öãrÁ˚
->
ddr_ba£_addr_ªg_vÆue
.
bô_vÆue
.
ddr_ba£_addr
 = 
addr_off£t
&0x0fffffff;

190 
	}
}

192 
	$ddr_bur°_öãrÁ˚_ªg_£t_bur°_§am_addr
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
u32
 
addr_off£t
)

194 if(
bur°_öãrÁ˚
 !
NULL
){

195 
bur°_öãrÁ˚
->
§am_ba£_addr_ªg_vÆue
.
bô_vÆue
.
§am_ba£_addr
 = 
addr_off£t
&0x0000ffff;

197 
	}
}

199 
	$ddr_bur°_öãrÁ˚_ªg_pio_ho°_to_§am_wrôe
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
d¥am_∑ge_node_t
 *
d¥am_∑ge
, 
u32
 *
ho°_íd_addr
, 
Àn
)

201 
ªt
 = 0;

202 if((
bur°_öãrÁ˚
!=
NULL
Ë&& (
d¥am_∑ge
!=NULL)){

203 
dvm_chù_t
 *
chù
;

204 
u32
 
d¥am_∑ge_ba£
;

205 
i
;

206 
Êags
;

207 
	`loˇl_úq_ßve
(
Êags
);

208 
chù
 = 
bur°_öãrÁ˚
->chip;

209 
bur°_öãrÁ˚
->
›
->
	`gë_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

210 
bur°_öãrÁ˚
->
›
->
	`íabÀ_ac˚ss_§am_block
(burst_interface);

211 
bur°_öãrÁ˚
->
›
->
	`upd©e_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

213 
d¥am_∑ge_ba£
 = 
d¥am_∑ge
->
›
->
	`gë_∑ge_ba£
(dpram_page);

214 
ªt
 = 
Àn
;

215 
Àn
 += 3;

216 
Àn
 >>= 2;

217 
i
=0; i<
Àn
; i++){

218 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
d¥am_∑ge_ba£
, 
ho°_íd_addr
[
i
]);

219 
d¥am_∑ge_ba£
 += 4;

221 
	`loˇl_úq_ª°‹e
(
Êags
);

223  
ªt
;

224 
	}
}

226 
	$ddr_bur°_öãrÁ˚_ªg_dma_ho°_to_§am_wrôe
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
d¥am_∑ge_node_t
 *
d¥am_∑ge
, 
dma_addr_t
 
ho°_íd_addr
, 
Àn
)

228 
ªt
 = 0;

229 if((
bur°_öãrÁ˚
!=
NULL
Ë&& (
d¥am_∑ge
!=NULL)){

230 
dvm_chù_t
 *
chù
;

231 
dma_addr_t
 
§c
, 
de°
;

232 
Êags
;

233 
	`loˇl_úq_ßve
(
Êags
);

234 
chù
 = 
bur°_öãrÁ˚
->chip;

235 
bur°_öãrÁ˚
->
›
->
	`gë_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

236 
bur°_öãrÁ˚
->
›
->
	`íabÀ_ac˚ss_§am_block
(burst_interface);

237 
bur°_öãrÁ˚
->
›
->
	`upd©e_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

239 
de°
 = 
d¥am_∑ge
->
›
->
	`gë_∑ge_ba£
(dpram_page);

240 
de°
 +
chù
->
∑_ªgs
;

241 
§c
 = 
ho°_íd_addr
;

242 
ªt
 = 
Àn
;

243 
Àn
 += 3;

244 
Àn
 >>= 2;

245 
Àn
 <<= 2;

246 
	`Âga_dma_ª˚ive
((
u32
)
§c
, (u32)
de°
, 
Àn
);

247 
	`loˇl_úq_ª°‹e
(
Êags
);

249  
ªt
;

250 
	}
}

252 
	$ddr_bur°_öãrÁ˚_ªg_pio_ho°_to_§am_ªad
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
d¥am_∑ge_node_t
 *
d¥am_∑ge
, 
u32
 *
ho°_íd_addr
, 
Àn
)

254 
ªt
 = 0;

255 if((
bur°_öãrÁ˚
!=
NULL
Ë&& (
d¥am_∑ge
!=NULL)){

256 
dvm_chù_t
 *
chù
;

257 
u32
 
d¥am_∑ge_ba£
;

258 
i
;

259 
Êags
;

260 
	`loˇl_úq_ßve
(
Êags
);

261 
chù
 = 
bur°_öãrÁ˚
->chip;

262 
bur°_öãrÁ˚
->
›
->
	`gë_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

263 
bur°_öãrÁ˚
->
›
->
	`íabÀ_ac˚ss_§am_block
(burst_interface);

264 
bur°_öãrÁ˚
->
›
->
	`upd©e_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

266 
d¥am_∑ge_ba£
 = 
d¥am_∑ge
->
›
->
	`gë_∑ge_ba£
(dpram_page);

267 
ªt
 = 
Àn
;

268 
Àn
 += 3;

269 
Àn
 >>= 2;

270 
i
=0; i<
Àn
; i++){

271 
ho°_íd_addr
[
i
] = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
d¥am_∑ge_ba£
);

272 
d¥am_∑ge_ba£
 += 4;

274 
	`loˇl_úq_ª°‹e
(
Êags
);

276  
ªt
;

277 
	}
}

279 
	$ddr_bur°_öãrÁ˚_ªg_dma_ho°_to_§am_ªad
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
d¥am_∑ge_node_t
 *
d¥am_∑ge
, 
dma_addr_t
 
ho°_íd_addr
, 
Àn
)

281 
ªt
=0;

282 if((
bur°_öãrÁ˚
!=
NULL
Ë&& (
d¥am_∑ge
!=NULL)){

283 
dvm_chù_t
 *
chù
;

284 
dma_addr_t
 
§c
, 
de°
;

285 
Êags
;

286 
	`loˇl_úq_ßve
(
Êags
);

287 
chù
 = 
bur°_öãrÁ˚
->chip;

288 
bur°_öãrÁ˚
->
›
->
	`gë_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

289 
bur°_öãrÁ˚
->
›
->
	`íabÀ_ac˚ss_§am_block
(burst_interface);

290 
bur°_öãrÁ˚
->
›
->
	`upd©e_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

292 
§c
 = 
d¥am_∑ge
->
›
->
	`gë_∑ge_ba£
(dpram_page);

293 
§c
 +
chù
->
∑_ªgs
;

294 
de°
 = 
ho°_íd_addr
;

295 
ªt
 = 
Àn
;

296 
Àn
 += 3;

297 
Àn
 >>= 2;

298 
Àn
 <<= 2;

299 
	`Âga_dma_ª˚ive
((
u32
)
§c
, (u32)
de°
, 
Àn
);

300 
	`loˇl_úq_ª°‹e
(
Êags
);

307  
ªt
;

308 
	}
}

310 
	$ddr_bur°_öãrÁ˚_ªg_°¨t_block_å™s„r_‰om_§am_to_ddr
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
d¥am_∑ge_node_t
 *
d¥am_∑ge
, 
u32
 
ddr_íd_addr
, 
∑ge_id
, 
Àn
, 
ddr_chù_a_‹_b
)

312 
cou¡
, 
esˇ≥
;

314 
cou¡
 = 
esˇ≥
 = 0;

315 if((
bur°_öãrÁ˚
!=
NULL
Ë&& (
d¥am_∑ge
!=NULL)){

316 
dvm_chù_t
 *
chù
;

317 
u32
 
d¥am_∑ge_ba£
;

318 
Êags
;

319 
	`loˇl_úq_ßve
(
Êags
);

320 
chù
 = 
bur°_öãrÁ˚
->chip;

321 
bur°_öãrÁ˚
->
›
->
	`gë_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

322 
bur°_öãrÁ˚
->
›
->
	`íabÀ_ac˚ss_§am_block
(burst_interface);

323 
bur°_öãrÁ˚
->
›
->
	`upd©e_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

325 
cou¡
 = 
esˇ≥
 = 0;

326 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

327 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_busy_Êag
(burst_interface)){

329 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

330 
cou¡
++;

331 if(
cou¡
 > 
BURST_INTERFACE_CHECKUP_TIMEOUT
){

332 
	`¥ötk
("%s.%d: c™'àac˚s†bur° i¡îÁ˚\n", 
__FUNCTION__
, 
__LINE__
);

333 
esˇ≥
 = 1;

338 if(!
esˇ≥
){

339 
bur°_öãrÁ˚
->
›
->
	`£t_ddr_∑ge_numbî
(bur°_öãrÁ˚, 
∑ge_id
);

340 if(
DDR_CHIP_B
 =
ddr_chù_a_‹_b
){

341 
bur°_öãrÁ˚
->
›
->
	`£À˘_ddr_B
(burst_interface);

343 
bur°_öãrÁ˚
->
›
->
	`£À˘_ddr_A
(burst_interface);

345 #ifde‡ 
POWERPC_PLATFORM


346 #ifde‡ 
POWERPC_PCI_PLATFORM


347 
bur°_öãrÁ˚
->
›
->
	`íabÀ_ªad_4
(burst_interface);

350 #ifde‡
ARM_PLATFORM


351 
bur°_öãrÁ˚
->
›
->
	`dißbÀ_ªad_4
(burst_interface);

354 
bur°_öãrÁ˚
->
›
->
	`upd©e_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

356 
d¥am_∑ge_ba£
 = 
d¥am_∑ge
->
›
->
	`gë_∑ge_off£t
(dpram_page);

357 
bur°_öãrÁ˚
->
›
->
	`£t_bur°_§am_addr
(bur°_öãrÁ˚, 
d¥am_∑ge_ba£
);

358 
bur°_öãrÁ˚
->
›
->
	`£t_bur°_ddr_addr
(bur°_öãrÁ˚, 
ddr_íd_addr
);

359 
bur°_öãrÁ˚
->
›
->
	`öt_íabÀ
(burst_interface, 0, 0, 0);

360 
bur°_öãrÁ˚
->
›
->
	`£t_ddr_bur°_∑øm
(bur°_öãrÁ˚, 
Àn
, 
TW_WRITE
);

361 
bur°_öãrÁ˚
->
›
->
	`upd©e_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

363 
cou¡
 = 
esˇ≥
 = 0;

364 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

365 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_íd_Êag
(burst_interface) == 0){

367 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

368 
cou¡
++;

369 if(
cou¡
 > 
BURST_INTERFACE_CHECKUP_TIMEOUT
){

370 
	`¥ötk
("%s.%d: c™'àac˚s†bur° i¡îÁ˚\n", 
__FUNCTION__
, 
__LINE__
);

371 
esˇ≥
 = 1;

376 if(
esˇ≥
 == 0){

377 
bur°_öãrÁ˚
->
›
->
	`˛ór_bur°_íd_Êag
(burst_interface);

378 
bur°_öãrÁ˚
->
›
->
	`upd©e_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

381 
	`loˇl_úq_ª°‹e
(
Êags
);

382 
bur°_öãrÁ˚
->
›
->
	`˛ór_bur°_d⁄e
(burst_interface);

384  
esˇ≥
;

385 
	}
}

387 
	$ddr_bur°_öãrÁ˚_ªg_°¨t_n⁄block_å™s„r_‰om_§am_to_ddr
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
d¥am_∑ge_node_t
 *
d¥am_∑ge
, 
u32
 
ddr_íd_addr
, 
∑ge_id
, 
Àn
, 
ddr_chù_a_‹_b
)

389 
cou¡
, 
esˇ≥
;

391 
cou¡
 = 
esˇ≥
 = 0;

392 if((
bur°_öãrÁ˚
!=
NULL
Ë&& (
d¥am_∑ge
!=NULL)){

393 
dvm_chù_t
 *
chù
;

394 
u32
 
d¥am_∑ge_ba£
;

395 
Êags
;

396 
cou¡
, 
esˇ≥
;

398 
	`loˇl_úq_ßve
(
Êags
);

399 
chù
 = 
bur°_öãrÁ˚
->chip;

400 
bur°_öãrÁ˚
->
›
->
	`gë_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

401 
bur°_öãrÁ˚
->
›
->
	`íabÀ_ac˚ss_§am_block
(burst_interface);

402 
bur°_öãrÁ˚
->
›
->
	`upd©e_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

404 
cou¡
 = 
esˇ≥
 = 0;

405 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

406 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_busy_Êag
(burst_interface)){

408 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

409 
cou¡
++;

410 if(
cou¡
 > 
BURST_INTERFACE_CHECKUP_TIMEOUT
){

411 
	`¥ötk
("%s.%d: c™'àac˚s†bur° i¡îÁ˚\n", 
__FUNCTION__
, 
__LINE__
);

412 
esˇ≥
 = 1;

417 if(!
esˇ≥
){

418 
bur°_öãrÁ˚
->
›
->
	`£t_ddr_∑ge_numbî
(bur°_öãrÁ˚, 
∑ge_id
);

419 if(
DDR_CHIP_B
 =
ddr_chù_a_‹_b
){

420 
bur°_öãrÁ˚
->
›
->
	`£À˘_ddr_B
(burst_interface);

422 
bur°_öãrÁ˚
->
›
->
	`£À˘_ddr_A
(burst_interface);

424 #ifde‡ 
POWERPC_PLATFORM


425 #ifde‡ 
POWERPC_PCI_PLATFORM


426 
bur°_öãrÁ˚
->
›
->
	`íabÀ_ªad_4
(burst_interface);

429 #ifde‡
ARM_PLATFORM


430 
bur°_öãrÁ˚
->
›
->
	`dißbÀ_ªad_4
(burst_interface);

433 
bur°_öãrÁ˚
->
›
->
	`upd©e_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

435 
d¥am_∑ge_ba£
 = 
d¥am_∑ge
->
›
->
	`gë_∑ge_off£t
(dpram_page);

436 
bur°_öãrÁ˚
->
›
->
	`£t_bur°_§am_addr
(bur°_öãrÁ˚, 
d¥am_∑ge_ba£
);

437 
bur°_öãrÁ˚
->
›
->
	`£t_bur°_ddr_addr
(bur°_öãrÁ˚, 
ddr_íd_addr
);

438 
bur°_öãrÁ˚
->
›
->
	`öt_íabÀ
(burst_interface, 0, 0, 1);

439 
bur°_öãrÁ˚
->
›
->
	`£t_ddr_bur°_∑øm
(bur°_öãrÁ˚, 
Àn
, 
TW_WRITE
);

440 
bur°_öãrÁ˚
->
›
->
	`upd©e_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

442 
	`loˇl_úq_ª°‹e
(
Êags
);

444  
esˇ≥
;

445 
	}
}

447 
	$ddr_bur°_öãrÁ˚_ªg_°¨t_block_å™s„r_‰om_ddr_to_§am
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
d¥am_∑ge_node_t
 *
d¥am_∑ge
, 
u32
 
ddr_íd_addr
, 
∑ge_id
, 
Àn
, 
ddr_chù_a_‹_b
)

449 
cou¡
, 
esˇ≥
;

453 
cou¡
 = 
esˇ≥
 = 0;

454 if((
bur°_öãrÁ˚
!=
NULL
Ë&& (
d¥am_∑ge
!=NULL)){

455 
dvm_chù_t
 *
chù
;

456 
u32
 
d¥am_∑ge_ba£
;

457 
Êags
;

459 
	`loˇl_úq_ßve
(
Êags
);

460 
chù
 = 
bur°_öãrÁ˚
->chip;

461 
bur°_öãrÁ˚
->
›
->
	`gë_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

462 
bur°_öãrÁ˚
->
›
->
	`íabÀ_ac˚ss_§am_block
(burst_interface);

463 
bur°_öãrÁ˚
->
›
->
	`upd©e_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

464 
cou¡
 = 
esˇ≥
 = 0;

465 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

466 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_busy_Êag
(burst_interface)){

468 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

469 
cou¡
++;

470 if(
cou¡
 > 
BURST_INTERFACE_CHECKUP_TIMEOUT
){

471 
	`¥ötk
("%s.%d: c™'àac˚s†bur° i¡îÁ˚\n", 
__FUNCTION__
, 
__LINE__
);

472 
esˇ≥
 = 1;

477 if(!
esˇ≥
){

478 
bur°_öãrÁ˚
->
›
->
	`£t_ddr_∑ge_numbî
(bur°_öãrÁ˚, 
∑ge_id
);

479 if(
DDR_CHIP_B
 =
ddr_chù_a_‹_b
){

480 
bur°_öãrÁ˚
->
›
->
	`£À˘_ddr_B
(burst_interface);

482 
bur°_öãrÁ˚
->
›
->
	`£À˘_ddr_A
(burst_interface);

484 #ifde‡ 
POWERPC_PLATFORM


485 #ifde‡ 
POWERPC_PCI_PLATFORM


486 
bur°_öãrÁ˚
->
›
->
	`íabÀ_ªad_4
(burst_interface);

489 #ifde‡
ARM_PLATFORM


490 
bur°_öãrÁ˚
->
›
->
	`dißbÀ_ªad_4
(burst_interface);

493 
bur°_öãrÁ˚
->
›
->
	`upd©e_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

495 
d¥am_∑ge_ba£
 = 
d¥am_∑ge
->
›
->
	`gë_∑ge_off£t
(dpram_page);

496 
bur°_öãrÁ˚
->
›
->
	`£t_bur°_§am_addr
(bur°_öãrÁ˚, 
d¥am_∑ge_ba£
);

497 
bur°_öãrÁ˚
->
›
->
	`£t_bur°_ddr_addr
(bur°_öãrÁ˚, 
ddr_íd_addr
);

498 
bur°_öãrÁ˚
->
›
->
	`öt_íabÀ
(burst_interface, 0, 0, 0);

499 
bur°_öãrÁ˚
->
›
->
	`£t_ddr_bur°_∑øm
(bur°_öãrÁ˚, 
Àn
, 
TW_READ
);

500 
bur°_öãrÁ˚
->
›
->
	`upd©e_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

501 
cou¡
 = 
esˇ≥
 = 0;

502 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

503 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_íd_Êag
(burst_interface) == 0){

505 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

506 
cou¡
++;

507 if(
cou¡
 > 
BURST_INTERFACE_CHECKUP_TIMEOUT
){

508 
	`¥ötk
("%s.%d: c™'àac˚s†bur° i¡îÁ˚\n", 
__FUNCTION__
, 
__LINE__
);

509 
esˇ≥
 = 1;

514 if(
esˇ≥
 == 0){

515 
bur°_öãrÁ˚
->
›
->
	`˛ór_bur°_íd_Êag
(burst_interface);

516 
bur°_öãrÁ˚
->
›
->
	`upd©e_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

519 
	`loˇl_úq_ª°‹e
(
Êags
);

520 
bur°_öãrÁ˚
->
›
->
	`˛ór_bur°_d⁄e
(burst_interface);

522  
esˇ≥
;

523 
	}
}

525 
	$ddr_bur°_öãrÁ˚_ªg_°¨t_n⁄block_å™s„r_‰om_ddr_to_§am
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
d¥am_∑ge_node_t
 *
d¥am_∑ge
, 
u32
 
ddr_íd_addr
, 
∑ge_id
, 
Àn
, 
ddr_chù_a_‹_b
)

527 
cou¡
, 
esˇ≥
;

529 
cou¡
 = 
esˇ≥
 = 0;

530 if((
bur°_öãrÁ˚
!=
NULL
Ë&& (
d¥am_∑ge
!=NULL)){

531 
dvm_chù_t
 *
chù
;

532 
u32
 
d¥am_∑ge_ba£
;

533 
Êags
;

534 
	`loˇl_úq_ßve
(
Êags
);

535 
chù
 = 
bur°_öãrÁ˚
->chip;

536 
bur°_öãrÁ˚
->
›
->
	`gë_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

537 
bur°_öãrÁ˚
->
›
->
	`íabÀ_ac˚ss_§am_block
(burst_interface);

538 
bur°_öãrÁ˚
->
›
->
	`upd©e_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

541 
cou¡
 = 
esˇ≥
 = 0;

542 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

543 
bur°_öãrÁ˚
->
cmd_°©us_ªg_vÆue
.
bô_vÆue
.
ddr_bur°_busy_Êag
 || bur°_öãrÁ˚->cmd_°©us_ªg_vÆue.bô_vÆue.
ddr_sögÀ_ac˚ss_busy_Êag
){

545 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

546 
cou¡
++;

547 if(
cou¡
 > 
BURST_INTERFACE_CHECKUP_TIMEOUT
){

548 
	`¥ötk
("%s.%d: c™'àac˚s†bur° i¡îÁ˚\n", 
__FUNCTION__
, 
__LINE__
);

549 
esˇ≥
 = 1;

554 if(!
esˇ≥
){

555 
bur°_öãrÁ˚
->
›
->
	`£t_ddr_∑ge_numbî
(bur°_öãrÁ˚, 
∑ge_id
);

556 if(
DDR_CHIP_B
 =
ddr_chù_a_‹_b
){

557 
bur°_öãrÁ˚
->
›
->
	`£À˘_ddr_B
(burst_interface);

559 
bur°_öãrÁ˚
->
›
->
	`£À˘_ddr_A
(burst_interface);

561 #ifde‡ 
POWERPC_PLATFORM


562 #ifde‡ 
POWERPC_PCI_PLATFORM


563 
bur°_öãrÁ˚
->
›
->
	`íabÀ_ªad_4
(burst_interface);

566 #ifde‡
ARM_PLATFORM


567 
bur°_öãrÁ˚
->
›
->
	`dißbÀ_ªad_4
(burst_interface);

570 
bur°_öãrÁ˚
->
›
->
	`upd©e_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

572 
d¥am_∑ge_ba£
 = 
d¥am_∑ge
->
›
->
	`gë_∑ge_off£t
(dpram_page);

573 
bur°_öãrÁ˚
->
›
->
	`£t_bur°_§am_addr
(bur°_öãrÁ˚, 
d¥am_∑ge_ba£
);

574 
bur°_öãrÁ˚
->
›
->
	`£t_bur°_ddr_addr
(bur°_öãrÁ˚, 
ddr_íd_addr
);

575 
bur°_öãrÁ˚
->
›
->
	`öt_íabÀ
(burst_interface, 0, 0, 1);

576 
bur°_öãrÁ˚
->
›
->
	`£t_ddr_bur°_∑øm
(bur°_öãrÁ˚, 
Àn
, 
TW_READ
);

577 
bur°_öãrÁ˚
->
›
->
	`upd©e_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

579 
	`loˇl_úq_ª°‹e
(
Êags
);

581  
esˇ≥
;

582 
	}
}

584 
	$ddr_bur°_öãrÁ˚_ªg_˛ór_bur°_d⁄e
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
)

586 if(
bur°_öãrÁ˚
 !
NULL
){

587 
dvm_chù_t
 *
chù
;

588 
Êags
;

589 
	`loˇl_úq_ßve
(
Êags
);

590 
chù
 = 
bur°_öãrÁ˚
->chip;

591 
bur°_öãrÁ˚
->
›
->
	`gë_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

592 
bur°_öãrÁ˚
->
›
->
	`íabÀ_ac˚ss_§am_block
(burst_interface);

593 
bur°_öãrÁ˚
->
›
->
	`upd©e_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

595 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

596 
bur°_öãrÁ˚
->
›
->
	`˛ór_bur°_íd_Êag
(burst_interface);

597 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
bur°_öãrÁ˚
->
bur°_cmd_°©us_ªg_off£t
, bur°_öãrÁ˚->
cmd_°©us_ªg_vÆue
.
vÆue
);

598 
bur°_öãrÁ˚
->
›
->
	`gë_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

599 
	`loˇl_úq_ª°‹e
(
Êags
);

601 
	}
}

603 
ddr_bur°_öãrÁ˚_ªg_›î©i⁄
 
	gddr_bur°_öãrÁ˚_ªg_›
 = {

604 .
öô
 = 
ddr_bur°_öãrÁ˚_ªg_öô
,

605 .
	gª£t
 = 
ddr_bur°_öãrÁ˚_ªg_ª£t
,

606 .
	ggë_∑ge_mode_ªg
 = 
ddr_bur°_öãrÁ˚_ªg_gë_∑ge_mode_ªg
,

607 .
	gupd©e_∑ge_mode_ªg
 = 
ddr_bur°_öãrÁ˚_ªg_upd©e_∑ge_mode_ªg
,

608 .
	ggë_bur°_öãrÁ˚_∑øm
 = 
ddr_bur°_öãrÁ˚_ªg_gë_bur°_öãrÁ˚_∑øm
,

609 .
	gupd©e_bur°_öãrÁ˚_∑øm
 = 
ddr_bur°_öãrÁ˚_ªg_upd©e_bur°_öãrÁ˚_∑øm
,

611 .
	gíabÀ_ac˚ss_§am_block
 = 
ddr_bur°_öãrÁ˚_ªg_íabÀ_ac˚ss_§am_block
,

612 .
	gíabÀ_ac˚ss_ddr_block
 = 
ddr_bur°_öãrÁ˚_ªg_íabÀ_ac˚ss_ddr_block
,

613 .
	g£À˘_ddr_A
 = 
ddr_bur°_öãrÁ˚_ªg_£À˘_ddr_A
,

614 .
	g£À˘_ddr_B
 = 
ddr_bur°_öãrÁ˚_ªg_£À˘_ddr_B
,

615 .
	gíabÀ_ªad_4
 = 
ddr_bur°_öãrÁ˚_ªg_íabÀ_ªad_4
,

616 .
	gdißbÀ_ªad_4
 = 
ddr_bur°_öãrÁ˚_ªg_dißbÀ_ªad_4
,

617 .
	g£t_ddr_∑ge_numbî
 = 
ddr_bur°_öãrÁ˚_ªg_£t_ddr_∑ge_numbî
,

619 .
	g£t_ddr_bur°_∑øm
 = 
ddr_bur°_öãrÁ˚_ªg_£t_ddr_bur°_∑øm
,

620 .
	g°¨t_ddr_bur°
 = 
ddr_bur°_öãrÁ˚_ªg_°¨t_ddr_bur°
,

621 .
	göt_íabÀ
 = 
ddr_bur°_öãrÁ˚_ªg_öt_íabÀ
,

622 .
	ggë_sögÀ_ac˚ss_îr_Êag
 = 
ddr_bur°_öãrÁ˚_ªg_gë_sögÀ_ac˚ss_îr_Êag
,

623 .
	ggë_bur°_ac˚ss_îr_Êag
 = 
ddr_bur°_öãrÁ˚_ªg_gë_bur°_ac˚ss_îr_Êag
,

624 .
	ggë_bur°_busy_Êag
 = 
ddr_bur°_öãrÁ˚_ªg_gë_bur°_busy_Êag
,

625 .
	ggë_bur°_íd_Êag
 = 
ddr_bur°_öãrÁ˚_ªg_gë_bur°_íd_Êag
,

626 .
	g˛ór_bur°_íd_Êag
 = 
ddr_bur°_öãrÁ˚_ªg_˛ór_bur°_íd_Êag
,

627 .
	g£t_bur°_ddr_addr
 = 
ddr_bur°_öãrÁ˚_ªg_£t_bur°_ddr_addr
,

628 .
	g£t_bur°_§am_addr
 = 
ddr_bur°_öãrÁ˚_ªg_£t_bur°_§am_addr
,

630 .
	gpio_ho°_to_§am_wrôe
 = 
ddr_bur°_öãrÁ˚_ªg_pio_ho°_to_§am_wrôe
,

631 .
	gdma_ho°_to_§am_wrôe
 = 
ddr_bur°_öãrÁ˚_ªg_dma_ho°_to_§am_wrôe
,

632 .
	gpio_ho°_to_§am_ªad
 = 
ddr_bur°_öãrÁ˚_ªg_pio_ho°_to_§am_ªad
,

633 .
	gdma_ho°_to_§am_ªad
 = 
ddr_bur°_öãrÁ˚_ªg_dma_ho°_to_§am_ªad
,

635 .
	g°¨t_block_å™s„r_‰om_§am_to_ddr
 = 
ddr_bur°_öãrÁ˚_ªg_°¨t_block_å™s„r_‰om_§am_to_ddr
,

636 .
	g°¨t_n⁄block_å™s„r_‰om_§am_to_ddr
 = 
ddr_bur°_öãrÁ˚_ªg_°¨t_n⁄block_å™s„r_‰om_§am_to_ddr
,

637 .
	g°¨t_block_å™s„r_‰om_ddr_to_§am
 = 
ddr_bur°_öãrÁ˚_ªg_°¨t_block_å™s„r_‰om_ddr_to_§am
,

638 .
	g°¨t_n⁄block_å™s„r_‰om_ddr_to_§am
 = 
ddr_bur°_öãrÁ˚_ªg_°¨t_n⁄block_å™s„r_‰om_ddr_to_§am
,

639 .
	g˛ór_bur°_d⁄e
 = 
ddr_bur°_öãrÁ˚_ªg_˛ór_bur°_d⁄e
,

642 
	$öô_ddr_bur°_öãrÁ˚_t
(
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
, 
dvm_chù_t
 *
chù
)

644 if(
bur°_öãrÁ˚
 !
NULL
){

645 
bur°_öãrÁ˚
->
›
 = &
ddr_bur°_öãrÁ˚_ªg_›
;

646 
bur°_öãrÁ˚
->
chù
 = chip;

647 
bur°_öãrÁ˚
->
›
->
	`öô
(burst_interface);

648 
bur°_öãrÁ˚
->
›
->
	`upd©e_∑ge_mode_ªg
(bur°_öãrÁ˚, 
chù
);

649 
bur°_öãrÁ˚
->
›
->
	`upd©e_bur°_öãrÁ˚_∑øm
(bur°_öãrÁ˚, 
chù
);

651 
	}
}

653 
u32
 
	$d¥am_pg´_node_gë_∑ge_ba£
(
d¥am_∑ge_node_t
 *
d¥am_∑ge
)

655  (
d¥am_∑ge
->
d¥am_ba£
 + d¥am_∑ge->
d¥am_∑ge_ba£_off£t
);

656 
	}
}

658 
u32
 
	$d¥am_∑ge_node_gë_∑ge_off£t
(
d¥am_∑ge_node_t
 *
d¥am_∑ge
)

660  
d¥am_∑ge
->
d¥am_∑ge_ba£_off£t
;

661 
	}
}

663 
	$d¥am_∑ge_node_gë_∑ge_size
(
d¥am_∑ge_node_t
 *
d¥am_∑ge
)

665  
d¥am_∑ge
->
∑ge_size
;

666 
	}
}

668 
d¥am_∑ge_node_›î©i⁄
 
	gd¥am_∑ge_node_›
 = {

669 .
gë_∑ge_ba£
 = 
d¥am_pg´_node_gë_∑ge_ba£
,

670 .
	ggë_∑ge_off£t
 = 
d¥am_∑ge_node_gë_∑ge_off£t
,

671 .
	ggë_∑ge_size
 = 
d¥am_∑ge_node_gë_∑ge_size
,

674 
	$d¥am_∑ge_ªsour˚_m™age_öô
(
d¥am_∑ge_ªsour˚_m™age_t
 *
d¥am_∑ge_ªsour˚
)

676 if(
d¥am_∑ge_ªsour˚
){

677 
d¥am_∑ge_node_t
 *
d¥am
;

678 
u32
 
∑ge_off£t
;

679 
i
;

680 
d¥am
 = 
d¥am_∑ge_ªsour˚
->dpram;

681 
d¥am_∑ge_ªsour˚
->
d¥am_numbî
 = 
DPRAM_PAGE_NUMBER
;

682 
d¥am_∑ge_ªsour˚
->
cuº_u£d_d¥am_ödex
 = 0;

683 
	`©omic_£t
(&
d¥am_∑ge_ªsour˚
->
cuº_ˇn_u£_d¥am_∑ge_numbî
, d¥am_∑ge_ªsour˚->
d¥am_numbî
);

684 
	`•ö_lock_öô
(&
d¥am_∑ge_ªsour˚
->
lock
);

685 
∑ge_off£t
 = 
DPRAM_PAGE_SIZE
;

686 
i
=0; i<
d¥am_∑ge_ªsour˚
->
d¥am_numbî
; i++){

687 
d¥am
->
d¥am_ba£
 = 
MPI_DPRAM_BASE_OFFSET
;

688 
d¥am
->
d¥am_∑ge_ba£_off£t
 = 
i
*
∑ge_off£t
;

689 
d¥am
->
∑ge_size
 = 
∑ge_off£t
;

690 
d¥am
->
›
 = &
d¥am_∑ge_node_›
;

691 
d¥am
++;

694 
	}
}

696 
	$d¥am_∑ge_ªsour˚_m™age_gë_d¥am_∑ge
(
d¥am_∑ge_ªsour˚_m™age_t
 *
d¥am_∑ge_ªsour˚
, 
d¥am_∑ge_node_t
 **
±r_d¥am_∑ge
)

698 if((
d¥am_∑ge_ªsour˚
!=
NULL
Ë&& (
±r_d¥am_∑ge
!=NULL)){

699 
Êags
;

700 
	`•ö_lock_úqßve
(&
d¥am_∑ge_ªsour˚
->
lock
, 
Êags
);

701 *
±r_d¥am_∑ge
 = 
NULL
;

702 if(
	`©omic_ªad
(&
d¥am_∑ge_ªsour˚
->
cuº_ˇn_u£_d¥am_∑ge_numbî
)){

703 
	`©omic_dec
(&
d¥am_∑ge_ªsour˚
->
cuº_ˇn_u£_d¥am_∑ge_numbî
);

704 *
±r_d¥am_∑ge
 = &
d¥am_∑ge_ªsour˚
->
d¥am
[d¥am_∑ge_ªsour˚->
cuº_u£d_d¥am_ödex
];

705 
d¥am_∑ge_ªsour˚
->
cuº_u£d_d¥am_ödex
++;

706 if(
d¥am_∑ge_ªsour˚
->
cuº_u£d_d¥am_ödex
 >d¥am_∑ge_ªsour˚->
d¥am_numbî
){

707 
d¥am_∑ge_ªsour˚
->
cuº_u£d_d¥am_ödex
 = 0;

710 
	`•ö_u∆ock_úqª°‹e
(&
d¥am_∑ge_ªsour˚
->
lock
, 
Êags
);

712 
	}
}

714 
	$d¥am_∑ge_ªsour˚_m™age_put_d¥am_∑ge
(
d¥am_∑ge_ªsour˚_m™age_t
 *
d¥am_∑ge_ªsour˚
, 
d¥am_∑ge_node_t
 **
±r_d¥am_∑ge
)

716 if((
d¥am_∑ge_ªsour˚
!=
NULL
Ë&& (
±r_d¥am_∑ge
!=NULL)){

717 
Êags
;

718 
	`•ö_lock_úqßve
(&
d¥am_∑ge_ªsour˚
->
lock
, 
Êags
);

719 if(*
±r_d¥am_∑ge
 !
NULL
){

720 *
±r_d¥am_∑ge
 = 
NULL
;

721 
	`©omic_öc
(&
d¥am_∑ge_ªsour˚
->
cuº_ˇn_u£_d¥am_∑ge_numbî
);

722 if(
	`©omic_ªad
(&
d¥am_∑ge_ªsour˚
->
cuº_ˇn_u£_d¥am_∑ge_numbî
Ë> d¥am_∑ge_ªsour˚->
d¥am_numbî
){

723 
	`©omic_£t
(&
d¥am_∑ge_ªsour˚
->
cuº_ˇn_u£_d¥am_∑ge_numbî
, d¥am_∑ge_ªsour˚->
d¥am_numbî
);

726 
	`•ö_u∆ock_úqª°‹e
(&
d¥am_∑ge_ªsour˚
->
lock
, 
Êags
);

728 
	}
}

730 
	$d¥am_∑ge_ªsour˚_m™age_gë_ˇn_u£_ªsour˚_numbî
(
d¥am_∑ge_ªsour˚_m™age_t
 *
d¥am_∑ge_ªsour˚
)

732  
	`©omic_ªad
(&
d¥am_∑ge_ªsour˚
->
cuº_ˇn_u£_d¥am_∑ge_numbî
);

733 
	}
}

735 
d¥am_∑ge_ªsour˚_m™age_›î©i⁄
 
	gd¥am_∑ge_ªsour˚_m™age_›
 = {

736 .
öô
 = 
d¥am_∑ge_ªsour˚_m™age_öô
,

737 .
	ggë_d¥am_∑ge
 = 
d¥am_∑ge_ªsour˚_m™age_gë_d¥am_∑ge
,

738 .
	gput_d¥am_∑ge
 = 
d¥am_∑ge_ªsour˚_m™age_put_d¥am_∑ge
,

739 .
	ggë_ˇn_u£_ªsour˚_numbî
 = 
d¥am_∑ge_ªsour˚_m™age_gë_ˇn_u£_ªsour˚_numbî
,

742 
	$öô_d¥am_∑ge_ªsour˚_m™age
(
d¥am_∑ge_ªsour˚_m™age_t
 *
d¥am_∑ge_ªsour˚
)

744 if(
d¥am_∑ge_ªsour˚
 !
NULL
){

745 
d¥am_∑ge_ªsour˚
->
›
 = &
d¥am_∑ge_ªsour˚_m™age_›
;

746 
d¥am_∑ge_ªsour˚
->
›
->
	`öô
(dpram_page_resource);

748 
	}
}

750 
	$ddr_video_bô°ªam_buf_node_gë_buf_id
(
ddr_video_bô°ªam_buf_node_t
 *
video_bô°ªam
)

752  
video_bô°ªam
->
buf_id
;

753 
	}
}

755 
	$ddr_video_bô°ªam_buf_node_gë_buf_ö_chù_a_‹_b
(
ddr_video_bô°ªam_buf_node_t
 *
video_bô°ªam
)

757  
video_bô°ªam
->
chù_a_‹_b
;

758 
	}
}

760 
	$ddr_video_bô°ªam_buf_node_gë_∑ge_id
(
ddr_video_bô°ªam_buf_node_t
 *
video_bô°ªam
)

762  
video_bô°ªam
->
ddr_phy_∑ge_id
;

763 
	}
}

765 
u32
 
	$ddr_video_bô°ªam_buf_node_gë_buf_ba£_off£t
(
ddr_video_bô°ªam_buf_node_t
 *
video_bô°ªam
)

767  
video_bô°ªam
->
buf_ba£_off£t
;

768 
	}
}

770 
ddr_video_bô°ªam_buf_node_›î©i⁄
 
	gddr_video_bô°ªam_buf_node_›
 = {

771 .
gë_buf_id
 = 
ddr_video_bô°ªam_buf_node_gë_buf_id
,

772 .
	ggë_buf_ö_chù_a_‹_b
 = 
ddr_video_bô°ªam_buf_node_gë_buf_ö_chù_a_‹_b
,

773 .
	ggë_∑ge_id
 = 
ddr_video_bô°ªam_buf_node_gë_∑ge_id
,

774 .
	ggë_buf_ba£_off£t
 = 
ddr_video_bô°ªam_buf_node_gë_buf_ba£_off£t
,

777 
	$m≠_ddr_∑ge_id_‰om_buf_id
(
buf_id
)

779 
∑ge_id
;

780 
buf_id
){

782 
∑ge_id
 = 12;

785 
∑ge_id
 = 28;

788 
∑ge_id
 = 44;

791 
∑ge_id
 = 60;

794 
∑ge_id
 = 13;

797 
∑ge_id
 = 29;

800 
∑ge_id
 = 45;

803 
∑ge_id
 = 61;

806  
∑ge_id
;

807 
	}
}

809 
	$ddr_video_bô°ªam_ªsour˚_m™age_öô
(
ddr_video_bô°ªam_ªsour˚_m™age_t
 *
video_bô°ªam_ªsour˚
)

811 if(
video_bô°ªam_ªsour˚
 !
NULL
){

812 
ddr_video_bô°ªam_buf_node_t
 *
ddr_buf_£˘i⁄
;

813 
i
;

815 
ddr_buf_£˘i⁄
 = 
video_bô°ªam_ªsour˚
->ddr_buf_section;

816 
video_bô°ªam_ªsour˚
->
ddr_buf_£˘i⁄_numbî
 = 
VIDEO_BITSTREAM_DDR_SECTION_NUMBER
;

817 
video_bô°ªam_ªsour˚
->
cuº_u£d_ddr_buf_£˘i⁄_ödex
 = 0;

818 
	`©omic_£t
(&
video_bô°ªam_ªsour˚
->
cuº_ˇn_u£_ddr_buf_£˘i⁄_numbî
, video_bô°ªam_ªsour˚->
ddr_buf_£˘i⁄_numbî
);

819 
	`•ö_lock_öô
(&
video_bô°ªam_ªsour˚
->
lock
);

820 
i
=0; i<
video_bô°ªam_ªsour˚
->
ddr_buf_£˘i⁄_numbî
; i++){

821 
ddr_buf_£˘i⁄
->
buf_id
 = 
i
;

822 
ddr_buf_£˘i⁄
->
chù_a_‹_b
 = 
DDR_CHIP_B
;

823 
ddr_buf_£˘i⁄
->
ddr_phy_∑ge_id
 = 
	`m≠_ddr_∑ge_id_‰om_buf_id
(
i
);

824 
ddr_buf_£˘i⁄
->
buf_ba£_off£t
 = ddr_buf_£˘i⁄->
ddr_phy_∑ge_id
<<19;

825 
ddr_buf_£˘i⁄
->
›
 = &
ddr_video_bô°ªam_buf_node_›
;

826 
ddr_buf_£˘i⁄
++;

829 
	}
}

831 
	$ddr_video_bô°ªam_ªsour˚_m™age_gë_video_bô°ªam
(
ddr_video_bô°ªam_ªsour˚_m™age_t
 *
video_bô°ªam_ªsour˚
, 
ddr_video_bô°ªam_buf_node_t
 **
±r_video_bô°ªam
)

833 if((
video_bô°ªam_ªsour˚
!=
NULL
Ë&& (
±r_video_bô°ªam
!=NULL)){

834 
Êags
;

835 
	`•ö_lock_úqßve
(&
video_bô°ªam_ªsour˚
->
lock
, 
Êags
);

836 *
±r_video_bô°ªam
 = 
NULL
;

837 if(
	`©omic_ªad
(&
video_bô°ªam_ªsour˚
->
cuº_ˇn_u£_ddr_buf_£˘i⁄_numbî
)){

838 
	`©omic_dec
(&
video_bô°ªam_ªsour˚
->
cuº_ˇn_u£_ddr_buf_£˘i⁄_numbî
);

839 *
±r_video_bô°ªam
 = &
video_bô°ªam_ªsour˚
->
ddr_buf_£˘i⁄
[video_bô°ªam_ªsour˚->
cuº_u£d_ddr_buf_£˘i⁄_ödex
];

840 
video_bô°ªam_ªsour˚
->
cuº_u£d_ddr_buf_£˘i⁄_ödex
++;

841 if(
video_bô°ªam_ªsour˚
->
cuº_u£d_ddr_buf_£˘i⁄_ödex
 >video_bô°ªam_ªsour˚->
ddr_buf_£˘i⁄_numbî
){

842 
video_bô°ªam_ªsour˚
->
cuº_u£d_ddr_buf_£˘i⁄_ödex
 = 0;

845 
	`•ö_u∆ock_úqª°‹e
(&
video_bô°ªam_ªsour˚
->
lock
, 
Êags
);

847 
	}
}

849 
	$ddr_video_bô°ªam_ªsour˚_m™age_put_video_bô°ªam
(
ddr_video_bô°ªam_ªsour˚_m™age_t
 *
video_bô°ªam_ªsour˚
, 
ddr_video_bô°ªam_buf_node_t
 **
±r_video_bô°ªam
)

851 if((
video_bô°ªam_ªsour˚
!=
NULL
Ë&& (
±r_video_bô°ªam
!=NULL)){

852 
Êags
;

853 
	`•ö_lock_úqßve
(&
video_bô°ªam_ªsour˚
->
lock
, 
Êags
);

854 if(*
±r_video_bô°ªam
 !
NULL
){

855 *
±r_video_bô°ªam
 = 
NULL
;

856 
	`©omic_öc
(&
video_bô°ªam_ªsour˚
->
cuº_ˇn_u£_ddr_buf_£˘i⁄_numbî
);

857 if(
	`©omic_ªad
(&
video_bô°ªam_ªsour˚
->
cuº_ˇn_u£_ddr_buf_£˘i⁄_numbî
Ë> video_bô°ªam_ªsour˚->
ddr_buf_£˘i⁄_numbî
){

858 
	`©omic_£t
(&
video_bô°ªam_ªsour˚
->
cuº_ˇn_u£_ddr_buf_£˘i⁄_numbî
, video_bô°ªam_ªsour˚->
ddr_buf_£˘i⁄_numbî
);

861 
	`•ö_u∆ock_úqª°‹e
(&
video_bô°ªam_ªsour˚
->
lock
, 
Êags
);

863 
	}
}

865 
	$ddr_video_bô°ªam_ªsour˚_m™age_gë_ˇn_u£_ªsour˚_numbî
(
ddr_video_bô°ªam_ªsour˚_m™age_t
 *
video_bô°ªam_ªsour˚
)

867  
	`©omic_ªad
(&
video_bô°ªam_ªsour˚
->
cuº_ˇn_u£_ddr_buf_£˘i⁄_numbî
);

868 
	}
}

870 
ddr_video_bô°ªam_ªsour˚_m™age_›î©i⁄
 
	gddr_video_bô°ªam_ªsour˚_m™age_›
 = {

871 .
öô
 = 
ddr_video_bô°ªam_ªsour˚_m™age_öô
,

872 .
	ggë_video_bô°ªam
 = 
ddr_video_bô°ªam_ªsour˚_m™age_gë_video_bô°ªam
,

873 .
	gput_video_bô°ªam
 = 
ddr_video_bô°ªam_ªsour˚_m™age_put_video_bô°ªam
,

874 .
	ggë_ˇn_u£_ªsour˚_numbî
 = 
ddr_video_bô°ªam_ªsour˚_m™age_gë_ˇn_u£_ªsour˚_numbî
,

877 
	$öô_ddr_video_bô°ªam_ªsour˚_m™age
(
ddr_video_bô°ªam_ªsour˚_m™age_t
 *
video_bô°ªam_ªsour˚
)

879 if(
video_bô°ªam_ªsour˚
 !
NULL
){

880 
video_bô°ªam_ªsour˚
->
›
 = &
ddr_video_bô°ªam_ªsour˚_m™age_›
;

881 
video_bô°ªam_ªsour˚
->
›
->
	`öô
(video_bitstream_resource);

883 
	}
}

885 
	$öô_d¥am_ªque°_£rvi˚_tcb
(
d¥am_ªque°_t
 *
ªque°_tcb
)

887 if(
ªque°_tcb
 !
NULL
){

888 
tcb_node_t
 *
node
 = &
ªque°_tcb
->
ªque°_node
;

889 
ªque°_tcb
->
ty≥
 = 
DPRAM_BLOCK_TRANSFER_REQUEST
;

890 
ªque°_tcb
->
c⁄ãxt
 = 
NULL
;

891 
ªque°_tcb
->
ªq_ˇŒback
 = 
NULL
;

892 
node
->
›
 = &
tcb_node_›
;

893 
node
->
›
->
	`öô
(node);

894 
node
->
›
->
	`£t_¥iv
“ode, 
ªque°_tcb
);

896 
	}
}

898 
	$d¥am_ªque°_queue_öô
(
d¥am_ªque°_queue_t
 *
ªque°_queue
)

900 if(
ªque°_queue
 !
NULL
){

901 
tcb_node_queue_t
 *
ªque°_queue_node
 = &
ªque°_queue
->request_queue;

902 
ªque°_queue
->
cuº_£rvi˚_ªq
 = 
NULL
;

903 
	`•ö_lock_öô
(&
ªque°_queue
->
lock
);

904 
ªque°_queue_node
->
›
 = &
tcb_node_queue_›
;

905 
ªque°_queue_node
->
›
->
	`öô
(request_queue_node);

907 
	}
}

909 
	$d¥am_ªque°_queue_gë_queue_cuº_íåy_numbî
(
d¥am_ªque°_queue_t
 *
ªque°_queue
)

911 if(
ªque°_queue
 !
NULL
) {

912 
tcb_node_queue_t
 *
ªque°_queue_node
 = &
ªque°_queue
->request_queue;

913  
ªque°_queue_node
->
›
->
	`gë_queue_cuº_íåy_numbî
(request_queue_node);

917 
	}
}

919 
	$d¥am_ªque°_queue_put_£rvi˚_ªque°_öto_queue
(
d¥am_ªque°_queue_t
 *
ªque°_queue
, 
d¥am_ªque°_t
 *
ªque°
)

921 if((
ªque°_queue
!=
NULL
Ë&& (
ªque°
!=NULL)){

922 
tcb_node_queue_t
 *
ªque°_queue_node
 = &
ªque°_queue
->request_queue;

923 
ªque°_queue_node
->
›
->
	`put
‘eque°_queue_node, &
ªque°
->
ªque°_node
);

924 
ªque°_queue
->
›
->
	`åiggî_chù_≥ndög_£rvi˚_ªque°
(request_queue);

926 
	}
}

928 
	$d¥am_ªque°_queue_put_£rvi˚_ªque°_öto_queue_hódî
(
d¥am_ªque°_queue_t
 *
ªque°_queue
, 
d¥am_ªque°_t
 *
ªque°
)

930 if((
ªque°_queue
!=
NULL
Ë&& (
ªque°
!=NULL)){

931 
tcb_node_queue_t
 *
ªque°_queue_node
 = &
ªque°_queue
->request_queue;

932 
ªque°_queue_node
->
›
->
	`put_hódî
‘eque°_queue_node, &
ªque°
->
ªque°_node
);

933 
ªque°_queue
->
›
->
	`åiggî_chù_≥ndög_£rvi˚_ªque°
(request_queue);

935 
	}
}

937 
	$d¥am_ªque°_queue_åy_gë_cuº_c⁄sumî_‰om_queue
(
d¥am_ªque°_queue_t
 *
ªque°_queue
)

939 if(
ªque°_queue
 !
NULL
){

940 
tcb_node_queue_t
 *
ªque°_queue_node
 = &
ªque°_queue
->request_queue;

941 if(
ªque°_queue
->
cuº_£rvi˚_ªq
 =
NULL
){

942 if(
ªque°_queue_node
->
›
 !
NULL
){

943 
tcb_node_t
 *
ãmp_node
;

944 
ªque°_queue_node
->
›
->
	`åy_gë
‘eque°_queue_node, &
ãmp_node
);

945 if(
ãmp_node
 !
NULL
){

946 
ªque°_queue
->
cuº_£rvi˚_ªq
 = 
	`to_gë_d¥am_ªque°_wôh_ªque°_node
(
ãmp_node
);

951 
	}
}

953 
	$d¥am_ªque°_queue_ªÀa£_cuº_c⁄sumî
(
d¥am_ªque°_queue_t
 *
ªque°_queue
)

955 if(
ªque°_queue
 !
NULL
){

956 
Êags
;

957 
	`•ö_lock_úqßve
(&
ªque°_queue
->
lock
, 
Êags
);

958 
ªque°_queue
->
cuº_£rvi˚_ªq
 = 
NULL
;

959 
	`•ö_u∆ock_úqª°‹e
(&
ªque°_queue
->
lock
, 
Êags
);

961 
	}
}

963 
	$d¥am_ªque°_queue_åiggî_chù_≥ndög_£rvi˚_ªque°
(
d¥am_ªque°_queue_t
 *
ªque°_queue
)

965 if(
ªque°_queue
 !
NULL
){

966 
d¥am_ªque°_t
 *
cuº_ªque°
;

967 
Êags
;

968 
cuº_íåy_numbî
;

970 
	`•ö_lock_úqßve
(&
ªque°_queue
->
lock
, 
Êags
);

971 
cuº_íåy_numbî
 = 
ªque°_queue
->
›
->
	`gë_queue_cuº_íåy_numbî
(request_queue);

972 if((
cuº_íåy_numbî
==0Ë&& (
ªque°_queue
->
cuº_£rvi˚_ªq
==
NULL
)){

973 
	`•ö_u∆ock_úqª°‹e
(&
ªque°_queue
->
lock
, 
Êags
);

975 } if(
ªque°_queue
->
cuº_£rvi˚_ªq
 !
NULL
){

976 
	`•ö_u∆ock_úqª°‹e
(&
ªque°_queue
->
lock
, 
Êags
);

979 
ªque°_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(request_queue);

980 
cuº_ªque°
 = 
ªque°_queue
->
cuº_£rvi˚_ªq
;

981 
	`•ö_u∆ock_úqª°‹e
(&
ªque°_queue
->
lock
, 
Êags
);

982 if(
cuº_ªque°
 !
NULL
){

983 
cuº_ªque°
->
	`ªq_ˇŒback
(cuº_ªque°, cuº_ªque°->
c⁄ãxt
);

986 
	}
}

988 
d¥am_ªque°_queue_›î©i⁄
 
	gd¥am_ªque°_queue_›
 = {

989 .
öô
 = 
d¥am_ªque°_queue_öô
,

990 .
	ggë_queue_cuº_íåy_numbî
 = 
d¥am_ªque°_queue_gë_queue_cuº_íåy_numbî
,

991 .
	gput_£rvi˚_ªque°_öto_queue
 = 
d¥am_ªque°_queue_put_£rvi˚_ªque°_öto_queue
,

992 .
	gput_£rvi˚_ªque°_öto_queue_hódî
 = 
d¥am_ªque°_queue_put_£rvi˚_ªque°_öto_queue_hódî
,

993 .
	gåy_gë_cuº_c⁄sumî_‰om_queue
 = 
d¥am_ªque°_queue_åy_gë_cuº_c⁄sumî_‰om_queue
,

994 .
	gªÀa£_cuº_c⁄sumî
 = 
d¥am_ªque°_queue_ªÀa£_cuº_c⁄sumî
,

995 .
	gåiggî_chù_≥ndög_£rvi˚_ªque°
 = 
d¥am_ªque°_queue_åiggî_chù_≥ndög_£rvi˚_ªque°
,

998 
	$öô_d¥am_ªque°_queue
(
d¥am_ªque°_queue_t
 *
ªque°_queue
)

1000 if(
ªque°_queue
 !
NULL
){

1001 
ªque°_queue
->
›
 = &
d¥am_ªque°_queue_›
;

1002 
ªque°_queue
->
›
->
	`öô
(request_queue);

1004 
	}
}

1006 
	$d¥am_c⁄åﬁ_öô
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
dvm_chù_t
 *
chù
)

1008 
d¥am
->
chù
 = chip;

1009 
	`•ö_lock_öô
(&
d¥am
->
lock
);

1010 
	`©omic_£t
(&
d¥am
->
bus_°©e
, 
BUS_IDLE
);

1011 
	`öô_ddr_bur°_öãrÁ˚_t
(&
d¥am
->
bur°_öãrÁ˚
, d¥am->
chù
);

1012 
	`öô_d¥am_ªque°_queue
(&
d¥am
->
ªque°_queue
);

1013 
	`öô_d¥am_∑ge_ªsour˚_m™age
(&
d¥am
->
d¥am_ªsour˚
);

1014 
	`öô_ddr_video_bô°ªam_ªsour˚_m™age
(&
d¥am
->
video_bô°ªam_ªsour˚
);

1015 
	}
}

1017 
	$d¥am_c⁄åﬁ_is_ˇn_submô_h264_ícode_£rvi˚_ªq
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
ddr_video_bô°ªam_buf_node_t
 **
±r_video_bô°ªam_buf
)

1019 
ªt
 = 0;

1020 if(
d¥am
 !
NULL
){

1021 
ddr_video_bô°ªam_ªsour˚_m™age_t
 *
video_bô°ªam_ªsour˚
;

1022 
Êags
;

1023 
	`•ö_lock_úqßve
(&
d¥am
->
lock
, 
Êags
);

1024 
video_bô°ªam_ªsour˚
 = &
d¥am
->video_bitstream_resource;

1025 
ªt
 = 
video_bô°ªam_ªsour˚
->
›
->
	`gë_ˇn_u£_ªsour˚_numbî
(video_bitstream_resource);

1026 
video_bô°ªam_ªsour˚
->
›
->
	`gë_video_bô°ªam
(video_bô°ªam_ªsour˚, 
±r_video_bô°ªam_buf
);

1027 
	`•ö_u∆ock_úqª°‹e
(&
d¥am
->
lock
, 
Êags
);

1029  
ªt
;

1030 
	}
}

1032 
	$d¥am_c⁄åﬁ_ªÀa£_h264_ddr_∑ge_ªsour˚
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
ddr_video_bô°ªam_buf_node_t
 **
±r_video_bô°ªam_buf
)

1034 if(
d¥am
 !
NULL
){

1035 
ddr_video_bô°ªam_ªsour˚_m™age_t
 *
video_bô°ªam_ªsour˚
;

1036 
Êags
;

1037 
	`•ö_lock_úqßve
(&
d¥am
->
lock
, 
Êags
);

1038 
video_bô°ªam_ªsour˚
 = &
d¥am
->video_bitstream_resource;

1039 
video_bô°ªam_ªsour˚
->
›
->
	`put_video_bô°ªam
(video_bô°ªam_ªsour˚, 
±r_video_bô°ªam_buf
);

1040 
	`•ö_u∆ock_úqª°‹e
(&
d¥am
->
lock
, 
Êags
);

1042 
	}
}

1044 
	$d¥am_c⁄åﬁ_is_ˇn_submô_move_d©a_‰om_ho°_to_d¥am_£rvi˚_ªq
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
d¥am_∑ge_node_t
 **
±r_d¥am_∑ge
)

1046 
ªt
 = 0;

1047 if(
d¥am
 !
NULL
){

1048 
d¥am_∑ge_ªsour˚_m™age_t
 *
d¥am_ªsour˚
;

1049 
Êags
;

1050 
bus_°©e
;

1051 
	`•ö_lock_úqßve
(&
d¥am
->
lock
, 
Êags
);

1052 
bus_°©e
 = 
	`©omic_ªad
(&
d¥am
->bus_state);

1053 if(!(
bus_°©e
&
DDR_END_BUS_BUSY
)){

1054 
d¥am_ªsour˚
 = &
d¥am
->dpram_resource;

1055 
ªt
 = 
d¥am_ªsour˚
->
›
->
	`gë_ˇn_u£_ªsour˚_numbî
(dpram_resource);

1056 if(
ªt
){

1057 
bus_°©e
 |
DDR_END_BUS_BUSY
;

1058 
	`©omic_£t
(&
d¥am
->
bus_°©e
, bus_state);

1059 
d¥am_ªsour˚
->
›
->
	`gë_d¥am_∑ge
(d¥am_ªsour˚, 
±r_d¥am_∑ge
);

1062 
	`•ö_u∆ock_úqª°‹e
(&
d¥am
->
lock
, 
Êags
);

1064  
ªt
;

1065 
	}
}

1067 
	$d¥am_c⁄åﬁ_nŸify_íd_move_d©a_‰om_d¥am_to_ddr_£rvi˚_ªq
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
d¥am_∑ge_node_t
 **
±r_d¥am_∑ge
)

1069 if((
d¥am
!=
NULL
Ë&& (
±r_d¥am_∑ge
!=NULL)){

1070 
d¥am_∑ge_ªsour˚_m™age_t
 *
d¥am_ªsour˚
;

1071 
d¥am_ªque°_queue_t
 *
ªque°_queue
;

1072 
Êags
;

1073 
bus_°©e
;

1074 
	`•ö_lock_úqßve
(&
d¥am
->
lock
, 
Êags
);

1075 
d¥am_ªsour˚
 = &
d¥am
->dpram_resource;

1076 
d¥am_ªsour˚
->
›
->
	`put_d¥am_∑ge
(d¥am_ªsour˚, 
±r_d¥am_∑ge
);

1077 
bus_°©e
 = 
	`©omic_ªad
(&
d¥am
->bus_state);

1078 
bus_°©e
 &~
DDR_END_BUS_BUSY
;

1079 
	`©omic_£t
(&
d¥am
->
bus_°©e
, bus_state);

1080 
	`•ö_u∆ock_úqª°‹e
(&
d¥am
->
lock
, 
Êags
);

1081 
ªque°_queue
 = &
d¥am
->request_queue;

1082 
ªque°_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(request_queue);

1083 
ªque°_queue
->
›
->
	`åiggî_chù_≥ndög_£rvi˚_ªque°
(request_queue);

1085 
	}
}

1087 
	$d¥am_c⁄åﬁ_is_ˇn_submô_move_d©a_‰om_ddr_to_d¥am_£rvi˚_ªq
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
d¥am_∑ge_node_t
 **
±r_d¥am_∑ge
)

1089 
ªt
 = 0;

1090 if(
d¥am
 !
NULL
){

1091 
d¥am_∑ge_ªsour˚_m™age_t
 *
d¥am_ªsour˚
;

1092 
Êags
;

1093 
bus_°©e
;

1094 
	`•ö_lock_úqßve
(&
d¥am
->
lock
, 
Êags
);

1095 
bus_°©e
 = 
	`©omic_ªad
(&
d¥am
->bus_state);

1096 if(!(
bus_°©e
&
DDR_END_BUS_BUSY
)){

1097 
d¥am_ªsour˚
 = &
d¥am
->dpram_resource;

1098 
ªt
 = 
d¥am_ªsour˚
->
›
->
	`gë_ˇn_u£_ªsour˚_numbî
(dpram_resource);

1099 if(
ªt
){

1100 
bus_°©e
 |
DDR_END_BUS_BUSY
;

1101 
	`©omic_£t
(&
d¥am
->
bus_°©e
, bus_state);

1102 
d¥am_ªsour˚
->
›
->
	`gë_d¥am_∑ge
(d¥am_ªsour˚, 
±r_d¥am_∑ge
);

1105 
	`•ö_u∆ock_úqª°‹e
(&
d¥am
->
lock
, 
Êags
);

1107  
ªt
;

1108 
	}
}

1110 
	$d¥am_c⁄åﬁ_nŸify_íd_move_d©a_‰om_d¥am_to_ho°_£rvi˚_ªq
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
d¥am_∑ge_node_t
 **
±r_d¥am_∑ge
)

1112 if((
d¥am
!=
NULL
Ë&& (
±r_d¥am_∑ge
!=NULL)){

1113 
d¥am_∑ge_ªsour˚_m™age_t
 *
d¥am_ªsour˚
;

1114 
d¥am_ªque°_queue_t
 *
ªque°_queue
;

1115 
Êags
;

1116 
bus_°©e
;

1117 
	`•ö_lock_úqßve
(&
d¥am
->
lock
, 
Êags
);

1118 
d¥am_ªsour˚
 = &
d¥am
->dpram_resource;

1119 
d¥am_ªsour˚
->
›
->
	`put_d¥am_∑ge
(d¥am_ªsour˚, 
±r_d¥am_∑ge
);

1120 
bus_°©e
 = 
	`©omic_ªad
(&
d¥am
->bus_state);

1121 
bus_°©e
 &~
DDR_END_BUS_BUSY
;

1122 
	`©omic_£t
(&
d¥am
->
bus_°©e
, bus_state);

1123 
	`•ö_u∆ock_úqª°‹e
(&
d¥am
->
lock
, 
Êags
);

1124 
ªque°_queue
 = &
d¥am
->request_queue;

1125 
ªque°_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(request_queue);

1126 
ªque°_queue
->
›
->
	`åiggî_chù_≥ndög_£rvi˚_ªque°
(request_queue);

1128 
	}
}

1130 
	$d¥am_c⁄åﬁ_submô_ªad_h264_bô°ªam_ªq
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
)

1132 if((
d¥am
!=
NULL
Ë&& (
h264_logic_ícode_ch™
!=NULL)){

1133 
d¥am_ªque°_queue_t
 *
ªque°_queue
;

1134 
ªque°_queue
 = &
d¥am
->request_queue;

1135 
ªque°_queue
->
›
->
	`put_£rvi˚_ªque°_öto_queue
‘eque°_queue, &
h264_logic_ícode_ch™
->
ªad_video_bô°ªam_ªq
);

1137 
	}
}

1139 
	$d¥am_c⁄åﬁ_ack_ªad_h264_bô°ªam_ªq
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
)

1141 if((
d¥am
!=
NULL
Ë&& (
h264_logic_ícode_ch™
!=NULL)){

1144 
d¥am
->
›
->
	`ªÀa£_h264_ddr_∑ge_ªsour˚
(d¥am, &
h264_logic_ícode_ch™
->
video_bô°ªam_buf
);

1146 
d¥am
->
›
->
	`nŸify_íd_move_d©a_‰om_d¥am_to_ho°_£rvi˚_ªq
(d¥am, &
h264_logic_ícode_ch™
->
d¥am_∑ge
);

1148 
	}
}

1150 
	$d¥am_c⁄åﬁ_submô_wrôe_video_ícode_osd_ªq
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
)

1152 if((
d¥am
!=
NULL
Ë&& (
ª˘™gÀ
!=NULL)){

1153 
d¥am_ªque°_queue_t
 *
ªque°_queue
;

1154 
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
;

1156 
ªque°_queue
 = &
d¥am
->request_queue;

1157 
osd_d¥am_ªq
 = &
ª˘™gÀ
->osd_dpram_req;

1158 
ªque°_queue
->
›
->
	`put_£rvi˚_ªque°_öto_queue
‘eque°_queue, &
osd_d¥am_ªq
->
osd_d©a_ªq
);

1160 
	}
}

1162 
	$d¥am_c⁄åﬁ_ack_wrôe_video_ícode_osd_ªq
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
)

1164 if((
d¥am
!=
NULL
Ë&& (
ª˘™gÀ
!=NULL)){

1166 
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
;

1170 
osd_d¥am_ªq
 = &
ª˘™gÀ
->osd_dpram_req;

1171 
d¥am
->
›
->
	`nŸify_íd_move_d©a_‰om_d¥am_to_ddr_£rvi˚_ªq
(d¥am, &
osd_d¥am_ªq
->
d¥am_∑ge
);

1173 
	}
}

1175 
	$d¥am_c⁄åﬁ_submô_wrôe_video_ícode_osd_©å_ªq
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
osd_©åibuã_ªgs_group_t
 *
©å_group
)

1177 if((
d¥am
!=
NULL
Ë&& (
©å_group
!=NULL)){

1178 
d¥am_ªque°_queue_t
 *
ªque°_queue
;

1179 
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
;

1181 
ªque°_queue
 = &
d¥am
->request_queue;

1182 
osd_d¥am_ªq
 = &
©å_group
->osd_dpram_req;

1183 
ªque°_queue
->
›
->
	`put_£rvi˚_ªque°_öto_queue
‘eque°_queue, &
osd_d¥am_ªq
->
osd_d©a_ªq
);

1185 
	}
}

1187 
	$d¥am_c⁄åﬁ_ack_wrôe_video_ícode_osd_©å_ªq
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
osd_©åibuã_ªgs_group_t
 *
©å_group
)

1189 if((
d¥am
!=
NULL
Ë&& (
©å_group
!=NULL)){

1190 
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
;

1192 
osd_d¥am_ªq
 = &
©å_group
->osd_dpram_req;

1193 
d¥am
->
›
->
	`nŸify_íd_move_d©a_‰om_d¥am_to_ddr_£rvi˚_ªq
(d¥am, &
osd_d¥am_ªq
->
d¥am_∑ge
);

1195 
	}
}

1197 
	$d¥am_c⁄åﬁ_submô_ªad_audio_ªq
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
tw_audio_drivî_t
 *
audio_drivî
)

1199 if((
d¥am
!=
NULL
Ë&& (
audio_drivî
!=NULL)){

1200 
d¥am_ªque°_queue_t
 *
ªque°_queue
;

1201 
ªque°_queue
 = &
d¥am
->request_queue;

1202 
ªque°_queue
->
›
->
	`put_£rvi˚_ªque°_öto_queue
‘eque°_queue, &
audio_drivî
->
audio_bô°ªam_ªq
);

1205 
	}
}

1207 
	$d¥am_c⁄åﬁ_ack_ªad_audio_ªq
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
tw_audio_drivî_t
 *
audio_drivî
)

1209 if((
d¥am
!=
NULL
Ë&& (
audio_drivî
!=NULL)){

1213 
d¥am
->
›
->
	`nŸify_íd_move_d©a_‰om_d¥am_to_ho°_£rvi˚_ªq
(d¥am, &
audio_drivî
->
d¥am_∑ge
);

1215 
	}
}

1217 
	$d¥am_c⁄åﬁ_submô_wrôe_audio_ªq
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
tw_audio_drivî_t
 *
audio_drivî
)

1219 if((
d¥am
!=
NULL
Ë&& (
audio_drivî
!=NULL)){

1220 
d¥am_ªque°_queue_t
 *
ªque°_queue
;

1221 
ªque°_queue
 = &
d¥am
->request_queue;

1222 
ªque°_queue
->
›
->
	`put_£rvi˚_ªque°_öto_queue
‘eque°_queue, &
audio_drivî
->
audio_bô°ªam_ªq
);

1224 
	}
}

1226 
	$d¥am_c⁄åﬁ_ack_wrôe_audio_ªq
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
tw_audio_drivî_t
 *
audio_drivî
)

1228 if((
d¥am
!=
NULL
Ë&& (
audio_drivî
!=NULL)){

1232 
d¥am
->
›
->
	`nŸify_íd_move_d©a_‰om_d¥am_to_ddr_£rvi˚_ªq
(d¥am, &
audio_drivî
->
d¥am_∑ge
);

1234 
	}
}

1235 
	$d¥am_c⁄åﬁ_submô_ªad_mj≥g_ªq
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
)

1237 if((
d¥am
!=
NULL
Ë&& (
j≥g_logic_ch™
!=NULL)){

1238 
d¥am_ªque°_queue_t
 *
ªque°_queue
;

1239 
ªque°_queue
 = &
d¥am
->request_queue;

1240 
ªque°_queue
->
›
->
	`put_£rvi˚_ªque°_öto_queue
‘eque°_queue, &
j≥g_logic_ch™
->
ªad_video_bô°ªam_ªq
);

1242 
	}
}

1244 
	$d¥am_c⁄åﬁ_ack_ªad_mj≥g_ªq
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
)

1246 if((
d¥am
!=
NULL
Ë&& (
j≥g_logic_ch™
!=NULL)){

1250 
d¥am
->
›
->
	`nŸify_íd_move_d©a_‰om_d¥am_to_ho°_£rvi˚_ªq
(d¥am, &
j≥g_logic_ch™
->
d¥am_∑ge
);

1253 
	}
}

1255 
d¥am_c⁄åﬁ_›î©i⁄
 
	gd¥am_c⁄åﬁ_›
 = {

1256 .
öô
 = 
d¥am_c⁄åﬁ_öô
,

1257 .
	gis_ˇn_submô_h264_ícode_£rvi˚_ªq
 = 
d¥am_c⁄åﬁ_is_ˇn_submô_h264_ícode_£rvi˚_ªq
,

1258 .
	gªÀa£_h264_ddr_∑ge_ªsour˚
 = 
d¥am_c⁄åﬁ_ªÀa£_h264_ddr_∑ge_ªsour˚
,

1259 .
	gis_ˇn_submô_move_d©a_‰om_ho°_to_d¥am_£rvi˚_ªq
 = 
d¥am_c⁄åﬁ_is_ˇn_submô_move_d©a_‰om_ho°_to_d¥am_£rvi˚_ªq
,

1260 .
	gnŸify_íd_move_d©a_‰om_d¥am_to_ddr_£rvi˚_ªq
 = 
d¥am_c⁄åﬁ_nŸify_íd_move_d©a_‰om_d¥am_to_ddr_£rvi˚_ªq
,

1261 .
	gis_ˇn_submô_move_d©a_‰om_ddr_to_d¥am_£rvi˚_ªq
 = 
d¥am_c⁄åﬁ_is_ˇn_submô_move_d©a_‰om_ddr_to_d¥am_£rvi˚_ªq
,

1262 .
	gnŸify_íd_move_d©a_‰om_d¥am_to_ho°_£rvi˚_ªq
 = 
d¥am_c⁄åﬁ_nŸify_íd_move_d©a_‰om_d¥am_to_ho°_£rvi˚_ªq
,

1263 .
	gsubmô_ªad_h264_bô°ªam_ªq
 = 
d¥am_c⁄åﬁ_submô_ªad_h264_bô°ªam_ªq
,

1264 .
	gack_ªad_h264_bô°ªam_ªq
 = 
d¥am_c⁄åﬁ_ack_ªad_h264_bô°ªam_ªq
,

1265 .
	gsubmô_wrôe_video_ícode_osd_d©a_ªq
 = 
d¥am_c⁄åﬁ_submô_wrôe_video_ícode_osd_ªq
,

1266 .
	gack_wrôe_video_ícode_osd_d©a_ªq
 = 
d¥am_c⁄åﬁ_ack_wrôe_video_ícode_osd_ªq
,

1267 .
	gsubmô_wrôe_video_ícode_osd_©å_ªq
 = 
d¥am_c⁄åﬁ_submô_wrôe_video_ícode_osd_©å_ªq
,

1268 .
	gack_wrôe_video_ícode_osd_©å_ªq
 = 
d¥am_c⁄åﬁ_ack_wrôe_video_ícode_osd_©å_ªq
,

1269 .
	gsubmô_ªad_audio_ªq
 = 
d¥am_c⁄åﬁ_submô_ªad_audio_ªq
,

1270 .
	gack_ªad_audio_ªq
 = 
d¥am_c⁄åﬁ_ack_ªad_audio_ªq
,

1271 .
	gsubmô_wrôe_audio_ªq
 = 
d¥am_c⁄åﬁ_submô_wrôe_audio_ªq
,

1272 .
	gack_wrôe_audio_ªq
 = 
d¥am_c⁄åﬁ_ack_wrôe_audio_ªq
,

1273 .
	gsubmô_ªad_mj≥g_ªq
 = 
d¥am_c⁄åﬁ_submô_ªad_mj≥g_ªq
,

1274 .
	gack_ªad_mj≥g_ªq
 = 
d¥am_c⁄åﬁ_ack_ªad_mj≥g_ªq
,

1277 
	$öô_d¥am_c⁄åﬁ
(
d¥am_c⁄åﬁ_t
 *
d¥am
, 
dvm_chù_t
 *
chù
)

1279 if((
d¥am
!=
NULL
Ë&& (
chù
!=NULL)){

1280 
d¥am
->
›
 = &
d¥am_c⁄åﬁ_›
;

1281 
d¥am
->
›
->
	`öô
(d¥am, 
chù
);

1283 
	}
}

	@../../tw5864/tw5864/dma.c

1 
	~<tw5864/dvm_comm⁄.h
>

5 #ifdef 
ARM_PLATFORM


6 
	$DMA_M2M
(
DMA_PARAM
 *
∑øm
, 
ch™
, 
tsz
)

8 
tc
, 
dsz
;

9 
DMA_REG
 *
pDMA
;

11 
tc
 = 
∑øm
->
cou¡
;

12 
dsz
 = 
∑øm
->dsz - 1;

13 i‡(
tsz
)

14 
tc
 >>= 2;

15 i‡(
ch™
 == 3)

16 
pDMA
 = (
DMA_REG
 *)(
S3C24XX_VA_DMA
+0xc0);

17 i‡(
ch™
 == 2)

18 
pDMA
 = (
DMA_REG
 *)(
S3C24XX_VA_DMA
+0x80);

19 i‡(
ch™
 == 1)

20 
pDMA
 = (
DMA_REG
 *)(
S3C24XX_VA_DMA
+0x40);

22 
pDMA
 = (
DMA_REG
 *)
S3C24XX_VA_DMA
;

23 
pDMA
->
DISRC
 = 
∑øm
->
§cAddr
;

24 i‡(
∑øm
->
ifSrcAddrCh™ge
)

25 
pDMA
->
DISRCC
 = 0;

27 
pDMA
->
DISRCC
 = 1;

28 
pDMA
->
DIDST
 = 
∑øm
->
de°Addr
;

29 i‡(
∑øm
->
ifDe°AddrCh™ge
)

30 
pDMA
->
DIDSTC
 = 0;

32 
pDMA
->
DIDSTC
 = 1;

33 
pDMA
->
DCON
 = (1<<30)|(
tsz
<<28)|(1<<27)|(1<<22)|(
dsz
<<20)|(
tc
);

34 
pDMA
->
DMASKTRIG
 = 3;

35 (
pDMA
->
DSTAT
)&0x00300000);

36 
	}
}

39 
µc_dma_m2m
(
u32
 
§c
, u32 
de°
, u32 
Àn
);

40 
	$Âga_dma_ª˚ive
(
u32
 
§c
, u32 
de°
, u32 
Àn
)

42 #ifdef 
ARM_PLATFORM


43 
DMA_PARAM
 
∑øm
;

45 
∑øm
.
§cAddr
 = 
§c
;

46 
∑øm
.
ifSrcAddrCh™ge
 = 1;

47 
∑øm
.
de°Addr
 = 
de°
;

48 
∑øm
.
ifDe°AddrCh™ge
 = 1;

49 
∑øm
.
cou¡
 = (
Àn
+3)>>2;

50 
∑øm
.
dsz
 = 3;

51 
	`DMA_M2M
(&
∑øm
, 2, 0);

53 #ifdef 
POWERPC_PLATFORM


54 
Àn
 += 3;

55 
Àn
 >>= 2;

56 
Àn
 <<= 2;

57 
	`µc_dma_m2m
(
§c
, 
de°
, 
Àn
);

59 
	}
}

	@../../tw5864/tw5864/dvm_new_buf.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
	$tcb_node_öô
(
tcb_node_t
 *
node
)

5 if(
node
 !
NULL
){

6 
	`INIT_LIST_HEAD
(&
node
->
li°
);

7 
	`©omic_£t
(&
node
->
ªf_cou¡
, 0);

8 if(
node
->
›
 !
NULL
){

9 
node
->
›
->
	`upd©e_°©e
“ode, 
TCB_IDLE_STATE
);

12 
	}
}

14 
	$tcb_node_£t_¥iv
(
tcb_node_t
 *
node
, *
¥iv
)

16 if(
node
 !
NULL
){

17 
node
->
tcb_¥iv
 = 
¥iv
;

19 
	}
}

21 
	$tcb_node_ª„ªn˚
(
tcb_node_t
 *
§c_node
,Åcb_node_à**
de°_node
)

23 if((
§c_node
!=
NULL
Ë&& (
de°_node
!=NULL)){

24 
	`©omic_öc
(&
§c_node
->
ªf_cou¡
);

25 *
de°_node
 = 
§c_node
;

27 
	}
}

29 
	$tcb_node_ªÀa£
(
tcb_node_t
 *
node
, 
tcb_node_poﬁ_t
 *
poﬁ
)

31 if((
node
!=
NULL
Ë&& (
poﬁ
!=NULL)){

32 if(
	`©omic_ªad
(&
node
->
ªf_cou¡
) > 1){

33 
	`©omic_dec
(&
node
->
ªf_cou¡
);

35 
	`©omic_£t
(&
node
->
ªf_cou¡
, 0);

36 if(
poﬁ
->
›
 !
NULL
){

37 
poﬁ
->
›
->
	`put
’oﬁ, 
node
);

39 
	`¥ötk
("%s.%d:Öoﬁ->› i†nuŒ\n", 
__FUNCTION__
, 
__LINE__
);

43 
	}
}

45 
	$tcb_node_upd©e_°©e
(
tcb_node_t
 *
node
, 
°©e
)

47 if(
node
 !
NULL
){

48 
node
->
°©e
 = state;

50 
	}
}

52 
tcb_node_›î©i⁄
 
	gtcb_node_›
 = {

53 .
öô
 = 
tcb_node_öô
,

54 .
	g£t_¥iv
 = 
tcb_node_£t_¥iv
,

55 .
	gª„ªn˚
 = 
tcb_node_ª„ªn˚
,

56 .
	gªÀa£
 = 
tcb_node_ªÀa£
,

57 .
	gupd©e_°©e
 = 
tcb_node_upd©e_°©e
,

60 
	$tcb_node_poﬁ_öô
(
tcb_node_poﬁ_t
 *
poﬁ
, 
íåy_numbî
)

62 if(
poﬁ
 !
NULL
){

63 
	`INIT_LIST_HEAD
(&
poﬁ
->
poﬁ_hódî
);

64 
	`öô_waôqueue_hód
(&
poﬁ
->
waô
);

65 
	`•ö_lock_öô
(&
poﬁ
->
lock
);

66 
	`©omic_£t
(&
poﬁ
->
cuº_poﬁ_íåy_numbî
, 0);

67 
poﬁ
->
poﬁ_íåy_numbî
 = 
íåy_numbî
;

69 
	}
}

71 
	$tcb_node_poﬁ_ªÀa£
(
tcb_node_poﬁ_t
 *
poﬁ
)

73 if(
poﬁ
 !
NULL
){

74 
Êags
;

75 
agaö
:

76 
	`•ö_lock_úqßve
(&
poﬁ
->
lock
, 
Êags
);

77 if(
poﬁ
->
poﬁ_íåy_numbî
 !
	`©omic_ªad
(&poﬁ->
cuº_poﬁ_íåy_numbî
)){

78 
	`•ö_u∆ock_úqª°‹e
(&
poﬁ
->
lock
, 
Êags
);

79 
	`waô_evít
(
poﬁ
->
waô
, (poﬁ->
poﬁ_íåy_numbî
 =
	`©omic_ªad
(&poﬁ->
cuº_poﬁ_íåy_numbî
)));

80 
agaö
;

82 
	`INIT_LIST_HEAD
(&
poﬁ
->
poﬁ_hódî
);

83 
poﬁ
->
poﬁ_íåy_numbî
 = 0;

84 
	`©omic_£t
(&
poﬁ
->
cuº_poﬁ_íåy_numbî
, 0);

85 
	`•ö_u∆ock_úqª°‹e
(&
poﬁ
->
lock
, 
Êags
);

88 
	}
}

90 
	$tcb_node_poﬁ_gë
(
tcb_node_poﬁ_t
 *
poﬁ
, 
tcb_node_t
 **
node
)

92 if(
poﬁ
!=
NULL
 && 
node
!=NULL){

93 
Êags
;

94 
agaö
:

95 
	`•ö_lock_úqßve
(&
poﬁ
->
lock
, 
Êags
);

96 if(
	`©omic_ªad
(&
poﬁ
->
cuº_poﬁ_íåy_numbî
) > 0){

97 
	`©omic_dec
(&
poﬁ
->
cuº_poﬁ_íåy_numbî
);

98 *
node
 = 
	`li°_íåy
(
poﬁ
->
poﬁ_hódî
.
√xt
, 
tcb_node_t
, 
li°
);

99 
	`li°_dñ_öô
(&((*
node
)->
li°
));

100 
	`©omic_öc
(&((*
node
)->
ªf_cou¡
));

101 
	`•ö_u∆ock_úqª°‹e
(&
poﬁ
->
lock
, 
Êags
);

103 
	`•ö_u∆ock_úqª°‹e
(&
poﬁ
->
lock
, 
Êags
);

104 
	`waô_evít
(
poﬁ
->
waô
, 
	`©omic_ªad
(&poﬁ->
cuº_poﬁ_íåy_numbî
));

105 
agaö
;

108 
	}
}

110 
	$tcb_node_poﬁ_åy_gë
(
tcb_node_poﬁ_t
 *
poﬁ
, 
tcb_node_t
 **
node
)

112 if(
poﬁ
!=
NULL
 && 
node
!=NULL){

113 
Êags
;

114 
	`•ö_lock_úqßve
(&
poﬁ
->
lock
, 
Êags
);

115 if(
	`©omic_ªad
(&
poﬁ
->
cuº_poﬁ_íåy_numbî
) > 0){

116 
	`©omic_dec
(&
poﬁ
->
cuº_poﬁ_íåy_numbî
);

117 *
node
 = 
	`li°_íåy
(
poﬁ
->
poﬁ_hódî
.
√xt
, 
tcb_node_t
, 
li°
);

118 
	`li°_dñ_öô
(&((*
node
)->
li°
));

119 
	`©omic_öc
(&((*
node
)->
ªf_cou¡
));

121 *
node
 = 
NULL
;

123 
	`•ö_u∆ock_úqª°‹e
(&
poﬁ
->
lock
, 
Êags
);

125 
	}
}

127 
	$tcb_node_poﬁ_put
(
tcb_node_poﬁ_t
 *
poﬁ
, 
tcb_node_t
 *
node
)

129 if(
poﬁ
!=
NULL
 && 
node
!=NULL){

130 
Êags
;

131 
	`•ö_lock_úqßve
(&
poﬁ
->
lock
, 
Êags
);

132 
node
->
›
->
	`öô
(node);

133 
	`li°_add_èû
(&
node
->
li°
, &
poﬁ
->
poﬁ_hódî
);

134 
	`©omic_öc
(&
poﬁ
->
cuº_poﬁ_íåy_numbî
);

135 if(
	`©omic_ªad
(&
poﬁ
->
cuº_poﬁ_íåy_numbî
) == 1){

136 
	`wake_up
(&
poﬁ
->
waô
);

138 
	`•ö_u∆ock_úqª°‹e
(&
poﬁ
->
lock
, 
Êags
);

140 
	}
}

142 
	$tcb_node_poﬁ_gë_cuº_poﬁ_íåy_numbî
(
tcb_node_poﬁ_t
 *
poﬁ
)

144 if(
poﬁ
 !
NULL
){

145  
	`©omic_ªad
(&
poﬁ
->
cuº_poﬁ_íåy_numbî
);

149 
	}
}

151 
tcb_poﬁ_›î©i⁄
 
	gtcb_node_poﬁ_›
 = {

152 .
öô
 = 
tcb_node_poﬁ_öô
,

153 .
	gªÀa£
 = 
tcb_node_poﬁ_ªÀa£
,

155 .
	ggë
 = 
tcb_node_poﬁ_gë
,

156 .
	gåy_gë
 = 
tcb_node_poﬁ_åy_gë
,

157 .
	gput
 = 
tcb_node_poﬁ_put
,

159 .
	ggë_cuº_poﬁ_íåy_numbî
 = 
tcb_node_poﬁ_gë_cuº_poﬁ_íåy_numbî
,

162 
	$tcb_node_queue_gë_queue_cuº_íåy_numbî
(
tcb_node_queue_t
 *
tcb_queue
)

164 if(
tcb_queue
 !
NULL
){

165  
	`©omic_ªad
(&
tcb_queue
->
cuº_queue_íåy_numbî
);

169 
	}
}

171 
	$tcb_node_queue_öô
(
tcb_node_queue_t
 *
tcb_queue
)

173 if(
tcb_queue
 !
NULL
){

174 
	`•ö_lock_öô
(&
tcb_queue
->
lock
);

175 
	`INIT_LIST_HEAD
(&
tcb_queue
->
queue_hódî
);

176 
	`öô_waôqueue_hód
(&
tcb_queue
->
waô
);

177 
	`©omic_£t
(&
tcb_queue
->
cuº_queue_íåy_numbî
, 0);

179 
	}
}

181 
	$tcb_node_queue_put
(
tcb_node_queue_t
 *
tcb_queue
, 
tcb_node_t
 *
tcb_node
)

183 if((
tcb_queue
!=
NULL
Ë&& (
tcb_node
!=NULL)){

184 
Êags
;

185 
	`•ö_lock_úqßve
(&
tcb_queue
->
lock
, 
Êags
);

186 
	`li°_add_èû
(&
tcb_node
->
li°
, &
tcb_queue
->
queue_hódî
);

187 
	`©omic_öc
(&
tcb_queue
->
cuº_queue_íåy_numbî
);

188 if(
	`©omic_ªad
(&
tcb_queue
->
cuº_queue_íåy_numbî
) == 1){

189 
	`wake_up
(&
tcb_queue
->
waô
);

191 
	`•ö_u∆ock_úqª°‹e
(&
tcb_queue
->
lock
, 
Êags
);

193 
	}
}

195 
	$tcb_node_queue_put_hódî
(
tcb_node_queue_t
 *
tcb_queue
, 
tcb_node_t
 *
tcb_node
)

197 if((
tcb_queue
!=
NULL
Ë&& (
tcb_node
!=NULL)){

198 
Êags
;

199 
	`•ö_lock_úqßve
(&
tcb_queue
->
lock
, 
Êags
);

200 
	`li°_add
(&
tcb_node
->
li°
, &
tcb_queue
->
queue_hódî
);

201 
	`©omic_öc
(&
tcb_queue
->
cuº_queue_íåy_numbî
);

202 if(
	`©omic_ªad
(&
tcb_queue
->
cuº_queue_íåy_numbî
) == 1){

203 
	`wake_up
(&
tcb_queue
->
waô
);

205 
	`•ö_u∆ock_úqª°‹e
(&
tcb_queue
->
lock
, 
Êags
);

207 
	}
}

209 
	$tcb_node_queue_gë
(
tcb_node_queue_t
 *
tcb_queue
, 
tcb_node_t
 **
tcb_node
)

211 if((
tcb_queue
!=
NULL
Ë&& (
tcb_node
!=NULL)){

212 
Êags
;

213 
agaö
:

214 
	`•ö_lock_úqßve
(&
tcb_queue
->
lock
, 
Êags
);

215 if(
	`©omic_ªad
(&
tcb_queue
->
cuº_queue_íåy_numbî
)){

216 
	`©omic_dec
(&
tcb_queue
->
cuº_queue_íåy_numbî
);

217 *
tcb_node
 = 
	`li°_íåy
(
tcb_queue
->
queue_hódî
.
√xt
, 
tcb_node_t
, 
li°
);

218 
	`li°_dñ_öô
(&(*
tcb_node
)->
li°
);

219 
	`•ö_u∆ock_úqª°‹e
(&
tcb_queue
->
lock
, 
Êags
);

221 
	`•ö_u∆ock_úqª°‹e
(&
tcb_queue
->
lock
, 
Êags
);

222 
	`waô_evít
(
tcb_queue
->
waô
, 
	`©omic_ªad
(&tcb_queue->
cuº_queue_íåy_numbî
));

223 
agaö
;

226 
	`¥ötk
("\n%s.%d**©ã¡i⁄**\n", 
__FUNCTION__
, 
__LINE__
);

228 
	}
}

230 
	$tcb_node_queue_gë_èûî
(
tcb_node_queue_t
 *
tcb_queue
, 
tcb_node_t
 **
tcb_node
)

232 if((
tcb_queue
!=
NULL
Ë&& (
tcb_node
!=NULL)){

233 
Êags
;

234 
agaö
:

235 
	`•ö_lock_úqßve
(&
tcb_queue
->
lock
, 
Êags
);

236 if(
	`©omic_ªad
(&
tcb_queue
->
cuº_queue_íåy_numbî
)){

237 
	`©omic_dec
(&
tcb_queue
->
cuº_queue_íåy_numbî
);

238 *
tcb_node
 = 
	`li°_íåy
(
tcb_queue
->
queue_hódî
.
¥ev
, 
tcb_node_t
, 
li°
);

239 
	`li°_dñ_öô
(&(*
tcb_node
)->
li°
);

240 
	`•ö_u∆ock_úqª°‹e
(&
tcb_queue
->
lock
, 
Êags
);

242 
	`•ö_u∆ock_úqª°‹e
(&
tcb_queue
->
lock
, 
Êags
);

243 
	`waô_evít
(
tcb_queue
->
waô
, 
	`©omic_ªad
(&tcb_queue->
cuº_queue_íåy_numbî
));

244 
agaö
;

247 
	}
}

249 
	$tcb_node_queue_åy_gë
(
tcb_node_queue_t
 *
tcb_queue
, 
tcb_node_t
 **
tcb_node
)

251 if((
tcb_queue
!=
NULL
Ë&& (
tcb_node
!=NULL)){

252 
Êags
;

253 
	`•ö_lock_úqßve
(&
tcb_queue
->
lock
, 
Êags
);

254 if(
	`©omic_ªad
(&
tcb_queue
->
cuº_queue_íåy_numbî
)){

255 
	`©omic_dec
(&
tcb_queue
->
cuº_queue_íåy_numbî
);

256 *
tcb_node
 = 
	`li°_íåy
(
tcb_queue
->
queue_hódî
.
√xt
, 
tcb_node_t
, 
li°
);

257 
	`li°_dñ_öô
(&(*
tcb_node
)->
li°
);

259 *
tcb_node
 = 
NULL
;

261 
	`•ö_u∆ock_úqª°‹e
(&
tcb_queue
->
lock
, 
Êags
);

263 
	}
}

265 
	$tcb_node_queue_åy_gë_èûî
(
tcb_node_queue_t
 *
tcb_queue
, 
tcb_node_t
 **
tcb_node
)

267 if((
tcb_queue
!=
NULL
Ë&& (
tcb_node
!=NULL)){

268 
Êags
;

269 
	`•ö_lock_úqßve
(&
tcb_queue
->
lock
, 
Êags
);

270 if(
	`©omic_ªad
(&
tcb_queue
->
cuº_queue_íåy_numbî
)){

271 
	`©omic_dec
(&
tcb_queue
->
cuº_queue_íåy_numbî
);

272 *
tcb_node
 = 
	`li°_íåy
(
tcb_queue
->
queue_hódî
.
¥ev
, 
tcb_node_t
, 
li°
);

273 
	`li°_dñ_öô
(&(*
tcb_node
)->
li°
);

275 *
tcb_node
 = 
NULL
;

277 
	`•ö_u∆ock_úqª°‹e
(&
tcb_queue
->
lock
, 
Êags
);

279 
	}
}

281 
tcb_node_queue_›î©i⁄
 
	gtcb_node_queue_›
 = {

282 .
gë_queue_cuº_íåy_numbî
 = 
tcb_node_queue_gë_queue_cuº_íåy_numbî
,

284 .
	göô
 = 
tcb_node_queue_öô
,

285 .
	gput
 = 
tcb_node_queue_put
,

286 .
	gput_hódî
 = 
tcb_node_queue_put_hódî
,

287 .
	ggë
 = 
tcb_node_queue_gë
,

288 .
	ggë_èûî
 = 
tcb_node_queue_gë_èûî
,

289 .
	gåy_gë
 = 
tcb_node_queue_åy_gë
,

290 .
	gåy_gë_èûî
 = 
tcb_node_queue_åy_gë_èûî
,

	@../../tw5864/tw5864/dvm_rc.c

1 
	~<tw5864/dvm_comm⁄.h
>

5 
	gRC_DEFAULT_NONTEXTURE_BITS
[12] =

23 
	grqp_èbÀ
[
QP_LOOKUP_TABLE_STEP
]=

40 
cbr_upd©e_øã_c⁄åﬁ
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
, 
tw_cbr_rc_∑øm_t
 *
rc_öfo
);

41 
cbr_upd©e_rho_∑ømëîs
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
, 
tw_cbr_rc_∑øm_t
 *
rc_öfo
);

42 
cbr_e°im©e_bô_budgë
(
boﬁón
 
ötülizeBôBudgëFœg
, 
tw_cbr_rc_∑øm_t
 *
rc_öfo
, 
tw_h264_logic_ícode_ch™_t
 *
ícodî
);

43 
cbr_ˇlcuœã_qu™t_∑ømëî
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
, 
tw_cbr_rc_∑øm_t
 *
rc_öfo
);

44 
tw_rc_drivî_›
 
	gcbr_drivî_›
;

45 
tw_rc_drivî_›
 
	gvbr_drivî_›
;

46 
tw_rc_drivî_›
 
	grc_drivî_›
;

48 
	$dvm_cbr_rc_öô
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
)

50 
tw_cbr_rc_∑øm_t
 *
rc_öfo
;

51 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

52 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

53 
i
, 
num_mbs
;

54 
èrgë_bôøã
, 
èrgë_Âs
, 
èrgë_key_‰ame_öãrvÆs
;

56 
rc_öfo
 = &
ícodî
->
rc_drivî
.
cbr
.
rc_∑øm
;

57 
ícode_¥›îty
 = &
ícodî
->encode_property;

58 
ícode_c⁄åﬁ
 = &
ícodî
->encode_control;

59 
èrgë_bôøã
 = 
ícode_¥›îty
->
›
->
	`gë_èrgë_bôøã
(encode_property);

60 
èrgë_Âs
 = 
ícode_¥›îty
->
›
->
	`gë_èrgë_Âs
(encode_property);

61 
èrgë_key_‰ame_öãrvÆs
 = 
ícode_¥›îty
->
›
->
	`gë_keyFømeI¡îvÆs
(encode_property);

62 
rc_öfo
->
b_Êag_upd©e
 = 0;

63 
num_mbs
 = 
ícode_c⁄åﬁ
->
i_mb_x
*ícode_c⁄åﬁ->
i_mb_y
;

65 
rc_öfo
->
A
 = 
RC_RHO_BITRATE_A
;

66 
rc_öfo
->
nz_cou¡
 = 0;

67 
rc_öfo
->
bôs_f‹_n⁄ãxt_e°
 = 
num_mbs
*
RC_DEFAULT_NONTEXTURE_BITS
[
èrgë_bôøã
/100000 > 10 ? 0: 11-target_bitrate/100000];

68 
rc_öfo
->
öô_rc_wödow
 =Ñc_öfo->
rc_wödow
 = 
	`H264_MEDIAN
(
SMOOTH_WINDOW_MIN_SIZE
, 
SMOOTH_WINDOW_MAX_SIZE
, 
èrgë_key_‰ame_öãrvÆs
);

71 
i
=
QUANT_SCALE_MIN
; i<(
QUANT_SCALE_MAX
+1); i++ ){

72 
rc_öfo
->
rho_qp_èbÀ
[
i
]=(
rqp_èbÀ
[i]*
num_mbs
)<<1;

73 #ifde‡ 
RC_DEBUG


74 
	`¥ötk
("%d:Ñc_öfo->rho_qp_èbÀ[%d]=%d\n", 
__LINE__
, 
i
, 
rc_öfo
->
rho_qp_èbÀ
[i]);

79 
rc_öfo
->
bôs_≥r_‰ame
 = (
èrgë_bôøã
 + (
èrgë_Âs
>>1)) /Åarget_fps;

80 
rc_öfo
->
tŸÆ_bô_dñè
 = 0;

83 
rc_öfo
->
mö_‰ame_bô_budgë
 = 
èrgë_bôøã
/
RC_MIN_BIT_BUDGET_CONST
;

84 
rc_öfo
->
max_‰ame_bô_budgë
 = (rc_öfo->
bôs_≥r_‰ame
*5)>>2;

85 
rc_öfo
->
¥ev_n‹m_‰ame_bôs_u£d
 =0;

87 
rc_öfo
->
rho
 = 0;

88 
rc_öfo
->
bôs_u£d_‰ame
 = 0;

89 
rc_öfo
->
¥ev_bô_budgë
 = 0;

90 
rc_öfo
->
¥ev_qp
 = 
ícode_¥›îty
->
›
->
	`gë_qpi
(encode_property);

92 
rc_öfo
->
øtio
 = 1024;

93 
rc_öfo
->
tŸÆ_øtio
 = 1024;

94 
rc_öfo
->
fú°_‰ame_qp
 = 0;

95 
rc_öfo
->
fú°_10_max_qp
 = 0;

96 
rc_öfo
->
fú°_10_mö_qp
 = 60;

97 #ifde‡ 
RC_DEBUG


98 
	`¥ötk
("bps=%d, fps=%d,Çumb_mb=%d, min_budget=%d, max_budget=%d, bit_per_frame=%d\n",

99 
èrgë_bôøã
,

100 
èrgë_Âs
,

101 
num_mbs
,

102 
rc_öfo
->
mö_‰ame_bô_budgë
,

103 
rc_öfo
->
max_‰ame_bô_budgë
,

104 
rc_öfo
->
bôs_≥r_‰ame
);

106 
	}
}

108 
	$dvm264_cbr_upd©e_rc
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
, 
tw_video_‰ame_tcb_t
 *
video_‰ame
)

110 
tw_cbr_rc_∑øm_t
 *
rc_öfo
;

111 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

113 
rc_öfo
 = &
ícodî
->
rc_drivî
.
cbr
.
rc_∑øm
;

114 
ícode_c⁄åﬁ
 = &
ícodî
->encode_control;

115 if((
rc_öfo
->
nz_cou¡
==0) &&

116 (
ícode_c⁄åﬁ
->
‰ame_ty≥
!=
H264_FRAME_TYPE_I
) &&

117 (
ícode_c⁄åﬁ
->
‰ame_ty≥
!=
H264_FRAME_TYPE_IDR
)) {

118 
rc_öfo
->
bôs_u£d_‰ame
 = 0;

119 
rc_öfo
->
¥ev_qp
 = 
ícode_c⁄åﬁ
->
i_cuº_qp
;

120 
rc_öfo
->
¥ev_bô_budgë
 =Ñc_öfo->
n‹m_‰ame_bô_budgë
;

122 
	`cbr_upd©e_øã_c⁄åﬁ
(
ícodî
, 
rc_öfo
);

124 #ifde‡ 
RC_DEBUG


125 
	`¥ötk
("qp=%d,Örev_qp=%d,Örev_bit_budget=%d,Çorm_frame_bit_budget=%d,Åotal_bits_delta=%d\n",

126 
ícode_c⁄åﬁ
->
i_cuº_qp
,

127 
rc_öfo
->
¥ev_qp
,

128 
rc_öfo
->
¥ev_bô_budgë
,

129 
rc_öfo
->
n‹m_‰ame_bô_budgë
,

130 
rc_öfo
->
tŸÆ_bô_dñè
);

132 
	}
}

134 
	$cbr_upd©e_øã_c⁄åﬁ
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
, 
tw_cbr_rc_∑øm_t
 *
rc_öfo
)

136 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

137 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

138 
key_‰ame_öãrvÆs
;

140 
ícode_¥›îty
 = &
ícodî
->encode_property;

141 
key_‰ame_öãrvÆs
 = 
ícode_¥›îty
->
›
->
	`gë_keyFømeI¡îvÆs
(encode_property);

142 
ícode_c⁄åﬁ
 = &
ícodî
->encode_control;

145 
rc_öfo
->
¥ev_n‹m_‰ame_bôs_u£d
 =Ñc_öfo->
bôs_u£d_‰ame
;

148 if(
ícode_c⁄åﬁ
->
i_‰ame_£rül
) {

149 
rc_öfo
->
tŸÆ_bô_dñè
 -‘c_öfo->
bôs_≥r_‰ame
-rc_öfo->
bôs_u£d_‰ame
);

151 if(
rc_öfo
->
tŸÆ_bô_dñè
 < (-rc_öfo->
max_‰ame_bô_budgë
)){

152 
rc_öfo
->
tŸÆ_bô_dñè
 = -rc_öfo->
max_‰ame_bô_budgë
;

156 if((
ícode_c⁄åﬁ
->
‰ame_ty≥
==
H264_FRAME_TYPE_I
Ë|| (ícode_c⁄åﬁ->‰ame_ty≥==
H264_FRAME_TYPE_IDR
)){

157 
rc_öfo
->
nz_cou¡
 = 0;

158 
rc_öfo
->
øtio
 = 1024;

160 
u32
 
i
;

161 
rc_öfo
->
øtio
(‘c_öfo->
rho_qp_èbÀ
[Ñc_öfo->
¥ev_qp
]/Ñc_öfo->
tŸÆ_øtio
)<<10)/Ñc_öfo->
nz_cou¡
;

162 
rc_öfo
->
øtio
 = (rc_info->ratio - 1024)>>1;

163 
rc_öfo
->
øtio
 =rc_info->ratio+1024;

164 
i
 = 
rc_öfo
->
tŸÆ_øtio
 *rc_öfo->
øtio
;

165 
i
 = i>>10;

166 
rc_öfo
->
tŸÆ_øtio
 = 
i
;

169 
	`cbr_upd©e_rho_∑ømëîs
(
ícodî
, 
rc_öfo
);

171 
rc_öfo
->
bôs_u£d_‰ame
=0;

172 
rc_öfo
->
¥ev_qp
 = 
ícode_c⁄åﬁ
->
i_cuº_qp
;

173 
rc_öfo
->
¥ev_bô_budgë
 =Ñc_öfo->
n‹m_‰ame_bô_budgë
;

174 
	}
}

176 
	$cbr_upd©e_rho_∑ømëîs
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
, 
tw_cbr_rc_∑øm_t
 *
rc_öfo
)

178 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

179 
ícode_c⁄åﬁ
 = &
ícodî
->encode_control;

180 
rc_öfo
->
n‹m_‰ame_bô_budgë
 = 
	`cbr_e°im©e_bô_budgë
(0,Ñc_öfo, 
ícodî
);

181 
ícode_c⁄åﬁ
->
i_cuº_qp
 = 
	`cbr_ˇlcuœã_qu™t_∑ømëî
(
ícodî
, 
rc_öfo
);

182 
	}
}

184 
	$cbr_e°im©e_bô_budgë
(
boﬁón
 
ötülizeBôBudgëFœg
, 
tw_cbr_rc_∑øm_t
 *
rc_öfo
, 
tw_h264_logic_ícode_ch™_t
 *
ícodî
)

186 
cuºít_bô_budgë
;

188 
cuºít_bô_budgë
 = ((
rc_öfo
->
bôs_≥r_‰ame
*rc_öfo->
rc_wödow
Ë-rc_öfo->
tŸÆ_bô_dñè
)/rc_info->rc_window;

189  
	`H264_MEDIAN
(
rc_öfo
->
mö_‰ame_bô_budgë
,Ñc_öfo->
max_‰ame_bô_budgë
, 
cuºít_bô_budgë
);

190 
	}
}

192 
	$cbr_ˇlcuœã_qu™t_∑ømëî
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
, 
tw_cbr_rc_∑øm_t
 *
rc_öfo
)

194 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

195 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

196 
key_‰ame_öãrvÆs
;

197 *
±r_cbr_dqp
, 
dqp
[
QP_LOOKUP_TABLE_STEP
];

198 
qp
, 
i
, 
max_qp_adju°_down
, 
max_qp_adju°_up
, 
¥ev_qp
, 
cuºít_bô_budgë
;

200 
ícode_¥›îty
 = &
ícodî
->encode_property;

201 
key_‰ame_öãrvÆs
 = 
ícode_¥›îty
->
›
->
	`gë_keyFømeI¡îvÆs
(encode_property);

202 
ícode_c⁄åﬁ
 = &
ícodî
->encode_control;

203 
±r_cbr_dqp
 = 
dqp
;

205 
cuºít_bô_budgë
 = 
rc_öfo
->
n‹m_‰ame_bô_budgë
;

206 
qp
 = 
¥ev_qp
 = 
rc_öfo
->prev_qp;

208 if(
rc_öfo
->
nz_cou¡
){

209 
rc_öfo
->
A
 = (‘c_öfo->
¥ev_n‹m_‰ame_bôs_u£d
 -Ñc_öfo->
bôs_f‹_n⁄ãxt_e°
)<<8)/rc_öfo->
nz_cou¡
;

212 if((
ícode_c⁄åﬁ
->
‰ame_ty≥
!=
H264_FRAME_TYPE_I
Ë&& (ícode_c⁄åﬁ->‰ame_ty≥!=
H264_FRAME_TYPE_IDR
)) {

213 
rc_öfo
->
bôs_f‹_n⁄ãxt_e°
 =‘c_öfo->bôs_f‹_n⁄ãxt_e° *(1024+((((
cuºít_bô_budgë
<<10)/rc_öfo->
¥ev_n‹m_‰ame_bôs_u£d
 -1024)*308)>>10)))>>10;

215 
rc_öfo
->
rho
 = ((
cuºít_bô_budgë
 -Ñc_öfo->
bôs_f‹_n⁄ãxt_e°
)<< 8)/rc_öfo->
A
;

216 if((
ícode_c⁄åﬁ
->
‰ame_ty≥
==
H264_FRAME_TYPE_I
Ë|| (ícode_c⁄åﬁ->‰ame_ty≥==
H264_FRAME_TYPE_IDR
)) {

217 if(
ícode_c⁄åﬁ
->
i_‰ame_£rül
 < 
key_‰ame_öãrvÆs
){

218 
rc_öfo
->
rho
 = ((
cuºít_bô_budgë
 -Ñc_öfo->
bôs_f‹_n⁄ãxt_e°
Ë<< 7Ë/Ñc_öfo->
A
;

220 if–((
rc_öfo
->
fú°_10_max_qp
 -Ñc_öfo->
fú°_10_mö_qp
)<<10Ë/rc_öfo->
fú°_‰ame_qp
> 
HIGH_TEXT_PERCENT
){

221 
rc_öfo
->
rho
 = ((
cuºít_bô_budgë
 -Ñc_öfo->
bôs_f‹_n⁄ãxt_e°
Ë* (1024+ (rc_öfo->
tŸÆ_øtio
-1024)*7/8Ë/rc_öfo->
A
)>>3 ;

223 
rc_öfo
->
rho
 = ((
cuºít_bô_budgë
 -Ñc_öfo->
bôs_f‹_n⁄ãxt_e°
Ë* (1024+Ñc_öfo->
tŸÆ_øtio
Ë/rc_öfo->
A
 )>>4;

225 
rc_öfo
->
tŸÆ_øtio
 = 1024;

229 if–
rc_öfo
->
rho
 >=0 ) {

230 
i
=
QUANT_SCALE_MIN
; i<(
QUANT_SCALE_MAX_ADD1
); i++ ) {

231 
±r_cbr_dqp
[
i
] = 
rc_öfo
->
rho_qp_èbÀ
[i]/rc_öfo->
tŸÆ_øtio
 -rc_öfo->
rho
;

232 if(
±r_cbr_dqp
[
i
] < 0) {

236 
qp

i
-1;

237 if(
	`ABS
(
±r_cbr_dqp
[
i
]) <Ötr_cbr_dqp[i-1]) {

238 
qp
 =
i
;

241 
qp
 = 
QUANT_SCALE_MAX
;

244 if(
ícode_c⁄åﬁ
->
i_‰ame_£rül
 == 0){

245 
rc_öfo
->
fú°_‰ame_qp
 = 
qp
;

246  
qp
;

249 if(
rc_öfo
->
tŸÆ_bô_dñè
>rc_öfo->
bôs_≥r_‰ame
*3){

250 
qp
 += 1;

253 
max_qp_adju°_down
 = (
¥ev_qp
*
QUANT_SCALE_MAX
)>>10;

254 if(
max_qp_adju°_down
 == 0){

255 
max_qp_adju°_down
=1;

257 
max_qp_adju°_up
 = (
¥ev_qp
*
QUANT_SCALE_MAX
)>>9;

258 if(
max_qp_adju°_up
 > 10){

259 
max_qp_adju°_up
=10;

262 if(
ícode_c⁄åﬁ
->
‰ame_ty≥
 =
H264_FRAME_TYPE_P
){

263 if(((
qp
-
¥ev_qp
)<<9 ) > (qp*
QUANT_SCALE_MAX
)){

264 
qp
 = 
¥ev_qp
+
max_qp_adju°_up
;

265 } i‡(((
qp
-
¥ev_qp
)<<10Ë< -’ªv_qp*
QUANT_SCALE_MAX
)){

266 
qp
 = 
¥ev_qp
-
max_qp_adju°_down
;

270 if(
¥ev_qp
-
qp
 > 2){

271 
qp
 = 
¥ev_qp
-2;

272 } if(
¥ev_qp
-
qp
 < -2){

273 
qp
 = 
¥ev_qp
+2;

275 
qp
 = 
	`H264_MEDIAN
(
QUANT_SCALE_MIN
, 
QUANT_SCALE_MAX
, qp);

277 if(
ícode_c⁄åﬁ
->
i_‰ame_£rül
 <= 10) {

278 if(
qp
<
rc_öfo
->
fú°_10_mö_qp
){

279 
rc_öfo
->
fú°_10_mö_qp
 = 
qp
;

281 if(
qp
>
rc_öfo
->
fú°_10_max_qp
){

282 
rc_öfo
->
fú°_10_max_qp
 = 
qp
;

286 (
qp
);

287 
	}
}

289 
	$dvm264_cbr_upd©e_rc_∑ø
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
)

291 
tw_cbr_rc_∑øm_t
 *
rc_öfo
;

292 
dvm_chù_t
 *
chù
;

293 
u32
 
bôs_u£d_‰ame
;

294 
u32
 
n⁄_zîo_cou¡
;

295 
u32
 
bôs_f‹_n⁄ãxt_e°
;

296 
u32
 
ªsiduÆ_bôs_u£d_‰ame
;

298 
rc_öfo
 = &
ícodî
->
rc_drivî
.
cbr
.
rc_∑øm
;

299 
chù
 = 
ícodî
->chip;

300 
bôs_u£d_‰ame
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
SLICE_TOTAL_BIT_NUMBER
);

301 
n⁄_zîo_cou¡
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
TOTAL_COEFF_NUMBER
);

302 
ªsiduÆ_bôs_u£d_‰ame
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
RES_TOTAL_BIT_NUMBER
);

303 
bôs_f‹_n⁄ãxt_e°
 = 
bôs_u£d_‰ame
 - 
ªsiduÆ_bôs_u£d_‰ame
;

304 
rc_öfo
->
b_Êag_upd©e
 = 0;

305 
rc_öfo
->
bôs_u£d_‰ame
 = bits_used_frame;

306 
rc_öfo
->
nz_cou¡
 = 
n⁄_zîo_cou¡
;

307 
rc_öfo
->
bôs_f‹_n⁄ãxt_e°
 = bits_for_nontext_est;

308 #ifde‡ 
RC_DEBUG


309 
	`¥ötk
("bits_used_frame = %d,Çon_zero_count = %d, bits_for_nontext_est = %d\n\n",

310 
rc_öfo
->
bôs_u£d_‰ame
,

311 
rc_öfo
->
nz_cou¡
,

312 
rc_öfo
->
bôs_f‹_n⁄ãxt_e°
);

314 
	}
}

316 
	$dvm264_cbr_jump_rc
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
)

318 
ícodî
->
rc_drivî
.
cbr
.
rc_∑øm
.
b_Êag_upd©e
 = 1;

319 #ifde‡ 
RC_DEBUG


320 
	`¥ötk
("%s.%d: ch™_%d_%d\n", 
__FUNCTION__
, 
__LINE__
, 
ícodî
->
phy_¶Ÿ_id
,Éncodî->
logic_ch™_id
);

322 
	}
}

324 
tw_rc_drivî_›
 
	gcbr_drivî_›
 =

326 .
öô_rc
 = 
dvm_cbr_rc_öô
,

327 .
	g£t_qp
 = 
dvm264_cbr_upd©e_rc
,

328 .
	gupd©e_rc
 = 
dvm264_cbr_upd©e_rc_∑ø
,

329 .
	gjump_rc
 = 
dvm264_cbr_jump_rc
,

332 
	$dvm_vbr_rc_öô
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
)

334 
tw_vbr_rc_°ru˘_t
 *
rc_öfo
;

335 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

336 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

337 
ödex
, 
i
, 
num_mbs
;

338 
èrgë_bôøã
, 
èrgë_Âs
, 
èrgë_i_p_°ride
;

340 
rc_öfo
 = &
ícodî
->
rc_drivî
.
vbr
.
rc_∑øm
;

341 
ícode_¥›îty
 = &
ícodî
->encode_property;

342 
ícode_c⁄åﬁ
 = &
ícodî
->encode_control;

343 
èrgë_bôøã
 = 
ícode_¥›îty
->
›
->
	`gë_èrgë_bôøã
(encode_property);

344 
èrgë_Âs
 = 
ícode_¥›îty
->
›
->
	`gë_èrgë_Âs
(encode_property);

345 
èrgë_i_p_°ride
 = 
ícode_¥›îty
->
›
->
	`gë_keyFømeI¡îvÆs
(encode_property);

347 
rc_öfo
->
b_Êag_upd©e
 = 0;

348 
num_mbs
 = 
ícode_c⁄åﬁ
->
i_mb_x
*ícode_c⁄åﬁ->
i_mb_y
;

349 
rc_öfo
->
A
 = 
RC_RHO_BITRATE_A
;

350 
rc_öfo
->
nz_cou¡
 = 0;

351 
ödex
 = 
èrgë_bôøã
/100000;

352 
rc_öfo
->
bôs_f‹_n⁄ãxt_e°
 = 
num_mbs
*
RC_DEFAULT_NONTEXTURE_BITS
[
ödex
 > 10 ? 0 : (11-index)];

353 
rc_öfo
->
öô_rc_wödow
 =Ñc_öfo->
rc_wödow
 = 
	`H264_MEDIAN
(
SMOOTH_WINDOW_MIN_SIZE
, 
SMOOTH_WINDOW_MAX_SIZE
, 
èrgë_i_p_°ride
);

356 
i
=
QUANT_SCALE_MIN
; i<(
QUANT_SCALE_MAX
+1); i++ )

357 
rc_öfo
->
rho_qp_èbÀ
[
i
]=(
rqp_èbÀ
[i]*
num_mbs
)<<1;

360 
rc_öfo
->
bôs_≥r_‰ame
 = (
èrgë_bôøã
 + (
èrgë_Âs
>>1) ) /Åarget_fps;

361 
rc_öfo
->
bôs_pFøme
 =Ñc_öfo->
bôs_≥r_‰ame
;

362 
rc_öfo
->
tŸÆ_bô_dñè
 = 0;

365 
rc_öfo
->
mö_‰ame_bô_budgë
 = 
èrgë_bôøã
/
RC_MIN_BIT_BUDGET_CONST
;

366 
rc_öfo
->
max_‰ame_bô_budgë
 = (rc_öfo->
bôs_≥r_‰ame
*5)>>2;

367 
rc_öfo
->
¥ev_n‹m_‰ame_bôs_u£d
 =0;

368 
rc_öfo
->
rho
 = 0;

369 
rc_öfo
->
bôs_u£d_‰ame
 = 0;

370 
rc_öfo
->
¥ev_bô_budgë
 = 0;

371 
rc_öfo
->
¥ev_two_qp
 =Ñc_öfo->
¥ev_qp
 = 
ícode_¥›îty
->
›
->
	`gë_qpi
(encode_property);

373 
rc_öfo
->
øtio
 = 1024;

374 
rc_öfo
->
tŸÆ_øtio
 = 1024;

375 
rc_öfo
->
fú°_‰ame_qp
 = 0;

376 
rc_öfo
->
fú°_10_max_qp
 = 0;

377 
rc_öfo
->
fú°_10_mö_qp
 = 
QUANT_SCALE_MAX
;

379 
rc_öfo
->
Àak_buf„r
 = 0;

380 
rc_öfo
->
¥e_skùnum
 = 0;

381 if(
èrgë_bôøã
<=250000){

382 
rc_öfo
->
buf„r_thªshﬁd
 = (rc_öfo->
bôs_≥r_‰ame
<<1);

383 
rc_öfo
->
èrgë_öô_qp
 = 40;

384 } if(
èrgë_bôøã
<=500000){

385 
rc_öfo
->
buf„r_thªshﬁd
 = (rc_öfo->
bôs_≥r_‰ame
<<1);

386 
rc_öfo
->
èrgë_öô_qp
 = 36;

387 } if(
èrgë_bôøã
<=1000000){

388 
rc_öfo
->
buf„r_thªshﬁd
 = (rc_öfo->
bôs_≥r_‰ame
<<2);

389 
rc_öfo
->
èrgë_öô_qp
 = 32;

390 } if(
èrgë_bôøã
<=2000000){

391 
rc_öfo
->
buf„r_thªshﬁd
 = (rc_öfo->
bôs_≥r_‰ame
<<3);

392 
rc_öfo
->
èrgë_öô_qp
 = 26;

394 
rc_öfo
->
buf„r_thªshﬁd
 = (rc_öfo->
bôs_≥r_‰ame
<<4);

395 
rc_öfo
->
èrgë_öô_qp
 = 20;

397 #ifde‡ 
RC_DEBUG


398 
	`¥ötk
("%s.%d: ch™_%d_%d\n", 
__FUNCTION__
, 
__LINE__
, 
ícodî
->
phy_¶Ÿ_id
,Éncodî->
logic_ch™_id
);

400 
	}
}

402 
	$vbr_e°im©e_bô_budgë
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
, 
tw_vbr_rc_°ru˘_t
 *
rc_öfo
)

404 
cuºít_bô_budgë
;

406 
cuºít_bô_budgë
 = 
rc_öfo
->
bôs_pFøme
 -Ñc_öfo->
tŸÆ_bô_dñè
/rc_öfo->
rc_wödow
;

407 
rc_öfo
->
rc_wödow
--;

408 if(
rc_öfo
->
rc_wödow
==0){

409 
rc_öfo
->
rc_wödow
 =Ñc_öfo->
öô_rc_wödow
;

411  
	`H264_MEDIAN
(
rc_öfo
->
mö_‰ame_bô_budgë
,Ñc_öfo->
max_‰ame_bô_budgë
, 
cuºít_bô_budgë
);

412 
	}
}

414 
	$vbr_ˇlcuœã_qu™t_∑ømëî
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
, 
tw_vbr_rc_°ru˘_t
 *
rc_öfo
)

416 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

417 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

418 
key_‰ame_öãrvÆs
;

419 *
±r_cbr_dqp
, 
dqp
[
QP_LOOKUP_TABLE_STEP
];

420 
qp
, 
i
, 
max_qp_adju°_down
, 
max_qp_adju°_up
, 
¥ev_qp
, 
cuºít_bô_budgë
;

421 
ﬁd_A
;

423 
ícode_¥›îty
 = &
ícodî
->encode_property;

424 
key_‰ame_öãrvÆs
 = 
ícode_¥›îty
->
›
->
	`gë_keyFømeI¡îvÆs
(encode_property);

425 
ícode_c⁄åﬁ
 = &
ícodî
->encode_control;

426 
cuºít_bô_budgë
 = 
rc_öfo
->
n‹m_‰ame_bô_budgë
;

427 
qp
 = 
¥ev_qp
 = 
rc_öfo
->prev_qp;

428 
±r_cbr_dqp
 = 
dqp
;

430 
ﬁd_A
 = 
rc_öfo
->
A
;

431 if(
rc_öfo
->
nz_cou¡
){

432 
rc_öfo
->
A
 = (‘c_öfo->
¥ev_n‹m_‰ame_bôs_u£d
 -Ñc_öfo->
bôs_f‹_n⁄ãxt_e°
)<<8)/rc_öfo->
nz_cou¡
;

433 if(
rc_öfo
->
A
==0){

434 
rc_öfo
->
A
 = 
ﬁd_A
;

437 if(
ícode_c⁄åﬁ
->
‰ame_ty≥
 =
H264_FRAME_TYPE_P
) {

438 i‡(
rc_öfo
->
¥ev_n‹m_‰ame_bôs_u£d
 != 0) {

439 
rc_öfo
->
bôs_f‹_n⁄ãxt_e°
 = (rc_öfo->bôs_f‹_n⁄ãxt_e°*(1024+((((
cuºít_bô_budgë
<<10)/rc_öfo->
¥ev_n‹m_‰ame_bôs_u£d
 -1024)*308)>>10)))>>10;

440 
cuºít_bô_budgë
 -
rc_öfo
->
bôs_f‹_n⁄ãxt_e°
;

441 
cuºít_bô_budgë
 <<= 8;

442 
rc_öfo
->
rho
 = 
cuºít_bô_budgë
/rc_öfo->
A
;

445 
cuºít_bô_budgë
 -
rc_öfo
->
bôs_f‹_n⁄ãxt_e°
;

446 if((
ícode_c⁄åﬁ
->
i_‰ame_£rül
 < 
key_‰ame_öãrvÆs
) || (key_frame_intervals <= 1)) {

447 
rc_öfo
->
rho
 = (
cuºít_bô_budgë
<<7)/rc_öfo->
A
;

449 if–((
rc_öfo
->
fú°_10_max_qp
 -Ñc_öfo->
fú°_10_mö_qp
)<<10)/rc_öfo->
fú°_‰ame_qp
 > 
HIGH_TEXT_PERCENT
) {

450 
rc_öfo
->
rho
 = (
cuºít_bô_budgë
 * (1024+(‘c_öfo->
tŸÆ_øtio
-1024)*7>>3)Ë/Ñc_öfo->
A
)>>3 ;

452 
rc_öfo
->
rho
 = (
cuºít_bô_budgë
*(1024+rc_öfo->
tŸÆ_øtio
)/rc_öfo->
A
)>>4;

455 
rc_öfo
->
tŸÆ_øtio
 = 1024;

458 if–
rc_öfo
->
rho
 >=0 ) {

459 
i
=
QUANT_SCALE_MIN
; i<(
QUANT_SCALE_MAX_ADD1
); i++ ) {

460 
±r_cbr_dqp
[
i
] = 
rc_öfo
->
rho_qp_èbÀ
[i]/rc_öfo->
tŸÆ_øtio
 -rc_öfo->
rho
;

461 if(
±r_cbr_dqp
[
i
] < 0) {

465 
qp

i
-1;

466 if(
	`ABS
(
±r_cbr_dqp
[
i
]) <Ötr_cbr_dqp[i-1]) {

467 
qp
 =
i
;

470 
qp
 = 
QUANT_SCALE_MAX
;

473 
max_qp_adju°_down
 = (
¥ev_qp
*
QUANT_SCALE_MAX
)>>10;

474 if(
max_qp_adju°_down
 == 0){

475 
max_qp_adju°_down
=1;

477 
max_qp_adju°_up
 = (
¥ev_qp
*
QUANT_SCALE_MAX
)>>9;

478 if(
max_qp_adju°_up
 > 10){

479 
max_qp_adju°_up
=10;

481 if(
ícode_c⁄åﬁ
->
‰ame_ty≥
 =
H264_FRAME_TYPE_P
){

482 if(((
qp
-
¥ev_qp
)<<9 ) > (qp*
QUANT_SCALE_MAX
))

483 
qp
 = 
¥ev_qp
+
max_qp_adju°_up
;

484 i‡(((
qp
-
¥ev_qp
)<<10Ë< -’ªv_qp*
QUANT_SCALE_MAX
))

485 
qp
 = 
¥ev_qp
-
max_qp_adju°_down
;

487 if((
key_‰ame_öãrvÆs
>2Ë&& (
ícode_c⁄åﬁ
->
i_‰ame_£rül
)){

488 
qp
 = 
rc_öfo
->
¥ev_two_qp
;

491 if(
qp
 > 
¥ev_qp
) {

492 if((
qp
-
¥ev_qp
) > 2) {

493 
qp
 = 
¥ev_qp
 + 2;

496 if((
¥ev_qp
-
qp
) > 2) {

497 
qp
 = 
¥ev_qp
 - 2;

500 
qp
 = 
	`H264_MEDIAN
(
QUANT_SCALE_MIN
, 
QUANT_SCALE_MAX
, qp);

502 if(
ícode_c⁄åﬁ
->
i_‰ame_£rül
 == 0)

503 
rc_öfo
->
fú°_‰ame_qp
 = 
qp
;

504 if(
ícode_c⁄åﬁ
->
i_‰ame_£rül
 <= 10) {

505 if(
qp
<
rc_öfo
->
fú°_10_mö_qp
){

506 
rc_öfo
->
fú°_10_mö_qp
 = 
qp
;

508 if(
qp
>
rc_öfo
->
fú°_10_max_qp
){

509 
rc_öfo
->
fú°_10_max_qp
 = 
qp
;

513 (
qp
);

514 
	}
}

516 
	$vbr_upd©e_rho_∑ømëîs
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
, 
tw_vbr_rc_°ru˘_t
 *
rc_öfo
)

518 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

519 
ícode_c⁄åﬁ
 = &
ícodî
->encode_control;

521 
rc_öfo
->
n‹m_‰ame_bô_budgë
 = 
	`vbr_e°im©e_bô_budgë
(
ícodî
,Ñc_info);

522 
ícode_c⁄åﬁ
->
i_cuº_qp
 = 
	`vbr_ˇlcuœã_qu™t_∑ømëî
(
ícodî
, 
rc_öfo
);

523 
	}
}

525 
	$vbr_upd©e_øã_c⁄åﬁ
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
, 
tw_vbr_rc_°ru˘_t
 *
rc_öfo
)

527 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

528 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

529 
key_‰ame_öãrvÆs
;

531 
ícode_¥›îty
 = &
ícodî
->encode_property;

532 
key_‰ame_öãrvÆs
 = 
ícode_¥›îty
->
›
->
	`gë_keyFømeI¡îvÆs
(encode_property);

533 
ícode_c⁄åﬁ
 = &
ícodî
->encode_control;

534 
rc_öfo
->
¥ev_n‹m_‰ame_bôs_u£d
 =Ñc_öfo->
bôs_u£d_‰ame
;

536 if(
ícode_c⁄åﬁ
->
i_‰ame_£rül
) {

537 
rc_öfo
->
tŸÆ_bô_dñè
 -‘c_öfo->
bôs_pFøme
-rc_öfo->
bôs_u£d_‰ame
);

540 if(
ícode_c⁄åﬁ
->
‰ame_ty≥
 =
H264_FRAME_TYPE_P
) {

541 
rc_öfo
->
øtio
(‘c_öfo->
rho_qp_èbÀ
[Ñc_öfo->
¥ev_qp
]/rc_öfo->
tŸÆ_øtio
)<<10)/rc_öfo->
nz_cou¡
;

542 
rc_öfo
->
øtio
 = (rc_info->ratio>>1) + 512;

543 
rc_öfo
->
tŸÆ_øtio
 = (rc_öfo->tŸÆ_øtio*rc_öfo->
øtio
)>>10;

545 if(
key_‰ame_öãrvÆs
 > 1){

546 
rc_öfo
->
nz_cou¡
 = 0;

548 
rc_öfo
->
øtio
 = 1024;

550 
	`vbr_upd©e_rho_∑ømëîs
(
ícodî
, 
rc_öfo
);

551 if(
ícode_c⁄åﬁ
->
i_‰ame_£rül
 > 2)

552 
rc_öfo
->
¥ev_two_qp
 =Ñc_öfo->
¥ev_qp
;

553 
rc_öfo
->
bôs_u£d_‰ame
=0;

554 
rc_öfo
->
¥ev_bô_budgë
 =Ñc_öfo->
n‹m_‰ame_bô_budgë
;

555 
	}
}

558 
	$dvm264_vbr_upd©e_rc
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
, 
tw_video_‰ame_tcb_t
 *
video_‰ame
)

560 
tw_rc_drivî_t
 *
rc_drivî
;

561 
tw_vbr_rc_°ru˘_t
 *
rc_öfo
;

562 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

563 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

564 
key_‰ame_öãrvÆs
;

566 
rc_drivî
 = &
ícodî
->rc_driver;

567 
rc_öfo
 = &
rc_drivî
->
vbr
.
rc_∑øm
;

568 
ícode_¥›îty
 = &
ícodî
->encode_property;

569 
key_‰ame_öãrvÆs
 = 
ícode_¥›îty
->
›
->
	`gë_keyFømeI¡îvÆs
(encode_property);

570 
ícode_c⁄åﬁ
 = &
ícodî
->encode_control;

571 if(
ícode_c⁄åﬁ
->
i_disˇrd_‰ame_numbî
){

574 
rc_öfo
->
¥ev_qp
 = 
ícode_c⁄åﬁ
->
i_cuº_qp
;

575 if((
rc_öfo
->
nz_cou¡
==0Ë&& (
ícode_c⁄åﬁ
->
‰ame_ty≥
 =
H264_FRAME_TYPE_P
)) {

576 
rc_öfo
->
bôs_u£d_‰ame
 = 0;

577 
rc_öfo
->
¥ev_bô_budgë
 =Ñc_öfo->
n‹m_‰ame_bô_budgë
;

579 if(
rc_öfo
->
b_Êag_upd©e
 == 0) {

580 
	`vbr_upd©e_øã_c⁄åﬁ
(
ícodî
, 
rc_öfo
);

583 if(
rc_drivî
->
is_rc_image_Àvñ_¥i‹ôy
){

584 
dif„rQp
 = 
ícode_¥›îty
->
›
->
	`gë_qpi
”ncode_¥›îtyË- 
ícode_c⁄åﬁ
->
i_cuº_qp
;

585 if(
dif„rQp
<0){

586 if((
ícode_c⁄åﬁ
->
i_‰ame_£rül
-
rc_öfo
->
¥e_skùnum
)>1){

587 
rc_öfo
->
¥e_skùnum
 = 
ícode_c⁄åﬁ
->
i_‰ame_£rül
;

588 
ícode_c⁄åﬁ
->
i_disˇrd_‰ame_numbî
 = 0;

590 if(
ícode_c⁄åﬁ
->
‰ame_ty≥
 =
H264_FRAME_TYPE_P
){

591 
rc_öfo
->
bôs_pFøme
 +rc_öfo->
n‹m_‰ame_bô_budgë
/rc_öfo->
öô_rc_wödow
;

592 
rc_öfo
->
bôs_u£d_‰ame
 =Ñc_öfo->
bôs_pFøme
;

593 
ícode_c⁄åﬁ
->
i_disˇrd_‰ame_numbî
 = 1;

595 
rc_öfo
->
¥e_skùnum
 = 
ícode_c⁄åﬁ
->
i_‰ame_£rül
;

596 
ícode_c⁄åﬁ
->
i_disˇrd_‰ame_numbî
 = 0;

600 
rc_öfo
->
¥e_skùnum
 = 
ícode_c⁄åﬁ
->
i_‰ame_£rül
;

601 
ícode_c⁄åﬁ
->
i_disˇrd_‰ame_numbî
 = 0;

604 
	}
}

606 
	$dvm264_vbr_po°_¥o˚ss
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
, 
tw_vbr_rc_°ru˘_t
 *
rc_öfo
)

608 
tw_rc_drivî_t
 *
rc_drivî
;

609 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

610 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

611 
key_‰ame_öãrvÆs
;

612 
com≥nßã_vÆue
;

614 
rc_drivî
 = &
ícodî
->rc_driver;

615 
ícode_¥›îty
 = &
ícodî
->encode_property;

616 
key_‰ame_öãrvÆs
 = 
ícode_¥›îty
->
›
->
	`gë_keyFømeI¡îvÆs
(encode_property);

617 
ícode_c⁄åﬁ
 = &
ícodî
->encode_control;

619 
rc_öfo
->
Àak_buf„r
 +‘c_öfo->
bôs_u£d_‰ame
 -Ñc_öfo->
bôs_pFøme
);

620 if((
ícode_c⁄åﬁ
->
‰ame_ty≥
 =
H264_FRAME_TYPE_IDR
Ë&& (ícode_c⁄åﬁ->‰ame_ty≥ =
H264_FRAME_TYPE_I
)){

621 
rc_drivî
->
disˇrd_‰ame_numbî_by_Àvñ
 = 0;

623 if(
rc_drivî
->
disˇrd_‰ame_numbî_by_Àvñ
 == 0){

624 if(
rc_drivî
->
is_rc_image_Àvñ_¥i‹ôy
 ||Ñc_drivî->
is_rc_image_smoŸhly_¥i‹ôy
){

625 if(
rc_öfo
->
Àak_buf„r
 >rc_öfo->
buf„r_thªshﬁd
){

626 
rc_drivî
->
disˇrd_‰ame_numbî_by_Àvñ
 = (
rc_öfo
->
Àak_buf„r
/rc_öfo->
bôs_pFøme
)+1;

627 
rc_drivî
->
disˇrd_‰ame_numbî_by_Àvñ
 = 
	`H264_MIN
(
key_‰ame_öãrvÆs
-
ícode_c⁄åﬁ
->
i_p_°ride
-1,Ñc_driver->discard_frame_number_by_level);

628 
rc_öfo
->
bôs_pFøme
 -
rc_drivî
->
disˇrd_‰ame_numbî_by_Àvñ
*rc_öfo->bôs_pFøme/rc_öfo->
öô_rc_wödow
;

629 } if((-
rc_öfo
->
Àak_buf„r
Ë>rc_öfo->
buf„r_thªshﬁd
){

630 
com≥nßã_vÆue
 = ((-
rc_öfo
->
Àak_buf„r
)/rc_öfo->
bôs_pFøme
)+1;

631 
com≥nßã_vÆue
 = 
	`H264_MIN
(
rc_öfo
->
rc_wödow
, compensate_value);

632 
rc_öfo
->
bôs_pFøme
 +
com≥nßã_vÆue
*rc_öfo->bôs_pFøme/rc_öfo->
öô_rc_wödow
;

636 if(
rc_drivî
->
disˇrd_‰ame_numbî_by_Àvñ
){

637 
ícode_c⁄åﬁ
->
i_disˇrd_‰ame_numbî
 = 
rc_drivî
->
disˇrd_‰ame_numbî_by_Àvñ
;

638 
rc_öfo
->
Àak_buf„r
 -‘c_öfo->
bôs_pFøme
*
ícode_c⁄åﬁ
->
i_disˇrd_‰ame_numbî
);

639 
rc_öfo
->
rc_wödow
 = (‘c_öfo->rc_wödow>
ícode_c⁄åﬁ
->
i_disˇrd_‰ame_numbî
Ë? (rc_öfo->rc_wödow-ícode_c⁄åﬁ->i_disˇrd_‰ame_numbîË: (rc_öfo->
öô_rc_wödow
));

642 
	}
}

644 
	$dvm264_vbr_upd©e_rc_∑ø
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
)

646 
tw_vbr_rc_°ru˘_t
 *
rc_öfo
;

647 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

648 
dvm_chù_t
 *
chù
;

649 
u32
 
bôs_u£d_‰ame
;

650 
u32
 
n⁄_zîo_cou¡
;

651 
u32
 
bôs_f‹_n⁄ãxt_e°
;

652 
u32
 
ªsiduÆ_bôs_u£d_‰ame
;

654 
rc_öfo
 = &
ícodî
->
rc_drivî
.
vbr
.
rc_∑øm
;

655 
chù
 = 
ícodî
->chip;

656 
ícode_c⁄åﬁ
 = &
ícodî
->encode_control;

657 
bôs_u£d_‰ame
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
SLICE_TOTAL_BIT_NUMBER
);

659 
n⁄_zîo_cou¡
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
TOTAL_COEFF_NUMBER
);

661 
ªsiduÆ_bôs_u£d_‰ame
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
RES_TOTAL_BIT_NUMBER
);

663 
bôs_f‹_n⁄ãxt_e°
 = 
bôs_u£d_‰ame
 - 
ªsiduÆ_bôs_u£d_‰ame
;

664 #ifde‡ 
RC_DEBUG


665 
	`¥ötk
("%s.%d: ch™_%d_%d, %d, %d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
ícodî
->
phy_¶Ÿ_id
,Éncodî->
logic_ch™_id
, 
bôs_u£d_‰ame
, 
n⁄_zîo_cou¡
, 
ªsiduÆ_bôs_u£d_‰ame
);

667 i‡(!
bôs_u£d_‰ame
 || !
bôs_f‹_n⁄ãxt_e°
) {

668 
rc_öfo
->
b_Êag_upd©e
 = 1;

671 
rc_öfo
->
bôs_u£d_‰ame
 = bits_used_frame;

672 
rc_öfo
->
nz_cou¡
 = 
n⁄_zîo_cou¡
;

673 
rc_öfo
->
bôs_f‹_n⁄ãxt_e°
 = bits_for_nontext_est;

674 
rc_öfo
->
b_Êag_upd©e
 = 0;

675 if(
ícode_c⁄åﬁ
->
i_‰ame_£rül
 > 
SMOOTH_WINDOW_MAX_SIZE
){

676 
	`dvm264_vbr_po°_¥o˚ss
(
ícodî
, 
rc_öfo
);

678 
	}
}

680 
	$dvm264_vbr_jump_rc
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
)

682 
ícodî
->
rc_drivî
.
vbr
.
rc_∑øm
.
b_Êag_upd©e
 = 1;

683 #ifde‡ 
RC_DEBUG


684 
	`¥ötk
("%s.%d: ch™_%d_%d\n", 
__FUNCTION__
, 
__LINE__
, 
ícodî
->
phy_¶Ÿ_id
,Éncodî->
logic_ch™_id
);

686 
	}
}

688 
tw_rc_drivî_›
 
	gvbr_drivî_›
 =

690 .
öô_rc
 = 
dvm_vbr_rc_öô
,

691 .
	g£t_qp
 = 
dvm264_vbr_upd©e_rc
,

692 .
	gupd©e_rc
 = 
dvm264_vbr_upd©e_rc_∑ø
,

693 .
	gjump_rc
 = 
dvm264_vbr_jump_rc
,

696 
	$dvm_rc_öô
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
)

698 
tw_rc_drivî_t
 *
rc_drivî
;

700 
rc_drivî
 = &
ícodî
->rc_driver;

701 
rc_drivî
->
disˇrd_‰ame_numbî_by_Àvñ
 = 0;

704 
rc_drivî
->
rc_›
 = &
rc_drivî_›
;

705 
rc_drivî
->
cbr
.
rc_›
 = &
cbr_drivî_›
;

706 
rc_drivî
->
cbr
.
rc_›
->
	`öô_rc
(
ícodî
);

707 
rc_drivî
->
vbr
.
rc_›
 = &
vbr_drivî_›
;

708 
rc_drivî
->
vbr
.
rc_›
->
	`öô_rc
(
ícodî
);

709 
	}
}

711 
	$dvm264_upd©e_rc
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
, 
tw_video_‰ame_tcb_t
 *
video_‰ame
)

713 
tw_rc_drivî_t
 *
rc_drivî
;

714 
tw_cbr_drivî_t
 *
cbr_drivî
;

715 
tw_vbr_drivî_t
 *
vbr_drivî
;

716 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

717 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

719 
rc_drivî
 = &
ícodî
->rc_driver;

720 
ícode_¥›îty
 = &
ícodî
->encode_property;

721 
ícode_c⁄åﬁ
 = &
ícodî
->encode_control;

722 
ícode_¥›îty
->
›
->
	`gë_rcTy≥
(encode_property)){

723 
TW_H264_CBR
:

724 
cbr_drivî
 = &
rc_drivî
->
cbr
;

725 if(
cbr_drivî
->
rc_›
->
£t_qp
 !
NULL
){

726 
cbr_drivî
->
rc_›
->
	`£t_qp
(
ícodî
, 
video_‰ame
);

728 
ícode_c⁄åﬁ
->
i_cuº_qp
 = 
ícode_¥›îty
->
›
->
	`gë_qpi
(encode_property);

731 
TW_H264_VBR
:

732 
vbr_drivî
 = &
rc_drivî
->
vbr
;

733 if(
vbr_drivî
->
rc_›
->
£t_qp
 !
NULL
){

734 
vbr_drivî
->
rc_›
->
	`£t_qp
(
ícodî
, 
video_‰ame
);

736 
ícode_c⁄åﬁ
->
i_cuº_qp
 = 
ícode_¥›îty
->
›
->
	`gë_qpi
(encode_property);

740 
ícode_c⁄åﬁ
->
i_cuº_qp
 = 
ícode_¥›îty
->
›
->
	`gë_qpi
(encode_property);

743 
	}
}

745 
	$dvm264_jump_rc
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
)

747 
tw_rc_drivî_t
 *
rc_drivî
;

748 
tw_cbr_drivî_t
 *
cbr_drivî
;

749 
tw_vbr_drivî_t
 *
vbr_drivî
;

751 
rc_drivî
 = &
ícodî
->rc_driver;

752 
cbr_drivî
 = &
rc_drivî
->
cbr
;

753 
vbr_drivî
 = &
rc_drivî
->
vbr
;

754 
cbr_drivî
->
rc_›
->
	`jump_rc
(
ícodî
);

755 
vbr_drivî
->
rc_›
->
	`jump_rc
(
ícodî
);

756 
	}
}

758 
	$dvm264_upd©e_rc_∑ø
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
)

760 
tw_rc_drivî_t
 *
rc_drivî
;

761 
tw_cbr_drivî_t
 *
cbr_drivî
;

762 
tw_vbr_drivî_t
 *
vbr_drivî
;

763 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

764 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

766 
rc_drivî
 = &
ícodî
->rc_driver;

767 
ícode_¥›îty
 = &
ícodî
->encode_property;

768 
ícode_c⁄åﬁ
 = &
ícodî
->encode_control;

769 
cbr_drivî
 = &
rc_drivî
->
cbr
;

770 
vbr_drivî
 = &
rc_drivî
->
vbr
;

771 
ícode_¥›îty
->
›
->
	`gë_rcTy≥
(encode_property)){

772 
TW_H264_CBR
:

773 if(
cbr_drivî
->
rc_›
->
upd©e_rc
 !
NULL
){

774 
cbr_drivî
->
rc_›
->
	`upd©e_rc
(
ícodî
);

776 
cbr_drivî
->
rc_›
->
	`jump_rc
(
ícodî
);

779 
TW_H264_VBR
:

780 if(
vbr_drivî
->
rc_›
->
upd©e_rc
 !
NULL
){

781 
vbr_drivî
->
rc_›
->
	`upd©e_rc
(
ícodî
);

783 
vbr_drivî
->
rc_›
->
	`jump_rc
(
ícodî
);

787 
rc_drivî
->
rc_›
->
	`jump_rc
(
ícodî
);

790 
	}
}

792 
tw_rc_drivî_›
 
	grc_drivî_›
 =

794 .
öô_rc
 = 
dvm_rc_öô
,

795 .
	g£t_qp
 = 
dvm264_upd©e_rc
,

796 .
	gupd©e_rc
 = 
dvm264_upd©e_rc_∑ø
,

797 .
	gjump_rc
 = 
dvm264_jump_rc
,

800 
	$öô_rc_drivî
(
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
)

802 if(
h264_logic_ícode_ch™
 !
NULL
){

803 
tw_rc_drivî_t
 *
rc_drivî
 = &
h264_logic_ícode_ch™
->rc_driver;

804 
rc_drivî
->
rc_›
 = &
rc_drivî_›
;

805 
rc_drivî
->
rc_›
->
	`öô_rc
(
h264_logic_ícode_ch™
);

807 
	}
}

	@../../tw5864/tw5864/frame.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
	#FPGA_DATA_BASE
 (0x80000)

	)

4 
	#FPGA_DATA_END
 (0x100000)

	)

5 
	#WDELAYTIME
 (40)

	)

8 
	$Wrôe_O√_Føme_To_DDR_D1_Føme
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
, 
u16
 
FømeIdx
, u16 
ch™√l
,
u8
 *
buf
, 
u32
 *
Àn
)

10 
dvm_chù_t
 *
chù
;

11 
u32
 
i
,
j
,
k
;

12 
u32
 
tmpDDR
;

13 
u8
 *
löe
, *
löe1
, *
löe2
;

14 
u8
 *
§cBufY
,*
§cBufU
,*
§cBufV
;

15 
u16
 
∑geIdxY
, 
∑geIdxUV
;

16 
u32
 
d©aTemp
;

17 
u32
 
ãmp
;

18 
u32
 
width
,
height
;

19 
chù
 = 
ícodî
->chip;

20 
width
 = 704;

21 
height
 = 576;

23 
FømeIdx
)

26 
∑geIdxY
 = 4000;

27 
∑geIdxUV
 = 0xc;

30 
∑geIdxY
 = 4002;

31 
∑geIdxUV
 = 0xd;

34 
∑geIdxY
 = 4004;

35 
∑geIdxUV
 = 0xe;

38 
∑geIdxY
 = 4006;

39 
∑geIdxUV
 = 0xf;

42 
∑geIdxY
 = 2;

43 
∑geIdxUV
 = 0x9;

46 
∑geIdxY
 = 4;

47 
∑geIdxUV
 = 0xa;

50 
∑geIdxY
 = 6;

51 
∑geIdxUV
 = 0xb;

54 
∑geIdxY
 = 0;

55 
∑geIdxUV
 =0x8;

58 
ch™√l
)

61 
∑geIdxY
 +=16;

62 
∑geIdxUV
 +=16;

65 
∑geIdxY
 +=32;

66 
∑geIdxUV
 +=32;

69 
∑geIdxY
 +=48;

70 
∑geIdxUV
 +=48;

73 
∑geIdxY
 +=64;

74 
∑geIdxUV
 +=64;

77 
∑geIdxY
 +=80;

78 
∑geIdxUV
 +=80;

81 
∑geIdxY
 +=96;

82 
∑geIdxUV
 +=96;

85 
∑geIdxY
 +=112;

86 
∑geIdxUV
 +=112;

89 
∑geIdxY
 +=128;

90 
∑geIdxUV
 +=128;

93 
∑geIdxY
 +=144;

94 
∑geIdxUV
 +=144;

97 
∑geIdxY
 +=160;

98 
∑geIdxUV
 +=160;

101 
∑geIdxY
 +=176;

102 
∑geIdxUV
 +=176;

105 
∑geIdxY
 +=192;

106 
∑geIdxUV
 +=192;

109 
∑geIdxY
 +=208;

110 
∑geIdxUV
 +=208;

113 
∑geIdxY
 +=224;

114 
∑geIdxUV
 +=224;

117 
∑geIdxY
 +=240;

118 
∑geIdxUV
 +=240;

123 
	`¥ötk
("downLﬂd ddr[Y=%d, UV=%d] d©a\r\n", 
∑geIdxY
, 
∑geIdxUV
);

124 
ãmp
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
MODE
);

125 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MODE
, 1);

126 *
Àn
 = 0;

127 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
∑geIdxY
);

129 
k
=0;k<=(
width
>>8);k++)

131 
§cBufY
 = 
buf
;

132 
tmpDDR
 = 
FPGA_DATA_BASE
+0x40000*
k
;

133 if(
tmpDDR
 =(
FPGA_DATA_END
))

135 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, (
∑geIdxY
+1));

136 
tmpDDR
 = 
FPGA_DATA_BASE
;

138 
j
=0;j<
height
;j++)

140 
löe
 = 
§cBufY
+256*
k
;

141 if((
width
-256*
k
)>256)

143 
i
=0;i<256;i+=4)

145 
d©aTemp
 = 
löe
[
i
+3];

146 
d©aTemp
 <<= 8;

147 
d©aTemp
 |
löe
[
i
+2];

148 
d©aTemp
 <<= 8;

149 
d©aTemp
 |
löe
[
i
+1];

150 
d©aTemp
 <<= 8;

151 
d©aTemp
 |
löe
[
i
];

152 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
tmpDDR
, 
d©aTemp
);

154 
tmpDDR
 += 4;

155 *
Àn
 += 4;

157 
§cBufY
 +
width
;

161 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
∑geIdxY
+1);

162 
tmpDDR
 = 
FPGA_DATA_BASE
+256*
j
;

163 
i
=0;i<(
width
-256*
k
);i+=4)

165 
d©aTemp
 = 
löe
[
i
+3];

166 
d©aTemp
 <<= 8;

167 
d©aTemp
 |
löe
[
i
+2];

168 
d©aTemp
 <<= 8;

169 
d©aTemp
 |
löe
[
i
+1];

170 
d©aTemp
 <<= 8;

171 
d©aTemp
 |
löe
[
i
];

172 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
tmpDDR
, 
d©aTemp
);

174 
tmpDDR
 += 4;

175 *
Àn
 += 4;

177 
§cBufY
 +
width
;

186 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
∑geIdxUV
);

187 
k
=0;k<=(
width
>>8);k++)

189 
§cBufU
 = 
buf
 + 
height
*
width
;

190 
§cBufV
 = 
§cBufU
 + ((
height
*
width
)>>2);

191 
tmpDDR
 = 
FPGA_DATA_BASE
+0x20000*
k
;

192 
j
=0;j<(
height
>>1);j++)

194 
löe1
 = 
§cBufU
+128*
k
;

195 
löe2
 = 
§cBufV
+128*
k
;

196 if((
width
-256*
k
)>256)

198 
i
=0;i<128;i+=2)

200 
d©aTemp
 = 
löe2
[
i
+1];

201 
d©aTemp
 <<= 8;

202 
d©aTemp
 |
löe1
[
i
+1];

203 
d©aTemp
 <<= 8;

204 
d©aTemp
 |
löe2
[
i
];

205 
d©aTemp
 <<= 8;

206 
d©aTemp
 |
löe1
[
i
];

208 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
tmpDDR
, 
d©aTemp
);

209 
tmpDDR
 += 4;

210 *
Àn
 += 4;

212 
§cBufU
 +(
width
>>1);

213 
§cBufV
 +(
width
>>1);

217 
tmpDDR
 = 
FPGA_DATA_BASE
+0x20000*
k
+256*
j
;

218 
i
=0;i<((
width
>>1)-128*
k
);i+=2)

220 
d©aTemp
 = 
löe2
[
i
+1];

221 
d©aTemp
 <<= 8;

222 
d©aTemp
 |
löe1
[
i
+1];

223 
d©aTemp
 <<= 8;

224 
d©aTemp
 |
löe2
[
i
];

225 
d©aTemp
 <<= 8;

226 
d©aTemp
 |
löe1
[
i
];

227 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
tmpDDR
, 
d©aTemp
);

229 
tmpDDR
 += 4;

230 *
Àn
 += 4;

232 
§cBufU
 +(
width
>>1);

233 
§cBufV
 +(
width
>>1);

237 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MODE
, 
ãmp
);

238 
	}
}

240 
	$New_Ród_O√_Føme_‰om_DDR
(
tw_h264_logic_ícode_ch™_t
* 
ícodî
,
u16
 
FømeIdx
, u16 
ch™√l
,
u8
 *
buf
, 
u32
 *
Àn
)

243 
dvm_chù_t
 *
chù
;

244 
u32
 
i
,
j
;

245 
u16
 
∑geIdxY
, 
∑geIdxUV
;

246 
u32
 
tmpDDR
;

247 
u8
 *
löe0
, *
löe1
, *
löe2
, *
löe3
;

248 
u8
 *
löe4
, *
löe5
, *
löe6
, *
löe7
;

249 
u8
 *
§cBufY
,*
§cBufU
,*
§cBufV
;

250 
u32
 
d©aTemp
;

251 
u32
 
off£t
;

252 
u32
 
ãmp
;

253 
u32
 
width
, 
height
;

254 
chù
 = 
ícodî
->chip;

255 
width
 = 704;

256 
height
 = 576;

257 
	`¥ötk
("0x%p,w%d,h%d\n",
chù
->
ªgs
,
width
,
height
);

258 
FømeIdx
)

261 
∑geIdxY
 = 0x4000;

262 
∑geIdxUV
 = 0x0c;

265 
∑geIdxY
 = 0x4002;

266 
∑geIdxUV
 = 0x0d;

269 
∑geIdxY
 = 0x4004;

270 
∑geIdxUV
 = 0x0e;

273 
∑geIdxY
 = 0x4006;

274 
∑geIdxUV
 = 0x0f;

277 
∑geIdxY
 = 2;

278 
∑geIdxUV
 = 9;

281 
∑geIdxY
 = 4;

282 
∑geIdxUV
 = 10;

285 
∑geIdxY
 = 6;

286 
∑geIdxUV
 = 11;

289 
∑geIdxY
 = 0;

290 
∑geIdxUV
 = 8;

293 
ch™√l
)

296 
∑geIdxY
 +=16;

297 
∑geIdxUV
 +=16;

300 
∑geIdxY
 +=32;

301 
∑geIdxUV
 +=32;

304 
∑geIdxY
 +=48;

305 
∑geIdxUV
 +=48;

309 
	`¥ötk
("Ródback ddr[Y=%d, UV=%d] d©a\r\n", 
∑geIdxY
, 
∑geIdxUV
);

313 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
∑geIdxY
);

314 
	`mdñay
(
WDELAYTIME
);

315 
tmpDDR
 = 0;

316 
	`mdñay
(
WDELAYTIME
);

317 
§cBufY
 = 
buf
;

318 
§cBufU
 = 
§cBufY
 + 
width
*
height
;

319 
§cBufV
 = 
§cBufU
 +(
width
*(
height
>>2));

321 
off£t
 = 
width
<<2;

322 
i
 = 0; 
j
 = 0;

323 
i
=0; i<(
height
>>2); i++)

325 
löe0
 = 
§cBufY
;

326 
löe1
 = 
löe0
 + 
width
;

327 
löe2
 = 
löe1
 + 
width
;

328 
löe3
 = 
löe2
 + 
width
;

329 
j
=0; j<
width
; j++)

331 
d©aTemp
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
FPGA_DATA_BASE
 + 
tmpDDR
);

332 
löe3
[
j
] = (
u8
)(
d©aTemp
&0xff);

333 
löe2
[
j
] = (
u8
)((
d©aTemp
>>8)&0xff);

334 
löe1
[
j
] = (
u8
)((
d©aTemp
>>16)&0xff);

335 
löe0
[
j
] = (
u8
)((
d©aTemp
>>24)&0xff);

336 
tmpDDR
 += 4;

338 
§cBufY
 +
off£t
;

339 
tmpDDR
 +(0x400 - 
width
);

340 if(
tmpDDR
 =
FPGA_DATA_END
)

343 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, (
u32
)(
∑geIdxY
+1));

344 
	`mdñay
(
WDELAYTIME
);

345 
tmpDDR
 = 0;

346 
	`mdñay
(
WDELAYTIME
);

350 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
∑geIdxUV
);

351 
	`mdñay
(
WDELAYTIME
);

352 
tmpDDR
 = 0;

353 
	`mdñay
(
WDELAYTIME
);

354 
height
 >>= 3;

355 
off£t
 = 
width
<<1;

356 
width
 >>= 1;

357 
i
=0; i<
height
; i++)

359 
löe0
 = 
§cBufU
;

360 
löe1
 = 
löe0
 + 
width
;

361 
löe2
 = 
löe1
 + 
width
;

362 
löe3
 = 
löe2
 + 
width
;

364 
löe4
 = 
§cBufV
;

365 
löe5
 = 
löe4
 + 
width
;

366 
löe6
 = 
löe5
 + 
width
;

367 
löe7
 = 
löe6
 + 
width
;

369 
j
=0; j<
width
; j++)

371 
d©aTemp
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
FPGA_DATA_BASE
 + 
tmpDDR
);

372 
löe3
[
j
] = (
u8
)(
d©aTemp
&0xff);

373 
löe2
[
j
] = (
u8
)((
d©aTemp
>>8)&0xff);

374 
löe1
[
j
] = (
u8
)((
d©aTemp
>>16)&0xff);

375 
löe0
[
j
] = (
u8
)((
d©aTemp
>>24)&0xff);

376 
tmpDDR
++;

377 *
Àn
 += 4;

378 
d©aTemp
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
FPGA_DATA_BASE
 + 
tmpDDR
);

379 
löe7
[
j
] = (
u8
)(
d©aTemp
&0xff);

380 
löe6
[
j
] = (
u8
)((
d©aTemp
>>8)&0xff);

381 
löe5
[
j
] = (
u8
)((
d©aTemp
>>16)&0xff);

382 
löe4
[
j
] = (
u8
)((
d©aTemp
>>24)&0xff);

383 
tmpDDR
 += 4;

385 
§cBufU
 +
off£t
;

386 
§cBufV
 +
off£t
;

387 
tmpDDR
 +=(0x400-(
width
<<1));

390 
	}
}

392 
	$tw5864_ªad_j≥g_yuv
(
dvm_chù_t
 *
chù
, 
∑ge
, 
f‹m©
, *
buf
, 
isB
)

394 
u32
 
i
,
j
,
k
;

395 
u16
 
∑geIdxY
, 
∑geIdxUV
;

396 
u8
 *
§c
, *
d°
, *
d©aba£
;

397 
u8
 *
§cBufY
,*
§cBufU
,*
§cBufV
;

398 
u32
 
off£t
, 
yuv_off£t
, 
uv_°ride
;

399 
u32
 
width
, 
height
;

400 
width
 = 720;

401 
height
 = 576;

403 
∑geIdxY
 = 
∑ge
;

404 
∑geIdxUV
 = 
∑geIdxY
 + 1;

405 
	`¥ötk
("Ródback ddr[Y=%d, UV=%d] d©®0x%p\n", 
∑geIdxY
, 
∑geIdxUV
, 
buf
);

406 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
∑geIdxY
 | (
isB
<<14));

407 
	`mdñay
(
WDELAYTIME
);

408 
§cBufY
 = 
buf
;

409 
§cBufU
 = 
§cBufY
 + 
width
*
height
;

410 
§cBufV
 = 
§cBufU
 +(
width
*(
height
>>2));

412 
	`¥ötk
("................Y\n");

413 
off£t
 = 0;

414 
d°
 = 
§cBufY
;

415 
d©aba£
 = 
chù
->
ªgs
 + 0x80000;

416 
i
 = 0; i < 36; i++)

418 
j
 = 0; j < 16; j++)

420 
k
 = 0; k < 6; k++)

422 
yuv_off£t
 = ((
i
 * 16 * 6 * 128Ë+ (
j
 * 128Ë+ (
k
 * 128 * 16));

423 
§c
 = 
d©aba£
 + 
yuv_off£t
;

425 if(
k
 < 5){

426 
	`mem˝y
(
d°
, 
§c
, 128);

427 
d°
 += 128;

428 
off£t
 += 128;

429 if(
off£t
 == 0x80000){

431 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
∑geIdxUV
|(
isB
<<14));

434 
	`mem˝y
(
d°
, 
§c
, 80);

435 
d°
 += 80;

436 
off£t
 += 128;

437 if(
off£t
 == 0x80000){

439 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
∑geIdxUV
|(
isB
<<14));

445 
	`¥ötk
("................UV ,off£à0x%08x\n", 
off£t
);

447 
uv_°ride
 = 0;

448 
§c
 = 
d©aba£
 + 
off£t
;

449 
i
 = 0; i < ((
width
*
height
) >> 2); i++)

451 *
§cBufU
++ = *
§c
++;

453 *
§cBufV
++ = *
§c
++;

455 
off£t
 += 2;

456 
uv_°ride
++;

457 if(
uv_°ride
 =(
width
>>1)){

458 
§c
 += 80;

459 
off£t
 += 80;

460 
uv_°ride
 = 0;

462 if(
off£t
 == 0x80000){

463 
§c
 = 
chù
->
ªgs
 + 0x80000;

464 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
∑geIdxUV
|(
isB
<<14));

469 
	}
}

471 
	$tw5864_wrôe_j≥g_yuv
(
dvm_chù_t
 *
chù
, 
∑ge
, 
f‹m©
, *
buf
, 
isB
)

473 
u32
 
i
,
j
,
k
;

474 
u16
 
∑geIdxY
, 
∑geIdxUV
;

475 
u8
 *
§c
, *
d°
;

476 
u8
 *
§cBufY
,*
§cBufU
,*
§cBufV
;

477 
u32
 
off£t
;

478 
u32
 
width
, 
height
;

479 
width
 = 720;

480 
height
 = 576;

482 
∑geIdxY
 = 
∑ge
;

483 
∑geIdxUV
 = 
∑geIdxY
 + 1;

484 
	`¥ötk
("wrôêddr[Y=%d, UV=%d] d©®0x%p\n", 
∑geIdxY
, 
∑geIdxUV
, 
buf
);

485 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
∑geIdxY
 | (
isB
<<14));

486 
	`mdñay
(
WDELAYTIME
);

487 
§cBufY
 = 
buf
;

488 
§cBufU
 = 
§cBufY
 + 
width
*
height
;

489 
§cBufV
 = 
§cBufU
 +(
width
*(
height
>>2));

491 
	`¥ötk
("................Y\n");

492 
off£t
 = 0;

493 
§c
 = 
§cBufY
;

494 
d°
 = 
chù
->
ªgs
 + 0x80000;

495 
i
 = 0; (ò< 
height
/16); i++)

497 
j
 = 0; j < 16; j++)

499 
k
 = 0; k < 6; k++)

501 
§c
 = 
§cBufY
 + ((
i
 * 16 * 6 * 128Ë+ (
j
 * 128Ë+ (
k
 * 128 * 16));

502 if(
k
 < 5){

503 
	`mem˝y
(
d°
, 
§c
, 128);

504 
d°
 += 128;

505 
off£t
 += 128;

506 if(
off£t
 == 0x80000){

507 
d°
 = 
chù
->
ªgs
 + 0x80000;

508 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
∑geIdxUV
|(
isB
<<14));

511 
	`mem˝y
(
d°
, 
§c
, 80);

512 
d°
 += 128;

513 
off£t
 += 128;

514 if(
off£t
 == 0x80000){

515 
d°
 = 
chù
->
ªgs
 + 0x80000;

516 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
∑geIdxUV
|(
isB
<<14));

522 
	`¥ötk
("................UV\n");

524 
i
 = 0; i < ((
width
*
height
) >> 2); i++)

526 *
d°
++ = *
§cBufU
++;

528 *
d°
++ = *
§cBufV
++;

530 
off£t
 += 2;

531 if(
off£t
 == 0x80000){

532 
d°
 = 
chù
->
ªgs
 + 0x80000;

533 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
∑geIdxUV
|(
isB
<<14));

538 
	}
}

	@../../tw5864/tw5864/golomb.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 c⁄° 
__u8
 
	gff_log2_èb
[256]={

14 c⁄° 
__u8
 
	gff_gﬁomb_vlc_Àn
[512]={

33 c⁄° 
__u8
 
	gff_ue_gﬁomb_vlc_code
[512]={

52 c⁄° 
__s8
 
	gff_£_gﬁomb_vlc_code
[512]={

	@../../tw5864/tw5864/proc_entry.c

1 
	~<löux/öô.h
>

2 
	~<löux/moduÀ.h
>

3 
	~<löux/dñay.h
>

4 
	~<löux/î∫o.h
>

5 
	~<löux/fs.h
>

6 
	~<löux/kî√l.h
>

7 
	~<löux/sched.h
>

8 
	~<löux/muãx.h
>

9 
	~<löux/£q_fûe.h
>

11 
	~<tw5864/dvm_comm⁄.h
>

13 
	#MODULE_ENTRY
 "twŒ"

	)

15 
¥oc_dú_íåy
 *
	gs_dú_íåy
 = 
NULL
, *
	gmesßge_íåy
;

17 #ifde‡
MESSAGE_LOG


18 
mesßge_¥ivã
 *
	gmesßge_log
 = 
NULL
;

20 
	$show_¥oc_íåy_öfo
(*
c⁄ãxt
)

22 
¥oc_dú_íåy
 *
íåy
 = (¥oc_dú_íåy *)
c⁄ãxt
;

24 if(
íåy
 && (íåy->
subdú
 =
NULL
)) {

25 
	`¥ötk
 ("%s,", 
íåy
->
«me
);

27 
	}
}

29 
touch_óch_¥oc_íåy
(
¥oc_dú_íåy
 *
roŸ
, (*
‚
)(*))

31 if(
roŸ
) {

32 if(
‚
) {

33 
	`‚
(
roŸ
);

35 
	`touch_óch_¥oc_íåy
(
roŸ
->
subdú
, 
‚
);

36 
	`touch_óch_¥oc_íåy
(
roŸ
->
√xt
, 
‚
);

38 
	}
}

40 
	$msg_›í
(
öode
 * inode, 
fûe
 * file)

42 
fûe
->
¥iv©e_d©a
 = 
mesßge_log
;

45 
	}
}

47 
	$msg_ªÀa£
(
öode
 * inode, 
fûe
 * file)

50 
	}
}

52 
ssize_t
 
	$msg_ªad
(
fûe
 *fûe, 
__u£r
 *
buf
,

53 
size_t
 
cou¡
, 
loff_t
 *
µos
)

55 
u32
 
i
 = 0;

56 
c
;

57 
îr‹
 = 0;

58 
mesßge_¥ivã
 *
p
;

60 
p
 = (
mesßge_¥ivã
 *)
fûe
->
¥iv©e_d©a
;

62 i‡((
fûe
->
f_Êags
 & 
O_NONBLOCK
Ë&& !(
p
->
íd
 -Ö->
°¨t
))

63  -
EAGAIN
;

65 
îr‹
 = 
	`waô_evít_öãºu±ibÀ
(
p
->
waô
, (p->
°¨t
 -Ö->
íd
));

66 if(
îr‹
) {

67 
msg_out
;

69 
i
 = 0;

70 
	`•ö_lock_úq
(&
p
->
lock
);

71 !
îr‹
 && (
p
->
°¨t
 !p->
íd
Ë&& 
i
 < 
cou¡
) {

72 if((
p
->
íd
 <Ö->
°¨t
Ë&& (p->°¨à=(
MESSAGE_LEN
 - (MESSAGE_LEN>>8)))) {

73 
p
->
°¨t
 = 0;

75 
c
 = 
p
->
buf
[p->
°¨t
&(
MESSAGE_LEN
 - 1)];

76 
p
->
°¨t
++;

77 
	`•ö_u∆ock_úq
(&
p
->
lock
);

78 
îr‹
 = 
	`__put_u£r
(
c
,
buf
);

79 
buf
++;

80 
i
++;

81 
	`c⁄d_ªsched
();

82 
	`•ö_lock_úq
(&
p
->
lock
);

84 
	`•ö_u∆ock_úq
(&
p
->
lock
);

85 i‡(!
îr‹
)

86 
îr‹
 = 
i
;

87 
msg_out
:

88  
îr‹
;

89 
	}
}

91 
	$msg_pﬁl
(
fûe
 *fûe, 
pﬁl_èbÀ
 *
waô
)

93 
mesßge_¥ivã
 *
p
;

95 
p
 = (
mesßge_¥ivã
 *)
fûe
->
¥iv©e_d©a
;

97 
	`pﬁl_waô
(
fûe
, &
p
->
waô
, wait);

98 i‡(
p
->
íd
 !p->
°¨t
)

99  
POLLIN
 | 
POLLRDNORM
;

102 
	}
}

105 c⁄° 
fûe_›î©i⁄s
 
	g¥oc_mesßges_›î©i⁄s
 = {

106 .
ªad
 = 
msg_ªad
,

107 .
	gpﬁl
 = 
msg_pﬁl
,

108 .
	g›í
 = 
msg_›í
,

109 .
	gªÀa£
 = 
msg_ªÀa£
,

112 
touch_óch_¥oc_íåy
(
¥oc_dú_íåy
 *
roŸ
, (*
‚
)(*)){

113 
	}
}

114 
	$show_¥oc_íåy_öfo
(*
c⁄ãxt
){

115 
	}
}

117 
	$tw_moduÀ_ªgi°î
(
dvm_chù_t
 *
chù
, 
tw_¥oc_ªgi°î_s
 *
ªg
)

119 if(!
chù
 || !
ªg
)

121  -
EINVAL
;

124 if(!
chù
->
¥oc_íåy
){

125 
	`TW_DBG
(
TW_DBG_INFO
, "¸óãÖro¯íåy /¥oc/%s/%s\n", 
MODULE_ENTRY
, 
chù
->
«me
);

126 
chù
->
¥oc_íåy
 = 
	`¥oc_mkdú
(chù->
«me
, 
s_dú_íåy
);

128 if(
ªg
->
íåy
){

129  -
EPERM
;

131 
ªg
->
íåy
 = 
	`¸óã_¥oc_íåy
‘eg->
«me
, 0644, 
chù
->
¥oc_íåy
);

132 if(!
ªg
->
íåy
)

134 
	`TW_DBG
(
TW_DBG_ERR
, "¸óã /¥oc/%s/%s/%†Æªady faûed\n", 
MODULE_ENTRY
, 
chù
->
«me
, 
ªg
->name);

135  -
EPERM
;

138 
ªg
->
íåy
->
ªad_¥oc
 =Ñeg->
ªad
;

139 
ªg
->
íåy
->
wrôe_¥oc
 =Ñeg->
wrôe
;

140 
ªg
->
íåy
->
d©a
 =Ñeg->
¥iv©e
;

141 
	`TW_DBG
(
TW_DBG_INFO
, "¸óãÖro¯íåy /¥oc/%s/%s/%s\n", 
MODULE_ENTRY
, 
chù
->
«me
, 
ªg
->name);

144 
	}
}

146 
EXPORT_SYMBOL_GPL
(
tw_moduÀ_ªgi°î
);

148 
	$tw_moduÀ_uƒegi°î
(
dvm_chù_t
 *
chù
, 
tw_¥oc_ªgi°î_s
 *
ªg
)

151 if(!
chù
 || !
ªg
)

153  -
EINVAL
;

156 if(!
ªg
->
íåy
)

161 
	`ªmove_¥oc_íåy
(
ªg
->
«me
, 
chù
->
¥oc_íåy
);

162 
	`TW_DBG
(
TW_DBG_INFO
, "ªmovê¥o¯íåy /¥oc/%s/%s/%s\n", 
MODULE_ENTRY
, 
chù
->
«me
, 
ªg
->name);

163 
	`¥ötk
("ªmovê¥o¯íåy /¥oc/%s/%s/%s\n", 
MODULE_ENTRY
, 
chù
->
«me
, 
ªg
->name);

164 
ªg
->
íåy
 = 
NULL
;

166 if(!
chù
->
¥oc_íåy
->
subdú
){

167 
	`TW_DBG
(
TW_DBG_INFO
, "ªmovê¥o¯íåy /¥oc/%s/%s\n", 
MODULE_ENTRY
, 
chù
->
«me
);

168 
	`¥ötk
("ªmovê¥o¯íåy /¥oc/%s/%s\n", 
MODULE_ENTRY
, 
chù
->
«me
);

169 
	`ªmove_¥oc_íåy
(
chù
->
«me
, 
s_dú_íåy
);

173 
	}
}

174 
EXPORT_SYMBOL_GPL
(
tw_moduÀ_uƒegi°î
);

176 
	$¥oc_moduÀ_öô
()

178 #ifde‡
MESSAGE_LOG


179 
mesßge_¥ivã
 *
p
;

182 
s_dú_íåy
 = 
	`¥oc_mkdú
(
MODULE_ENTRY
, 
NULL
);

183 if(!
s_dú_íåy
)

185  -
EINVAL
;

188 
s_dú_íåy
->
ow√r
 = 
THIS_MODULE
;

189 #ifde‡
MESSAGE_LOG


190 
p
 = (
mesßge_¥ivã
 *)
	`kmÆloc
((mesßge_¥ivã), 
GFP_KERNEL
);

191 if(
p
) {

192 
p
->
buf
 = (*)
	`__gë_‰ì_∑ges
(
GFP_KERNEL
, 
	`gë_‹dî
(
MESSAGE_LEN
));

193 if(
p
->
buf
) {

194 
p
->
buf_Àn
 = 
MESSAGE_LEN
;

195 
p
->
°¨t
 = 0;

196 
p
->
íd
 = 0;

197 
	`•ö_lock_öô
(&
p
->
lock
);

198 
	`öô_waôqueue_hód
(&
p
->
waô
);

199 
mesßge_íåy
 = 
	`¸óã_¥oc_íåy
("mesßges", 0644, 
s_dú_íåy
);

200 
mesßge_íåy
->
¥oc_f›s
 = &
¥oc_mesßges_›î©i⁄s
;

201 
mesßge_íåy
->
d©a
 = 
p
;

202 
mesßge_log
 = 
p
;

204 
mesßge_log
 = 
NULL
;

207 
mesßge_log
 = 
NULL
;

212 
	}
}

214 
	$¥oc_moduÀ_ªÀa£
()

217 if(
s_dú_íåy
) {

218 if(
s_dú_íåy
->
subdú
) {

219 
	`¥ötk
("unrelease mode:");

220 
	`touch_óch_¥oc_íåy
(
s_dú_íåy
->
subdú
, 
show_¥oc_íåy_öfo
);

221 
	`¥ötk
("\n");

223 #ifde‡
MESSAGE_LOG


224 
mesßge_¥ivã
 *
p
;

225 if(
mesßge_íåy
) {

226 
p
 = 
mesßge_íåy
->
d©a
;

227 if(
p
) {

228 if(
p
->
buf
) {

229 
	`‰ì_∑ges
(()
p
->
buf
, 
	`gë_‹dî
(
MESSAGE_LEN
));

230 
	`ªmove_¥oc_íåy
("mesßges", 
s_dú_íåy
);

231 
mesßge_log
 = 
NULL
;

233 
	`k‰ì
(
p
);

235 
mesßge_íåy
 = 
NULL
;

238 
s_dú_íåy
 = 
NULL
;

239 
	`ªmove_¥oc_íåy
(
MODULE_ENTRY
, 
NULL
);

243 
	}
}

245 
fûe
 *
	$tw_kî√l_fûe_›í
(*
«me
)

247 
fûe
 *
Â_fûe
;

249 
Â_fûe
 = 
	`fûp_›í
(
«me
, 
O_CREAT
 | 
O_RDWR
, 655);

250 if(
	`IS_ERR
(
Â_fûe
))

252 
	`¥ötk
("›í fûê\"%s\" faûd, %d\n", 
«me
, ()
Â_fûe
);

253  
NULL
;

256  
Â_fûe
;

257 
	}
}

259 
	$tw_kî√l_fûe_˛o£
(
fûe
 *
Â_fûe
)

261 if(
Â_fûe
)

263 
	`fûp_˛o£
(
Â_fûe
, 
NULL
);

265 
	}
}

267 
	$©oi
(*
°r
)

269 *
p
;

270 
vÆ
 = 0;

272 if(!
°r
){

276 
p
 = 
°r
;

277 *
p
){

278 
vÆ
 <<= 4;

279 *
p
){

281 
vÆ
 |*
p
 - '0';

284 
vÆ
 |*
p
 - 'A';

287 
vÆ
 |*
p
 - 'a' + 0xa;

291 
p
++;

294  
vÆ
;

295 
	}
}

297 #ifde‡
ARM_PLATFORM


299 
	#is•a˚
(
c
Ë((cË=' ')

	)

300 *
	$k°∫dup
(c⁄° *
s
, 
size_t
 
max
, 
gÂ_t
 
gÂ
)

302 
size_t
 
Àn
;

303 *
buf
;

305 i‡(!
s
)

306  
NULL
;

308 
Àn
 = 
	`°∫Àn
(
s
, 
max
);

309 
buf
 = 
	`kmÆloc_åack_ˇŒî
(
Àn
+1, 
gÂ
);

310 i‡(
buf
) {

311 
	`mem˝y
(
buf
, 
s
, 
Àn
);

312 
buf
[
Àn
] = '\0';

314  
buf
;

315 
	}
}

317 c⁄° *
	$skù_£p
(c⁄° *
˝
)

319 *
˝
 && 
	`is•a˚
(*cp))

320 
˝
++;

322  
˝
;

323 
	}
}

325 c⁄° *
	$skù_¨g
(c⁄° *
˝
)

327 *
˝
 && !
	`is•a˚
(*cp))

328 
˝
++;

330  
˝
;

331 
	}
}

333 
	$cou¡_¨gc
(c⁄° *
°r
)

335 
cou¡
 = 0;

337 *
°r
) {

338 
°r
 = 
	`skù_£p
(str);

339 i‡(*
°r
) {

340 
cou¡
++;

341 
°r
 = 
	`skù_¨g
(str);

345  
cou¡
;

346 
	}
}

349 
	$¨gv_‰ì
(**
¨gv
)

351 **
p
;

352 
p
 = 
¨gv
; *p;Ö++)

353 
	`k‰ì
(*
p
);

355 
	`k‰ì
(
¨gv
);

356 
	}
}

358 **
	$¨gv_•lô
(
gÂ_t
 
gÂ
, c⁄° *
°r
, *
¨g˝
)

360 
¨gc
 = 
	`cou¡_¨gc
(
°r
);

361 **
¨gv
 = 
	`kzÆloc
((*¨gvË* (
¨gc
+1), 
gÂ
);

362 **
¨gvp
;

364 i‡(
¨gv
 =
NULL
)

365 
out
;

367 i‡(
¨g˝
)

368 *
¨g˝
 = 
¨gc
;

370 
¨gvp
 = 
¨gv
;

372 *
°r
) {

373 
°r
 = 
	`skù_£p
(str);

375 i‡(*
°r
) {

376 c⁄° *
p
 = 
°r
;

377 *
t
;

379 
°r
 = 
	`skù_¨g
(str);

381 
t
 = 
	`k°∫dup
(
p
, 
°r
-p, 
gÂ
);

382 i‡(
t
 =
NULL
)

383 
Áû
;

384 *
¨gvp
++ = 
t
;

387 *
¨gvp
 = 
NULL
;

389 
out
:

390  
¨gv
;

392 
Áû
:

393 
	`¨gv_‰ì
(
¨gv
);

394  
NULL
;

395 
	}
}

	@../../tw5864/tw5864/tw_audio_buf.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
	$tw_audio_∑ckë_£˘i⁄_öô
(
tw_audio_∑ckë_£˘i⁄_t
 *
audio_∑ckë_£˘i⁄
, 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
, 
id
)

5 if((
audio_∑ckë_£˘i⁄
!=
NULL
Ë&& (
audio_ch™_buf_poﬁ
!=NULL)){

6 
tcb_node_t
 *
node
;

7 
	`©omic_£t
(&
audio_∑ckë_£˘i⁄
->
ªf_cou¡
, 0);

8 
node
 = &
audio_∑ckë_£˘i⁄
->
∑ckë_node
;

9 
node
->
›
 = &
tcb_node_›
;

10 
node
->
›
->
	`öô
(node);

11 
node
->
›
->
	`£t_¥iv
“ode, 
audio_∑ckë_£˘i⁄
);

12 
	`•ö_lock_öô
(&
audio_∑ckë_£˘i⁄
->
lock
);

13 
audio_∑ckë_£˘i⁄
->
id
 = id;

14 
audio_∑ckë_£˘i⁄
->
£˘i⁄_size
 = 
AUDIO_SECTION_SIZE
;

15 
audio_∑ckë_£˘i⁄
->
∑ylﬂd_Àn
 = 0;

16 
audio_∑ckë_£˘i⁄
->
ßm∂e_øã
 = 
TW_AUDIO_8000
;

17 
audio_∑ckë_£˘i⁄
->
ty≥
 = 
TW_AUDIO_PCM
;

18 
audio_∑ckë_£˘i⁄
->
bô_wide
 = 
TW_AUDIO_16BIT
;

19 
audio_∑ckë_£˘i⁄
->
c⁄sumî_off£t
 = 0;

20 
audio_∑ckë_£˘i⁄
->
‰ameSîül
 = 0;

21 
audio_∑ckë_£˘i⁄
->
d©a
 = 
audio_ch™_buf_poﬁ
->
audio_buf„r_ˇche
+◊udio_∑ckë_£˘i⁄->
£˘i⁄_size
*
id
);

22 
audio_∑ckë_£˘i⁄
->
dma_addr
 = 0;

23 
	`öô_tw_audio_des¸ùt‹
(&
audio_∑ckë_£˘i⁄
->
des¸ùt‹
, &audio_∑ckë_£˘i⁄->
d©a
[audio_∑ckë_£˘i⁄->
£˘i⁄_size
-(
audio_£˘i⁄_des¸ùt‹_t
)]);

25 
	}
}

27 
	$tw_audio_∑ckë_£˘i⁄_ª£t
(
tw_audio_∑ckë_£˘i⁄_t
 *
audio_∑ckë_£˘i⁄
)

29 if(
audio_∑ckë_£˘i⁄
 !
NULL
){

30 
	`©omic_£t
(&
audio_∑ckë_£˘i⁄
->
ªf_cou¡
, 0);

31 
audio_∑ckë_£˘i⁄
->
∑ylﬂd_Àn
 = 0;

32 
audio_∑ckë_£˘i⁄
->
c⁄sumî_off£t
 = 0;

33 
audio_∑ckë_£˘i⁄
->
£˘i⁄_size
 = 
AUDIO_SECTION_SIZE
;

34 
audio_∑ckë_£˘i⁄
->
ßm∂e_øã
 = 
TW_AUDIO_8000
;

35 
audio_∑ckë_£˘i⁄
->
ty≥
 = 
TW_AUDIO_PCM
;

36 
audio_∑ckë_£˘i⁄
->
bô_wide
 = 
TW_AUDIO_16BIT
;

37 
audio_∑ckë_£˘i⁄
->
‰ameSîül
 = 0;

38 
	`öô_tw_audio_des¸ùt‹
(&
audio_∑ckë_£˘i⁄
->
des¸ùt‹
, &audio_∑ckë_£˘i⁄->
d©a
[audio_∑ckë_£˘i⁄->
£˘i⁄_size
-(
audio_£˘i⁄_des¸ùt‹_t
)]);

40 
	}
}

42 
	$tw_audio_∑ckë_£˘i⁄_ªÀa£
(
tw_audio_∑ckë_£˘i⁄_t
 **
±r_audio_∑ckë_£˘i⁄
, 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
)

44 if((
±r_audio_∑ckë_£˘i⁄
!=
NULL
)){

45 
tw_audio_∑ckë_£˘i⁄_t
 *
audio_∑ckë_£˘i⁄
 = *
±r_audio_∑ckë_£˘i⁄
;

46 
Êags
;

48 if(
audio_ch™_buf_poﬁ
 =
NULL
){

49 
audio_ch™_buf_poﬁ
 = 
audio_∑ckë_£˘i⁄
->audio_chan_buf_pool;

51 
	`•ö_lock_úqßve
(&
audio_∑ckë_£˘i⁄
->
lock
, 
Êags
);

52 if(
	`©omic_ªad
(&
audio_∑ckë_£˘i⁄
->
ªf_cou¡
) > 1){

53 
	`©omic_dec
(&
audio_∑ckë_£˘i⁄
->
ªf_cou¡
);

55 
tcb_node_t
 *
node
;

56 if(
audio_∑ckë_£˘i⁄
->
›
 !
NULL
){

57 
audio_∑ckë_£˘i⁄
->
›
->
	`ª£t
(audio_packet_section);

59 
node
 = &
audio_∑ckë_£˘i⁄
->
∑ckë_node
;

60 if(
node
->
›
 !
NULL
){

61 
node
->
›
->
	`ªÀa£
“ode, &
audio_ch™_buf_poﬁ
->
poﬁ_node
);

64 *
±r_audio_∑ckë_£˘i⁄
 = 
NULL
;

65 
	`•ö_u∆ock_úqª°‹e
(&
audio_∑ckë_£˘i⁄
->
lock
, 
Êags
);

67 
	}
}

69 
	$tw_audio_∑ckë_£˘i⁄_ª„ªn˚
(
tw_audio_∑ckë_£˘i⁄_t
 *
§c_audio_∑ckë_£˘i⁄
,Åw_audio_∑ckë_£˘i⁄_à**
de°_audio_∑ckë_£˘i⁄
)

71 if((
§c_audio_∑ckë_£˘i⁄
!=
NULL
Ë&& (
de°_audio_∑ckë_£˘i⁄
!=NULL)){

72 
Êags
;

73 
	`•ö_lock_úqßve
(&
§c_audio_∑ckë_£˘i⁄
->
lock
, 
Êags
);

74 
	`©omic_öc
(&
§c_audio_∑ckë_£˘i⁄
->
ªf_cou¡
);

75 *
de°_audio_∑ckë_£˘i⁄
 = 
§c_audio_∑ckë_£˘i⁄
;

76 
	`•ö_u∆ock_úqª°‹e
(&
§c_audio_∑ckë_£˘i⁄
->
lock
, 
Êags
);

78 
	}
}

80 
	$tw_audio_∑ckë_£˘i⁄_dma_m≠
(
tw_audio_∑ckë_£˘i⁄_t
 *
audio_∑ckë_£˘i⁄
, 
dma_d©a_dúe˘i⁄
 
dúe˘i⁄
)

82 if(
audio_∑ckë_£˘i⁄
 !
NULL
) {

83 if(
audio_∑ckë_£˘i⁄
->
d©a
 !
NULL
) {

84 
audio_∑ckë_£˘i⁄
->
dma_addr
 = 
	`dma_m≠_sögÀ
(
NULL
,áudio_∑ckë_£˘i⁄->
d©a
,áudio_∑ckë_£˘i⁄->
£˘i⁄_size
, 
dúe˘i⁄
);

85 i‡(
audio_∑ckë_£˘i⁄
->
dma_addr
 == 0){

86 
	`¥ötk
("%s.%dÉº\n", 
__FUNCTION__
, 
__LINE__
);

90 
	}
}

92 
	$tw_audio_∑ckë_£˘i⁄_dma_unm≠
(
tw_audio_∑ckë_£˘i⁄_t
 *
audio_∑ckë_£˘i⁄
, 
dma_d©a_dúe˘i⁄
 
dúe˘i⁄
)

94 if(
audio_∑ckë_£˘i⁄
 !
NULL
) {

95 i‡(
audio_∑ckë_£˘i⁄
->
dma_addr
 != 0) {

96 
	`dma_unm≠_sögÀ
(
NULL
, 
audio_∑ckë_£˘i⁄
->
dma_addr
,áudio_∑ckë_£˘i⁄->
£˘i⁄_size
, 
dúe˘i⁄
);

97 
audio_∑ckë_£˘i⁄
->
dma_addr
 = 0;

100 
	}
}

102 
size_t
 
	$tw_audio_∑ckë_£˘i⁄_submô
(
tw_audio_∑ckë_£˘i⁄_t
 *
‰ame
, 
__u£r
 *
d©a
, 
size_t
 
cou¡
, 
loff_t
 *
µos
, 
ma°îOrSubFœg
, 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
)

104 
tw_‰ame_hódî_t
 
__u£r
 *
‰ame_hódî_±r
;

105 
tw_‰ame_hódî_t
 
tw_‰ame_hód
;

106 
tw_audio_‰ame_∑d_t
 *
audio_‰ame_∑d_±r
;

107 
tw_audio_‰ame_∑d_t
 
audio_‰ame_∑d
;

108 
size_t
 
buf_size
;

109 
loff_t
 
buf_off£t
;

111 
buf_size
 = 
cou¡
;

112 
buf_off£t
 = 0;

113 if((
‰ame
!=
NULL
Ë&& (
buf_size
>=((
tw_‰ame_hódî_t
)+(
tw_audio_‰ame_∑d_t
)+‰ame->
∑ylﬂd_Àn
))){

114 
‰ame_hódî_±r
 = (
tw_‰ame_hódî_t
*)
d©a
;

115 
buf_size
 -(
tw_‰ame_hódî_t
);

116 
buf_off£t
 +(
tw_‰ame_hódî_t
);

118 
	`mem£t
(&
tw_‰ame_hód
, 0, (
tw_‰ame_hódî_t
));

119 
tw_‰ame_hód
.
codecTy≥
 = 
TW_AUDIO_CODEC_TYPE
;

120 
tw_‰ame_hód
.
°ªamTy≥
 = 
ma°îOrSubFœg
;

121 
tw_‰ame_hód
.
‰ameSîül
 = 
‰ame
->frameSerial;

122 
tw_‰ame_hód
.
‰ameTy≥
 = 
AUDIO_FRAME_TYPE
;

123 
tw_‰ame_hód
.
timeSèmp
 = 
‰ame
->
time°amp
;

124 
tw_‰ame_hód
.
∑ylﬂd_off£t
 = (
tw_‰ame_hódî_t
);

125 
tw_‰ame_hód
.
∑ylﬂdLí
 = 0;

127 
audio_‰ame_∑d_±r
 = (
tw_audio_‰ame_∑d_t
*)
‰ame_hódî_±r
->
∑d
;

128 
buf_size
 -(
tw_audio_‰ame_∑d_t
);

129 
buf_off£t
 +(
tw_audio_‰ame_∑d_t
);

130 
tw_‰ame_hód
.
∑ylﬂdLí
 +(
tw_audio_‰ame_∑d_t
);

132 
	`mem£t
(&
audio_‰ame_∑d
, 0, (
tw_audio_‰ame_∑d_t
));

133 
audio_‰ame_∑d
.
ty≥
 = 
‰ame
->type;

134 
audio_‰ame_∑d
.
bô_wide
 = 
‰ame
->bit_wide;

135 
audio_‰ame_∑d
.
ßm∂e_øã
 = 
‰ame
->sample_rate;

136 
audio_‰ame_∑d
.
bô_øã
 = 0;

137 
audio_‰ame_∑d
.
‰ame_off£t
 = (
tw_audio_‰ame_∑d_t
);

138 
	`c›y_to_u£r
(
audio_‰ame_∑d_±r
->
«l
, 
‰ame
->
d©a
, føme->
∑ylﬂd_Àn
);

139 
audio_‰ame_∑d
.
‰ame_size
 = 
‰ame
->
∑ylﬂd_Àn
;

140 
tw_‰ame_hód
.
∑ylﬂdLí
 +
audio_‰ame_∑d
.
‰ame_size
;

141 
buf_size
 -
audio_‰ame_∑d
.
‰ame_size
;

142 
buf_off£t
 +
audio_‰ame_∑d
.
‰ame_size
;

144 
	`c›y_to_u£r
(
‰ame_hódî_±r
->
∑d
, (*)&
audio_‰ame_∑d
, (
tw_audio_‰ame_∑d_t
));

145 
	`c›y_to_u£r
(
‰ame_hódî_±r
, &
tw_‰ame_hód
, (
tw_‰ame_hódî_t
));

148 *
µos
 +
buf_off£t
;

149  (
size_t
)
buf_off£t
;

150 
	}
}

152 
tw_audio_∑ckë_£˘i⁄_›î©i⁄
 
	gtw_audio_∑ckë_£˘i⁄_›
 = {

153 .
öô
 = 
tw_audio_∑ckë_£˘i⁄_öô
,

154 .
	gª£t
 = 
tw_audio_∑ckë_£˘i⁄_ª£t
,

155 .
	gªÀa£
 = 
tw_audio_∑ckë_£˘i⁄_ªÀa£
,

156 .
	gª„ªn˚
 = 
tw_audio_∑ckë_£˘i⁄_ª„ªn˚
,

158 .
	gdma_m≠
 = 
tw_audio_∑ckë_£˘i⁄_dma_m≠
,

159 .
	gdma_unm≠
 = 
tw_audio_∑ckë_£˘i⁄_dma_unm≠
,

161 .
	gsubmô
 = 
tw_audio_∑ckë_£˘i⁄_submô
,

164 
	$tw_audio_∑ckë_queue_gë
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
, 
tw_audio_∑ckë_£˘i⁄_t
 **
±r_audio_∑ckë_£˘i⁄
)

166 if((
audio_∑ckë_queue
!=
NULL
Ë&& (
±r_audio_∑ckë_£˘i⁄
!=NULL)){

167 
tcb_node_queue_t
 *
node_queue
;

168 *
±r_audio_∑ckë_£˘i⁄
 = 
NULL
;

169 
node_queue
 = &
audio_∑ckë_queue
->
queue_node
;

170 if(
node_queue
->
›
 !
NULL
){

171 
tcb_node_t
 *
ãmp_node
;

172 
node_queue
->
›
->
	`gë
“ode_queue, &
ãmp_node
);

173 if(
ãmp_node
 !
NULL
){

174 *
±r_audio_∑ckë_£˘i⁄
 = 
	`to_gë_tw_audio_∑ckë_£˘i⁄
(
ãmp_node
);

178 
	}
}

180 
	$tw_audio_∑ckë_queue_åy_gë
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
, 
tw_audio_∑ckë_£˘i⁄_t
 **
±r_audio_∑ckë_£˘i⁄
)

182 if((
audio_∑ckë_queue
!=
NULL
Ë&& (
±r_audio_∑ckë_£˘i⁄
!=NULL)){

183 
tcb_node_queue_t
 *
node_queue
;

184 *
±r_audio_∑ckë_£˘i⁄
 = 
NULL
;

185 
node_queue
 = &
audio_∑ckë_queue
->
queue_node
;

186 if(
node_queue
->
›
 !
NULL
){

187 
tcb_node_t
 *
ãmp_node
;

188 
node_queue
->
›
->
	`åy_gë
“ode_queue, &
ãmp_node
);

189 if(
ãmp_node
 !
NULL
){

190 *
±r_audio_∑ckë_£˘i⁄
 = 
	`to_gë_tw_audio_∑ckë_£˘i⁄
(
ãmp_node
);

194 
	}
}

196 
	$tw_audio_∑ckë_queue_gë_èûî
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
, 
tw_audio_∑ckë_£˘i⁄_t
 **
±r_audio_∑ckë_£˘i⁄
)

198 if((
audio_∑ckë_queue
!=
NULL
Ë&& (
±r_audio_∑ckë_£˘i⁄
!=NULL)){

199 
tcb_node_queue_t
 *
node_queue
;

200 *
±r_audio_∑ckë_£˘i⁄
 = 
NULL
;

201 
node_queue
 = &
audio_∑ckë_queue
->
queue_node
;

202 if(
node_queue
->
›
 !
NULL
){

203 
tcb_node_t
 *
ãmp_node
;

204 
node_queue
->
›
->
	`gë_èûî
“ode_queue, &
ãmp_node
);

205 if(
ãmp_node
 !
NULL
){

206 *
±r_audio_∑ckë_£˘i⁄
 = 
	`to_gë_tw_audio_∑ckë_£˘i⁄
(
ãmp_node
);

210 
	}
}

212 
	$tw_audio_∑ckë_queue_åy_gë_èûî
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
, 
tw_audio_∑ckë_£˘i⁄_t
 **
±r_audio_∑ckë_£˘i⁄
)

214 if((
audio_∑ckë_queue
!=
NULL
Ë&& (
±r_audio_∑ckë_£˘i⁄
!=NULL)){

215 
tcb_node_queue_t
 *
node_queue
;

216 *
±r_audio_∑ckë_£˘i⁄
 = 
NULL
;

217 
node_queue
 = &
audio_∑ckë_queue
->
queue_node
;

218 if(
node_queue
->
›
 !
NULL
){

219 
tcb_node_t
 *
ãmp_node
;

220 
node_queue
->
›
->
	`åy_gë_èûî
“ode_queue, &
ãmp_node
);

221 if(
ãmp_node
 !
NULL
){

222 *
±r_audio_∑ckë_£˘i⁄
 = 
	`to_gë_tw_audio_∑ckë_£˘i⁄
(
ãmp_node
);

226 
	}
}

228 
	$tw_audio_∑ckë_queue_put
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
, 
tw_audio_∑ckë_£˘i⁄_t
 *
audio_∑ckë_£˘i⁄
)

230 if((
audio_∑ckë_queue
!=
NULL
Ë&& (
audio_∑ckë_£˘i⁄
!=NULL)){

231 
tcb_node_queue_t
 *
node_queue
;

232 
node_queue
 = &
audio_∑ckë_queue
->
queue_node
;

233 if(
node_queue
->
›
 !
NULL
){

234 
node_queue
->
›
->
	`put
“ode_queue, &
audio_∑ckë_£˘i⁄
->
∑ckë_node
);

237 
	}
}

239 
	$tw_audio_∑ckë_queue_put_hódî
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
, 
tw_audio_∑ckë_£˘i⁄_t
 *
audio_∑ckë_£˘i⁄
)

241 if((
audio_∑ckë_queue
!=
NULL
Ë&& (
audio_∑ckë_£˘i⁄
!=NULL)){

242 
tcb_node_queue_t
 *
node_queue
;

243 
node_queue
 = &
audio_∑ckë_queue
->
queue_node
;

244 if(
node_queue
->
›
 !
NULL
){

245 
node_queue
->
›
->
	`put_hódî
“ode_queue, &
audio_∑ckë_£˘i⁄
->
∑ckë_node
);

248 
	}
}

250 
	$tw_audio_∑ckë_queue_gë_cuº_¥odu˚r_‰om_poﬁ
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
, 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
)

252 if((
audio_∑ckë_queue
!=
NULL
Ë&& (
audio_ch™_buf_poﬁ
!=NULL)){

253 
Êags
;

254 
	`•ö_lock_úqßve
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

255 if(
audio_∑ckë_queue
->
cuº_¥odu˚r
 =
NULL
){

256 if(
audio_ch™_buf_poﬁ
->
›
 !
NULL
){

257 
	`•ö_u∆ock_úqª°‹e
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

258 
audio_ch™_buf_poﬁ
->
›
->
	`gë_audio_£˘i⁄_tcb
◊udio_ch™_buf_poﬁ, &
audio_∑ckë_queue
->
cuº_¥odu˚r
);

262 
	`•ö_lock_úqßve
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

265 
	`•ö_u∆ock_úqª°‹e
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

267 
	}
}

269 
	$tw_audio_∑ckë_queue_åy_gë_cuº_¥odu˚r_‰om_poﬁ
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
, 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
)

271 if((
audio_∑ckë_queue
!=
NULL
Ë&& (
audio_ch™_buf_poﬁ
!=NULL)){

272 
Êags
;

273 
	`•ö_lock_úqßve
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

274 if(
audio_∑ckë_queue
->
cuº_¥odu˚r
 =
NULL
){

275 if(
audio_ch™_buf_poﬁ
->
›
 !
NULL
){

276 
audio_ch™_buf_poﬁ
->
›
->
	`åy_gë_audio_£˘i⁄_tcb
◊udio_ch™_buf_poﬁ, &
audio_∑ckë_queue
->
cuº_¥odu˚r
);

282 
	`•ö_u∆ock_úqª°‹e
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

284 
	}
}

286 
	$tw_audio_∑ckë_queue_put_cuº_¥odu˚r_öto_queue
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
)

288 if(
audio_∑ckë_queue
 !
NULL
){

289 
Êags
;

290 
	`•ö_lock_úqßve
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

291 if(
audio_∑ckë_queue
->
cuº_¥odu˚r
 !
NULL
){

293 if(
audio_∑ckë_queue
->
›
 !
NULL
){

294 
audio_∑ckë_queue
->
›
->
	`put
◊udio_∑ckë_queue,áudio_∑ckë_queue->
cuº_¥odu˚r
);

296 
	`tw_audio_∑ckë_queue_put
(
audio_∑ckë_queue
,áudio_∑ckë_queue->
cuº_¥odu˚r
);

298 
audio_∑ckë_queue
->
cuº_¥odu˚r
 = 
NULL
;

300 
	`•ö_u∆ock_úqª°‹e
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

302 
	}
}

304 
	$tw_audio_∑ckë_queue_ªÀa£_cuº_¥odu˚r
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
, 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
)

306 if((
audio_∑ckë_queue
!=
NULL
Ë&& (
audio_ch™_buf_poﬁ
!=NULL)){

307 
Êags
;

308 
	`•ö_lock_úqßve
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

309 if(
audio_∑ckë_queue
->
cuº_¥odu˚r
 !
NULL
){

311 if(
audio_∑ckë_queue
->
cuº_¥odu˚r
->
›
 !
NULL
){

312 
audio_∑ckë_queue
->
cuº_¥odu˚r
->
›
->
	`ªÀa£
(&audio_∑ckë_queue->cuº_¥odu˚r, 
audio_ch™_buf_poﬁ
);

314 
	`tw_audio_∑ckë_£˘i⁄_ªÀa£
(&
audio_∑ckë_queue
->
cuº_¥odu˚r
, 
audio_ch™_buf_poﬁ
);

317 
	`•ö_u∆ock_úqª°‹e
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

319 
	}
}

321 
	$tw_audio_∑ckë_queue_gë_cuº_c⁄sumî_‰om_queue
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
)

323 if(
audio_∑ckë_queue
 !
NULL
){

324 
Êags
;

325 
	`•ö_lock_úqßve
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

326 if(
audio_∑ckë_queue
->
cuº_c⁄sumî
 =
NULL
){

327 
	`•ö_u∆ock_úqª°‹e
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

328 if(
audio_∑ckë_queue
->
›
 !
NULL
){

329 
audio_∑ckë_queue
->
›
->
	`gë
◊udio_∑ckë_queue, &audio_∑ckë_queue->
cuº_c⁄sumî
);

331 
	`tw_audio_∑ckë_queue_gë
(
audio_∑ckë_queue
, &audio_∑ckë_queue->
cuº_c⁄sumî
);

333 
	`•ö_lock_úqßve
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

335 
	`•ö_u∆ock_úqª°‹e
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

337 
	}
}

339 
	$tw_audio_∑ckë_queue_åy_gë_cuº_c⁄sumî_‰om_queue
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
)

341 if(
audio_∑ckë_queue
 !
NULL
){

342 
Êags
;

343 
	`•ö_lock_úqßve
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

344 if(
audio_∑ckë_queue
->
cuº_c⁄sumî
 =
NULL
){

345 if(
audio_∑ckë_queue
->
›
 !
NULL
){

346 
audio_∑ckë_queue
->
›
->
	`åy_gë
◊udio_∑ckë_queue, &audio_∑ckë_queue->
cuº_c⁄sumî
);

348 
	`tw_audio_∑ckë_queue_åy_gë
(
audio_∑ckë_queue
, &audio_∑ckë_queue->
cuº_c⁄sumî
);

351 
	`•ö_u∆ock_úqª°‹e
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

353 
	}
}

355 
	$tw_audio_∑ckë_queue_ªÀa£_cuº_c⁄sumî
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
, 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
)

357 if((
audio_∑ckë_queue
!=
NULL
Ë&& (
audio_ch™_buf_poﬁ
!=NULL)){

358 
Êags
;

359 
	`•ö_lock_úqßve
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

360 if(
audio_∑ckë_queue
->
cuº_c⁄sumî
 !
NULL
){

361 if(
audio_∑ckë_queue
->
cuº_c⁄sumî
->
›
 !
NULL
){

362 
audio_∑ckë_queue
->
cuº_c⁄sumî
->
›
->
	`ªÀa£
(&audio_∑ckë_queue->cuº_c⁄sumî, 
audio_ch™_buf_poﬁ
);

364 
	`tw_audio_∑ckë_£˘i⁄_ªÀa£
(&
audio_∑ckë_queue
->
cuº_c⁄sumî
, 
audio_ch™_buf_poﬁ
);

367 
	`•ö_u∆ock_úqª°‹e
(&
audio_∑ckë_queue
->
lock
, 
Êags
);

369 
	}
}

371 
	$tw_audio_∑ckë_queue_gë_cuº_queue_íåy_numbî
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
)

373 
íåy_numbî
 = 0;

374 if(
audio_∑ckë_queue
 !
NULL
){

375 
tcb_node_queue_t
 *
node_queue
;

376 
node_queue
 = &
audio_∑ckë_queue
->
queue_node
;

377 if(
node_queue
->
›
 !
NULL
){

378 
íåy_numbî
 = 
node_queue
->
›
->
	`gë_queue_cuº_íåy_numbî
(node_queue);

381  
íåy_numbî
;

382 
	}
}

384 
	$tw_audio_∑ckë_queue_ªÀa£
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
, 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
)

386 if((
audio_∑ckë_queue
!=
NULL
Ë&& (
audio_ch™_buf_poﬁ
!=NULL)){

387 
	`ªmove_tw_audio_∑ckë_queue
(
audio_∑ckë_queue
, 
audio_ch™_buf_poﬁ
);

389 
	}
}

391 
	$tw_audio_∑ckë_queue_öô
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
)

393 if(
audio_∑ckë_queue
 !
NULL
){

394 
tcb_node_queue_t
 *
node_queue
;

395 
audio_∑ckë_queue
->
°¨t_time°amp
 = 0;

396 
audio_∑ckë_queue
->
tŸÆ_duøti⁄
 = 0;

397 
node_queue
 = &
audio_∑ckë_queue
->
queue_node
;

398 
node_queue
->
›
 = &
tcb_node_queue_›
;

399 
node_queue
->
›
->
	`öô
(node_queue);

400 
audio_∑ckë_queue
->
cuº_c⁄sumî
 = 
NULL
;

401 
audio_∑ckë_queue
->
cuº_¥odu˚r
 = 
NULL
;

402 
	`•ö_lock_öô
(&
audio_∑ckë_queue
->
lock
);

404 
	}
}

406 
tw_audio_∑ckë_queue_›î©i⁄
 
	gtw_audio_∑ckë_queue_›
 = {

407 .
gë
 = 
tw_audio_∑ckë_queue_gë
,

408 .
	gåy_gë
 = 
tw_audio_∑ckë_queue_åy_gë
,

409 .
	ggë_èûî
 = 
tw_audio_∑ckë_queue_gë_èûî
,

410 .
	gåy_gë_èûî
 = 
tw_audio_∑ckë_queue_åy_gë_èûî
,

411 .
	gput
 = 
tw_audio_∑ckë_queue_put
,

412 .
	gput_hódî
 = 
tw_audio_∑ckë_queue_put_hódî
,

414 .
	ggë_cuº_¥odu˚r_‰om_poﬁ
 = 
tw_audio_∑ckë_queue_gë_cuº_¥odu˚r_‰om_poﬁ
,

415 .
	gåy_gë_cuº_¥odu˚r_‰om_poﬁ
 = 
tw_audio_∑ckë_queue_åy_gë_cuº_¥odu˚r_‰om_poﬁ
,

416 .
	gput_cuº_¥odu˚r_öto_queue
 = 
tw_audio_∑ckë_queue_put_cuº_¥odu˚r_öto_queue
,

417 .
	gªÀa£_cuº_¥odu˚r
 = 
tw_audio_∑ckë_queue_ªÀa£_cuº_¥odu˚r
,

418 .
	ggë_cuº_c⁄sumî_‰om_queue
 = 
tw_audio_∑ckë_queue_gë_cuº_c⁄sumî_‰om_queue
,

419 .
	gåy_gë_cuº_c⁄sumî_‰om_queue
 = 
tw_audio_∑ckë_queue_åy_gë_cuº_c⁄sumî_‰om_queue
,

420 .
	gªÀa£_cuº_c⁄sumî
 = 
tw_audio_∑ckë_queue_ªÀa£_cuº_c⁄sumî
,

422 .
	ggë_cuº_queue_íåy_numbî
 = 
tw_audio_∑ckë_queue_gë_cuº_queue_íåy_numbî
,

423 .
	gªÀa£
 = 
tw_audio_∑ckë_queue_ªÀa£
,

424 .
	göô
 = 
tw_audio_∑ckë_queue_öô
,

427 
	$öô_tw_audio_∑ckë_queue
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
)

429 if(
audio_∑ckë_queue
 !
NULL
){

430 
audio_∑ckë_queue
->
›
 = &
tw_audio_∑ckë_queue_›
;

431 
audio_∑ckë_queue
->
›
->
	`öô
(audio_packet_queue);

433 
	}
}

435 
	$ªmove_tw_audio_∑ckë_queue
(
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
, 
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
)

437 if((
audio_∑ckë_queue
!=
NULL
Ë&& (
audio_ch™_buf_poﬁ
!=NULL)){

438 if(
audio_∑ckë_queue
->
›
 !
NULL
){

439 
audio_∑ckë_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(audio_packet_queue);

440 
audio_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊udio_∑ckë_queue, 
audio_ch™_buf_poﬁ
);

441 
audio_∑ckë_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(audio_packet_queue)){

442 
audio_∑ckë_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(audio_packet_queue);

443 if(
audio_∑ckë_queue
->
cuº_c⁄sumî
 =
NULL
){

446 
audio_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊udio_∑ckë_queue, 
audio_ch™_buf_poﬁ
);

449 
	`tw_audio_∑ckë_queue_put_cuº_¥odu˚r_öto_queue
(
audio_∑ckë_queue
);

450 
	`tw_audio_∑ckë_queue_ªÀa£_cuº_c⁄sumî
(
audio_∑ckë_queue
, 
audio_ch™_buf_poﬁ
);

451 
	`tw_audio_∑ckë_queue_gë_cuº_queue_íåy_numbî
(
audio_∑ckë_queue
)){

452 
	`tw_audio_∑ckë_queue_gë_cuº_c⁄sumî_‰om_queue
(
audio_∑ckë_queue
);

453 if(
audio_∑ckë_queue
->
cuº_c⁄sumî
 =
NULL
){

456 
	`tw_audio_∑ckë_queue_ªÀa£_cuº_c⁄sumî
(
audio_∑ckë_queue
, 
audio_ch™_buf_poﬁ
);

460 
	}
}

463 
	$¸óã_tw_audio_poﬁ
(
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
, 
buf_Àn
)

465 
ªt
 = 
TW_ERR
;

466 if(
audio_ch™_buf_poﬁ
 !
NULL
){

467 
tcb_node_poﬁ_t
 *
node_poﬁ
;

468 
tw_audio_∑ckë_£˘i⁄_t
 *
±r_audio_£˘i⁄_tcb
;

469 
i
;

471 
audio_ch™_buf_poﬁ
->
audio_buf„r_íåy_‹dî
 = 
	`gë_‹dî
(
buf_Àn
);

472 
audio_ch™_buf_poﬁ
->
audio_buf„r_ˇche
 = (
u8
*)
	`__gë_‰ì_∑ges
(
GFP_KERNEL
,áudio_ch™_buf_poﬁ->
audio_buf„r_íåy_‹dî
);

473 if(
audio_ch™_buf_poﬁ
->
audio_buf„r_ˇche
 =
NULL
) {

474 
audio_ch™_buf_poﬁ
->
audio_buf„r_íåy_‹dî
 = 0;

475 
	`¥ötk
("ˇn'àÆlo¯%dÖage†f‹áudiÿbu‡poﬁ\n", 
audio_ch™_buf_poﬁ
->
audio_buf„r_íåy_‹dî
);

476  
ªt
;

479 
audio_ch™_buf_poﬁ
->
audio_£˘i⁄_tcb_numbî
 = (
buf_Àn
/
AUDIO_SECTION_SIZE
);

480 
node_poﬁ
 = &
audio_ch™_buf_poﬁ
->
poﬁ_node
;

481 
node_poﬁ
->
›
 = &
tcb_node_poﬁ_›
;

482 
audio_ch™_buf_poﬁ
->
audio_£˘i⁄_tcb_ˇche
 = (
tw_audio_∑ckë_£˘i⁄_t
*)
	`kmÆloc
(—w_audio_∑ckë_£˘i⁄_t)*audio_ch™_buf_poﬁ->
audio_£˘i⁄_tcb_numbî
, 
GFP_KERNEL
);

483 if(
audio_ch™_buf_poﬁ
->
audio_£˘i⁄_tcb_ˇche
 =
NULL
){

484 
	`‰ì_∑ges
(()
audio_ch™_buf_poﬁ
->
audio_buf„r_ˇche
,áudio_ch™_buf_poﬁ->
audio_buf„r_íåy_‹dî
);

485 
audio_ch™_buf_poﬁ
->
audio_buf„r_ˇche
 = 
NULL
;

486 
audio_ch™_buf_poﬁ
->
audio_buf„r_íåy_‹dî
 = 0;

487 
	`¥ötk
("can'tállocáudio buf sectionÅcb\n");

488  
ªt
;

490 
node_poﬁ
->
›
->
	`öô
“ode_poﬁ, 
audio_ch™_buf_poﬁ
->
audio_£˘i⁄_tcb_numbî
);

491 
i
=0; i<
audio_ch™_buf_poﬁ
->
audio_£˘i⁄_tcb_numbî
; i++){

492 
±r_audio_£˘i⁄_tcb
 = &
audio_ch™_buf_poﬁ
->
audio_£˘i⁄_tcb_ˇche
[
i
];

493 
±r_audio_£˘i⁄_tcb
->
›
 = &
tw_audio_∑ckë_£˘i⁄_›
;

494 
±r_audio_£˘i⁄_tcb
->
audio_ch™_buf_poﬁ
 =áudio_chan_buf_pool;

495 
±r_audio_£˘i⁄_tcb
->
›
->
	`öô
’å_audio_£˘i⁄_tcb, 
audio_ch™_buf_poﬁ
, 
i
);

496 
±r_audio_£˘i⁄_tcb
->
›
->
	`ªÀa£
(&±r_audio_£˘i⁄_tcb, 
audio_ch™_buf_poﬁ
);

498 
ªt
 = 
TW_OK
;

500  
ªt
;

501 
	}
}

503 
	$ªÀa£_tw_audio_poﬁ
(
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
)

505 if(
audio_ch™_buf_poﬁ
 !
NULL
){

506 
tcb_node_poﬁ_t
 *
poﬁ_node
;

507 
poﬁ_node
 = &
audio_ch™_buf_poﬁ
->pool_node;

508 if(
poﬁ_node
->
›
 !
NULL
){

509 
poﬁ_node
->
›
->
	`ªÀa£
(pool_node);

511 if(
audio_ch™_buf_poﬁ
->
audio_£˘i⁄_tcb_ˇche
 !
NULL
){

512 
	`k‰ì
(
audio_ch™_buf_poﬁ
->
audio_£˘i⁄_tcb_ˇche
);

513 
audio_ch™_buf_poﬁ
->
audio_£˘i⁄_tcb_ˇche
 = 
NULL
;

515 
audio_ch™_buf_poﬁ
->
audio_£˘i⁄_tcb_numbî
 = 0;

517 if(
audio_ch™_buf_poﬁ
->
audio_buf„r_ˇche
 !
NULL
){

518 
	`‰ì_∑ges
(()
audio_ch™_buf_poﬁ
->
audio_buf„r_ˇche
,áudio_ch™_buf_poﬁ->
audio_buf„r_íåy_‹dî
);

519 
audio_ch™_buf_poﬁ
->
audio_buf„r_ˇche
 = 
NULL
;

521 
audio_ch™_buf_poﬁ
->
audio_buf„r_íåy_‹dî
 = 0;

523 
	}
}

525 
	$tw_audio_ch™_buf_poﬁ_gë_audio_£˘i⁄_tcb
(
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
, 
tw_audio_∑ckë_£˘i⁄_t
 **
±r_audio_∑ckë_£˘i⁄
)

527 if((
audio_ch™_buf_poﬁ
!=
NULL
Ë&& (
±r_audio_∑ckë_£˘i⁄
!=NULL)){

528 
tcb_node_poﬁ_t
 *
poﬁ_node
 = &
audio_ch™_buf_poﬁ
->pool_node;

529 *
±r_audio_∑ckë_£˘i⁄
 = 
NULL
;

530 if(
poﬁ_node
->
›
 !
NULL
){

531 
tcb_node_t
 *
ãmp_node
;

532 
poﬁ_node
->
›
->
	`gë
’oﬁ_node, &
ãmp_node
);

533 if(
ãmp_node
 !
NULL
){

534 *
±r_audio_∑ckë_£˘i⁄
 = 
	`to_gë_tw_audio_∑ckë_£˘i⁄
(
ãmp_node
);

535 
	`©omic_öc
(&((*
±r_audio_∑ckë_£˘i⁄
)->
ªf_cou¡
));

539 
	}
}

541 
	$tw_audio_ch™_buf_poﬁ_åy_gë_audio_£˘i⁄_tcb
(
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
, 
tw_audio_∑ckë_£˘i⁄_t
 **
±r_audio_∑ckë_£˘i⁄
)

543 if((
audio_ch™_buf_poﬁ
!=
NULL
Ë&& (
±r_audio_∑ckë_£˘i⁄
!=NULL)){

544 
tcb_node_poﬁ_t
 *
poﬁ_node
 = &
audio_ch™_buf_poﬁ
->pool_node;

545 *
±r_audio_∑ckë_£˘i⁄
 = 
NULL
;

546 if(
poﬁ_node
->
›
 !
NULL
){

547 
tcb_node_t
 *
ãmp_node
;

548 
poﬁ_node
->
›
->
	`åy_gë
’oﬁ_node, &
ãmp_node
);

549 if(
ãmp_node
 !
NULL
){

550 *
±r_audio_∑ckë_£˘i⁄
 = 
	`to_gë_tw_audio_∑ckë_£˘i⁄
(
ãmp_node
);

551 
	`©omic_öc
(&((*
±r_audio_∑ckë_£˘i⁄
)->
ªf_cou¡
));

555 
	}
}

557 
	$tw_audio_ch™_buf_poﬁ_put_audio_£˘i⁄_tcb
(
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
, 
tw_audio_∑ckë_£˘i⁄_t
 *
audio_∑ckë_£˘i⁄
)

559 if((
audio_ch™_buf_poﬁ
!=
NULL
Ë&& (
audio_∑ckë_£˘i⁄
!=NULL)){

560 
tcb_node_poﬁ_t
 *
poﬁ_node
 = &
audio_ch™_buf_poﬁ
->pool_node;

561 if(
poﬁ_node
->
›
 !
NULL
){

562 
poﬁ_node
->
›
->
	`put
’oﬁ_node, &
audio_∑ckë_£˘i⁄
->
∑ckë_node
);

565 
	}
}

567 
	$tw_audio_ch™_buf_poﬁ_gë_audio_£˘i⁄_tcb_poﬁ_íåy_numbî
(
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
)

569 
íåy_numbî
 = 0;

570 if(
audio_ch™_buf_poﬁ
!=
NULL
){

571 
tcb_node_poﬁ_t
 *
poﬁ_node
 = &
audio_ch™_buf_poﬁ
->pool_node;

572 if(
poﬁ_node
->
›
 !
NULL
){

573 
íåy_numbî
 = 
poﬁ_node
->
›
->
	`gë_cuº_poﬁ_íåy_numbî
(pool_node);

576  
íåy_numbî
;

577 
	}
}

579 
tw_audio_ch™_buf_poﬁ_›î©i⁄
 
	gtw_audio_ch™_buf_poﬁ_›
 = {

580 .
¸óã
 = 
¸óã_tw_audio_poﬁ
,

581 .
	gªÀa£
 = 
ªÀa£_tw_audio_poﬁ
,

583 .
	ggë_audio_£˘i⁄_tcb
 = 
tw_audio_ch™_buf_poﬁ_gë_audio_£˘i⁄_tcb
,

584 .
	gåy_gë_audio_£˘i⁄_tcb
 = 
tw_audio_ch™_buf_poﬁ_åy_gë_audio_£˘i⁄_tcb
,

585 .
	gput_audio_£˘i⁄_tcb
 = 
tw_audio_ch™_buf_poﬁ_put_audio_£˘i⁄_tcb
,

586 .
	ggë_audio_£˘i⁄_tcb_poﬁ_íåy_numbî
 = 
tw_audio_ch™_buf_poﬁ_gë_audio_£˘i⁄_tcb_poﬁ_íåy_numbî
,

589 
	$öô_audio_ch™_buf_poﬁ
(
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
)

591 
ªt
 = 
TW_ERR
;

592 if(
audio_ch™_buf_poﬁ
 !
NULL
){

593 
audio_ch™_buf_poﬁ
->
›
 = &
tw_audio_ch™_buf_poﬁ_›
;

594 
ªt
 = 
audio_ch™_buf_poﬁ
->
›
->
	`¸óã
◊udio_ch™_buf_poﬁ, 
AUDIO_CHAN_BUF_POOL_LEN
);

596  
ªt
;

597 
	}
}

599 
	$ªmove_audio_ch™_buf_poﬁ
(
tw_audio_ch™_buf_poﬁ_t
 *
audio_ch™_buf_poﬁ
)

601 if(
audio_ch™_buf_poﬁ
 !
NULL
){

602 if(
audio_ch™_buf_poﬁ
->
›
 !
NULL
){

603 
	`¥ötk
("%s.%d: %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_ch™_buf_poﬁ
->
›
->
	`gë_audio_£˘i⁄_tcb_poﬁ_íåy_numbî
(audio_chan_buf_pool));

604 
audio_ch™_buf_poﬁ
->
›
->
	`ªÀa£
(audio_chan_buf_pool);

606 
	`ªÀa£_tw_audio_poﬁ
(
audio_ch™_buf_poﬁ
);

609 
	}
}

	@../../tw5864/tw5864/tw_audio_chan_driver.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
	$audio_ícode_drivî_ö_uƒegi°î_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

5 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

6 
ed_tcb_t
 *
ed_tcb
;

7 
dvm_chù_t
 *
chù
;

8 
tw_audio_drivî_t
 *
audio_drivî
;

10 
ed_fsm
->
›
->
	`ª£t
(ed_fsm);

11 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

12 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

13 if(
	`©omic_ªad
(&
audio_drivî
->
›íed_Êag
)){

14 
	`©omic_£t
(&
audio_drivî
->
›íed_Êag
, 0);

15 
chù
 = 
audio_drivî
->
chù_audio
->chip;

16 
chù
->
	`chù_˛o£
(chip);

17 
ed_tcb
->
ed
.
›
->
	`com∂ëe_d⁄e
(&ed_tcb->ed);

19 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

21  
TW_OK
;

22 
	}
}

24 
	$audio_ícode_drivî_ö_uƒegi°î_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

26  
TW_OK
;

27 
	}
}

29 
	$audio_ícode_drivî_ö_uƒegi°î_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

31  
TW_OK
;

32 
	}
}

34 
	$audio_ícode_drivî_ö_uƒegi°î_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

36  
TW_OK
;

37 
	}
}

39 
	$audio_ícode_drivî_ö_uƒegi°î_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

41 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

42 
ed_tcb_t
 *
ed_tcb
;

43 
tw_audio_drivî_t
 *
audio_drivî
;

44 
dvm_chù_t
 *
chù
;

46 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

47 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

48 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

49 if(
	`©omic_ªad
(&
audio_drivî
->
›íed_Êag
) == 0){

50 
ed_tcb
->
ed
.
›
->
	`öô_com∂ëe
(&ed_tcb->ed);

51 
chù
 = 
audio_drivî
->
chù_audio
->chip;

52 
chù
->
	`chù_›í
(chip);

53 
audio_drivî
->
i_‰ame_£rül
 = 0;

54 
audio_drivî
->
disˇrd_numbî
 = 0;

55 
	`©omic_£t
(&
audio_drivî
->
›íed_Êag
, 1);

56 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_CLOSED
);

58 
	`drivî_gí_›í_evít
(
ed_tcb
, 1);

60  
TW_OK
;

61 
	}
}

63 
	$audio_ícode_drivî_ö_uƒegi°î_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

65  
TW_OK
;

66 
	}
}

68 
	$audio_ícode_drivî_ö_˛o£d_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

70 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

71 
chù_audio_t
 *
chù_audio
;

72 
tw_audio_drivî_t
 *
audio_drivî
;

73 
ed_tcb_t
 *
ed_tcb
;

75 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

76 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

77 
chù_audio
 = 
audio_drivî
->chip_audio;

78 
chù_audio
->
›
->
	`upd©e_íabÀ_audio_ch™
(chù_audio, 
audio_drivî
->
audio_logic_ch™_id
, 
AUDIO_DISABLE
);

79 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_UNREGISTER
);

80 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

82  
TW_OK
;

83 
	}
}

85 
	$audio_ícode_drivî_ö_˛o£d_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

87  
TW_OK
;

88 
	}
}

90 
	$audio_ícode_drivî_ö_˛o£d_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

92 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

93 
tw_audio_drivî_t
 *
audio_drivî
;

94 
ed_tcb_t
 *
ed_tcb
;

96 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

97 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

98 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

99 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 0);

101  
TW_OK
;

102 
	}
}

104 
	$audio_ícode_drivî_ö_˛o£d_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

106 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

107 
tw_audio_drivî_t
 *
audio_drivî
;

108 
ed_tcb_t
 *
ed_tcb
;

110 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

111 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

112 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

113 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 0);

115  
TW_OK
;

116 
	}
}

118 
	$audio_ícode_drivî_ö_˛o£d_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

120 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

121 
tw_audio_drivî_t
 *
audio_drivî
;

123 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

124 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

125 if(
ed_fsm
->
èbÀ
 !
NULL
){

126 if(
ed_fsm
->
èbÀ
->
sync_hook
 !
NULL
){

127 
ed_fsm
->
èbÀ
->
	`sync_hook
”d_fsm,Éd_fsm->
c⁄ãxt
);

129 
	`¥ötk
("%s.%d, %dÇÿªgi°îáudiÿfsm sync_hook\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

132 
	`¥ötk
("%s.%d, %dáudiÿfsmÅabÀ i†nuŒ\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

134 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_SUSPEND
);

136  
TW_OK
;

137 
	}
}

139 
	$audio_ícode_drivî_ö_˛o£d_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

141  
TW_OK
;

142 
	}
}

144 
	$audio_ícode_drivî_ö_idÀ_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

146 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

147 
tw_audio_drivî_t
 *
audio_drivî
;

148 
ed_tcb_t
 *
ed_tcb
;

150 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

151 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

152 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

153 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_CLOSED
);

154 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

156  
TW_OK
;

157 
	}
}

159 
	$audio_ícode_drivî_ö_idÀ_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

161  
TW_OK
;

162 
	}
}

164 
	$audio_ícode_drivî_ö_idÀ_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

166 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

167 
tw_audio_drivî_t
 *
audio_drivî
;

169 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

170 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

171 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_SUSPEND
);

173  
TW_OK
;

174 
	}
}

176 
	$audio_ícode_drivî_ö_idÀ_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

178  
TW_OK
;

179 
	}
}

181 
	$audio_ícode_drivî_ö_idÀ_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

183  
TW_OK
;

184 
	}
}

186 
	$audio_ícode_drivî_ö_idÀ_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

188 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

189 
chù_audio_t
 *
chù_audio
;

190 
chù_audio_ícode_t
 *
audio_ícode
;

191 
dvm_chù_t
 *
chù
;

192 
tw_audio_drivî_t
 *
audio_ch™_drivî
;

193 
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
;

194 
tw_audio_ch™_buf_poﬁ_t
 *
audio_buf_poﬁ
;

195 
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
;

196 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
;

197 
d¥am_ªque°_t
 *
ªad_audio_bô°ªam_ªq
;

199 
audio_ch™_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

200 
chù_audio
 = 
audio_ch™_drivî
->chip_audio;

201 
chù
 = 
chù_audio
->chip;

202 
audio_ícode
 = &
chù_audio
->audio_encode;

203 
audio_∑ckë_queue
 = &
audio_ch™_drivî
->audio_packet_queue;

204 
audio_buf_poﬁ
 = &
audio_ch™_drivî
->audio_buf_pool;

205 
audio_£˘i⁄_∑øm
 = &
audio_ch™_drivî
->audio_section_param;

206 
audio_£˘i⁄_∑øm
->
›
->
	`upd©e_hódî_±r
◊udio_£˘i⁄_∑øm, 
chù_audio
);

207 
audio_£˘i⁄_∑øm
->
›
->
	`upd©e_èûî_±r
◊udio_£˘i⁄_∑øm, 
chù_audio
);

208 if(
audio_£˘i⁄_∑øm
->
›
->
	`queue_ˇ∑côy
(audio_section_param)){

209 if(
audio_£˘i⁄_∑øm
->
disˇrd_numbî
 > 0){

210 
chù_audio_ícode_t
 *
audio_ícode
 = &
chù_audio
->audio_encode;

211 
audio_£˘i⁄_∑øm
->
disˇrd_numbî
--;

212 
audio_ícode
->
›
->
	`£t_föish_rd_±r
◊udio_ícode, 
audio_£˘i⁄_∑øm
->›->
	`gë_upd©e_föish_id
◊udio_£˘i⁄_∑øm), 
chù
);

214 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_STANDBY
);

215 
audio_£˘i⁄_∑øm
->
›
->
	`upd©e_cuº_£˘i⁄_off£t
◊udio_£˘i⁄_∑øm, 
chù_audio
);

216 
ªad_audio_bô°ªam_ªq
 = &
audio_ch™_drivî
->
audio_bô°ªam_ªq
;

217 
	`öô_submô_ªcv_audio_bô°ªam_£rvi˚
(
ªad_audio_bô°ªam_ªq
, 
audio_ch™_drivî
);

218 
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

219 
chù_d¥am_c⁄åﬁÀr
->
›
->
	`submô_ªad_audio_ªq
(chù_d¥am_c⁄åﬁÀr, 
audio_ch™_drivî
);

224  
TW_OK
;

225 
	}
}

227 
	$audio_ícode_drivî_ö_°™dby_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

229 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

230 
tw_audio_drivî_t
 *
audio_drivî
;

231 
ed_tcb_t
 *
ed_tcb
;

233 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

234 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

235 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

236 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 0);

238  
TW_OK
;

239 
	}
}

241 
	$audio_ícode_drivî_ö_°™dby_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

243  
TW_OK
;

244 
	}
}

246 
	$audio_ícode_drivî_ö_°™dby_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

248 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

249 
tw_audio_drivî_t
 *
audio_drivî
;

250 
ed_tcb_t
 *
ed_tcb
;

252 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

253 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

254 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

255 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 0);

257  
TW_OK
;

258 
	}
}

260 
	$audio_ícode_drivî_ö_°™dby_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

262 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

263 
tw_audio_drivî_t
 *
audio_drivî
;

264 
ed_tcb_t
 *
ed_tcb
;

266 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

267 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

268 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

269 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 0);

271  
TW_OK
;

272 
	}
}

274 
	$audio_ícode_drivî_ö_°™dby_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

276  
TW_OK
;

277 
	}
}

279 
	$audio_ícode_drivî_ö_°™dby_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

281 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

282 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_RUNNING
);

284  
TW_OK
;

285 
	}
}

287 
	$audio_ícode_drivî_ö_su•íd_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

289 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

290 
tw_audio_drivî_t
 *
audio_drivî
;

291 
ed_tcb_t
 *
ed_tcb
;

293 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

294 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

295 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_CLOSED
);

296 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

297 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 1);

298 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

300  
TW_OK
;

301 
	}
}

303 
	$audio_ícode_drivî_ö_su•íd_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

305  
TW_OK
;

306 
	}
}

308 
	$audio_ícode_drivî_ö_su•íd_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

310  
TW_OK
;

311 
	}
}

313 
	$audio_ícode_drivî_ö_su•íd_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

315 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

316 
tw_audio_drivî_t
 *
audio_drivî
;

317 
ed_tcb_t
 *
ed_tcb
;

319 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

320 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

321 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

322 if(
ed_fsm
->
èbÀ
 !
NULL
){

323 if(
ed_fsm
->
èbÀ
->
sync_hook
 !
NULL
){

324 
ed_fsm
->
èbÀ
->
	`sync_hook
”d_fsm, 
c⁄ãxt
);

327 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_IDLE
);

329 
	`drivî_åiggî_≥ndög_evít
(
ed_tcb
, 1);

331  
TW_OK
;

332 
	}
}

334 
	$audio_ícode_drivî_ö_su•íd_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

336  
TW_OK
;

337 
	}
}

339 
	$audio_ícode_drivî_ö_su•íd_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

341  
TW_OK
;

342 
	}
}

344 
	$audio_ícode_drivî_ö_ru¬ög_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

346 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

347 
tw_audio_drivî_t
 *
audio_drivî
;

348 
ed_tcb_t
 *
ed_tcb
;

350 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

351 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

352 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

353 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 0);

355  
TW_OK
;

356 
	}
}

358 
	$audio_ícode_drivî_ö_ru¬ög_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

360  
TW_OK
;

361 
	}
}

363 
	$audio_ícode_drivî_ö_ru¬ög_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

365 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

366 
tw_audio_drivî_t
 *
audio_drivî
;

367 
ed_tcb_t
 *
ed_tcb
;

369 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

370 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

371 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

372 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 0);

374  
TW_OK
;

375 
	}
}

377 
	$audio_ícode_drivî_ö_ru¬ög_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

379 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

380 
tw_audio_drivî_t
 *
audio_drivî
;

381 
ed_tcb_t
 *
ed_tcb
;

383 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

384 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

385 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

386 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 0);

388  
TW_OK
;

389 
	}
}

391 
	$audio_ícode_drivî_ö_ru¬ög_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

393  
TW_OK
;

394 
	}
}

396 
	$audio_ícode_drivî_ö_ru¬ög_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

398 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

399 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_TRANSFERING
);

401  
TW_OK
;

402 
	}
}

404 
	$audio_ícode_drivî_ö_å™s„rög_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

406 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

407 
tw_audio_drivî_t
 *
audio_drivî
;

408 
ed_tcb_t
 *
ed_tcb
;

410 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

411 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

412 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

413 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 0);

415  
TW_OK
;

416 
	}
}

418 
	$audio_ícode_drivî_ö_å™s„rög_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

420  
TW_OK
;

421 
	}
}

423 
	$audio_ícode_drivî_ö_å™s„rög_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

425 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

426 
tw_audio_drivî_t
 *
audio_drivî
;

427 
ed_tcb_t
 *
ed_tcb
;

429 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

430 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

431 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

432 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 0);

434  
TW_OK
;

435 
	}
}

437 
	$audio_ícode_drivî_ö_å™s„rög_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

439 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

440 
tw_audio_drivî_t
 *
audio_drivî
;

441 
ed_tcb_t
 *
ed_tcb
;

443 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

444 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

445 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

446 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 0);

448  
TW_OK
;

449 
	}
}

451 
	$audio_ícode_drivî_ö_å™s„rög_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

453  
TW_OK
;

454 
	}
}

456 
	$audio_ícode_drivî_ö_å™s„rög_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

458 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

459 
ed_tcb_t
 *
ed_tcb
;

461 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_IDLE
);

462 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

463 
	`drivî_åiggî_≥ndög_evít
(
ed_tcb
, 1);

465  
TW_OK
;

466 
	}
}

468 
	$audio_ícode_drivî_sync_hook
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

470 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

471 
ed_tcb_t
 *
ed_tcb
;

472 
tw_audio_drivî_t
 *
audio_drivî
;

473 
chù_audio_t
 *
chù_audio
;

474 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
;

475 
chù_audio_ícode_t
 *
audio_ícode
;

477 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

478 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

479 
chù_audio
 = 
audio_drivî
->chip_audio;

480 
audio_ícode
 = &
chù_audio
->audio_encode;

481 
c⁄fig_∑øm
 = &
audio_ícode
->config_param;

482 
	`ª£t_tw5864_audio_ícode_ch™
(
audio_drivî
);

483 
c⁄fig_∑øm
->
›
->
	`upd©e_ßm∂e_øã
(c⁄fig_∑øm, c⁄fig_∑øm->›->
	`gë_ßm∂e_øã
(config_param));

484 
c⁄fig_∑øm
->
›
->
	`upd©e_bô_wide
(c⁄fig_∑øm, c⁄fig_∑øm->›->
	`gë_bô_wide
(config_param));

485 
c⁄fig_∑øm
->
›
->
	`upd©e_ty≥
(c⁄fig_∑øm, c⁄fig_∑øm->›->
	`gë_ty≥
(config_param));

486 
chù_audio
->
›
->
	`upd©e_íabÀ_audio_ch™
(chù_audio, 
audio_drivî
->
audio_logic_ch™_id
, 
AUDIO_ENABLE
);

488  
TW_OK
;

489 
	}
}

491 
fsm_°©e_å™s„r_m©rix_èbÀ_t
 
	gaudio_ícode_drivî_fsm_°©e_å™s„r_m©rix_èbÀ
 = {

492 .
a˘i⁄
 = {

494 
audio_ícode_drivî_ö_uƒegi°î_°©e_ªcv_˛o£_evít
,

495 
audio_ícode_drivî_ö_uƒegi°î_°©e_ªcv_timeout_evít
,

496 
audio_ícode_drivî_ö_uƒegi°î_°©e_ªcv_su•íd_evít
,

497 
audio_ícode_drivî_ö_uƒegi°î_°©e_ªcv_ªsume_evít
,

498 
audio_ícode_drivî_ö_uƒegi°î_°©e_ªcv_›í_evít
,

499 
audio_ícode_drivî_ö_uƒegi°î_°©e_ªcv_dñivî_evít


502 
audio_ícode_drivî_ö_˛o£d_°©e_ªcv_˛o£_evít
,

503 
audio_ícode_drivî_ö_˛o£d_°©e_ªcv_timeout_evít
,

504 
audio_ícode_drivî_ö_˛o£d_°©e_ªcv_su•íd_evít
,

505 
audio_ícode_drivî_ö_˛o£d_°©e_ªcv_ªsume_evít
,

506 
audio_ícode_drivî_ö_˛o£d_°©e_ªcv_›í_evít
,

507 
audio_ícode_drivî_ö_˛o£d_°©e_ªcv_dñivî_evít


510 
audio_ícode_drivî_ö_idÀ_°©e_ªcv_˛o£_evít
,

511 
audio_ícode_drivî_ö_idÀ_°©e_ªcv_timeout_evít
,

512 
audio_ícode_drivî_ö_idÀ_°©e_ªcv_su•íd_evít
,

513 
audio_ícode_drivî_ö_idÀ_°©e_ªcv_ªsume_evít
,

514 
audio_ícode_drivî_ö_idÀ_°©e_ªcv_›í_evít
,

515 
audio_ícode_drivî_ö_idÀ_°©e_ªcv_dñivî_evít


518 
audio_ícode_drivî_ö_°™dby_°©e_ªcv_˛o£_evít
,

519 
audio_ícode_drivî_ö_°™dby_°©e_ªcv_timeout_evít
,

520 
audio_ícode_drivî_ö_°™dby_°©e_ªcv_su•íd_evít
,

521 
audio_ícode_drivî_ö_°™dby_°©e_ªcv_ªsume_evít
,

522 
audio_ícode_drivî_ö_°™dby_°©e_ªcv_›í_evít
,

523 
audio_ícode_drivî_ö_°™dby_°©e_ªcv_dñivî_evít


526 
audio_ícode_drivî_ö_su•íd_°©e_ªcv_˛o£_evít
,

527 
audio_ícode_drivî_ö_su•íd_°©e_ªcv_timeout_evít
,

528 
audio_ícode_drivî_ö_su•íd_°©e_ªcv_su•íd_evít
,

529 
audio_ícode_drivî_ö_su•íd_°©e_ªcv_ªsume_evít
,

530 
audio_ícode_drivî_ö_su•íd_°©e_ªcv_›í_evít
,

531 
audio_ícode_drivî_ö_su•íd_°©e_ªcv_dñivî_evít


534 
audio_ícode_drivî_ö_ru¬ög_°©e_ªcv_˛o£_evít
,

535 
audio_ícode_drivî_ö_ru¬ög_°©e_ªcv_timeout_evít
,

536 
audio_ícode_drivî_ö_ru¬ög_°©e_ªcv_su•íd_evít
,

537 
audio_ícode_drivî_ö_ru¬ög_°©e_ªcv_ªsume_evít
,

538 
audio_ícode_drivî_ö_ru¬ög_°©e_ªcv_›í_evít
,

539 
audio_ícode_drivî_ö_ru¬ög_°©e_ªcv_dñivî_evít


542 
audio_ícode_drivî_ö_å™s„rög_°©e_ªcv_˛o£_evít
,

543 
audio_ícode_drivî_ö_å™s„rög_°©e_ªcv_timeout_evít
,

544 
audio_ícode_drivî_ö_å™s„rög_°©e_ªcv_su•íd_evít
,

545 
audio_ícode_drivî_ö_å™s„rög_°©e_ªcv_ªsume_evít
,

546 
audio_ícode_drivî_ö_å™s„rög_°©e_ªcv_›í_evít
,

547 
audio_ícode_drivî_ö_å™s„rög_°©e_ªcv_dñivî_evít


550 .
	gsync_hook
 = 
audio_ícode_drivî_sync_hook
,

553 
	$tw_audio_ícode_hcd_öãrÁ˚_›í
(
ed_tcb_t
 *
ed_tcb
)

555 
tw_audio_drivî_t
 *
audio_drivî
;

556 
ªt
 = 
TW_ERR
;

557 if(
ed_tcb
 !
NULL
){

558 
audio_drivî
 = 
	`to_tw_audio_ch™_drivî_wôh_audio_ed
(
ed_tcb
);

559 if(
	`©omic_ªad
(&
audio_drivî
->
›íed_Êag
)){

560  
ªt
;

563 
	`drivî_gí_›í_evít
(
ed_tcb
, 1);

564 
ªt
 = 
TW_OK
;

566  
ªt
;

567 
	}
}

569 
	$tw_audio_ícode_hcd_öãrÁ˚_˛o£
(
ed_tcb_t
 *
ed_tcb
)

571 
tw_audio_drivî_t
 *
audio_drivî
;

572 
ªt
 = 
TW_ERR
;

573 if(
ed_tcb
 !
NULL
){

574 
audio_drivî
 = 
	`to_tw_audio_ch™_drivî_wôh_audio_ed
(
ed_tcb
);

575 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

576 
ed_tcb
->
ed
.
›
->
	`waô_com∂ëe
(&ed_tcb->ed);

577 
	`ªmove_tw_audio_∑ckë_queue
(&
audio_drivî
->
audio_∑ckë_queue
, &audio_drivî->
audio_buf_poﬁ
);

578 
ªt
 = 
TW_OK
;

580  
ªt
;

581 
	}
}

583 
	$tw_audio_ícode_hcd_öãrÁ˚_su•íd
(
ed_tcb_t
 *
ed_tcb
)

585 if(
ed_tcb
 !
NULL
){

588 
	}
}

590 
	$tw_audio_ícode_hcd_öãrÁ˚_ªsume
(
ed_tcb_t
 *
ed_tcb
)

592 if(
ed_tcb
 !
NULL
){

595 
	}
}

597 
	$tw_audio_ícode_hcd_öãrÁ˚_io˘l
(
ed_tcb_t
 *
ed_tcb
, 
cmd
, 
¨g
)

599 
tw_audio_drivî_t
 *
audio_drivî
;

600 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
;

601 
tw_chù_audio_∑øm
 
audio_∑øm
;

602 
chù_audio_ícode_t
 *
audio_ícode
;

603 
ªt
 = 
TW_OK
, 
sync_Êag
 = 0;

605 
	`TW_DBG
(
TW_DBG_INFO
, "%c, %d\n", 
	`_IOC_TYPE
(
cmd
), 
	`_IOC_NR
(cmd));

606 if(
ed_tcb
) {

607 
cmd
) {

608 
TW_CHIP_AUDIO_ENCODE_PARAM_SET
:

609 
	`c›y_‰om_u£r
(&
audio_∑øm
, (*)
¨g
, (
tw_chù_audio_∑øm
));

610 
audio_drivî
 = 
	`to_tw_audio_ch™_drivî_wôh_audio_ed
(
ed_tcb
);

611 
audio_ícode
 = &
audio_drivî
->
chù_audio
->audio_encode;

612 
c⁄fig_∑øm
 = &
audio_ícode
->config_param;

613 if(
audio_∑øm
.
ch™ge_mask_Êag
 & 
TW_CHIP_AUDIO_ENCODE_PARAM_ENABLE_CHANGE_BIT_WIDE_MASK
) {

614 
ªt
 |
c⁄fig_∑øm
->
›
->
	`upd©e_bô_wide
(c⁄fig_∑øm, 
audio_∑øm
.
i_bô_wide
);

615 
sync_Êag
 = 1;

617 if(
audio_∑øm
.
ch™ge_mask_Êag
 & 
TW_CHIP_AUDIO_ENCODE_PARAM_ENABLE_CHANGE_SAMPLE_RATE_MASK
) {

618 
ªt
 |
c⁄fig_∑øm
->
›
->
	`upd©e_ßm∂e_øã
(c⁄fig_∑øm, 
audio_∑øm
.
i_ßm∂e_øã
);

619 
sync_Êag
 = 1;

621 if(
audio_∑øm
.
ch™ge_mask_Êag
 & 
TW_CHIP_AUDIO_ENCODE_PARAM_ENABLE_CHANGE_ENCODE_TYPE_MASK
) {

622 
ªt
 |
c⁄fig_∑øm
->
›
->
	`upd©e_ty≥
(c⁄fig_∑øm, 
audio_∑øm
.
e_audio_ty≥
);

623 
sync_Êag
 = 1;

625 if(
sync_Êag
){

626 
ed_tcb
->
ed_fsm
.
›
->
	`upd©e_√ed_sync_hook
(&ed_tcb->ed_fsm, 1);

628 if(
ªt
) {

629 
	`TW_DBG
(
TW_DBG_ERR
, "audioÉncoderÖarameter isÉrror\n");

630 
ªt
 = -
EINVAL
;

633 
TW_CHIP_AUDIO_ENCODE_PARAM_GET
:

634 
audio_drivî
 = 
	`to_tw_audio_ch™_drivî_wôh_audio_ed
(
ed_tcb
);

635 
audio_ícode
 = &
audio_drivî
->
chù_audio
->audio_encode;

636 
c⁄fig_∑øm
 = &
audio_ícode
->config_param;

637 if(
audio_∑øm
.
ch™ge_mask_Êag
 & 
TW_CHIP_AUDIO_ENCODE_PARAM_ENABLE_CHANGE_BIT_WIDE_MASK
) {

638 
audio_∑øm
.
i_bô_wide
 = 
c⁄fig_∑øm
->
›
->
	`gë_bô_wide
(config_param);

640 if(
audio_∑øm
.
ch™ge_mask_Êag
 & 
TW_CHIP_AUDIO_ENCODE_PARAM_ENABLE_CHANGE_SAMPLE_RATE_MASK
) {

641 
audio_∑øm
.
i_ßm∂e_øã
 = 
c⁄fig_∑øm
->
›
->
	`gë_ßm∂e_øã
(config_param);

643 if(
audio_∑øm
.
ch™ge_mask_Êag
 & 
TW_CHIP_AUDIO_ENCODE_PARAM_ENABLE_CHANGE_ENCODE_TYPE_MASK
) {

644 
audio_∑øm
.
e_audio_ty≥
 = 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param);

646 
	`c›y_to_u£r
((*)
¨g
, &
audio_∑øm
, (
tw_chù_audio_∑øm
));

647 
ªt
 = 
TW_OK
;

649 
TW_LOGIC_CHAN_ENABLE_SET
:

650 
audio_drivî
 = 
	`to_tw_audio_ch™_drivî_wôh_audio_ed
(
ed_tcb
);

651 
	`TW_DBG
(
TW_DBG_INFO
, "ªsumêaudiÿch™√»%d\n", 
audio_drivî
->
audio_logic_ch™_id
);

652 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 1);

653 
ªt
 = 
TW_OK
;

655 
TW_LOGIC_CHAN_DISABLE_SET
:

656 
audio_drivî
 = 
	`to_tw_audio_ch™_drivî_wôh_audio_ed
(
ed_tcb
);

657 
	`TW_DBG
(
TW_DBG_INFO
, "su•ídáudiÿch™√»%d\n", 
audio_drivî
->
audio_logic_ch™_id
);

658 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 1);

659 
ªt
 = 
TW_OK
;

662 
	`TW_DBG
(
TW_DBG_ERR
, "bad command\n");

663 
ªt
 = -
EBADRQC
;

668  
ªt
;

669 
	}
}

671 
	$tw_audio_ícode_hcd_öãrÁ˚_gë_°©e
(
ed_tcb_t
 *
ed_tcb
)

673 
ªt
 = 
TW_ED_UNREGISTER
;

674 if(
ed_tcb
 !
NULL
){

675 
ªt
 = 
ed_tcb
->
ed_fsm
.
›
->
	`gë_cuº_°©e
(&ed_tcb->ed_fsm);

677  
ªt
;

678 
	}
}

680 
tw_hcd_öãrÁ˚_›î©i⁄
 
	gtw_audio_ícode_hcd_öãrÁ˚_›
 = {

681 .
›í
 = 
tw_audio_ícode_hcd_öãrÁ˚_›í
,

682 .
	g˛o£
 = 
tw_audio_ícode_hcd_öãrÁ˚_˛o£
,

683 .
	gsu•íd
 = 
tw_audio_ícode_hcd_öãrÁ˚_su•íd
,

684 .
	gªsume
 = 
tw_audio_ícode_hcd_öãrÁ˚_ªsume
,

685 .
	gio˘l
 = 
tw_audio_ícode_hcd_öãrÁ˚_io˘l
,

686 .
	ggë_°©e
 = 
tw_audio_ícode_hcd_öãrÁ˚_gë_°©e
,

689 
	$audio_ícode_£˘i⁄_∑øm_öô
(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
)

691 if(
audio_£˘i⁄_∑øm
 !
NULL
) {

692 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_hódî_±r
 = 
INVALID_TW_AUDIO_SECTION_ID
;

693 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_hódî_±r_ext_Êag
 = 0;

694 
audio_£˘i⁄_∑øm
->
œ°_audio_£˘i⁄_queue_hódî_±r_ext_Êag
 = 0;

695 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_èûî_±r
 = 
INVALID_TW_AUDIO_SECTION_ID
;

696 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_èûî_±r_ext_Êag
 = 0;

697 
audio_£˘i⁄_∑øm
->
£˘i⁄_queue_size
 = 0;

698 
audio_£˘i⁄_∑øm
->
disˇrd_numbî
 = 
AUDIO_IN_ADPCM_CHAN_SECTION_NUMBER
;

700 
	}
}

702 
	$audio_ícode_£˘i⁄_∑øm_upd©e_hódî_±r
(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
, 
chù_audio_t
 *
chù_audio
)

704 if((
audio_£˘i⁄_∑øm
!=
NULL
Ë&& (
chù_audio
!=NULL)){

705 
chù_audio_ícode_t
 *
audio_ícode
;

706 
tw_audio_drivî_t
 *
audio_drivî
;

707 
ch™_id
;

708 
audio_drivî
 = 
	`to_gë_audio_ch™_drivî_wôh_audio_£˘i⁄
(
audio_£˘i⁄_∑øm
);

709 
ch™_id
 = 
audio_drivî
->
audio_logic_ch™_id
;

710 
audio_ícode
 = &
chù_audio
->audio_encode;

711 if(
audio_ícode
->
›
 !
NULL
){

712 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_hódî_±r
 = 
audio_ícode
->
›
->
	`gë_audio_ícode_ch™_wr_±r
◊udio_ícode, 
ch™_id
, &audio_£˘i⁄_∑øm->
audio_£˘i⁄_queue_hódî_±r_ext_Êag
, &audio_£˘i⁄_∑øm->
£˘i⁄_queue_size
);

714 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_hódî_±r
 = 
INVALID_TW_AUDIO_SECTION_ID
;

715 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_hódî_±r_ext_Êag
 = 0;

716 
audio_£˘i⁄_∑øm
->
£˘i⁄_queue_size
 = 0;

719 
	}
}

721 
	$audio_ícode_£˘i⁄_∑øm_upd©e_èûî_±r
(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
, 
chù_audio_t
 *
chù_audio
)

723 if((
audio_£˘i⁄_∑øm
!=
NULL
Ë&& (
chù_audio
!=NULL)){

724 
chù_audio_ícode_t
 *
audio_ícode
;

725 
tw_audio_drivî_t
 *
audio_drivî
;

726 
ch™_id
;

728 
audio_drivî
 = 
	`to_gë_audio_ch™_drivî_wôh_audio_£˘i⁄
(
audio_£˘i⁄_∑øm
);

729 
ch™_id
 = 
audio_drivî
->
audio_logic_ch™_id
;

730 
audio_ícode
 = &
chù_audio
->audio_encode;

731 if(
audio_ícode
->
›
 !
NULL
) {

732 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_èûî_±r
 = 
audio_ícode
->
›
->
	`gë_audio_ícode_ch™_rd_±r
◊udio_ícode, 
ch™_id
, &audio_£˘i⁄_∑øm->
audio_£˘i⁄_queue_èûî_±r_ext_Êag
, &audio_£˘i⁄_∑øm->
£˘i⁄_queue_size
);

734 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_èûî_±r
 = 
INVALID_TW_AUDIO_SECTION_ID
;

735 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_èûî_±r_ext_Êag
 = 0;

736 
audio_£˘i⁄_∑øm
->
£˘i⁄_queue_size
 = 0;

739 
	}
}

741 
	$audio_ícode_£˘i⁄_∑øm_queue_ˇ∑côy
(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
)

743 
ªt
 = 0;

744 if(
audio_£˘i⁄_∑øm
 !
NULL
) {

745 if(
audio_£˘i⁄_∑øm
->
£˘i⁄_queue_size
 > 0) {

746 
tw_audio_drivî_t
 *
audio_drivî
;

747 
audio_drivî
 = 
	`to_gë_audio_ch™_drivî_wôh_audio_£˘i⁄
(
audio_£˘i⁄_∑øm
);

748 if(
	`©omic_ªad
(&
audio_drivî
->
audio_sync_disˇrd_numbî
) > 0){

749 
	`©omic_dec
(&
audio_drivî
->
audio_sync_disˇrd_numbî
);

751 
ªt
 = 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_hódî_±r
 +áudio_£˘i⁄_∑øm->
£˘i⁄_queue_size
 -áudio_£˘i⁄_∑øm->
audio_£˘i⁄_queue_èûî_±r
;

752 
ªt
 %
audio_£˘i⁄_∑øm
->
£˘i⁄_queue_size
;

753 if(
ªt
 == 0){

754 if(
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_èûî_±r_ext_Êag
 !audio_£˘i⁄_∑øm->
audio_£˘i⁄_queue_hódî_±r_ext_Êag
){

755 
ªt
 = 1;

757 } i‡(
ªt
 < 2){

758 
ªt
 = 0;

760 
ªt
 = 1;

764 
	`¥ötk
("%s.%d: queuêsizêi†0\n", 
__FILE__
, 
__LINE__
);

767  
ªt
;

768 
	}
}

770 
	$audio_ícode_£˘i⁄_∑øm_upd©e_cuº_£˘i⁄_off£t
(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
, 
chù_audio_t
 *
chù_audio
)

772 if((
audio_£˘i⁄_∑øm
!=
NULL
Ë&& (
chù_audio
!=NULL)){

773 
tw_audio_drivî_t
 *
audio_drivî
;

774 
chù_audio_ícode_t
 *
audio_ícode
;

775 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
;

776 
audio_pcm_ícode_d©a_addr_t
 *
pcm_audio_d©a_ba£
;

777 
audio_adpcm_ícode_d©a_addr_t
 *
adpcm_audio_d©a_ba£
;

778 
ch™_id
;

780 if(
audio_£˘i⁄_∑øm
->
£˘i⁄_queue_size
 > 0) {

781 
audio_drivî
 = 
	`to_gë_audio_ch™_drivî_wôh_audio_£˘i⁄
(
audio_£˘i⁄_∑øm
);

782 
ch™_id
 = 
audio_drivî
->
audio_logic_ch™_id
;

783 
audio_ícode
 = &
chù_audio
->audio_encode;

784 
c⁄fig_∑øm
 = &
audio_ícode
->config_param;

785 if(
c⁄fig_∑øm
->
›
!
NULL
){

786 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param)){

787 
TW_AUDIO_PCM
:

788 
pcm_audio_d©a_ba£
 = &
audio_ícode
->pcm_audio_data_base;

789 if(
pcm_audio_d©a_ba£
->
›
 !
NULL
) {

790 
pcm_audio_d©a_ba£
->
›
->
	`£t_ªg_bô_pcm_ty≥
(pcm_audio_data_base);

791 
pcm_audio_d©a_ba£
->
›
->
	`£t_ªg_bô_ch™_id
’cm_audio_d©a_ba£, 
ch™_id
);

792 
pcm_audio_d©a_ba£
->
›
->
	`£t_ªg_bô_£˘i⁄_id
’cm_audio_d©a_ba£, 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_èûî_±r
);

793 
pcm_audio_d©a_ba£
->
›
->
	`£t_ªg_bô_£˘i⁄_off£t
(pcm_audio_data_base, 0);

794 
audio_£˘i⁄_∑øm
->
∑ge_id
 = 
pcm_audio_d©a_ba£
->
›
->
	`gë_buf_∑ge_id
(pcm_audio_data_base);

795 
audio_£˘i⁄_∑øm
->
chù_a_‹_b
 = 
pcm_audio_d©a_ba£
->
›
->
	`gë_buf_ö_chù_a_‹_b
(pcm_audio_data_base);

796 
audio_£˘i⁄_∑øm
->
ddr_íd_addr
 = 
pcm_audio_d©a_ba£
->
›
->
	`gë_pcm_ícode_d©a_addr_ö_ddr_íd_off£t
(pcm_audio_data_base);

799 
TW_AUDIO_ADPCM_32K
:

800 
adpcm_audio_d©a_ba£
 = &
audio_ícode
->adpcm_audio_data_base;

801 if(
adpcm_audio_d©a_ba£
->
›
 !
NULL
) {

802 
adpcm_audio_d©a_ba£
->
›
->
	`£t_ªg_bô_ch™_id
◊dpcm_audio_d©a_ba£, 
ch™_id
);

803 
adpcm_audio_d©a_ba£
->
›
->
	`£t_ªg_bô_adpcm_ty≥
(adpcm_audio_data_base);

804 
adpcm_audio_d©a_ba£
->
›
->
	`£t_ªg_bô_£˘i⁄_id
◊dpcm_audio_d©a_ba£, 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_èûî_±r
);

805 
adpcm_audio_d©a_ba£
->
›
->
	`£t_ªg_bô_£˘i⁄_off£t
(adpcm_audio_data_base, 0);

806 
audio_£˘i⁄_∑øm
->
∑ge_id
 = 
adpcm_audio_d©a_ba£
->
›
->
	`gë_buf_∑ge_id
(adpcm_audio_data_base);

807 
audio_£˘i⁄_∑øm
->
chù_a_‹_b
 = 
adpcm_audio_d©a_ba£
->
›
->
	`gë_buf_ö_chù_a_‹_b
(adpcm_audio_data_base);

808 
audio_£˘i⁄_∑øm
->
ddr_íd_addr
 = 
adpcm_audio_d©a_ba£
->
›
->
	`gë_adpcm_ícode_d©a_addr_ö_ddr_íd_off£t
(adpcm_audio_data_base);

812 
	`¥ötk
("%s.%d:ÇÿsuΩp‹à%dÅy≥\n", 
__FUNCTION__
, 
__LINE__
, 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param));

818 
	}
}

820 
	$audio_ícode_£˘i⁄_∑øm_gë_upd©e_föish_id
(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
)

822 
tw_audio_drivî_t
 *
audio_drivî
 = 
	`to_gë_audio_ch™_drivî_wôh_audio_£˘i⁄
(
audio_£˘i⁄_∑øm
);

823  
audio_drivî
->
audio_logic_ch™_id
;

824 
	}
}

826 
audio_£˘i⁄_±r_öfo_›î©i⁄
 
	gaudio_ícode_£˘i⁄_∑øm_›
 = {

827 .
öô
 = 
audio_ícode_£˘i⁄_∑øm_öô
,

828 .
	gupd©e_hódî_±r
 = 
audio_ícode_£˘i⁄_∑øm_upd©e_hódî_±r
,

829 .
	gupd©e_èûî_±r
 = 
audio_ícode_£˘i⁄_∑øm_upd©e_èûî_±r
,

830 .
	gqueue_ˇ∑côy
 = 
audio_ícode_£˘i⁄_∑øm_queue_ˇ∑côy
,

831 .
	gupd©e_cuº_£˘i⁄_off£t
 = 
audio_ícode_£˘i⁄_∑øm_upd©e_cuº_£˘i⁄_off£t
,

832 .
	ggë_upd©e_föish_id
 = 
audio_ícode_£˘i⁄_∑øm_gë_upd©e_föish_id
,

835 
	$audio_ícode_ch™_drivî_£˘i⁄_öô
(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
)

837 if(
audio_£˘i⁄_∑øm
 !
NULL
){

838 
audio_£˘i⁄_∑øm
->
›
 = &
audio_ícode_£˘i⁄_∑øm_›
;

839 
audio_£˘i⁄_∑øm
->
›
->
	`öô
(audio_section_param);

841 
	}
}

843 
	$ª£t_tw5864_audio_ícode_ch™
(
tw_audio_drivî_t
 *
audio_drivî
)

845 if(
audio_drivî
 !
NULL
){

846 
	`audio_ícode_ch™_drivî_£˘i⁄_öô
(&
audio_drivî
->
audio_£˘i⁄_∑øm
);

847 
audio_drivî
->
time°amp
.
›
->
	`ª£t
(&audio_driver->timestamp);

848 
	`©omic_£t
(&
audio_drivî
->
audio_sync_disˇrd_numbî
, 20);

850 
	}
}

852 
	$öô_tw5864_audio_ícode_ch™
(
tw_audio_drivî_t
 *
audio_drivî
, 
chù_audio_t
 *
chù_audio
, 
bus_id
, 
chù_id
, 
group_ch™_id
)

854 
ed_tcb_t
 *
ed
;

855 
ªt
 = 
TW_ERR
;

856 if(
audio_drivî
 !
NULL
){

857 
	`öô_tw5864_ícode_time°amp
(&
audio_drivî
->
time°amp
);

858 
ªt
 = 
	`öô_audio_ch™_buf_poﬁ
(&
audio_drivî
->
audio_buf_poﬁ
);

859 
	`öô_tw_audio_∑ckë_queue
(&
audio_drivî
->
audio_∑ckë_queue
);

860 
audio_drivî
->
ty≥
 = 
TW_AUDIO_ENCODE
;

861 
ed
 = &
audio_drivî
->
audio_ed
;

862 
ed
->
›
 = &
tw_audio_ícode_hcd_öãrÁ˚_›
;

863 
	`öô_ídpoöt_tcb
(
ed
, 
bus_id
, 
chù_id
, 
TW_ED_AUDIO_ENCODE_IN
, 
group_ch™_id
, 0, 
audio_drivî
, 
NULL
, NULL, &
audio_ícode_drivî_fsm_°©e_å™s„r_m©rix_èbÀ
);

864 
audio_drivî
->
audio_logic_ch™_id
 = 
group_ch™_id
;

865 
audio_drivî
->
chù_audio
 = chip_audio;

866 
audio_drivî
->
tw_devi˚_ch™
 = 
NULL
;

867 
	`öô_d¥am_ªque°_£rvi˚_tcb
(&
audio_drivî
->
audio_bô°ªam_ªq
);

868 
	`ª£t_tw5864_audio_ícode_ch™
(
audio_drivî
);

869 
	`©omic_£t
(&
audio_drivî
->
›íed_Êag
, 0);

871  
ªt
;

872 
	}
}

874 
	$ªmove_tw5864_audio_ícode_ch™
(
tw_audio_drivî_t
 *
audio_drivî
)

876 if(
audio_drivî
 !
NULL
){

877 
ed_tcb_t
 *
ed
;

878 
ed
 = &
audio_drivî
->
audio_ed
;

879 
ed
->
›
->
	`˛o£
(ed);

880 
	`ªmove_audio_ch™_buf_poﬁ
(&
audio_drivî
->
audio_buf_poﬁ
);

882 
	}
}

884 
	$audio_decode_drivî_ö_uƒegi°î_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

886 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

887 
ed_tcb_t
 *
ed_tcb
;

888 
dvm_chù_t
 *
chù
;

889 
tw_audio_drivî_t
 *
audio_drivî
;

890 
chù_audio_t
 *
chù_audio
;

892 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

893 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

894 
chù_audio
 = 
audio_drivî
->chip_audio;

895 
chù_audio
->
›
->
	`upd©e_íabÀ_audio_ch™
(chù_audio, 
audio_drivî
->
audio_logic_ch™_id
, 
AUDIO_DISABLE
);

896 
ed_fsm
->
›
->
	`ª£t
(ed_fsm);

897 if(
	`©omic_ªad
(&
audio_drivî
->
›íed_Êag
)){

898 
	`©omic_£t
(&
audio_drivî
->
›íed_Êag
, 0);

899 
ed_tcb
->
ed
.
›
->
	`com∂ëe_d⁄e
(&ed_tcb->ed);

900 
chù
 = 
audio_drivî
->
chù_audio
->chip;

901 
chù
->
	`chù_˛o£
(chip);

903 
	`¥ötk
("%s.%d\n", 
__FUNCTION__
, 
__LINE__
);

905  
TW_OK
;

906 
	}
}

908 
	$audio_decode_drivî_ö_uƒegi°î_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

910  
TW_OK
;

911 
	}
}

913 
	$audio_decode_drivî_ö_uƒegi°î_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

915  
TW_OK
;

916 
	}
}

918 
	$audio_decode_drivî_ö_uƒegi°î_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

920  
TW_OK
;

921 
	}
}

923 
	$audio_decode_drivî_ö_uƒegi°î_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

925 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

926 
ed_tcb_t
 *
ed_tcb
;

927 
tw_audio_drivî_t
 *
audio_drivî
;

928 
dvm_chù_t
 *
chù
;

930 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

931 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

932 
chù
 = 
audio_drivî
->
chù_audio
->chip;

933 if(
	`©omic_ªad
(&
audio_drivî
->
›íed_Êag
) == 0){

934 
ed_tcb
->
ed
.
›
->
	`öô_com∂ëe
(&ed_tcb->ed);

935 
chù
->
	`chù_›í
(chip);

936 
	`ª£t_tw5864_audio_decode_ch™
(
audio_drivî
);

937 
audio_drivî
->
i_‰ame_£rül
 = 0;

938 
audio_drivî
->
disˇrd_numbî
 = 0;

939 
	`©omic_£t
(&
audio_drivî
->
›íed_Êag
, 1);

940 
ed_fsm
->
›
->
	`ª£t
(ed_fsm);

941 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_CLOSED
);

943 
	`drivî_gí_›í_evít
(
ed_tcb
, 1);

944 
	`¥ötk
("%s.%d\n", 
__FUNCTION__
, 
__LINE__
);

946  
TW_OK
;

947 
	}
}

949 
	$audio_decode_drivî_ö_uƒegi°î_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

951 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

952 
ed_tcb_t
 *
ed_tcb
;

953 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

954 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

956  
TW_OK
;

957 
	}
}

959 
	$audio_decode_drivî_ö_˛o£d_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

961 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

962 
ed_tcb_t
 *
ed_tcb
;

963 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

964 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_UNREGISTER
);

965 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

967  
TW_OK
;

968 
	}
}

970 
	$audio_decode_drivî_ö_˛o£d_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

972  
TW_OK
;

973 
	}
}

975 
	$audio_decode_drivî_ö_˛o£d_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

977  
TW_OK
;

978 
	}
}

980 
	$audio_decode_drivî_ö_˛o£d_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

982  
TW_OK
;

983 
	}
}

985 
	$audio_decode_drivî_ö_˛o£d_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

987 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

988 
tw_audio_drivî_t
 *
audio_drivî
;

990 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

991 
	`¥ötk
("%s.%d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

992 if(
ed_fsm
->
èbÀ
 !
NULL
){

993 if(
ed_fsm
->
èbÀ
->
sync_hook
 !
NULL
){

994 
ed_fsm
->
èbÀ
->
	`sync_hook
”d_fsm,Éd_fsm->
c⁄ãxt
);

996 
	`¥ötk
("%s.%d, %dÇÿªgi°îáudiÿfsm sync_hook\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

999 
	`¥ötk
("%s.%d, %dáudiÿfsmÅabÀ i†nuŒ\n", 
__FUNCTION__
, 
__LINE__
, 
audio_drivî
->
audio_logic_ch™_id
);

1001 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_SUSPEND
);

1004  
TW_OK
;

1005 
	}
}

1007 
	$audio_decode_drivî_ö_˛o£d_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1009 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1010 
ed_tcb_t
 *
ed_tcb
;

1011 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

1012 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

1014  
TW_OK
;

1015 
	}
}

1017 
	$audio_decode_drivî_ö_idÀ_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1019 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1020 
ed_tcb_t
 *
ed_tcb
;

1021 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

1022 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_CLOSED
);

1023 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

1025  
TW_OK
;

1026 
	}
}

1028 
	$audio_decode_drivî_ö_idÀ_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1030  
TW_OK
;

1031 
	}
}

1033 
	$audio_decode_drivî_ö_idÀ_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1035 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1036 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_SUSPEND
);

1038  
TW_OK
;

1039 
	}
}

1041 
	$audio_decode_drivî_ö_idÀ_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1043  
TW_OK
;

1044 
	}
}

1046 
	$audio_decode_drivî_ö_idÀ_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1048  
TW_OK
;

1049 
	}
}

1051 
	$audio_decode_drivî_ö_idÀ_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1053 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1054 
chù_audio_t
 *
chù_audio
;

1055 
dvm_chù_t
 *
chù
;

1056 
tw_audio_drivî_t
 *
audio_ch™_drivî
;

1057 
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
;

1058 
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
;

1059 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
;

1060 
d¥am_ªque°_t
 *
£nd_audio_bô°ªam_ªq
;

1062 
audio_ch™_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

1063 
chù_audio
 = 
audio_ch™_drivî
->chip_audio;

1064 
chù
 = 
chù_audio
->chip;

1065 
audio_∑ckë_queue
 = &
audio_ch™_drivî
->audio_packet_queue;

1066 
audio_£˘i⁄_∑øm
 = &
audio_ch™_drivî
->audio_section_param;

1067 
audio_£˘i⁄_∑øm
->
›
->
	`upd©e_hódî_±r
◊udio_£˘i⁄_∑øm, 
chù_audio
);

1068 
audio_£˘i⁄_∑øm
->
›
->
	`upd©e_èûî_±r
◊udio_£˘i⁄_∑øm, 
chù_audio
);

1069 if(
audio_£˘i⁄_∑øm
->
›
->
	`queue_ˇ∑côy
(audio_section_param)){

1070 
audio_£˘i⁄_∑øm
->
›
->
	`upd©e_cuº_£˘i⁄_off£t
◊udio_£˘i⁄_∑øm, 
chù_audio
);

1071 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_STANDBY
);

1072 
£nd_audio_bô°ªam_ªq
 = &
audio_ch™_drivî
->
audio_bô°ªam_ªq
;

1073 
	`öô_submô_£nd_audio_bô°ªam_£rvi˚
(
£nd_audio_bô°ªam_ªq
, 
audio_ch™_drivî
);

1074 
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

1075 
chù_d¥am_c⁄åﬁÀr
->
›
->
	`submô_wrôe_audio_ªq
(chù_d¥am_c⁄åﬁÀr, 
audio_ch™_drivî
);

1078  
TW_OK
;

1079 
	}
}

1081 
	$audio_decode_drivî_ö_°™dby_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1083 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1084 
ed_tcb_t
 *
ed_tcb
;

1085 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

1086 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 0);

1088  
TW_OK
;

1089 
	}
}

1091 
	$audio_decode_drivî_ö_°™dby_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1093  
TW_OK
;

1094 
	}
}

1096 
	$audio_decode_drivî_ö_°™dby_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1098 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1099 
ed_tcb_t
 *
ed_tcb
;

1100 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

1101 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 0);

1103  
TW_OK
;

1104 
	}
}

1106 
	$audio_decode_drivî_ö_°™dby_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1108 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1109 
ed_tcb_t
 *
ed_tcb
;

1110 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

1111 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 0);

1113  
TW_OK
;

1114 
	}
}

1116 
	$audio_decode_drivî_ö_°™dby_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1118  
TW_OK
;

1119 
	}
}

1121 
	$audio_decode_drivî_ö_°™dby_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1123 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1124 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_RUNNING
);

1126  
TW_OK
;

1127 
	}
}

1129 
	$audio_decode_drivî_ö_su•íd_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1131 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1132 
ed_tcb_t
 *
ed_tcb
;

1133 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

1134 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_CLOSED
);

1135 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

1137  
TW_OK
;

1138 
	}
}

1140 
	$audio_decode_drivî_ö_su•íd_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1142  
TW_OK
;

1143 
	}
}

1145 
	$audio_decode_drivî_ö_su•íd_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1147  
TW_OK
;

1148 
	}
}

1150 
	$audio_decode_drivî_ö_su•íd_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1152 
	`¥ötk
("%s,%d\n", 
__FUNCTION__
, 
__LINE__
);

1153 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1154 if(
ed_fsm
->
èbÀ
 !
NULL
){

1155 if(
ed_fsm
->
èbÀ
->
sync_hook
 !
NULL
){

1156 
ed_fsm
->
èbÀ
->
	`sync_hook
”d_fsm, 
c⁄ãxt
);

1159 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_IDLE
);

1161  
TW_OK
;

1162 
	}
}

1164 
	$audio_decode_drivî_ö_su•íd_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1166  
TW_OK
;

1167 
	}
}

1169 
	$audio_decode_drivî_ö_su•íd_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1171  
TW_OK
;

1172 
	}
}

1174 
	$audio_decode_drivî_ö_ru¬ög_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1176 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1177 
ed_tcb_t
 *
ed_tcb
;

1178 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

1179 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 0);

1181  
TW_OK
;

1182 
	}
}

1184 
	$audio_decode_drivî_ö_ru¬ög_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1186  
TW_OK
;

1187 
	}
}

1189 
	$audio_decode_drivî_ö_ru¬ög_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1191 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1192 
ed_tcb_t
 *
ed_tcb
;

1193 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

1194 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 0);

1196  
TW_OK
;

1197 
	}
}

1199 
	$audio_decode_drivî_ö_ru¬ög_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1201 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1202 
ed_tcb_t
 *
ed_tcb
;

1203 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

1204 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 0);

1206  
TW_OK
;

1207 
	}
}

1209 
	$audio_decode_drivî_ö_ru¬ög_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1211  
TW_OK
;

1212 
	}
}

1214 
	$audio_decode_drivî_ö_ru¬ög_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1216 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1217 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_TRANSFERING
);

1219  
TW_OK
;

1220 
	}
}

1222 
	$audio_decode_drivî_ö_å™s„rög_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1224 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1225 
ed_tcb_t
 *
ed_tcb
;

1226 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

1227 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 0);

1229  
TW_OK
;

1230 
	}
}

1232 
	$audio_decode_drivî_ö_å™s„rög_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1234  
TW_OK
;

1235 
	}
}

1237 
	$audio_decode_drivî_ö_å™s„rög_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1239 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1240 
ed_tcb_t
 *
ed_tcb
;

1241 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

1242 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 0);

1244  
TW_OK
;

1245 
	}
}

1247 
	$audio_decode_drivî_ö_å™s„rög_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1249 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1250 
ed_tcb_t
 *
ed_tcb
;

1251 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

1252 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 0);

1254  
TW_OK
;

1255 
	}
}

1257 
	$audio_decode_drivî_ö_å™s„rög_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1259  
TW_OK
;

1260 
	}
}

1262 
	$audio_decode_drivî_ö_å™s„rög_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1264 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1265 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_IDLE
);

1266 
ed_fsm
->
›
->
	`upd©e_íabÀ_°©e_å™s„r
(ed_fsm, 1);

1268  
TW_OK
;

1269 
	}
}

1271 
	$audio_decode_drivî_sync_hook
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

1273 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

1274 
ed_tcb_t
 *
ed_tcb
;

1275 
tw_audio_drivî_t
 *
audio_drivî
;

1276 
chù_audio_t
 *
chù_audio
;

1277 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
;

1278 
chù_audio_decode_t
 *
audio_decode
;

1280 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

1281 
audio_drivî
 = (
tw_audio_drivî_t
*)
c⁄ãxt
;

1282 
chù_audio
 = 
audio_drivî
->chip_audio;

1283 
audio_decode
 = &
chù_audio
->audio_decode;

1284 
c⁄fig_∑øm
 = &
audio_decode
->config_param;

1285 
	`ª£t_tw5864_audio_decode_ch™
(
audio_drivî
);

1286 
c⁄fig_∑øm
->
›
->
	`upd©e_ßm∂e_øã
(c⁄fig_∑øm, c⁄fig_∑øm->›->
	`gë_ßm∂e_øã
(config_param));

1287 
c⁄fig_∑øm
->
›
->
	`upd©e_bô_wide
(c⁄fig_∑øm, c⁄fig_∑øm->›->
	`gë_bô_wide
(config_param));

1288 
c⁄fig_∑øm
->
›
->
	`upd©e_ty≥
(c⁄fig_∑øm, c⁄fig_∑øm->›->
	`gë_ty≥
(config_param));

1289 
chù_audio
->
›
->
	`upd©e_íabÀ_audio_ch™
(chù_audio, 
audio_drivî
->
audio_logic_ch™_id
, 
AUDIO_ENABLE
);

1291  
TW_OK
;

1292 
	}
}

1294 
fsm_°©e_å™s„r_m©rix_èbÀ_t
 
	gaudio_decode_drivî_fsm_°©e_å™s„r_m©rix_èbÀ
 = {

1295 .
a˘i⁄
 = {

1297 
audio_decode_drivî_ö_uƒegi°î_°©e_ªcv_˛o£_evít
,

1298 
audio_decode_drivî_ö_uƒegi°î_°©e_ªcv_timeout_evít
,

1299 
audio_decode_drivî_ö_uƒegi°î_°©e_ªcv_su•íd_evít
,

1300 
audio_decode_drivî_ö_uƒegi°î_°©e_ªcv_ªsume_evít
,

1301 
audio_decode_drivî_ö_uƒegi°î_°©e_ªcv_›í_evít
,

1302 
audio_decode_drivî_ö_uƒegi°î_°©e_ªcv_dñivî_evít


1305 
audio_decode_drivî_ö_˛o£d_°©e_ªcv_˛o£_evít
,

1306 
audio_decode_drivî_ö_˛o£d_°©e_ªcv_timeout_evít
,

1307 
audio_decode_drivî_ö_˛o£d_°©e_ªcv_su•íd_evít
,

1308 
audio_decode_drivî_ö_˛o£d_°©e_ªcv_ªsume_evít
,

1309 
audio_decode_drivî_ö_˛o£d_°©e_ªcv_›í_evít
,

1310 
audio_decode_drivî_ö_˛o£d_°©e_ªcv_dñivî_evít


1313 
audio_decode_drivî_ö_idÀ_°©e_ªcv_˛o£_evít
,

1314 
audio_decode_drivî_ö_idÀ_°©e_ªcv_timeout_evít
,

1315 
audio_decode_drivî_ö_idÀ_°©e_ªcv_su•íd_evít
,

1316 
audio_decode_drivî_ö_idÀ_°©e_ªcv_ªsume_evít
,

1317 
audio_decode_drivî_ö_idÀ_°©e_ªcv_›í_evít
,

1318 
audio_decode_drivî_ö_idÀ_°©e_ªcv_dñivî_evít


1321 
audio_decode_drivî_ö_°™dby_°©e_ªcv_˛o£_evít
,

1322 
audio_decode_drivî_ö_°™dby_°©e_ªcv_timeout_evít
,

1323 
audio_decode_drivî_ö_°™dby_°©e_ªcv_su•íd_evít
,

1324 
audio_decode_drivî_ö_°™dby_°©e_ªcv_ªsume_evít
,

1325 
audio_decode_drivî_ö_°™dby_°©e_ªcv_›í_evít
,

1326 
audio_decode_drivî_ö_°™dby_°©e_ªcv_dñivî_evít


1329 
audio_decode_drivî_ö_su•íd_°©e_ªcv_˛o£_evít
,

1330 
audio_decode_drivî_ö_su•íd_°©e_ªcv_timeout_evít
,

1331 
audio_decode_drivî_ö_su•íd_°©e_ªcv_su•íd_evít
,

1332 
audio_decode_drivî_ö_su•íd_°©e_ªcv_ªsume_evít
,

1333 
audio_decode_drivî_ö_su•íd_°©e_ªcv_›í_evít
,

1334 
audio_decode_drivî_ö_su•íd_°©e_ªcv_dñivî_evít


1337 
audio_decode_drivî_ö_ru¬ög_°©e_ªcv_˛o£_evít
,

1338 
audio_decode_drivî_ö_ru¬ög_°©e_ªcv_timeout_evít
,

1339 
audio_decode_drivî_ö_ru¬ög_°©e_ªcv_su•íd_evít
,

1340 
audio_decode_drivî_ö_ru¬ög_°©e_ªcv_ªsume_evít
,

1341 
audio_decode_drivî_ö_ru¬ög_°©e_ªcv_›í_evít
,

1342 
audio_decode_drivî_ö_ru¬ög_°©e_ªcv_dñivî_evít


1345 
audio_decode_drivî_ö_å™s„rög_°©e_ªcv_˛o£_evít
,

1346 
audio_decode_drivî_ö_å™s„rög_°©e_ªcv_timeout_evít
,

1347 
audio_decode_drivî_ö_å™s„rög_°©e_ªcv_su•íd_evít
,

1348 
audio_decode_drivî_ö_å™s„rög_°©e_ªcv_ªsume_evít
,

1349 
audio_decode_drivî_ö_å™s„rög_°©e_ªcv_›í_evít
,

1350 
audio_decode_drivî_ö_å™s„rög_°©e_ªcv_dñivî_evít


1353 .
	gsync_hook
 = 
audio_decode_drivî_sync_hook
,

1356 
	$tw_audio_decode_hcd_öãrÁ˚_›í
(
ed_tcb_t
 *
ed_tcb
)

1358 
tw_audio_drivî_t
 *
audio_drivî
;

1359 
ªt
 = 
TW_ERR
;

1360 if(
ed_tcb
 !
NULL
){

1361 
audio_drivî
 = 
	`to_tw_audio_ch™_drivî_wôh_audio_ed
(
ed_tcb
);

1362 if(
	`©omic_ªad
(&
audio_drivî
->
›íed_Êag
)){

1363  
ªt
;

1365 
	`drivî_gí_›í_evít
(
ed_tcb
, 1);

1366 
ªt
 = 
TW_OK
;

1368  
ªt
;

1369 
	}
}

1371 
	$tw_audio_decode_hcd_öãrÁ˚_˛o£
(
ed_tcb_t
 *
ed_tcb
)

1373 
tw_audio_drivî_t
 *
audio_drivî
;

1374 
ªt
 = 
TW_ERR
;

1375 if(
ed_tcb
 !
NULL
){

1376 
audio_drivî
 = 
	`to_tw_audio_ch™_drivî_wôh_audio_ed
(
ed_tcb
);

1377 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 0);

1378 
ed_tcb
->
ed
.
›
->
	`waô_com∂ëe
(&ed_tcb->ed);

1379 
	`ªmove_tw_audio_∑ckë_queue
(&
audio_drivî
->
audio_∑ckë_queue
, &audio_drivî->
audio_buf_poﬁ
);

1380 
ªt
 = 
TW_OK
;

1382  
ªt
;

1383 
	}
}

1385 
	$tw_audio_decode_hcd_öãrÁ˚_su•íd
(
ed_tcb_t
 *
ed_tcb
)

1387 if(
ed_tcb
 !
NULL
){

1390 
	}
}

1392 
	$tw_audio_decode_hcd_öãrÁ˚_ªsume
(
ed_tcb_t
 *
ed_tcb
)

1394 if(
ed_tcb
 !
NULL
){

1397 
	}
}

1399 
	$tw_audio_decode_hcd_öãrÁ˚_io˘l
(
ed_tcb_t
 *
ed_tcb
, 
cmd
, 
¨g
)

1401 
tw_audio_drivî_t
 *
audio_drivî
;

1402 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
;

1403 
tw_chù_audio_∑øm
 
audio_∑øm
;

1404 
chù_audio_decode_t
 *
audio_decode
;

1405 
ªt
 = 0;

1407 
	`TW_DBG
(
TW_DBG_INFO
, "%c, %d\n", 
	`_IOC_TYPE
(
cmd
), 
	`_IOC_NR
(cmd));

1408 if(
ed_tcb
 && 
¨g
) {

1409 
audio_drivî
 = 
	`to_tw_audio_ch™_drivî_wôh_audio_ed
(
ed_tcb
);

1410 
cmd
) {

1411 
TW_CHIP_AUDIO_DECODE_PARAM_SET
:

1412 
	`c›y_‰om_u£r
(&
audio_∑øm
, (*)
¨g
, (
tw_chù_audio_∑øm
));

1413 
audio_drivî
 = 
	`to_tw_audio_ch™_drivî_wôh_audio_ed
(
ed_tcb
);

1414 
audio_decode
 = &
audio_drivî
->
chù_audio
->audio_decode;

1415 
c⁄fig_∑øm
 = &
audio_decode
->config_param;

1416 if(
audio_∑øm
.
ch™ge_mask_Êag
 & 
TW_CHIP_AUDIO_DECODE_PARAM_ENABLE_CHANGE_BIT_WIDE_MASK
) {

1417 
ªt
 |
c⁄fig_∑øm
->
›
->
	`upd©e_bô_wide
(c⁄fig_∑øm, 
audio_∑øm
.
i_bô_wide
);

1419 if(
audio_∑øm
.
ch™ge_mask_Êag
 & 
TW_CHIP_AUDIO_DECODE_PARAM_ENABLE_CHANGE_SAMPLE_RATE_MASK
) {

1420 
ªt
 |
c⁄fig_∑øm
->
›
->
	`upd©e_ßm∂e_øã
(c⁄fig_∑øm, 
audio_∑øm
.
i_ßm∂e_øã
);

1422 if(
audio_∑øm
.
ch™ge_mask_Êag
 & 
TW_CHIP_AUDIO_DECODE_PARAM_ENABLE_CHANGE_ENCODE_TYPE_MASK
) {

1423 
ªt
 |
c⁄fig_∑øm
->
›
->
	`upd©e_ty≥
(c⁄fig_∑øm, 
audio_∑øm
.
e_audio_ty≥
);

1425 if(
ªt
) {

1426 
	`TW_DBG
(
TW_DBG_ERR
, "audioÉncoderÖarameter isÉrror\n");

1427 
ªt
 = -
EINVAL
;

1430 
TW_CHIP_AUDIO_DECODE_PARAM_GET
:

1431 
audio_drivî
 = 
	`to_tw_audio_ch™_drivî_wôh_audio_ed
(
ed_tcb
);

1432 
audio_decode
 = &
audio_drivî
->
chù_audio
->audio_decode;

1433 
c⁄fig_∑øm
 = &
audio_decode
->config_param;

1434 if(
audio_∑øm
.
ch™ge_mask_Êag
 & 
TW_CHIP_AUDIO_DECODE_PARAM_ENABLE_CHANGE_BIT_WIDE_MASK
) {

1435 
audio_∑øm
.
i_bô_wide
 = 
c⁄fig_∑øm
->
›
->
	`gë_bô_wide
(config_param);

1437 if(
audio_∑øm
.
ch™ge_mask_Êag
 & 
TW_CHIP_AUDIO_DECODE_PARAM_ENABLE_CHANGE_SAMPLE_RATE_MASK
) {

1438 
audio_∑øm
.
i_ßm∂e_øã
 = 
c⁄fig_∑øm
->
›
->
	`gë_ßm∂e_øã
(config_param);

1440 if(
audio_∑øm
.
ch™ge_mask_Êag
 & 
TW_CHIP_AUDIO_DECODE_PARAM_ENABLE_CHANGE_ENCODE_TYPE_MASK
) {

1441 
audio_∑øm
.
e_audio_ty≥
 = 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param);

1443 
	`c›y_to_u£r
((*)
¨g
, &
audio_∑øm
, (
tw_chù_audio_∑øm
));

1444 
ªt
 = 
TW_OK
;

1446 
TW_LOGIC_CHAN_ENABLE_SET
:

1447 
audio_drivî
 = 
	`to_tw_audio_ch™_drivî_wôh_audio_ed
(
ed_tcb
);

1448 
	`TW_DBG
(
TW_DBG_INFO
, "ªsumêaudiÿch™√»%d\n", 
audio_drivî
->
audio_logic_ch™_id
);

1449 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 1);

1450 
ªt
 = 
TW_OK
;

1452 
TW_LOGIC_CHAN_DISABLE_SET
:

1453 
audio_drivî
 = 
	`to_tw_audio_ch™_drivî_wôh_audio_ed
(
ed_tcb
);

1454 
	`TW_DBG
(
TW_DBG_INFO
, "su•ídáudiÿch™√»%d\n", 
audio_drivî
->
audio_logic_ch™_id
);

1455 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 1);

1456 
ªt
 = 
TW_OK
;

1459 
ªt
 = -
EBADRQC
;

1464  
ªt
;

1465 
	}
}

1467 
	$tw_audio_decode_hcd_öãrÁ˚_gë_°©e
(
ed_tcb_t
 *
ed_tcb
)

1469 
ªt
 = 
TW_ED_UNREGISTER
;

1470 if(
ed_tcb
 !
NULL
){

1471 
ªt
 = 
	`©omic_ªad
(&
ed_tcb
->
°©e
);

1473  
ªt
;

1474 
	}
}

1476 
tw_hcd_öãrÁ˚_›î©i⁄
 
	gtw_audio_decode_hcd_öãrÁ˚_›
 = {

1477 .
›í
 = 
tw_audio_decode_hcd_öãrÁ˚_›í
,

1478 .
	g˛o£
 = 
tw_audio_decode_hcd_öãrÁ˚_˛o£
,

1479 .
	gsu•íd
 = 
tw_audio_decode_hcd_öãrÁ˚_su•íd
,

1480 .
	gªsume
 = 
tw_audio_decode_hcd_öãrÁ˚_ªsume
,

1481 .
	gio˘l
 = 
tw_audio_decode_hcd_öãrÁ˚_io˘l
,

1482 .
	ggë_°©e
 = 
tw_audio_decode_hcd_öãrÁ˚_gë_°©e
,

1485 
	$audio_decode_£˘i⁄_∑øm_öô
(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
)

1487 if(
audio_£˘i⁄_∑øm
 !
NULL
) {

1488 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_hódî_±r
 = 
INVALID_TW_AUDIO_SECTION_ID
;

1489 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_hódî_±r_ext_Êag
 = 0;

1490 
audio_£˘i⁄_∑øm
->
œ°_audio_£˘i⁄_queue_hódî_±r_ext_Êag
 = 0;

1491 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_èûî_±r
 = 
INVALID_TW_AUDIO_SECTION_ID
;

1492 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_èûî_±r_ext_Êag
 = 0;

1493 
audio_£˘i⁄_∑øm
->
£˘i⁄_queue_size
 = 0;

1494 
audio_£˘i⁄_∑øm
->
disˇrd_numbî
 = 0;

1496 
	}
}

1498 
	$audio_decode_£˘i⁄_∑øm_upd©e_hódî_±r
(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
, 
chù_audio_t
 *
chù_audio
)

1500 if((
audio_£˘i⁄_∑øm
!=
NULL
Ë&& (
chù_audio
!=NULL)){

1501 
chù_audio_decode_t
 *
audio_decode
;

1502 
tw_audio_drivî_t
 *
audio_drivî
;

1504 
audio_drivî
 = 
	`to_gë_audio_ch™_drivî_wôh_audio_£˘i⁄
(
audio_£˘i⁄_∑øm
);

1505 
audio_decode
 = &
chù_audio
->audio_decode;

1506 if(
audio_decode
->
›
 !
NULL
){

1507 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_hódî_±r
 = 
audio_decode
->
›
->
	`gë_audio_decode_ch™_wr_±r
◊udio_decode, 
audio_drivî
->
audio_logic_ch™_id
, &audio_£˘i⁄_∑øm->
audio_£˘i⁄_queue_hódî_±r_ext_Êag
, &audio_£˘i⁄_∑øm->
£˘i⁄_queue_size
);

1509 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_hódî_±r
 = 
INVALID_TW_AUDIO_SECTION_ID
;

1510 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_hódî_±r_ext_Êag
 = 0;

1511 
audio_£˘i⁄_∑øm
->
£˘i⁄_queue_size
 = 0;

1514 
	}
}

1516 
	$audio_decode_£˘i⁄_∑øm_upd©e_èûî_±r
(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
, 
chù_audio_t
 *
chù_audio
)

1518 if((
audio_£˘i⁄_∑øm
!=
NULL
Ë&& (
chù_audio
!=NULL)){

1519 
chù_audio_decode_t
 *
audio_decode
;

1520 
tw_audio_drivî_t
 *
audio_drivî
;

1522 
audio_drivî
 = 
	`to_gë_audio_ch™_drivî_wôh_audio_£˘i⁄
(
audio_£˘i⁄_∑øm
);

1523 
audio_decode
 = &
chù_audio
->audio_decode;

1524 if(
audio_decode
->
›
 !
NULL
){

1525 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_èûî_±r
 = 
audio_decode
->
›
->
	`gë_audio_decode_ch™_rd_±r
◊udio_decode, 
audio_drivî
->
audio_logic_ch™_id
, &audio_£˘i⁄_∑øm->
audio_£˘i⁄_queue_èûî_±r_ext_Êag
, &audio_£˘i⁄_∑øm->
£˘i⁄_queue_size
);

1527 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_èûî_±r
 = 
INVALID_TW_AUDIO_SECTION_ID
;

1528 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_èûî_±r_ext_Êag
 = 0;

1529 
audio_£˘i⁄_∑øm
->
£˘i⁄_queue_size
 = 0;

1532 
	}
}

1534 
	$audio_decode_£˘i⁄_∑øm_queue_ˇ∑côy
(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
)

1536 
ªt
 = 0;

1537 if(
audio_£˘i⁄_∑øm
->
£˘i⁄_queue_size
 > 0){

1538 
tw_audio_drivî_t
 *
audio_drivî
;

1539 
audio_drivî
 = 
	`to_gë_audio_ch™_drivî_wôh_audio_£˘i⁄
(
audio_£˘i⁄_∑øm
);

1540 if(
	`©omic_ªad
(&
audio_drivî
->
audio_sync_disˇrd_numbî
) > 0){

1541 
	`©omic_dec
(&
audio_drivî
->
audio_sync_disˇrd_numbî
);

1543 
ªt
 = 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_èûî_±r
 +áudio_£˘i⁄_∑øm->
£˘i⁄_queue_size
 -áudio_£˘i⁄_∑øm->
audio_£˘i⁄_queue_hódî_±r
 - 1;

1544 
ªt
 %
audio_£˘i⁄_∑øm
->
£˘i⁄_queue_size
;

1545 if(
ªt
 == 0){

1546 if(
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_èûî_±r_ext_Êag
 =audio_£˘i⁄_∑øm->
audio_£˘i⁄_queue_hódî_±r_ext_Êag
){

1547 
ªt
 = 1;

1552  
ªt
;

1553 
	}
}

1555 
	$audio_decode_£˘i⁄_∑øm_upd©e_cuº_£˘i⁄_off£t
(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
, 
chù_audio_t
 *
chù_audio
)

1557 if((
audio_£˘i⁄_∑øm
!=
NULL
Ë&& (
chù_audio
!=NULL)){

1558 
tw_audio_drivî_t
 *
audio_drivî
;

1559 
chù_audio_decode_t
 *
audio_decode
;

1560 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
;

1561 
audio_decode_d©a_addr_t
 *
adpcm_audio_d©a_ba£
;

1562 
ch™_id
;

1564 if(
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_hódî_±r
 !
INVALID_TW_AUDIO_SECTION_ID
){

1565 
audio_drivî
 = 
	`to_gë_audio_ch™_drivî_wôh_audio_£˘i⁄
(
audio_£˘i⁄_∑øm
);

1566 
ch™_id
 = 
audio_drivî
->
audio_logic_ch™_id
-
TW_AUDIO_OUT_SPEAKER_ID
;

1567 
audio_decode
 = &
chù_audio
->audio_decode;

1568 
c⁄fig_∑øm
 = &
audio_decode
->config_param;

1569 if(
c⁄fig_∑øm
->
›
 !
NULL
){

1570 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param)){

1571 
TW_AUDIO_PCM
:

1572 
TW_AUDIO_ADPCM_32K
:

1573 
adpcm_audio_d©a_ba£
 = &
audio_decode
->
audio_d©a_ba£
;

1574 if(
adpcm_audio_d©a_ba£
->
›
 !
NULL
){

1575 
adpcm_audio_d©a_ba£
->
›
->
	`£t_ªg_bô_ch™_id
◊dpcm_audio_d©a_ba£, 
ch™_id
);

1576 
adpcm_audio_d©a_ba£
->
›
->
	`£t_ªg_bô_decode_ty≥
(adpcm_audio_data_base);

1577 
adpcm_audio_d©a_ba£
->
›
->
	`£t_ªg_bô_£˘i⁄_id
◊dpcm_audio_d©a_ba£, 
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_hódî_±r
);

1578 
adpcm_audio_d©a_ba£
->
›
->
	`£t_ªg_bô_£˘i⁄_off£t
(adpcm_audio_data_base, 0);

1579 
audio_£˘i⁄_∑øm
->
∑ge_id
 = 
adpcm_audio_d©a_ba£
->
›
->
	`gë_buf_∑ge_id
(adpcm_audio_data_base);

1580 
audio_£˘i⁄_∑øm
->
chù_a_‹_b
 = 
adpcm_audio_d©a_ba£
->
›
->
	`gë_buf_ö_chù_a_‹_b
(adpcm_audio_data_base);

1581 
audio_£˘i⁄_∑øm
->
ddr_íd_addr
 = 
adpcm_audio_d©a_ba£
->
›
->
	`gë_adpcm_decode_d©a_addr_ö_ddr_íd_off£t
(adpcm_audio_data_base);

1585 
	`¥ötk
("%s.%d:ÇÿsuΩp‹à%dÅy≥\n", 
__FUNCTION__
, 
__LINE__
, 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param));

1591 
	}
}

1593 
	$audio_decode_£˘i⁄_∑øm_gë_upd©e_föish_id
(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
)

1595  ((
audio_£˘i⁄_∑øm
->
audio_£˘i⁄_queue_hódî_±r_ext_Êag
<<(
	`gë_powî_ba£
((
u32
)
AUDIO_OUT_CHAN_SECTION_NUMBER
)))|audio_£˘i⁄_∑øm->
audio_£˘i⁄_queue_hódî_±r
);

1596 
	}
}

1598 
audio_£˘i⁄_±r_öfo_›î©i⁄
 
	gaudio_decode_£˘i⁄_∑øm_›
 = {

1599 .
öô
 = 
audio_decode_£˘i⁄_∑øm_öô
,

1600 .
	gupd©e_hódî_±r
 = 
audio_decode_£˘i⁄_∑øm_upd©e_hódî_±r
,

1601 .
	gupd©e_èûî_±r
 = 
audio_decode_£˘i⁄_∑øm_upd©e_èûî_±r
,

1602 .
	gqueue_ˇ∑côy
 = 
audio_decode_£˘i⁄_∑øm_queue_ˇ∑côy
,

1603 .
	gupd©e_cuº_£˘i⁄_off£t
 = 
audio_decode_£˘i⁄_∑øm_upd©e_cuº_£˘i⁄_off£t
,

1604 .
	ggë_upd©e_föish_id
 = 
audio_decode_£˘i⁄_∑øm_gë_upd©e_föish_id
,

1607 
	$audio_decode_ch™_drivî_£˘i⁄_öô
(
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
)

1609 if(
audio_£˘i⁄_∑øm
 !
NULL
){

1610 
audio_£˘i⁄_∑øm
->
›
 = &
audio_decode_£˘i⁄_∑øm_›
;

1611 
audio_£˘i⁄_∑øm
->
›
->
	`öô
(audio_section_param);

1613 
	}
}

1615 
	$ª£t_tw5864_audio_decode_ch™
(
tw_audio_drivî_t
 *
audio_drivî
)

1617 if(
audio_drivî
 !
NULL
){

1618 
audio_drivî
->
time°amp
.
›
->
	`ª£t
(&audio_driver->timestamp);

1619 
	`audio_decode_ch™_drivî_£˘i⁄_öô
(&
audio_drivî
->
audio_£˘i⁄_∑øm
);

1620 
	`©omic_£t
(&
audio_drivî
->
audio_sync_disˇrd_numbî
, 0);

1622 
	}
}

1624 
	$öô_tw5864_audio_decode_ch™
(
tw_audio_drivî_t
 *
audio_drivî
, 
chù_audio_t
 *
chù_audio
, 
bus_id
, 
chù_id
, 
group_ch™_id
)

1626 
ed_tcb_t
 *
ed
;

1627 
ªt
 = 
TW_ERR
;

1628 if(
audio_drivî
 !
NULL
){

1629 
	`öô_tw5864_ícode_time°amp
(&
audio_drivî
->
time°amp
);

1630 
	`©omic_£t
(&
audio_drivî
->
›íed_Êag
, 0);

1631 
ªt
 = 
	`öô_audio_ch™_buf_poﬁ
(&
audio_drivî
->
audio_buf_poﬁ
);

1632 if(
ªt
 =
TW_OK
){

1633 
ed
 = &
audio_drivî
->
audio_ed
;

1634 
	`öô_tw_audio_∑ckë_queue
(&
audio_drivî
->
audio_∑ckë_queue
);

1635 
	`audio_decode_ch™_drivî_£˘i⁄_öô
(&
audio_drivî
->
audio_£˘i⁄_∑øm
);

1636 
ed
->
›
 = &
tw_audio_decode_hcd_öãrÁ˚_›
;

1637 
audio_drivî
->
ty≥
 = 
TW_AUDIO_DECODE
;

1638 
	`öô_ídpoöt_tcb
(&
audio_drivî
->
audio_ed
, 
bus_id
, 
chù_id
, 
TW_ED_AUDIO_DECODE_OUT
, 
group_ch™_id
, 0,áudio_drivî, 
NULL
, NULL, &
audio_decode_drivî_fsm_°©e_å™s„r_m©rix_èbÀ
);

1639 
audio_drivî
->
audio_logic_ch™_id
 = 
group_ch™_id
;

1640 
audio_drivî
->
chù_audio
 = chip_audio;

1641 
audio_drivî
->
tw_devi˚_ch™
 = 
NULL
;

1643 
	`öô_d¥am_ªque°_£rvi˚_tcb
(&
audio_drivî
->
audio_bô°ªam_ªq
);

1644 
	`ª£t_tw5864_audio_decode_ch™
(
audio_drivî
);

1645 
audio_drivî
->
i_‰ame_£rül
 = 0;

1646 
audio_drivî
->
disˇrd_numbî
 = 0;

1647 
	`©omic_£t
(&
audio_drivî
->
›íed_Êag
, 0);

1649  
ªt
;

1650 
	}
}

1652 
	$ªmove_tw5864_audio_decode_ch™
(
tw_audio_drivî_t
 *
audio_drivî
)

1654 if(
audio_drivî
 !
NULL
){

1655 
ed_tcb_t
 *
ed
;

1657 
ed
 = &
audio_drivî
->
audio_ed
;

1658 if(
ed
 &&Éd->
›
) {

1659 
ed
->
›
->
	`˛o£
(ed);

1662 
	`ªmove_tw_audio_∑ckë_queue
(&
audio_drivî
->
audio_∑ckë_queue
, &audio_drivî->
audio_buf_poﬁ
);

1663 
	`ªmove_audio_ch™_buf_poﬁ
(&
audio_drivî
->
audio_buf_poﬁ
);

1665 
	}
}

	@../../tw5864/tw5864/tw_audio_iop.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
tw_audio_c⁄fig_des¸ùt‹_t
 
	gdeÁu…_audio_ícode_c⁄fig_des¸ùt‹
 = {

4 .
ty≥
 = 
TW_AUDIO_ADPCM_32K
,

6 .
	gßm∂e_øã
 = 
TW_AUDIO_8000
,

7 .
	gbô_wide
 = 
TW_AUDIO_16BIT
,

10 
tw_audio_c⁄fig_des¸ùt‹_t
 
	gdeÁu…_audio_decode_c⁄fig_des¸ùt‹
 = {

11 .
ty≥
 = 
TW_AUDIO_ADPCM_32K
,

13 .
	gßm∂e_øã
 = 
TW_AUDIO_8000
,

14 .
	gbô_wide
 = 
TW_AUDIO_16BIT
,

17 
	$gë_powî_ba£
(
u32
 
vÆue
)

19 
posôi⁄
, 
numbî
;

20 
posôi⁄
 = 
numbî
 = 0;

21 
vÆue
){

22 if(
vÆue
&1){

23 
numbî
++;

25 
posôi⁄
++;

26 
vÆue
 >>= 1;

28 if(
numbî
==1){

29 
posôi⁄
--;

31  
posôi⁄
;

32 
	}
}

37 
	$audio_£˘i⁄_des¸ùt‹_öô_audio_des¸ùt‹
(
tw_audio_des¸ùt‹_t
 *
audio_des¸ùt‹
, *
des¸ùt‹_addr
)

39 if(
des¸ùt‹_addr
 !
NULL
){

40 
audio_des¸ùt‹
->
des¸ùt‹
 = (
audio_£˘i⁄_des¸ùt‹_t
*)
des¸ùt‹_addr
;

42 
audio_des¸ùt‹
->
des¸ùt‹
 = 
NULL
;

44 
	}
}

46 
u32
 
	$audio_£˘i⁄_des¸ùt‹_gë_audio_des¸ùt‹_time°amp
(
tw_audio_des¸ùt‹_t
 *
audio_des¸ùt‹
)

48 if(
audio_des¸ùt‹
->
des¸ùt‹
 !
NULL
){

49  
audio_des¸ùt‹
->
des¸ùt‹
->
time°amp
;

53 
	}
}

55 
	$audio_£˘i⁄_des¸ùt‹_£t_audio_des¸ùt‹_time°amp
(
tw_audio_des¸ùt‹_t
 *
audio_des¸ùt‹
, 
u32
 
time°amp
)

57 if(
audio_des¸ùt‹
->
des¸ùt‹
 !
NULL
){

58 
audio_des¸ùt‹
->
des¸ùt‹
->
time°amp
 =Åimestamp;

60 
	}
}

62 
	$audio_£˘i⁄_des¸ùt‹_gë_audio_des¸ùt‹_ßm∂e_øã
(
tw_audio_des¸ùt‹_t
 *
audio_des¸ùt‹
)

64 if(
audio_des¸ùt‹
->
des¸ùt‹
 !
NULL
){

65  
audio_des¸ùt‹
->
des¸ùt‹
->
ßm∂e_øã
;

67  
TW_AUDIO_8000
;

69 
	}
}

71 
	$audio_£˘i⁄_des¸ùt‹_£t_audio_des¸ùt‹_ßm∂e_øã
(
tw_audio_des¸ùt‹_t
 *
audio_des¸ùt‹
, 
ßm∂e_øã
)

73 if(
audio_des¸ùt‹
->
des¸ùt‹
 !
NULL
){

74 
audio_des¸ùt‹
->
des¸ùt‹
->
ßm∂e_øã
 = sample_rate;

76 
	}
}

78 
	$audio_£˘i⁄_des¸ùt‹_gë_audio_des¸ùt‹_ty≥
(
tw_audio_des¸ùt‹_t
 *
audio_des¸ùt‹
)

80 if(
audio_des¸ùt‹
->
des¸ùt‹
 !
NULL
){

81  
audio_des¸ùt‹
->
des¸ùt‹
->
ty≥
;

83  
TW_AUDIO_ADPCM_32K
;

85 
	}
}

87 
	$audio_£˘i⁄_des¸ùt‹_£t_audio_des¸ùt‹_ty≥
(
tw_audio_des¸ùt‹_t
 *
audio_des¸ùt‹
, 
ty≥
)

89 if(
audio_des¸ùt‹
->
des¸ùt‹
 !
NULL
){

90 
audio_des¸ùt‹
->
des¸ùt‹
->
ty≥
=Åype;

92 
	}
}

94 
	$audio_£˘i⁄_des¸ùt‹_gë_audio_des¸ùt‹_bô_wide
(
tw_audio_des¸ùt‹_t
 *
audio_des¸ùt‹
)

96 if(
audio_des¸ùt‹
->
des¸ùt‹
 !
NULL
){

97  
audio_des¸ùt‹
->
des¸ùt‹
->
bô_wide
;

99  
TW_AUDIO_16BIT
;

101 
	}
}

103 
	$audio_£˘i⁄_des¸ùt‹_£t_audio_des¸ùt‹_bô_wide
(
tw_audio_des¸ùt‹_t
 *
audio_des¸ùt‹
, 
bô_wide
)

105 if(
audio_des¸ùt‹
->
des¸ùt‹
 !
NULL
){

106 
audio_des¸ùt‹
->
des¸ùt‹
->
bô_wide
 = bit_wide;

108 
	}
}

110 
u32
 
	$audio_£˘i⁄_des¸ùt‹_gë_audio_des¸ùt‹_vÆid_Àn
(
tw_audio_des¸ùt‹_t
 *
audio_des¸ùt‹
)

112 if(
audio_des¸ùt‹
->
des¸ùt‹
 !
NULL
){

113  
audio_des¸ùt‹
->
des¸ùt‹
->
vÆid_Àn
;

117 
	}
}

119 
	$audio_£˘i⁄_des¸ùt‹_£t_audio_des¸ùt‹_vÆid_Àn
(
tw_audio_des¸ùt‹_t
 *
audio_des¸ùt‹
, 
u32
 
vÆid_Àn
)

121 if(
audio_des¸ùt‹
->
des¸ùt‹
 !
NULL
){

122 
audio_des¸ùt‹
->
des¸ùt‹
->
vÆid_Àn
 = valid_len;

124 
	}
}

126 
tw_audio_£˘i⁄_des¸ùt‹_›î©i⁄
 
	gaudio_£˘i⁄_des¸ùt‹_›
 = {

127 .
öô_audio_des¸ùt‹
 = 
audio_£˘i⁄_des¸ùt‹_öô_audio_des¸ùt‹
,

128 .
	ggë_audio_des¸ùt‹_time°amp
 = 
audio_£˘i⁄_des¸ùt‹_gë_audio_des¸ùt‹_time°amp
,

129 .
	g£t_audio_des¸ùt‹_time°amp
 = 
audio_£˘i⁄_des¸ùt‹_£t_audio_des¸ùt‹_time°amp
,

130 .
	ggë_audio_des¸ùt‹_ßm∂e_øã
 = 
audio_£˘i⁄_des¸ùt‹_gë_audio_des¸ùt‹_ßm∂e_øã
,

131 .
	g£t_audio_des¸ùt‹_ßm∂e_øã
 = 
audio_£˘i⁄_des¸ùt‹_£t_audio_des¸ùt‹_ßm∂e_øã
,

132 .
	ggë_audio_des¸ùt‹_ty≥
 = 
audio_£˘i⁄_des¸ùt‹_gë_audio_des¸ùt‹_ty≥
,

133 .
	g£t_audio_des¸ùt‹_ty≥
 = 
audio_£˘i⁄_des¸ùt‹_£t_audio_des¸ùt‹_ty≥
,

134 .
	ggë_audio_des¸ùt‹_bô_wide
 = 
audio_£˘i⁄_des¸ùt‹_gë_audio_des¸ùt‹_bô_wide
,

135 .
	g£t_audio_des¸ùt‹_bô_wide
 = 
audio_£˘i⁄_des¸ùt‹_£t_audio_des¸ùt‹_bô_wide
,

136 .
	ggë_audio_des¸ùt‹_vÆid_Àn
 = 
audio_£˘i⁄_des¸ùt‹_gë_audio_des¸ùt‹_vÆid_Àn
,

137 .
	g£t_audio_des¸ùt‹_vÆid_Àn
 = 
audio_£˘i⁄_des¸ùt‹_£t_audio_des¸ùt‹_vÆid_Àn
,

140 
	$öô_tw_audio_des¸ùt‹
(
tw_audio_des¸ùt‹_t
 *
audio_des¸ùt‹
, *
audio_des¸ùt‹_addr
)

142 if(
audio_des¸ùt‹
 !
NULL
){

143 
audio_des¸ùt‹
->
›
 = &
audio_£˘i⁄_des¸ùt‹_›
;

144 
audio_des¸ùt‹
->
›
->
	`öô_audio_des¸ùt‹
◊udio_des¸ùt‹, 
audio_des¸ùt‹_addr
);

146 
	}
}

152 
	$audio_ícode_c⁄fig_∑øm_upd©e_öô
(
tw_audio_∑øm_t
 *
ícode_audio_∑øm
, 
tw_audio_c⁄fig_des¸ùt‹_t
 *
∑øm
)

154 if(
∑øm
 =
NULL
){

155 
∑øm
 = &
deÁu…_audio_ícode_c⁄fig_des¸ùt‹
;

157 if(
ícode_audio_∑øm
->
›
 !
NULL
){

158 
ícode_audio_∑øm
->
›
->
	`upd©e_bô_wide
”ncode_audio_∑øm, 
∑øm
->
bô_wide
);

159 
ícode_audio_∑øm
->
›
->
	`upd©e_ßm∂e_øã
”ncode_audio_∑øm,
∑øm
->
ßm∂e_øã
);

160 
ícode_audio_∑øm
->
›
->
	`upd©e_ty≥
”ncode_audio_∑øm, 
∑øm
->
ty≥
);

162 
ícode_audio_∑øm
->
¥›îty
.
ty≥
 = 
∑øm
->type;

163 
ícode_audio_∑øm
->
¥›îty
.
ßm∂e_øã
 = 
∑øm
->sample_rate;

164 
ícode_audio_∑øm
->
¥›îty
.
bô_wide
 = 
∑øm
->bit_wide;

166 
	}
}

168 
	$audio_ícode_c⁄fig_∑øm_upd©e_upd©e_ßm∂e_øã
(
tw_audio_∑øm_t
 *
ícode_audio_∑øm
, 
ßm∂e_øã
)

170 
chù_audio_ícode_t
 *
audio_ícode
;

171 
audio_ícode_c⁄åﬁ_t
 *
audio_c⁄åﬁ
;

172 if((
ßm∂e_øã
!=
TW_AUDIO_8000
Ë&& (ßm∂e_øã!=
TW_AUDIO_16000
)){

173 
	`TW_DBG
(
TW_DBG_ERR
, "only support 8K, 16K\n");

174  
TW_ERR
;

176 
ícode_audio_∑øm
->
¥›îty
.
ßm∂e_øã
 = sample_rate;

177 
audio_ícode
 = 
	`to_gë_chù_audio_ícode_wôh_¥›îty
(
ícode_audio_∑øm
);

178 
audio_c⁄åﬁ
 = &
audio_ícode
->audio_control;

179 if(
audio_c⁄åﬁ
->
›
 !
NULL
){

180 
audio_c⁄åﬁ
->
›
->
	`upd©e_audio_ßm∂e_øã
◊udio_c⁄åﬁ, 
ßm∂e_øã
);

182  
TW_OK
;

183 
	}
}

185 
	$audio_ícode_c⁄fig_∑øm_upd©e_gë_ßm∂e_øã
(
tw_audio_∑øm_t
 *
ícode_audio_∑øm
)

187  
ícode_audio_∑øm
->
¥›îty
.
ßm∂e_øã
;

188 
	}
}

190 
	$audio_ícode_c⁄fig_∑øm_upd©e_upd©e_bô_wide
(
tw_audio_∑øm_t
 *
ícode_audio_∑øm
, 
bô_wide
)

192 
chù_audio_ícode_t
 *
audio_ícode
;

193 
audio_ícode_c⁄åﬁ_t
 *
audio_c⁄åﬁ
;

194 if((
bô_wide
!=
TW_AUDIO_16BIT
Ë&& (bô_wide!=
TW_AUDIO_8BIT
)){

195 
	`TW_DBG
(
TW_DBG_ERR
, "only support 8bit or 16bit\n");

196  
TW_ERR
;

198 
ícode_audio_∑øm
->
¥›îty
.
bô_wide
 = bit_wide;

199 
audio_ícode
 = 
	`to_gë_chù_audio_ícode_wôh_¥›îty
(
ícode_audio_∑øm
);

200 
audio_c⁄åﬁ
 = &
audio_ícode
->audio_control;

201 if(
audio_c⁄åﬁ
->
›
 !
NULL
){

202 
audio_c⁄åﬁ
->
›
->
	`upd©e_bô_wide
◊udio_c⁄åﬁ, 
bô_wide
);

204  
TW_OK
;

205 
	}
}

207 
	$audio_ícode_c⁄fig_∑øm_upd©e_gë_bô_wide
(
tw_audio_∑øm_t
 *
ícode_audio_∑øm
)

209  
ícode_audio_∑øm
->
¥›îty
.
bô_wide
;

210 
	}
}

212 
	$audio_ícode_c⁄fig_∑øm_upd©e_upd©e_ty≥
(
tw_audio_∑øm_t
 *
ícode_audio_∑øm
, 
ty≥
)

214 
chù_audio_ícode_t
 *
audio_ícode
;

215 
audio_ícode_c⁄åﬁ_t
 *
audio_c⁄åﬁ
;

216 if((
ty≥
 !
TW_AUDIO_ADPCM_32K
Ë&& (ty≥ !
TW_AUDIO_PCM
)){

217 
	`TW_DBG
(
TW_DBG_ERR
, "only support TW_AUDIO_ADPCM_32Kánd TW_AUDIO_PCM\n");

218  
TW_ERR
;

220 
ícode_audio_∑øm
->
¥›îty
.
ty≥
 =Åype;

221 
audio_ícode
 = 
	`to_gë_chù_audio_ícode_wôh_¥›îty
(
ícode_audio_∑øm
);

222 
audio_c⁄åﬁ
 = &
audio_ícode
->audio_control;

223 if(
audio_c⁄åﬁ
->
›
 !
NULL
){

224 
audio_c⁄åﬁ
->
›
->
	`upd©e_audio_ty≥
◊udio_c⁄åﬁ, 
ty≥
);

226  
TW_OK
;

227 
	}
}

229 
	$audio_ícode_c⁄fig_∑øm_upd©e_gë_ty≥
(
tw_audio_∑øm_t
 *
ícode_audio_∑øm
)

231  
ícode_audio_∑øm
->
¥›îty
.
ty≥
;

232 
	}
}

234 
audio_¥›îty_upd©e_›î©i⁄
 
	gaudio_ícode_c⁄fig_∑øm_upd©e_›
 = {

235 .
öô
 = 
audio_ícode_c⁄fig_∑øm_upd©e_öô
,

236 .
	gupd©e_ßm∂e_øã
 = 
audio_ícode_c⁄fig_∑øm_upd©e_upd©e_ßm∂e_øã
,

237 .
	ggë_ßm∂e_øã
 = 
audio_ícode_c⁄fig_∑øm_upd©e_gë_ßm∂e_øã
,

238 .
	gupd©e_bô_wide
 = 
audio_ícode_c⁄fig_∑øm_upd©e_upd©e_bô_wide
,

239 .
	ggë_bô_wide
 = 
audio_ícode_c⁄fig_∑øm_upd©e_gë_bô_wide
,

240 .
	gupd©e_ty≥
 = 
audio_ícode_c⁄fig_∑øm_upd©e_upd©e_ty≥
,

241 .
	ggë_ty≥
 = 
audio_ícode_c⁄fig_∑øm_upd©e_gë_ty≥
,

244 
	$öô_audio_ícode_¥›îty
(
tw_audio_∑øm_t
 *
audio_ícode_∑øm
, 
tw_audio_c⁄fig_des¸ùt‹_t
 *
c⁄fig
)

246 if(
audio_ícode_∑øm
 !
NULL
){

247 
audio_ícode_∑øm
->
›
 = &
audio_ícode_c⁄fig_∑øm_upd©e_›
;

248 
audio_ícode_∑øm
->
›
->
	`öô
◊udio_ícode_∑øm, 
c⁄fig
);

250 
	}
}

255 
	$audio_decode_c⁄fig_∑øm_upd©e_öô
(
tw_audio_∑øm_t
 *
decode_audio_∑øm
, 
tw_audio_c⁄fig_des¸ùt‹_t
 *
∑øm
)

257 if(
∑øm
 =
NULL
){

258 
∑øm
 = &
deÁu…_audio_decode_c⁄fig_des¸ùt‹
;

260 if(
decode_audio_∑øm
->
›
 !
NULL
){

261 
decode_audio_∑øm
->
›
->
	`upd©e_bô_wide
(decode_audio_∑øm, ()
∑øm
->
bô_wide
);

262 
decode_audio_∑øm
->
›
->
	`upd©e_ßm∂e_øã
(decode_audio_∑øm, ()
∑øm
->
ßm∂e_øã
);

263 
decode_audio_∑øm
->
›
->
	`upd©e_ty≥
(decode_audio_∑øm, ()
∑øm
->
ty≥
);

265 
decode_audio_∑øm
->
¥›îty
.
ty≥
 = 
∑øm
->type;

266 
decode_audio_∑øm
->
¥›îty
.
ßm∂e_øã
 = 
∑øm
->sample_rate;

267 
decode_audio_∑øm
->
¥›îty
.
bô_wide
 = 
∑øm
->bit_wide;

269 
	}
}

271 
	$audio_decode_c⁄fig_∑øm_upd©e_upd©e_ßm∂e_øã
(
tw_audio_∑øm_t
 *
decode_audio_∑øm
, 
ßm∂e_øã
)

273 if((
ßm∂e_øã
!=
TW_AUDIO_8000
Ë&& (ßm∂e_øã!=
TW_AUDIO_16000
)){

274 
	`TW_DBG
(
TW_DBG_ERR
, "only support 8K, 16K\n");

275  
TW_ERR
;

277 if(
decode_audio_∑øm
 =
NULL
){

278  
TW_ERR
;

280 
decode_audio_∑øm
->
¥›îty
.
ßm∂e_øã
 = sample_rate;

281  
TW_OK
;

282 
	}
}

284 
	$audio_decode_c⁄fig_∑øm_upd©e_gë_ßm∂e_øã
(
tw_audio_∑øm_t
 *
decode_audio_∑øm
)

286  
decode_audio_∑øm
->
¥›îty
.
ßm∂e_øã
;

287 
	}
}

289 
	$audio_decode_c⁄fig_∑øm_upd©e_upd©e_bô_wide
(
tw_audio_∑øm_t
 *
decode_audio_∑øm
, 
bô_wide
)

291 
chù_audio_decode_t
 *
audio_decode
;

292 
audio_decode_c⁄åﬁ_t
 *
audio_c⁄åﬁ
;

293 if((
bô_wide
!=
TW_AUDIO_16BIT
Ë&& (bô_wide!=
TW_AUDIO_8BIT
)){

294 
	`TW_DBG
(
TW_DBG_ERR
, "only support 8bit or 16bit\n");

295  
TW_ERR
;

297 
decode_audio_∑øm
->
¥›îty
.
bô_wide
 = bit_wide;

298 
audio_decode
 = 
	`to_gë_chù_audio_decode_wôh_¥›îty
(
decode_audio_∑øm
);

299 
audio_c⁄åﬁ
 = &
audio_decode
->audio_control;

300 if(
audio_c⁄åﬁ
->
›
 !
NULL
){

301 
audio_c⁄åﬁ
->
›
->
	`upd©e_decode_ch™_bô_wide
◊udio_c⁄åﬁ, 
TW_AUDIO_OUT_SPEAKER_ID
, 
bô_wide
);

302 
audio_c⁄åﬁ
->
›
->
	`upd©e_decode_ch™_bô_wide
◊udio_c⁄åﬁ, 
TW_AUDIO_OUT_PLAYBACK_ID
, 
bô_wide
);

304  
TW_OK
;

305 
	}
}

307 
	$audio_decode_c⁄fig_∑øm_upd©e_gë_bô_wide
(
tw_audio_∑øm_t
 *
decode_audio_∑øm
)

309  
decode_audio_∑øm
->
¥›îty
.
bô_wide
;

310 
	}
}

312 
	$audio_decode_c⁄fig_∑øm_upd©e_upd©e_ty≥
(
tw_audio_∑øm_t
 *
decode_audio_∑øm
, 
ty≥
)

314 if((
ty≥
 !
TW_AUDIO_ADPCM_32K
Ë&& (ty≥ !
TW_AUDIO_PCM
)){

315 
	`TW_DBG
(
TW_DBG_ERR
, "only support TW_AUDIO_ADPCM_32Kánd TW_AUDIO_PCM\n");

316  
TW_ERR
;

318 
decode_audio_∑øm
->
¥›îty
.
ty≥
 =Åype;

319  
TW_OK
;

320 
	}
}

322 
	$audio_decode_c⁄fig_∑øm_upd©e_gë_ty≥
(
tw_audio_∑øm_t
 *
decode_audio_∑øm
)

324  
decode_audio_∑øm
->
¥›îty
.
ty≥
;

325 
	}
}

327 
audio_¥›îty_upd©e_›î©i⁄
 
	gaudio_decode_c⁄fig_∑øm_upd©e_›
 = {

328 .
öô
 = 
audio_decode_c⁄fig_∑øm_upd©e_öô
,

329 .
	gupd©e_ßm∂e_øã
 = 
audio_decode_c⁄fig_∑øm_upd©e_upd©e_ßm∂e_øã
,

330 .
	ggë_ßm∂e_øã
 = 
audio_decode_c⁄fig_∑øm_upd©e_gë_ßm∂e_øã
,

331 .
	gupd©e_bô_wide
 = 
audio_decode_c⁄fig_∑øm_upd©e_upd©e_bô_wide
,

332 .
	ggë_bô_wide
 = 
audio_decode_c⁄fig_∑øm_upd©e_gë_bô_wide
,

333 .
	gupd©e_ty≥
 = 
audio_decode_c⁄fig_∑øm_upd©e_upd©e_ty≥
,

334 .
	ggë_ty≥
 = 
audio_decode_c⁄fig_∑øm_upd©e_gë_ty≥
,

337 
	$öô_audio_decode_¥›îty
(
tw_audio_∑øm_t
 *
audio_decode_∑øm
, 
tw_audio_c⁄fig_des¸ùt‹_t
 *
c⁄fig
)

339 if(
audio_decode_∑øm
 !
NULL
){

340 
audio_decode_∑øm
->
›
 = &
audio_decode_c⁄fig_∑øm_upd©e_›
;

341 
audio_decode_∑øm
->
›
->
	`öô
◊udio_decode_∑øm, 
c⁄fig
);

343 
	}
}

349 
	$audio_íabÀ_gë_adpcm_decode_°©e
(
audio_íabÀ_c⁄åﬁ_t
 *
audio_í
)

351  
audio_í
->
vÆue
.
bô_vÆue
.
adpcm_decode_íabÀ
;

352 
	}
}

354 
	$audio_íabÀ_upd©e_íabÀ_adpcm_decode
(
audio_íabÀ_c⁄åﬁ_t
 *
audio_í
, 
í
)

356 if(
í
 =
AUDIO_DISABLE
){

357 
chù_audio_t
 *
chù_aduio
 = 
	`to_gë_chù_audio_wôh_audio_íabÀ
(
audio_í
);

358 
chù_audio_decode_t
 *
audio_decode
 = &
chù_aduio
->audio_decode;

359 
audio_decode_c⁄åﬁ_t
 *
audio_c⁄åﬁ
 = &
audio_decode
->audio_control;

360 if((
audio_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™0_íabÀ
 =
AUDIO_DISABLE
) &&

361 (
audio_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™1_íabÀ
 =
AUDIO_DISABLE
)){

362 
audio_í
->
vÆue
.
bô_vÆue
.
adpcm_decode_íabÀ
 = 
AUDIO_DISABLE
;

365 
audio_í
->
vÆue
.
bô_vÆue
.
adpcm_decode_íabÀ
 = 
AUDIO_ENABLE
;

367 
	}
}

369 
	$audio_íabÀ_£t_íabÀ_adpcm_decode
(
audio_íabÀ_c⁄åﬁ_t
 *
audio_í
, 
í
, 
dvm_chù_t
 *
chù
)

371 if(
audio_í
->
›
 !
NULL
){

372 
audio_í
->
›
->
	`upd©e_íabÀ_adpcm_decode
◊udio_í, 
í
);

374 
	`audio_íabÀ_upd©e_íabÀ_adpcm_decode
(
audio_í
, 
í
);

376 if(
chù
 !
NULL
){

377 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
audio_í
->
ªg_off£t
,áudio_í->
vÆue
.value);

379 
	}
}

381 
	$audio_íabÀ_gë_pcm_ícode_°©e
(
audio_íabÀ_c⁄åﬁ_t
 *
audio_í
)

383  
audio_í
->
vÆue
.
bô_vÆue
.
pcm_ícode_íabÀ
;

384 
	}
}

386 
	$audio_íabÀ_upd©e_íabÀ_pcm_ícode
(
audio_íabÀ_c⁄åﬁ_t
 *
audio_í
, 
í
)

388 
chù_audio_t
 *
chù_audio
 = 
	`to_gë_chù_audio_wôh_audio_íabÀ
(
audio_í
);

389 
chù_audio_ícode_t
 *
audio_ícode
 = &
chù_audio
->audio_encode;

390 
audio_ícode_c⁄åﬁ_t
 *
audio_c⁄åﬁ
 = &
audio_ícode
->audio_control;

392 if(
í
 =
AUDIO_DISABLE
){

393 if((
audio_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ch™0_í
 =
AUDIO_DISABLE
) &&

394 (
audio_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ch™1_í
 =
AUDIO_DISABLE
) &&

395 (
audio_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ch™2_í
 =
AUDIO_DISABLE
) &&

396 (
audio_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ch™3_í
 =
AUDIO_DISABLE
) &&

397 (
audio_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ch™4_í
 =
AUDIO_DISABLE
) &&

398 (
audio_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ch™5_í
 =
AUDIO_DISABLE
) &&

399 (
audio_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ch™6_í
 =
AUDIO_DISABLE
) &&

400 (
audio_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ch™7_í
 =
AUDIO_DISABLE
) &&

401 (
audio_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ch™8_í
 =
AUDIO_DISABLE
) &&

402 (
audio_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ch™9_í
 =
AUDIO_DISABLE
) &&

403 (
audio_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ch™10_í
 =
AUDIO_DISABLE
) &&

404 (
audio_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ch™11_í
 =
AUDIO_DISABLE
) &&

405 (
audio_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ch™12_í
 =
AUDIO_DISABLE
) &&

406 (
audio_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ch™13_í
 =
AUDIO_DISABLE
) &&

407 (
audio_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ch™14_í
 =
AUDIO_DISABLE
) &&

408 (
audio_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ch™15_í
 =
AUDIO_DISABLE
) &&

409 (
audio_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
•ókî_í
 =
AUDIO_DISABLE
)){

410 
audio_í
->
vÆue
.
bô_vÆue
.
pcm_ícode_íabÀ
 = 
AUDIO_DISABLE
;

411 
audio_í
->
vÆue
.
bô_vÆue
.
adpcm_ícode_íabÀ
 = 
AUDIO_DISABLE
;

414 
audio_í
->
vÆue
.
bô_vÆue
.
pcm_ícode_íabÀ
 = 
AUDIO_ENABLE
;

416 
	}
}

418 
	$audio_íabÀ_£t_íabÀ_pcm_ícode
(
audio_íabÀ_c⁄åﬁ_t
 *
audio_í
, 
í
, 
dvm_chù_t
 *
chù
)

420 if(
audio_í
->
›
 !
NULL
){

421 
audio_í
->
›
->
	`upd©e_íabÀ_pcm_ícode
◊udio_í, 
í
);

423 
	`audio_íabÀ_upd©e_íabÀ_pcm_ícode
(
audio_í
, 
í
);

425 if(
chù
 !
NULL
){

426 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
audio_í
->
ªg_off£t
,áudio_í->
vÆue
.value);

428 
	}
}

430 
	$audio_íabÀ_gë_adpcm_ícode_°©e
(
audio_íabÀ_c⁄åﬁ_t
 *
audio_í
)

432  
audio_í
->
vÆue
.
bô_vÆue
.
adpcm_ícode_íabÀ
;

433 
	}
}

435 
	$audio_íabÀ_upd©e_íabÀ_adpcm_ícode
(
audio_íabÀ_c⁄åﬁ_t
 *
audio_í
, 
í
)

437 
chù_audio_t
 *
chù_audio
 = 
	`to_gë_chù_audio_wôh_audio_íabÀ
(
audio_í
);

438 
chù_audio_ícode_t
 *
audio_ícode
 = &
chù_audio
->audio_encode;

439 
audio_ícode_c⁄åﬁ_t
 *
audio_c⁄åﬁ
 = &
audio_ícode
->audio_control;

441 if(
í
 =
AUDIO_DISABLE
){

442 if((
audio_c⁄åﬁ
->
adpcm_vÆue
.
bô_vÆue
.
audio_ch™0_í
 =
AUDIO_DISABLE
) &&

443 (
audio_c⁄åﬁ
->
adpcm_vÆue
.
bô_vÆue
.
audio_ch™1_í
 =
AUDIO_DISABLE
) &&

444 (
audio_c⁄åﬁ
->
adpcm_vÆue
.
bô_vÆue
.
audio_ch™2_í
 =
AUDIO_DISABLE
) &&

445 (
audio_c⁄åﬁ
->
adpcm_vÆue
.
bô_vÆue
.
audio_ch™3_í
 =
AUDIO_DISABLE
) &&

446 (
audio_c⁄åﬁ
->
adpcm_vÆue
.
bô_vÆue
.
audio_ch™4_í
 =
AUDIO_DISABLE
) &&

447 (
audio_c⁄åﬁ
->
adpcm_vÆue
.
bô_vÆue
.
audio_ch™5_í
 =
AUDIO_DISABLE
) &&

448 (
audio_c⁄åﬁ
->
adpcm_vÆue
.
bô_vÆue
.
audio_ch™6_í
 =
AUDIO_DISABLE
) &&

449 (
audio_c⁄åﬁ
->
adpcm_vÆue
.
bô_vÆue
.
audio_ch™7_í
 =
AUDIO_DISABLE
) &&

450 (
audio_c⁄åﬁ
->
adpcm_vÆue
.
bô_vÆue
.
audio_ch™8_í
 =
AUDIO_DISABLE
) &&

451 (
audio_c⁄åﬁ
->
adpcm_vÆue
.
bô_vÆue
.
audio_ch™9_í
 =
AUDIO_DISABLE
) &&

452 (
audio_c⁄åﬁ
->
adpcm_vÆue
.
bô_vÆue
.
audio_ch™10_í
 =
AUDIO_DISABLE
) &&

453 (
audio_c⁄åﬁ
->
adpcm_vÆue
.
bô_vÆue
.
audio_ch™11_í
 =
AUDIO_DISABLE
) &&

454 (
audio_c⁄åﬁ
->
adpcm_vÆue
.
bô_vÆue
.
audio_ch™12_í
 =
AUDIO_DISABLE
) &&

455 (
audio_c⁄åﬁ
->
adpcm_vÆue
.
bô_vÆue
.
audio_ch™13_í
 =
AUDIO_DISABLE
) &&

456 (
audio_c⁄åﬁ
->
adpcm_vÆue
.
bô_vÆue
.
audio_ch™14_í
 =
AUDIO_DISABLE
) &&

457 (
audio_c⁄åﬁ
->
adpcm_vÆue
.
bô_vÆue
.
audio_ch™15_í
 =
AUDIO_DISABLE
) &&

458 (
audio_c⁄åﬁ
->
adpcm_vÆue
.
bô_vÆue
.
•ókî_í
 =
AUDIO_DISABLE
)){

459 
audio_í
->
vÆue
.
bô_vÆue
.
pcm_ícode_íabÀ
 = 
AUDIO_DISABLE
;

460 
audio_í
->
vÆue
.
bô_vÆue
.
adpcm_ícode_íabÀ
 = 
AUDIO_DISABLE
;

463 
audio_í
->
vÆue
.
bô_vÆue
.
adpcm_ícode_íabÀ
 = 
AUDIO_ENABLE
;

465 
	}
}

467 
	$audio_íabÀ_£t_íabÀ_adpcm_ícode
(
audio_íabÀ_c⁄åﬁ_t
 *
audio_í
, 
í
, 
dvm_chù_t
 *
chù
)

469 if(
audio_í
->
›
 !
NULL
){

470 
audio_í
->
›
->
	`upd©e_íabÀ_adpcm_ícode
◊udio_í, 
í
);

472 
	`audio_íabÀ_upd©e_íabÀ_adpcm_ícode
(
audio_í
, 
í
);

474 if(
chù
 !
NULL
){

475 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
audio_í
->
ªg_off£t
,áudio_í->
vÆue
.value);

477 
	}
}

479 
	$audio_íabÀ_öô_íabÀ_c⁄åﬁ_ªg
(
audio_íabÀ_c⁄åﬁ_t
 *
audio_í
)

481 
audio_í
->
ªg_off£t
 = 
AUDIO_EN_CONTROL_REG
;

482 
audio_í
->
vÆue
.value = 0;

483 
	}
}

485 
	$audio_íabÀ_gë_íabÀ_c⁄åﬁ_∑øm
(
audio_íabÀ_c⁄åﬁ_t
 *
audio_í
, 
dvm_chù_t
 *
chù
)

487 if(
chù
 !
NULL
){

490 
	}
}

492 
	$audio_íabÀ_£t_íabÀ_c⁄åﬁ_∑øm
(
audio_íabÀ_c⁄åﬁ_t
 *
audio_í
, 
dvm_chù_t
 *
chù
)

494 if(
chù
 !
NULL
){

495 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
audio_í
->
ªg_off£t
,áudio_í->
vÆue
.value);

497 
	}
}

499 
audio_íabÀ_c⁄åﬁ_›î©i⁄
 
	gaudio_íabÀ_›
 = {

500 .
gë_adpcm_decode_°©e
 = 
audio_íabÀ_gë_adpcm_decode_°©e
,

501 .
	gupd©e_íabÀ_adpcm_decode
 = 
audio_íabÀ_upd©e_íabÀ_adpcm_decode
,

502 .
	g£t_íabÀ_adpcm_decode
 = 
audio_íabÀ_£t_íabÀ_adpcm_decode
,

504 .
	ggë_pcm_ícode_°©e
 = 
audio_íabÀ_gë_pcm_ícode_°©e
,

505 .
	gupd©e_íabÀ_pcm_ícode
 = 
audio_íabÀ_upd©e_íabÀ_pcm_ícode
,

506 .
	g£t_íabÀ_pcm_ícode
 = 
audio_íabÀ_£t_íabÀ_pcm_ícode
,

508 .
	ggë_adpcm_ícode_°©e
 = 
audio_íabÀ_gë_adpcm_ícode_°©e
,

509 .
	gupd©e_íabÀ_adpcm_ícode
 = 
audio_íabÀ_upd©e_íabÀ_adpcm_ícode
,

510 .
	g£t_íabÀ_adpcm_ícode
 = 
audio_íabÀ_£t_íabÀ_adpcm_ícode
,

512 .
	göô
 = 
audio_íabÀ_öô_íabÀ_c⁄åﬁ_ªg
,

513 .
	ggë_íabÀ_c⁄åﬁ_∑øm
 = 
audio_íabÀ_gë_íabÀ_c⁄åﬁ_∑øm
,

514 .
	g£t_íabÀ_c⁄åﬁ_∑øm
 = 
audio_íabÀ_£t_íabÀ_c⁄åﬁ_∑øm
,

517 
	$öô_audio_íabÀ_c⁄åﬁ
(
audio_íabÀ_c⁄åﬁ_t
 *
audio_í
)

519 
audio_í
->
›
 = &
audio_íabÀ_›
;

520 
audio_í
->
›
->
	`öô
(audio_en);

521 
	}
}

526 
	$audio_pcm_ícode_wr_rd_±r_öô
(
audio_pcm_ícode_±r_c⁄åﬁ_t
 *
pcm_ícode_±r
)

528 
pcm_ícode_±r
->
ch0_ch7_wr_±r_vÆue
.
vÆue
 = 0;

529 
pcm_ícode_±r
->
ch0_ch7_wr_±r_ªg_off£t
 = 
PCM_ENCODE_WR_PTR_CH0_CH7_REG
;

530 
pcm_ícode_±r
->
ch8_ch15_wr_±r_vÆue
.
vÆue
 = 0;

531 
pcm_ícode_±r
->
ch8_ch15_wr_±r_ªg_off£t
 = 
PCM_ENCODE_WR_PTR_CH8_CH15_REG
;

532 
pcm_ícode_±r
->
ch16_wr_±r_vÆue
.
vÆue
 = 0;

533 
pcm_ícode_±r
->
ch16_wr_±r_ªg_off£t
 = 
PCM_ENCODE_WR_PTR_CH16_REG
;

534 
pcm_ícode_±r
->
ch0_ch7_rd_±r_vÆue
.
vÆue
 = 0;

535 
pcm_ícode_±r
->
ch0_ch7_rd_±r_ªg_off£t
 = 
PCM_ENCODE_RD_PTR_CH0_CH7_REG
;

536 
pcm_ícode_±r
->
ch8_ch15_rd_±r_vÆue
.
vÆue
 = 0;

537 
pcm_ícode_±r
->
ch8_ch15_rd_±r_ªg_off£t
 = 
PCM_ENCODE_RD_PTR_CH8_CH15_REG
;

538 
pcm_ícode_±r
->
ch16_rd_±r_vÆue
.
vÆue
 = 0;

539 
pcm_ícode_±r
->
ch16_rd_±r_ªg_off£t
 = 
PCM_ENCODE_RD_PTR_CH16_REG
;

540 
pcm_ícode_±r
->
rd_föish_numbî_ªg_off£t
 = 
HOST_BLOCK_RD_PCM_FINISH_REG
;

541 
pcm_ícode_±r
->
£˘i⁄_numbî
 = 
AUDIO_IN_PCM_CHAN_SECTION_NUMBER
;

542 
	}
}

544 
	$audio_pcm_ícode_wr_rd_±r_gë_pcm_wr_rd_±r
(
audio_pcm_ícode_±r_c⁄åﬁ_t
 *
pcm_ícode_±r
, 
dvm_chù_t
 *
chù
)

546 if(
chù
 !
NULL
){

547 
pcm_ícode_±r
->
ch0_ch7_wr_±r_vÆue
.
vÆue
 = 
chù
->
io_›
->
	`chù_ªad32
(chù,Öcm_ícode_±r->
ch0_ch7_wr_±r_ªg_off£t
);

548 
pcm_ícode_±r
->
ch8_ch15_wr_±r_vÆue
.
vÆue
 = 
chù
->
io_›
->
	`chù_ªad32
(chù,Öcm_ícode_±r->
ch8_ch15_wr_±r_ªg_off£t
);

549 
pcm_ícode_±r
->
ch16_wr_±r_vÆue
.
vÆue
 = 
chù
->
io_›
->
	`chù_ªad32
(chù,Öcm_ícode_±r->
ch16_wr_±r_ªg_off£t
);

551 
pcm_ícode_±r
->
ch0_ch7_rd_±r_vÆue
.
vÆue
 = 
chù
->
io_›
->
	`chù_ªad32
(chù,Öcm_ícode_±r->
ch0_ch7_rd_±r_ªg_off£t
);

552 
pcm_ícode_±r
->
ch8_ch15_rd_±r_vÆue
.
vÆue
 = 
chù
->
io_›
->
	`chù_ªad32
(chù,Öcm_ícode_±r->
ch8_ch15_rd_±r_ªg_off£t
);

553 
pcm_ícode_±r
->
ch16_rd_±r_vÆue
.
vÆue
 = 
chù
->
io_›
->
	`chù_ªad32
(chù,Öcm_ícode_±r->
ch16_rd_±r_ªg_off£t
);

555 
	}
}

557 
	$audio_pcm_ícode_wr_rd_±r_gë_ch™_wr_±r
(
audio_pcm_ícode_±r_c⁄åﬁ_t
 *
pcm_ícode_±r
, 
ch™_id
, *
ext_Êag
)

559 
ªt
 = 
INVALID_TW_AUDIO_SECTION_ID
;

560 
ch™_id
){

561 
TW_AUDIO_IN_CHAN0_ID
:

562 
ªt
 = 
pcm_ícode_±r
->
ch0_ch7_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™0_±r
;

564 
TW_AUDIO_IN_CHAN1_ID
:

565 
ªt
 = 
pcm_ícode_±r
->
ch0_ch7_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™1_±r
;

567 
TW_AUDIO_IN_CHAN2_ID
:

568 
ªt
 = 
pcm_ícode_±r
->
ch0_ch7_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™2_±r
;

570 
TW_AUDIO_IN_CHAN3_ID
:

571 
ªt
 = 
pcm_ícode_±r
->
ch0_ch7_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™3_±r
;

573 
TW_AUDIO_IN_CHAN4_ID
:

574 
ªt
 = 
pcm_ícode_±r
->
ch0_ch7_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™4_±r
;

576 
TW_AUDIO_IN_CHAN5_ID
:

577 
ªt
 = 
pcm_ícode_±r
->
ch0_ch7_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™5_±r
;

579 
TW_AUDIO_IN_CHAN6_ID
:

580 
ªt
 = 
pcm_ícode_±r
->
ch0_ch7_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™6_±r
;

582 
TW_AUDIO_IN_CHAN7_ID
:

583 
ªt
 = 
pcm_ícode_±r
->
ch0_ch7_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™7_±r
;

585 
TW_AUDIO_IN_CHAN8_ID
:

586 
ªt
 = 
pcm_ícode_±r
->
ch8_ch15_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™08_±r
;

588 
TW_AUDIO_IN_CHAN9_ID
:

589 
ªt
 = 
pcm_ícode_±r
->
ch8_ch15_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™09_±r
;

591 
TW_AUDIO_IN_CHAN10_ID
:

592 
ªt
 = 
pcm_ícode_±r
->
ch8_ch15_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™10_±r
;

594 
TW_AUDIO_IN_CHAN11_ID
:

595 
ªt
 = 
pcm_ícode_±r
->
ch8_ch15_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™11_±r
;

597 
TW_AUDIO_IN_CHAN12_ID
:

598 
ªt
 = 
pcm_ícode_±r
->
ch8_ch15_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™12_±r
;

600 
TW_AUDIO_IN_CHAN13_ID
:

601 
ªt
 = 
pcm_ícode_±r
->
ch8_ch15_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™13_±r
;

603 
TW_AUDIO_IN_CHAN14_ID
:

604 
ªt
 = 
pcm_ícode_±r
->
ch8_ch15_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™14_±r
;

606 
TW_AUDIO_IN_CHAN15_ID
:

607 
ªt
 = 
pcm_ícode_±r
->
ch8_ch15_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™15_±r
;

609 
TW_AUDIO_IN_SPEAKER_ID
:

610 
ªt
 = 
pcm_ícode_±r
->
ch16_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™16_±r
;

613 
	`¥ötk
("%s.%d:Éºáudiÿch™ id %d\n", 
__FUNCTION__
, 
__LINE__
, 
ch™_id
);

616 *
ext_Êag
 = 
ªt
>>(
	`gë_powî_ba£
((
u32
)
AUDIO_IN_PCM_CHAN_SECTION_NUMBER
));

617 
ªt
 &((1<<(
	`gë_powî_ba£
((
u32
)
AUDIO_IN_PCM_CHAN_SECTION_NUMBER
)))-1);

618  
ªt
;

619 
	}
}

621 
	$audio_pcm_ícode_wr_rd_±r_gë_ch™_rd_±r
(
audio_pcm_ícode_±r_c⁄åﬁ_t
 *
pcm_ícode_±r
, 
ch™_id
, *
ext_Êag
)

623 
ªt
 = 
INVALID_TW_AUDIO_SECTION_ID
;

624 
ch™_id
){

625 
TW_AUDIO_IN_CHAN0_ID
:

626 
ªt
 = 
pcm_ícode_±r
->
ch0_ch7_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™0_±r
;

628 
TW_AUDIO_IN_CHAN1_ID
:

629 
ªt
 = 
pcm_ícode_±r
->
ch0_ch7_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™1_±r
;

631 
TW_AUDIO_IN_CHAN2_ID
:

632 
ªt
 = 
pcm_ícode_±r
->
ch0_ch7_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™2_±r
;

634 
TW_AUDIO_IN_CHAN3_ID
:

635 
ªt
 = 
pcm_ícode_±r
->
ch0_ch7_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™3_±r
;

637 
TW_AUDIO_IN_CHAN4_ID
:

638 
ªt
 = 
pcm_ícode_±r
->
ch0_ch7_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™4_±r
;

640 
TW_AUDIO_IN_CHAN5_ID
:

641 
ªt
 = 
pcm_ícode_±r
->
ch0_ch7_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™5_±r
;

643 
TW_AUDIO_IN_CHAN6_ID
:

644 
ªt
 = 
pcm_ícode_±r
->
ch0_ch7_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™6_±r
;

646 
TW_AUDIO_IN_CHAN7_ID
:

647 
ªt
 = 
pcm_ícode_±r
->
ch0_ch7_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™7_±r
;

649 
TW_AUDIO_IN_CHAN8_ID
:

650 
ªt
 = 
pcm_ícode_±r
->
ch8_ch15_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™08_±r
;

652 
TW_AUDIO_IN_CHAN9_ID
:

653 
ªt
 = 
pcm_ícode_±r
->
ch8_ch15_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™09_±r
;

655 
TW_AUDIO_IN_CHAN10_ID
:

656 
ªt
 = 
pcm_ícode_±r
->
ch8_ch15_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™10_±r
;

658 
TW_AUDIO_IN_CHAN11_ID
:

659 
ªt
 = 
pcm_ícode_±r
->
ch8_ch15_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™11_±r
;

661 
TW_AUDIO_IN_CHAN12_ID
:

662 
ªt
 = 
pcm_ícode_±r
->
ch8_ch15_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™12_±r
;

664 
TW_AUDIO_IN_CHAN13_ID
:

665 
ªt
 = 
pcm_ícode_±r
->
ch8_ch15_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™13_±r
;

667 
TW_AUDIO_IN_CHAN14_ID
:

668 
ªt
 = 
pcm_ícode_±r
->
ch8_ch15_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™14_±r
;

670 
TW_AUDIO_IN_CHAN15_ID
:

671 
ªt
 = 
pcm_ícode_±r
->
ch8_ch15_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™15_±r
;

673 
TW_AUDIO_IN_SPEAKER_ID
:

674 
ªt
 = 
pcm_ícode_±r
->
ch16_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™16_±r
;

677 
	`¥ötk
("%s.%d:Éºáudiÿch™ id %d\n", 
__FUNCTION__
, 
__LINE__
, 
ch™_id
);

680 *
ext_Êag
 = 
ªt
>>(
	`gë_powî_ba£
((
u32
)
AUDIO_IN_PCM_CHAN_SECTION_NUMBER
));

681 
ªt
 &((1<<(
	`gë_powî_ba£
((
u32
)
AUDIO_IN_PCM_CHAN_SECTION_NUMBER
)))-1);

682  
ªt
;

683 
	}
}

685 
	$audio_pcm_ícode_wr_rd_gë_ch™_£˘i⁄_numbî
(
audio_pcm_ícode_±r_c⁄åﬁ_t
 *
pcm_ícode_±r
)

687  
pcm_ícode_±r
->
£˘i⁄_numbî
;

688 
	}
}

690 
	$audio_pcm_ícode_wr_rd_±r_£t_rd_föish_numbî
(
audio_pcm_ícode_±r_c⁄åﬁ_t
 *
pcm_ícode_±r
, 
£˘i⁄_id
, 
dvm_chù_t
 *
chù
)

692 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
pcm_ícode_±r
->
rd_föish_numbî_ªg_off£t
, 
£˘i⁄_id
);

693 
	}
}

695 
audio_pcm_ícode_wr_rd_±r_›î©i⁄
 
	gaudio_pcm_ícode_wr_rd_±r_›
 = {

696 .
öô
 = 
audio_pcm_ícode_wr_rd_±r_öô
,

697 .
	ggë_pcm_wr_rd_±r
 = 
audio_pcm_ícode_wr_rd_±r_gë_pcm_wr_rd_±r
,

698 .
	ggë_ch™_wr_±r
 = 
audio_pcm_ícode_wr_rd_±r_gë_ch™_wr_±r
,

699 .
	ggë_ch™_rd_±r
 = 
audio_pcm_ícode_wr_rd_±r_gë_ch™_rd_±r
,

700 .
	ggë_ch™_£˘i⁄_numbî
 = 
audio_pcm_ícode_wr_rd_gë_ch™_£˘i⁄_numbî
,

701 .
	g£t_rd_föish_numbî
 = 
audio_pcm_ícode_wr_rd_±r_£t_rd_föish_numbî
,

704 
	$öô_audio_pcm_ícode_±r_c⁄åﬁ
(
audio_pcm_ícode_±r_c⁄åﬁ_t
 *
pcm_ícode_±r
)

706 
pcm_ícode_±r
->
›
 = &
audio_pcm_ícode_wr_rd_±r_›
;

707 
pcm_ícode_±r
->
›
->
	`öô
(pcm_encode_ptr);

708 
	}
}

713 
	$audio_pcm_ícode_d©a_addr_£t_ªg_bô_£˘i⁄_off£t
(
audio_pcm_ícode_d©a_addr_t
 *
pcm_ícode_d©a_addr
, 
u32
 
£˘i⁄_off£t
)

715 
pcm_ícode_d©a_addr
->
vÆue
.
bô_vÆue
.
£˘i⁄_off£t
 = section_offset;

716 
	}
}

718 
u32
 
	$audio_pcm_ícode_d©a_addr_gë_ªg_bô_£˘i⁄_off£t
(
audio_pcm_ícode_d©a_addr_t
 *
pcm_ícode_d©a_addr
)

720  
pcm_ícode_d©a_addr
->
vÆue
.
bô_vÆue
.
£˘i⁄_off£t
;

721 
	}
}

723 
	$audio_pcm_ícode_d©a_addr_£t_ªg_bô_£˘i⁄_id
(
audio_pcm_ícode_d©a_addr_t
 *
pcm_ícode_d©a_addr
, 
u32
 
£˘i⁄_id
)

725 
pcm_ícode_d©a_addr
->
vÆue
.
bô_vÆue
.
£˘i⁄_id
 = section_id;

726 
	}
}

728 
u32
 
	$audio_pcm_ícode_d©a_addr_gë_ªg_bô_£˘i⁄_id
(
audio_pcm_ícode_d©a_addr_t
 *
pcm_ícode_d©a_addr
)

730  
pcm_ícode_d©a_addr
->
vÆue
.
bô_vÆue
.
£˘i⁄_id
;

731 
	}
}

733 
	$audio_pcm_ícode_d©a_addr_£t_ªg_bô_ch™_id
(
audio_pcm_ícode_d©a_addr_t
 *
pcm_ícode_d©a_addr
, 
u32
 
ch™_id
)

735 
pcm_ícode_d©a_addr
->
vÆue
.
bô_vÆue
.
ch™_id
 = chan_id;

736 
	}
}

738 
u32
 
	$audio_pcm_ícode_d©a_addr_gë_ªg_bô_ch™_id
(
audio_pcm_ícode_d©a_addr_t
 *
pcm_ícode_d©a_addr
)

740  
pcm_ícode_d©a_addr
->
vÆue
.
bô_vÆue
.
ch™_id
;

741 
	}
}

743 
	$audio_pcm_ícode_d©a_addr_£t_ªg_bô_pcm_ty≥
(
audio_pcm_ícode_d©a_addr_t
 *
pcm_ícode_d©a_addr
)

745 
pcm_ícode_d©a_addr
->
vÆue
.
bô_vÆue
.
pcm_ty≥
 = 
ADUIO_DATA_ADDR_PCM_ENCODE_TYPE
;

746 
	}
}

748 
u32
 
	$audio_pcm_ícode_d©a_addr_gë_ªg_bô_pcm_ty≥
(
audio_pcm_ícode_d©a_addr_t
 *
pcm_ícode_d©a_addr
)

750  
ADUIO_DATA_ADDR_PCM_ENCODE_TYPE
;

751 
	}
}

753 
u32
 
	$audio_pcm_ícode_d©a_addr_gë_pcm_ícode_d©a_addr
(
audio_pcm_ícode_d©a_addr_t
 *
pcm_ícode_d©a_addr
)

755  
pcm_ícode_d©a_addr
->
vÆue
.value;

756 
	}
}

758 
	$audio_pcm_ícode_d©a_addr_gë_buf_∑ge_id
(
audio_pcm_ícode_d©a_addr_t
 *
pcm_ícode_d©a_addr
)

760  
pcm_ícode_d©a_addr
->
buf_∑ge_id
;

761 
	}
}

763 
	$audio_pcm_ícode_d©a_addr_gë_buf_ö_chù_a_‹_b
(
audio_pcm_ícode_d©a_addr_t
 *
pcm_ícode_d©a_addr
)

765  
pcm_ícode_d©a_addr
->
chù_a_‹_b
;

766 
	}
}

768 
u32
 
	$audio_pcm_ícode_d©a_addr_gë_pcm_ícode_d©a_addr_ö_ho°_íd_off£t
(
audio_pcm_ícode_d©a_addr_t
 *
pcm_ícode_d©a_addr
)

770 
u32
 
ho°_íd_off£t
;

771 
ho°_íd_off£t
 = 
DDRBASE
;

772 
ho°_íd_off£t
 |(
pcm_ícode_d©a_addr
->
vÆue
.value<<2);

773  
ho°_íd_off£t
;

774 
	}
}

776 
u32
 
	$audio_pcm_ícode_d©a_addr_gë_pcm_ícode_d©a_addr_ö_ddr_íd_off£t
(
audio_pcm_ícode_d©a_addr_t
 *
pcm_ícode_d©a_addr
)

778 
u32
 
ddr_íd_off£t
;

779 
ddr_íd_off£t
 = (
pcm_ícode_d©a_addr
->
buf_∑ge_id
<<19);

780 
ddr_íd_off£t
 |(
pcm_ícode_d©a_addr
->
vÆue
.value<<2);

781  
ddr_íd_off£t
;

782 
	}
}

784 
	$audio_pcm_ícode_d©a_addr_öô
(
audio_pcm_ícode_d©a_addr_t
 *
pcm_ícode_d©a_addr
, 
∑ge_id
, 
chù_a_‹_b
)

786 
pcm_ícode_d©a_addr
->
vÆue
.value = 0;

787 
pcm_ícode_d©a_addr
->
vÆue
.
bô_vÆue
.
pcm_ty≥
 = 
ADUIO_DATA_ADDR_PCM_ENCODE_TYPE
;

788 
pcm_ícode_d©a_addr
->
buf_∑ge_id
 = 
∑ge_id
;

789 
pcm_ícode_d©a_addr
->
chù_a_‹_b
 = chip_a_or_b;

790 
	}
}

792 
audio_pcm_ícode_d©a_addr_›î©i⁄
 
	gaudio_pcm_ícode_d©a_addr_›
 = {

793 .
£t_ªg_bô_£˘i⁄_off£t
 = 
audio_pcm_ícode_d©a_addr_£t_ªg_bô_£˘i⁄_off£t
,

794 .
	ggë_ªg_bô_£˘i⁄_off£t
 = 
audio_pcm_ícode_d©a_addr_gë_ªg_bô_£˘i⁄_off£t
,

795 .
	g£t_ªg_bô_£˘i⁄_id
 = 
audio_pcm_ícode_d©a_addr_£t_ªg_bô_£˘i⁄_id
,

796 .
	ggë_ªg_bô_£˘i⁄_id
 = 
audio_pcm_ícode_d©a_addr_gë_ªg_bô_£˘i⁄_id
,

797 .
	g£t_ªg_bô_ch™_id
 = 
audio_pcm_ícode_d©a_addr_£t_ªg_bô_ch™_id
,

798 .
	ggë_ªg_bô_ch™_id
 = 
audio_pcm_ícode_d©a_addr_gë_ªg_bô_ch™_id
,

799 .
	g£t_ªg_bô_pcm_ty≥
 = 
audio_pcm_ícode_d©a_addr_£t_ªg_bô_pcm_ty≥
,

800 .
	ggë_ªg_bô_pcm_ty≥
 = 
audio_pcm_ícode_d©a_addr_gë_ªg_bô_pcm_ty≥
,

801 .
	ggë_pcm_ícode_d©a_addr
 = 
audio_pcm_ícode_d©a_addr_gë_pcm_ícode_d©a_addr
,

802 .
	ggë_buf_∑ge_id
 = 
audio_pcm_ícode_d©a_addr_gë_buf_∑ge_id
,

803 .
	ggë_buf_ö_chù_a_‹_b
 = 
audio_pcm_ícode_d©a_addr_gë_buf_ö_chù_a_‹_b
,

804 .
	ggë_pcm_ícode_d©a_addr_ö_ho°_íd_off£t
 = 
audio_pcm_ícode_d©a_addr_gë_pcm_ícode_d©a_addr_ö_ho°_íd_off£t
,

805 .
	ggë_pcm_ícode_d©a_addr_ö_ddr_íd_off£t
 = 
audio_pcm_ícode_d©a_addr_gë_pcm_ícode_d©a_addr_ö_ddr_íd_off£t
,

806 .
	göô
 = 
audio_pcm_ícode_d©a_addr_öô
,

809 
	$öô_audio_pcm_ícode_d©a_addr
(
audio_pcm_ícode_d©a_addr_t
 *
pcm_ícode_d©a_addr
)

811 if(
pcm_ícode_d©a_addr
 !
NULL
){

812 
pcm_ícode_d©a_addr
->
›
 = &
audio_pcm_ícode_d©a_addr_›
;

813 
pcm_ícode_d©a_addr
->
›
->
	`öô
’cm_ícode_d©a_addr, 
TW_AUDIO_BUF_PAGE_ID
, 
TW_AUDIO_BUF_OF_DDR_ID
);

815 
	}
}

821 
	$audio_adpcm_ícode_wr_rd_±r_öô
(
audio_adpcm_ícode_±r_c⁄åﬁ_t
 *
adpcm_ícode_±r
)

823 
adpcm_ícode_±r
->
ch0_ch9_wr_±r_vÆue
.
vÆue
 = 0;

824 
adpcm_ícode_±r
->
ch0_ch9_wr_±r_ªg_off£t
 = 
ADPCM_ENCODE_WR_PTR_CH0_CH9_REG
;

825 
adpcm_ícode_±r
->
ch10_ch16_wr_±r_vÆue
.
vÆue
 = 0;

826 
adpcm_ícode_±r
->
ch10_ch16_wr_±r_ªg_off£t
 = 
ADPCM_ENCODE_WR_PTR_CH10_CH16_REG
;

828 
adpcm_ícode_±r
->
ch0_ch9_rd_±r_vÆue
.
vÆue
 = 0;

829 
adpcm_ícode_±r
->
ch0_ch9_rd_±r_ªg_off£t
 = 
ADPCM_ENCODE_RD_PTR_CH0_CH9_REG
;

830 
adpcm_ícode_±r
->
ch10_ch16_rd_±r_vÆue
.
vÆue
 = 0;

831 
adpcm_ícode_±r
->
ch10_ch16_rd_±r_ªg_off£t
 = 
ADPCM_ENCODE_RD_PTR_CH10_CH16_REG
;

833 
adpcm_ícode_±r
->
rd_föish_numbî_ªg_off£t
 = 
HOST_BLOCK_RD_ADPCM_FINISH_REG
;

834 
adpcm_ícode_±r
->
£˘i⁄_numbî
 = 
AUDIO_IN_ADPCM_CHAN_SECTION_NUMBER
;

835 
	}
}

837 
	$audio_adpcm_ícode_wr_rd_±r_gë_adpcm_wr_rd_±r
(
audio_adpcm_ícode_±r_c⁄åﬁ_t
 *
adpcm_ícode_±r
, 
dvm_chù_t
 *
chù
)

839 if(
chù
 !
NULL
){

840 
adpcm_ícode_±r
->
ch0_ch9_wr_±r_vÆue
.
vÆue
 = 
chù
->
io_›
->
	`chù_ªad32
(chù,ádpcm_ícode_±r->
ch0_ch9_wr_±r_ªg_off£t
);

841 
adpcm_ícode_±r
->
ch10_ch16_wr_±r_vÆue
.
vÆue
 = 
chù
->
io_›
->
	`chù_ªad32
(chù,ádpcm_ícode_±r->
ch10_ch16_wr_±r_ªg_off£t
);

843 
adpcm_ícode_±r
->
ch0_ch9_rd_±r_vÆue
.
vÆue
 = 
chù
->
io_›
->
	`chù_ªad32
(chù,ádpcm_ícode_±r->
ch0_ch9_rd_±r_ªg_off£t
);

844 
adpcm_ícode_±r
->
ch10_ch16_rd_±r_vÆue
.
vÆue
 = 
chù
->
io_›
->
	`chù_ªad32
(chù,ádpcm_ícode_±r->
ch10_ch16_rd_±r_ªg_off£t
);

846 
	}
}

848 
	$audio_adpcm_ícode_wr_rd_±r_gë_ch™_wr_±r
(
audio_adpcm_ícode_±r_c⁄åﬁ_t
 *
adpcm_ícode_±r
, 
ch™_id
, *
ext_Êag
)

850 
ªt
 = 
INVALID_TW_AUDIO_SECTION_ID
;

851 
ch™_id
){

852 
TW_AUDIO_IN_CHAN0_ID
:

853 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™0_±r
;

855 
TW_AUDIO_IN_CHAN1_ID
:

856 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™1_±r
;

858 
TW_AUDIO_IN_CHAN2_ID
:

859 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™2_±r
;

861 
TW_AUDIO_IN_CHAN3_ID
:

862 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™3_±r
;

864 
TW_AUDIO_IN_CHAN4_ID
:

865 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™4_±r
;

867 
TW_AUDIO_IN_CHAN5_ID
:

868 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™5_±r
;

870 
TW_AUDIO_IN_CHAN6_ID
:

871 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™6_±r
;

873 
TW_AUDIO_IN_CHAN7_ID
:

874 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™7_±r
;

876 
TW_AUDIO_IN_CHAN8_ID
:

877 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™8_±r
;

879 
TW_AUDIO_IN_CHAN9_ID
:

880 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™9_±r
;

882 
TW_AUDIO_IN_CHAN10_ID
:

883 
ªt
 = 
adpcm_ícode_±r
->
ch10_ch16_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™10_±r
;

885 
TW_AUDIO_IN_CHAN11_ID
:

886 
ªt
 = 
adpcm_ícode_±r
->
ch10_ch16_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™11_±r
;

888 
TW_AUDIO_IN_CHAN12_ID
:

889 
ªt
 = 
adpcm_ícode_±r
->
ch10_ch16_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™12_±r
;

891 
TW_AUDIO_IN_CHAN13_ID
:

892 
ªt
 = 
adpcm_ícode_±r
->
ch10_ch16_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™13_±r
;

894 
TW_AUDIO_IN_CHAN14_ID
:

895 
ªt
 = 
adpcm_ícode_±r
->
ch10_ch16_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™14_±r
;

897 
TW_AUDIO_IN_CHAN15_ID
:

898 
ªt
 = 
adpcm_ícode_±r
->
ch10_ch16_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™15_±r
;

900 
TW_AUDIO_IN_SPEAKER_ID
:

901 
ªt
 = 
adpcm_ícode_±r
->
ch10_ch16_wr_±r_vÆue
.
bô_vÆue
.
audio_ch™16_±r
;

904 
	`¥ötk
("%s.%d:Éºáudiÿch™ id %d\n", 
__FUNCTION__
, 
__LINE__
, 
ch™_id
);

907 *
ext_Êag
 = 
ªt
>>(
	`gë_powî_ba£
((
u32
)
AUDIO_IN_ADPCM_CHAN_SECTION_NUMBER
));

908 
ªt
 &((1<<(
	`gë_powî_ba£
((
u32
)
AUDIO_IN_ADPCM_CHAN_SECTION_NUMBER
)))-1);

909  
ªt
;

910 
	}
}

912 
	$audio_adpcm_ícode_wr_rd_±r_gë_ch™_rd_±r
(
audio_adpcm_ícode_±r_c⁄åﬁ_t
 *
adpcm_ícode_±r
, 
ch™_id
, *
ext_Êag
)

914 
ªt
 = 
INVALID_TW_AUDIO_SECTION_ID
;

915 
ch™_id
){

916 
TW_AUDIO_IN_CHAN0_ID
:

917 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™0_±r
;

919 
TW_AUDIO_IN_CHAN1_ID
:

920 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™1_±r
;

922 
TW_AUDIO_IN_CHAN2_ID
:

923 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™2_±r
;

925 
TW_AUDIO_IN_CHAN3_ID
:

926 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™3_±r
;

928 
TW_AUDIO_IN_CHAN4_ID
:

929 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™4_±r
;

931 
TW_AUDIO_IN_CHAN5_ID
:

932 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™5_±r
;

934 
TW_AUDIO_IN_CHAN6_ID
:

935 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™6_±r
;

937 
TW_AUDIO_IN_CHAN7_ID
:

938 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™7_±r
;

940 
TW_AUDIO_IN_CHAN8_ID
:

941 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™8_±r
;

943 
TW_AUDIO_IN_CHAN9_ID
:

944 
ªt
 = 
adpcm_ícode_±r
->
ch0_ch9_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™9_±r
;

946 
TW_AUDIO_IN_CHAN10_ID
:

947 
ªt
 = 
adpcm_ícode_±r
->
ch10_ch16_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™10_±r
;

949 
TW_AUDIO_IN_CHAN11_ID
:

950 
ªt
 = 
adpcm_ícode_±r
->
ch10_ch16_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™11_±r
;

952 
TW_AUDIO_IN_CHAN12_ID
:

953 
ªt
 = 
adpcm_ícode_±r
->
ch10_ch16_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™12_±r
;

955 
TW_AUDIO_IN_CHAN13_ID
:

956 
ªt
 = 
adpcm_ícode_±r
->
ch10_ch16_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™13_±r
;

958 
TW_AUDIO_IN_CHAN14_ID
:

959 
ªt
 = 
adpcm_ícode_±r
->
ch10_ch16_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™14_±r
;

961 
TW_AUDIO_IN_CHAN15_ID
:

962 
ªt
 = 
adpcm_ícode_±r
->
ch10_ch16_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™15_±r
;

964 
TW_AUDIO_IN_SPEAKER_ID
:

965 
ªt
 = 
adpcm_ícode_±r
->
ch10_ch16_rd_±r_vÆue
.
bô_vÆue
.
audio_ch™16_±r
;

968 
	`¥ötk
("%s.%d:Éºáudiÿch™ id %d\n", 
__FUNCTION__
, 
__LINE__
, 
ch™_id
);

971 *
ext_Êag
 = 
ªt
>>(
	`gë_powî_ba£
((
u32
)
AUDIO_IN_ADPCM_CHAN_SECTION_NUMBER
));

972 
ªt
 &((1<<(
	`gë_powî_ba£
((
u32
)
AUDIO_IN_ADPCM_CHAN_SECTION_NUMBER
)))-1);

973  
ªt
;

974 
	}
}

976 
	$audio_adpcm_ícode_wr_rd_±r_gë_ch™_£˘i⁄_numbî
(
audio_adpcm_ícode_±r_c⁄åﬁ_t
 *
adpcm_ícode_±r
)

978  
adpcm_ícode_±r
->
£˘i⁄_numbî
;

979 
	}
}

981 
	$audio_adpcm_ícode_wr_rd_±r_£t_rd_föish_numbî
(
audio_adpcm_ícode_±r_c⁄åﬁ_t
 *
adpcm_ícode_±r
, 
£˘i⁄_id
, 
dvm_chù_t
 *
chù
)

983 if(
chù
 !
NULL
){

984 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
adpcm_ícode_±r
->
rd_föish_numbî_ªg_off£t
, 
£˘i⁄_id
);

986 
	}
}

988 
audio_adpcm_ícode_wr_rd_±r_›î©i⁄
 
	gaudio_adpcm_ícode_wr_rd_±r_›
 = {

989 .
öô
 = 
audio_adpcm_ícode_wr_rd_±r_öô
,

990 .
	ggë_adpcm_wr_rd_±r
 = 
audio_adpcm_ícode_wr_rd_±r_gë_adpcm_wr_rd_±r
,

992 .
	ggë_ch™_wr_±r
 = 
audio_adpcm_ícode_wr_rd_±r_gë_ch™_wr_±r
,

993 .
	ggë_ch™_rd_±r
 = 
audio_adpcm_ícode_wr_rd_±r_gë_ch™_rd_±r
,

994 .
	ggë_ch™_£˘i⁄_numbî
 = 
audio_adpcm_ícode_wr_rd_±r_gë_ch™_£˘i⁄_numbî
,

995 .
	g£t_rd_föish_numbî
 = 
audio_adpcm_ícode_wr_rd_±r_£t_rd_föish_numbî
,

998 
	$öô_audio_adpcm_ícode_±r_c⁄åﬁ
(
audio_adpcm_ícode_±r_c⁄åﬁ_t
 *
adpcm_ícode_±r
)

1000 
adpcm_ícode_±r
->
›
 = &
audio_adpcm_ícode_wr_rd_±r_›
;

1001 
adpcm_ícode_±r
->
›
->
	`öô
(adpcm_encode_ptr);

1002 
	}
}

1007 
	$audio_adpcm_ícode_d©a_addr_£t_ªg_bô_£˘i⁄_off£t
(
audio_adpcm_ícode_d©a_addr_t
 *
adpcm_ícode_d©a_addr
, 
u32
 
£˘i⁄_off£t
)

1009 
adpcm_ícode_d©a_addr
->
vÆue
.
bô_vÆue
.
£˘i⁄_off£t
 = section_offset;

1010 
	}
}

1012 
u32
 
	$audio_adpcm_ícode_d©a_addr_gë_ªg_bô_£˘i⁄_off£t
(
audio_adpcm_ícode_d©a_addr_t
 *
adpcm_ícode_d©a_addr
)

1014  
adpcm_ícode_d©a_addr
->
vÆue
.
bô_vÆue
.
£˘i⁄_off£t
;

1015 
	}
}

1017 
	$audio_adpcm_ícode_d©a_addr_£t_ªg_bô_£˘i⁄_id
(
audio_adpcm_ícode_d©a_addr_t
 *
adpcm_ícode_d©a_addr
, 
u32
 
£˘i⁄_id
)

1019 
adpcm_ícode_d©a_addr
->
vÆue
.
bô_vÆue
.
£˘i⁄_id
 = section_id;

1020 
	}
}

1022 
u32
 
	$audio_adpcm_ícode_d©a_addr_gë_ªg_bô_£˘i⁄_id
(
audio_adpcm_ícode_d©a_addr_t
 *
adpcm_ícode_d©a_addr
)

1024  
adpcm_ícode_d©a_addr
->
vÆue
.
bô_vÆue
.
£˘i⁄_id
;

1025 
	}
}

1027 
	$audio_adpcm_ícode_d©a_addr_£t_ªg_bô_ch™_id
(
audio_adpcm_ícode_d©a_addr_t
 *
adpcm_ícode_d©a_addr
, 
u32
 
ch™_id
)

1029 
adpcm_ícode_d©a_addr
->
vÆue
.
bô_vÆue
.
ch™_id
 = chan_id;

1030 
	}
}

1032 
u32
 
	$audio_adpcm_ícode_d©a_addr_gë_ªg_bô_ch™_id
(
audio_adpcm_ícode_d©a_addr_t
 *
adpcm_ícode_d©a_addr
)

1034  
adpcm_ícode_d©a_addr
->
vÆue
.
bô_vÆue
.
£˘i⁄_id
;

1035 
	}
}

1037 
	$audio_adpcm_ícode_d©a_addr_£t_ªg_bô_adpcm_ty≥
(
audio_adpcm_ícode_d©a_addr_t
 *
adpcm_ícode_d©a_addr
)

1039 
adpcm_ícode_d©a_addr
->
vÆue
.
bô_vÆue
.
adpcm_ícode_ty≥
 = 
ADUIO_DATA_ADDR_ADPCM_ENCODE_TYPE
;

1040 
	}
}

1042 
u32
 
	$audio_adpcm_ícode_d©a_addr_gë_ªg_bô_adpcm_ty≥
(
audio_adpcm_ícode_d©a_addr_t
 *
adpcm_ícode_d©a_addr
)

1044  
adpcm_ícode_d©a_addr
->
vÆue
.
bô_vÆue
.
adpcm_ícode_ty≥
;

1045 
	}
}

1047 
u32
 
	$audio_adpcm_ícode_d©a_addr_gë_adpcm_ícode_d©a_addr
(
audio_adpcm_ícode_d©a_addr_t
 *
adpcm_ícode_d©a_addr
)

1049  
adpcm_ícode_d©a_addr
->
vÆue
.value;

1050 
	}
}

1052 
	$audio_adpcm_ícode_d©a_addr_gë_buf_∑ge_id
(
audio_adpcm_ícode_d©a_addr_t
 *
adpcm_ícode_d©a_addr
)

1054  
adpcm_ícode_d©a_addr
->
buf_∑ge_id
;

1055 
	}
}

1057 
	$audio_adpcm_ícode_d©a_addr_gë_buf_ö_chù_a_‹_b
(
audio_adpcm_ícode_d©a_addr_t
 *
adpcm_ícode_d©a_addr
)

1059  
adpcm_ícode_d©a_addr
->
chù_a_‹_b
;

1060 
	}
}

1062 
u32
 
	$audio_adpcm_ícode_d©a_addr_gë_adpcm_ícode_d©a_addr_ö_ho°_íd_off£t
(
audio_adpcm_ícode_d©a_addr_t
 *
adpcm_ícode_d©a_addr
)

1064 
u32
 
ho°_íd_off£t
;

1065 
ho°_íd_off£t
 = 
DDRBASE
;

1066 
ho°_íd_off£t
 |(
adpcm_ícode_d©a_addr
->
vÆue
.value<<2);

1067  
ho°_íd_off£t
;

1068 
	}
}

1070 
u32
 
	$audio_adpcm_ícode_d©a_addr_gë_adpcm_ícode_d©a_addr_ö_ddr_íd_off£t
(
audio_adpcm_ícode_d©a_addr_t
 *
adpcm_ícode_d©a_addr
)

1072 
u32
 
ddr_íd_off£t
;

1073 
ddr_íd_off£t
 = (
adpcm_ícode_d©a_addr
->
buf_∑ge_id
<<19);

1074 
ddr_íd_off£t
 |(
adpcm_ícode_d©a_addr
->
vÆue
.value<<2);

1075  
ddr_íd_off£t
;

1076 
	}
}

1078 
	$audio_adpcm_ícode_d©a_addr_öô
(
audio_adpcm_ícode_d©a_addr_t
 *
adpcm_ícode_d©a_addr
, 
∑ge_id
, 
chù_a_‹_b
)

1080 
adpcm_ícode_d©a_addr
->
vÆue
.value = 0;

1081 
adpcm_ícode_d©a_addr
->
vÆue
.
bô_vÆue
.
adpcm_ícode_ty≥
 = 
ADUIO_DATA_ADDR_ADPCM_ENCODE_TYPE
;

1082 
adpcm_ícode_d©a_addr
->
buf_∑ge_id
 = 
∑ge_id
;

1083 
adpcm_ícode_d©a_addr
->
chù_a_‹_b
 = chip_a_or_b;

1084 
	}
}

1086 
audio_adpcm_ícode_d©a_addr_›î©i⁄
 
	gaudio_adpcm_ícode_d©a_addr_›
 = {

1087 .
£t_ªg_bô_£˘i⁄_off£t
 = 
audio_adpcm_ícode_d©a_addr_£t_ªg_bô_£˘i⁄_off£t
,

1088 .
	ggë_ªg_bô_£˘i⁄_off£t
 = 
audio_adpcm_ícode_d©a_addr_gë_ªg_bô_£˘i⁄_off£t
,

1089 .
	g£t_ªg_bô_£˘i⁄_id
 = 
audio_adpcm_ícode_d©a_addr_£t_ªg_bô_£˘i⁄_id
,

1090 .
	ggë_ªg_bô_£˘i⁄_id
 = 
audio_adpcm_ícode_d©a_addr_gë_ªg_bô_£˘i⁄_id
,

1091 .
	g£t_ªg_bô_ch™_id
 = 
audio_adpcm_ícode_d©a_addr_£t_ªg_bô_ch™_id
,

1092 .
	ggë_ªg_bô_ch™_id
 = 
audio_adpcm_ícode_d©a_addr_gë_ªg_bô_ch™_id
,

1093 .
	g£t_ªg_bô_adpcm_ty≥
 = 
audio_adpcm_ícode_d©a_addr_£t_ªg_bô_adpcm_ty≥
,

1094 .
	ggë_ªg_bô_adpcm_ty≥
 = 
audio_adpcm_ícode_d©a_addr_gë_ªg_bô_adpcm_ty≥
,

1095 .
	ggë_adpcm_ícode_d©a_addr
 = 
audio_adpcm_ícode_d©a_addr_gë_adpcm_ícode_d©a_addr
,

1096 .
	ggë_buf_∑ge_id
 = 
audio_adpcm_ícode_d©a_addr_gë_buf_∑ge_id
,

1097 .
	ggë_buf_ö_chù_a_‹_b
 = 
audio_adpcm_ícode_d©a_addr_gë_buf_ö_chù_a_‹_b
,

1098 .
	ggë_adpcm_ícode_d©a_addr_ö_ho°_íd_off£t
 = 
audio_adpcm_ícode_d©a_addr_gë_adpcm_ícode_d©a_addr_ö_ho°_íd_off£t
,

1099 .
	ggë_adpcm_ícode_d©a_addr_ö_ddr_íd_off£t
 = 
audio_adpcm_ícode_d©a_addr_gë_adpcm_ícode_d©a_addr_ö_ddr_íd_off£t
,

1100 .
	göô
 = 
audio_adpcm_ícode_d©a_addr_öô
,

1103 
	$öô_audio_adpcm_ícode_d©a_addr
(
audio_adpcm_ícode_d©a_addr_t
 *
adpcm_ícode_d©a_addr
)

1105 
adpcm_ícode_d©a_addr
->
›
 = &
audio_adpcm_ícode_d©a_addr_›
;

1106 
adpcm_ícode_d©a_addr
->
›
->
	`öô
◊dpcm_ícode_d©a_addr, 
TW_AUDIO_BUF_PAGE_ID
, 
TW_AUDIO_BUF_OF_DDR_ID
);

1107 
	}
}

1112 
	$audio_ícode_c⁄åﬁ_íabÀ_pcm_ch™
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
, 
ch™_id
)

1114 if(
ch™_id
 <
TW_AUDIO_IN_SPEAKER_ID
){

1115 
ícode_c⁄åﬁ
->
pcm_vÆue
.
vÆue
 &~(
AUDIO_DISABLE
<<
ch™_id
);

1116 
ícode_c⁄åﬁ
->
pcm_vÆue
.
vÆue
 |(
AUDIO_ENABLE
<<
ch™_id
);

1118 
	}
}

1120 
	$audio_ícode_c⁄åﬁ_dißbÀ_pcm_ch™
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
, 
ch™_id
)

1122 if(
ch™_id
 <
TW_AUDIO_IN_SPEAKER_ID
){

1123 
ícode_c⁄åﬁ
->
pcm_vÆue
.
vÆue
 &~(
AUDIO_ENABLE
<<
ch™_id
);

1124 
ícode_c⁄åﬁ
->
pcm_vÆue
.
vÆue
 |(
AUDIO_DISABLE
<<
ch™_id
);

1126 
	}
}

1128 
	$audio_ícode_c⁄åﬁ_£t_íabÀ_pcm_ch™
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
, 
ch™_id
, 
í
, 
dvm_chù_t
 *
chù
)

1130 if(
ch™_id
 <
TW_AUDIO_IN_SPEAKER_ID
){

1131 if(
í
 =
AUDIO_ENABLE
){

1132 
ícode_c⁄åﬁ
->
pcm_vÆue
.
vÆue
 &~(
AUDIO_DISABLE
<<
ch™_id
);

1133 
ícode_c⁄åﬁ
->
pcm_vÆue
.
vÆue
 |(
AUDIO_ENABLE
<<
ch™_id
);

1135 
ícode_c⁄åﬁ
->
pcm_vÆue
.
vÆue
 &~(
AUDIO_ENABLE
<<
ch™_id
);

1136 
ícode_c⁄åﬁ
->
pcm_vÆue
.
vÆue
 |(
AUDIO_DISABLE
<<
ch™_id
);

1138 if(
chù
 !
NULL
){

1139 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ícode_c⁄åﬁ
->
pcm_ªg_off£t
,Éncode_c⁄åﬁ->
pcm_vÆue
.
vÆue
);

1142 
	}
}

1144 
	$audio_ícode_c⁄åﬁ_gë_pcm_ch™_°©e
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
, 
ch™_id
)

1146 
ªt
 = 
AUDIO_DISABLE
;

1147 if(
ch™_id
 <
TW_AUDIO_IN_SPEAKER_ID
){

1148 if(
ch™_id
>=0){

1149 
ªt
 = (((
ícode_c⁄åﬁ
->
pcm_vÆue
.
vÆue
)>>
ch™_id
)&0x1);

1151 
	`¥ötk
("%s.%d: impossibÀ,Éº ch™_id = %d\n", 
__FILE__
, 
__LINE__
, 
ch™_id
);

1154  
ªt
;

1155 
	}
}

1157 
	$audio_ícode_c⁄åﬁ_öô_audio_pcm
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
)

1159 
ícode_c⁄åﬁ
->
pcm_vÆue
.
vÆue
 = 0;

1160 
ícode_c⁄åﬁ
->
pcm_ªg_off£t
 = 
AUDIO_IN_ORIG_EN_CONTROL_REG
;

1161 
	}
}

1163 
	$audio_ícode_c⁄åﬁ_íabÀ_adpcm_ch™
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
, 
ch™_id
)

1165 if(
ch™_id
 <
TW_AUDIO_IN_SPEAKER_ID
){

1166 
ícode_c⁄åﬁ
->
adpcm_vÆue
.
vÆue
 &~(
AUDIO_DISABLE
<<
ch™_id
);

1167 
ícode_c⁄åﬁ
->
adpcm_vÆue
.
vÆue
 |(
AUDIO_ENABLE
<<
ch™_id
);

1169 
	}
}

1171 
	$audio_ícode_c⁄åﬁ_dißbÀ_adpcm_ch™
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
, 
ch™_id
)

1173 if(
ch™_id
 <
TW_AUDIO_IN_SPEAKER_ID
){

1174 
ícode_c⁄åﬁ
->
adpcm_vÆue
.
vÆue
 &~(
AUDIO_ENABLE
<<
ch™_id
);

1175 
ícode_c⁄åﬁ
->
adpcm_vÆue
.
vÆue
 |(
AUDIO_DISABLE
<<
ch™_id
);

1177 
	}
}

1179 
	$audio_ícode_c⁄åﬁ_£t_íabÀ_adpcm_ch™
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
, 
ch™_id
, 
í
, 
dvm_chù_t
 *
chù
)

1181 if(
ch™_id
 <
TW_AUDIO_IN_SPEAKER_ID
){

1182 if(
í
 =
AUDIO_ENABLE
){

1183 
ícode_c⁄åﬁ
->
adpcm_vÆue
.
vÆue
 &~(
AUDIO_DISABLE
<<
ch™_id
);

1184 
ícode_c⁄åﬁ
->
adpcm_vÆue
.
vÆue
 |(
AUDIO_ENABLE
<<
ch™_id
);

1186 
ícode_c⁄åﬁ
->
adpcm_vÆue
.
vÆue
 &~(
AUDIO_ENABLE
<<
ch™_id
);

1187 
ícode_c⁄åﬁ
->
adpcm_vÆue
.
vÆue
 |(
AUDIO_DISABLE
<<
ch™_id
);

1189 if(
chù
 !
NULL
){

1190 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ícode_c⁄åﬁ
->
adpcm_ªg_off£t
,Éncode_c⁄åﬁ->
adpcm_vÆue
.
vÆue
);

1193 
	}
}

1195 
	$audio_ícode_c⁄åﬁ_gë_adpcm_ch™_°©e
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
, 
ch™_id
)

1197 
ªt
 = 
AUDIO_DISABLE
;

1198 if(
ch™_id
 <
TW_AUDIO_IN_SPEAKER_ID
){

1199 if(
ch™_id
>=0){

1200 
ªt
 = (((
ícode_c⁄åﬁ
->
adpcm_vÆue
.
vÆue
)>>
ch™_id
)&0x1);

1202 
	`¥ötk
("%s.%d: impossibÀ,Éº ch™_id = %d\n", 
__FILE__
, 
__LINE__
, 
ch™_id
);

1205  
ªt
;

1206 
	}
}

1208 
	$audio_ícode_c⁄åﬁ_öô_audio_adpcm
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
)

1210 
ícode_c⁄åﬁ
->
adpcm_vÆue
.
vÆue
 = 0;

1211 
ícode_c⁄åﬁ
->
adpcm_ªg_off£t
 = 
AUDIO_IN_ADPCM_EN_CONTROL_REG
;

1212 
	}
}

1214 
	$audio_ícode_c⁄åﬁ_upd©e_audio_ßm∂e_øã
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
, 
ßm∂e_øã
)

1216 
ícode_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ßm∂e_øã
 = 
ßm∂e_øã
;

1217 
	}
}

1219 
	$audio_ícode_c⁄åﬁ_gë_audio_ßm∂e_øã
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
)

1221  
ícode_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ßm∂e_øã
;

1222 
	}
}

1224 
	$audio_ícode_c⁄åﬁ_£t_audio_ßm∂e_øã
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
, 
ßm∂e_øã
, 
dvm_chù_t
 *
chù
)

1226 
ícode_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ßm∂e_øã
 = 
ßm∂e_øã
;

1227 if(
chù
 !
NULL
){

1228 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ícode_c⁄åﬁ
->
pcm_ªg_off£t
,Éncode_c⁄åﬁ->
pcm_vÆue
.
vÆue
);

1230 
	}
}

1232 
	$audio_ícode_c⁄åﬁ_upd©e_audio_ty≥
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
, 
audio_ty≥
)

1234 
ícode_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ty≥
 =áudio_type;

1235 
	}
}

1237 
	$audio_ícode_c⁄åﬁ_gë_audio_ty≥
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
)

1239  
ícode_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ty≥
;

1240 
	}
}

1242 
	$audio_ícode_c⁄åﬁ_£t_audio_ty≥
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
, 
audio_ty≥
, 
dvm_chù_t
 *
chù
)

1244 
ícode_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
audio_ty≥
 =áudio_type;

1245 if(
chù
 !
NULL
){

1246 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ícode_c⁄åﬁ
->
pcm_ªg_off£t
,Éncode_c⁄åﬁ->
pcm_vÆue
.
vÆue
);

1248 
	}
}

1250 
	$audio_ícode_c⁄åﬁ_upd©e_bô_wide
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
, 
bô_wide
)

1252 
ícode_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
AD_BIT_WIDE
 = 
bô_wide
;

1253 
	}
}

1255 
	$audio_ícode_c⁄åﬁ_gë_bô_wide
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
)

1257  
ícode_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
AD_BIT_WIDE
;

1258 
	}
}

1260 
	$audio_ícode_c⁄åﬁ_£t_bô_wide
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
, 
bô_wide
, 
dvm_chù_t
 *
chù
)

1262 
ícode_c⁄åﬁ
->
pcm_vÆue
.
bô_vÆue
.
AD_BIT_WIDE
 = 
bô_wide
;

1263 if(
chù
 !
NULL
){

1264 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ícode_c⁄åﬁ
->
pcm_ªg_off£t
,Éncode_c⁄åﬁ->
pcm_vÆue
.
vÆue
);

1266 
	}
}

1268 
	$audio_ícode_c⁄åﬁ_£t_audio_∑øm
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
, 
dvm_chù_t
 *
chù
)

1270 if(
chù
 !
NULL
){

1271 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ícode_c⁄åﬁ
->
pcm_ªg_off£t
,Éncode_c⁄åﬁ->
pcm_vÆue
.
vÆue
);

1272 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ícode_c⁄åﬁ
->
adpcm_ªg_off£t
,Éncode_c⁄åﬁ->
adpcm_vÆue
.
vÆue
);

1274 
	}
}

1276 
	$audio_ícode_c⁄åﬁ_gë_audio_∑øm
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
, 
dvm_chù_t
 *
chù
)

1278 if(
chù
 !
NULL
){

1282 
	}
}

1284 
audio_ícode_c⁄åﬁ_›î©i⁄
 
	gaudio_ícode_c⁄åﬁ_›
 = {

1285 .
íabÀ_pcm_ch™
 = 
audio_ícode_c⁄åﬁ_íabÀ_pcm_ch™
,

1286 .
	gdißbÀ_pcm_ch™
 = 
audio_ícode_c⁄åﬁ_dißbÀ_pcm_ch™
,

1287 .
	g£t_íabÀ_pcm_ch™
 = 
audio_ícode_c⁄åﬁ_£t_íabÀ_pcm_ch™
,

1288 .
	ggë_pcm_ch™_°©e
 = 
audio_ícode_c⁄åﬁ_gë_pcm_ch™_°©e
,

1289 .
	göô_audio_pcm
 = 
audio_ícode_c⁄åﬁ_öô_audio_pcm
,

1291 .
	gíabÀ_adpcm_ch™
 = 
audio_ícode_c⁄åﬁ_íabÀ_adpcm_ch™
,

1292 .
	gdißbÀ_adpcm_ch™
 = 
audio_ícode_c⁄åﬁ_dißbÀ_adpcm_ch™
,

1293 .
	g£t_íabÀ_adpcm_ch™
 = 
audio_ícode_c⁄åﬁ_£t_íabÀ_adpcm_ch™
,

1294 .
	ggë_adpcm_ch™_°©e
 = 
audio_ícode_c⁄åﬁ_gë_adpcm_ch™_°©e
,

1295 .
	göô_audio_adpcm
 = 
audio_ícode_c⁄åﬁ_öô_audio_adpcm
,

1297 .
	gupd©e_audio_ßm∂e_øã
 = 
audio_ícode_c⁄åﬁ_upd©e_audio_ßm∂e_øã
,

1298 .
	ggë_audio_ßm∂e_øã
 = 
audio_ícode_c⁄åﬁ_gë_audio_ßm∂e_øã
,

1299 .
	g£t_audio_ßm∂e_øã
 = 
audio_ícode_c⁄åﬁ_£t_audio_ßm∂e_øã
,

1300 .
	gupd©e_audio_ty≥
 = 
audio_ícode_c⁄åﬁ_upd©e_audio_ty≥
,

1301 .
	ggë_audio_ty≥
 = 
audio_ícode_c⁄åﬁ_gë_audio_ty≥
,

1302 .
	g£t_audio_ty≥
 = 
audio_ícode_c⁄åﬁ_£t_audio_ty≥
,

1303 .
	gupd©e_bô_wide
 = 
audio_ícode_c⁄åﬁ_upd©e_bô_wide
,

1304 .
	ggë_bô_wide

audio_ícode_c⁄åﬁ_gë_bô_wide
,

1305 .
	g£t_bô_wide
 = 
audio_ícode_c⁄åﬁ_£t_bô_wide
,

1307 .
	g£t_audio_∑øm
 = 
audio_ícode_c⁄åﬁ_£t_audio_∑øm
,

1308 .
	ggë_audio_∑øm
 = 
audio_ícode_c⁄åﬁ_gë_audio_∑øm
,

1311 
	$öô_audio_ícode_c⁄åﬁ
(
audio_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
)

1313 
ícode_c⁄åﬁ
->
›
 = &
audio_ícode_c⁄åﬁ_›
;

1314 
ícode_c⁄åﬁ
->
›
->
	`öô_audio_pcm
(encode_control);

1315 
ícode_c⁄åﬁ
->
›
->
	`öô_audio_adpcm
(encode_control);

1316 
	}
}

1321 
	$audio_decode_c⁄åﬁ_öô
(
audio_decode_c⁄åﬁ_t
 *
decode_c⁄åﬁ
)

1323 
decode_c⁄åﬁ
->
vÆue
.value = 0;

1324 
decode_c⁄åﬁ
->
ªg_off£t
 = 
AUDIO_OUT_CONTROL_REG
;

1325 
	}
}

1327 
	$audio_decode_c⁄åﬁ_upd©e_decode_ch™_muã
(
audio_decode_c⁄åﬁ_t
 *
decode_c⁄åﬁ
, 
ch™_id
, 
muã
)

1329 
ch™_id
){

1330 
TW_AUDIO_OUT_SPEAKER_ID
:

1331 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™0_muã
 = 
muã
;

1333 
TW_AUDIO_OUT_PLAYBACK_ID
:

1334 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™1_muã
 = 
muã
;

1339 
	}
}

1341 
	$audio_decode_c⁄åﬁ_gë_decode_ch™_muã
(
audio_decode_c⁄åﬁ_t
 *
decode_c⁄åﬁ
, 
ch™_id
)

1343 
ªt
 = 
AUDIO_MUTE_ENABLE
;

1344 
ch™_id
){

1345 
TW_AUDIO_OUT_SPEAKER_ID
:

1346 
ªt
 = 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™0_muã
;

1348 
TW_AUDIO_OUT_PLAYBACK_ID
:

1349 
ªt
 = 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™1_muã
;

1354  
ªt
;

1355 
	}
}

1357 
	$audio_decode_c⁄åﬁ_£t_decode_ch™_muã
(
audio_decode_c⁄åﬁ_t
 *
decode_c⁄åﬁ
, 
ch™_id
, 
muã
, 
dvm_chù_t
 *
chù
)

1359 if(
chù
 !
NULL
){

1360 
ch™_id
){

1361 
TW_AUDIO_OUT_SPEAKER_ID
:

1362 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™0_muã
 = 
muã
;

1364 
TW_AUDIO_OUT_PLAYBACK_ID
:

1365 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™1_muã
 = 
muã
;

1370 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
decode_c⁄åﬁ
->
ªg_off£t
, decode_c⁄åﬁ->
vÆue
.value);

1372 
	}
}

1374 
	$audio_decode_c⁄åﬁ_upd©e_decode_ch™_bô_wide
(
audio_decode_c⁄åﬁ_t
 *
decode_c⁄åﬁ
, 
ch™_id
, 
bô_wide
)

1376 
ch™_id
){

1377 
TW_AUDIO_OUT_SPEAKER_ID
:

1378 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™0_DA_BIT_WIDE
 = 
bô_wide
;

1380 
TW_AUDIO_OUT_PLAYBACK_ID
:

1381 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™1_DA_BIT_WIDE
 = 
bô_wide
;

1386 
	}
}

1388 
	$audio_decode_c⁄åﬁ_gë_decode_ch™_bô_wide
(
audio_decode_c⁄åﬁ_t
 *
decode_c⁄åﬁ
, 
ch™_id
)

1390 
ªt
 = 
TW_AUDIO_16BIT
;

1391 
ch™_id
){

1392 
TW_AUDIO_OUT_SPEAKER_ID
:

1393 
ªt
 = 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™0_DA_BIT_WIDE
;

1395 
TW_AUDIO_OUT_PLAYBACK_ID
:

1396 
ªt
 = 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™1_DA_BIT_WIDE
;

1401  
ªt
;

1402 
	}
}

1404 
	$audio_decode_c⁄åﬁ_£t_decode_ch™_bô_wide
(
audio_decode_c⁄åﬁ_t
 *
decode_c⁄åﬁ
, 
ch™_id
, 
bô_wide
, 
dvm_chù_t
 *
chù
)

1406 if(
chù
 !
NULL
){

1407 
ch™_id
){

1408 
TW_AUDIO_OUT_SPEAKER_ID
:

1409 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™0_DA_BIT_WIDE
 = 
bô_wide
;

1411 
TW_AUDIO_OUT_PLAYBACK_ID
:

1412 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™1_DA_BIT_WIDE
 = 
bô_wide
;

1417 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
decode_c⁄åﬁ
->
ªg_off£t
, decode_c⁄åﬁ->
vÆue
.value);

1419 
	}
}

1421 
	$audio_decode_c⁄åﬁ_upd©e_decode_ch™_íabÀ
(
audio_decode_c⁄åﬁ_t
 *
decode_c⁄åﬁ
, 
ch™_id
, 
íabÀ
)

1423 
ch™_id
){

1424 
TW_AUDIO_OUT_SPEAKER_ID
:

1425 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™0_íabÀ
 = 
íabÀ
;

1427 
TW_AUDIO_OUT_PLAYBACK_ID
:

1428 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™1_íabÀ
 = 
íabÀ
;

1433 
	}
}

1435 
	$audio_decode_c⁄åﬁ_gë_decode_ch™_íabÀ
(
audio_decode_c⁄åﬁ_t
 *
decode_c⁄åﬁ
, 
ch™_id
)

1437 
ªt
 = 
AUDIO_DISABLE
;

1438 
ch™_id
){

1439 
TW_AUDIO_OUT_SPEAKER_ID
:

1440 
ªt
 = 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™0_íabÀ
;

1442 
TW_AUDIO_OUT_PLAYBACK_ID
:

1443 
ªt
 = 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™1_íabÀ
;

1448  
ªt
;

1449 
	}
}

1451 
	$audio_decode_c⁄åﬁ_£t_decode_ch™_íabÀ
(
audio_decode_c⁄åﬁ_t
 *
decode_c⁄åﬁ
, 
ch™_id
, 
íabÀ
, 
dvm_chù_t
 *
chù
)

1453 if(
chù
 !
NULL
){

1454 
ch™_id
){

1455 
TW_AUDIO_OUT_SPEAKER_ID
:

1456 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™0_íabÀ
 = 
íabÀ
;

1458 
TW_AUDIO_OUT_PLAYBACK_ID
:

1459 
decode_c⁄åﬁ
->
vÆue
.
bô_vÆue
.
audio_out_ch™1_íabÀ
 = 
íabÀ
;

1464 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
decode_c⁄åﬁ
->
ªg_off£t
, decode_c⁄åﬁ->
vÆue
.value);

1466 
	}
}

1468 
	$audio_decode_c⁄åﬁ_£t_decode_∑øm
(
audio_decode_c⁄åﬁ_t
 *
decode_c⁄åﬁ
, 
dvm_chù_t
 *
chù
)

1470 if(
chù
 !
NULL
){

1471 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
decode_c⁄åﬁ
->
ªg_off£t
, decode_c⁄åﬁ->
vÆue
.value);

1473 
	}
}

1475 
	$audio_decode_c⁄åﬁ_gë_decode_∑øm
(
audio_decode_c⁄åﬁ_t
 *
decode_c⁄åﬁ
, 
dvm_chù_t
 *
chù
)

1477 if(
chù
 !
NULL
){

1480 
	}
}

1482 
audio_decode_c⁄åﬁ_›î©i⁄
 
	gaudio_decode_c⁄åﬁ_›
 = {

1483 .
öô
 = 
audio_decode_c⁄åﬁ_öô
,

1484 .
	gupd©e_decode_ch™_muã
 = 
audio_decode_c⁄åﬁ_upd©e_decode_ch™_muã
,

1485 .
	ggë_decode_ch™_muã
 = 
audio_decode_c⁄åﬁ_gë_decode_ch™_muã
,

1486 .
	g£t_decode_ch™_muã
 = 
audio_decode_c⁄åﬁ_£t_decode_ch™_muã
,

1487 .
	gupd©e_decode_ch™_bô_wide
 = 
audio_decode_c⁄åﬁ_upd©e_decode_ch™_bô_wide
,

1488 .
	ggë_decode_ch™_bô_wide
 = 
audio_decode_c⁄åﬁ_gë_decode_ch™_bô_wide
,

1489 .
	g£t_decode_ch™_bô_wide
 = 
audio_decode_c⁄åﬁ_£t_decode_ch™_bô_wide
,

1490 .
	gupd©e_decode_ch™_íabÀ
 = 
audio_decode_c⁄åﬁ_upd©e_decode_ch™_íabÀ
,

1491 .
	ggë_decode_ch™_íabÀ
 = 
audio_decode_c⁄åﬁ_gë_decode_ch™_íabÀ
,

1492 .
	g£t_decode_ch™_íabÀ
 = 
audio_decode_c⁄åﬁ_£t_decode_ch™_íabÀ
,

1494 .
	g£t_decode_∑øm
 = 
audio_decode_c⁄åﬁ_£t_decode_∑øm
,

1495 .
	ggë_decode_∑øm
 = 
audio_decode_c⁄åﬁ_gë_decode_∑øm
,

1498 
	$öô_audio_decode_c⁄åﬁ
(
audio_decode_c⁄åﬁ_t
 *
decode_c⁄åﬁ
)

1500 
decode_c⁄åﬁ
->
›
 = &
audio_decode_c⁄åﬁ_›
;

1501 
decode_c⁄åﬁ
->
›
->
	`öô
(decode_control);

1502 
	}
}

1507 
	$audio_decode_±r_c⁄åﬁ_öô
(
audio_decode_±r_c⁄åﬁ_t
 *
decode_±r
)

1509 
decode_±r
->
wr_rd_vÆue
.
vÆue
 = 0;

1510 
decode_±r
->
wr_rd_ªg_off£t
 = 
ADPCM_DECODE_RD_WR_PTR_REG
;

1511 
decode_±r
->
£˘i⁄_numbî
 = 
AUDIO_OUT_CHAN_SECTION_NUMBER
;

1512 
	}
}

1514 
	$audio_decode_±r_c⁄åﬁ_gë_adpcm_wr_rd_±r
(
audio_decode_±r_c⁄åﬁ_t
 *
decode_±r
, 
dvm_chù_t
 *
chù
)

1516 if(
chù
 !
NULL
){

1517 
decode_±r
->
wr_rd_vÆue
.
vÆue
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, decode_±r->
wr_rd_ªg_off£t
);

1519 
	}
}

1521 
	$audio_decode_±r_c⁄åﬁ_gë_ch™_wr_±r
(
audio_decode_±r_c⁄åﬁ_t
 *
decode_±r
, 
ch™_id
, *
ext_Êag
)

1523 
ªt
 = 
INVALID_TW_AUDIO_SECTION_ID
;

1524 
ch™_id
){

1525 
TW_AUDIO_OUT_SPEAKER_ID
:

1526 
ªt
 = 
decode_±r
->
wr_rd_vÆue
.
bô_vÆue
.
ch™0_wr_±r
;

1528 
TW_AUDIO_OUT_PLAYBACK_ID
:

1529 
ªt
 = 
decode_±r
->
wr_rd_vÆue
.
bô_vÆue
.
ch™1_wr_±r
;

1532 
	`¥ötk
("%s.%d:Éºáudiÿch™ id %d\n", 
__FUNCTION__
, 
__LINE__
, 
ch™_id
);

1535 *
ext_Êag
 = 
ªt
>>(
	`gë_powî_ba£
((
u32
)
AUDIO_OUT_CHAN_SECTION_NUMBER
));

1536 
ªt
 &((1<<(
	`gë_powî_ba£
((
u32
)
AUDIO_OUT_CHAN_SECTION_NUMBER
)))-1);

1537  
ªt
;

1538 
	}
}

1540 
	$audio_decode_±r_c⁄åﬁ_gë_ch™_rd_±r
(
audio_decode_±r_c⁄åﬁ_t
 *
decode_±r
, 
ch™_id
, *
ext_Êag
)

1542 
ªt
 = 
INVALID_TW_AUDIO_SECTION_ID
;

1543 
ch™_id
){

1544 
TW_AUDIO_OUT_SPEAKER_ID
:

1545 
ªt
 = 
decode_±r
->
wr_rd_vÆue
.
bô_vÆue
.
ch™0_rd_±r
;

1547 
TW_AUDIO_OUT_PLAYBACK_ID
:

1548 
ªt
 = 
decode_±r
->
wr_rd_vÆue
.
bô_vÆue
.
ch™1_rd_±r
;

1551 
	`¥ötk
("%s.%d:Éºáudiÿch™ id %d\n", 
__FUNCTION__
, 
__LINE__
, 
ch™_id
);

1554 *
ext_Êag
 = 
ªt
>>(
	`gë_powî_ba£
((
u32
)
AUDIO_OUT_CHAN_SECTION_NUMBER
));

1555 
ªt
 &((1<<(
	`gë_powî_ba£
((
u32
)
AUDIO_OUT_CHAN_SECTION_NUMBER
)))-1);

1556  
ªt
;

1557 
	}
}

1559 
	$audio_decode_±r_c⁄åﬁ_gë_ch™_£˘i⁄_numbî
(
audio_decode_±r_c⁄åﬁ_t
 *
decode_±r
)

1561  
decode_±r
->
£˘i⁄_numbî
;

1562 
	}
}

1564 
	$audio_decode_±r_c⁄åﬁ_£t_föish_wr_±r
(
audio_decode_±r_c⁄åﬁ_t
 *
decode_±r
, 
föish_id
, 
dvm_chù_t
 *
chù
, 
ch™_id
)

1566 if(
chù
 !
NULL
){

1567 
föish_id
++;

1568 if(
föish_id
 >(
decode_±r
->
£˘i⁄_numbî
<<1)){

1569 
föish_id
 = 0;

1571 if(
ch™_id
 =
TW_AUDIO_OUT_SPEAKER_ID
){

1572 
decode_±r
->
wr_rd_vÆue
.
bô_vÆue
.
ch™0_wr_±r
 = 
föish_id
;

1574 
decode_±r
->
wr_rd_vÆue
.
bô_vÆue
.
ch™1_wr_±r
 = 
föish_id
;

1576 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
decode_±r
->
wr_rd_ªg_off£t
, decode_±r->
wr_rd_vÆue
.
vÆue
);

1578 
	}
}

1580 
audio_decode_±r_c⁄åﬁ_›î©i⁄
 
	gaudio_decode_±r_c⁄åﬁ_›
 = {

1581 .
öô
 = 
audio_decode_±r_c⁄åﬁ_öô
,

1582 .
	ggë_adpcm_wr_rd_±r
 = 
audio_decode_±r_c⁄åﬁ_gë_adpcm_wr_rd_±r
,

1584 .
	ggë_ch™_wr_±r
 = 
audio_decode_±r_c⁄åﬁ_gë_ch™_wr_±r
,

1585 .
	ggë_ch™_rd_±r
 = 
audio_decode_±r_c⁄åﬁ_gë_ch™_rd_±r
,

1586 .
	ggë_ch™_£˘i⁄_numbî
 = 
audio_decode_±r_c⁄åﬁ_gë_ch™_£˘i⁄_numbî
,

1587 .
	g£t_föish_wr_±r
 = 
audio_decode_±r_c⁄åﬁ_£t_föish_wr_±r
,

1590 
	$öô_audio_decode_±r_c⁄åﬁ
(
audio_decode_±r_c⁄åﬁ_t
 *
decode_±r
)

1592 
decode_±r
->
›
 = &
audio_decode_±r_c⁄åﬁ_›
;

1593 
decode_±r
->
›
->
	`öô
(decode_ptr);

1594 
	}
}

1599 
	$audio_decode_d©a_addr_£t_ªg_bô_£˘i⁄_off£t
(
audio_decode_d©a_addr_t
 *
decode_d©a_addr
, 
u32
 
£˘i⁄_off£t
)

1601 
decode_d©a_addr
->
vÆue
.
bô_vÆue
.
£˘i⁄_off£t
 = section_offset;

1602 
	}
}

1604 
u32
 
	$audio_decode_d©a_addr_gë_ªg_bô_£˘i⁄_off£t
(
audio_decode_d©a_addr_t
 *
decode_d©a_addr
)

1606  
decode_d©a_addr
->
vÆue
.
bô_vÆue
.
£˘i⁄_off£t
;

1607 
	}
}

1609 
	$audio_decode_d©a_addr_£t_ªg_bô_£˘i⁄_id
(
audio_decode_d©a_addr_t
 *
decode_d©a_addr
, 
u32
 
£˘i⁄_id
)

1611 
decode_d©a_addr
->
vÆue
.
bô_vÆue
.
£˘i⁄_id
 = section_id;

1612 
	}
}

1614 
u32
 
	$audio_decode_d©a_addr_gë_ªg_bô_£˘i⁄_id
(
audio_decode_d©a_addr_t
 *
decode_d©a_addr
)

1616  
decode_d©a_addr
->
vÆue
.
bô_vÆue
.
£˘i⁄_id
;

1617 
	}
}

1619 
	$audio_decode_d©a_addr_£t_ªg_bô_ch™_id
(
audio_decode_d©a_addr_t
 *
decode_d©a_addr
, 
u32
 
ch™_id
)

1621 
decode_d©a_addr
->
vÆue
.
bô_vÆue
.
ch™_id
 = chan_id;

1622 
	}
}

1624 
u32
 
	$audio_decode_d©a_addr_gë_ªg_bô_ch™_id
(
audio_decode_d©a_addr_t
 *
decode_d©a_addr
)

1626  
decode_d©a_addr
->
vÆue
.
bô_vÆue
.
ch™_id
;

1627 
	}
}

1629 
	$audio_decode_d©a_addr_£t_ªg_bô_decode_ty≥
(
audio_decode_d©a_addr_t
 *
decode_d©a_addr
)

1631 
decode_d©a_addr
->
vÆue
.
bô_vÆue
.
decode_ty≥
 = 
AUDIO_DATA_ADDR_ADPCM_DECODE_TYPE
;

1632 
	}
}

1634 
u32
 
	$audio_decode_d©a_addr_gë_ªg_bô_decode_ty≥
(
audio_decode_d©a_addr_t
 *
decode_d©a_addr
)

1636  
decode_d©a_addr
->
vÆue
.
bô_vÆue
.
decode_ty≥
;

1637 
	}
}

1639 
u32
 
	$audio_decode_d©a_addr_gë_decode_d©a_addr
(
audio_decode_d©a_addr_t
 *
decode_d©a_addr
)

1641  
decode_d©a_addr
->
vÆue
.value;

1642 
	}
}

1644 
	$audio_decode_d©a_addr_gë_buf_∑ge_id
(
audio_decode_d©a_addr_t
 *
decode_d©a_addr
)

1646  
decode_d©a_addr
->
buf_∑ge_id
;

1647 
	}
}

1649 
	$audio_decode_d©a_addr_gë_buf_ö_chù_a_‹_b
(
audio_decode_d©a_addr_t
 *
decode_d©a_addr
)

1651  
decode_d©a_addr
->
chù_a_‹_b
;

1652 
	}
}

1654 
u32
 
	$audio_decode_d©a_addr_gë_adpcm_decode_d©a_addr_ö_ho°_íd_off£t
(
audio_decode_d©a_addr_t
 *
decode_d©a_addr
)

1656 
u32
 
ho°_íd_off£t
;

1657 
ho°_íd_off£t
 = 
DDRBASE
;

1658 
ho°_íd_off£t
 |(
decode_d©a_addr
->
vÆue
.value<<2);

1659  
ho°_íd_off£t
;

1660 
	}
}

1662 
u32
 
	$audio_decode_d©a_addr_gë_adpcm_decode_d©a_addr_ö_ddr_íd_off£t
(
audio_decode_d©a_addr_t
 *
decode_d©a_addr
)

1664 
u32
 
ddr_íd_off£t
;

1665 
ddr_íd_off£t
 = (
decode_d©a_addr
->
buf_∑ge_id
<<19);

1666 
ddr_íd_off£t
 |(
decode_d©a_addr
->
vÆue
.value<<2);

1667  
ddr_íd_off£t
;

1668 
	}
}

1670 
	$audio_decode_d©a_addr_öô
(
audio_decode_d©a_addr_t
 *
decode_d©a_addr
)

1672 if(
decode_d©a_addr
 !
NULL
){

1673 
decode_d©a_addr
->
vÆue
.value = 0;

1674 
decode_d©a_addr
->
vÆue
.
bô_vÆue
.
decode_ty≥
 = 
AUDIO_DATA_ADDR_ADPCM_DECODE_TYPE
;

1675 
decode_d©a_addr
->
buf_∑ge_id
 = 
TW_AUDIO_BUF_PAGE_ID
;

1676 
decode_d©a_addr
->
chù_a_‹_b
 = 
TW_AUDIO_BUF_OF_DDR_ID
;

1678 
	}
}

1680 
audio_decode_d©a_addr_›î©i⁄
 
	gaudio_decode_d©a_addr_›
 = {

1681 .
£t_ªg_bô_£˘i⁄_off£t
 = 
audio_decode_d©a_addr_£t_ªg_bô_£˘i⁄_off£t
,

1682 .
	ggë_ªg_bô_£˘i⁄_off£t
 = 
audio_decode_d©a_addr_gë_ªg_bô_£˘i⁄_off£t
,

1683 .
	g£t_ªg_bô_£˘i⁄_id
 = 
audio_decode_d©a_addr_£t_ªg_bô_£˘i⁄_id
,

1684 .
	ggë_ªg_bô_£˘i⁄_id
 = 
audio_decode_d©a_addr_gë_ªg_bô_£˘i⁄_id
,

1685 .
	g£t_ªg_bô_ch™_id
 = 
audio_decode_d©a_addr_£t_ªg_bô_ch™_id
,

1686 .
	ggë_ªg_bô_ch™_id
 = 
audio_decode_d©a_addr_gë_ªg_bô_ch™_id
,

1687 .
	g£t_ªg_bô_decode_ty≥
 = 
audio_decode_d©a_addr_£t_ªg_bô_decode_ty≥
,

1688 .
	ggë_ªg_bô_decode_ty≥
 = 
audio_decode_d©a_addr_gë_ªg_bô_decode_ty≥
,

1689 .
	ggë_decode_d©a_addr
 = 
audio_decode_d©a_addr_gë_decode_d©a_addr
,

1690 .
	ggë_buf_∑ge_id
 = 
audio_decode_d©a_addr_gë_buf_∑ge_id
,

1691 .
	ggë_buf_ö_chù_a_‹_b
 = 
audio_decode_d©a_addr_gë_buf_ö_chù_a_‹_b
,

1692 .
	ggë_adpcm_decode_d©a_addr_ö_ho°_íd_off£t
 = 
audio_decode_d©a_addr_gë_adpcm_decode_d©a_addr_ö_ho°_íd_off£t
,

1693 .
	ggë_adpcm_decode_d©a_addr_ö_ddr_íd_off£t
 = 
audio_decode_d©a_addr_gë_adpcm_decode_d©a_addr_ö_ddr_íd_off£t
,

1694 .
	göô
 = 
audio_decode_d©a_addr_öô
,

1697 
	$öô_audio_decode_d©a_addr
(
audio_decode_d©a_addr_t
 *
decode_d©a_addr
)

1699 
decode_d©a_addr
->
›
 = &
audio_decode_d©a_addr_›
;

1700 
decode_d©a_addr
->
›
->
	`öô
(decode_data_addr);

1701 
	}
}

1706 
	$chù_audio_ícode_öô
(
chù_audio_ícode_t
 *
audio_ícode
)

1708 if(
audio_ícode
 !
NULL
){

1709 
	`öô_audio_ícode_¥›îty
(&
audio_ícode
->
c⁄fig_∑øm
, &
deÁu…_audio_ícode_c⁄fig_des¸ùt‹
);

1710 
	`öô_audio_ícode_c⁄åﬁ
(&
audio_ícode
->
audio_c⁄åﬁ
);

1711 
	`öô_audio_pcm_ícode_±r_c⁄åﬁ
(&
audio_ícode
->
pcm_audio_±r
);

1712 
	`öô_audio_pcm_ícode_d©a_addr
(&
audio_ícode
->
pcm_audio_d©a_ba£
);

1713 
	`öô_audio_adpcm_ícode_±r_c⁄åﬁ
(&
audio_ícode
->
adpcm_audio_±r
);

1714 
	`öô_audio_adpcm_ícode_d©a_addr
(&
audio_ícode
->
adpcm_audio_d©a_ba£
);

1716 
	}
}

1718 
	$chù_audio_ícode_£t_íabÀ_audio_ícode_ch™
(
chù_audio_ícode_t
 *
audio_ícode
, 
ch™_id
, 
íabÀ
, 
dvm_chù_t
 *
chù
)

1720 
audio_ícode_c⁄åﬁ_t
 *
audio_c⁄åﬁ
;

1721 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
;

1722 
chù_audio_t
 *
chù_audio
;

1724 
audio_c⁄åﬁ
 = &
audio_ícode
->audio_control;

1725 
chù_audio
 = 
	`to_gë_chù_audio_wôh_audio_ícode
(
audio_ícode
);

1726 
c⁄fig_∑øm
 = &
audio_ícode
->config_param;

1727 if(
audio_c⁄åﬁ
->
›
 !
NULL
){

1728 
audio_íabÀ_c⁄åﬁ_t
 *
audio_íabÀ
 = &
chù_audio
->audio_enable;

1729 if((
audio_íabÀ
->
›
!=
NULL
Ë&& (
c⁄fig_∑øm
->op!=NULL)){

1730 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param)){

1731 
TW_AUDIO_PCM
:

1732 
audio_íabÀ
->
›
->
	`£t_íabÀ_adpcm_ícode
◊udio_íabÀ, 
AUDIO_DISABLE
, 
chù
);

1733 
audio_c⁄åﬁ
->
›
->
	`£t_íabÀ_adpcm_ch™
◊udio_c⁄åﬁ, 
ch™_id
, 
AUDIO_DISABLE
, 
chù
);

1734 if(
íabÀ
 =
AUDIO_ENABLE
){

1735 
audio_íabÀ
->
›
->
	`£t_íabÀ_pcm_ícode
◊udio_íabÀ, 
AUDIO_ENABLE
, 
chù
);

1736 
audio_c⁄åﬁ
->
›
->
	`£t_íabÀ_pcm_ch™
◊udio_c⁄åﬁ, 
ch™_id
, 
AUDIO_ENABLE
, 
chù
);

1737 } if(
íabÀ
 =
AUDIO_DISABLE
){

1738 
audio_c⁄åﬁ
->
›
->
	`£t_íabÀ_pcm_ch™
◊udio_c⁄åﬁ, 
ch™_id
, 
AUDIO_DISABLE
, 
chù
);

1739 
audio_íabÀ
->
›
->
	`£t_íabÀ_pcm_ícode
◊udio_íabÀ, 
AUDIO_DISABLE
, 
chù
);

1742 
TW_AUDIO_ADPCM_32K
:

1743 if(
íabÀ
 =
AUDIO_ENABLE
){

1744 
audio_íabÀ
->
›
->
	`£t_íabÀ_pcm_ícode
◊udio_íabÀ, 
AUDIO_ENABLE
, 
chù
);

1745 
audio_c⁄åﬁ
->
›
->
	`£t_íabÀ_pcm_ch™
◊udio_c⁄åﬁ, 
ch™_id
, 
AUDIO_ENABLE
, 
chù
);

1746 
audio_íabÀ
->
›
->
	`£t_íabÀ_adpcm_ícode
◊udio_íabÀ, 
AUDIO_ENABLE
, 
chù
);

1747 
audio_c⁄åﬁ
->
›
->
	`£t_íabÀ_adpcm_ch™
◊udio_c⁄åﬁ, 
ch™_id
, 
AUDIO_ENABLE
, 
chù
);

1748 } if(
íabÀ
 =
AUDIO_DISABLE
){

1749 
audio_c⁄åﬁ
->
›
->
	`£t_íabÀ_adpcm_ch™
◊udio_c⁄åﬁ, 
ch™_id
, 
AUDIO_DISABLE
, 
chù
);

1750 
audio_íabÀ
->
›
->
	`£t_íabÀ_adpcm_ícode
◊udio_íabÀ, 
AUDIO_DISABLE
, 
chù
);

1751 
audio_c⁄åﬁ
->
›
->
	`£t_íabÀ_pcm_ch™
◊udio_c⁄åﬁ, 
ch™_id
, 
AUDIO_DISABLE
, 
chù
);

1752 
audio_íabÀ
->
›
->
	`£t_íabÀ_pcm_ícode
◊udio_íabÀ, 
AUDIO_DISABLE
, 
chù
);

1756 
	`¥ötk
("%s.%d:ÇÿsuΩp‹à%dÅy≥\n", 
__FUNCTION__
, 
__LINE__
, 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param));

1761 
	}
}

1763 
	$chù_audio_ícode_upd©e_íabÀ_audio_ícode_ch™
(
chù_audio_ícode_t
 *
audio_ícode
, 
ch™_id
, 
íabÀ
)

1765 
audio_ícode_c⁄åﬁ_t
 *
audio_c⁄åﬁ
;

1766 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
;

1767 
chù_audio_t
 *
chù_audio
;

1769 
audio_c⁄åﬁ
 = &
audio_ícode
->audio_control;

1770 
chù_audio
 = 
	`to_gë_chù_audio_wôh_audio_ícode
(
audio_ícode
);

1771 
c⁄fig_∑øm
 = &
audio_ícode
->config_param;

1772 if(
audio_c⁄åﬁ
->
›
 !
NULL
){

1773 
audio_íabÀ_c⁄åﬁ_t
 *
audio_íabÀ
 = &
chù_audio
->audio_enable;

1774 if((
audio_íabÀ
->
›
!=
NULL
Ë&& (
c⁄fig_∑øm
->op!=NULL)){

1775 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param)){

1776 
TW_AUDIO_PCM
:

1777 
audio_c⁄åﬁ
->
›
->
	`dißbÀ_adpcm_ch™
◊udio_c⁄åﬁ, 
ch™_id
);

1778 
audio_íabÀ
->
›
->
	`upd©e_íabÀ_adpcm_ícode
◊udio_íabÀ, 
AUDIO_DISABLE
);

1779 if(
íabÀ
 =
AUDIO_ENABLE
){

1780 
audio_c⁄åﬁ
->
›
->
	`íabÀ_pcm_ch™
◊udio_c⁄åﬁ, 
ch™_id
);

1781 
audio_íabÀ
->
›
->
	`upd©e_íabÀ_pcm_ícode
◊udio_íabÀ, 
AUDIO_ENABLE
);

1782 } if(
íabÀ
 =
AUDIO_DISABLE
){

1783 
audio_c⁄åﬁ
->
›
->
	`dißbÀ_pcm_ch™
◊udio_c⁄åﬁ, 
ch™_id
);

1784 
audio_íabÀ
->
›
->
	`upd©e_íabÀ_pcm_ícode
◊udio_íabÀ, 
AUDIO_DISABLE
);

1787 
TW_AUDIO_ADPCM_32K
:

1788 if(
íabÀ
 =
AUDIO_ENABLE
){

1789 
audio_c⁄åﬁ
->
›
->
	`íabÀ_pcm_ch™
◊udio_c⁄åﬁ, 
ch™_id
);

1790 
audio_íabÀ
->
›
->
	`upd©e_íabÀ_pcm_ícode
◊udio_íabÀ, 
AUDIO_ENABLE
);

1791 
audio_c⁄åﬁ
->
›
->
	`íabÀ_adpcm_ch™
◊udio_c⁄åﬁ, 
ch™_id
);

1792 
audio_íabÀ
->
›
->
	`upd©e_íabÀ_adpcm_ícode
◊udio_íabÀ, 
AUDIO_ENABLE
);

1793 } if(
íabÀ
 =
AUDIO_DISABLE
){

1794 
audio_c⁄åﬁ
->
›
->
	`dißbÀ_adpcm_ch™
◊udio_c⁄åﬁ, 
ch™_id
);

1795 
audio_íabÀ
->
›
->
	`upd©e_íabÀ_adpcm_ícode
◊udio_íabÀ, 
AUDIO_DISABLE
);

1796 
audio_c⁄åﬁ
->
›
->
	`dißbÀ_pcm_ch™
◊udio_c⁄åﬁ, 
ch™_id
);

1797 
audio_íabÀ
->
›
->
	`upd©e_íabÀ_pcm_ícode
◊udio_íabÀ, 
AUDIO_DISABLE
);

1801 
	`¥ötk
("%s.%d:ÇÿsuΩp‹à%dÅy≥\n", 
__FUNCTION__
, 
__LINE__
, 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param));

1806 
	}
}

1808 
	$chù_audio_ícode_gë_audio_ícode_ch™_íabÀ_°©e
(
chù_audio_ícode_t
 *
audio_ícode
, 
ch™_id
)

1810 
ªt
 = 
AUDIO_DISABLE
;

1811 
audio_ícode_c⁄åﬁ_t
 *
audio_c⁄åﬁ
;

1812 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
;

1814 
audio_c⁄åﬁ
 = &
audio_ícode
->audio_control;

1815 
c⁄fig_∑øm
 = &
audio_ícode
->config_param;

1816 if(
audio_c⁄åﬁ
->
›
 !
NULL
){

1817 
chù_audio_t
 *
chù_audio
 = 
	`to_gë_chù_audio_wôh_audio_ícode
(
audio_ícode
);

1818 
audio_íabÀ_c⁄åﬁ_t
 *
audio_íabÀ
 = &
chù_audio
->audio_enable;

1819 if((
audio_íabÀ
->
›
!=
NULL
Ë&& (
c⁄fig_∑øm
->op!=NULL)){

1820 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param)){

1821 
TW_AUDIO_PCM
:

1822 
ªt
 = 
audio_íabÀ
->
›
->
	`gë_pcm_ícode_°©e
(audio_enable);

1824 
TW_AUDIO_ADPCM_32K
:

1825 
ªt
 = 
audio_íabÀ
->
›
->
	`gë_adpcm_ícode_°©e
(audio_enable);

1828 
	`¥ötk
("%s.%d:ÇÿsuΩp‹à%dÅy≥\n", 
__FUNCTION__
, 
__LINE__
, 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param));

1833  
ªt
;

1834 
	}
}

1836 
	$chù_audio_ícode_gë_audio_ícode_ch™_rd_±r
(
chù_audio_ícode_t
 *
audio_ícode
, 
ch™_id
, *
ext_Êag
, *
queue_size
)

1838 
ªt
 = 
INVALID_TW_AUDIO_SECTION_ID
;

1839 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
;

1840 
audio_pcm_ícode_±r_c⁄åﬁ_t
 *
pcm_audio_±r
;

1841 
audio_adpcm_ícode_±r_c⁄åﬁ_t
 *
adpcm_audio_±r
;

1843 
c⁄fig_∑øm
 = &
audio_ícode
->config_param;

1844 *
ext_Êag
 = 0;

1845 *
queue_size
 = 0;

1846 if(
c⁄fig_∑øm
->
›
 !
NULL
){

1847 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param)){

1848 
TW_AUDIO_PCM
:

1849 
pcm_audio_±r
 = &
audio_ícode
->pcm_audio_ptr;

1850 if(
pcm_audio_±r
->
›
 !
NULL
){

1851 
ªt
 = 
pcm_audio_±r
->
›
->
	`gë_ch™_rd_±r
’cm_audio_±r, 
ch™_id
, 
ext_Êag
);

1852 *
queue_size
 = 
pcm_audio_±r
->
›
->
	`gë_ch™_£˘i⁄_numbî
(pcm_audio_ptr);

1855 
TW_AUDIO_ADPCM_32K
:

1856 
adpcm_audio_±r
 = &
audio_ícode
->adpcm_audio_ptr;

1857 if(
adpcm_audio_±r
->
›
 !
NULL
){

1858 
ªt
 = 
adpcm_audio_±r
->
›
->
	`gë_ch™_rd_±r
◊dpcm_audio_±r, 
ch™_id
, 
ext_Êag
);

1859 *
queue_size
 = 
adpcm_audio_±r
->
›
->
	`gë_ch™_£˘i⁄_numbî
(adpcm_audio_ptr);

1863 
	`¥ötk
("%s.%d:ÇÿsuΩp‹à%dÅy≥\n", 
__FUNCTION__
, 
__LINE__
, 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param));

1867  
ªt
;

1868 
	}
}

1870 
	$chù_audio_ícode_gë_audio_ícode_ch™_wr_±r
(
chù_audio_ícode_t
 *
audio_ícode
, 
ch™_id
, *
ext_Êag
, *
queue_size
)

1872 
ªt
 = 
INVALID_TW_AUDIO_SECTION_ID
;

1873 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
;

1874 
audio_pcm_ícode_±r_c⁄åﬁ_t
 *
pcm_audio_±r
;

1875 
audio_adpcm_ícode_±r_c⁄åﬁ_t
 *
adpcm_audio_±r
;

1877 
c⁄fig_∑øm
 = &
audio_ícode
->config_param;

1878 *
ext_Êag
 = 0;

1879 *
queue_size
 = 0;

1880 if(
c⁄fig_∑øm
->
›
 !
NULL
){

1881 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param)){

1882 
TW_AUDIO_PCM
:

1883 
pcm_audio_±r
 = &
audio_ícode
->pcm_audio_ptr;

1884 if(
pcm_audio_±r
->
›
 !
NULL
){

1885 
ªt
 = 
pcm_audio_±r
->
›
->
	`gë_ch™_wr_±r
’cm_audio_±r, 
ch™_id
, 
ext_Êag
);

1886 *
queue_size
 = 
pcm_audio_±r
->
›
->
	`gë_ch™_£˘i⁄_numbî
(pcm_audio_ptr);

1889 
TW_AUDIO_ADPCM_32K
:

1890 
adpcm_audio_±r
 = &
audio_ícode
->adpcm_audio_ptr;

1891 if(
adpcm_audio_±r
->
›
 !
NULL
){

1892 
ªt
 = 
adpcm_audio_±r
->
›
->
	`gë_ch™_wr_±r
◊dpcm_audio_±r, 
ch™_id
, 
ext_Êag
);

1893 *
queue_size
 = 
adpcm_audio_±r
->
›
->
	`gë_ch™_£˘i⁄_numbî
(adpcm_audio_ptr);

1897 
	`¥ötk
("%s.%d:ÇÿsuΩp‹à%dÅy≥\n", 
__FUNCTION__
, 
__LINE__
, 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param));

1901  
ªt
;

1902 
	}
}

1904 
	$chù_audio_ícode_gë_audio_ícode_∑øm
(
chù_audio_ícode_t
 *
audio_ícode
, 
dvm_chù_t
 *
chù
)

1906 if(
chù
 !
NULL
){

1907 
audio_ícode
->
audio_c⁄åﬁ
.
›
->
	`gë_audio_∑øm
(&audio_ícode->audio_c⁄åﬁ, 
chù
);

1908 
audio_ícode
->
pcm_audio_±r
.
›
->
	`gë_pcm_wr_rd_±r
(&audio_ícode->pcm_audio_±r, 
chù
);

1909 
audio_ícode
->
adpcm_audio_±r
.
›
->
	`gë_adpcm_wr_rd_±r
(&audio_ícode->adpcm_audio_±r, 
chù
);

1911 
	}
}

1913 
	$chù_audio_ícode_£t_audio_ícode_∑øm
(
chù_audio_ícode_t
 *
audio_ícode
, 
dvm_chù_t
 *
chù
)

1915 if(
chù
 !
NULL
){

1916 
audio_ícode
->
audio_c⁄åﬁ
.
›
->
	`£t_audio_∑øm
(&audio_ícode->audio_c⁄åﬁ, 
chù
);

1918 
	}
}

1920 
	$chù_audio_ícode_£t_föish_rd_±r
(
chù_audio_ícode_t
 *
audio_ícode
, 
föish_rd_±r
, 
dvm_chù_t
 *
chù
)

1922 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
;

1923 
audio_pcm_ícode_±r_c⁄åﬁ_t
 *
pcm_audio_±r
;

1924 
audio_adpcm_ícode_±r_c⁄åﬁ_t
 *
adpcm_audio_±r
;

1926 
c⁄fig_∑øm
 = &
audio_ícode
->config_param;

1927 if(
c⁄fig_∑øm
->
›
 !
NULL
){

1928 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param)){

1929 
TW_AUDIO_PCM
:

1930 
pcm_audio_±r
 = &
audio_ícode
->pcm_audio_ptr;

1931 if(
pcm_audio_±r
->
›
 !
NULL
){

1932 
pcm_audio_±r
->
›
->
	`£t_rd_föish_numbî
’cm_audio_±r, 
föish_rd_±r
, 
chù
);

1935 
TW_AUDIO_ADPCM_32K
:

1936 
adpcm_audio_±r
 = &
audio_ícode
->adpcm_audio_ptr;

1937 if(
adpcm_audio_±r
->
›
 !
NULL
){

1938 
adpcm_audio_±r
->
›
->
	`£t_rd_föish_numbî
◊dpcm_audio_±r, 
föish_rd_±r
, 
chù
);

1942 
	`¥ötk
("%s.%d:ÇÿsuΩp‹à%dÅy≥\n", 
__FUNCTION__
, 
__LINE__
, 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param));

1946 
	}
}

1948 
chù_audio_ícode_›î©i⁄
 
	gchù_audio_ícode_›
 = {

1949 .
öô
 = 
chù_audio_ícode_öô
,

1951 .
	g£t_íabÀ_audio_ícode_ch™
 = 
chù_audio_ícode_£t_íabÀ_audio_ícode_ch™
,

1952 .
	gupd©e_íabÀ_audio_ícode_ch™
 = 
chù_audio_ícode_upd©e_íabÀ_audio_ícode_ch™
,

1953 .
	ggë_audio_ícode_ch™_íabÀ_°©e
 = 
chù_audio_ícode_gë_audio_ícode_ch™_íabÀ_°©e
,

1955 .
	ggë_audio_ícode_ch™_rd_±r
 = 
chù_audio_ícode_gë_audio_ícode_ch™_rd_±r
,

1956 .
	ggë_audio_ícode_ch™_wr_±r
 = 
chù_audio_ícode_gë_audio_ícode_ch™_wr_±r
,

1958 .
	ggë_audio_ícode_∑øm
 = 
chù_audio_ícode_gë_audio_ícode_∑øm
,

1959 .
	g£t_audio_ícode_∑øm
 = 
chù_audio_ícode_£t_audio_ícode_∑øm
,

1960 .
	g£t_föish_rd_±r
 = 
chù_audio_ícode_£t_föish_rd_±r
,

1963 
	$öô_chù_audio_ícode
(
chù_audio_ícode_t
 *
audio_ícode
)

1965 
audio_ícode
->
›
 = &
chù_audio_ícode_›
;

1966 
audio_ícode
->
›
->
	`öô
(audio_encode);

1967 
	}
}

1972 
	$chù_audio_decode_öô
(
chù_audio_decode_t
 *
audio_decode
)

1974 
	`öô_audio_decode_¥›îty
(&
audio_decode
->
c⁄fig_∑øm
, &
deÁu…_audio_decode_c⁄fig_des¸ùt‹
);

1975 
	`öô_audio_decode_c⁄åﬁ
(&
audio_decode
->
audio_c⁄åﬁ
);

1976 
	`öô_audio_decode_±r_c⁄åﬁ
(&
audio_decode
->
audio_±r
);

1977 
	`öô_audio_decode_d©a_addr
(&
audio_decode
->
audio_d©a_ba£
);

1978 
	}
}

1980 
	$chù_audio_decode_upd©e_íabÀ_audio_decode_ch™
(
chù_audio_decode_t
 *
audio_decode
, 
ch™_id
, 
íabÀ
)

1982 
audio_decode_c⁄åﬁ_t
 *
audio_c⁄åﬁ
 = &
audio_decode
->audio_control;

1983 
chù_audio_t
 *
chù_audio
 = 
	`to_gë_chù_audio_wôh_audio_decode
(
audio_decode
);

1984 
audio_íabÀ_c⁄åﬁ_t
 *
audio_íabÀ
 = &
chù_audio
->audio_enable;

1985 if(
audio_c⁄åﬁ
->
›
 !
NULL
){

1986 if(
íabÀ
 =
AUDIO_ENABLE
){

1987 
audio_íabÀ
->
›
->
	`upd©e_íabÀ_adpcm_decode
◊udio_íabÀ, 
AUDIO_ENABLE
);

1988 
audio_c⁄åﬁ
->
›
->
	`upd©e_decode_ch™_íabÀ
◊udio_c⁄åﬁ, 
ch™_id
, 
AUDIO_ENABLE
);

1990 
audio_c⁄åﬁ
->
›
->
	`upd©e_decode_ch™_íabÀ
◊udio_c⁄åﬁ, 
ch™_id
, 
AUDIO_DISABLE
);

1991 
audio_íabÀ
->
›
->
	`upd©e_íabÀ_adpcm_decode
◊udio_íabÀ, 
AUDIO_DISABLE
);

1994 
	}
}

1996 
	$chù_audio_decode_gë_audio_decode_ch™_°©e
(
chù_audio_decode_t
 *
audio_decode
, 
ch™_id
)

1998 
ªt
 = 
AUDIO_DISABLE
;

1999 
audio_decode_c⁄åﬁ_t
 *
audio_c⁄åﬁ
 = &
audio_decode
->audio_control;

2000 if(
audio_c⁄åﬁ
->
›
 !
NULL
){

2001 
ªt
 = 
audio_c⁄åﬁ
->
›
->
	`gë_decode_ch™_íabÀ
◊udio_c⁄åﬁ, 
ch™_id
);

2003  
ªt
;

2004 
	}
}

2006 
	$chù_audio_decode_£t_íabÀ_audio_decode_ch™
(
chù_audio_decode_t
 *
audio_decode
, 
ch™_id
, 
íabÀ
, 
dvm_chù_t
 *
chù
)

2008 
audio_decode_c⁄åﬁ_t
 *
audio_c⁄åﬁ
 = &
audio_decode
->audio_control;

2009 
chù_audio_t
 *
chù_audio
 = 
	`to_gë_chù_audio_wôh_audio_decode
(
audio_decode
);

2010 
audio_íabÀ_c⁄åﬁ_t
 *
audio_íabÀ
 = &
chù_audio
->audio_enable;

2012 if(
audio_c⁄åﬁ
->
›
 !
NULL
){

2013 if(
íabÀ
 =
AUDIO_ENABLE
){

2014 
audio_íabÀ
->
›
->
	`£t_íabÀ_adpcm_decode
◊udio_íabÀ, 
AUDIO_ENABLE
, 
chù
);

2015 
audio_c⁄åﬁ
->
›
->
	`£t_decode_ch™_íabÀ
◊udio_c⁄åﬁ, 
ch™_id
, 
AUDIO_ENABLE
, 
chù
);

2016 }if(
íabÀ
 =
AUDIO_DISABLE
){

2017 
audio_c⁄åﬁ
->
›
->
	`£t_decode_ch™_íabÀ
◊udio_c⁄åﬁ, 
ch™_id
, 
AUDIO_DISABLE
, 
chù
);

2018 
audio_íabÀ
->
›
->
	`£t_íabÀ_adpcm_decode
◊udio_íabÀ, 
AUDIO_DISABLE
, 
chù
);

2021 
	}
}

2023 
	$chù_audio_decode_upd©e_muã_audio_decode_ch™
(
chù_audio_decode_t
 *
audio_decode
, 
ch™_id
, 
muã
)

2025 
audio_decode_c⁄åﬁ_t
 *
audio_c⁄åﬁ
 = &
audio_decode
->audio_control;

2026 if(
audio_c⁄åﬁ
->
›
 !
NULL
){

2027 if(
muã
 =
AUDIO_MUTE_ENABLE
){

2028 
audio_c⁄åﬁ
->
›
->
	`upd©e_decode_ch™_muã
◊udio_c⁄åﬁ, 
ch™_id
, 
AUDIO_MUTE_ENABLE
);

2030 
audio_c⁄åﬁ
->
›
->
	`upd©e_decode_ch™_muã
◊udio_c⁄åﬁ, 
ch™_id
, 
AUDIO_MUTE_DISABLE
);

2033 
	}
}

2035 
	$chù_audio_decode_gë_audio_decode_muã_°©e
(
chù_audio_decode_t
 *
audio_decode
, 
ch™_id
)

2037 
ªt
 = 
AUDIO_MUTE_ENABLE
;

2038 
audio_decode_c⁄åﬁ_t
 *
audio_c⁄åﬁ
 = &
audio_decode
->audio_control;

2039 if(
audio_c⁄åﬁ
->
›
 !
NULL
){

2040 
ªt
 = 
audio_c⁄åﬁ
->
›
->
	`gë_decode_ch™_muã
◊udio_c⁄åﬁ, 
ch™_id
);

2042  
ªt
;

2043 
	}
}

2045 
	$chù_audio_decode_upd©e_£t_muã_audio_decode_ch™
(
chù_audio_decode_t
 *
audio_decode
, 
ch™_id
, 
muã
, 
dvm_chù_t
 *
chù
)

2047 
audio_decode_c⁄åﬁ_t
 *
audio_c⁄åﬁ
 = &
audio_decode
->audio_control;

2048 if(
audio_c⁄åﬁ
->
›
 !
NULL
){

2049 if(
muã
 =
AUDIO_MUTE_ENABLE
){

2050 
audio_c⁄åﬁ
->
›
->
	`£t_decode_ch™_muã
◊udio_c⁄åﬁ, 
ch™_id
, 
AUDIO_MUTE_ENABLE
, 
chù
);

2051 }if(
muã
 =
AUDIO_MUTE_DISABLE
){

2052 
audio_c⁄åﬁ
->
›
->
	`£t_decode_ch™_muã
◊udio_c⁄åﬁ, 
ch™_id
, 
AUDIO_MUTE_DISABLE
, 
chù
);

2055 
	}
}

2057 
	$chù_audio_decode_gë_audio_decode_ch™_rd_±r
(
chù_audio_decode_t
 *
audio_decode
, 
ch™_id
, *
ext_Êag
, *
queue_size
)

2059 
ªt
 = 
INVALID_TW_AUDIO_SECTION_ID
;

2060 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
;

2061 
audio_decode_±r_c⁄åﬁ_t
 *
audio_±r
;

2063 
c⁄fig_∑øm
 = &
audio_decode
->config_param;

2064 *
ext_Êag
 = 0;

2065 *
queue_size
 = 0;

2066 if(
c⁄fig_∑øm
->
›
 !
NULL
){

2067 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param)){

2068 
TW_AUDIO_PCM
:

2069 
TW_AUDIO_ADPCM_32K
:

2070 
audio_±r
 = &
audio_decode
->audio_ptr;

2071 if(
audio_±r
->
›
 !
NULL
){

2072 
ªt
 = 
audio_±r
->
›
->
	`gë_ch™_rd_±r
◊udio_±r, 
ch™_id
, 
ext_Êag
);

2073 *
queue_size
 = 
audio_±r
->
›
->
	`gë_ch™_£˘i⁄_numbî
(audio_ptr);

2077 
	`¥ötk
("%s.%d:ÇÿsuΩp‹à%dÅy≥\n", 
__FUNCTION__
, 
__LINE__
, 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param));

2081  
ªt
;

2082 
	}
}

2084 
	$chù_audio_decode_gë_audio_decode_ch™_wr_±r
(
chù_audio_decode_t
 *
audio_decode
, 
ch™_id
, *
ext_Êag
, *
queue_size
)

2086 
ªt
 = 
INVALID_TW_AUDIO_SECTION_ID
;

2087 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
;

2088 
audio_decode_±r_c⁄åﬁ_t
 *
audio_±r
;

2089 
c⁄fig_∑øm
 = &
audio_decode
->config_param;

2090 *
ext_Êag
 = 0;

2091 *
queue_size
 = 0;

2092 if(
c⁄fig_∑øm
->
›
 !
NULL
){

2093 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param)){

2094 
TW_AUDIO_PCM
:

2095 
TW_AUDIO_ADPCM_32K
:

2096 
audio_±r
 = &
audio_decode
->audio_ptr;

2097 if(
audio_±r
->
›
 !
NULL
){

2098 
ªt
 = 
audio_±r
->
›
->
	`gë_ch™_wr_±r
◊udio_±r, 
ch™_id
, 
ext_Êag
);

2099 *
queue_size
 = 
audio_±r
->
›
->
	`gë_ch™_£˘i⁄_numbî
(audio_ptr);

2103 
	`¥ötk
("%s.%d:ÇÿsuΩp‹à%dÅy≥\n", 
__FUNCTION__
, 
__LINE__
, 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param));

2107  
ªt
;

2108 
	}
}

2110 
	$chù_audio_decode_gë_audio_decode_∑øm
(
chù_audio_decode_t
 *
audio_decode
, 
dvm_chù_t
 *
chù
)

2112 if(
chù
 !
NULL
){

2113 
audio_decode
->
audio_c⁄åﬁ
.
›
->
	`gë_decode_∑øm
(&audio_decode->audio_c⁄åﬁ, 
chù
);

2114 
audio_decode
->
audio_±r
.
›
->
	`gë_adpcm_wr_rd_±r
(&audio_decode->audio_±r, 
chù
);

2116 
	}
}

2118 
	$chù_audio_decode_£t_audio_decode_∑øm
(
chù_audio_decode_t
 *
audio_decode
, 
dvm_chù_t
 *
chù
)

2120 if(
chù
 !
NULL
){

2121 
audio_decode_c⁄åﬁ_t
 *
audio_c⁄åﬁ
 = &
audio_decode
->audio_control;;

2122 
audio_c⁄åﬁ
->
›
->
	`£t_decode_∑øm
◊udio_c⁄åﬁ, 
chù
);

2124 
	}
}

2126 
chù_audio_decode_›î©i⁄
 
	gchù_audio_decode_›
 = {

2127 .
öô
 = 
chù_audio_decode_öô
,

2129 .
	gupd©e_íabÀ_audio_decode_ch™
 = 
chù_audio_decode_upd©e_íabÀ_audio_decode_ch™
,

2130 .
	ggë_audio_decode_ch™_íabÀ_°©e
 = 
chù_audio_decode_gë_audio_decode_ch™_°©e
,

2131 .
	g£t_íabÀ_audio_decode_ch™
 = 
chù_audio_decode_£t_íabÀ_audio_decode_ch™
,

2132 .
	gupd©e_muã_audio_decode_ch™
 = 
chù_audio_decode_upd©e_muã_audio_decode_ch™
,

2133 .
	ggë_audio_decode_muã_°©e
 = 
chù_audio_decode_gë_audio_decode_muã_°©e
,

2134 .
	g£t_muã_audio_decode_ch™
 = 
chù_audio_decode_upd©e_£t_muã_audio_decode_ch™
,

2135 .
	ggë_audio_decode_ch™_rd_±r
 = 
chù_audio_decode_gë_audio_decode_ch™_rd_±r
,

2136 .
	ggë_audio_decode_ch™_wr_±r
 = 
chù_audio_decode_gë_audio_decode_ch™_wr_±r
,

2137 .
	ggë_audio_decode_∑øm
 = 
chù_audio_decode_gë_audio_decode_∑øm
,

2138 .
	g£t_audio_decode_∑øm
 = 
chù_audio_decode_£t_audio_decode_∑øm
,

2141 
	$öô_chù_audio_decode
(
chù_audio_decode_t
 *
audio_decode
)

2143 
audio_decode
->
›
 = &
chù_audio_decode_›
;

2144 
audio_decode
->
›
->
	`öô
(audio_decode);

2145 
	}
}

2150 
	$chù_audio_öô
(
chù_audio_t
 *
chù_audio
)

2152 
	`öô_audio_íabÀ_c⁄åﬁ
(&
chù_audio
->
audio_íabÀ
);

2153 
	`öô_chù_audio_ícode
(&
chù_audio
->
audio_ícode
);

2154 
	`öô_chù_audio_decode
(&
chù_audio
->
audio_decode
);

2155 
	}
}

2157 
	$chù_audio_£t_ícode_audio_ch™_ty≥
(
chù_audio_t
 *
chù_audio
, 
ty≥
)

2159 
chù_audio_ícode_t
 *
audio_ícode
 = &
chù_audio
->audio_encode;

2160 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
 = &
audio_ícode
->config_param;

2161 if(
ty≥
 !
TW_AUDIO_ADPCM_32K
){

2162 
	`¥ötk
("%s.%d:Åy≥=%d, wê⁄ly suΩp‹àadpcm mode\n", 
__FUNCTION__
, 
__LINE__
, 
ty≥
);

2163 
ty≥
 = 
TW_AUDIO_ADPCM_32K
;

2165 if(
c⁄fig_∑øm
->
›
 !
NULL
){

2166 
c⁄fig_∑øm
->
›
->
	`upd©e_ty≥
(c⁄fig_∑øm, 
ty≥
);

2168 
	}
}

2170 
	$chù_audio_upd©e_ícode_audio_ch™_ty≥
(
chù_audio_t
 *
chù_audio
, 
ty≥
)

2172 
chù_audio_ícode_t
 *
audio_ícode
 = &
chù_audio
->audio_encode;

2173 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
 = &
audio_ícode
->config_param;

2174 if((
ty≥
!=
TW_AUDIO_ADPCM_32K
Ë&& (ty≥!=
TW_AUDIO_PCM
)){

2175 
	`TW_DBG
(
TW_DBG_ERR
, "ty≥=%d, wê⁄ly suΩp‹àadpcmándÖcm mode\n", 
ty≥
);

2176 
ty≥
 = 
TW_AUDIO_ADPCM_32K
;

2178 if(
c⁄fig_∑øm
->
›
 !
NULL
){

2179 
c⁄fig_∑øm
->
›
->
	`upd©e_ty≥
(c⁄fig_∑øm, 
ty≥
);

2181 
	}
}

2183 
	$chù_audio_gë_ícode_audio_ch™_ty≥
(
chù_audio_t
 *
chù_audio
)

2185 
ªt
 = 
TW_AUDIO_ADPCM_32K
;

2186 
chù_audio_ícode_t
 *
audio_ícode
 = &
chù_audio
->audio_encode;

2187 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
 = &
audio_ícode
->config_param;

2188 if(
c⁄fig_∑øm
->
›
 !
NULL
) {

2189 
ªt
 = 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param);

2191  
ªt
;

2192 
	}
}

2194 
	$chù_audio_£t_decode_audio_ch™_ty≥
(
chù_audio_t
 *
chù_audio
, 
ty≥
)

2196 
chù_audio_decode_t
 *
audio_decode
 = &
chù_audio
->audio_decode;

2197 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
 = &
audio_decode
->config_param;

2198 if((
ty≥
!=
TW_AUDIO_ADPCM_32K
Ë&& (ty≥!=
TW_AUDIO_PCM
)){

2199 
	`TW_DBG
(
TW_DBG_ERR
, "ty≥=%d, wê⁄ly suΩp‹àadpcmándÖcm mode\n", 
ty≥
);

2200 
ty≥
 = 
TW_AUDIO_ADPCM_32K
;

2202 if(
c⁄fig_∑øm
->
›
 !
NULL
){

2203 
c⁄fig_∑øm
->
›
->
	`upd©e_ty≥
(c⁄fig_∑øm, 
ty≥
);

2205 
	}
}

2207 
	$chù_audio_upd©e_decode_audio_ch™_ty≥
(
chù_audio_t
 *
chù_audio
, 
ty≥
)

2209 
chù_audio_decode_t
 *
audio_decode
 = &
chù_audio
->audio_decode;

2210 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
 = &
audio_decode
->config_param;

2211 if((
ty≥
!=
TW_AUDIO_ADPCM_32K
Ë&& (ty≥!=
TW_AUDIO_PCM
)){

2212 
	`TW_DBG
(
TW_DBG_ERR
, "ty≥=%d, wê⁄ly suΩp‹àadpcmándÖcm mode\n", 
ty≥
);

2213 
ty≥
 = 
TW_AUDIO_ADPCM_32K
;

2215 if(
c⁄fig_∑øm
->
›
 !
NULL
){

2216 
c⁄fig_∑øm
->
›
->
	`upd©e_ty≥
(c⁄fig_∑øm, 
ty≥
);

2218 
	}
}

2220 
	$chù_audio_gë_decode_audio_ch™_ty≥
(
chù_audio_t
 *
chù_audio
)

2222 
ªt
 = 
TW_AUDIO_ADPCM_32K
;

2223 
chù_audio_decode_t
 *
audio_decode
 = &
chù_audio
->audio_decode;

2224 
tw_audio_∑øm_t
 *
c⁄fig_∑øm
 = &
audio_decode
->config_param;

2225 if(
c⁄fig_∑øm
->
›
 !
NULL
){

2226 
ªt
 = 
c⁄fig_∑øm
->
›
->
	`gë_ty≥
(config_param);

2228  
ªt
;

2229 
	}
}

2231 
	$chù_audio_£t_íabÀ_audio_ch™
(
chù_audio_t
 *
chù_audio
, 
ch™_id
, 
íabÀ
)

2233 if(
ch™_id
 < 
TW_AUDIO_IN_CHAN_NUMBER
){

2234 
chù_audio_ícode_t
 *
audio_ícode
 = &
chù_audio
->audio_encode;

2235 if(
audio_ícode
->
›
 !
NULL
){

2236 
audio_ícode
->
›
->
	`£t_íabÀ_audio_ícode_ch™
◊udio_ícode, 
ch™_id
, 
íabÀ
, 
chù_audio
->
chù
);

2238 } if(
ch™_id
 < 
TW_AUDIO_CHAN_NUMBER
){

2239 
chù_audio_decode_t
 *
audio_decode
 = &
chù_audio
->audio_decode;

2240 if(
audio_decode
->
›
 !
NULL
){

2241 
audio_decode
->
›
->
	`£t_íabÀ_audio_decode_ch™
◊udio_decode, 
ch™_id
, 
íabÀ
, 
chù_audio
->
chù
);

2244 
	}
}

2246 
	$chù_audio_upd©e_íabÀ_audio_ch™
(
chù_audio_t
 *
chù_audio
, 
ch™_id
, 
íabÀ
)

2248 if(
ch™_id
 < 
TW_AUDIO_IN_CHAN_NUMBER
){

2249 
chù_audio_ícode_t
 *
audio_ícode
 = &
chù_audio
->audio_encode;

2250 if(
audio_ícode
->
›
 !
NULL
){

2251 
audio_ícode
->
›
->
	`upd©e_íabÀ_audio_ícode_ch™
◊udio_ícode, 
ch™_id
, 
íabÀ
);

2253 } if(
ch™_id
 < 
TW_AUDIO_CHAN_NUMBER
){

2254 
chù_audio_decode_t
 *
audio_decode
 = &
chù_audio
->audio_decode;

2255 if(
audio_decode
->
›
 !
NULL
){

2256 
audio_decode
->
›
->
	`upd©e_íabÀ_audio_decode_ch™
◊udio_decode, 
ch™_id
, 
íabÀ
);

2259 
	}
}

2261 
	$chù_audio_gë_audio_ch™_íabÀ_°©e
(
chù_audio_t
 *
chù_audio
, 
ch™_id
)

2263 
ªt
 = 
AUDIO_DISABLE
;

2264 if(
chù_audio
 !
NULL
){

2265 if(
ch™_id
 < 
TW_AUDIO_IN_CHAN_NUMBER
){

2266 
chù_audio_ícode_t
 *
audio_ícode
 = &
chù_audio
->audio_encode;

2267 if(
audio_ícode
->
›
 !
NULL
){

2268 
ªt
 = 
audio_ícode
->
›
->
	`gë_audio_ícode_ch™_íabÀ_°©e
◊udio_ícode, 
ch™_id
);

2271 
chù_audio_decode_t
 *
audio_decode
 = &
chù_audio
->audio_decode;

2272 if(
audio_decode
->
›
 !
NULL
){

2273 
ªt
 = 
audio_decode
->
›
->
	`gë_audio_decode_ch™_íabÀ_°©e
◊udio_decode, 
ch™_id
);

2277  
ªt
;

2278 
	}
}

2280 
	$chù_audio_£t_muã_audio_ch™
(
chù_audio_t
 *
chù_audio
, 
ch™_id
, 
muã
)

2282 if(
ch™_id
 < 
TW_AUDIO_IN_CHAN_NUMBER
){

2284 } if(
ch™_id
 < 
TW_AUDIO_CHAN_NUMBER
){

2285 
chù_audio_decode_t
 *
audio_decode
 = &
chù_audio
->audio_decode;

2286 if(
audio_decode
->
›
 !
NULL
){

2287 
audio_decode
->
›
->
	`£t_muã_audio_decode_ch™
◊udio_decode, 
ch™_id
, 
muã
, 
chù_audio
->
chù
);

2290 
	}
}

2292 
	$chù_audio_upd©e_muã_audio_ch™
(
chù_audio_t
 *
chù_audio
, 
ch™_id
, 
muã
)

2294 if(
ch™_id
 < 
TW_AUDIO_IN_CHAN_NUMBER
){

2296 } if(
ch™_id
 < 
TW_AUDIO_CHAN_NUMBER
){

2297 
chù_audio_decode_t
 *
audio_decode
 = &
chù_audio
->audio_decode;

2298 if(
audio_decode
->
›
 !
NULL
){

2299 
audio_decode
->
›
->
	`upd©e_muã_audio_decode_ch™
◊udio_decode, 
ch™_id
, 
muã
);

2302 
	}
}

2304 
	$chù_audio_gë_audio_ch™_muã_°©e
(
chù_audio_t
 *
chù_audio
, 
ch™_id
)

2306 
ªt
 = 
AUDIO_MUTE_ENABLE
;

2307 if(
ch™_id
 < 
TW_AUDIO_IN_CHAN_NUMBER
){

2309 } if(
ch™_id
 < 
TW_AUDIO_CHAN_NUMBER
){

2310 
chù_audio_decode_t
 *
audio_decode
 = &
chù_audio
->audio_decode;

2311 if(
audio_decode
->
›
 !
NULL
){

2312 
ªt
 = 
audio_decode
->
›
->
	`gë_audio_decode_muã_°©e
(&
chù_audio
->audio_decode, 
ch™_id
);

2315  
ªt
;

2316 
	}
}

2318 
	$chù_audio_gë_chù_audio_∑øm
(
chù_audio_t
 *
chù_audio
)

2320 
dvm_chù_t
 *
chù
 = 
chù_audio
->chip;

2321 
chù_audio
->
audio_íabÀ
.
›
->
	`gë_íabÀ_c⁄åﬁ_∑øm
(&chù_audio->audio_íabÀ, 
chù
);

2322 
chù_audio
->
audio_ícode
.
›
->
	`gë_audio_ícode_∑øm
(&chù_audio->audio_ícode, 
chù
);

2323 
chù_audio
->
audio_decode
.
›
->
	`gë_audio_decode_∑øm
(&chù_audio->audio_decode, 
chù
);

2324 
	}
}

2326 
	$chù_audio_£t_chù_audio_∑øm
(
chù_audio_t
 *
chù_audio
)

2328 
dvm_chù_t
 *
chù
 = 
chù_audio
->chip;

2329 
chù_audio
->
audio_íabÀ
.
›
->
	`£t_íabÀ_c⁄åﬁ_∑øm
(&chù_audio->audio_íabÀ, 
chù
);

2330 
chù_audio
->
audio_ícode
.
›
->
	`£t_audio_ícode_∑øm
(&chù_audio->audio_ícode, 
chù
);

2331 
chù_audio
->
audio_decode
.
›
->
	`£t_audio_decode_∑øm
(&chù_audio->audio_decode, 
chù
);

2332 
	}
}

2334 
	$audio_ícode_ch™_ª•⁄£_ddr_bur°_d⁄e_i§
(
úq
, *
c⁄ãxt
)

2336 
tw_audio_drivî_t
 *
audio_ch™_drivî
 = (tw_audio_drivî_t*)
c⁄ãxt
;

2337 
ªt
 = 1;

2338 if(
audio_ch™_drivî
 !
NULL
){

2339 
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
 = &
audio_ch™_drivî
->audio_packet_queue;

2340 
dvm_chù_t
 *
chù
 = 
audio_ch™_drivî
->
chù_audio
->chip;

2341 
chù_audio_ícode_t
 *
audio_ícode
 = &
audio_ch™_drivî
->
chù_audio
->audio_encode;

2342 
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
 = &
audio_ch™_drivî
->audio_section_param;

2343 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

2344 
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
 = &
chù_d¥am_c⁄åﬁÀr
->burst_interface;

2345 
tw_time°amp_t
 *
time°amp
 = &
audio_ch™_drivî
->timestamp;

2346 
d¥am_∑ge_node_t
 *
d¥am_∑ge
;

2347 
audio_£˘i⁄_des¸ùt‹_t
 
des¸ùt‹
;

2348 
u32
 
d¥am_ba£
;

2349 
föish_id
;

2351 
bur°_öãrÁ˚
->
›
->
	`˛ór_bur°_d⁄e
(burst_interface);

2352 
d¥am_∑ge
 = 
audio_ch™_drivî
->dpram_page;

2353 
d¥am_ba£
 = 
d¥am_∑ge
->
›
->
	`gë_∑ge_ba£
(dpram_page);

2354 
d¥am_ba£
 +
AUDIO_SECTION_SIZE
;

2355 
d¥am_ba£
 -(
audio_£˘i⁄_des¸ùt‹_t
);

2356 *((
u32
*)&
des¸ùt‹
Ë
chù
->
io_›
->
	`chù_ªad32
(chù, 
d¥am_ba£
);

2357 
time°amp
->
›
->
	`£t_time°amp
—ime°amp, 
des¸ùt‹
.time°amp, 
__FILE__
);

2359 
audio_∑ckë_queue
->
›
->
	`åy_gë_cuº_¥odu˚r_‰om_poﬁ
◊udio_∑ckë_queue, &
audio_ch™_drivî
->
audio_buf_poﬁ
);

2360 if(
audio_∑ckë_queue
->
cuº_¥odu˚r
 !
NULL
){

2361 
tw_audio_∑ckë_£˘i⁄_t
 *
audio_£˘i⁄
 = 
audio_∑ckë_queue
->
cuº_¥odu˚r
;

2362 
tw_audio_des¸ùt‹_t
 *
audio_des¸ùt‹
 = &
audio_£˘i⁄
->
des¸ùt‹
;

2364 *((
u32
*)
audio_des¸ùt‹
->
des¸ùt‹
) = *((u32*)&descriptor);

2365 
audio_£˘i⁄
->
∑ylﬂd_Àn
 = 
audio_des¸ùt‹
->
›
->
	`gë_audio_des¸ùt‹_vÆid_Àn
(audio_descriptor);

2366 
audio_£˘i⁄
->
ßm∂e_øã
 = 
audio_des¸ùt‹
->
›
->
	`gë_audio_des¸ùt‹_ßm∂e_øã
(audio_descriptor);

2367 
audio_£˘i⁄
->
ty≥
 = 
audio_des¸ùt‹
->
›
->
	`gë_audio_des¸ùt‹_ty≥
(audio_descriptor);

2368 
audio_£˘i⁄
->
bô_wide
 = 
audio_des¸ùt‹
->
›
->
	`gë_audio_des¸ùt‹_bô_wide
(audio_descriptor);

2369 
audio_£˘i⁄
->
time°amp
 =Åime°amp->
›
->
	`gë_time°amp
(timestamp);

2370 
audio_£˘i⁄
->
‰ameSîül
 = 
audio_ch™_drivî
->
i_‰ame_£rül
++;

2372 
audio_£˘i⁄
->
›
->
	`dma_m≠
◊udio_£˘i⁄, 
DMA_FROM_DEVICE
);

2373 
audio_£˘i⁄
->
∑ylﬂd_Àn
 = 
	`H264_MIN
(◊udio_£˘i⁄->
£˘i⁄_size
-(
ext_h264_«l_bô°ªam_t
)),áudio_section->payload_len);

2374 
bur°_öãrÁ˚
->
›
->
	`dma_ho°_to_§am_ªad
(bur°_öãrÁ˚, 
audio_ch™_drivî
->
d¥am_∑ge
, 
audio_£˘i⁄
->
dma_addr
+(
ext_h264_«l_bô°ªam_t
),áudio_£˘i⁄->
∑ylﬂd_Àn
);

2375 
audio_£˘i⁄
->
›
->
	`dma_unm≠
◊udio_£˘i⁄, 
DMA_FROM_DEVICE
);

2376 
audio_£˘i⁄
->
∑ylﬂd_Àn
 = 
	`gí_ext_«l_audio_hódî
◊udio_£˘i⁄->
d©a
,áudio_£˘i⁄->
ty≥
,áudio_section->payload_len);

2377 
audio_∑ckë_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(audio_packet_queue);

2379 
audio_ch™_drivî
->
disˇrd_numbî
++;

2383 
föish_id
 = 
audio_£˘i⁄_∑øm
->
›
->
	`gë_upd©e_föish_id
(audio_section_param);

2384 
audio_ícode
->
›
->
	`£t_föish_rd_±r
◊udio_ícode, 
föish_id
, 
chù
);

2387 
	`chù_‰ì_úq
(
chù
, 
IRQ_BURST_TYPE_INTR
, 
audio_ch™_drivî
);

2388 
chù_d¥am_c⁄åﬁÀr
->
›
->
	`ack_ªad_audio_ªq
(chù_d¥am_c⁄åﬁÀr, 
audio_ch™_drivî
);

2389 
	`drivî_gí_dñivî_evít
(&
audio_ch™_drivî
->
audio_ed
, 1);

2391  
ªt
;

2392 
	}
}

2394 
	$audio_ícode_ch™_°¨t_ªad_bô°ªam
(
d¥am_ªque°_t
 *
d¥am_ªq
, *
c⁄ãxt
)

2396 
ªt
=1;

2397 if((
d¥am_ªq
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

2398 
tw_audio_drivî_t
 *
audio_ch™_drivî
 = (tw_audio_drivî_t*)
c⁄ãxt
;

2399 
dvm_chù_t
 *
chù
 = 
audio_ch™_drivî
->
chù_audio
->chip;

2400 
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
 = &
audio_ch™_drivî
->audio_section_param;

2401 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
;

2402 
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
;

2404 
	`drivî_gí_dñivî_evít
(&
audio_ch™_drivî
->
audio_ed
, 1);

2405 
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

2406 
bur°_öãrÁ˚
 = &
chù_d¥am_c⁄åﬁÀr
->burst_interface;

2407 if(
chù_d¥am_c⁄åﬁÀr
->
›
->
	`is_ˇn_submô_move_d©a_‰om_ddr_to_d¥am_£rvi˚_ªq
(chù_d¥am_c⁄åﬁÀr, &
audio_ch™_drivî
->
d¥am_∑ge
)){

2408 
	`chù_ªque°_úq
(
chù
, 
IRQ_BURST_TYPE_INTR
, 
audio_ícode_ch™_ª•⁄£_ddr_bur°_d⁄e_i§
, "BURST", (*)
audio_ch™_drivî
);

2409 
bur°_öãrÁ˚
->
›
->
	`°¨t_n⁄block_å™s„r_‰om_ddr_to_§am
(bur°_öãrÁ˚, 
audio_ch™_drivî
->
d¥am_∑ge
, 
audio_£˘i⁄_∑øm
->
ddr_íd_addr
,áudio_£˘i⁄_∑øm->
∑ge_id
, 
AUDIO_SECTION_SIZE
,áudio_£˘i⁄_∑øm->
chù_a_‹_b
);

2410 
	`drivî_gí_dñivî_evít
(&
audio_ch™_drivî
->
audio_ed
, 1);

2412 
d¥am_ªque°_queue_t
 *
ªque°_queue
;

2413 
ªque°_queue
 = &
chù_d¥am_c⁄åﬁÀr
->request_queue;

2414 
ªque°_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(request_queue);

2415 
	`drivî_gí_dñivî_evít
(&
audio_ch™_drivî
->
audio_ed
, 1);

2416 
	`drivî_gí_dñivî_evít
(&
audio_ch™_drivî
->
audio_ed
, 1);

2417 
	`¥ötk
("%s.%d:Ñëriggî\n", 
__FUNCTION__
, 
__LINE__
);

2421  
ªt
;

2422 
	}
}

2424 
	$öô_submô_ªcv_audio_bô°ªam_£rvi˚
(
d¥am_ªque°_t
 *
d¥am_ªq
, 
tw_audio_drivî_t
 *
audio_ch™_drivî
)

2426 if((
d¥am_ªq
!=
NULL
Ë|| (
audio_ch™_drivî
!=NULL)){

2427 
d¥am_ªq
->
ty≥
 = 
DPRAM_NONBLOCK_TRANSFER_REQUEST
;

2428 
d¥am_ªq
->
c⁄ãxt
 = (*)
audio_ch™_drivî
;

2429 
d¥am_ªq
->
ªq_ˇŒback
 = 
audio_ícode_ch™_°¨t_ªad_bô°ªam
;

2431 
	}
}

2433 
	$audio_decode_ch™_ª•⁄£_ddr_bur°_d⁄e_i§
(
úq
, *
c⁄ãxt
)

2435 
tw_audio_drivî_t
 *
audio_ch™_drivî
 = (tw_audio_drivî_t*)
c⁄ãxt
;

2436 
ªt
 = 0;

2437 if(
audio_ch™_drivî
 !
NULL
){

2438 
chù_audio_decode_t
 *
audio_decode
 = &
audio_ch™_drivî
->
chù_audio
->audio_decode;

2439 
audio_decode_±r_c⁄åﬁ_t
 *
audio_decode_±r
 = &
audio_decode
->
audio_±r
;

2440 
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
 = &
audio_ch™_drivî
->audio_section_param;

2441 
dvm_chù_t
 *
chù
 = 
audio_ch™_drivî
->
chù_audio
->chip;

2442 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
;

2443 
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
;

2444 
föish_id
;

2446 
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

2447 
bur°_öãrÁ˚
 = &
chù_d¥am_c⁄åﬁÀr
->burst_interface;

2448 
bur°_öãrÁ˚
->
›
->
	`˛ór_bur°_d⁄e
(burst_interface);

2449 
föish_id
 = 
audio_£˘i⁄_∑øm
->
›
->
	`gë_upd©e_föish_id
(audio_section_param);

2450 
audio_decode_±r
->
›
->
	`£t_föish_wr_±r
◊udio_decode_±r, 
föish_id
, 
chù
, 
audio_ch™_drivî
->
audio_logic_ch™_id
);

2451 
audio_ch™_drivî
->
i_‰ame_£rül
++;

2453 
	`chù_‰ì_úq
(
chù
, 
IRQ_BURST_TYPE_INTR
, 
audio_ch™_drivî
);

2454 
chù_d¥am_c⁄åﬁÀr
->
›
->
	`ack_wrôe_audio_ªq
(chù_d¥am_c⁄åﬁÀr, 
audio_ch™_drivî
);

2455 
	`drivî_gí_dñivî_evít
(&
audio_ch™_drivî
->
audio_ed
, 1);

2456 
ªt
 = 1;

2458  
ªt
;

2459 
	}
}

2461 
	$audio_decode_ch™_°¨t_£nd_bô°ªam
(
d¥am_ªque°_t
 *
d¥am_ªq
, *
c⁄ãxt
)

2463 
ªt
=1;

2464 if((
d¥am_ªq
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

2465 
tw_audio_drivî_t
 *
audio_ch™_drivî
 = (tw_audio_drivî_t*)
c⁄ãxt
;

2466 
dvm_chù_t
 *
chù
 = 
audio_ch™_drivî
->
chù_audio
->chip;

2467 
audio_£˘i⁄_±r_öfo_t
 *
audio_£˘i⁄_∑øm
 = &
audio_ch™_drivî
->audio_section_param;

2468 
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
 = &
audio_ch™_drivî
->audio_packet_queue;

2469 
tw_audio_ch™_buf_poﬁ_t
 *
audio_buf_poﬁ
 = &
audio_ch™_drivî
->audio_buf_pool;

2470 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

2471 
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
 = &
chù_d¥am_c⁄åﬁÀr
->burst_interface;

2472 
ed_tcb_t
 *
ed_tcb
 = &
audio_ch™_drivî
->
audio_ed
;

2474 
audio_∑ckë_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(audio_packet_queue);

2475 if(
audio_∑ckë_queue
->
cuº_c⁄sumî
 !
NULL
){

2476 
tw_audio_∑ckë_£˘i⁄_t
 *
audio_£˘i⁄
 = 
audio_∑ckë_queue
->
cuº_c⁄sumî
;

2477 
tw_audio_des¸ùt‹_t
 *
audio_decode_des¸ùt‹
 = &
audio_£˘i⁄
->
des¸ùt‹
;

2479 
	`drivî_gí_dñivî_evít
(
ed_tcb
, 1);

2481 if(
chù_d¥am_c⁄åﬁÀr
->
›
->
	`is_ˇn_submô_move_d©a_‰om_ho°_to_d¥am_£rvi˚_ªq
(chù_d¥am_c⁄åﬁÀr, &
audio_ch™_drivî
->
d¥am_∑ge
)){

2482 
d¥am_∑ge_node_t
 *
d¥am_∑ge
;

2483 
u32
 
d¥am_ba£
;

2485 
audio_£˘i⁄
->
∑ylﬂd_Àn
 -(
ext_h264_«l_bô°ªam_t
);

2486 
audio_£˘i⁄
->
›
->
	`dma_m≠
◊udio_£˘i⁄, 
DMA_TO_DEVICE
);

2487 
bur°_öãrÁ˚
->
›
->
	`dma_ho°_to_§am_wrôe
(bur°_öãrÁ˚, 
audio_ch™_drivî
->
d¥am_∑ge
, 
audio_£˘i⁄
->
dma_addr
+(
ext_h264_«l_bô°ªam_t
),áudio_£˘i⁄->
∑ylﬂd_Àn
);

2488 
audio_£˘i⁄
->
›
->
	`dma_unm≠
◊udio_£˘i⁄, 
DMA_TO_DEVICE
);

2490 
d¥am_∑ge
 = 
audio_ch™_drivî
->dpram_page;

2491 
d¥am_ba£
 = 
d¥am_∑ge
->
›
->
	`gë_∑ge_ba£
(dpram_page);

2492 
d¥am_ba£
 +
audio_£˘i⁄
->
£˘i⁄_size
;

2493 
d¥am_ba£
 -(
audio_£˘i⁄_des¸ùt‹_t
);

2494 
audio_decode_des¸ùt‹
->
›
->
	`£t_audio_des¸ùt‹_vÆid_Àn
◊udio_decode_des¸ùt‹, 
audio_£˘i⁄
->
∑ylﬂd_Àn
);

2495 
audio_decode_des¸ùt‹
->
›
->
	`£t_audio_des¸ùt‹_ßm∂e_øã
◊udio_decode_des¸ùt‹, 
audio_£˘i⁄
->
ßm∂e_øã
);

2496 
audio_decode_des¸ùt‹
->
›
->
	`£t_audio_des¸ùt‹_ty≥
◊udio_decode_des¸ùt‹, 
audio_£˘i⁄
->
ty≥
);

2497 
audio_decode_des¸ùt‹
->
›
->
	`£t_audio_des¸ùt‹_bô_wide
◊udio_decode_des¸ùt‹, 
audio_£˘i⁄
->
bô_wide
);

2498 
audio_decode_des¸ùt‹
->
›
->
	`£t_audio_des¸ùt‹_time°amp
◊udio_decode_des¸ùt‹, 
audio_£˘i⁄
->
time°amp
&0xffff);

2499 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
d¥am_ba£
, (*((
u32
*)
audio_decode_des¸ùt‹
->
des¸ùt‹
)));

2501 
	`chù_ªque°_úq
(
chù
, 
IRQ_BURST_TYPE_INTR
, 
audio_decode_ch™_ª•⁄£_ddr_bur°_d⁄e_i§
, "BURST", (*)
audio_ch™_drivî
);

2502 
bur°_öãrÁ˚
->
›
->
	`°¨t_n⁄block_å™s„r_‰om_§am_to_ddr
(bur°_öãrÁ˚, 
audio_ch™_drivî
->
d¥am_∑ge
, 
audio_£˘i⁄_∑øm
->
ddr_íd_addr
,áudio_£˘i⁄_∑øm->
∑ge_id
, 
AUDIO_SECTION_SIZE
,áudio_£˘i⁄_∑øm->
chù_a_‹_b
);

2503 
audio_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊udio_∑ckë_queue, 
audio_buf_poﬁ
);

2505 
d¥am_ªque°_queue_t
 *
ªque°_queue
;

2506 
ªque°_queue
 = &
chù_d¥am_c⁄åﬁÀr
->request_queue;

2507 
ªque°_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(request_queue);

2508 
audio_ch™_drivî
->
disˇrd_numbî
++;

2509 
	`drivî_gí_dñivî_evít
(
ed_tcb
, 1);

2510 
	`drivî_gí_dñivî_evít
(
ed_tcb
, 1);

2511 
chù_d¥am_c⁄åﬁÀr
->
›
->
	`ack_ªad_audio_ªq
(chù_d¥am_c⁄åﬁÀr, 
audio_ch™_drivî
);

2512 
	`¥ötk
("%s.%d:Ñëriggî\n", 
__FUNCTION__
, 
__LINE__
);

2514 
	`drivî_gí_dñivî_evít
(
ed_tcb
, 1);

2516 
ed_tcb
->
ed_fsm
.
›
->
	`ch™ge_°©e
(&ed_tcb->ed_fsm, 
TW_ED_IDLE
);

2517 
chù_d¥am_c⁄åﬁÀr
->
›
->
	`ack_ªad_audio_ªq
(chù_d¥am_c⁄åﬁÀr, 
audio_ch™_drivî
);

2520  
ªt
;

2521 
	}
}

2523 
	$öô_submô_£nd_audio_bô°ªam_£rvi˚
(
d¥am_ªque°_t
 *
d¥am_ªq
, 
tw_audio_drivî_t
 *
audio_ch™_drivî
)

2525 if((
d¥am_ªq
!=
NULL
Ë|| (
audio_ch™_drivî
!=NULL)){

2526 
d¥am_ªq
->
ty≥
 = 
DPRAM_NONBLOCK_TRANSFER_REQUEST
;

2527 
d¥am_ªq
->
c⁄ãxt
 = (*)
audio_ch™_drivî
;

2528 
d¥am_ªq
->
ªq_ˇŒback
 = 
audio_decode_ch™_°¨t_£nd_bô°ªam
;

2530 
	}
}

2532 
	$chù_audio_¥o˚ss_audio_ícode
(
chù_audio_t
 *
chù_audio
)

2534 if(
chù_audio
 !
NULL
) {

2535 
tw_audio_drivî_t
 *
audio_ch™_drivî
;

2536 
ed_tcb_t
 *
ed
;

2537 
i
;

2539 
i
=0; i<
TW_AUDIO_IN_CHAN_NUMBER
; i++){

2540 
chù_audio
->
›
->
	`gë_audio_ch™_drivî
(chù_audio, 
i
, &
audio_ch™_drivî
);

2541 if(
audio_ch™_drivî
 =
NULL
){

2544 if(
	`©omic_ªad
(&
audio_ch™_drivî
->
›íed_Êag
) == 0){

2547 
ed
 = &
audio_ch™_drivî
->
audio_ed
;

2548 if(
ed
->
ed_fsm
.
›
->
	`gë_cuº_°©e
(&ed->ed_fsmË=
TW_ED_IDLE
){

2549 
	`drivî_gí_dñivî_evít
(
ed
, 1);

2553 
	}
}

2555 
	$chù_audio_¥o˚ss_audio_decode
(
chù_audio_t
 *
chù_audio
)

2557 if(
chù_audio
 !
NULL
){

2558 
tw_audio_drivî_t
 *
audio_ch™_drivî
;

2559 
ed_tcb_t
 *
ed
;

2560 
i
;

2562 
i
=
TW_AUDIO_OUT_SPEAKER_ID
; i<=
TW_AUDIO_OUT_PLAYBACK_ID
; i++){

2563 
chù_audio
->
›
->
	`gë_audio_ch™_drivî
(chù_audio, 
i
, &
audio_ch™_drivî
);

2564 if(
audio_ch™_drivî
 =
NULL
){

2567 if(
	`©omic_ªad
(&
audio_ch™_drivî
->
›íed_Êag
) == 0){

2570 
ed
 = &
audio_ch™_drivî
->
audio_ed
;

2571 if(
ed
->
ed_fsm
.
›
->
	`gë_cuº_°©e
(&ed->ed_fsmË=
TW_ED_IDLE
){

2572 
	`drivî_gí_dñivî_evít
(
ed
, 1);

2576 
	}
}

2578 
	$chù_audio_gë_audio_ch™_drivî
(
chù_audio_t
 *
chù_audio
, 
ch™_id
, 
tw_audio_drivî_t
 **
±r_audio_drivî
)

2580 if((
chù_audio
!=
NULL
Ë&& (
±r_audio_drivî
!=NULL)){

2581 *
±r_audio_drivî
 = 
NULL
;

2582 if((
ch™_id
>=
TW_AUDIO_IN_CHAN0_ID
Ë&& (ch™_id<=
TW_AUDIO_OUT_PLAYBACK_ID
)){

2583 *
±r_audio_drivî
 = &
chù_audio
->
chù
->
audio_ch™_drivî
[
ch™_id
];

2586 
	}
}

2588 
chù_audio_›î©i⁄
 
	gchù_audio_›
 = {

2589 .
öô
 = 
chù_audio_öô
,

2591 .
	g£t_ícode_audio_ch™_ty≥
 = 
chù_audio_£t_ícode_audio_ch™_ty≥
,

2592 .
	gupd©e_ícode_audio_ch™_ty≥
 = 
chù_audio_upd©e_ícode_audio_ch™_ty≥
,

2593 .
	ggë_ícode_audio_ch™_ty≥
 = 
chù_audio_gë_ícode_audio_ch™_ty≥
,

2595 .
	g£t_decode_audio_ch™_ty≥
 = 
chù_audio_£t_decode_audio_ch™_ty≥
,

2596 .
	gupd©e_decode_audio_ch™_ty≥
 = 
chù_audio_upd©e_decode_audio_ch™_ty≥
,

2597 .
	ggë_decode_audio_ch™_ty≥
 = 
chù_audio_gë_decode_audio_ch™_ty≥
,

2599 .
	g£t_íabÀ_audio_ch™
 = 
chù_audio_£t_íabÀ_audio_ch™
,

2600 .
	gupd©e_íabÀ_audio_ch™
 = 
chù_audio_upd©e_íabÀ_audio_ch™
,

2601 .
	ggë_audio_ch™_íabÀ_°©e
 = 
chù_audio_gë_audio_ch™_íabÀ_°©e
,

2603 .
	g£t_muã_audio_ch™
 = 
chù_audio_£t_muã_audio_ch™
,

2604 .
	gupd©e_muã_audio_ch™
 = 
chù_audio_upd©e_muã_audio_ch™
,

2605 .
	ggë_audio_ch™_muã_°©e
 = 
chù_audio_gë_audio_ch™_muã_°©e
,

2607 .
	ggë_chù_audio_∑øm
 = 
chù_audio_gë_chù_audio_∑øm
,

2608 .
	g£t_chù_audio_∑øm
 = 
chù_audio_£t_chù_audio_∑øm
,

2610 .
	g¥o˚ss_audio_ícode
 = 
chù_audio_¥o˚ss_audio_ícode
,

2611 .
	g¥o˚ss_audio_decode
 = 
chù_audio_¥o˚ss_audio_decode
,

2612 .
	ggë_audio_ch™_drivî
 = 
chù_audio_gë_audio_ch™_drivî
,

2615 
	$audio_¥oc_ªad
(*
∑ge
, **
°¨t
, 
off_t
 
off
,

2616 
cou¡
, *
eof
, *
d©a
)

2618 
Àn
 = 0, 
i
 = 0;

2619 
chù_audio_t
 *
chù_audio
 = (chù_audio_à*)
d©a
;

2620 
tw_audio_drivî_t
 *
audio_ch™_drivî
;

2622 
tw_audio_∑øm_t
 *
audio_ícode_∑øm
;

2625 
audio_ícode_∑øm
 = &
chù_audio
->
audio_ícode
.
c⁄fig_∑øm
;

2626 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s %8s %8s\n", "BIT", "RATE", "TYPE");

2627 
audio_ícode_∑øm
->
›
->
	`gë_bô_wide
(audio_encode_param)) {

2628 
TW_AUDIO_8BIT
:

2629 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s ", "8bit");

2631 
TW_AUDIO_16BIT
:

2632 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s ", "16bit");

2635 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s ", "N/A");

2637 
audio_ícode_∑øm
->
›
->
	`gë_ßm∂e_øã
(audio_encode_param)) {

2638 
TW_AUDIO_8000
:

2639 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s ", "8K");

2641 
TW_AUDIO_16000
:

2642 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s ", "16K");

2644 
TW_AUDIO_32000
:

2645 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s ", "32K");

2647 
TW_AUDIO_44100
:

2648 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s ", "44.1K");

2650 
TW_AUDIO_48000
:

2651 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s ", "48K");

2654 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s ", "N/A");

2656 
audio_ícode_∑øm
->
›
->
	`gë_ty≥
(audio_encode_param)) {

2657 
TW_AUDIO_PCM
:

2658 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s ", "PCM");

2660 
TW_AUDIO_ALAW
:

2661 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s ", "ALAW");

2663 
TW_AUDIO_ULAW
:

2664 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s ", "ULAW");

2666 
TW_AUDIO_ADPCM_32K
:

2667 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s ", "ADPCM_32K");

2669 
TW_AUDIO_ADPCM_16K
:

2670 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s ", "ADPCM_16K");

2672 
TW_AUDIO_ADPCM_48K
:

2673 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s ", "ADPCM_48K");

2676 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s ", "N/A");

2678 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "\nchannel state:\n");

2679 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s %8s %8s %8s %8s %8s %8s\n", "logic_id", "type", "encode", "discard", "state", "queue", "pool");

2680 
i
 = 0; i <
TW_AUDIO_OUT_PLAYBACK_ID
; i++) {

2681 
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
;

2682 
tw_audio_ch™_buf_poﬁ_t
 *
audio_buf_poﬁ
;

2683 
chù_audio
->
›
->
	`gë_audio_ch™_drivî
(chù_audio, 
i
, &
audio_ch™_drivî
);

2685 if(!
audio_ch™_drivî
 || !
	`©omic_ªad
(&audio_ch™_drivî->
›íed_Êag
)) {

2688 
audio_∑ckë_queue
 = &
audio_ch™_drivî
->audio_packet_queue;

2689 
audio_buf_poﬁ
 = &
audio_ch™_drivî
->audio_buf_pool;

2690 
Àn
 +
	`•rötf
(
∑ge
 +Üí, "%8d %8d %8d %8d %8d %8d %8d\n", 
audio_ch™_drivî
->
audio_logic_ch™_id
,

2691 
audio_ch™_drivî
->
ty≥
,áudio_ch™_drivî->
i_‰ame_£rül
,

2692 
audio_ch™_drivî
->
disˇrd_numbî
,

2693 
audio_ch™_drivî
->
audio_ed
.
ed_fsm
.
›
->
	`gë_cuº_°©e
(&audio_ch™_drivî->audio_ed.ed_fsm), 
audio_∑ckë_queue
->›->
	`gë_cuº_queue_íåy_numbî
(audio_packet_queue),

2694 
audio_buf_poﬁ
->
›
->
	`gë_audio_£˘i⁄_tcb_poﬁ_íåy_numbî
(audio_buf_pool));

2697  
Àn
;

2698 
	}
}

2700 
	$audio_¥oc_wrôe
(
fûe
 *fûe, c⁄° 
__u£r
 *
buf„r
,

2701 
cou¡
, *
d©a
)

2703 
chù_audio_t
 *
chù_audio
 = (chù_audio_à*)
d©a
;

2704 
tw_audio_drivî_t
 *
audio_ch™_drivî
;

2705 
tw_audio_drivî_t
 *
audio_decodî_drivî
;

2706 
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
;

2707 
tw_audio_∑ckë_£˘i⁄_t
 *
audio_ícode_£˘i⁄
;

2708 
tw_audio_∑ckë_queue_t
 *
audio_decodî_∑ckë_queue
;

2709 
tw_audio_∑ckë_£˘i⁄_t
 *
audio_decodî_£˘i⁄
;

2710 
tw_audio_des¸ùt‹_t
 *
audio_ícode_des¸ùt‹
;

2711 
tw_audio_des¸ùt‹_t
 *
audio_decode_des¸ùt‹
;

2712 
dvm_chù_t
 *
chù
;

2713 
u32
 
desc
 = 0;

2714 
u32
 
audio_smÆÀr
 = 0;

2715 
fûe
 *
audio_fûe
;

2716 
«me
[128];

2717 
mm_£gmít_t
 
fs
;

2718 
cmdbuf
[1024];

2719 **
¨gv
;

2720 
¨gc
, 
i
;

2721 
u32
 
lo›
 = 0;

2723 if(
cou¡
 > 1024){

2724 
	`c›y_‰om_u£r
(
cmdbuf
, 
buf„r
, 1024);

2727 
	`c›y_‰om_u£r
(
cmdbuf
, 
buf„r
, 
cou¡
);

2729 
¨gv
 = 
	`¨gv_•lô
(
GFP_KERNEL
, 
cmdbuf
, &
¨gc
);

2730 
i
 = 0; i < (
¨gc
 - 1); i++){

2731 
	`TW_DBG
(
TW_DBG_INFO
, "cmd %d: %s\n", 
i
, 
¨gv
[i]);

2733 if(!
chù_audio
){

2734 
wrôe_ªÀa£
;

2736 if((
¨gc
 > 3Ë&& (
	`°rcmp
(
¨gv
[2], "loop") == 0)) {

2737 
lo›
 = 1;

2740 
chù
 = 
chù_audio
->chip;

2742 if(
¨gv
[0] !
NULL
) {

2743 
ed_tcb_t
 *
ícodî_ed
 = 
NULL
;

2744 
ed_tcb_t
 *
decodî_ed
 = 
NULL
;

2745 
	`mem£t
(
«me
, 0, 128);

2746 
	`•rötf
(
«me
, "%s/audio_chn%d.pcm", 
¨gv
[1], 
	`©oi
(argv[0]));

2747 
audio_fûe
 = 
	`tw_kî√l_fûe_›í
(
«me
);

2748 
fs
=
	`gë_fs
();

2749 
	`£t_fs
(
KERNEL_DS
);

2750 
chù_audio
->
›
->
	`gë_audio_ch™_drivî
(chù_audio, 
	`©oi
(
¨gv
[0]), &
audio_ch™_drivî
);

2751 
chù_audio
->
›
->
	`gë_audio_ch™_drivî
(chù_audio, 
TW_AUDIO_OUT_SPEAKER_ID
, &
audio_decodî_drivî
);

2752 if(!
audio_ch™_drivî
 || !
audio_decodî_drivî
) {

2753 
	`TW_DBG
(
TW_DBG_ERR
, "no such driver\n");

2754 
audio_íd
;

2756 
ícodî_ed
 = &
audio_ch™_drivî
->
audio_ed
;

2757 
decodî_ed
 = &
audio_decodî_drivî
->
audio_ed
;

2758 if(!
ícodî_ed
->
›
) {

2759 
	`öô_tw5864_audio_ícode_ch™
(
audio_ch™_drivî
, 
chù_audio
, 1, 0, 0);

2761 if(!
decodî_ed
->
›
) {

2762 
	`öô_tw5864_audio_decode_ch™
(
audio_decodî_drivî
, 
chù_audio
, 1, 0, 
TW_AUDIO_OUT_SPEAKER_ID
);

2764 
ícodî_ed
->
›
->
	`›í
(encoder_ed);

2765 
	`drivî_gí_ªsume_evít
(
ícodî_ed
, 1);

2766 
decodî_ed
->
›
->
	`›í
(decoder_ed);

2767 
	`drivî_gí_ªsume_evít
(
decodî_ed
, 1);

2768 
audio_∑ckë_queue
 = &
audio_ch™_drivî
->audio_packet_queue;

2769 
audio_decodî_∑ckë_queue
 = &
audio_decodî_drivî
->
audio_∑ckë_queue
;

2771 
	`scheduÀ
();

2772 i‡(
	`sig«l_≥ndög
(
cuºít
)) {

2773 
audio_íd
;

2775 
audio_∑ckë_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(audio_packet_queue);

2776 
audio_ícode_£˘i⁄
 = 
audio_∑ckë_queue
->
cuº_c⁄sumî
;

2778 if(
audio_ícode_£˘i⁄
){

2779 
audio_fûe
->
f_›
->
	`wrôe
◊udio_fûe, 
audio_ícode_£˘i⁄
->
d©a
 + (
ext_h264_«l_bô°ªam_t
),áudio_ícode_£˘i⁄->
∑ylﬂd_Àn
 - ”xt_h264_«l_bô°ªam_t), &◊udio_fûe->
f_pos
));

2781 if(
lo›
) {

2782 
ªåy
:

2783 
audio_decodî_∑ckë_queue
->
›
->
	`åy_gë_cuº_¥odu˚r_‰om_poﬁ
◊udio_decodî_∑ckë_queue, &
audio_decodî_drivî
->
audio_buf_poﬁ
);

2784 
audio_decodî_£˘i⁄
 = 
audio_decodî_∑ckë_queue
->
cuº_¥odu˚r
;

2785 if(
audio_decodî_£˘i⁄
) {

2786 
audio_decodî_£˘i⁄
->
∑ylﬂd_Àn
 = 384;

2787 
audio_ícode_des¸ùt‹
 = &
audio_ícode_£˘i⁄
->
des¸ùt‹
;

2789 if(
audio_decodî_£˘i⁄
->
c⁄sumî_off£t
 == 0) {

2790 
audio_decodî_£˘i⁄
->
ßm∂e_øã
 = 
audio_ícode_des¸ùt‹
->
›
->
	`gë_audio_des¸ùt‹_ßm∂e_øã
(audio_encode_descriptor);

2791 
audio_decodî_£˘i⁄
->
ty≥
 = 
audio_ícode_des¸ùt‹
->
›
->
	`gë_audio_des¸ùt‹_ty≥
(audio_encode_descriptor);

2792 
audio_decodî_£˘i⁄
->
bô_wide
 = 
audio_ícode_des¸ùt‹
->
›
->
	`gë_audio_des¸ùt‹_bô_wide
(audio_encode_descriptor);

2793 
audio_decodî_£˘i⁄
->
time°amp
 = 
audio_ícode_des¸ùt‹
->
›
->
	`gë_audio_des¸ùt‹_time°amp
(audio_encode_descriptor);

2794 
audio_decode_des¸ùt‹
 = &
audio_decodî_£˘i⁄
->
des¸ùt‹
;

2796 
audio_decode_des¸ùt‹
->
›
->
	`£t_audio_des¸ùt‹_vÆid_Àn
◊udio_decode_des¸ùt‹, 
audio_decodî_£˘i⁄
->
∑ylﬂd_Àn
);

2797 
audio_decode_des¸ùt‹
->
›
->
	`£t_audio_des¸ùt‹_ßm∂e_øã
◊udio_decode_des¸ùt‹, 
audio_decodî_£˘i⁄
->
ßm∂e_øã
);

2798 
audio_decode_des¸ùt‹
->
›
->
	`£t_audio_des¸ùt‹_ty≥
◊udio_decode_des¸ùt‹, 
audio_decodî_£˘i⁄
->
ty≥
);

2799 
audio_decode_des¸ùt‹
->
›
->
	`£t_audio_des¸ùt‹_bô_wide
◊udio_decode_des¸ùt‹, 
audio_decodî_£˘i⁄
->
bô_wide
);

2800 if(
audio_ícode_£˘i⁄
->
c⁄sumî_off£t
) {

2801 
audio_decode_des¸ùt‹
->
›
->
	`£t_audio_des¸ùt‹_time°amp
◊udio_decode_des¸ùt‹, 
audio_decodî_£˘i⁄
->
time°amp
);

2803 
audio_decode_des¸ùt‹
->
›
->
	`£t_audio_des¸ùt‹_time°amp
◊udio_decode_des¸ùt‹, 
audio_decodî_£˘i⁄
->
time°amp
 + 0x10);

2805 #ifde‡
ARM_PLATFORM


2806 
desc
 = *(
u32
 *)
audio_decode_des¸ùt‹
->
des¸ùt‹
;

2808 
desc
 = 
	`ö_À32
((*)
audio_decode_des¸ùt‹
->
des¸ùt‹
);

2810 *((
u32
 *)
audio_decode_des¸ùt‹
->
des¸ùt‹
Ë
desc
;

2813 if(
audio_ícode_£˘i⁄
->
c⁄sumî_off£t
 == 0) {

2814 
audio_ícode_£˘i⁄
->
c⁄sumî_off£t
 +(
ext_h264_«l_bô°ªam_t
);

2816 
audio_smÆÀr
 = 
	`H264_MIN
(
audio_decodî_£˘i⁄
->
∑ylﬂd_Àn
 -áudio_decodî_£˘i⁄->
c⁄sumî_off£t
, 
audio_ícode_£˘i⁄
->payload_len -áudio_encode_section->consumer_offset);

2818 
	`¥ötk
("(%3d, %3d), (%3d, %3d), smÆÀ∏%3d, %8p\n",
audio_decodî_£˘i⁄
->
∑ylﬂd_Àn
,

2819 
audio_decodî_£˘i⁄
->
c⁄sumî_off£t
,

2820 
audio_ícode_£˘i⁄
->
∑ylﬂd_Àn
,

2821 
audio_ícode_£˘i⁄
->
c⁄sumî_off£t
, 
audio_smÆÀr
, 
audio_decodî_£˘i⁄
);

2823 
	`mem˝y
(
audio_decodî_£˘i⁄
->
d©a
 +áudio_decodî_£˘i⁄->
c⁄sumî_off£t
,

2824 
audio_ícode_£˘i⁄
->
d©a
 +áudio_ícode_£˘i⁄->
c⁄sumî_off£t
,

2825 
audio_smÆÀr
);

2826 
audio_decodî_£˘i⁄
->
c⁄sumî_off£t
 +
audio_smÆÀr
;

2827 
audio_ícode_£˘i⁄
->
c⁄sumî_off£t
 +
audio_smÆÀr
;

2828 if(
audio_decodî_£˘i⁄
->
c⁄sumî_off£t
 =audio_decodî_£˘i⁄->
∑ylﬂd_Àn
) {

2829 
audio_decodî_∑ckë_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(audio_decoder_packet_queue);

2832 if((
audio_ícode_£˘i⁄
->
c⁄sumî_off£t
 !audio_ícode_£˘i⁄->
∑ylﬂd_Àn
)) {

2833 
ªåy
;

2836 
	`mem˝y
(
audio_decodî_£˘i⁄
->
d©a
, 
audio_£˘i⁄
->d©a,áudio_decodî_£˘i⁄->
£˘i⁄_size
);

2837 
audio_decodî_∑ckë_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(audio_decoder_packet_queue);

2840 
	`¥ötk
("%d:audiÿdecodî disˇrd\n", 
__LINE__
);

2844 
audio_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊udio_∑ckë_queue, &
audio_ch™_drivî
->
audio_buf_poﬁ
);

2848 
audio_íd
:

2849 if(
ícodî_ed
) {

2850 
ícodî_ed
->
›
->
	`˛o£
(encoder_ed);

2852 if(
decodî_ed
) {

2853 
decodî_ed
->
›
->
	`˛o£
(decoder_ed);

2855 
	`£t_fs
(
fs
);

2856 
	`tw_kî√l_fûe_˛o£
(
audio_fûe
);

2859 
wrôe_ªÀa£
:

2860 
	`¨gv_‰ì
(
¨gv
);

2862  
cou¡
;

2863 
	}
}

2865 
	$öô_chù_audio
(
chù_audio_t
 *
chù_audio
, 
dvm_chù_t
 *
chù
, 
bus_id
)

2867 
ªt
 = 
TW_ERR
;

2868 if((
chù_audio
!=
NULL
Ë&& (
chù
!=NULL)){

2869 
tw_¥oc_ªgi°î_s
 *
audio_¥oc
;

2870 
chù_audio
->
chù
 = chip;

2871 
chù_audio
->
›
 = &
chù_audio_›
;

2872 
chù_audio
->
›
->
	`öô
(chip_audio);

2873 
chù_audio
->
›
->
	`£t_chù_audio_∑øm
(chip_audio);

2875 
audio_¥oc
 = &
chù
->audio_proc;

2876 if(!
audio_¥oc
->
íåy
) {

2877 
	`°r˝y
(
audio_¥oc
->
«me
, "audio");

2878 
audio_¥oc
->
ªad
 = 
audio_¥oc_ªad
;

2879 
audio_¥oc
->
wrôe
 = 
audio_¥oc_wrôe
;

2880 
audio_¥oc
->
¥iv©e
 = 
chù_audio
;

2881 
	`tw_moduÀ_ªgi°î
(
chù
, 
audio_¥oc
);

2883 
ªt
 = 
TW_OK
;

2885  
ªt
;

2886 
	}
}

2888 
	$ªmove_chù_audio
(
chù_audio_t
 *
chù_audio
)

2890 if(
chù_audio
 !
NULL
){

2891 
	`tw_moduÀ_uƒegi°î
(
chù_audio
->
chù
, &chù_audio->chù->
audio_¥oc
);

2892 
chù_audio
->
audio_íabÀ
.
›
->
	`upd©e_íabÀ_pcm_ícode
(&chù_audio->audio_íabÀ, 
AUDIO_DISABLE
);

2893 
chù_audio
->
audio_íabÀ
.
›
->
	`upd©e_íabÀ_adpcm_ícode
(&chù_audio->audio_íabÀ, 
AUDIO_DISABLE
);

2894 
chù_audio
->
audio_íabÀ
.
›
->
	`upd©e_íabÀ_adpcm_decode
(&chù_audio->audio_íabÀ, 
AUDIO_DISABLE
);

2895 
chù_audio
->
›
->
	`£t_chù_audio_∑øm
(chip_audio);

2897 
	}
}

	@../../tw5864/tw5864/tw_avSync_device.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
ssize_t
 
	$avSync_devi˚_ªad
(
fûe
 *fûe, 
__u£r
 *
d©a
, 
size_t
 
cou¡
, 
loff_t
 *
µos
)

5 
tw5864_avSync_dev_t
 *
dev
;

6 
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
;

7 
ssize_t
 
ªt
 = 0;

8 
íd_Êags
=0;

10 
dev
 = (
tw5864_avSync_dev_t
*)
fûe
->
¥iv©e_d©a
;

11 i‡(
dev
 =
NULL
) {

12 
	`¥ötk
("[%s]:video_dev i†nuŒ\n", 
__FUNCTION__
);

13  -
ENODEV
;

16 
	`down
(&
dev
->
£m
);

17 if(
	`©omic_ªad
(&
dev
->
›íed_Êags
)) {

18 
avSync_‰ame_queue
 = &
dev
->avSync_frame_queue;

19 if(
avSync_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

20 
ªt
 = 
avSync_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`submô
◊vSync_‰ame_queue->cuº_c⁄sumî, 
d©a
, 
cou¡
, 
µos
, &
íd_Êags
, 
dev
);

22 if(
avSync_‰ame_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(avSync_frame_queue)){

23 
avSync_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(avSync_frame_queue);

25 if(
avSync_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

26 
ªt
 = 
avSync_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`submô
◊vSync_‰ame_queue->cuº_c⁄sumî, 
d©a
, 
cou¡
, 
µos
, &
íd_Êags
, 
dev
);

30 if(
íd_Êags
){

31 
avSync_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊vSync_‰ame_queue, &
dev
->
devi˚_buf_poﬁ
);

34 
	`¥ötk
("%s:%†havênŸ bì¿›íed\n", 
__FUNCTION__
, 
dev
->
«me
);

36 
	`up
(&
dev
->
£m
);

37  
ªt
;

38 
	}
}

40 
	$avSync_devi˚_pﬁl
(
fûe
 *fûe, 
pﬁl_èbÀ_°ru˘
 *
waô
)

42 
tw5864_avSync_dev_t
 *
dev
;

43 
mask
 = 0;

45 
dev
 = (
tw5864_avSync_dev_t
*)
fûe
->
¥iv©e_d©a
;

46 i‡(
dev
 =
NULL
) {

47 
	`¥ötk
("[%s]:video_dev i†nuŒ\n", 
__FUNCTION__
);

48  -
ENODEV
;

50 
	`down
(&
dev
->
£m
);

51 if(
	`©omic_ªad
(&
dev
->
›íed_Êags
)) {

52 
	`pﬁl_waô
(
fûe
, &
dev
->
waô_pﬁl
, 
waô
);

53 if(
dev
->
avSync_‰ame_queue
.
›
->
	`gë_cuº_queue_íåy_numbî
(&dev->avSync_frame_queue)){

54 
mask
 = 
POLLIN
 | 
POLLRDNORM
;

57 
	`¥ötk
("%s:%†havênŸ bì¿›íed\n", 
__FUNCTION__
, 
dev
->
«me
);

58 
mask
 = 
POLLOUT
 | 
POLLWRNORM
 | 
POLLIN
 | 
POLLRDNORM
;

60 
	`up
(&
dev
->
£m
);

61  
mask
;

62 
	}
}

64 
	$avSync_devi˚_io˘l
(
öode
 *öode, 
fûe
 *fûe, 
cmd
, 
¨g
)

66 
tw5864_avSync_dev_t
 *
dev
;

67 
ªt
 = 0;

69 
dev
 = (
tw5864_avSync_dev_t
*)
fûe
->
¥iv©e_d©a
;

70 i‡(
dev
 =
NULL
) {

71 
	`¥ötk
("[%s]:video_dev i†nuŒ\n", 
__FUNCTION__
);

72  -
ENODEV
;

74 
	`TW_DBG
(
TW_DBG_DEBUG
, "IO_TYPE '%c': NR %d\n", 
	`_IOC_TYPE
(
cmd
), 
	`_IOC_NR
(cmd));

76 
	`down
(&
dev
->
£m
);

77 if(
	`©omic_ªad
(&
dev
->
›íed_Êags
)) {

78 
ed_tcb_t
 *
ed
;

79 
cmd
) {

80 
DVM_CODEC_GET_VIDEO_ENCODER_PARAM
:

81 
DVM_CODEC_SET_VIDEO_ENCODER_PARAM
:

82 if(
dev
->
h264_sub_ícode_drivî
) {

83 
ed
 = &
dev
->
h264_sub_ícode_drivî
->
›íed_logic_ch™_ed
;

84 
ªt
 = 
ed
->
›
->
	`io˘l
”d, 
cmd
, 
¨g
);

86 
ªt
 = -
ENODEV
;

89 
TW_CHIP_AUDIO_ENCODE_PARAM_SET
:

90 
TW_CHIP_AUDIO_ENCODE_PARAM_GET
:

91 if(
dev
->
audio_ícode_drivî
) {

92 
ed
 = &
dev
->
audio_ícode_drivî
->
audio_ed
;

93 
ªt
 = 
ed
->
›
->
	`io˘l
”d, 
cmd
, 
¨g
);

95 
ªt
 = -
ENODEV
;

98 
TW_CHIP_AUDIO_DECODE_PARAM_SET
:

99 
TW_CHIP_AUDIO_DECODE_PARAM_GET
:

100 if(
dev
->
audio_decode_drivî
) {

101 
ed
 = &
dev
->
audio_decode_drivî
->
audio_ed
;

102 
ªt
 = 
ed
->
›
->
	`io˘l
”d, 
cmd
, 
¨g
);

104 
ªt
 = -
ENODEV
;

107 
TW_MJPEG_ENCODE_PARAM_SET
:

108 
TW_MJPEG_ENCODE_PARAM_GET
:

109 if(
dev
->
j≥g_ícode_drivî
) {

110 
ed
 = &
dev
->
j≥g_ícode_drivî
->
›íed_logic_ch™_ed
;

111 
ªt
 = 
ed
->
›
->
	`io˘l
”d, 
cmd
, 
¨g
);

113 
ªt
 = -
ENODEV
;

118 
ªt
 = 0;

121 
	`¥ötk
("%s:%†havênŸ bì¿›íed\n", 
__FUNCTION__
, 
dev
->
«me
);

123 
	`up
(&
dev
->
£m
);

124  
ªt
;

125 
	}
}

127 
	$avSync_devi˚_ªÀa£
(
öode
 *öode, 
fûe
 *file)

129 
tw5864_avSync_dev_t
 *
dev
;

131 
dev
 = (
tw5864_avSync_dev_t
*)
fûe
->
¥iv©e_d©a
;

132 i‡(
dev
 =
NULL
) {

133 
	`¥ötk
("[%s]:video_dev i†nuŒ\n", 
__FUNCTION__
);

134  -
ENODEV
;

136 
	`down
(&
dev
->
£m
);

137 if(
	`©omic_ªad
(&
dev
->
›íed_Êags
)){

138 
ed_tcb_t
 *
ed
;

139 if(
dev
->
h264_ma°î_ícode_drivî
 !
NULL
){

140 
ed
 = &
dev
->
h264_ma°î_ícode_drivî
->
›íed_logic_ch™_ed
;

141 
	`¥ötk
("\n\n%s.%d: sèπ clo£ ma°î videÿch™_%d\n", 
__FUNCTION__
, 
__LINE__
, 
dev
->
dev_öode_id
);

142 
ed
->
›
->
	`˛o£
(ed);

143 
	`¥ötk
("%s.%d: clo£ ma°î videÿch™_%d ovî\n\n", 
__FUNCTION__
, 
__LINE__
, 
dev
->
dev_öode_id
);

146 if(
dev
->
h264_sub_ícode_drivî
 !
NULL
){

147 
ed
 = &
dev
->
h264_sub_ícode_drivî
->
›íed_logic_ch™_ed
;

148 
	`¥ötk
("\n\n%s.%d: sèπ clo£ sub videÿch™_%d\n", 
__FUNCTION__
, 
__LINE__
, 
dev
->
dev_öode_id
);

149 
ed
->
›
->
	`˛o£
(ed);

150 
	`¥ötk
("%s.%d: clo£ sub videÿch™_%d ovî\n\n", 
__FUNCTION__
, 
__LINE__
, 
dev
->
dev_öode_id
);

153 if(
dev
->
j≥g_ícode_drivî
 !
NULL
){

154 
ed
 = &
dev
->
j≥g_ícode_drivî
->
›íed_logic_ch™_ed
;

155 
	`¥ötk
("%s.%d: sèπ clo£ j≥g!\n", 
__FUNCTION__
, 
__LINE__
);

156 
ed
->
›
->
	`˛o£
(&
dev
->
j≥g_ícode_drivî
->
›íed_logic_ch™_ed
);

157 
	`¥ötk
("%s,%d:j≥g clo£d!\n", 
__FUNCTION__
, 
__LINE__
);

159 if(
dev
->
audio_ícode_drivî
 !
NULL
){

160 
ed
 = &
dev
->
audio_ícode_drivî
->
audio_ed
;

161 
	`¥ötk
("\n\n%s.%d: sèπ clo£áudiÿícodêch™_%d\n", 
__FUNCTION__
, 
__LINE__
, 
dev
->
dev_öode_id
);

162 
ed
->
›
->
	`˛o£
(ed);

163 
	`¥ötk
("%s.%d: clo£áudiÿícodêch™_%d ovî\n\n", 
__FUNCTION__
, 
__LINE__
, 
dev
->
dev_öode_id
);

165 if(
dev
->
audio_decode_drivî
 !
NULL
){

166 
ed
 = &
dev
->
audio_decode_drivî
->
audio_ed
;

167 
	`¥ötk
("\n\n%s.%d: sèπ clo£áudiÿdecodêch™_%d\n", 
__FUNCTION__
, 
__LINE__
, 
dev
->
dev_öode_id
);

168 
ed
->
›
->
	`˛o£
(ed);

169 
	`¥ötk
("%s.%d: clo£áudiÿdecodêch™_%d ovî\n\n", 
__FUNCTION__
, 
__LINE__
, 
dev
->
dev_öode_id
);

171 
	`¥ötk
("%s,%d:Ññó£ávSyn¯‰amêqueue!\n", 
__FUNCTION__
, 
__LINE__
);

172 
	`ªmove_avSync_‰ame_queue
(&
dev
->
avSync_‰ame_queue
, &dev->
devi˚_buf_poﬁ
);

173 
fûe
->
¥iv©e_d©a
 = 
NULL
;

174 
	`©omic_£t
(&
dev
->
›íed_Êags
, 0);

176 
Êags
;

177 
	`loˇl_úq_ßve
(
Êags
);

178 
	`¥ötk
("\n\n<<------%s.%d: clo£ devi˚_%d ovî------>>\n", 
__FUNCTION__
, 
__LINE__
, 
dev
->
dev_öode_id
);

179 if(
dev
->
h264_ma°î_ícode_drivî
 !
NULL
){

180 
ed
 = &
dev
->
h264_ma°î_ícode_drivî
->
›íed_logic_ch™_ed
;

181 
	`¥ötk
("ma°î video_∑ckë_poﬁ_tcb = %d\n", 
dev
->
h264_ma°î_ícode_drivî
->
ícode_ch™_buf_poﬁ
.
video_∑ckë_poﬁ_tcb
.
›
->
	`gë_cuº_poﬁ_íåy_numbî
(&dev->h264_master_encode_driver->encode_chan_buf_pool.video_packet_pool_tcb));

182 
	`¥ötk
("ma°î video_‰ame_poﬁ_tcb = %d\n", 
dev
->
h264_ma°î_ícode_drivî
->
ícode_ch™_buf_poﬁ
.
video_‰ame_poﬁ_tcb
.
›
->
	`gë_cuº_poﬁ_íåy_numbî
(&dev->h264_master_encode_driver->encode_chan_buf_pool.video_frame_pool_tcb));

183 
	`¥ötk
("ma°î sèã %d\n", 
ed
->
›
->
	`gë_°©e
(ed));

185 if(
dev
->
h264_sub_ícode_drivî
 !
NULL
){

186 
ed
 = &
dev
->
h264_sub_ícode_drivî
->
›íed_logic_ch™_ed
;

187 
	`¥ötk
("sub video_∑ckë_poﬁ_tcb = %d\n", 
dev
->
h264_sub_ícode_drivî
->
ícode_ch™_buf_poﬁ
.
video_∑ckë_poﬁ_tcb
.
›
->
	`gë_cuº_poﬁ_íåy_numbî
(&dev->h264_sub_encode_driver->encode_chan_buf_pool.video_packet_pool_tcb));

188 
	`¥ötk
("sub video_‰ame_poﬁ_tcb = %d\n", 
dev
->
h264_sub_ícode_drivî
->
ícode_ch™_buf_poﬁ
.
video_‰ame_poﬁ_tcb
.
›
->
	`gë_cuº_poﬁ_íåy_numbî
(&dev->h264_sub_encode_driver->encode_chan_buf_pool.video_frame_pool_tcb));

189 
	`¥ötk
("sub sèã %d\n", 
ed
->
›
->
	`gë_°©e
(ed));

191 if(
dev
->
j≥g_ícode_drivî
 !
NULL
){

194 if(
dev
->
audio_ícode_drivî
 !
NULL
){

195 
	`¥ötk
("ícodêaudio_queuê%d\n", 
dev
->
audio_ícode_drivî
->
audio_∑ckë_queue
.
›
->
	`gë_cuº_queue_íåy_numbî
(&dev->audio_encode_driver->audio_packet_queue));

196 
	`¥ötk
("ícodêaudio_∑ckë_poﬁ_tcb = %d\n", 
dev
->
audio_ícode_drivî
->
audio_buf_poﬁ
.
›
->
	`gë_audio_£˘i⁄_tcb_poﬁ_íåy_numbî
(&dev->audio_encode_driver->audio_buf_pool));

198 if(
dev
->
audio_decode_drivî
 !
NULL
){

199 
	`¥ötk
("decodêaudio_queuê%d\n", 
dev
->
audio_decode_drivî
->
audio_∑ckë_queue
.
›
->
	`gë_cuº_queue_íåy_numbî
(&dev->audio_decode_driver->audio_packet_queue));

200 
	`¥ötk
("decodêaudio_∑ckë_poﬁ_tcb = %d\n", 
dev
->
audio_decode_drivî
->
audio_buf_poﬁ
.
›
->
	`gë_audio_£˘i⁄_tcb_poﬁ_íåy_numbî
(&dev->audio_decode_driver->audio_buf_pool));

202 
	`¥ötk
("\n");

203 
	`loˇl_úq_ª°‹e
(
Êags
);

206 
	`¥ötk
("%s:%†havênŸ bì¿›íed\n", 
__FUNCTION__
, 
dev
->
«me
);

208 
	`up
(&
dev
->
£m
);

210 
	}
}

212 
	$avSync_devi˚_›í
(
öode
 *öode, 
fûe
 *file)

214 
tw5864_avSync_dev_t
 *
dev
;

215 
mö‹
 = 
	`imö‹
(
öode
);

217 
	`TW_DBG
(
TW_DBG_INFO
, "›í mö‹ = %d\n", 
mö‹
);

218 
	`gë_tw5864_avSync_devi˚
(&
dev
, 
mö‹
);

219 i‡(
dev
 =
NULL
) {

220 
	`TW_DBG
(
TW_DBG_ERR
, "video_dev isÇull\n");

221  -
ENODEV
;

223 
	`down
(&
dev
->
£m
);

224 if(
	`©omic_ªad
(&
dev
->
›íed_Êags
)){

225 
	`¥ötk
("%s:%†havêbì¿›íed\n", 
__FUNCTION__
, 
dev
->
«me
);

227 
ed_tcb_t
 *
ed
;

228 
	`©omic_£t
(&
dev
->
›íed_Êags
, 1);

231 if(
dev
->
h264_ma°î_ícode_drivî
 !
NULL
){

232 
ed
 = &
dev
->
h264_ma°î_ícode_drivî
->
›íed_logic_ch™_ed
;

233 
ed
->
›
->
	`›í
(ed);

236 if(
dev
->
h264_sub_ícode_drivî
 !
NULL
){

237 
ed
 = &
dev
->
h264_sub_ícode_drivî
->
›íed_logic_ch™_ed
;

238 
ed
->
›
->
	`›í
(ed);

241 if(
dev
->
j≥g_ícode_drivî
 !
NULL
){

242 
ed
 = &
dev
->
j≥g_ícode_drivî
->
›íed_logic_ch™_ed
;

243 
ed
->
›
->
	`›í
(ed);

245 if(
dev
->
audio_ícode_drivî
 !
NULL
){

246 
ed
 = &
dev
->
audio_ícode_drivî
->
audio_ed
;

247 
ed
->
›
->
	`›í
(ed);

249 if(
dev
->
audio_decode_drivî
 !
NULL
){

250 
ed
 = &
dev
->
audio_decode_drivî
->
audio_ed
;

251 
ed
->
›
->
	`›í
(ed);

255 
fûe
->
¥iv©e_d©a
 = 
dev
;

257 
	`up
(&
dev
->
£m
);

260 
	`TW_DBG
(
TW_DBG_INFO
, "open successful\n");

263 
	}
}

265 
fûe_›î©i⁄s
 
	gavSync_devi˚_f›s
 =

267 .
ow√r
 = 
THIS_MODULE
,

268 .
	gŒ£ek
 = 
NULL
,

269 .
	gªad
 = 
avSync_devi˚_ªad
,

270 .
	gwrôe
 = 
NULL
,

271 .
	gpﬁl
 = 
avSync_devi˚_pﬁl
,

272 .
	gio˘l
 = 
avSync_devi˚_io˘l
,

273 .
	gmm≠
 = 
NULL
,

274 .
	gªÀa£
 = 
avSync_devi˚_ªÀa£
,

275 .
	g›í
 = 
avSync_devi˚_›í
,

278 
	$v4l2devi˚_ªÀa£
(
video_devi˚
 *
vfd
)

280 
	`¥ötk
("nÿsuµ‹à%†›\n", 
__FUNCTION__
);

281 
	}
}

283 
	$video_devi˚_öô
(
tw5864_avSync_dev_t
 *
dev
)

285 
video_devi˚
 *
vfd
;

287 
vfd
 = &
dev
->vfd;

288 
	`°∫˝y
(
vfd
->
«me
, 
dev
->«me, 
	`°æí
(dev->name)+1);

289 
vfd
->
f›s
 = &
avSync_devi˚_f›s
;

290 
vfd
->
mö‹
 = 
dev
->
dev_öode_id
;

291 
vfd
->
ªÀa£
 = 
v4l2devi˚_ªÀa£
;

292 #i‡
LINUX_VERSION_CODE
 < 
	`KERNEL_VERSION
(2, 6, 28)

293 
vfd
->
ty≥
 = 
VID_TYPE_CAPTURE
;

294 
vfd
->
h¨dw¨e
 = 0;

295 
vfd
->
vidioc_quîyˇp
 = 
NULL
;

296 
vfd
->
vidioc_íum_fmt_ˇp
 = 
NULL
;

297 
vfd
->
vidioc_g_fmt_ˇp
 = 
NULL
;

298 
vfd
->
vidioc_åy_fmt_ˇp
 = 
NULL
;

299 
vfd
->
vidioc_s_fmt_ˇp
 = 
NULL
;

300 
vfd
->
vidioc_ªqbufs
 = 
NULL
;

301 
vfd
->
vidioc_quîybuf
 = 
NULL
;

302 
vfd
->
vidioc_qbuf
 = 
NULL
;

303 
vfd
->
vidioc_dqbuf
 = 
NULL
;

304 
vfd
->
vidioc_s_°d
 = 
NULL
;

305 
vfd
->
vidioc_íum_öput
 = 
NULL
;

306 
vfd
->
vidioc_g_öput
 = 
NULL
;

307 
vfd
->
vidioc_s_öput
 = 
NULL
;

308 
vfd
->
vidioc_quîy˘æ
 = 
NULL
;

309 
vfd
->
vidioc_g_˘æ
 = 
NULL
;

310 
vfd
->
vidioc_s_˘æ
 = 
NULL
;

311 
vfd
->
vidioc_°ªam⁄
 = 
NULL
;

312 
vfd
->
vidioc_°ªamoff
 = 
NULL
;

313 #ifde‡
CONFIG_VIDEO_V4L1_COMPAT


314 
vfd
->
vidiocgmbuf
 = 
NULL
;

317 
vfd
->
vÊ_ty≥
 = 
VFL_TYPE_GRABBER
;

318 
vfd
->
io˘l_›s
 = 
NULL
;

321 
	}
};

323 
	$öô_tw5864_avSync_dev
(
tw5864_avSync_dev_t
 *
dev
, 
bus_id
, 
chù_id
, 
öode_id
, 
id
)

325 
ªt
 = 
TW_ERR
;

326 if(
dev
 !
NULL
){

327 
dev
->
bus_id
 = bus_id;

328 
dev
->
chù_id
 = chip_id;

329 
dev
->
dev_öode_id
 = 
öode_id
;

330 
dev
->
id
 = id;

331 
	`•rötf
(
dev
->
«me
, "tw5864_avSync_dev_%d", dev->
dev_öode_id
);

332 
	`video_devi˚_öô
(
dev
);

333 
	`öô_MUTEX
(&
dev
->
£m
);

334 
	`©omic_£t
(&
dev
->
›íed_Êags
, 0);

335 
	`öô_waôqueue_hód
(&
dev
->
waô_pﬁl
);

337 
dev
->
h264_ma°î_ícode_drivî
 = 
NULL
;

338 
dev
->
h264_sub_ícode_drivî
 = 
NULL
;

339 
dev
->
j≥g_ícode_drivî
 = 
NULL
;

340 
dev
->
audio_ícode_drivî
 = 
NULL
;

341 
dev
->
audio_decode_drivî
 = 
NULL
;

343 
ªt
 = 
	`öô_avSync_‰ame_buf_poﬁ
(&
dev
->
devi˚_buf_poﬁ
);

344 if(
ªt
 =
TW_OK
){

345 
	`öô_avSync_‰ame_queue
(&
dev
->
avSync_‰ame_queue
);

346 
	`TW_DBG
(
TW_DBG_DEBUG
, "ªgi°î videÿdevi˚ mö‹ %d\n", 
dev
->
dev_öode_id
);

347 #ifdef 
ARM_PLATFORM


348 
ªt
 = 
	`video_ªgi°î_devi˚
(&
dev
->
vfd
, 
VFL_TYPE_GRABBER
, dev->
dev_öode_id
);

350 
ªt
 = 
	`video_ªgi°î_devi˚_ödex
(&
dev
->
vfd
, 
VFL_TYPE_GRABBER
, dev->
dev_öode_id
, dev->dev_inode_id);

352 if(
ªt
) {

353 
	`TW_DBG
(
TW_DBG_ERR
, "ªgi°î videÿdevi˚ faûed %d\n", 
ªt
);

357  
ªt
;

358 
	}
}

360 
	$ªmove_tw5864_avSync_dev
(
tw5864_avSync_dev_t
 *
dev
)

362 if(
dev
 !
NULL
){

363 if(
dev
->
h264_ma°î_ícode_drivî
 !
NULL
){

364 
	`ªmove_tw5864_h264_ícode_ch™
(
dev
->
h264_ma°î_ícode_drivî
);

366 if(
dev
->
h264_sub_ícode_drivî
 !
NULL
){

367 
	`ªmove_tw5864_h264_ícode_ch™
(
dev
->
h264_sub_ícode_drivî
);

369 if(
dev
->
j≥g_ícode_drivî
 !
NULL
){

370 
	`ªmove_tw5864_j≥g_ícode_ch™
(
dev
->
j≥g_ícode_drivî
);

372 if(
dev
->
audio_ícode_drivî
 !
NULL
){

373 
	`ªmove_tw5864_audio_ícode_ch™
(
dev
->
audio_ícode_drivî
);

375 
	`ªmove_avSync_‰ame_queue
(&
dev
->
avSync_‰ame_queue
, &dev->
devi˚_buf_poﬁ
);

376 
	`ªmove_avSync_‰ame_buf_poﬁ
(&
dev
->
devi˚_buf_poﬁ
);

377 
	`video_uƒegi°î_devi˚
(&
dev
->
vfd
);

379 
	}
}

381 
	$böd_av_devi˚_™d_drivî
(
tw5864_avSync_dev_t
 *
tw_devi˚_ch™
, 
tw_h264_logic_ícode_ch™_t
 *
h264_ma°î_ícode_logic_ch™
,Åw_h264_logic_ícode_ch™_à*
h264_sub_ícode_logic_ch™
, 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
, 
tw_audio_drivî_t
 *
audio_ícode_drivî
)

383 if(
tw_devi˚_ch™
 !
NULL
){

384 
tw_devi˚_ch™
->
h264_ma°î_ícode_drivî
 = 
h264_ma°î_ícode_logic_ch™
;

385 
tw_devi˚_ch™
->
h264_sub_ícode_drivî
 = 
h264_sub_ícode_logic_ch™
;

386 
tw_devi˚_ch™
->
j≥g_ícode_drivî
 = 
j≥g_logic_ch™
;

387 
tw_devi˚_ch™
->
audio_ícode_drivî
 =áudio_encode_driver;

389 if(
h264_ma°î_ícode_logic_ch™
 !
NULL
){

390 
h264_ma°î_ícode_logic_ch™
->
tw_devi˚_ch™
 =Åw_device_chan;

392 if(
h264_sub_ícode_logic_ch™
 !
NULL
){

393 
h264_sub_ícode_logic_ch™
->
tw_devi˚_ch™
 =Åw_device_chan;

395 if(
j≥g_logic_ch™
){

396 
j≥g_logic_ch™
->
tw_devi˚_ch™
 =Åw_device_chan;

398 if(
audio_ícode_drivî
 !
NULL
){

399 
audio_ícode_drivî
->
tw_devi˚_ch™
 =Åw_device_chan;

401 
	}
}

403 
	$unböd_av_devi˚_™d_drivî
(
tw5864_avSync_dev_t
 *
tw_devi˚_ch™
, 
tw_h264_logic_ícode_ch™_t
 *
h264_ma°î_ícode_logic_ch™
,Åw_h264_logic_ícode_ch™_à*
h264_sub_ícode_logic_ch™
, 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
, 
tw_audio_drivî_t
 *
audio_ícode_drivî
)

405 if(
tw_devi˚_ch™
 !
NULL
){

406 
tw_devi˚_ch™
->
h264_ma°î_ícode_drivî
 = 
NULL
;

407 
tw_devi˚_ch™
->
h264_sub_ícode_drivî
 = 
NULL
;

408 
tw_devi˚_ch™
->
audio_ícode_drivî
 = 
NULL
;

410 if(
h264_ma°î_ícode_logic_ch™
 !
NULL
){

411 
h264_ma°î_ícode_logic_ch™
->
tw_devi˚_ch™
 = 
NULL
;

413 if(
h264_sub_ícode_logic_ch™
 !
NULL
){

414 
h264_sub_ícode_logic_ch™
->
tw_devi˚_ch™
 = 
NULL
;

416 if(
j≥g_logic_ch™
){

417 
j≥g_logic_ch™
->
tw_devi˚_ch™
 = 
NULL
;

419 if(
audio_ícode_drivî
 !
NULL
){

420 
audio_ícode_drivî
->
tw_devi˚_ch™
 = 
NULL
;

422 
	}
}

	@../../tw5864/tw5864/tw_avSync_device_buf.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
	$avSync_‰ame_tcb_öô
(
avSync_‰ame_tcb_t
 *
‰ame
)

5 if((
‰ame
!=
NULL
)){

6 
tcb_node_t
 *
node
 = &
‰ame
->
‰ame_node
;

7 
	`•ö_lock_öô
(&
‰ame
->
lock
);

8 
	`©omic_£t
(&
‰ame
->
ªf_cou¡
, 0);

9 
node
->
›
 = &
tcb_node_›
;

10 
node
->
›
->
	`öô
(node);

11 
node
->
›
->
	`£t_¥iv
“ode, 
‰ame
);

12 
‰ame
->
cuº_submô_tcb
 = 
CURR_SUBMIT_IS_264_MASTER_FRAME
;

13 
‰ame
->
h264_ma°î_‰ame
 = 
NULL
;

14 
‰ame
->
h264_ma°î_mv_‰ame
 = 
NULL
;

15 
‰ame
->
h264_sub_‰ame
 = 
NULL
;

16 
‰ame
->
h264_sub_mv_‰ame
 = 
NULL
;

17 #ifde‡
MJPEG_MODULE


18 
‰ame
->
j≥g_‰ame
 = 
NULL
;

20 
‰ame
->
audio_ícode_‰ame
 = 
NULL
;

21 
‰ame
->
audio_decode_‰ame
 = 
NULL
;

23 
	}
}

25 
	$avSync_‰ame_tcb_ª£t
(
avSync_‰ame_tcb_t
 *
‰ame
)

27 if((
‰ame
!=
NULL
)){

28 
	`©omic_£t
(&
‰ame
->
ªf_cou¡
, 0);

29 
‰ame
->
cuº_submô_tcb
 = 
CURR_SUBMIT_IS_264_MASTER_FRAME
;

31 
	}
}

33 
	$avSync_‰ame_tcb_ªÀa£
(
avSync_‰ame_tcb_t
 **
±r_‰ame
, 
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
)

35 if((*
±r_‰ame
!=
NULL
Ë&& (
video_devi˚_buf_poﬁ
!=NULL)){

36 
avSync_‰ame_tcb_t
 *
avSync_‰ame
 = *
±r_‰ame
;

37 
Êags
;

39 
	`•ö_lock_úqßve
(&
avSync_‰ame
->
lock
, 
Êags
);

40 if(
	`©omic_ªad
(&
avSync_‰ame
->
ªf_cou¡
) > 1){

41 
	`©omic_dec
(&
avSync_‰ame
->
ªf_cou¡
);

43 
tcb_node_t
 *
node
;

44 if(
avSync_‰ame
->
›
 !
NULL
){

45 
avSync_‰ame
->
›
->
	`ª£t
(avSync_frame);

47 if(
avSync_‰ame
->
h264_ma°î_‰ame
 !
NULL
){

48 
avSync_‰ame
->
h264_ma°î_‰ame
->
›
->
	`ªÀa£
(&avSync_‰ame->h264_ma°î_‰ame, 
NULL
);

50 if(
avSync_‰ame
->
h264_ma°î_mv_‰ame
 !
NULL
){

51 
avSync_‰ame
->
h264_ma°î_mv_‰ame
->
›
->
	`ªÀa£
(&avSync_‰ame->h264_ma°î_mv_‰ame, 
NULL
);

53 if(
avSync_‰ame
->
h264_sub_‰ame
 !
NULL
){

54 
avSync_‰ame
->
h264_sub_‰ame
->
›
->
	`ªÀa£
(&avSync_‰ame->h264_sub_‰ame, 
NULL
);

56 if(
avSync_‰ame
->
h264_sub_mv_‰ame
 !
NULL
){

57 
avSync_‰ame
->
h264_sub_mv_‰ame
->
›
->
	`ªÀa£
(&avSync_‰ame->h264_sub_mv_‰ame, 
NULL
);

59 #ifde‡
MJPEG_MODULE


60 if(
avSync_‰ame
->
j≥g_‰ame
 !
NULL
){

61 
avSync_‰ame
->
j≥g_‰ame
->
›
->
	`ªÀa£
(&avSync_‰ame->j≥g_‰ame, 
NULL
);

64 if(
avSync_‰ame
->
audio_ícode_‰ame
 !
NULL
){

65 
avSync_‰ame
->
audio_ícode_‰ame
->
›
->
	`ªÀa£
(&avSync_‰ame->audio_ícode_‰ame, 
NULL
);

67 if(
avSync_‰ame
->
audio_decode_‰ame
 !
NULL
){

68 
avSync_‰ame
->
audio_decode_‰ame
->
›
->
	`ªÀa£
(&avSync_‰ame->audio_decode_‰ame, 
NULL
);

70 
node
 = &
avSync_‰ame
->
‰ame_node
;

71 if(
node
->
›
 !
NULL
){

72 
node
->
›
->
	`ªÀa£
“ode, &
video_devi˚_buf_poﬁ
->
avSync_‰ame_poﬁ_node
);

74 *
±r_‰ame
 = 
NULL
;

76 
	`•ö_u∆ock_úqª°‹e
(&
avSync_‰ame
->
lock
, 
Êags
);

78 
	}
}

80 
	$avSync_‰ame_tcb_ª„ªn˚
(
avSync_‰ame_tcb_t
 *
§c_‰ame
,ávSync_‰ame_tcb_à**
±r_de°_‰ame
)

82 if((
§c_‰ame
!=
NULL
Ë&& (
±r_de°_‰ame
!=NULL)){

83 
Êags
;

85 
	`•ö_lock_úqßve
(&
§c_‰ame
->
lock
, 
Êags
);

86 
	`©omic_öc
(&
§c_‰ame
->
ªf_cou¡
);

87 *
±r_de°_‰ame
 = 
§c_‰ame
;

88 
	`•ö_u∆ock_úqª°‹e
(&
§c_‰ame
->
lock
, 
Êags
);

90 
	}
}

92 
size_t
 
	$avSync_‰ame_tcb_submô
(
avSync_‰ame_tcb_t
 *
avSync_‰ame
, 
__u£r
 *
d©a
, 
size_t
 
cou¡
, 
loff_t
 *
µos
, *
‰ame_íd
, 
tw5864_avSync_dev_t
 *
dev
)

94 
ssize_t
 
‰ame_size
 = 0;

95 if((
d©a
!=
NULL
Ë&& (
cou¡
>0)){

96 
tw_video_‰ame_tcb_t
 *
h264_ma°î_‰ame
 = 
avSync_‰ame
->h264_master_frame;

97 
tw_video_mv_‰ame_tcb_t
 *
h264_ma°î_mv_‰ame
 = 
avSync_‰ame
->h264_master_mv_frame;

98 
tw_video_‰ame_tcb_t
 *
h264_sub_‰ame
 = 
avSync_‰ame
->h264_sub_frame;

99 
tw_video_mv_‰ame_tcb_t
 *
h264_sub_mv_‰ame
 = 
avSync_‰ame
->h264_sub_mv_frame;

100 #ifde‡
MJPEG_MODULE


101 
tw_vb_‰ame_tcb_t
 *
j≥g_‰ame
 = 
avSync_‰ame
->jpeg_frame;

102 
tw_vb_poﬁ_t
 *
j≥g_buf_poﬁ
;

104 
tw_audio_∑ckë_£˘i⁄_t
 *
audio_ícode_‰ame
 = 
avSync_‰ame
->audio_encode_frame;

105 
tw_video_ch™_buf_poﬁ_t
 *
video_ícode_ch™_buf_poﬁ
;

106 
tw_audio_ch™_buf_poﬁ_t
 *
audio_buf_poﬁ
 = &
dev
->
audio_ícode_drivî
->audio_buf_pool;

107 
size_t
 
buf_size
;

108 
loff_t
 
buf_off£t
, 
‰ame_off£t
;

110 *
‰ame_íd
 = 0;

111 
buf_size
 = 
cou¡
;

112 
buf_off£t
 = 0;

113 if(
h264_ma°î_‰ame
 !
NULL
){

114 
video_ícode_ch™_buf_poﬁ
 = &
dev
->
h264_ma°î_ícode_drivî
->
ícode_ch™_buf_poﬁ
;

115 
‰ame_off£t
 = 0;

116 
h264_ma°î_‰ame
->
›
->
	`submô
(h264_ma°î_‰ame, &
d©a
[
buf_off£t
], 
buf_size
, &
‰ame_off£t
, 
TW_MASTER_BITSTREAM
, 
video_ícode_ch™_buf_poﬁ
);

117 
h264_ma°î_‰ame
->
›
->
	`ªÀa£
(&
avSync_‰ame
->h264_ma°î_‰ame, 
video_ícode_ch™_buf_poﬁ
);

118 
buf_size
 -
‰ame_off£t
;

119 
buf_off£t
 +
‰ame_off£t
;

121 if(
h264_ma°î_mv_‰ame
 !
NULL
){

122 
video_ícode_ch™_buf_poﬁ
 = &
dev
->
h264_ma°î_ícode_drivî
->
ícode_ch™_buf_poﬁ
;

123 
‰ame_off£t
 = 0;

124 
h264_ma°î_mv_‰ame
->
›
->
	`submô
(h264_ma°î_mv_‰ame, &
d©a
[
buf_off£t
], 
buf_size
, &
‰ame_off£t
, 
TW_MASTER_BITSTREAM
, 
video_ícode_ch™_buf_poﬁ
);

125 
h264_ma°î_mv_‰ame
->
›
->
	`ªÀa£
(&
avSync_‰ame
->h264_ma°î_mv_‰ame, 
video_ícode_ch™_buf_poﬁ
);

126 
buf_size
 -
‰ame_off£t
;

127 
buf_off£t
 +
‰ame_off£t
;

129 if(
h264_sub_‰ame
 !
NULL
){

130 
video_ícode_ch™_buf_poﬁ
 = &
dev
->
h264_sub_ícode_drivî
->
ícode_ch™_buf_poﬁ
;

131 
‰ame_off£t
 = 0;

132 
h264_sub_‰ame
->
›
->
	`submô
(h264_sub_‰ame, &
d©a
[
buf_off£t
], 
buf_size
, &
‰ame_off£t
, 
TW_SUB_BITSTREAM
, 
video_ícode_ch™_buf_poﬁ
);

133 
h264_sub_‰ame
->
›
->
	`ªÀa£
(&
avSync_‰ame
->h264_sub_‰ame, 
video_ícode_ch™_buf_poﬁ
);

134 
buf_size
 -
‰ame_off£t
;

135 
buf_off£t
 +
‰ame_off£t
;

137 if(
h264_sub_mv_‰ame
 !
NULL
){

138 
video_ícode_ch™_buf_poﬁ
 = &
dev
->
h264_sub_ícode_drivî
->
ícode_ch™_buf_poﬁ
;

139 
‰ame_off£t
 = 0;

140 
h264_sub_mv_‰ame
->
›
->
	`submô
(h264_sub_mv_‰ame, &
d©a
[
buf_off£t
], 
buf_size
, &
‰ame_off£t
, 
TW_SUB_BITSTREAM
, 
video_ícode_ch™_buf_poﬁ
);

141 
h264_sub_mv_‰ame
->
›
->
	`ªÀa£
(&
avSync_‰ame
->h264_sub_mv_‰ame, 
video_ícode_ch™_buf_poﬁ
);

142 
buf_size
 -
‰ame_off£t
;

143 
buf_off£t
 +
‰ame_off£t
;

145 #ifde‡
MJPEG_MODULE


146 if(
j≥g_‰ame
 !
NULL
){

147 
j≥g_buf_poﬁ
 = &
dev
->
j≥g_ícode_drivî
->
poﬁ
;

148 
‰ame_off£t
 = 0;

149 
j≥g_‰ame
->
›
->
	`submô
(j≥g_‰ame, &
d©a
[
buf_off£t
], 
buf_size
, &
‰ame_off£t
, 
TW_MASTER_BITSTREAM
, 
j≥g_buf_poﬁ
);

150 
j≥g_‰ame
->
›
->
	`ªÀa£
(&
avSync_‰ame
->j≥g_‰ame, 
j≥g_buf_poﬁ
);

151 
buf_size
 -
‰ame_off£t
;

152 
buf_off£t
 +
‰ame_off£t
;

155 if(
audio_ícode_‰ame
 !
NULL
){

156 
audio_buf_poﬁ
 = &
dev
->
audio_ícode_drivî
->audio_buf_pool;

157 
‰ame_off£t
 = 0;

158 
audio_ícode_‰ame
->
›
->
	`submô
◊udio_ícode_‰ame, &
d©a
[
buf_off£t
], 
buf_size
, &
‰ame_off£t
, 
TW_MASTER_BITSTREAM
, 
audio_buf_poﬁ
);

160 if(
dev
->
audio_ícode_drivî
->
audio_logic_ch™_id
 =
TW_AUDIO_IN_CHAN0_ID
)

162 
tw_audio_drivî_t
 *
audio_decode_ch™_drivî
;

163 
tw_audio_∑ckë_queue_t
 *
audio_decode_∑ckë_queue
;

165 
dev
->
audio_ícode_drivî
->
chù_audio
->
›
->
	`gë_audio_ch™_drivî
(dev->audio_ícode_drivî->chù_audio, 
TW_AUDIO_OUT_SPEAKER_ID
, &
audio_decode_ch™_drivî
);

166 
audio_decode_∑ckë_queue
 = &
audio_decode_ch™_drivî
->
audio_∑ckë_queue
;

167 
audio_decode_∑ckë_queue
->
›
->
	`åy_gë_cuº_¥odu˚r_‰om_poﬁ
◊udio_decode_∑ckë_queue, &
audio_decode_ch™_drivî
->
audio_buf_poﬁ
);

168 if(
audio_decode_∑ckë_queue
->
cuº_¥odu˚r
 !
NULL
){

169 
tw_audio_∑ckë_£˘i⁄_t
 *
audio_decode_£˘i⁄
 = 
audio_decode_∑ckë_queue
->
cuº_¥odu˚r
;

170 
audio_decode_£˘i⁄
->
∑ylﬂd_Àn
 = 
audio_ícode_‰ame
->payload_len;

171 
audio_decode_£˘i⁄
->
ßm∂e_øã
 = 
audio_ícode_‰ame
->sample_rate;

172 
audio_decode_£˘i⁄
->
ty≥
 = 
audio_ícode_‰ame
->type;

173 
audio_decode_£˘i⁄
->
bô_wide
 = 
audio_ícode_‰ame
->bit_wide;

174 
audio_decode_£˘i⁄
->
time°amp
 = 
audio_ícode_‰ame
->timestamp;

175 
	`mem˝y
(
audio_decode_£˘i⁄
->
d©a
, 
audio_ícode_‰ame
->d©a,áudio_decode_£˘i⁄->
∑ylﬂd_Àn
);

176 
audio_decode_∑ckë_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(audio_decode_packet_queue);

180 
audio_ícode_‰ame
->
›
->
	`ªÀa£
(&
avSync_‰ame
->audio_ícode_‰ame, 
audio_buf_poﬁ
);

181 
buf_size
 -
‰ame_off£t
;

182 
buf_off£t
 +
‰ame_off£t
;

184 *
‰ame_íd
 = 1;

185 *
µos
 = 
buf_off£t
;

186 
‰ame_size
 = 
buf_off£t
;

188  
‰ame_size
;

189 
	}
}

191 
avSync_‰ame_tcb_›î©i⁄
 
	gavSync_‰ame_tcb_›
 = {

192 .
öô
 = 
avSync_‰ame_tcb_öô
,

193 .
	gª£t
 = 
avSync_‰ame_tcb_ª£t
,

194 .
	gªÀa£
 = 
avSync_‰ame_tcb_ªÀa£
,

195 .
	gª„ªn˚
 = 
avSync_‰ame_tcb_ª„ªn˚
,

197 .
	gsubmô
 = 
avSync_‰ame_tcb_submô
,

200 
	$avSync_‰ame_queue_gë
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
, 
avSync_‰ame_tcb_t
 **
±r_avSync_‰ame
)

202 if((
avSync_‰ame_queue
!=
NULL
Ë&& (
±r_avSync_‰ame
!=NULL)){

203 
tcb_node_queue_t
 *
queue
;

204 *
±r_avSync_‰ame
 = 
NULL
;

205 
queue
 = &
avSync_‰ame_queue
->
queue_node
;

206 if(
queue
->
›
 !
NULL
){

207 
tcb_node_t
 *
ãmp_node
;

208 
queue
->
›
->
	`gë
(queue, &
ãmp_node
);

209 if(
ãmp_node
 !
NULL
){

210 *
±r_avSync_‰ame
 = 
	`to_gë_avSync_‰ame_tcb
(
ãmp_node
);

214 
	}
}

216 
	$avSync_‰ame_queue_åy_gë
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
, 
avSync_‰ame_tcb_t
 **
±r_avSync_‰ame
)

218 if((
avSync_‰ame_queue
!=
NULL
Ë&& (
±r_avSync_‰ame
!=NULL)){

219 
tcb_node_queue_t
 *
queue
;

220 *
±r_avSync_‰ame
 = 
NULL
;

221 
queue
 = &
avSync_‰ame_queue
->
queue_node
;

222 if(
queue
->
›
 !
NULL
){

223 
tcb_node_t
 *
ãmp_node
;

224 
queue
->
›
->
	`åy_gë
(queue, &
ãmp_node
);

225 if(
ãmp_node
 !
NULL
){

226 *
±r_avSync_‰ame
 = 
	`to_gë_avSync_‰ame_tcb
(
ãmp_node
);

230 
	}
}

232 
	$avSync_‰ame_queue_gë_èûî
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
, 
avSync_‰ame_tcb_t
 **
±r_avSync_‰ame
)

234 if((
avSync_‰ame_queue
!=
NULL
Ë&& (
±r_avSync_‰ame
!=NULL)){

235 
tcb_node_queue_t
 *
queue
;

236 *
±r_avSync_‰ame
 = 
NULL
;

237 
queue
 = &
avSync_‰ame_queue
->
queue_node
;

238 if(
queue
->
›
 !
NULL
){

239 
tcb_node_t
 *
ãmp_node
;

240 
queue
->
›
->
	`gë_èûî
(queue, &
ãmp_node
);

241 if(
ãmp_node
 !
NULL
){

242 *
±r_avSync_‰ame
 = 
	`to_gë_avSync_‰ame_tcb
(
ãmp_node
);

246 
	}
}

248 
	$avSync_‰ame_queue_åy_gë_èûî
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
, 
avSync_‰ame_tcb_t
 **
±r_avSync_‰ame
)

250 if((
avSync_‰ame_queue
!=
NULL
Ë&& (
±r_avSync_‰ame
!=NULL)){

251 
tcb_node_queue_t
 *
queue
;

252 *
±r_avSync_‰ame
 = 
NULL
;

253 
queue
 = &
avSync_‰ame_queue
->
queue_node
;

254 if(
queue
->
›
 !
NULL
){

255 
tcb_node_t
 *
ãmp_node
;

256 
queue
->
›
->
	`åy_gë_èûî
(queue, &
ãmp_node
);

257 if(
ãmp_node
 !
NULL
){

258 *
±r_avSync_‰ame
 = 
	`to_gë_avSync_‰ame_tcb
(
ãmp_node
);

262 
	}
}

264 
	$avSync_‰ame_queue_put
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
, 
avSync_‰ame_tcb_t
 *
avSync_‰ame
)

266 if((
avSync_‰ame_queue
!=
NULL
Ë&& (
avSync_‰ame
!=NULL)){

267 
tcb_node_queue_t
 *
queue
;

268 
queue
 = &
avSync_‰ame_queue
->
queue_node
;

269 if(
queue
->
›
 !
NULL
){

270 
queue
->
›
->
	`put
(queue, &
avSync_‰ame
->
‰ame_node
);

273 
	}
}

275 
	$avSync_‰ame_queue_put_hódî
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
, 
avSync_‰ame_tcb_t
 *
avSync_‰ame
)

277 if((
avSync_‰ame_queue
!=
NULL
Ë&& (
avSync_‰ame
!=NULL)){

278 
tcb_node_queue_t
 *
queue
;

279 
queue
 = &
avSync_‰ame_queue
->
queue_node
;

280 if(
queue
->
›
 !
NULL
){

281 
queue
->
›
->
	`put_hódî
(queue, &
avSync_‰ame
->
‰ame_node
);

284 
	}
}

286 
	$avSync_‰ame_queue_gë_cuº_¥odu˚r_‰om_poﬁ
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
, 
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
)

288 if((
avSync_‰ame_queue
!=
NULL
Ë&& (
video_devi˚_buf_poﬁ
!=NULL)){

289 
Êags
;

290 
	`•ö_lock_úqßve
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

291 if(
avSync_‰ame_queue
->
cuº_¥odu˚r
 =
NULL
){

292 
	`•ö_u∆ock_úqª°‹e
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

293 if(
video_devi˚_buf_poﬁ
->
›
 !
NULL
){

294 
video_devi˚_buf_poﬁ
->
›
->
	`gë_avSync_‰ame_tcb
(video_devi˚_buf_poﬁ, &
avSync_‰ame_queue
->
cuº_¥odu˚r
);

296 
	`•ö_lock_úqßve
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

298 
	`•ö_u∆ock_úqª°‹e
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

300 
	}
}

302 
	$avSync_‰ame_queue_åy_gë_cuº_¥odu˚r_‰om_poﬁ
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
, 
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
)

304 if((
avSync_‰ame_queue
!=
NULL
Ë&& (
video_devi˚_buf_poﬁ
!=NULL)){

305 
Êags
;

306 
	`•ö_lock_úqßve
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

307 if(
avSync_‰ame_queue
->
cuº_¥odu˚r
 =
NULL
){

308 if(
video_devi˚_buf_poﬁ
->
›
 !
NULL
){

309 
video_devi˚_buf_poﬁ
->
›
->
	`åy_gë_avSync_‰ame_tcb
(video_devi˚_buf_poﬁ, &
avSync_‰ame_queue
->
cuº_¥odu˚r
);

312 
	`•ö_u∆ock_úqª°‹e
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

314 
	}
}

316 
	$avSync_‰ame_queue_put_cuº_¥odu˚r_öto_queue
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
)

318 if(
avSync_‰ame_queue
 !
NULL
){

319 
Êags
;

320 
	`•ö_lock_úqßve
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

321 if(
avSync_‰ame_queue
->
cuº_¥odu˚r
 !
NULL
){

322 if(
avSync_‰ame_queue
->
›
 !
NULL
){

323 
avSync_‰ame_queue
->
›
->
	`put
◊vSync_‰ame_queue,ávSync_‰ame_queue->
cuº_¥odu˚r
);

325 
	`avSync_‰ame_queue_put
(
avSync_‰ame_queue
,ávSync_‰ame_queue->
cuº_¥odu˚r
);

327 
avSync_‰ame_queue
->
cuº_¥odu˚r
 = 
NULL
;

329 
	`•ö_u∆ock_úqª°‹e
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

331 
	}
}

333 
	$avSync_‰ame_queue_ªÀa£_cuº_¥odu˚r
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
, 
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
)

335 if((
avSync_‰ame_queue
!=
NULL
Ë&& (
video_devi˚_buf_poﬁ
!=NULL)){

336 
Êags
;

337 
	`•ö_lock_úqßve
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

338 if(
avSync_‰ame_queue
->
cuº_¥odu˚r
 !
NULL
){

339 if(
avSync_‰ame_queue
->
cuº_¥odu˚r
->
›
 !
NULL
){

340 
avSync_‰ame_queue
->
cuº_¥odu˚r
->
›
->
	`ªÀa£
(&avSync_‰ame_queue->cuº_¥odu˚r, 
video_devi˚_buf_poﬁ
);

342 
	`avSync_‰ame_tcb_ªÀa£
(&
avSync_‰ame_queue
->
cuº_¥odu˚r
, 
video_devi˚_buf_poﬁ
);

345 
	`•ö_u∆ock_úqª°‹e
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

347 
	}
}

349 
	$avSync_‰ame_queue_gë_cuº_c⁄sumî_‰om_queue
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
)

351 if(
avSync_‰ame_queue
 !
NULL
){

352 
Êags
;

353 
	`•ö_lock_úqßve
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

354 if(
avSync_‰ame_queue
->
cuº_c⁄sumî
 =
NULL
){

355 
	`•ö_u∆ock_úqª°‹e
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

356 if(
avSync_‰ame_queue
->
›
 !
NULL
){

357 
avSync_‰ame_queue
->
›
->
	`gë
◊vSync_‰ame_queue, &avSync_‰ame_queue->
cuº_c⁄sumî
);

359 
	`avSync_‰ame_queue_gë
(
avSync_‰ame_queue
, &avSync_‰ame_queue->
cuº_c⁄sumî
);

361 
	`•ö_lock_úqßve
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

363 
	`•ö_u∆ock_úqª°‹e
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

365 
	}
}

367 
	$avSync_‰ame_queue_åy_gë_cuº_c⁄sumî_‰om_queue
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
)

369 if(
avSync_‰ame_queue
 !
NULL
){

370 
Êags
;

371 
	`•ö_lock_úqßve
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

372 if(
avSync_‰ame_queue
->
cuº_c⁄sumî
 =
NULL
){

373 if(
avSync_‰ame_queue
->
›
 !
NULL
){

374 
avSync_‰ame_queue
->
›
->
	`åy_gë
◊vSync_‰ame_queue, &avSync_‰ame_queue->
cuº_c⁄sumî
);

376 
	`avSync_‰ame_queue_åy_gë
(
avSync_‰ame_queue
, &avSync_‰ame_queue->
cuº_c⁄sumî
);

379 
	`•ö_u∆ock_úqª°‹e
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

381 
	}
}

383 
	$avSync_‰ame_queue_ªÀa£_cuº_c⁄sumî
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
, 
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
)

385 if((
avSync_‰ame_queue
!=
NULL
Ë&& (
video_devi˚_buf_poﬁ
!=NULL)){

386 
Êags
;

387 
	`•ö_lock_úqßve
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

388 if(
avSync_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

389 if(
avSync_‰ame_queue
->
cuº_c⁄sumî
->
›
 !
NULL
){

390 
avSync_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ªÀa£
(&avSync_‰ame_queue->cuº_c⁄sumî, 
video_devi˚_buf_poﬁ
);

392 
	`avSync_‰ame_tcb_ªÀa£
(&
avSync_‰ame_queue
->
cuº_c⁄sumî
, 
video_devi˚_buf_poﬁ
);

394 
avSync_‰ame_queue
->
cuº_c⁄sumî
 = 
NULL
;

396 
	`•ö_u∆ock_úqª°‹e
(&
avSync_‰ame_queue
->
lock
, 
Êags
);

398 
	}
}

400 
	$avSync_‰ame_queue_gë_cuº_queue_íåy_numbî
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
)

402 
íåy_numbî
 = 0;

403 if(
avSync_‰ame_queue
!=
NULL
){

404 
tcb_node_queue_t
 *
queue
;

405 
queue
 = &
avSync_‰ame_queue
->
queue_node
;

406 if(
queue
->
›
 !
NULL
){

407 
íåy_numbî
 = 
queue
->
›
->
	`gë_queue_cuº_íåy_numbî
(queue);

410  
íåy_numbî
;

411 
	}
}

413 
	$avSync_‰ame_queue_ªÀa£
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
, 
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
)

415 if((
avSync_‰ame_queue
!=
NULL
Ë&& (
video_devi˚_buf_poﬁ
!=NULL)){

416 
	`ªmove_avSync_‰ame_queue
(
avSync_‰ame_queue
, 
video_devi˚_buf_poﬁ
);

418 
	}
}

420 
	$avSync_‰ame_queue_öô
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
)

422 if(
avSync_‰ame_queue
 !
NULL
){

423 
tcb_node_queue_t
 *
queue
;

424 
queue
 = &
avSync_‰ame_queue
->
queue_node
;

425 
queue
->
›
 = &
tcb_node_queue_›
;

426 
queue
->
›
->
	`öô
(queue);

427 
avSync_‰ame_queue
->
cuº_c⁄sumî
 = 
NULL
;

428 
avSync_‰ame_queue
->
cuº_¥odu˚r
 = 
NULL
;

429 
avSync_‰ame_queue
->
°¨t_time°amp
 = 0;

430 
avSync_‰ame_queue
->
tŸÆ_duøti⁄
 = 0;

431 
	`•ö_lock_öô
(&
avSync_‰ame_queue
->
lock
);

433 
	}
}

435 
avSync_‰ame_queue_›î©i⁄
 
	gavSync_‰ame_queue_›
 = {

436 .
gë
 = 
avSync_‰ame_queue_gë
,

437 .
	gåy_gë
 = 
avSync_‰ame_queue_åy_gë
,

438 .
	ggë_èûî
 = 
avSync_‰ame_queue_gë_èûî
,

439 .
	gåy_gë_èûî
 = 
avSync_‰ame_queue_åy_gë_èûî
,

440 .
	gput
 = 
avSync_‰ame_queue_put
,

441 .
	gput_hódî
 = 
avSync_‰ame_queue_put_hódî
,

443 .
	ggë_cuº_¥odu˚r_‰om_poﬁ
 = 
avSync_‰ame_queue_gë_cuº_¥odu˚r_‰om_poﬁ
,

444 .
	gåy_gë_cuº_¥odu˚r_‰om_poﬁ
 = 
avSync_‰ame_queue_åy_gë_cuº_¥odu˚r_‰om_poﬁ
,

445 .
	gput_cuº_¥odu˚r_öto_queue
 = 
avSync_‰ame_queue_put_cuº_¥odu˚r_öto_queue
,

446 .
	gªÀa£_cuº_¥odu˚r
 = 
avSync_‰ame_queue_ªÀa£_cuº_¥odu˚r
,

447 .
	ggë_cuº_c⁄sumî_‰om_queue
 = 
avSync_‰ame_queue_gë_cuº_c⁄sumî_‰om_queue
,

448 .
	gåy_gë_cuº_c⁄sumî_‰om_queue
 = 
avSync_‰ame_queue_åy_gë_cuº_c⁄sumî_‰om_queue
,

449 .
	gªÀa£_cuº_c⁄sumî
 = 
avSync_‰ame_queue_ªÀa£_cuº_c⁄sumî
,

451 .
	ggë_cuº_queue_íåy_numbî
 = 
avSync_‰ame_queue_gë_cuº_queue_íåy_numbî
,

452 .
	gªÀa£
 = 
avSync_‰ame_queue_ªÀa£
,

453 .
	göô
 = 
avSync_‰ame_queue_öô
,

456 
	$öô_avSync_‰ame_queue
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
)

458 if(
avSync_‰ame_queue
 !
NULL
){

459 
avSync_‰ame_queue
->
›
 = &
avSync_‰ame_queue_›
;

460 
avSync_‰ame_queue
->
›
->
	`öô
(avSync_frame_queue);

462 
	}
}

464 
	$ªmove_avSync_‰ame_queue
(
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
, 
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
)

466 if((
avSync_‰ame_queue
!=
NULL
Ë&& (
video_devi˚_buf_poﬁ
!=NULL)){

467 if(
avSync_‰ame_queue
->
›
 !
NULL
){

468 
avSync_‰ame_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(avSync_frame_queue);

469 
avSync_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊vSync_‰ame_queue, 
video_devi˚_buf_poﬁ
);

470 
avSync_‰ame_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(avSync_frame_queue)){

471 
avSync_‰ame_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(avSync_frame_queue);

472 if(
avSync_‰ame_queue
->
cuº_c⁄sumî
 =
NULL
){

475 
avSync_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊vSync_‰ame_queue, 
video_devi˚_buf_poﬁ
);

478 
	`avSync_‰ame_queue_put_cuº_¥odu˚r_öto_queue
(
avSync_‰ame_queue
);

479 
	`avSync_‰ame_queue_ªÀa£_cuº_c⁄sumî
(
avSync_‰ame_queue
, 
video_devi˚_buf_poﬁ
);

480 
	`avSync_‰ame_queue_gë_cuº_queue_íåy_numbî
(
avSync_‰ame_queue
)){

481 
	`avSync_‰ame_queue_gë_cuº_c⁄sumî_‰om_queue
(
avSync_‰ame_queue
);

482 if(
avSync_‰ame_queue
->
cuº_c⁄sumî
 =
NULL
){

485 
	`avSync_‰ame_queue_ªÀa£_cuº_c⁄sumî
(
avSync_‰ame_queue
, 
video_devi˚_buf_poﬁ
);

488 
	`¥ötk
("avSyn¯poﬁÉ¡ryÇumbî: %d\n", 
video_devi˚_buf_poﬁ
->
avSync_‰ame_poﬁ_node
.
›
->
	`gë_cuº_poﬁ_íåy_numbî
(&video_device_buf_pool->avSync_frame_pool_node));

490 
	}
}

492 
	$avSync_‰ame_buf_poﬁ_¸óã
(
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
, 
buf_size
)

494 
ªt
 = 
TW_ERR
;

496 if(
video_devi˚_buf_poﬁ
 !
NULL
){

497 
tcb_node_poﬁ_t
 *
node_poﬁ
;

498 
avSync_‰ame_tcb_t
 *
acSync_‰ame
;

499 
i
;

500 
video_devi˚_buf_poﬁ
->
avSync_‰ame_íåy_numbî
 = 
buf_size
/
PAGE_SIZE
;

501 
node_poﬁ
 = &
video_devi˚_buf_poﬁ
->
avSync_‰ame_poﬁ_node
;

502 
node_poﬁ
->
›
 = &
tcb_node_poﬁ_›
;

503 
video_devi˚_buf_poﬁ
->
avSync_‰ame_poﬁ
 = (
avSync_‰ame_tcb_t
*)
	`kmÆloc
(◊vSync_‰ame_tcb_t)*video_devi˚_buf_poﬁ->
avSync_‰ame_íåy_numbî
, 
GFP_KERNEL
);

504 if(
video_devi˚_buf_poﬁ
->
avSync_‰ame_poﬁ
 =
NULL
){

505 
	`¥ötk
("%s.%d: c™'àavSyn¯tcbÖoﬁ\n", 
__FUNCTION__
, 
__LINE__
);

506  
ªt
;

508 
node_poﬁ
->
›
->
	`öô
“ode_poﬁ, 
video_devi˚_buf_poﬁ
->
avSync_‰ame_íåy_numbî
);

509 
i
=0; i<
video_devi˚_buf_poﬁ
->
avSync_‰ame_íåy_numbî
; i++){

510 
acSync_‰ame
 = &
video_devi˚_buf_poﬁ
->
avSync_‰ame_poﬁ
[
i
];

511 
acSync_‰ame
->
›
 = &
avSync_‰ame_tcb_›
;

512 
acSync_‰ame
->
›
->
	`öô
(acSync_frame);

513 
acSync_‰ame
->
›
->
	`ªÀa£
(&acSync_‰ame, 
video_devi˚_buf_poﬁ
);

515 
ªt
 = 
TW_OK
;

517  
ªt
;

518 
	}
}

520 
	$avSync_‰ame_buf_poﬁ_ªÀa£
(
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
)

522 if(
video_devi˚_buf_poﬁ
 !
NULL
){

523 
tcb_node_poﬁ_t
 *
node_poﬁ
;

524 
node_poﬁ
 = &
video_devi˚_buf_poﬁ
->
avSync_‰ame_poﬁ_node
;

525 
node_poﬁ
->
›
->
	`ªÀa£
(node_pool);

526 if(
video_devi˚_buf_poﬁ
->
avSync_‰ame_poﬁ
 !
NULL
){

527 
	`k‰ì
(
video_devi˚_buf_poﬁ
->
avSync_‰ame_poﬁ
);

528 
video_devi˚_buf_poﬁ
->
avSync_‰ame_poﬁ
 = 0;

530 
video_devi˚_buf_poﬁ
->
avSync_‰ame_íåy_numbî
 = 0;

532 
	}
}

534 
	$avSync_‰ame_buf_poﬁ_gë_avSync_‰ame_tcb
(
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
, 
avSync_‰ame_tcb_t
 **
±r_‰ame
)

536 if((
video_devi˚_buf_poﬁ
!=
NULL
Ë&& (
±r_‰ame
!=NULL)){

537 
tcb_node_poﬁ_t
 *
poﬁ_node
 = &
video_devi˚_buf_poﬁ
->
avSync_‰ame_poﬁ_node
;

538 *
±r_‰ame
 = 
NULL
;

539 if(
poﬁ_node
->
›
 !
NULL
){

540 
tcb_node_t
 *
ãmp_node
;

541 
poﬁ_node
->
›
->
	`gë
’oﬁ_node, &
ãmp_node
);

542 if(
ãmp_node
 !
NULL
){

543 *
±r_‰ame
 = 
	`to_gë_avSync_‰ame_tcb
(
ãmp_node
);

544 
	`©omic_öc
(&((*
±r_‰ame
)->
ªf_cou¡
));

548 
	}
}

550 
	$avSync_‰ame_buf_poﬁ_åy_gë_avSync_‰ame_tcb
(
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
, 
avSync_‰ame_tcb_t
 **
±r_‰ame
)

552 if((
video_devi˚_buf_poﬁ
!=
NULL
Ë&& (
±r_‰ame
!=NULL)){

553 
tcb_node_poﬁ_t
 *
poﬁ_node
 = &
video_devi˚_buf_poﬁ
->
avSync_‰ame_poﬁ_node
;

554 *
±r_‰ame
 = 
NULL
;

555 if(
poﬁ_node
->
›
 !
NULL
){

556 
tcb_node_t
 *
ãmp_node
;

557 
poﬁ_node
->
›
->
	`åy_gë
’oﬁ_node, &
ãmp_node
);

558 if(
ãmp_node
 !
NULL
){

559 *
±r_‰ame
 = 
	`to_gë_avSync_‰ame_tcb
(
ãmp_node
);

560 
	`©omic_öc
(&((*
±r_‰ame
)->
ªf_cou¡
));

564 
	}
}

566 
	$avSync_‰ame_buf_poﬁ_put_avSync_‰ame_tcb
(
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
, 
avSync_‰ame_tcb_t
 *
‰ame
)

568 if((
video_devi˚_buf_poﬁ
!=
NULL
Ë&& (
‰ame
!=NULL)){

569 
tcb_node_poﬁ_t
 *
poﬁ_node
 = &
video_devi˚_buf_poﬁ
->
avSync_‰ame_poﬁ_node
;

570 if(
poﬁ_node
->
›
 !
NULL
){

571 
poﬁ_node
->
›
->
	`put
’oﬁ_node, &
‰ame
->
‰ame_node
);

574 
	}
}

576 
	$avSync_‰ame_buf_poﬁ_gë_avSync_‰ame_tcb_poﬁ_íåy_numbî
(
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
)

578 
ªt
 = 0;

579 if(
video_devi˚_buf_poﬁ
 !
NULL
){

580 
tcb_node_poﬁ_t
 *
poﬁ_node
 = &
video_devi˚_buf_poﬁ
->
avSync_‰ame_poﬁ_node
;

581 
ªt
 = 
poﬁ_node
->
›
->
	`gë_cuº_poﬁ_íåy_numbî
(pool_node);

583  
ªt
;

584 
	}
}

586 
avSync_‰ame_buf_poﬁ_›î©i⁄
 
	gavSync_‰ame_buf_poﬁ_›
 = {

587 .
¸óã
 = 
avSync_‰ame_buf_poﬁ_¸óã
,

588 .
	gªÀa£
 = 
avSync_‰ame_buf_poﬁ_ªÀa£
,

590 .
	ggë_avSync_‰ame_tcb
 = 
avSync_‰ame_buf_poﬁ_gë_avSync_‰ame_tcb
,

591 .
	gåy_gë_avSync_‰ame_tcb
 = 
avSync_‰ame_buf_poﬁ_åy_gë_avSync_‰ame_tcb
,

592 .
	gput_avSync_‰ame_tcb
 = 
avSync_‰ame_buf_poﬁ_put_avSync_‰ame_tcb
,

593 .
	ggë_avSync_‰ame_tcb_poﬁ_íåy_numbî
 = 
avSync_‰ame_buf_poﬁ_gë_avSync_‰ame_tcb_poﬁ_íåy_numbî
,

596 
	$öô_avSync_‰ame_buf_poﬁ
(
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
)

598 
ªt
 = 
TW_ERR
;

599 if(
video_devi˚_buf_poﬁ
 !
NULL
){

600 
video_devi˚_buf_poﬁ
->
›
 = &
avSync_‰ame_buf_poﬁ_›
;

601 
ªt
 = 
video_devi˚_buf_poﬁ
->
›
->
	`¸óã
(video_devi˚_buf_poﬁ, 
VIDEO_MASTER_CHAN_BUF_POOL_LEN
);

603  
ªt
;

604 
	}
}

606 
	$ªmove_avSync_‰ame_buf_poﬁ
(
avSync_‰ame_buf_poﬁ_t
 *
video_devi˚_buf_poﬁ
)

608 if(
video_devi˚_buf_poﬁ
 !
NULL
){

609 
video_devi˚_buf_poﬁ
->
›
->
	`ªÀa£
(video_device_buf_pool);

611 
	}
}

	@../../tw5864/tw5864/tw_char_lib12.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
	#GB2312_TBL_12X16_LEN
 (196272)

	)

4 
	#ASCII_TBL_12X16_LEN
 (2048)

	)

6 #ifde‡
POWERPC_PLATFORM


7 
	gascii12_6_tbl
[
ASCII_TBL_12X16_LEN
] 
DATA_SECTION_ALIGN
(4)=

139 
	gjtzw12_12_tbl
[
GB2312_TBL_12X16_LEN
] 
DATA_SECTION_ALIGN
(4)=

12410 
	gascii12_6_tbl
[
ASCII_TBL_12X16_LEN
] 
DATA_SECTION_ALIGN
(4)=

12542 
	gjtzw12_12_tbl
[
GB2312_TBL_12X16_LEN
] 
DATA_SECTION_ALIGN
(4)=

24814 
	$gë_ascii_lib12_addr
(**
addr_±r
, * 
ch¨_id
)

24816 
off£t
;

24817 
off£t
 = *
ch¨_id
;

24818 if(
off£t
 > 127){

24819 *
addr_±r
 = 
NULL
;

24821 *
addr_±r
 = &
ascii12_6_tbl
[
off£t
<<4];

24823 
	}
}

24825 
	$gë_lib12_addr
(**
addr_±r
, * 
lib16_id
)

24827 *
addr_±r
 = 
NULL
;

24828 if((
lib16_id
[0]>=0xa1) && (lib16_id[0]<=0xf7) && (lib16_id[1]>=0xa0)){

24829 
off£t
;

24830 
off£t
 = 
lib16_id
[0]-0xa1;

24831 
off£t
 *= 94;

24832 
off£t
 +
lib16_id
[1] -0xa1;

24833 *
addr_±r
 = &
jtzw12_12_tbl
[
off£t
*24];

24835 
	}
}

	@../../tw5864/tw5864/tw_char_lib16.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
	#GB2312_TBL_16X16_LEN
 (261696)

	)

4 
	#ASCII_TBL_16X16_LEN
 (2048)

	)

6 #ifde‡
POWERPC_PLATFORM


7 
	gascii16_8_tbl
[
ASCII_TBL_16X16_LEN
] 
DATA_SECTION_ALIGN
(4)=

138 
	gjtzw16_16_tbl
[
GB2312_TBL_16X16_LEN
] 
DATA_SECTION_ALIGN
(4)=

270 
	gascii16_8_tbl
[
ASCII_TBL_16X16_LEN
] 
DATA_SECTION_ALIGN
(4)=

402 
	gjtzw16_16_tbl
[
GB2312_TBL_16X16_LEN
] 
DATA_SECTION_ALIGN
(4)=

534 
	$gë_ascii_lib16_addr
(**
addr_±r
, * 
ch¨_id
)

536 
off£t
;

537 
off£t
 = *
ch¨_id
;

538 if(
off£t
 > 127){

539 *
addr_±r
 = 
NULL
;

541 *
addr_±r
 = &
ascii16_8_tbl
[
off£t
<<4];

543 
	}
}

545 
	$gë_lib16_addr
(**
addr_±r
, * 
lib16_id
)

547 *
addr_±r
 = 
NULL
;

548 if((
lib16_id
[0]>=0xa1) && (lib16_id[0]<=0xf7) && (lib16_id[1]>=0xa0)){

549 
off£t
;

550 
off£t
 = 
lib16_id
[0]-0xa1;

551 
off£t
 *= 94;

552 
off£t
 +
lib16_id
[1] -0xa1;

553 *
addr_±r
 = &
jtzw16_16_tbl
[
off£t
<<5];

555 
	}
}

	@../../tw5864/tw5864/tw_char_lib24.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
	#GB2312_TBL_24X24_LEN
 (785088)

	)

4 
	#ASCII_TBL_24X12_LEN
 (6144)

	)

6 #ifde‡
POWERPC_PLATFORM


7 
	gascii24_12_tbl
[
ASCII_TBL_24X12_LEN
] 
DATA_SECTION_ALIGN
(4)=

394 
	gjtzw24_24_tbl
[
GB2312_TBL_24X24_LEN
] 
DATA_SECTION_ALIGN
(4)=

49466 
	gascii24_12_tbl
[
ASCII_TBL_24X12_LEN
] 
DATA_SECTION_ALIGN
(4)=

49854 
	gjtzw24_24_tbl
[
GB2312_TBL_24X24_LEN
] 
DATA_SECTION_ALIGN
(4)=

98926 
	$gë_ascii_lib24_addr
(**
addr_±r
, * 
ch¨_id
)

98928 
off£t
;

98929 
off£t
 = *
ch¨_id
;

98930 if(
off£t
 > 127){

98931 *
addr_±r
 = 
NULL
;

98933 *
addr_±r
 = &
ascii24_12_tbl
[
off£t
*48];

98935 
	}
}

98937 
	$gë_lib24_addr
(**
addr_±r
, * 
lib16_id
)

98939 *
addr_±r
 = 
NULL
;

98940 if((
lib16_id
[0]>=0xa1) && (lib16_id[0]<=0xf7) && (lib16_id[1]>=0xa0)){

98941 
off£t
;

98942 
off£t
 = 
lib16_id
[0]-0xa1;

98943 
off£t
 *= 94;

98944 
off£t
 +
lib16_id
[1] -0xa1;

98945 *
addr_±r
 = &
jtzw24_24_tbl
[
off£t
*96];

98947 
	}
}

	@../../tw5864/tw5864/tw_chip.c

1 
	~<tw5864/dvm_comm⁄.h
>

2 
	~<tw5864/tc_comm⁄.h
>

4 #ifde‡ 
ARM_PLATFORM


5 
öô_¨m_timî
();

6 
˛o£_¨m_timî
();

7 #ifdef 
ARM_S3C2410_TW5864_PLATFORM


8 
DVMNVS_CHIP_VIDEO_ENCODE_CAPABILITY
 
	g∂©f‹m_video_ícode_ˇp
[1] = {

10 .
fú°_devi˚_numbî
 = 0,

11 .
	gvideo_ícode_w‹k_mode
 = 
ENCODE_4_D1
,

12 .
	gícode_ªg_4
 = (
DEBLOCKINGON
|
INTRAON
|
CMOSON
|
INTERON
|
DDRON
),

13 .
	gÂga_sync_ba£_addr
 = 0,

14 .
	gÂga_sync_£˘i⁄_Àn
 = 0,

15 .
	gÂga_async_ba£_addr
 = 
FPGA0_BASE_ADDR
,

16 .
	gÂga_async_£˘i⁄_Àn
 = 
FPGA_ASYNC_SECTION_LEN
,

17 .
	gddr_m≠_mode
 = 
DDR_MAP_COMPRESS_DISABLE
,

23 #ifde‡ 
POWERPC_PLATFORM


24 
dvm_m≠_öô
();

25 
dvm_m≠_exô
();

26 
µc_timî_öô
();

27 
µc_timî_exô
();

28 
DVMNVS_CHIP_VIDEO_ENCODE_CAPABILITY
 
	g∂©f‹m_video_ícode_ˇp
[2] = {

30 .
fú°_devi˚_numbî
 = 0,

31 .
	gvideo_ícode_w‹k_mode
 = 
ENCODE_4_D1
,

32 .
	gícode_ªg_4
 = (
DEBLOCKINGON
|
INTRAON
|
CMOSON
|
INTERON
|
DDRON
),

33 .
	gÂga_sync_ba£_addr
 = 0,

34 .
	gÂga_sync_£˘i⁄_Àn
 = 0,

35 .
	gÂga_async_ba£_addr
 = 0,

36 .
	gÂga_async_£˘i⁄_Àn
 = 0,

37 .
	gddr_m≠_mode
 = 
DDR_MAP_COMPRESS_DISABLE
,

40 .
	gfú°_devi˚_numbî
 = 16,

41 .
	gvideo_ícode_w‹k_mode
 = 
ENCODE_4_D1
,

42 .
	gícode_ªg_4
 = (
DEBLOCKINGON
|
INTRAON
|
CMOSON
|
INTERON
|
DDRON
),

43 .
	gÂga_sync_ba£_addr
 = 0,

44 .
	gÂga_sync_£˘i⁄_Àn
 = 0,

45 .
	gÂga_async_ba£_addr
 = 0,

46 .
	gÂga_async_£˘i⁄_Àn
 = 0,

47 .
	gddr_m≠_mode
 = 
DDR_MAP_COMPRESS_DISABLE
,

52 
	$gë_tw5864_avSync_devi˚
(
tw5864_avSync_dev_t
 **
±r_devi˚
, 
öode_id
)

54 
ty≥_bus_t
 *
tw_ho°_bus
;

55 
dvm_chù_t
 *
chù
;

56 
tw_chù_bus_t
 *
chù_bus
;

58 *
±r_devi˚
 = 
NULL
;

59 #ifde‡
POWERPC_PCI_PLATFORM


60 
	`gë_tw_pci_bus
(&
tw_ho°_bus
);

62 
	`gë_tw_ho°_bus
(&
tw_ho°_bus
);

65 
tw_ho°_bus
->
›
->
	`föd_chù_bus_ö_ty≥_bus_èbÀ
—w_ho°_bus, &
chù_bus
, (
öode_id
>>4));

66 if(
chù_bus
 !
NULL
){

67 
chù
 = 
	`to_gë_chù_wôh_chù_bus
(
chù_bus
);

69 *
±r_devi˚
 = &
chù
->
av_avSync_devi˚_ch™
[
öode_id
 & 0xf];

72 
	`¥ötk
("%s,%d: Nÿsuch chù!\n", 
__FILE__
, 
__LINE__
);

74 
	}
}

76 
	$chù_ªque°_úq
(
dvm_chù_t
 *
chù
, 
u32
 
úq
, 
úq_h™dÀr_t
 
h™dÀr
,

77 c⁄° *
‚«me
, *
c⁄ãxt
)

79 
Êags
;

80 
chù_úq_a˘i⁄
 *
a˘i⁄
;

81 
chù_úq_desc
 *
desc
;

83 if(!
chù
 || !
h™dÀr
){

84  -
EINVAL
;

87 
desc
 = 
	`chù_úq_to_desc
(
chù
, 
úq
);

88 if(!
desc
){

89  -
EINVAL
;

91 
	`•ö_lock_úqßve
(&
desc
->
lock
, 
Êags
);

92 
a˘i⁄
 = &
desc
->action;

93 
a˘i⁄
->
h™dÀr
 = handler;

94 
a˘i⁄
->
úq
 = irq;

95 
a˘i⁄
->
«me
 = 
‚«me
;

96 
a˘i⁄
->
c⁄ãxt
 = context;

97 
a˘i⁄
->
√xt
 = 
NULL
;

99 
desc
->
«me
 = 
‚«me
;

100 
desc
->
úq_cou¡
 = 0;

101 
desc
->
úqs_unh™dÀd
 = 0;

102 
	`©omic_öc
(&
desc
->
dïth
);

103 
	`•ö_u∆ock_úqª°‹e
(&
desc
->
lock
, 
Êags
);

105 
	`chù_íabÀ_úq
(
chù
, 
úq
);

107  
TW_OK
;

108 
	}
}

110 
	$chù_‰ì_úq
(
dvm_chù_t
 *
chù
, 
u32
 
úq
, *
c⁄ãxt
)

112 
chù_úq_desc
 *
desc
;

113 
chù_úq_a˘i⁄
 *
a˘i⁄
;

114 
Êags
;

116 
desc
 = 
	`chù_úq_to_desc
(
chù
, 
úq
);

117 if(!
desc
){

120 
	`•ö_lock_úqßve
(&
desc
->
lock
, 
Êags
);

121 
a˘i⁄
 = &
desc
->action;

123 
a˘i⁄
->
h™dÀr
 = 
NULL
;

124 
a˘i⁄
->
úq
 = irq;

125 
a˘i⁄
->
«me
 = 
NULL
;

126 
a˘i⁄
->
c⁄ãxt
 = 
NULL
;

127 
a˘i⁄
->
√xt
 = 
NULL
;

128 
	`©omic_dec
(&
desc
->
dïth
);

130 
	`•ö_u∆ock_úqª°‹e
(&
desc
->
lock
, 
Êags
);

132 
	`chù_dißbÀ_úq
(
chù
, 
úq
);

135 
	}
}

137 
	$chù_íabÀ_úq
(
dvm_chù_t
 *
chù
, 
u32
 
úq
)

139 
tw5864_öãºu±_c⁄åﬁ_t
 *
úq_˘æ
;

141 if(
chù
 && (
úq
 < 
CHIP_IRQS_NR
)){

142 
úq_˘æ
 = &
chù
->
tw5864_öt_c⁄åﬁ
;

143 
úq_˘æ
->
sy°em_›
->
	`íabÀ_öãºu±_sour˚
(úq_˘æ, 
úq
);

145 
	}
}

147 
	$chù_dißbÀ_úq
(
dvm_chù_t
 *
chù
, 
u32
 
úq
)

149 
tw5864_öãºu±_c⁄åﬁ_t
 *
úq_˘æ
;

151 if(
chù
 && (
úq
 < 
CHIP_IRQS_NR
)){

152 
úq_˘æ
 = &
chù
->
tw5864_öt_c⁄åﬁ
;

153 
úq_˘æ
->
sy°em_›
->
	`dißbÀ_öãºu±_sour˚
(úq_˘æ, 
úq
);

155 
	}
}

157 
	$chù_˛ór_úq
(
dvm_chù_t
 *
chù
, 
u32
 
úq
)

159 
tw5864_öãºu±_c⁄åﬁ_t
 *
úq_˘æ
;

161 if(
chù
 && (
úq
 < 
CHIP_IRQS_NR
)){

162 
úq_˘æ
 = &
chù
->
tw5864_öt_c⁄åﬁ
;

163 
úq_˘æ
->
h¨dw¨e_›
->
	`ack_öãºu±
(úq_˘æ, 
úq
);

165 
	}
}

167 
úq_h™dÀr_t
 
	$tw5864_vlc_úq_h™dÀr
(
úq
, *
c⁄ãxt
)

169 
dvm_chù_t
 *
chù
;

171 
chù
 = 
c⁄ãxt
;

172 if(
chù
 !
NULL
){

173 if(
chù
->
cuº_h264_ícode_ch™
 !
NULL
) {

174 
chù
->
cuº_h264_ícode_ch™
->
ícode_c⁄åﬁ
.
›
->
	`úq_func
(
úq
, (*)&chip->curr_h264_encode_chan->encode_control);

176 
	`¥ötk
("noÑegister isr curr service chan\n");

181 
	}
}

183 
gpio_pö_£t
(
gpio
, 
boﬁ
);

184 
	gs_gpio_pö
 = 0;

185 
úqªtu∫_t
 
	$tw5864_t›_i§
(
úq
, *
id
)

187 
tw5864_öãºu±_c⁄åﬁ_t
 *
c⁄åﬁ
 = (tw5864_öãºu±_c⁄åﬁ_t*)
id
;

188 
dvm_chù_t
 *
chù
 = 
c⁄åﬁ
->chip;

189 
u32
 
chù_úq
 = 0;

190 
chù_úq_desc
 *
desc
;

191 
chù_úq_a˘i⁄
 *
a˘i⁄
;

192 
Êags
;

194 
	`loˇl_úq_ßve
(
Êags
);

195 
c⁄åﬁ
->
h¨dw¨e_›
->
	`gë_öãºu±_°©us
(control);

197 
s_gpio_pö
 = !s_gpio_pin;

199 if(
c⁄åﬁ
->
chù_öãºu±_°©us
){

200 
chù_úq
 = 0; chù_úq < 
CHIP_IRQS_NR
; chip_irq++){

201 if(
c⁄åﬁ
->
chù_öãºu±_°©us
 & (1 << 
chù_úq
)){

202 
desc
 = 
	`chù_úq_to_desc
(
chù
, 
chù_úq
);

203 
desc
->
úq_cou¡
++;

204 
a˘i⁄
 = &
desc
->action;

205 if(
a˘i⁄
->
h™dÀr
) {

206 if(
a˘i⁄
->
	`h™dÀr
◊˘i⁄->
úq
,á˘i⁄->
c⁄ãxt
)){

210 
desc
->
úqs_unh™dÀd
++;

213 
	`chù_˛ór_úq
(
chù
, 
chù_úq
);

216 
	`loˇl_úq_ª°‹e
(
Êags
);

218  
IRQ_HANDLED
;

219 
	}
}

221 
	$tw5864_öãºu±_c⁄åﬁ_sy°em_öãrÁ˚_öô
(
tw5864_öãºu±_c⁄åﬁ_t
 *
c⁄åﬁ
, 
dvm_chù_t
 *
chù
)

223 
ªt
 = 
TW_ERR
;

224 
u32
 
i
;

226 if(
c⁄åﬁ
 !
NULL
){

227 
	`•ö_lock_öô
(&
c⁄åﬁ
->
lock
);

228 
c⁄åﬁ
->
öãºu±_sour˚
 = 0x00000000;

229 
c⁄åﬁ
->
öãºu±_sour˚_åiggî_mode
 = 0x00000000;

230 
c⁄åﬁ
->
öãºu±_sour˚_as£π
 = 0xffffffff;

231 
c⁄åﬁ
->
chù_öãºu±_ouçut_as£π
 = 0x0;

232 
c⁄åﬁ
->
chù_öãºu±_°©us
 = 0x00000000;

233 #ifde‡
ARM_PLATFORM


234 
c⁄åﬁ
->
chù_úq
 = 
IRQ_FPGA
;

236 #i‚de‡
POWERPC_PCI_PLATFORM


237 
c⁄åﬁ
->
chù_úq
 = 
	`úq_¸óã_m≠pög
(
NULL
, 
IRQ_FPGA
);

240 
c⁄åﬁ
->
chù
 = chip;

242 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERRUPT_SOURCE_TRIGGER_REG_L
, (
c⁄åﬁ
->
öãºu±_sour˚_åiggî_mode
 & 0xffff));

243 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERRUPT_SOURCE_TRIGGER_REG_H
, ((
c⁄åﬁ
->
öãºu±_sour˚_åiggî_mode
>>16) & 0xffff));

245 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERRUPT_ASSERT_REG_L
, (
c⁄åﬁ
->
öãºu±_sour˚_as£π
 & 0xffff));

246 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERRUPT_ASSERT_REG_H
, ((
c⁄åﬁ
->
öãºu±_sour˚_as£π
>>16) & 0xffff));

248 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERRUPT_OUTPUT_ASSERT_REG
, 
c⁄åﬁ
->
chù_öãºu±_ouçut_as£π
);

251 
i
 = 0; i < 
CHIP_IRQS_NR
; i++)

253 
chù_úq_desc
 *
desc
 = 
	`chù_úq_to_desc
(
chù
, 
i
);

254 
desc
->
úq
 = 
i
;

255 
desc
->
úq_cou¡
 =0;

256 
desc
->
úqs_unh™dÀd
 = 0;

257 
	`•ö_lock_öô
(&
desc
->
lock
);

258 
	`©omic_£t
(&
desc
->
dïth
, 0);

260 
	`mem£t
(&
desc
->
a˘i⁄
, 0, (
chù_úq_a˘i⁄
));

262 
desc
->
a˘i⁄
 = 
NULL
;

264 
desc
->
úq
)

266 
IRQ_VLC_TYPE_INTR
:

267 
desc
->
«me
 = "VLC";;

268 
IRQ_BURST_TYPE_INTR
:

269 
desc
->
«me
 = "BURST";;

270 
IRQ_MV_TYPE_INTR
:

271 
desc
->
«me
 = "MV";;

272 
IRQ_FRONT_END_TYPE_INTR
:

273 
desc
->
«me
 = "FRONT_END";;

274 
IRQ_JPEG_TYPE_INTR
:

275 
desc
->
«me
 = "JPEG";;

276 
IRQ_TIMER_TYPE_INTR
:

277 
desc
->
«me
 = "TIMER";;

278 
IRQ_VLC_DONE_TYPE_INTR
:

279 
desc
->
«me
 = "VLC_DONE";;

280 
IRQ_AD_SYNC_TYPE_INTR
:

281 
desc
->
«me
 = "AD_SYNC";;

282 
IRQ_AUDIO_EOF_TYPE_INTR
:

283 
desc
->
«me
 = "AUDIO";;

284 
IRQ_IIC_DONE_INTR
:

285 
desc
->
«me
 = "IIC";;

286 
IRQ_AD_EVENT_INTR
:

287 
desc
->
«me
 = "AD_EVENT";;

289 
desc
->
«me
 = "UNDEFINE";

291 
	`chù_dißbÀ_úq
(
chù
, 
i
);

293 #ifde‡
POWERPC_PCI_PLATFORM


294 
ªt
 = 
TW_OK
;

296 
	`£t_úq_ty≥
(
c⁄åﬁ
->
chù_úq
, 
IRQT_LOW
);

297 if(
	`ªque°_úq
(
c⁄åﬁ
->
chù_úq
, 
tw5864_t›_i§
, 
IRQF_DISABLED
, 
chù
->
«me
, control) == 0) {

298 #ifdef 
ARM_PLATFORM


299 
	`s3c2410_gpio_puŒup
(
IRQ_FPGA_PIN
, 0);

300 
	`s3c2410_gpio_cfgpö
(
IRQ_FPGA_PIN
, 
IRQ_FPGA_PIN_FN
);

302 
ªt
 = 
TW_OK
;

306  
ªt
;

307 
	}
}

309 
	$tw5864_öãºu±_c⁄åﬁ_sy°em_öãrÁ˚_íabÀ_öãºu±_sour˚
(
tw5864_öãºu±_c⁄åﬁ_t
 *
c⁄åﬁ
, 
u32
 
sour˚
)

311 if((
c⁄åﬁ
 !
NULL
Ë&& (
sour˚
 < 
CHIP_IRQS_NR
)){

312 
dvm_chù_t
 *
chù
;

313 
Êags
;

314 
	`•ö_lock_úqßve
(&
c⁄åﬁ
->
lock
, 
Êags
);

315 
chù
 = 
c⁄åﬁ
->chip;

317 
c⁄åﬁ
->
öãºu±_sour˚
 &~(
INTERRUPT_DISABLE
<<
sour˚
);

318 
c⁄åﬁ
->
öãºu±_sour˚
 |(
INTERRUPT_ENABLE
<<
sour˚
);

319 if(
sour˚
 < (
CHIP_IRQS_NR
 / 2)){

320 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERRUPT_SOURCE_ENABLE_REG_L
, (
c⁄åﬁ
->
öãºu±_sour˚
 & 0xffff));

322 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERRUPT_SOURCE_ENABLE_REG_H
, ((
c⁄åﬁ
->
öãºu±_sour˚
 >> 16) & 0xffff));

324 
	`•ö_u∆ock_úqª°‹e
(&
c⁄åﬁ
->
lock
, 
Êags
);

326 
	}
}

328 
	$tw5864_öãºu±_c⁄åﬁ_sy°em_öãrÁ˚_dißbÀ_öãºu±_sour˚
(
tw5864_öãºu±_c⁄åﬁ_t
 *
c⁄åﬁ
, 
u32
 
sour˚
)

330 if((
c⁄åﬁ
 !
NULL
Ë&& (
sour˚
 < 
CHIP_IRQS_NR
)){

331 
dvm_chù_t
 *
chù
;

332 
Êags
;

333 
	`•ö_lock_úqßve
(&
c⁄åﬁ
->
lock
, 
Êags
);

334 
chù
 = 
c⁄åﬁ
->chip;

335 
c⁄åﬁ
->
öãºu±_sour˚
 &~(
INTERRUPT_ENABLE
<<
sour˚
);

336 
c⁄åﬁ
->
öãºu±_sour˚
 |(
INTERRUPT_DISABLE
<<
sour˚
);

337 if(
sour˚
 < (
CHIP_IRQS_NR
 / 2)){

338 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERRUPT_SOURCE_ENABLE_REG_L
, (
c⁄åﬁ
->
öãºu±_sour˚
 & 0xffff));

340 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERRUPT_SOURCE_ENABLE_REG_H
, ((
c⁄åﬁ
->
öãºu±_sour˚
 >> 16) & 0xffff));

342 
	`•ö_u∆ock_úqª°‹e
(&
c⁄åﬁ
->
lock
, 
Êags
);

344 
	}
}

346 
	$tw5864_öãºu±_c⁄åﬁ_sy°em_öãrÁ˚_£t_öãºu±_sour˚_edge_åiggî
(
tw5864_öãºu±_c⁄åﬁ_t
 *
c⁄åﬁ
, 
u32
 
sour˚
)

348 if((
c⁄åﬁ
 !
NULL
Ë&& (
sour˚
 < 
CHIP_IRQS_NR
)){

349 
dvm_chù_t
 *
chù
;

350 
Êags
;

351 
	`•ö_lock_úqßve
(&
c⁄åﬁ
->
lock
, 
Êags
);

352 
chù
 = 
c⁄åﬁ
->chip;

353 
c⁄åﬁ
->
öãºu±_sour˚_åiggî_mode
 &~(
LEVEL_TRIGGER
<<
sour˚
);

354 
c⁄åﬁ
->
öãºu±_sour˚_åiggî_mode
 |(
EDGE_TRIGGER
<<
sour˚
);

355 if(
sour˚
 < (
CHIP_IRQS_NR
 / 2)){

356 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERRUPT_SOURCE_TRIGGER_REG_L
, (
c⁄åﬁ
->
öãºu±_sour˚_åiggî_mode
 & 0xffff));

358 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERRUPT_SOURCE_TRIGGER_REG_H
, ((
c⁄åﬁ
->
öãºu±_sour˚_åiggî_mode
 >> 16) & 0xffff));

360 
	`•ö_u∆ock_úqª°‹e
(&
c⁄åﬁ
->
lock
, 
Êags
);

362 
	}
}

364 
	$tw5864_öãºu±_c⁄åﬁ_sy°em_öãrÁ˚_£t_öãºu±_sour˚_Àvñ_åiggî
(
tw5864_öãºu±_c⁄åﬁ_t
 *
c⁄åﬁ
, 
u32
 
sour˚
)

366 if((
c⁄åﬁ
 !
NULL
Ë&& (
sour˚
 < 
CHIP_IRQS_NR
)){

367 
dvm_chù_t
 *
chù
;

368 
Êags
;

369 
	`•ö_lock_úqßve
(&
c⁄åﬁ
->
lock
, 
Êags
);

370 
chù
 = 
c⁄åﬁ
->chip;

371 
c⁄åﬁ
->
öãºu±_sour˚_åiggî_mode
 &~(
EDGE_TRIGGER
<<
sour˚
);

372 
c⁄åﬁ
->
öãºu±_sour˚_åiggî_mode
 |(
LEVEL_TRIGGER
<<
sour˚
);

373 if(
sour˚
 < (
CHIP_IRQS_NR
 / 2)){

374 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERRUPT_SOURCE_TRIGGER_REG_L
, (
c⁄åﬁ
->
öãºu±_sour˚_åiggî_mode
 & 0xffff));

376 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERRUPT_SOURCE_TRIGGER_REG_H
, ((
c⁄åﬁ
->
öãºu±_sour˚_åiggî_mode
 >> 16) & 0xffff));

378 
	`•ö_u∆ock_úqª°‹e
(&
c⁄åﬁ
->
lock
, 
Êags
);

380 
	}
}

382 
tw5864_öãºu±_c⁄åﬁ_sy°em_öãrÁ˚_›î©i⁄
 
	gtw5864_öãºu±_c⁄åﬁ_sy°em_öãrÁ˚_›
 = {

383 .
öô
 = 
tw5864_öãºu±_c⁄åﬁ_sy°em_öãrÁ˚_öô
,

384 .
	gíabÀ_öãºu±_sour˚
 = 
tw5864_öãºu±_c⁄åﬁ_sy°em_öãrÁ˚_íabÀ_öãºu±_sour˚
,

385 .
	gdißbÀ_öãºu±_sour˚
 = 
tw5864_öãºu±_c⁄åﬁ_sy°em_öãrÁ˚_dißbÀ_öãºu±_sour˚
,

386 .
	g£t_öãºu±_sour˚_edge_åiggî
 = 
tw5864_öãºu±_c⁄åﬁ_sy°em_öãrÁ˚_£t_öãºu±_sour˚_edge_åiggî
,

387 .
	g£t_öãºu±_sour˚_Àvñ_åiggî
 = 
tw5864_öãºu±_c⁄åﬁ_sy°em_öãrÁ˚_£t_öãºu±_sour˚_Àvñ_åiggî
,

390 
	$tw5864_öãºu±_c⁄åﬁ_h¨dw¨e_öãrÁ˚_gë_öãºu±_°©us
(
tw5864_öãºu±_c⁄åﬁ_t
 *
c⁄åﬁ
)

392 if(
c⁄åﬁ
 !
NULL
){

393 
dvm_chù_t
 *
chù
;

394 
Êags
;

395 
	`•ö_lock_úqßve
(&
c⁄åﬁ
->
lock
, 
Êags
);

396 
chù
 = 
c⁄åﬁ
->chip;

397 
c⁄åﬁ
->
chù_öãºu±_°©us
 = (
chù
->
io_›
->
	`chù_ªad32
(chù, 
INTERRUPT_STATUS_REG_L
)) & 0xffff;

398 
c⁄åﬁ
->
chù_öãºu±_°©us
 |((
chù
->
io_›
->
	`chù_ªad32
(chù, 
INTERRUPT_STATUS_REG_H
) & 0xffff) << 16);

399 
	`•ö_u∆ock_úqª°‹e
(&
c⁄åﬁ
->
lock
, 
Êags
);

401 
	}
}

403 
	$tw5864_öãºu±_c⁄åﬁ_h¨dw¨e_öãrÁ˚_ack_öãºu±
(
tw5864_öãºu±_c⁄åﬁ_t
 *
c⁄åﬁ
, 
u32
 
sour˚
)

405 if((
c⁄åﬁ
 !
NULL
Ë&& (
sour˚
 < 
CHIP_IRQS_NR
)){

406 
dvm_chù_t
 *
chù
;

407 
Êags
;

408 
	`•ö_lock_úqßve
(&
c⁄åﬁ
->
lock
, 
Êags
);

409 
chù
 = 
c⁄åﬁ
->chip;

410 
c⁄åﬁ
->
chù_öãºu±_°©us
 &~(1<<
sour˚
);

411 if(
sour˚
 < (
CHIP_IRQS_NR
 / 2)){

412 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERRUPT_CLEAR_REG_L
, (1<<
sour˚
));

414 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERRUPT_CLEAR_REG_H
, (1<<(
sour˚
 - 16)));

416 
	`•ö_u∆ock_úqª°‹e
(&
c⁄åﬁ
->
lock
, 
Êags
);

418 
	}
}

420 
tw5864_öãºu±_c⁄åﬁ_h¨dw¨e_öãrÁ˚_›î©i⁄
 
	gtw5864_öãºu±_c⁄åﬁ_h¨dw¨e_öãrÁ˚_›
 = {

421 .
gë_öãºu±_°©us
 = 
tw5864_öãºu±_c⁄åﬁ_h¨dw¨e_öãrÁ˚_gë_öãºu±_°©us
,

422 .
	gack_öãºu±
 = 
tw5864_öãºu±_c⁄åﬁ_h¨dw¨e_öãrÁ˚_ack_öãºu±
,

425 
	$öô_tw5864_öãºu±_c⁄åﬁ
(
tw5864_öãºu±_c⁄åﬁ_t
 *
c⁄åﬁ
, 
dvm_chù_t
 *
chù
)

427 
ªt
 = 
TW_ERR
;

429 if((
c⁄åﬁ
!=
NULL
Ë&& (
chù
!=NULL)){

430 
c⁄åﬁ
->
sy°em_›
 = &
tw5864_öãºu±_c⁄åﬁ_sy°em_öãrÁ˚_›
;

431 
c⁄åﬁ
->
h¨dw¨e_›
 = &
tw5864_öãºu±_c⁄åﬁ_h¨dw¨e_öãrÁ˚_›
;

432 
ªt
 = 
c⁄åﬁ
->
sy°em_›
->
	`öô
(c⁄åﬁ, 
chù
);

434  
ªt
;

435 
	}
}

437 
	$ªmove_tw5864_öãºu±_c⁄åﬁ
(
tw5864_öãºu±_c⁄åﬁ_t
 *
c⁄åﬁ
, 
dvm_chù_t
 *
chù
)

439 if((
c⁄åﬁ
!=
NULL
Ë&& (
chù
!=NULL)){

444 #i‚de‡
POWERPC_PCI_PLATFORM


445 
	`‰ì_úq
(
c⁄åﬁ
->
chù_úq
, control);

448 
	}
}

450 
	$dißbÀ_chù_öt
(
dvm_chù_t
 *
chù
)

452 
	`dißbÀ_úq
(
chù
->
tw5864_öt_c⁄åﬁ
.
chù_úq
);

453 
	}
}

455 
	$íabÀ_chù_öt
(
dvm_chù_t
 *
chù
)

457 
	`íabÀ_úq
(
chù
->
tw5864_öt_c⁄åﬁ
.
chù_úq
);

458 
	}
}

460 
	$chù_pﬁlög_èsk
(*
c⁄ãxt
)

462 
dvm_chù_t
 *
chù
 = (dvm_chù_t*)
c⁄ãxt
;

463 if(
chù
 !
NULL
){

464 
chù_drivî_t
 *
drivî
;

465 
d©a
;

466 
tw_video_bus_t
 *
video_bus
;

467 
tw_chù_vi_drivî_t
 *
chù_vi_drivî
;

469 
chù
->
chù_audio
.
›
->
	`gë_chù_audio_∑øm
(&chip->chip_audio);

470 
chù
->
chù_audio
.
›
->
	`¥o˚ss_audio_decode
(&chip->chip_audio);

471 
chù
->
chù_audio
.
›
->
	`¥o˚ss_audio_ícode
(&chip->chip_audio);

472 
chù
->
chù_audio
.
›
->
	`£t_chù_audio_∑øm
(&chip->chip_audio);

475 
d©a
 = 
	`mpb_ªad
(
chù
, 
TW_VI_STANDARD
);

476 
d©a
 >>= 4;

477 
d©a
 &= 0x7;

478 
drivî
 = 
chù
->
chù_drivî
;

479 
chù_vi_drivî
 = 
chù
->chip_vi_driver;

480 
video_bus
 = &
drivî
->video_bus;

483 if(
chù_vi_drivî
->
›
->
	`gë_video_°™d¨d
(chù_vi_drivîË=
CHIP_VI_STANDARD_AUTO
) {

484 if((
d©a
 =
CHIP_VI_STANDARD_NTSC_M
Ë|| (d©®=
CHIP_VI_STANDARD_NTSC443
)) {

486 if(
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË!
TW_VIDEO_STANDARD_NTSC
) {

487 
	`TW_DBG
(
TW_DBG_INFO
, "changeÉncoderÅo NTSC\n");

488 
chù_vi_drivî
->
›
->
	`£t_video_°™d¨d
(chù_vi_drivî, 
d©a
);

489 
chù_vi_drivî
->
›
->
	`£t_video_°™d¨d_ext
(chù_vi_drivî, 
CHIP_VI_STANDARD_AUTO
);

493 if(
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË!
TW_VIDEO_STANDARD_PAL
) {

494 
	`TW_DBG
(
TW_DBG_INFO
, "changeÉncoderÅo PAL\n");

495 
chù_vi_drivî
->
›
->
	`£t_video_°™d¨d
(chù_vi_drivî, 
d©a
);

496 
chù_vi_drivî
->
›
->
	`£t_video_°™d¨d_ext
(chù_vi_drivî, 
CHIP_VI_STANDARD_AUTO
) ;

499 if((
	`mpb_ªad
(
chù
, 
TW_VI_SYSTEM_VIDEO_STANDARD
) & 0x1) == 0x1){

500 if(
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË!
TW_VIDEO_STANDARD_PAL
) {

501 
chù_vi_drivî
->
›
->
	`£t_video_°™d¨d
(chù_vi_drivî, 
d©a
);

502 
chù_vi_drivî
->
›
->
	`£t_video_°™d¨d_ext
(chù_vi_drivî, 
CHIP_VI_STANDARD_AUTO
) ;

505 if(
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË!
TW_VIDEO_STANDARD_NTSC
) {

506 
chù_vi_drivî
->
›
->
	`£t_video_°™d¨d
(chù_vi_drivî, 
d©a
);

507 
chù_vi_drivî
->
›
->
	`£t_video_°™d¨d_ext
(chù_vi_drivî, 
CHIP_VI_STANDARD_AUTO
);

513  
TW_OK
;

514 
	}
}

518 c⁄° 
Âga_ªg_addr
 
	gF‹w¨dQu™tiz©i⁄TabÀ
[
QUANTIZATION_TABLE_LEN
] =

532 c⁄° 
Âga_ªg_addr
 
	gInvî£Qu™tiz©i⁄TabÀ
[
QUANTIZATION_TABLE_LEN
] =

546 c⁄° 
Âga_ªg_addr
 
	gvlc_lookup_èbÀ
[
VLC_LOOKUP_TABLE_LEN
] = {

635 
	$WrôeVLCLookupTabÀ
(
dvm_chù_t
 *
chù
)

637 
i
;

639 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENABLE_VLC_LOOKUP_TABLE
, 0x1);

640 
i
=0; i<
VLC_LOOKUP_TABLE_LEN
; i++){

641 
chù
->
io_›
->
	`chù_wrôe32
(chù, (
VLC_LOOKUP_TABLE_BASE
+(
i
<<2)), 
vlc_lookup_èbÀ
[i]);

643 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENABLE_VLC_LOOKUP_TABLE
, 0x0);

644 
	}
}

646 
	$WrôeF‹w¨dQu™tiz©i⁄TabÀ
(
dvm_chù_t
 *
chù
)

648 
i
;

650 
i
=0; i<
QUANTIZATION_TABLE_LEN
; i++) {

651 
chù
->
io_›
->
	`chù_wrôe32
(chù, (
QUANTIZATION
+(
i
<<2)), 
F‹w¨dQu™tiz©i⁄TabÀ
[i]);

653 
	}
}

655 
	$WrôeInvî£Qu™tiz©i⁄TabÀ
(
dvm_chù_t
 *
chù
)

657 
i
;

659 
i
=0; i<
QUANTIZATION_TABLE_LEN
; i++) {

660 
chù
->
io_›
->
	`chù_wrôe32
(chù, (
QUANTIZATION
+(
i
<<2)), 
Invî£Qu™tiz©i⁄TabÀ
[i]);

662 
	}
}

664 
	$CÀ¨DDR
(
dvm_chù_t
 *
chù
)

666 
i
, 
j
;

668 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MODE
, 
DDRON
);

669 
i
=0; i<128; i++) {

670 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
i
);

671 
j
=0; j<0x20000; j++){

672 
chù
->
io_›
->
	`chù_wrôe32
(chù, (
DDRBASE
+(
j
<<2)), 0x0);

675 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
FRAMERESOLUTION
, 0x2c24);

676 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
WINDOWSIZE
, 
SEARCH_WINDOW_SIZE_VALUE
);

677 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
REFFRAMEINDEX
, 0x2001);

678 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
QP
, 0x1c);

679 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
CHIPSCOPE
, 0x0);

680 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ORIGINALSEQUENCE
, 0x14c8);

681 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
REFERENCEFRAME
, 0x0440);

682 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRAENABLE
, 0x0060);

683 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
CHANNEL_ID
, 
MB_DELAY_VALUE
 | 
DDR_B_CHIP
);

684 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MODE
, (
D1
|
DAON
|
DEBLOCKINGON
|
INTRAON
|
INTERON
|
DDRON
));

685 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DSP_DEBUG_CNTL
, (0x40<<8)|
START_DAC
);

686 
	`¥ötk
("\nclear ddr over\n");

687 
	}
}

689 
	$chù_h¨dw¨e_ªsour˚_›í
(
dvm_chù_t
 *
chù
)

691 if(
	`©omic_ªad
(&
chù
->
›í_ch™_numbî
) >= 0){

692 
	`¥ötk
("%s, %d\n", 
__FUNCTION__
, 
__LINE__
);

693 if(
	`©omic_ªad
(&
chù
->
›í_ch™_numbî
) == 0){

694 
chù
->
	`chù_£t_vÆid
(chip);

696 
	`©omic_öc
(&
chù
->
›í_ch™_numbî
);

698 
	`¥ötk
("%s.%d: o≥n_ch™_numbîÉº\n", 
__FUNCTION__
, 
__LINE__
);

701 
	}
}

703 
	$chù_h¨dw¨e_ªsour˚_˛o£
(
dvm_chù_t
 *
chù
)

705 if(
	`©omic_ªad
(&
chù
->
›í_ch™_numbî
) > 0){

706 
	`¥ötk
("%s, %d\n", 
__FUNCTION__
, 
__LINE__
);

707 
	`©omic_dec
(&
chù
->
›í_ch™_numbî
);

708 if(
	`©omic_ªad
(&
chù
->
›í_ch™_numbî
) == 0){

709 
chù
->
	`chù_£t_övÆid
(chip);

712 
	`¥ötk
("%s.%d: o≥n_ch™_numbîÉº\n", 
__FUNCTION__
, 
__LINE__
);

714 
	}
}

716 #ifde‡ 
OSD_MODULE


717 
timevÆ
 
	gs_osd_tv1
;

720 
úqªtu∫_t
 
	$timî_⁄_chù_h™dÀr
(
úq
, *
c⁄ãxt
)

722 if(
c⁄ãxt
) {

723 
u32
 
Êags
;

724 
dvm_chù_t
 *
chù
 = (dvm_chù_à*)
c⁄ãxt
;

726 
Êags
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
INTERRUPT_FLAGS_EXT
);

727 if(
Êags
 & (1 << 
IRQ_EXT_TIMER_INTR
)) {

728 #ifde‡ 
OSD_MODULE


729 
	`check_πc_time
(&
s_osd_tv1
);

732 
	`TigîSögÀFúeTimî
();

733 
	`TigîF‹FúeTimî
();

735 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERRUPT_FLAGS_EXT
, 1 << 
IRQ_EXT_TIMER_INTR
);

739  
IRQ_HANDLED
;

740 
	}
}

742 
	$ªgi°î_⁄_chù_timî
(
dvm_chù_t
 *
chù
, 
úq_h™dÀr_t
 
h™dÀr
)

744 if(
chù
 && 
h™dÀr
) {

745 if(
	`chù_ªque°_úq
(
chù
, 
IRQ_TIMER_TYPE_INTR
, 
timî_⁄_chù_h™dÀr
, "timer", chip)){

746 
	`¥ötk
("%†,%d:Ñegi°î sy°emÅimî faûed\n", 
__FUNCTION__
, 
__LINE__
);

749 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
PCI_TIMER_CONTROL
, 0x2);

750 
chù
->
	`íabÀ_timî
(chip);

752 
	}
}

754 
	$íabÀ_⁄_chù_timî
(
dvm_chù_t
 *
chù
)

756 if(
chù
) {

757 
u32
 
vÆ
;

759 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
PCI_MASTER_CONTROL
);

760 
vÆ
 |(1 << 
IRQ_EXT_TIMER_INTR
);

761 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
PCI_MASTER_CONTROL
, 
vÆ
);

763 
	}
}

765 
	$dißbÀ_⁄_chù_timî
(
dvm_chù_t
 *
chù
)

767 if(
chù
) {

768 
u32
 
vÆ
;

770 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
PCI_MASTER_CONTROL
);

771 
vÆ
 &~(1 << 
IRQ_EXT_TIMER_INTR
);

772 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
PCI_MASTER_CONTROL
, 
vÆ
);

774 
	}
}

776 
	$uƒegi°î_⁄_chù_timî
(
dvm_chù_t
 *
chù
)

778 if(
chù
) {

779 
chù
->
	`dißbÀ_timî
(chip);

780 
	`chù_‰ì_úq
(
chù
, 
IRQ_TIMER_TYPE_INTR
, chip);

782 
	}
}

784 
	$chù_phy_övÆid
(
dvm_chù_t
 *
chù
)

786 
Êags
;

787 
u32
 
vÆ
;

788 
tw_chù_vi_drivî_t
 *
chù_vi_drivî
 = 
chù
->chip_vi_driver;

790 
	`¥ötk
("%s, %d\n", 
__FUNCTION__
, 
__LINE__
);

791 
	`loˇl_úq_ßve
(
Êags
);

792 if(
chù
->
dñëe_chù_pﬁlög_èsk
 !
NULL
){

793 
chù
->
	`dñëe_chù_pﬁlög_èsk
(chip);

795 #ifde‡
USE_ON_CHIP_TIMER


796 if(
chù
->
uƒegi°î_timî
) {

797 
chù
->
	`uƒegi°î_timî
(chip);

800 #ifdef 
ARM_PLATFORM


801 
	`s3c2410_gpio_cfgpö
(
FPGA_RESET_PIN
, 
FPGA_RESET_PIN_FN
);

802 
	`s3c2410_gpio_puŒup
(
FPGA_RESET_PIN
, 0);

803 
	`s3c2410_gpio_£çö
(
FPGA_RESET_PIN
, 
FPGA_RESET_VALID
);

804 
	`udñay
(100);

805 if(
chù
->
tw5864_öt_c⁄åﬁ
.
chù_úq
 =
IRQ_EINT0
){

806 
	`__øw_wrôñ
(0x1, 
S3C2410_SRCPND
);

807 
	`__øw_wrôñ
(0x1, 
S3C2410_INTPND
);

808 } if(
chù
->
tw5864_öt_c⁄åﬁ
.
chù_úq
 =
IRQ_EINT1
){

809 
	`__øw_wrôñ
(0x2, 
S3C2410_SRCPND
);

810 
	`__øw_wrôñ
(0x2, 
S3C2410_INTPND
);

812 
	`__øw_wrôñ
(0x4, 
S3C2410_SRCPND
);

813 
	`__øw_wrôñ
(0x4, 
S3C2410_INTPND
);

815 
	`s3c2410_gpio_£çö
(
FPGA_RESET_PIN
, 
FPGA_RESET_INVALID
);

817 #i‚de‡
FPGA_330_5864_TESTING


818 
chù
->
io_›
->
	`chù_wrôe32
(chù, 0x8018, 0xd000 + ((chù->
sys_˛ock
 << 1) - 1));

819 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x8020, 0x284);

820 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x8024, 0x20);

821 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x801c, 0x0d);

822 
	`mdñay
(5);

824 
	`mpb_wrôe
(
chù
, 
TW_VI_SYSTEM_RESET
, 0x00);

825 
	`mpb_wrôe
(
chù
, 
TW_VI_SYSTEM_RESET
, 0xe0);

826 
	`mdñay
(1);

827 
	`mpb_wrôe
(
chù
, 
TW_VI_SYSTEM_CLOCK
, 0xf0);

828 
	`mpb_wrôe
(
chù
, 
TW_VI_SYSTEM_CLOCK_REVERSE
, 0xf0);

831 
	`loˇl_úq_ª°‹e
(
Êags
);

832 
	`mdñay
(5);

834 #i‚de‡
FPGA_330_5864_TESTING


835 if(
chù
->
sys_˛ock
 > 110) {

836 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0xa000, 0xc5);

837 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0xa800, 0xc5);

842 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
MCU_IIC_CONF
);

843 
vÆ
 |= 0x01;

844 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MCU_IIC_CONF
, 
vÆ
);

845 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
I2C_PHASE_SHIFT
, 0x01);

848 if(
chù_vi_drivî
 && chù_vi_drivî->
›
) {

849 
chù_vi_drivî
->
›
->
	`ª£t
(chip_vi_driver);

853 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x8028, 0x15);

854 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x801c, 0x18);

855 
	`mdñay
(5);

856 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x801c, 0x00);

858 
	}
}

860 
	$chù_phy_vÆid
(
dvm_chù_t
 *
chù
)

862 
u32
 
vÆ
;

863 
chù_drivî_t
 *
drivî
;

864 
tw_video_bus_t
 *
video_bus
;

865 
tw5864_vd_¸oss_bus_t
 *
vd_bus
;

866 
tw5864_vj_bus_t
 *
vj_bus
;

869 
	`¥ötk
("%s, %d\n", 
__FUNCTION__
, 
__LINE__
);

870 
drivî
 = 
chù
->
chù_drivî
;

871 
video_bus
 = &
drivî
->video_bus;

872 
vd_bus
 = 
video_bus
->
vd_bus_drivî
;

873 
vj_bus
 = 
video_bus
->
vj_bus_drivî
;

876 
chù
->
	`chù_£t_övÆid
(chip);

877 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRAENABLE
, 0);

878 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MODE
, (
DDRON
|
CMOSON
));

879 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRANDMECONTROL
, 0);

880 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
CHANNEL_SELECT
, 0);

881 
	`WrôeF‹w¨dQu™tiz©i⁄TabÀ
(
chù
);

882 
	`WrôeInvî£Qu™tiz©i⁄TabÀ
(
chù
);

883 
	`WrôeVLCLookupTabÀ
(
chù
);

884 
	`TW_DBG
(
TW_DBG_INFO
, "\nFPGA vîsi⁄: %x:%x, chù_id=%d\n", 
chù
->
io_›
->
	`chù_ªad32
(chù, 0), chù->io_›->chù_ªad32(chù, 8), chù->
chù_id
);

887 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
MCU_IIC_CONF
);

888 
vÆ
 |= 0x01;

889 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MCU_IIC_CONF
, 
vÆ
);

890 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
I2C_PHASE_SHIFT
, 0x01);

892 
vd_bus
->
›
->
	`ª£t
(vd_bus);

893 
vd_bus
->
›
->
	`£t_chù_íd_¸oss_bus
(vd_bus, 
chù
);

895 
vj_bus
->
›
->
	`ª£t
(vj_bus);

897 if(
chù
->
add_chù_pﬁlög_èsk
 !
NULL
){

898 
chù
->
	`add_chù_pﬁlög_èsk
(chip);

900 #ifde‡
USE_ON_CHIP_TIMER


901 if(
chù
->
ªgi°î_timî
) {

902 
chù
->
	`ªgi°î_timî
(chù, 
timî_⁄_chù_h™dÀr
);

905 #ifde‡
POWERPC_PCI_PLATFORM


907 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
PCI_MASTER_CONTROL
);

908 
vÆ
 |= (0x7 << 26);

909 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
PCI_MASTER_CONTROL
, 
vÆ
);

910 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, (1<<13));

911 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENABLE_VLC_LOOKUP_TABLE
, (chù->io_›->
	`chù_ªad32
(chip, ENABLE_VLC_LOOKUP_TABLE) | 0x2));

913 
	}
}

915 
	$chù_phy_ª£t
(
dvm_chù_t
 *
chù
)

917 if(
chù
) {

918 
chù_drivî_t
 *
chù_drivî
 = 
chù
->chip_driver;

919 
tw_chù_ai_drivî_t
 *
chù_ai_drivî
 = 
chù
->chip_ai_driver;

920 
tw_chù_vi_drivî_t
 *
chù_vi_drivî
 = 
chù
->chip_vi_driver;

922 if(
chù_ai_drivî
 && chù_ai_drivî->
›
) {

923 
chù_ai_drivî
->
›
->
	`ª£t
(chip_ai_driver);

925 if(
chù_vi_drivî
 && chù_vi_drivî->
›
) {

926 
chù_vi_drivî
->
›
->
	`ª£t
(chip_vi_driver);

928 if(
chù_drivî
 && chù_drivî->
›
) {

929 
chù_drivî
->
›
->
	`ª£t
(chip_driver);

932 
	}
}

934 
	$add_chù_pﬁlög_èsk
(
dvm_chù_t
 *
chù
)

936 if(
chù
 !
NULL
){

937 
	`DñëeF‹FúeTimîJob
(
chù
->
chù_pﬁlög_timeid
);

938 
chù
->
chù_pﬁlög_timeid
 = 
INVALIDTIMERID
;

939 
chù
->
chù_pﬁlög_timeid
 = 
	`AddF‹FúeTimîJob
(1, 
chù_pﬁlög_èsk
, chip);

940 if(
chù
->
chù_pﬁlög_timeid
 =
ADDJOBERROR
){

941 
	`¥ötk
("%s.%d:áddÅimî hookÉº\n", 
__FUNCTION__
, 
__LINE__
);

944 
	}
}

946 
	$dñëe_chù_pﬁlög_èsk
(
dvm_chù_t
 *
chù
)

948 if(
chù
 !
NULL
){

949 
	`DñëeF‹FúeTimîJob
(
chù
->
chù_pﬁlög_timeid
);

950 
chù
->
chù_pﬁlög_timeid
 = 
INVALIDTIMERID
;

952 
	}
}

954 
	$ªgi°î_cuº_h264_ícode_ch™
(
dvm_chù_t
 *
chù
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
)

956 if((
chù
!=
NULL
Ë&& (
h264_logic_ícode_ch™
!=NULL)){

957 
chù
->
vlc_pög_p⁄g_ödex
 = 0;

958 
	`chù_ªque°_úq
(
chù
, 
IRQ_VLC_TYPE_INTR
, 
h264_logic_ícode_ch™
->
ícode_c⁄åﬁ
.
›
->
úq_func
, "VLC", (*)&h264_logic_encode_chan->encode_control);

960 
	}
}

962 
	$uƒegi°î_cuº_h264_ícode_ch™
(
dvm_chù_t
 *
chù
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
)

964 if((
chù
!=
NULL
Ë&& (
h264_logic_ícode_ch™
!=NULL)){

965 
	`chù_‰ì_úq
(
chù
, 
IRQ_VLC_TYPE_INTR
, &
h264_logic_ícode_ch™
->
ícode_c⁄åﬁ
);

967 
	}
}

969 
	$chù_ícode_ch™_£rvi˚_queue_öô
(
chù_ícode_ch™_£rvi˚_queue_t
 *
chù_ícode_£rvi˚_queue
)

971 if(
chù_ícode_£rvi˚_queue
 !
NULL
){

972 
tcb_node_queue_t
 *
queue_node
 = &
chù_ícode_£rvi˚_queue
->
£rvi˚_queue_node
;

973 
	`•ö_lock_öô
(&
chù_ícode_£rvi˚_queue
->
lock
);

974 
	`©omic_£t
(&
chù_ícode_£rvi˚_queue
->
h264_ma°î_ˇn_ªcv_numbî
, 2);

975 
	`©omic_£t
(&
chù_ícode_£rvi˚_queue
->
h264_ddr_ˇche_numbî
, 8);

976 
queue_node
->
›
 = &
tcb_node_queue_›
;

977 
queue_node
->
›
->
	`öô
(queue_node);

978 
chù_ícode_£rvi˚_queue
->
cuº_c⁄sumî
 = 
NULL
;

980 
	}
}

982 
	$chù_ícode_ch™_£rvi˚_queue_gë_queue_cuº_íåy_numbî
(
chù_ícode_ch™_£rvi˚_queue_t
 *
chù_ícode_£rvi˚_queue
)

984 
ªt
 = 0;

985 if(
chù_ícode_£rvi˚_queue
 !
NULL
){

986 
tcb_node_queue_t
 *
queue_node
 = &
chù_ícode_£rvi˚_queue
->
£rvi˚_queue_node
;

987 
ªt
 = 
queue_node
->
›
->
	`gë_queue_cuº_íåy_numbî
(queue_node);

989  
ªt
;

990 
	}
}

992 
	$chù_ícode_ch™_£rvi˚_queue_put_£rvi˚_ªque°_öto_queue
(
chù_ícode_ch™_£rvi˚_queue_t
 *
chù_ícode_£rvi˚_queue
, 
ícode_ch™_£rvi˚_tcb_t
 *
ch™_£rvi˚_tcb
)

994 if((
chù_ícode_£rvi˚_queue
!=
NULL
Ë&& (
ch™_£rvi˚_tcb
!=NULL)){

995 
tcb_node_queue_t
 *
queue_node
 = &
chù_ícode_£rvi˚_queue
->
£rvi˚_queue_node
;

996 
queue_node
->
›
->
	`put
(queue_node, &
ch™_£rvi˚_tcb
->
£rvi˚_tcb
);

997 
chù_ícode_£rvi˚_queue
->
›
->
	`åiggî_chù_≥ndög_£rvi˚_ªque°
(chip_encode_service_queue);

999 
	}
}

1001 
	$chù_ícode_ch™_£rvi˚_queue_put_£rvi˚_ªque°_öto_queue_hódî
(
chù_ícode_ch™_£rvi˚_queue_t
 *
chù_ícode_£rvi˚_queue
, 
ícode_ch™_£rvi˚_tcb_t
 *
ch™_£rvi˚_tcb
)

1003 if((
chù_ícode_£rvi˚_queue
!=
NULL
Ë&& (
ch™_£rvi˚_tcb
!=NULL)){

1004 
tcb_node_queue_t
 *
queue_node
 = &
chù_ícode_£rvi˚_queue
->
£rvi˚_queue_node
;

1005 
queue_node
->
›
->
	`put_hódî
(queue_node, &
ch™_£rvi˚_tcb
->
£rvi˚_tcb
);

1006 
chù_ícode_£rvi˚_queue
->
›
->
	`åiggî_chù_≥ndög_£rvi˚_ªque°
(chip_encode_service_queue);

1008 
	}
}

1010 
	$chù_ícode_ch™_£rvi˚_queue_åy_gë_cuº_c⁄sumî_‰om_queue
(
chù_ícode_ch™_£rvi˚_queue_t
 *
chù_ícode_£rvi˚_queue
)

1012 if(
chù_ícode_£rvi˚_queue
 !
NULL
){

1013 
tcb_node_queue_t
 *
queue_node
 = &
chù_ícode_£rvi˚_queue
->
£rvi˚_queue_node
;

1015 if(
chù_ícode_£rvi˚_queue
->
cuº_c⁄sumî
 =
NULL
){

1016 if(
queue_node
->
›
 !
NULL
){

1017 
tcb_node_t
 *
ãmp_node
;

1018 
queue_node
->
›
->
	`åy_gë
(queue_node, &
ãmp_node
);

1019 if(
ãmp_node
 !
NULL
){

1020 
chù_ícode_£rvi˚_queue
->
cuº_c⁄sumî
 = 
	`to_gë_ícode_ch™_£rvi˚_tcb_wôh_£rvi˚_tcb
(
ãmp_node
);

1025 
	}
}

1027 
	$chù_ícode_ch™_£rvi˚_queue_ªÀa£_cuº_c⁄sumî
(
chù_ícode_ch™_£rvi˚_queue_t
 *
chù_ícode_£rvi˚_queue
)

1029 if(
chù_ícode_£rvi˚_queue
 !
NULL
){

1030 
Êags
;

1031 
	`•ö_lock_úqßve
(&
chù_ícode_£rvi˚_queue
->
lock
, 
Êags
);

1032 
chù_ícode_£rvi˚_queue
->
cuº_c⁄sumî
 = 
NULL
;

1033 
	`•ö_u∆ock_úqª°‹e
(&
chù_ícode_£rvi˚_queue
->
lock
, 
Êags
);

1035 
	}
}

1037 
	$chù_ícode_ch™_£rvi˚_queue_åiggî_chù_≥ndög_£rvi˚_ªque°
(
chù_ícode_ch™_£rvi˚_queue_t
 *
chù_ícode_£rvi˚_queue
)

1039 if(
chù_ícode_£rvi˚_queue
 !
NULL
){

1040 
ícode_ch™_£rvi˚_tcb_t
 *
cuº_c⁄sumî
;

1041 
cuº_íåy_numbî
;

1042 
Êags
;

1044 
	`•ö_lock_úqßve
(&
chù_ícode_£rvi˚_queue
->
lock
, 
Êags
);

1045 
agaö
:

1046 
cuº_íåy_numbî
 = 
chù_ícode_£rvi˚_queue
->
›
->
	`gë_queue_cuº_íåy_numbî
(chip_encode_service_queue);

1047 if((
cuº_íåy_numbî
==0Ë&& (
chù_ícode_£rvi˚_queue
->
cuº_c⁄sumî
==
NULL
)){

1048 
	`•ö_u∆ock_úqª°‹e
(&
chù_ícode_£rvi˚_queue
->
lock
, 
Êags
);

1050 } if(
chù_ícode_£rvi˚_queue
->
cuº_c⁄sumî
 !
NULL
){

1051 
	`•ö_u∆ock_úqª°‹e
(&
chù_ícode_£rvi˚_queue
->
lock
, 
Êags
);

1054 
chù_ícode_£rvi˚_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(chip_encode_service_queue);

1055 
cuº_c⁄sumî
 = 
chù_ícode_£rvi˚_queue
->curr_consumer;

1056 if(
cuº_c⁄sumî
 !
NULL
){

1057 
	`•ö_u∆ock_úqª°‹e
(&
chù_ícode_£rvi˚_queue
->
lock
, 
Êags
);

1058 
cuº_c⁄sumî
->
	`ªq_ˇŒback
(cuº_c⁄sumî->
c⁄ãxt
);

1059 
	`•ö_lock_úqßve
(&
chù_ícode_£rvi˚_queue
->
lock
, 
Êags
);

1060 if(
cuº_c⁄sumî
->
ty≥
 =
DVM_CHIP_REQ_FIRST_STRAT_ENCODE_CHAN
){

1061 
chù_ícode_£rvi˚_queue
->
cuº_c⁄sumî
 = 
NULL
;

1062 
agaö
;

1065 
	`•ö_u∆ock_úqª°‹e
(&
chù_ícode_£rvi˚_queue
->
lock
, 
Êags
);

1067 
	}
}

1069 
chù_ícode_ch™_£rvi˚_queue_›î©i⁄
 
	gchù_ícode_ch™_£rvi˚_queue_›
 = {

1070 .
öô
 = 
chù_ícode_ch™_£rvi˚_queue_öô
,

1071 .
	ggë_queue_cuº_íåy_numbî
 = 
chù_ícode_ch™_£rvi˚_queue_gë_queue_cuº_íåy_numbî
,

1072 .
	gput_£rvi˚_ªque°_öto_queue
 = 
chù_ícode_ch™_£rvi˚_queue_put_£rvi˚_ªque°_öto_queue
,

1073 .
	gput_£rvi˚_ªque°_öto_queue_hódî
 = 
chù_ícode_ch™_£rvi˚_queue_put_£rvi˚_ªque°_öto_queue_hódî
,

1074 .
	gåy_gë_cuº_c⁄sumî_‰om_queue
 = 
chù_ícode_ch™_£rvi˚_queue_åy_gë_cuº_c⁄sumî_‰om_queue
,

1075 .
	gªÀa£_cuº_c⁄sumî
 = 
chù_ícode_ch™_£rvi˚_queue_ªÀa£_cuº_c⁄sumî
,

1076 .
	gåiggî_chù_≥ndög_£rvi˚_ªque°
 = 
chù_ícode_ch™_£rvi˚_queue_åiggî_chù_≥ndög_£rvi˚_ªque°
,

1079 
	$öô_chù_ícode_ch™_£rvi˚_queue
(
chù_ícode_ch™_£rvi˚_queue_t
 * 
chù_ícode_£rvi˚_queue
)

1081 if(
chù_ícode_£rvi˚_queue
 !
NULL
){

1082 
chù_ícode_£rvi˚_queue
->
›
 = &
chù_ícode_ch™_£rvi˚_queue_›
;

1083 
chù_ícode_£rvi˚_queue
->
›
->
	`öô
(chip_encode_service_queue);

1085 
	}
}

1087 
	$ªmove_chù_ícode_ch™_£rvi˚_queue
(
chù_ícode_ch™_£rvi˚_queue_t
 * 
chù_ícode_£rvi˚_queue
)

1089 if(
chù_ícode_£rvi˚_queue
 !
NULL
){

1090 if(
chù_ícode_£rvi˚_queue
->
cuº_c⁄sumî
 !
NULL
){

1091 
	`nŸify_ªmove_ícode_ch™_£rvi˚
(
chù_ícode_£rvi˚_queue
->
cuº_c⁄sumî
);

1092 
chù_ícode_£rvi˚_queue
->
cuº_c⁄sumî
 = 
NULL
;

1094 
chù_ícode_£rvi˚_queue
->
›
->
	`gë_queue_cuº_íåy_numbî
(chip_encode_service_queue)){

1095 
chù_ícode_£rvi˚_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(chip_encode_service_queue);

1096 if(
chù_ícode_£rvi˚_queue
->
cuº_c⁄sumî
 =
NULL
){

1099 
	`nŸify_ªmove_ícode_ch™_£rvi˚
(
chù_ícode_£rvi˚_queue
->
cuº_c⁄sumî
);

1100 
chù_ícode_£rvi˚_queue
->
cuº_c⁄sumî
 = 
NULL
;

1104 
	}
}

1106 
u32
 
	$tw5864_ho°_io_chù_ªad32
(
dvm_chù_t
 *
chù
, 
u32
 
off£t
)

1108  
	`__øw_ªadl
((
chù
->
ªgs
+
off£t
));

1109 
	}
}

1111 
u16
 
	$tw5864_ho°_io_chù_ªad16
(
dvm_chù_t
 *
chù
, 
u32
 
off£t
)

1113  
	`__øw_ªadw
((
chù
->
ªgs
+
off£t
));

1114 
	}
}

1116 
u8
 
	$tw5864_ho°_io_chù_ªad8
(
dvm_chù_t
 *
chù
, 
u32
 
off£t
)

1118  
	`__øw_ªadb
((
chù
->
ªgs
+
off£t
));

1119 
	}
}

1121 
	$tw5864_ho°_io_chù_ªad_block
(
dvm_chù_t
 *
chù
, 
u32
 
off£t
, 
Àn
, u32 *
de°
)

1123 
i
;

1124 
Àn
 += 3;

1125 
Àn
 >>= 2;

1126 
i
=0; i<
Àn
; i++){

1127 
de°
[
i
] = 
	`__øw_ªadl
((
chù
->
ªgs
+
off£t
));

1128 
off£t
 += 4;

1130 
	}
}

1132 
	$tw5864_ho°_io_chù_wrôe32
(
dvm_chù_t
 *
chù
, 
u32
 
off£t
, u32 
vÆue
)

1134 
	`__øw_wrôñ
(
vÆue
, (
chù
->
ªgs
+
off£t
));

1136 if(
off£t
 < 0x2000){

1137 
	`¥ötk
("264: %x=0x%x, 0x%x\n", 
off£t
, 
vÆue
, 
	`__øw_ªadl
(
chù
->
ªgs
+offset));

1138 } if(
off£t
 < 0x3000){

1140 } if(
off£t
 < 0x4000){

1141 
	`¥ötk
("ª£rvî s∑˚ %x\n", 
off£t
);

1142 } if(
off£t
 < 0x5000){

1143 
	`¥ötk
("audio: %x=0x%x, 0x%x\n", 
off£t
, 
vÆue
, 
	`__øw_ªadl
(
chù
->
ªgs
+offset));

1144 } if(
off£t
 < 0x802c){

1145 
	`¥ötk
("sy°em_c⁄fig: %x=0x%x, 0x%x\n", 
off£t
, 
vÆue
, 
	`__øw_ªadl
(
chù
->
ªgs
+offset));

1146 } if(
off£t
 < 0x8800){

1147 
	`¥ötk
("ª£rvî s∑˚ %x\n", 
off£t
);

1148 } if(
off£t
 < 0x8900){

1149 
	`¥ötk
("I¡: %x=0x%x, 0x%x\n", 
off£t
, 
vÆue
, 
	`__øw_ªadl
(
chù
->
ªgs
+offset));

1150 } if(
off£t
 < 0x9000){

1151 
	`¥ötk
("ª£rvî s∑˚ %x\n", 
off£t
);

1152 } if(
off£t
 < 0x9210){

1153 
	`¥ötk
("VIF: %x=0x%x, 0x%x\n", 
off£t
, 
vÆue
, 
	`__øw_ªadl
(
chù
->
ªgs
+offset));

1154 } if(
off£t
 < 0xa000){

1155 
	`¥ötk
("ª£rvî s∑˚ %x\n", 
off£t
);

1156 } if(
off£t
 < 0xa900){

1157 
	`¥ötk
("DDR: %x=0x%x, 0x%x\n", 
off£t
, 
vÆue
, 
	`__øw_ªadl
(
chù
->
ªgs
+offset));

1158 } if(
off£t
 < 0xb800){

1159 
	`¥ötk
("ª£rvî s∑˚ %x\n", 
off£t
);

1160 } if(
off£t
 < 0xb810){

1161 
	`¥ötk
("IAR: %x=0x%x, 0x%x\n", 
off£t
, 
vÆue
, 
	`__øw_ªadl
(
chù
->
ªgs
+offset));

1162 } if(
off£t
 < 0xc000){

1163 
	`¥ötk
("ª£rvî s∑˚ %x\n", 
off£t
);

1164 } if(
off£t
 < 0xc800){

1165 
	`¥ötk
("¥evõw: %x=0x%x, 0x%x\n", 
off£t
, 
vÆue
, 
	`__øw_ªadl
(
chù
->
ªgs
+offset));

1166 } if(
off£t
 < 0xc808){

1167 
	`¥ötk
("MJPEG_C≠tuª: %x=0x%x, 0x%x\n", 
off£t
, 
vÆue
, 
	`__øw_ªadl
(
chù
->
ªgs
+offset));

1168 } if(
off£t
 < 0xd000){

1169 
	`¥ötk
("ª£rvî s∑˚ %x\n", 
off£t
);

1170 } if(
off£t
 < 0xd100){

1171 
	`¥ötk
("MJPEG_C⁄åﬁ: %x=0x%x, 0x%x\n", 
off£t
, 
vÆue
, 
	`__øw_ªadl
(
chù
->
ªgs
+offset));

1172 } if(
off£t
 < 0xe000){

1173 
	`¥ötk
("ª£rvî s∑˚ %x\n", 
off£t
);

1174 } if(
off£t
 < 0xfc00){

1175 
	`¥ötk
("MŸi⁄_ve˘‹: %x=0x%x, 0x%x\n", 
off£t
, 
vÆue
, 
	`__øw_ªadl
(
chù
->
ªgs
+offset));

1176 } if(
off£t
 < 0x18000){

1177 
	`¥ötk
("ª£rvî s∑˚ %x\n", 
off£t
);

1178 } if(
off£t
 < 0x18200){

1179 
	`¥ötk
("PCI_C⁄åﬁ_m≠: %x=0x%x, 0x%x\n", 
off£t
, 
vÆue
, 
	`__øw_ªadl
(
chù
->
ªgs
+offset));

1180 } if(
off£t
 < 0x80000){

1181 
	`¥ötk
("ª£rvî s∑˚ %x\n", 
off£t
);

1182 } if(
off£t
 < 0x88000){

1183 
	`¥ötk
("ddr_bur°_m≠: %x=0x%x, 0x%x\n", 
off£t
, 
vÆue
, 
	`__øw_ªadl
(
chù
->
ªgs
+offset));

1185 
	`¥ötk
("ª£rvî s∑˚ %x\n", 
off£t
);

1188 
	}
}

1190 
	$tw5864_ho°_io_chù_wrôe16
(
dvm_chù_t
 *
chù
, 
u32
 
off£t
, 
u16
 
vÆue
)

1192 
	`__øw_wrôew
(
vÆue
, (
chù
->
ªgs
+
off£t
));

1193 
	}
}

1195 
	$tw5864_ho°_io_chù_wrôe8
(
dvm_chù_t
 *
chù
, 
u32
 
off£t
, 
u8
 
vÆue
)

1197 
	`__øw_wrôeb
(
vÆue
, (
chù
->
ªgs
+
off£t
));

1198 
	}
}

1200 
	$tw5864_ho°_io_chù_wrôe_block
(
dvm_chù_t
 *
chù
, 
u32
 
off£t
, 
Àn
, u32 *
§c
)

1202 
i
;

1203 
Àn
 += 3;

1204 
Àn
 >>= 2;

1205 
i
=0; i<
Àn
; i++){

1206 
	`__øw_wrôñ
(
§c
[
i
], (
chù
->
ªgs
+
off£t
));

1207 
off£t
 += 4;

1209 
	}
}

1211 
chù_io_›î©i⁄
 
	gtw5864_ho°_io
 = {

1212 .
chù_ªad32
 = 
tw5864_ho°_io_chù_ªad32
,

1213 .
	gchù_ªad16
 = 
tw5864_ho°_io_chù_ªad16
,

1214 .
	gchù_ªad8
 = 
tw5864_ho°_io_chù_ªad8
,

1215 .
	gchù_ªad_block
 = 
tw5864_ho°_io_chù_ªad_block
,

1216 .
	gchù_wrôe32
 = 
tw5864_ho°_io_chù_wrôe32
,

1217 .
	gchù_wrôe16
 = 
tw5864_ho°_io_chù_wrôe16
,

1218 .
	gchù_wrôe8
 = 
tw5864_ho°_io_chù_wrôe8
,

1219 .
	gchù_wrôe_block
 = 
tw5864_ho°_io_chù_wrôe_block
,

1222 #ifde‡
POWERPC_PLATFORM


1223 
u32
 
	$tw5864_pci_io_chù_ªad32
(
dvm_chù_t
 *
chù
, 
u32
 
off£t
)

1225  
	`ö_À32
((
chù
->
ªgs
+
off£t
));

1226 
	}
}

1228 
u16
 
	$tw5864_pci_io_chù_ªad16
(
dvm_chù_t
 *
chù
, 
u32
 
off£t
)

1230  
	`ö_À16
((
chù
->
ªgs
+
off£t
));

1231 
	}
}

1233 
u8
 
	$tw5864_pci_io_chù_ªad8
(
dvm_chù_t
 *
chù
, 
u32
 
off£t
)

1235  
	`ö_8
((
chù
->
ªgs
+
off£t
));

1236 
	}
}

1238 
	$tw5864_pci_io_chù_ªad_block
(
dvm_chù_t
 *
chù
, 
u32
 
off£t
, 
Àn
, u32 *
de°
)

1240 
i
;

1241 
Àn
 += 3;

1242 
Àn
 >>= 2;

1243 
i
=0; i<
Àn
; i++){

1244 
de°
[
i
] = 
	`ö_À32
((
chù
->
ªgs
+
off£t
));

1245 
off£t
 += 4;

1247 
	}
}

1249 
	$tw5864_pci_io_chù_wrôe32
(
dvm_chù_t
 *
chù
, 
u32
 
off£t
, u32 
vÆue
)

1251 
	`out_À32
((
chù
->
ªgs
+
off£t
), 
vÆue
);

1252 
	}
}

1254 
	$tw5864_pci_io_chù_wrôe16
(
dvm_chù_t
 *
chù
, 
u32
 
off£t
, 
u16
 
vÆue
)

1256 
	`out_À16
((
chù
->
ªgs
+
off£t
), 
vÆue
);

1257 
	}
}

1259 
	$tw5864_pci_io_chù_wrôe8
(
dvm_chù_t
 *
chù
, 
u32
 
off£t
, 
u8
 
vÆue
)

1261 
	`out_8
((
chù
->
ªgs
+
off£t
), 
vÆue
);

1262 
	}
}

1264 
	$tw5864_pci_io_chù_wrôe_block
(
dvm_chù_t
 *
chù
, 
u32
 
off£t
, 
Àn
, u32 *
§c
)

1266 
i
;

1267 
Àn
 += 3;

1268 
Àn
 >>= 2;

1269 
i
=0; i<
Àn
; i++){

1270 
	`out_À32
((
chù
->
ªgs
+
off£t
), 
§c
[
i
]);

1271 
off£t
 += 4;

1273 
	}
}

1275 
chù_io_›î©i⁄
 
	gtw5864_pci_io
 = {

1276 .
chù_ªad32
 = 
tw5864_pci_io_chù_ªad32
,

1277 .
	gchù_ªad16
 = 
tw5864_pci_io_chù_ªad16
,

1278 .
	gchù_ªad8
 = 
tw5864_pci_io_chù_ªad8
,

1279 .
	gchù_ªad_block
 = 
tw5864_pci_io_chù_ªad_block
,

1280 .
	gchù_wrôe32
 = 
tw5864_pci_io_chù_wrôe32
,

1281 .
	gchù_wrôe16
 = 
tw5864_pci_io_chù_wrôe16
,

1282 .
	gchù_wrôe8
 = 
tw5864_pci_io_chù_wrôe8
,

1283 .
	gchù_wrôe_block
 = 
tw5864_pci_io_chù_wrôe_block
,

1287 
	$chù_¥oc_ªad
(*
∑ge
, **
°¨t
, 
off_t
 
off
,

1288 
cou¡
, *
eof
, *
d©a
)

1290 
Àn
 = 0;

1291 
u32
 
i
;

1293 
dvm_chù_t
 *
chù
 = (dvm_chù_à*)
d©a
;

1295 
Àn
 +
	`•rötf
(
∑ge
, "buûd DATE: %s, TIME: %s\n", 
__DATE__
, 
__TIME__
);

1296 
Àn
 +
	`•rötf
(
∑ge
 +Üí, "devi˚Çamê\"%s\"\n", 
chù
->
«me
);

1298 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "\n");

1299 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s %8s %8s %8s %8s\n",

1301 
i
 = 0; i < 
CHIP_IRQS_NR
; i++)

1303 
chù_úq_desc
 *
desc
 = 
	`chù_úq_to_desc
(
chù
, 
i
);

1304 if(
desc
 && desc->
a˘i⁄
.
h™dÀr
){

1305 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8d %8s %8u %8u %8d\n",

1306 
desc
->
úq
, desc->
«me
, desc->
úq_cou¡
,

1307 
desc
->
úqs_unh™dÀd
, 
	`©omic_ªad
(&desc->
dïth
));

1311  
Àn
;

1312 
	}
}

1314 
	$chù_¥oc_wrôe
(
fûe
 *fûe, c⁄° 
__u£r
 *
buf„r
,

1315 
cou¡
, *
d©a_¨g
)

1317 
dvm_chù_t
 *
chù
 = (dvm_chù_à*)
d©a_¨g
;

1318 
cmdbuf
[1024];

1319 **
¨gv
;

1320 
¨gc
, 
i
;

1321 
u32
 
vÆ
 = 0;

1323 if(!
chù
){

1324 
	`TW_DBG
(
TW_DBG_INFO
, "internalÉrror!\n");

1327 if(
cou¡
 > 1024){

1328 
	`c›y_‰om_u£r
(
cmdbuf
, 
buf„r
, 1024);

1331 
	`c›y_‰om_u£r
(
cmdbuf
, 
buf„r
, 
cou¡
);

1333 
¨gv
 = 
	`¨gv_•lô
(
GFP_KERNEL
, 
cmdbuf
, &
¨gc
);

1334 
i
 = 0; i < (
¨gc
 - 1); i++)

1336 
	`TW_DBG
(
TW_DBG_INFO
, "cmd %d: %s\n", 
i
, 
¨gv
[i]);

1338 if((
¨gv
[0] !
NULL
Ë&& (
	`°rcmp
(argv[0], "burst") == 0))

1340 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x18004, 0x7c000000);

1341 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
ENABLE_VLC_LOOKUP_TABLE
) | 0x2;

1342 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENABLE_VLC_LOOKUP_TABLE
, 
vÆ
);

1344 if((
¨gv
[0] !
NULL
Ë&& (
	`°rcmp
(argv[0], "single") == 0))

1346 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x18004, 0x7c000000);

1347 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENABLE_VLC_LOOKUP_TABLE
, chù->io_›->
	`chù_ªad32
(chip, ENABLE_VLC_LOOKUP_TABLE) | 0x2);

1349 if((
¨gv
[0] !
NULL
Ë&& (
	`°rcmp
(argv[0], "h264_burst") == 0))

1351 
chù
->
io_›
->
	`chù_wrôe32
(chù,
MODE
, 
DDRON
);

1352 1)
	`tw5864_vlc_úq_h™dÀr
(0, 
chù
);

1355 if((
¨gv
[0] !
NULL
Ë&& (
	`°rcmp
(argv[0], "poweroff") == 0)){

1356 
	`pci_i2c_wrôe
(
chù
, 0x50, 0xce, 0x3f);

1357 
	`pci_i2c_wrôe
(
chù
, 0x52, 0xce, 0x3f);

1358 
	`pci_i2c_wrôe
(
chù
, 0x54, 0xce, 0x3f);

1359 
	`pci_i2c_wrôe
(
chù
, 0x56, 0xce, 0x3f);

1361 if((
¨gv
[0] !
NULL
Ë&& (
	`°rcmp
(argv[0], "poweron") == 0)){

1362 
	`pci_i2c_wrôe
(
chù
, 0x50, 0xce, 0x00);

1363 
	`pci_i2c_wrôe
(
chù
, 0x52, 0xce, 0x00);

1364 
	`pci_i2c_wrôe
(
chù
, 0x54, 0xce, 0x00);

1365 
	`pci_i2c_wrôe
(
chù
, 0x56, 0xce, 0x00);

1367 if((
¨gv
[0] !
NULL
Ë&& (
	`°rcmp
(argv[0], "mpb_read") == 0)){

1368 
	`¥ötk
("\ƒód 0x%08x =>0x%08x\n", 
	`©oi
(
¨gv
[1]), 
	`mpb_ªad
(
chù
,átoi(argv[1])));

1370 if((
¨gv
[0] !
NULL
Ë&& (
	`°rcmp
(argv[0], "mpb_write") == 0)){

1371 
	`mpb_wrôe
(
chù
, 
	`©oi
(
¨gv
[1]),átoi(argv[2]));

1372 
	`¥ötk
("\nwrôê0x%08x =>0x%08x\n", 
	`©oi
(
¨gv
[1]),átoi(argv[2]));

1374 if((
¨gv
[0] !
NULL
Ë&& (
	`°rcmp
(argv[0], "i2c_read") == 0)){

1375 
u8
 
ãmp
 = 0;

1376 
	`pci_i2c_ªad
(
chù
, 
	`©oi
(
¨gv
[1]),átoi◊rgv[2]), &
ãmp
);

1377 
	`¥ötk
("\ƒód 0x%08x, 0x%08x =>0x%x\n", 
	`©oi
(
¨gv
[1]),átoi◊rgv[2]), 
ãmp
);

1379 if((
¨gv
[0] !
NULL
Ë&& (
	`°rcmp
(argv[0], "i2c_write") == 0)){

1380 
	`pci_i2c_wrôe
(
chù
, 
	`©oi
(
¨gv
[1]),átoi(argv[2]),átoi(argv[3]));

1381 
	`¥ötk
("\nwrôê0x%08x, 0x%08x =>0x%08x\n", 
	`©oi
(
¨gv
[1]),átoi(argv[2]),átoi(argv[3]));

1383 if((
¨gv
[0] !
NULL
Ë&& (
	`°rcmp
◊rgv[0], "dump"Ë=0Ë&& (
¨gc
 > 4)){

1384 
fûe
 *
mem_fûe
;

1385 
mm_£gmít_t
 
fs
;

1386 
ab_swôch
 = 0;

1387 
u32
 
ddr_°¨t
, 
size
, 
∑ge_id
, 
off£t
, 
∑ge_˙t
, 
Àn
;

1388 *
buff
, *
ãmp_buf
, *
p_buff
;

1389 if((
¨gv
[1][0] == 'A') || (argv[1][0] == 'a')){

1390 
ab_swôch
 = 0;

1392 
ab_swôch
 = 1;

1394 
ãmp_buf
 = (*)
	`__gë_‰ì_∑ges
(
GFP_KERNEL
, 
	`gë_‹dî
(0x80000));

1395 
p_buff
 = 
ãmp_buf
;

1396 
ddr_°¨t
 = 
	`©oi
(
¨gv
[2]);

1397 
size
 = 
	`©oi
(
¨gv
[3]);

1398 
∑ge_id
 = (
ddr_°¨t
>>19) & 0xff;

1399 
off£t
 = 
ddr_°¨t
 & 0x0007ffff;

1400 
∑ge_˙t
 = (
size
 / 0x80000);

1401 
	`¥ötk
("ßvêdd∏%s: begö 0x%08x sizê0x%08x , sèπÖagêid %d off£à0x%08x...\n", 
ab_swôch
?"B":"A", 
ddr_°¨t
, 
size
, 
∑ge_id
, 
off£t
);

1402 
mem_fûe
 = 
	`tw_kî√l_fûe_›í
(
¨gv
[4]);

1403 
fs
=
	`gë_fs
();

1404 
	`£t_fs
(
KERNEL_DS
);

1406 
p_buff
 = 
ãmp_buf
;

1407 
ãmp_Àn
 = 0x0;

1408 
ãmp_Àn
 < 0x80000) {

1409 *(
u32
 *)
p_buff
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
ãmp_Àn
);

1410 #ifde‡
POWERPC_PLATFORM


1411 *(
u32
 *)
p_buff
 = 
	`ö_À32
(p_buff);

1413 
p_buff
 += ();

1414 
ãmp_Àn
 += ();

1416 
mem_fûe
->
f_›
->
	`wrôe
(mem_fûe, 
ãmp_buf
, 0x80000, &(mem_fûe->
f_pos
));

1419 
i
 = 0; i < 
∑ge_˙t
; i++){

1421 
chù
->
io_›
->
	`chù_wrôe32
(chù, 0x30, (
ab_swôch
 << 14Ë| (
∑ge_id
 + 
i
));

1422 if(
i
 == 0){

1423 
buff
 = 
chù
->
ªgs
 + 0x80000 + 
off£t
;

1424 
Àn
 = 0x80000 - 
off£t
;

1426 
buff
 = 
chù
->
ªgs
 + 0x80000;

1427 
Àn
 = 0x80000;

1429 
	`¥ötk
("--->wrôêsizê%08x\n", 
Àn
);

1431 
mem_fûe
->
f_›
->
	`wrôe
(mem_fûe, 
buff
, 
Àn
, &(mem_fûe->
f_pos
));

1433 
Àn
 = (
size
 % 0x80000);

1434 if(
Àn
){

1435 
chù
->
io_›
->
	`chù_wrôe32
(chù, 0x30, (
ab_swôch
 << 14Ë| (
∑ge_id
 + 
i
));

1436 if(
∑ge_˙t
 == 0){

1437 
buff
 = 
chù
->
ªgs
 + 0x80000 + 
off£t
;

1439 
buff
 = 
chù
->
ªgs
 + 0x80000;

1441 
	`¥ötk
("--->wrôêsizê%08x\n", 
Àn
);

1443 
mem_fûe
->
f_›
->
	`wrôe
(mem_fûe, 
buff
, 
Àn
, &(mem_fûe->
f_pos
));

1446 
	`£t_fs
(
fs
);

1447 
	`tw_kî√l_fûe_˛o£
(
mem_fûe
);

1448 
	`‰ì_∑ges
(()
ãmp_buf
, 
	`gë_‹dî
(0x80000));

1451 if((
¨gv
[0] !
NULL
Ë&& (
	`°rcmp
(argv[0], "ddr_test") == 0))

1453 
u32
 
p
;

1454 
j
 = 0;

1455 
d©a
 = 0;

1456 
u32
 *
dma_phy
, *
dma_vú
;

1457 
Áûed
 = 0, 
îr‹
 = 0;

1458 
ã°_Êags
 = 0;

1459 
ªåy_˙t
 = 0;

1460 
∑ge_id
 = 0, 
ab_swôch
 = 0;

1461 
	#DDR_PIO
 0x0001

	)

1462 
	#DDR_BURST
 0x0002

	)

1463 
	#SRAM_PIO
 0x0004

	)

1464 
	#SRAM_BURST
 0x0008

	)

1467 
i
 = 2; i < 
¨gc
; i++){

1468 if(
	`°rcmp
(
¨gv
[
i
], "ddr_pio") == 0){

1469 
ã°_Êags
 |
DDR_PIO
;

1471 if(
	`°rcmp
(
¨gv
[
i
], "ddr_burst") == 0){

1472 
ã°_Êags
 |
DDR_BURST
;

1474 if(
	`°rcmp
(
¨gv
[
i
], "sram_pio") == 0){

1475 
ã°_Êags
 |
SRAM_PIO
;

1477 if(
	`°rcmp
(
¨gv
[
i
], "sram_burst") == 0){

1478 
ã°_Êags
 |
SRAM_BURST
;

1482 
i
 = 0;

1484 if(
i
 == 200000) {

1485 
	`¥ötk
("\b/");

1487 if(
i
 == 400000) {

1488 
	`¥ötk
("\b-");

1490 if(
i
 == 600000) {

1491 
	`¥ötk
("\b\\");

1492 
	`scheduÀ
();

1493 i‡(
	`sig«l_≥ndög
(
cuºít
)) {

1494  
cou¡
;

1496 
i
 = 0;

1498 
i
++;

1499 
chù
->
io_›
->
	`chù_wrôe32
(chù, 0x9004, chù->io_›->
	`chù_ªad32
(chip, 0x9004));

1502 
ªåy_˙t
 = 
	`©oi
(
¨gv
[1]);

1503 
	`¥ötk
("--->0x%08x<---ªåy %d\n", 
ã°_Êags
, 
ªåy_˙t
);

1504 
dma_vú
 = (
u32
 *)
	`__gë_‰ì_∑ge
(
GFP_KERNEL
);

1505 if(!
dma_vú
)

1507 
	`¥ötk
("no memory!\n");

1508 
chù_wrôe_íd
;

1510 
dma_phy
 = (
u32
 *)
	`vút_to_phys
(
dma_vú
);

1511 
	`¥ötk
("dm®phyáddªss: 0x%8p\n", 
dma_phy
);

1512 
	`mem£t
(
dma_vú
, 0, 
PAGE_SIZE
);

1516 if(
∑ge_id
 == 128) {

1517 
∑ge_id
 = 0;

1518 
ab_swôch
 = !ab_switch;

1523 
p
 = 0x80000;

1524 
d©a
 = 0x55aa55aa;

1525 
i
 = 0; i < 0x20000; i++, 
p
 += 4) {

1526 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
p
, 
d©a
);

1527 
d©a
 = ~data;

1529 
p
 = 0x80000;

1530 
d©a
 = 0x55aa55aa;

1531 
i
 = 0; i < 0x20000; i++, 
p
 += 4) {

1532 
œbÀ_0
:

1533 
Áûed
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
p
);

1534 if(
d©a
 !
Áûed
) {

1535 
	`¥ötk
("∑gê%3dádd∏0x%08x ===>0x%08x, 0x%08x\n", 
∑ge_id
, 
p
 - 0x80000, 
d©a
, 
Áûed
);

1536 
îr‹
 = 1;

1537  
cou¡
;

1540 
d©a
 = ~data;

1541 i‡(
	`sig«l_≥ndög
(
cuºít
)) {

1542  
cou¡
;

1545 
j
 = 
d©a
;

1546 
	`scheduÀ
();

1547 i‡(
	`sig«l_≥ndög
(
cuºít
)) {

1548  
cou¡
;

1553 
p
 = 0x80000;

1554 
d©a
 = 0x0;

1555 
i
 = 0; i < 0x20000; i++, 
p
 +4, 
d©a
 += 4) {

1556 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
p
, 
d©a
);

1558 
p
 = 0x80000;

1559 
d©a
 = 0x0;

1560 
i
 = 0; i < 0x20000; i++, 
p
 +4, 
d©a
 += 4) {

1561 
œbÀ_1
:

1562 
Áûed
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
p
);

1563 if(
d©a
 !
Áûed
) {

1564 
	`¥ötk
("∑gê%3dádd∏0x%08x ===>0x%08x, 0x%08x\n", 
∑ge_id
, 
p
 - 0x80000, 
d©a
, 
Áûed
);

1565 
îr‹
 = 1;

1567  
cou¡
;

1569 i‡(
	`sig«l_≥ndög
(
cuºít
)) {

1570  
cou¡
;

1573 
j
 = 
d©a
;

1574 
	`scheduÀ
();

1575 i‡(
	`sig«l_≥ndög
(
cuºít
)) {

1576  
cou¡
;

1580 if(
ã°_Êags
 & 
DDR_BURST
) {

1581 
˙t
, 
timeout
, 
p
;

1583 
˙t
 = 0; cnt < 256; cnt++) {

1585 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x18004, 0x0);

1586 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x101c, 0x0);

1587 #ifde‡
POWERPC_PCI_PLATFORM


1588 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, (0x8000|(
ab_swôch
<<14)Ë| 
∑ge_id
);

1590 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, ((
ab_swôch
<<14)Ë| 
∑ge_id
);

1592 
timeout
 = 20;

1593 
p
 = 0x84000;

1594 
d©a
 = 0x0;

1595 
j
 = 0; j < 0x800; j += 4){

1596 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
p
 + 
j
, 
d©a
);

1597 
d©a
 = ~data;

1600 
chù
->
io_›
->
	`chù_wrôe32
(chù, 0x80004, (
∑ge_id
 * 0x80000 + 
˙t
 * 0x800));

1602 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x80008, 0);

1604 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x80000, (1 << 17) | (1 << 16) | 0x800);

1606 
	`mdñay
(1);

1607 }(!(
chù
->
io_›
->
	`chù_ªad32
(chù, 0x80000)Ë& (1 << 24)Ë&& (--
timeout
));

1608 if(!
timeout
){

1609 
	`¥ötk
("burst writeÅimeout\n");

1612 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x80000, (1<<24));

1615 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x18004, 0x1c000000);

1616 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x101c, 0x2);

1619 
chù
->
io_›
->
	`chù_wrôe32
(chù, 0x80004, (
∑ge_id
 * 0x80000 + 
˙t
 * 0x800));

1621 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x80008, 0);

1623 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x80000, (1 << 17) | 0x800);

1624 
timeout
 = 20;

1626 
	`mdñay
(1);

1627 }(!(
chù
->
io_›
->
	`chù_ªad32
(chù, 0x80000Ë& (1 << 24))Ë&& --
timeout
);

1628 if(!
timeout
){

1629 
	`¥ötk
("bur°ÑódÅimeout, 0x%04x\n", 
chù
->
io_›
->
	`chù_ªad32
(chip, 0x80000));

1632 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x80000, (1<<24));

1635 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x18004, 0x1c000000);

1636 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x101c, 0x2);

1639 #ifde‡
POWERPC_PCI_PLATFORM


1640 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, (0x8000|(
ab_swôch
<<14Ë| (1<<13)Ë| 
∑ge_id
);

1642 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, ((
ab_swôch
<<14Ë| (1<<13)Ë| 
∑ge_id
);

1644 
	`Âga_dma_ª˚ive
(
chù
->
∑_ªgs
 + 0x84000, 
dma_phy
, 0x800);

1646 
d©a
 = 0x0;

1647 
j
 = 0; j < 0x200; j++)

1649 
vÆ
 = 
	`__øw_ªadl
(
dma_vú
 + 
j
);

1650 if(
vÆ
 !
d©a
){

1651 
	`¥ötk
("∑gê%d, c¡ %d!ádd∏0x%08x 0x%08x <===> 0x%08x\n", 
∑ge_id
, 
˙t
, (’age_id<<19Ë+ (˙t<<11Ë+ (
j
<<2)), 
vÆ
, 
d©a
);

1652 
Áûed
 = 1;

1653 
îr‹
 = 1;

1656 
d©a
 = ~data;

1661 
∑ge_id
++;

1662 
	`¥ötk
("%†∑gê%3d %s\n", 
ab_swôch
?"DDRB":"DDRA", 
∑ge_id
, 
îr‹
?"FAILED":"OK");

1663 
îr‹
 = 0;

1666 
	`‰ì_∑ge
(()
dma_vú
);

1667 }if((
¨gv
[0] !
NULL
Ë&& (
	`°rcmp
(argv[0], "ddr_parse") == 0))

1668 
chù_wrôe_íd
:

1669 
	`¨gv_‰ì
(
¨gv
);

1671  
cou¡
;

1672 
	}
}

1680 
	$ªgi°î_Æl_tc_devi˚
(
dvm_chù_t
 *
chù
)

1682 
ªt
 = -1;

1684 if(!
chù
)

1685  
ªt
;

1688 
	`tw_chù_ai_öô
(
chù
);

1689 
	`tw_chù_vi_öô
(
chù
);

1690 
	`tw_audio_í_öô
(
chù
->
audio_ch™_drivî
);

1691 
	`tw_audio_de_öô
(&
chù
->
audio_ch™_drivî
[17]);

1692 
	`tw_j≥g_í_öô
(
chù
->
j≥g_ícode_ch™
);

1693 
	`tw_videoh264_í_öô
(
chù
->
h264_ma°î_ícode_logic_ch™
);

1694 
	`tw_videoh264s_í_öô
(
chù
->
h264_sub_ícode_logic_ch™
);

1695 
	}
}

1697 
	$tw5864_uƒegi°î_Æl_tc_devi˚s
(
dvm_chù_t
 *
chù
)

1699 
	`tw_chù_vi_ªmove
();

1700 
	`tw_chù_ai_ªmove
();

1701 
	`tw_audio_í_ªmove
();

1702 
	`tw_audio_de_ªmove
();

1703 
	`tw_j≥g_í_ªmove
();

1704 
	`tw_videoh264_í_ªmove
(
chù
);

1705 
	`tw_videoh264s_í_ªmove
(
chù
);

1706 
	}
}

1709 
	$ªgi°î_Æl_tc_drivî
(
dvm_chù_t
 *
chù
)

1711 
ªt
 = -1;

1713 if(
	`tw5864_chù_ai_drivî_öô
(
chù
))

1714  
ªt
;

1715 if(
	`tw5864_chù_vi_drivî_öô
(
chù
))

1716 
îr1
;

1717 if(
	`tw5864_audio_í_drivî_öô
(
chù
))

1718 
îr2
;

1719 if(
	`tw5864_audio_de_drivî_öô
(
chù
))

1720 
îr3
;

1721 if(
	`tw5864_video_í_drivî_öô
(
chù
))

1722 
îr4
;

1723 if(
	`tw5864_videosub_í_drivî_öô
(
chù
))

1724 
îr5
;

1725 if(
	`tw5864_j≥g_í_drivî_öô
(
chù
))

1726 
îr6
;

1730 
îr6
:

1731 
	`tw5864_videosub_í_drivî_ªmove
();

1732 
îr5
:

1733 
	`tw5864_video_í_drivî_ªmove
();

1734 
îr4
:

1735 
	`tw5864_audio_de_drivî_ªmove
();

1736 
îr3
:

1737 
	`tw5864_audio_í_drivî_ªmove
();

1738 
îr2
:

1739 
	`tw5864_chù_vi_drivî_ªmove
();

1740 
îr1
:

1741 
	`tw5864_chù_ai_drivî_ªmove
();

1744 
	}
}

1746 
	$uƒegi°î_Æl_tc_drivî
()

1748 
	`tw5864_chù_ai_drivî_ªmove
();

1749 
	`tw5864_chù_vi_drivî_ªmove
();

1750 
	`tw5864_audio_de_drivî_ªmove
();

1751 
	`tw5864_audio_í_drivî_ªmove
();

1752 
	`tw5864_video_í_drivî_ªmove
();

1753 
	`tw5864_videosub_í_drivî_ªmove
();

1754 
	`tw5864_j≥g_í_drivî_ªmove
();

1755 
	}
}

1760 
	$tw5864_chù_ªmove
(
tw_chù_devi˚
 * 
tcd
)

1762 
dvm_chù_t
 *
chù
 = 
	`tcd_¥iv
(
tcd
);

1764 if(
chù
 =
NULL
){

1768 
	`¥ötk
("&&&&&&&&&&&Ñemove ...\n");

1771 if(
chù
->
chù_£t_övÆid
){

1772 
chù
->
	`chù_£t_övÆid
(chip);

1773 
chù
->
chù_£t_övÆid
 = 
NULL
;

1775 if(
chù
->
uƒegi°î_cuº_h264_ícode_ch™
){

1776 
chù
->
	`uƒegi°î_cuº_h264_ícode_ch™
(chù, chù->
cuº_h264_ícode_ch™
);

1777 
chù
->
uƒegi°î_cuº_h264_ícode_ch™
 = 
NULL
;

1780 
	`ªmove_tw5864_öãºu±_c⁄åﬁ
(&
chù
->
tw5864_öt_c⁄åﬁ
, chip);

1781 if(
chù
->
ªgs
 !
NULL
){

1782 
	`iounm≠
(
chù
->
ªgs
);

1783 
chù
->
ªgs
=
NULL
;

1785 if(
chù
->
ªsour˚
 !
NULL
){

1786 
	`ªÀa£_ªsour˚
(
chù
->
ªsour˚
);

1787 
	`k‰ì
(
chù
->
ªsour˚
);

1788 
chù
->
ªsour˚
 = 
NULL
;

1790 if(
chù
->
sync_ªgs
 !
NULL
){

1791 
	`iounm≠
(
chù
->
sync_ªgs
);

1792 
chù
->
sync_ªgs
 = 
NULL
;

1794 if(
chù
->
sync_ªsour˚
 !
NULL
){

1795 
	`ªÀa£_ªsour˚
(
chù
->
sync_ªsour˚
);

1796 
	`k‰ì
(
chù
->
sync_ªsour˚
);

1797 
chù
->
sync_ªsour˚
 = 
NULL
;

1801 
	`ªmove_chù_bus
(&
chù
->
tw5864_chù_bus
, chù->
bus_id
);

1803 
	`tw_moduÀ_uƒegi°î
(
chù
, &chù->
chù_¥oc
);

1804 
	`¥ötk
("bef‹êtw5864_chù_exôÅcd[0x%p]\n",
tcd
);

1805 
	`tc_chù_exô
(
tcd
);

1806 
	`¥ötk
("beforeÅc_chip_dev_free\n");

1807 
	`tc_chùdev_‰ì
(
tcd
);

1808 
	`¥ötk
("afterÅc_chip_dev_free\n");

1810 
	}
}

1812 
pci_öô_ad
(
dvm_chù_t
 *);

1813 
	gsys_˛k
 = 0;

1814 
moduÀ_∑øm
(
sys_˛k
, , 
S_IRUGO
);

1816 
	$tw5864_chù_öô
(
bus_id
, 
chù_id
)

1818 
dvm_chù_t
 *
chù
;

1820 
DVMNVS_CHIP_VIDEO_ENCODE_CAPABILITY
 *
video_ícode_ˇp
;

1821 
tw_h264_logic_ícode_ch™_t
 *
h264_ma°î_ícode_logic_ch™
;

1822 
tw_h264_logic_ícode_ch™_t
 *
h264_sub_ícode_logic_ch™
;

1823 #ifde‡ 
MJPEG_MODULE


1824 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_ícode_ch™
;

1826 
tw_audio_drivî_t
 *
audio_ícode_drivî
, *
audio_decode_drivî
;

1828 
tw_¥oc_ªgi°î_s
 *
chù_¥oc
;

1829 
i
, 
devi˚_id
, 
ªt
 = 0;

1830 
tw_chù_devi˚
 * 
ticd
;

1831 
cmd_¨g
 
d©a
;

1832 
tw_chù_devi˚
 *
tcd
;

1834 
tcd
 = 
	`tc_chùdev_Æloc
((*
chù
));

1835 if(!
tcd
){

1836 
ªt
 = -
ENOMEM
;

1837  
ªt
;

1839 
chù
 = 
	`tcd_¥iv
(
tcd
);

1840 
	`¥ötk
("-----&&&------>%†tcd[0x%p],chù[0x%p]\n",
__FUNCTION__
,
tcd
,
chù
);

1842 if(
	`tc_chù_öô
(
tcd
,
bus_id
,
chù_id
)){

1843 
	`¥ötk
("tw5864_chip_init failed!\n");

1844 
	`tc_chù_exô
(
tcd
);

1845 
	`tc_chùdev_‰ì
(
tcd
);

1846 
ªt
 = -
EINVAL
;

1847  
ªt
;

1851 
	`•rötf
(
chù
->
«me
, "dvm_chù_%d_%d", 
bus_id
, 
chù_id
);

1852 
chù
->
bus_id
 = bus_id;

1853 
chù
->
chù_id
 = chip_id;

1854 #ifde‡
TW5864_ASIC_NEW


1855 
sys_˛k
 = 185;

1857 if(
sys_˛k
 == 0) {

1858 
	`¥ötk
("deÁu… sys_˛k = %dM\n", 
DEFAULT_SYS_CLK
);

1859 
chù
->
sys_˛ock
 = 
DEFAULT_SYS_CLK
;

1861 
chù
->
sys_˛ock
 = 
sys_˛k
;

1863 
	`©omic_£t
(&
chù
->
›í_ch™_numbî
, 0);

1864 
chù
->
video_ícode_ˇp
 = &
∂©f‹m_video_ícode_ˇp
[chù->
chù_id
];

1865 
video_ícode_ˇp
 = 
chù
->video_encode_cap;

1866 
chù
->
fú°_devi˚_id
 = 
video_ícode_ˇp
->
fú°_devi˚_numbî
;

1868 if(
video_ícode_ˇp
->
Âga_async_£˘i⁄_Àn
 != 0){

1869 
chù
->
ªsour˚
 = 
	`ªque°_mem_ªgi⁄
(
video_ícode_ˇp
->
Âga_async_ba£_addr
, video_ícode_ˇp->
Âga_async_£˘i⁄_Àn
, chù->
«me
);

1870 if(
chù
->
ªsour˚
 =
NULL
){

1871 
	`¥ötk
("requeset memÑegionsÉrr\n");

1872 
ªÀa£
;

1874 
chù
->
ªgs
 = 
	`i‹em≠_noˇche
(
video_ícode_ˇp
->
Âga_async_ba£_addr
, video_ícode_ˇp->
Âga_async_£˘i⁄_Àn
);

1875 
chù
->
∑_ªgs
 = 
video_ícode_ˇp
->
Âga_async_ba£_addr
;

1877 
chù
->
ªgs
 = 
NULL
;

1878 
chù
->
∑_ªgs
 = 0;

1880 if(
video_ícode_ˇp
->
Âga_sync_£˘i⁄_Àn
 != 0){

1881 
chù
->
sync_ªsour˚
 = 
	`ªque°_mem_ªgi⁄
(
video_ícode_ˇp
->
Âga_sync_ba£_addr
, video_ícode_ˇp->
Âga_sync_£˘i⁄_Àn
, chù->
«me
);

1882 if(
chù
->
sync_ªsour˚
 =
NULL
){

1883 
	`¥ötk
("requeset memÑegionsÉrr\n");

1884 
ªÀa£
;

1886 
chù
->
sync_ªgs
 = 
	`i‹em≠_noˇche
(
video_ícode_ˇp
->
Âga_sync_ba£_addr
, video_ícode_ˇp->
Âga_sync_£˘i⁄_Àn
);

1887 
chù
->
∑_sync_ªgs
 = 
video_ícode_ˇp
->
Âga_sync_ba£_addr
;

1889 
chù
->
sync_ªgs
 = 
NULL
;

1890 
chù
->
∑_sync_ªgs
 = 0;

1893 
chù
->
chù_›í
 = 
chù_h¨dw¨e_ªsour˚_›í
;

1894 
chù
->
chù_˛o£
 = 
chù_h¨dw¨e_ªsour˚_˛o£
;

1895 
chù
->
chù_£t_övÆid
 = 
chù_phy_övÆid
;

1896 
chù
->
chù_£t_vÆid
 = 
chù_phy_vÆid
;

1897 
chù
->
chù_ª£t
 = 
chù_phy_ª£t
;

1898 #ifde‡
ARM_PLATFORM


1899 
chù
->
io_›
 = &
tw5864_ho°_io
;

1901 #ifde‡
POWERPC_PLATFORM


1902 #ifde‡
POWERPC_PCI_PLATFORM


1903 
chù
->
io_›
 = &
tw5864_pci_io
;

1907 
chù
->
	`chù_£t_övÆid
(chip);

1908 #ifde‡
POWERPC_PLATFORM


1909 #ifde‡
POWERPC_PCI_PLATFORM


1911 #i‚de‡
USER_FILE_IO_REQ


1912 
	`pci_öô_ad
(
chù
);

1916 
chù
->
ªgi°î_timî
 = 
ªgi°î_⁄_chù_timî
;

1917 
chù
->
íabÀ_timî
 = 
íabÀ_⁄_chù_timî
;

1918 
chù
->
dißbÀ_timî
 = 
dißbÀ_⁄_chù_timî
;

1919 
chù
->
uƒegi°î_timî
 = 
uƒegi°î_⁄_chù_timî
;

1921 
chù
->
chù_pﬁlög_timeid
 = 
INVALIDTIMERID
;

1922 
chù
->
add_chù_pﬁlög_èsk
 =ádd_chip_polling_task;

1923 
chù
->
dñëe_chù_pﬁlög_èsk
 = delete_chip_polling_task;

1925 
chù_¥oc
 = &
chù
->chip_proc;

1926 
chù_¥oc
->
íåy
 = 
NULL
;

1927 if(!
chù_¥oc
->
íåy
) {

1928 
	`°r˝y
(
chù_¥oc
->
«me
, "chip");

1929 
chù_¥oc
->
ªad
 = 
chù_¥oc_ªad
;

1930 
chù_¥oc
->
wrôe
 = 
chù_¥oc_wrôe
;

1931 
chù_¥oc
->
¥iv©e
 = 
chù
;

1932 
	`tw_moduÀ_ªgi°î
(
chù
, 
chù_¥oc
);

1935 
	`öô_chù_bus
(&
chù
->
tw5864_chù_bus
, chù->
bus_id
, chù->
chù_id
);

1936 
	`öô_d¥am_c⁄åﬁ
(&
chù
->
chù_d¥am_c⁄åﬁÀr
, chip);

1937 if(
	`öô_tw5864_öãºu±_c⁄åﬁ
(&
chù
->
tw5864_öt_c⁄åﬁ
, chùË!
TW_OK
){

1938 
	`TW_DBG
(
TW_DBG_FATAL
, "irq controler init failed\n");

1939 
ªÀa£
;

1941 
ªt
 = 
	`tw5864_chù_drivî_öô
();

1942 if(
ªt
 !
TW_OK
){

1943 
	`¥ötk
("chip driverÑegister failed!\n");

1944 
ªÀa£
;

1947 
	`öô_chù_ícode_ch™_£rvi˚_queue
(&
chù
->
chù_ícode_£rvi˚_queue
);

1948 
h264_ma°î_ícode_logic_ch™
 = 
chù
->h264_master_encode_logic_chan;

1949 
h264_sub_ícode_logic_ch™
 = 
chù
->h264_sub_encode_logic_chan;

1950 
audio_ícode_drivî
 = 
chù
->
audio_ch™_drivî
;

1951 #ifde‡ 
MJPEG_MODULE


1952 
j≥g_ícode_ch™
 = 
chù
->jpeg_encode_chan;

1955 
devi˚_id
 = 
chù
->
fú°_devi˚_id
;

1958 
	`ªgi°î_Æl_tc_devi˚
(
chù
);

1959 if(
	`ªgi°î_Æl_tc_drivî
(
chù
))

1960 
fix
;

1962 
	`dbg
("j≥g dev ba£ <0x%08X> \n",
j≥g_ícode_ch™
);

1964 
i
=0; i<
TW5864_PHY_VD_CHAN_NUMBER
; i++){

1966 
h264_ma°î_ícode_logic_ch™
++;

1967 
h264_sub_ícode_logic_ch™
++;

1968 
audio_ícode_drivî
++;

1969 #ifde‡ 
MJPEG_MODULE


1970 
j≥g_ícode_ch™
++;

1973 
audio_ícode_drivî
 = &
chù
->
audio_ch™_drivî
[
TW_AUDIO_IN_SPEAKER_ID
];

1974 
audio_decode_drivî
 = &
chù
->
audio_ch™_drivî
[
TW_AUDIO_OUT_SPEAKER_ID
];

1979 
d©a
.
ty≥
 = 5;

1980 
d©a
.
ch™√l_idx
 = 0;

1981 
d©a
.
Æg‹ôhm
 = 0;

1982 
d©a
.
°ªam
 = 0;

1983 if(
	`¸óã_£rvi˚_devi˚
(
tcd
,&
d©a
))

1984 
îr
;

1985 
d©a
.
ty≥
 = 3;

1986 if(
	`¸óã_£rvi˚_devi˚
(
tcd
,&
d©a
))

1987 
îr
;

1990 
	`•ö_lock_öô
(&
chù
->
lock
);

1991 
chù
->
vlc_pög_p⁄g_ödex
 = 0;

1992 
chù
->
cuº_h264_ícode_ch™
 = 
NULL
;

1993 
chù
->
ªgi°î_cuº_h264_ícode_ch™
 =Ñegister_curr_h264_encode_chan;

1994 
chù
->
uƒegi°î_cuº_h264_ícode_ch™
 = unregister_curr_h264_encode_chan;

1995  
TW_OK
;

1997 
îr
:

1998 
	`ªÀa£_Æl_£rvi˚_devi˚_ext
();

1999 
	`uƒegi°î_Æl_tc_drivî
();

2000 
fix
:

2001 
	`tw5864_uƒegi°î_Æl_tc_devi˚s
(
chù
);

2002 
¥e_ªÀa£
:

2003 
	`tw5864_chù_drivî_ªmove
();

2004 
ªÀa£
:

2005 
	`¥ötk
("%s_¥obêÁû\n", 
chù
->
«me
);

2006 
	`tw5864_chù_ªmove
(
tcd
);

2007  
ªt
;

2008 
	}
}

2011 #ifde‡
POWERPC_PLATFORM


2012 #ifde‡
POWERPC_PCI_PLATFORM


2013 
__devöô
 
	$tw5864_pci_¥obe
(
pci_dev
 *pci_dev, c⁄° 
pci_devi˚_id
 *
id
)

2015 
¶Ÿ
, 
bus_id
, 
dev‚
, 
i
;

2016 
ty≥_bus_t
 *
tw_pci_bus
;

2017 
tw_chù_bus_t
 *
tw5864_chù_bus
;

2018 
dvm_chù_t
 *
chù
;

2019 
u32
 
chù_id
;

2020 
ªt
;

2021 
DVMNVS_CHIP_VIDEO_ENCODE_CAPABILITY
 *
∂©f‹m_ícode_ˇp
;

2023 
bus_id
 = 
pci_dev
->
bus
->
numbî
;

2024 
dev‚
 = 
	`PCI_FUNC
(
pci_dev
->devfn);

2025 
¶Ÿ
 = 
	`PCI_SLOT
(
pci_dev
->
dev‚
);

2026 
chù_id
 = 
¶Ÿ
 - 14;

2030 if((
¶Ÿ
 != 0x0e) && (slot != 0x0f)) {

2031 
	`¥ötk
("¶Ÿ id %dÉº‹, o∆y suµ‹à¶Ÿ 14ánd 15\n", 
¶Ÿ
);

2032  -
ENOSYS
;

2035 if(
chù_id
 >= 2) {

2036 
	`¥ötk
("⁄ly suµ‹à2 devi˚,Åhi†devi˚ 0x%08x wû»bêign‹e\n", 
pci_dev
->
dev‚
);

2037  -
EPERM
;

2040 
∂©f‹m_ícode_ˇp
 = &
∂©f‹m_video_ícode_ˇp
[
chù_id
];

2041 
∂©f‹m_ícode_ˇp
->
Âga_async_ba£_addr
 = 
	`pci_ªsour˚_°¨t
(
pci_dev
, 0);

2042 
∂©f‹m_ícode_ˇp
->
Âga_async_£˘i⁄_Àn
 = 
	`pci_ªsour˚_Àn
(
pci_dev
, 0);

2044 
	`TW_DBG
(
TW_DBG_INFO
, "dëe˘Åw5864Öcòdevi˚, bu†%d, slŸ %d, f¿%d, irq %d\n", 
bus_id
, 
¶Ÿ
, 
dev‚
, 
pci_dev
->
úq
);

2045 
i
 = 0; i < 
DEVICE_COUNT_RESOURCE
; i++)

2047 if(
pci_dev
->
ªsour˚
[
i
].
°¨t
){

2048 
	`TW_DBG
(
TW_DBG_INFO
, "BAR%d %s Addr 0x%08x, Size 0x%08x\n",

2049 
i
, (
pci_dev
->
ªsour˚
[i].
Êags
 & 
IORESOURCE_IO
) ? "I/O":"MEM",

2050 
	`pci_ªsour˚_°¨t
(
pci_dev
, 
i
),

2051 
	`pci_ªsour˚_Àn
(
pci_dev
, 
i
));

2055 if(
	`tw5864_chù_öô
(
TW_ED_PCI_BUS
, 
chù_id
)){

2056 
	`TW_DBG
(
TW_DBG_FATAL
, "init chip failed\n");

2059 
	`gë_tw_pci_bus
(&
tw_pci_bus
);

2060 
tw_pci_bus
->
›
->
	`föd_chù_bus_ö_ty≥_bus_èbÀ
—w_pci_bus, &
tw5864_chù_bus
, 
chù_id
);

2061 if(
tw5864_chù_bus
 !
NULL
){

2062 
chù
 = 
	`to_gë_chù_wôh_chù_bus
(
tw5864_chù_bus
);

2064 
chù
->
tw5864_öt_c⁄åﬁ
.
chù_úq
 = 
pci_dev
->
úq
;

2066 
	`£t_úq_ty≥
(
pci_dev
->
úq
, 
IRQT_LOW
);

2067 
ªt
 = 
	`ªque°_úq
(
chù
->
tw5864_öt_c⁄åﬁ
.
chù_úq
,

2068 
tw5864_t›_i§
, 
IRQF_DISABLED
, 
chù
->
«me
, &chù->
tw5864_öt_c⁄åﬁ
);

2069 if(
ªt
)

2071 
	`TW_DBG
(
TW_DBG_ERR
, "%s,%d:ö°Æ»úq faûed!, %d\n", 
__FILE__
, 
__LINE__
, 
ªt
);

2073  
ªt
;

2076 
	`TW_DBG
(
TW_DBG_ERR
, "Nÿsuch chù %d\n", 
chù_id
);

2079 
	`pci_£t_ma°î
(
pci_dev
);

2082 
	}
}

2084 
__devexô
 
	$tw5864_pci_ªmove
(
pci_dev
 *pci_dev)

2086 
ty≥_bus_t
 *
tw_pci_bus
;

2087 
tw_chù_bus_t
 *
tw5864_chù_bus
;

2088 
dvm_chù_t
 *
chù
;

2089 
¶Ÿ
;

2090 
tw_chù_devi˚
 *
tcd
;

2092 
¶Ÿ
 = 
	`PCI_SLOT
(
pci_dev
->
dev‚
);

2093 
¶Ÿ
 -= 14;

2094 
	`gë_tw_pci_bus
(&
tw_pci_bus
);

2095 
tw_pci_bus
->
›
->
	`föd_chù_bus_ö_ty≥_bus_èbÀ
—w_pci_bus, &
tw5864_chù_bus
, 
¶Ÿ
);

2096 if(
tw5864_chù_bus
 !
NULL
){

2097 
chù
 = 
	`to_gë_chù_wôh_chù_bus
(
tw5864_chù_bus
);

2098 
	`‰ì_úq
(
chù
->
tw5864_öt_c⁄åﬁ
.
chù_úq
, &chip->tw5864_int_control);

2100 
tcd
 = 
	`¥iv_2_tcd
((*)
chù
);

2101 
	`¥ötk
("tcd = %∞\n",
tcd
);

2102 
	`ªÀa£_Æl_£rvi˚_devi˚_ext
();

2103 
	`uƒegi°î_Æl_tc_drivî
();

2104 
	`tw5864_uƒegi°î_Æl_tc_devi˚s
(
chù
);

2105 
	`tw5864_chù_drivî_ªmove
();

2106 
	`tw5864_chù_ªmove
(
tcd
);

2108 
	}
}

2110 
pci_devi˚_id
 
	gtw5864_pci_tbl
[] 
	g__öôd©a
 = {

2112 .
víd‹
 = 
PCI_VENDOR_ID_TW5864
,

2113 .
	gdevi˚
 = 
PCI_DEVICE_ID_TW5864
,

2114 .
	gsubvíd‹
 = 
PCI_ANY_ID
,

2115 .
	gsubdevi˚
 = 
PCI_ANY_ID
,

2116 .
	g˛ass
 = 0,

2117 .
	g˛ass_mask
 = 0,

2118 .
	gdrivî_d©a
 = 0,

2121 .
	gvíd‹
 = 0x10ee,

2122 .
	gdevi˚
 = 0x0300,

2123 .
	gsubvíd‹
 = 
PCI_ANY_ID
,

2124 .
	gsubdevi˚
 = 
PCI_ANY_ID
,

2125 .
	g˛ass
 = 0,

2126 .
	g˛ass_mask
 = 0,

2127 .
	gdrivî_d©a
 = 0,

2131 
pci_drivî
 
	gtw5864_pci_drivî
 = {

2132 .
«me
 = "TW5864",

2133 .
	gid_èbÀ
 = 
tw5864_pci_tbl
,

2134 .
	g¥obe
 = 
tw5864_pci_¥obe
,

2135 .
	gªmove
 = 
tw5864_pci_ªmove
,

2140 
__öô
 
	$tw5864_öô
()

2142 
	`tw_c‹e_öô
();

2146 
	`¥oc_moduÀ_öô
();

2147 
	`öô_tw_roŸ_bus
();

2148 #ifdef 
ARM_PLATFORM


2149 
	`öô_¨m_timî
();

2151 #ifde‡ 
POWERPC_PLATFORM


2152 
	`dvm_m≠_öô
();

2154 
	`°¨t_dvm_kthªad
();

2155 #ifde‡
POWERPC_PCI_PLATFORM


2156 i‡(
	`pci_ªgi°î_drivî
(&
tw5864_pci_drivî
)) {

2157 
	`°›_dvm_kthªad
();

2158 
	`dvm_m≠_exô
();

2159 
	`ªmove_tw_roŸ_bus
();

2160 
	`¥ötk
("FaildÑegisterÖci driver!\n");

2161  -
ENODEV
;

2164 
	`tw5864_chù_öô
(1, 0);

2169 
	}
}

2171 
__exô
 
	$tw5864_exô
()

2173 
tw_chù_devi˚
 *
tcd
;

2174 #i‚de‡
POWERPC_PCI_PLATFORM


2175 
ty≥_bus_t
 *
tw_ho°_bus
;

2176 
tw_chù_bus_t
 *
tw5864_chù_bus
;

2177 
dvm_chù_t
 *
chù
;

2181 #ifdef 
ARM_PLATFORM


2182 
	`˛o£_¨m_timî
();

2184 #ifde‡ 
POWERPC_PLATFORM


2185 
	`dvm_m≠_exô
();

2187 #ifde‡
POWERPC_PCI_PLATFORM


2188 
	`pci_uƒegi°î_drivî
(&
tw5864_pci_drivî
);

2190 
	`gë_tw_ho°_bus
(&
tw_ho°_bus
);

2191 
tw_ho°_bus
->
›
->
	`föd_chù_bus_ö_ty≥_bus_èbÀ
—w_ho°_bus, &
tw5864_chù_bus
, 0);

2192 if(
tw5864_chù_bus
 !
NULL
){

2193 
chù
 = 
	`to_gë_chù_wôh_chù_bus
(
tw5864_chù_bus
);

2195 
tcd
 = 
	`¥iv_2_tcd
((*)
chù
);

2196 
	`¥ötk
("tcd = %∞\n",
tcd
);

2197 
	`ªÀa£_Æl_£rvi˚_devi˚_ext
();

2198 
	`uƒegi°î_Æl_tc_drivî
();

2199 
	`tw5864_uƒegi°î_Æl_tc_devi˚s
(
chù
);

2200 
	`tw5864_chù_drivî_ªmove
();

2201 
	`tw5864_chù_ªmove
(
tcd
);

2204 
	`°›_dvm_kthªad
();

2206 
	`ªmove_tw_roŸ_bus
();

2207 
	`¥oc_moduÀ_ªÀa£
();

2209 
	`tw_c‹e_exô
();

2211 
	}
}

2213 
moduÀ_öô
(
tw5864_öô
);

2214 
moduÀ_exô
(
tw5864_exô
);

2216 
MODULE_DESCRIPTION
("DVMicro h264 chip driver");

2217 
MODULE_AUTHOR
("tang shang chang,Émail:tang.sc@163.com");

2218 
MODULE_LICENSE
("GPL");

	@../../tw5864/tw5864/tw_chip_ai.c

1 
	~<tw5864/dvm_comm⁄.h
>

2 
	~<tw5864/tc_comm⁄.h
>

5 c⁄° 
	gchù_h¨dw¨e_ßm∂e_256fs
[
TW_AUDIO_RESERVED
][6] = {

14 
	$chù_ai_drivî_hcd_öãrÁ˚_›í
(
ed_tcb_t
 *
›íed_ed
)

16 
ªt
 = 
TW_ERR
;

18 if(
›íed_ed
) {

19 
tw_chù_ai_drivî_t
 *
drivî
;

21 
drivî
 = 
	`to_gë_chù_ai_drivî_wôh_›íed_logic_ch™_ed
(
›íed_ed
);

22 
	`©omic_ªad
(&
›íed_ed
->
°©e
)){

24 
TW_ED_UNREGISTER
:

25 
TW_ED_CLOSED
:

26 
›íed_ed
->
ed
.
›
->
	`öô_com∂ëe
(&opened_ed->ed);

27 
	`©omic_£t
(&
drivî
->
›íed_Êag
, 1);

28 
ªt
 = 0;

30 
TW_ED_IDLE
:

31 
TW_ED_STANDBY
:

32 
TW_ED_SUSPEND
:

33 
TW_ED_RUNNING
:

34 
ªt
 = -
EBUSY
;

35 
	`TW_DBG
(
TW_DBG_ERR
, "chip vi driver have been opened\n");

40  
ªt
;

41 
	}
}

43 
	$chù_ai_drivî_hcd_öãrÁ˚_˛o£
(
ed_tcb_t
 *
›íed_ed
)

45 
ªt
 = 
TW_ERR
;

47 if(
›íed_ed
) {

48 
tw_chù_ai_drivî_t
 *
drivî
;

50 
drivî
 = 
	`to_gë_chù_ai_drivî_wôh_›íed_logic_ch™_ed
(
›íed_ed
);

51 
	`©omic_ªad
(&
›íed_ed
->
°©e
)){

53 
TW_ED_UNREGISTER
:

54 
TW_ED_CLOSED
:

55 
ªt
 = 0;

56 
	`TW_DBG
(
TW_DBG_INFO
, "chip control have been close\n");

58 
TW_ED_IDLE
:

59 
TW_ED_STANDBY
:

60 
TW_ED_SUSPEND
:

61 
TW_ED_RUNNING
:

62 if(
›íed_ed
->
ed
.
›
 !
NULL
){

63 
	`©omic_£t
(&
›íed_ed
->
°©e
, 
TW_ED_CLOSED
);

64 
›íed_ed
->
ed
.
›
->
	`com∂ëe_d⁄e
(&opened_ed->ed);

65 
	`TW_DBG
(
TW_DBG_INFO
, "control complete doen\n");

66 
ªt
 = 0;

68 
	`TW_DBG
(
TW_DBG_FATAL
, "controlÇode haveÇot inital!\n");

69 
ªt
 = -
EACCES
;

71 
	`©omic_£t
(&
drivî
->
›íed_Êag
, 0);

76  
ªt
;

77 
	}
}

79 
	$chù_ai_drivî_hcd_öãrÁ˚_su•íd
(
ed_tcb_t
 *
›íed_ed
)

81 if(
›íed_ed
) {

82 
tw_chù_ai_drivî_t
 *
drivî
;

84 
drivî
 = 
	`to_gë_chù_ai_drivî_wôh_›íed_logic_ch™_ed
(
›íed_ed
);

85 if(
	`©omic_ªad
(&
drivî
->
›íed_Êag
)) {

87 
	`TW_DBG
(
TW_DBG_ERR
, "device haveÇot opened\n");

93 
	}
}

95 
	$chù_ai_drivî_hcd_öãrÁ˚_ªsume
(
ed_tcb_t
 *
›íed_ed
)

97 if(
›íed_ed
) {

98 
tw_chù_ai_drivî_t
 *
drivî
;

100 
drivî
 = 
	`to_gë_chù_ai_drivî_wôh_›íed_logic_ch™_ed
(
›íed_ed
);

101 if(
	`©omic_ªad
(&
drivî
->
›íed_Êag
)) {

103 
	`TW_DBG
(
TW_DBG_ERR
, "device haveÇot opened\n");

109 
	}
}

111 
	$chù_ai_drivî_hcd_öãrÁ˚_io˘l
(
ed_tcb_t
 *
›íed_ed
, 
cmd
, 
¨g
)

113 
ªt
 = 
TW_ERR
;

115 if(
›íed_ed
) {

116 
tw_chù_ai_drivî_t
 *
drivî
;

117 
tw_chù_ai_sys
 
ai_sys
, *
sys_p
;

118 
tw_chù_ai_¥›îty
 
ai_chn_¥›îty
, *
chn_p
;

119 
AI_CH_VOLUME
 
audio_vﬁume
;

121 
sys_p
 = &
ai_sys
;

122 
chn_p
 = &
ai_chn_¥›îty
;

123 
drivî
 = 
	`to_gë_chù_ai_drivî_wôh_›íed_logic_ch™_ed
(
›íed_ed
);

125 if(
	`©omic_ªad
(&
drivî
->
›íed_Êag
)) {

127 
	`TW_DBG
(
TW_DBG_ERR
, "device haveÇot opened\n");

128  -
EPERM
;

131 
	`TW_DBG
(
TW_DBG_INFO
, "%c, %d\n", 
	`_IOC_TYPE
(
cmd
), 
	`_IOC_NR
(cmd));

132 
cmd
) {

133 
TW_AI_SET_AUDIO_SYS_PARM
:

134 
	`c›y_‰om_u£r
(
sys_p
, (*)
¨g
, (
tw_chù_ai_sys
));

135 if(
sys_p
->
ch™gemask
 & 
TW_CHIP_AI_CHANGEMASK_CLOCK_MODE
) {

136 
ªt
 = 
drivî
->
›
->
	`£t_˛ock_mode
(drivî, 
sys_p
->
˛ock_mode
);

137 if(
ªt
) {

140 
ªt
 = 
TW_OK
;

142 if(
sys_p
->
ch™gemask
 & 
TW_CHIP_AI_CHANGEMASK_SYNC_MODE
) {

143 
ªt
 = 
drivî
->
›
->
	`£t_sync_mode
(drivî, 
sys_p
->
˛ock_mode
);

144 if(
ªt
) {

147 
ªt
 = 
TW_OK
;

149 if(
sys_p
->
ch™gemask
 & 
TW_CHIP_AI_CHANGEMASK_SAMPLE_RATE
) {

150 
ªt
 = 
drivî
->
›
->
	`£t_ßm∂e_øã
(drivî, 
sys_p
->
˛ock_mode
);

151 if(
ªt
) {

154 
ªt
 = 
TW_OK
;

156 if(
sys_p
->
ch™gemask
 & 
TW_CHIP_AI_CHANGEMASK_BITS
) {

157 
ªt
 = 
drivî
->
›
->
	`£t_bôs
(drivî, 
sys_p
->
˛ock_mode
);

158 if(
ªt
) {

161 
ªt
 = 
TW_OK
;

164 
TW_AI_GET_AUDIO_SYS_PARM
:

165 if(
sys_p
->
ch™gemask
 & 
TW_CHIP_AI_CHANGEMASK_CLOCK_MODE
) {

166 
sys_p
->
˛ock_mode
 = 
drivî
->
›
->
	`gë_˛ock_mode
(driver);

168 if(
sys_p
->
ch™gemask
 & 
TW_CHIP_AI_CHANGEMASK_SYNC_MODE
) {

169 
sys_p
->
˛ock_mode
 = 
drivî
->
›
->
	`gë_sync_mode
(driver);

171 if(
sys_p
->
ch™gemask
 & 
TW_CHIP_AI_CHANGEMASK_SAMPLE_RATE
) {

172 
sys_p
->
˛ock_mode
 = 
drivî
->
›
->
	`gë_ßm∂e_øã
(driver);

174 if(
sys_p
->
ch™gemask
 & 
TW_CHIP_AI_CHANGEMASK_BITS
) {

175 
sys_p
->
˛ock_mode
 = 
drivî
->
›
->
	`gë_bôs
(driver);

177 if(
sys_p
->
ch™gemask
) {

178 
	`c›y_to_u£r
((*)
¨g
, 
sys_p
, (
tw_chù_ai_sys
));

180 
ªt
 = 
TW_OK
;

182 
TW_AI_SET_AUDIO_GAIN
:

183 
	`c›y_‰om_u£r
(&
audio_vﬁume
, (*)
¨g
, (
AI_CH_VOLUME
));

184 
chn_p
->
ch™gemask
 |
TW_CHIP_AI_CHANGEMASK_GAIN
;

185 
chn_p
->
ch™√l
 = 
audio_vﬁume
.
u32Ch™√l
;

186 
chn_p
->
gaö
 = 
audio_vﬁume
.
u32Vﬁume
;

187 if(
chn_p
->
ch™gemask
 & 
TW_CHIP_AI_CHANGEMASK_GAIN
) {

188 
tw_chù_ai_c⁄fig_¥›îty_t
 *
ai_c⁄fig
;

189 if(
chn_p
->
ch™√l
 < 
TW_AI_MAX_CHNL
) {

190 
ai_c⁄fig
 = &
drivî
->
audio_¥›îty
[
chn_p
->
ch™√l
];

191 
ªt
 = 
ai_c⁄fig
->
›
->
	`£t_gaö
(&ai_c⁄fig->
audio_¥›îty
, 
chn_p
->
gaö
);

192 if(
ªt
) {

196 
	`TW_DBG
(
TW_DBG_ERR
, "audiÿch™∆ênumbî %d ovîÊow\n", 
chn_p
->
ch™√l
);

197 
ªt
 = -
EINVAL
;

201 
TW_AI_GET_AUDIO_CHN_PARM
:

202 
	`c›y_‰om_u£r
(
chn_p
, (*)
¨g
, (
tw_chù_ai_¥›îty
));

203 if(
chn_p
->
ch™gemask
 & 
TW_CHIP_AI_CHANGEMASK_GAIN
) {

204 
tw_chù_ai_c⁄fig_¥›îty_t
 *
ai_c⁄fig
;

205 if(
chn_p
->
ch™√l
 < 
TW_AI_MAX_CHNL
) {

206 
ai_c⁄fig
 = &
drivî
->
audio_¥›îty
[
chn_p
->
ch™√l
];

207 
chn_p
->
gaö
 = 
ai_c⁄fig
->
›
->
	`gë_gaö
(&ai_c⁄fig->
audio_¥›îty
);

208 
	`c›y_to_u£r
((*)
¨g
, 
chn_p
, (
tw_chù_ai_¥›îty
));

209 
ªt
 = 
TW_OK
;

211 
	`TW_DBG
(
TW_DBG_ERR
, "audiÿch™∆ênumbî %d ovîÊow\n", 
chn_p
->
ch™√l
);

212 
ªt
 = -
EINVAL
;

217 
ªt
 = -
EBADRQC
;

218 
	`TW_DBG
(
TW_DBG_ERR
, "No such command!\n");

223  
ªt
;

224 
	}
}

226 
	$chù_ai_drivî_hcd_öãrÁ˚_gë_°©e
(
ed_tcb_t
 *
›íed_ed
)

228 
ªt
 = 
TW_ED_UNREGISTER
;

230 if(
›íed_ed
 !
NULL
){

231 
ªt
 = 
	`©omic_ªad
(&
›íed_ed
->
°©e
);

234  
ªt
;

235 
	}
}

237 
hcd_öãrÁ˚_›î©i⁄
 
	gchù_ai_drivî_hcd_öãrÁ˚_›
 = {

238 .
›í
 = 
chù_ai_drivî_hcd_öãrÁ˚_›í
,

239 .
	g˛o£
 = 
chù_ai_drivî_hcd_öãrÁ˚_˛o£
,

240 .
	gsu•íd
 = 
chù_ai_drivî_hcd_öãrÁ˚_su•íd
,

241 .
	gªsume
 = 
chù_ai_drivî_hcd_öãrÁ˚_ªsume
,

242 .
	gio˘l
 = 
chù_ai_drivî_hcd_öãrÁ˚_io˘l
,

243 .
	ggë_°©e
 = 
chù_ai_drivî_hcd_öãrÁ˚_gë_°©e
,

246 
	$tw_chù_ai_¥›îty_öô
(
tw_chù_ai_¥›îty_t
 *
¥›îty
, 
u32
 
ch∆
)

248 
ªt
 = 
TW_ERR
;

249 if(
¥›îty
) {

250 if(
ch∆
 < 
TW_AI_MAX_CHNL
) {

251 
¥›îty
->
ch™√l
 = 
ch∆
;

252 
¥›îty
->
gaö
 = 0;

253 
ªt
 = 
TW_OK
;

255 
	`TW_DBG
(
TW_DBG_ERR
, "ch™√»numbî %d ovîÊow\n", 
ch∆
);

259  
ªt
;

260 
	}
}

262 
	$tw_chù_ai_¥›îty_ª£t
(
tw_chù_ai_¥›îty_t
 *
¥›îty
)

264 
ªt
 = 
TW_ERR
;

265 if(
¥›îty
) {

266 
¥›îty
->
gaö
 = 0;

267 
ªt
 = 
TW_OK
;

270  
ªt
;

271 
	}
}

273 
u32
 
	$tw_chù_ai_¥›îty_gë_gaö
(
tw_chù_ai_¥›îty_t
 *
¥›îty
)

275 if(
¥›îty
) {

276  
¥›îty
->
gaö
;

279  
TW_ERR
;

280 
	}
}

282 
	$tw_chù_ai_¥›îty_£t_gaö
(
tw_chù_ai_¥›îty_t
 *
¥›îty
, 
u32
 
gaö
)

284 if(
¥›îty
) {

285 if((
gaö
 >
MIN_AI_GAIN
Ë&& (gaö <
MAX_AI_GAIN
)) {

286 
¥›îty
->
gaö
 = gain;

287  
TW_OK
;

289 
	`TW_DBG
(
TW_DBG_INFO
, "£àgaö faûed, [%d, %d]\n", 
MIN_VI_CONTRAST
, 
MAX_VI_CONTRAST
);

290  -
EINVAL
;

292  
TW_ERR
;

293 
	}
}

295 
	$tw_chù_ai_¥›îty_upd©e
(
tw_chù_ai_¥›îty_t
 *
¥›îty
, 
dvm_chù_t
 *
chù
)

297 if(
¥›îty
 && 
chù
) {

298 if(
¥›îty
->
ch™gemask
 & 
TW_CHIP_AI_CHANGEMASK_GAIN
) {

299 
u32
 
ãmp
;

300 if(
¥›îty
->
ch™√l
 < 2) {

301 
ãmp
 = 
	`mpb_ªad
(
chù
, 
TW_AI_GAIN_21
);

302 
ãmp
 &~(0x‡<< (4 * 
¥›îty
->
ch™√l
));

303 
ãmp
 |((
¥›îty
->
gaö
 & 0xfË<< (4 *Ör›îty->
ch™√l
));

304 
	`mpb_wrôe
(
chù
, 
TW_AI_GAIN_21
, 
ãmp
);

306 
ãmp
 = 
	`mpb_ªad
(
chù
, 
TW_AI_GAIN_43
);

307 
ãmp
 &~(0x‡<< (4 * (
¥›îty
->
ch™√l
 - 2)));

308 
ãmp
 |((
¥›îty
->
gaö
 & 0xfË<< (4 * (¥›îty->
ch™√l
 - 2)));

309 
	`mpb_wrôe
(
chù
, 
TW_AI_GAIN_43
, 
ãmp
);

313  
TW_OK
;

316  
TW_ERR
;

317 
	}
}

319 
tw_chù_ai_¥›îty_›î©i⁄
 
	gtw_chù_ai_¥›îty_›î©i⁄_›
 = {

320 .
öô
 = 
tw_chù_ai_¥›îty_öô
,

321 .
	gª£t
 = 
tw_chù_ai_¥›îty_ª£t
,

322 .
	ggë_gaö
 = 
tw_chù_ai_¥›îty_gë_gaö
,

323 .
	g£t_gaö
 = 
tw_chù_ai_¥›îty_£t_gaö
,

324 .
	gupd©e
 = 
tw_chù_ai_¥›îty_upd©e
,

327 
	$chù_ai_drivî_öô
(
tw_chù_ai_drivî_t
 *
drivî
)

329 if(
drivî
) {

330 
i
;

331 
tw_chù_ai_c⁄fig_¥›îty_t
 *
audio_¥›îty
;

332 
ed_tcb_t
 *
ed
;

334 
ed
 = &
drivî
->
›íed_ai_ed
;

335 
audio_¥›îty
 = 
drivî
->audio_property;

336 
ed
->
›
 = &
chù_ai_drivî_hcd_öãrÁ˚_›
;

337 
i
 = 0; i < 
TW_AI_MAX_CHNL
; i++, 
audio_¥›îty
++) {

338 
audio_¥›îty
->
›
 = &
tw_chù_ai_¥›îty_›î©i⁄_›
;

339 
audio_¥›îty
->
›
->
	`öô
(&audio_¥›îty->audio_¥›îty, 
i
);

342  
TW_OK
;

345  
TW_ERR
;

346 
	}
}

348 
	$chù_ai_drivî_ªÀa£
(
tw_chù_ai_drivî_t
 *
drivî
)

350 if(
drivî
) {

351 
i
;

352 
tw_chù_ai_c⁄fig_¥›îty_t
 *
audio_¥›îty
;

354 
audio_¥›îty
 = 
drivî
->audio_property;

355 
i
 = 0; i < 
TW_AI_MAX_CHNL
; i++, 
audio_¥›îty
++) {

356 
audio_¥›îty
->
›
->
	`ª£t
(&audio_property->audio_property);

359 
	}
}

361 
	$chù_ai_drivî_ª£t
(
tw_chù_ai_drivî_t
 *
drivî
)

363 if(
drivî
) {

364 
dvm_chù_t
 *
chù
;

366 
chù
 = 
drivî
->chip;

368 
	`mpb_wrôe
(
chù
, 0x62, 0x03);

369 
	`mpb_wrôe
(
chù
, 0x6c, 0xe1);

370 
	`mpb_wrôe
(
chù
, 0x6d, 0x00);

371 
	`mpb_wrôe
(
chù
, 0x64, 0x31);

372 
	`mpb_wrôe
(
chù
, 0x65, 0x75);

373 
	`mpb_wrôe
(
chù
, 0x66, 0xb9);

374 
	`mpb_wrôe
(
chù
, 0x67, 0xfd);

375 
	`mpb_wrôe
(
chù
, 0x68, 0x20);

376 
	`mpb_wrôe
(
chù
, 0x69, 0x64);

377 
	`mpb_wrôe
(
chù
, 0x6a, 0xa8);

378 
	`mpb_wrôe
(
chù
, 0x6b, 0xec);

380  
TW_OK
;

383  
TW_ERR
;

384 
	}
}

386 
	$chù_ai_drivî_gë_˛ock_mode
(
tw_chù_ai_drivî_t
 *
drivî
)

388 if(
drivî
) {

389  
drivî
->
˛ock_mode
;

392  
TW_ERR
;

393 
	}
}

395 
	$chù_ai_drivî_£t_˛ock_mode
(
tw_chù_ai_drivî_t
 *
drivî
, 
AUDIO_CLOCK_MODE
 
˛ock_mode
)

397 
ªt
 = 
TW_ERR
, 
ãmp
;

399 if(
drivî
) {

400 
˛ock_mode
) {

401 
AUDIO_CLOCK_SLAVE
:

402 
drivî
->
˛ock_mode
 = clock_mode;

403 
ãmp
 = 
	`mpb_ªad
(
drivî
->
chù
, 
TW_AI_CLOCK_MODE
);

404 
ãmp
 &= ~(1 << 5);

405 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_AI_CLOCK_MODE
, 
ãmp
);

406 
ªt
 = 
TW_OK
;

408 
AUDIO_CLOCK_MASTER
:

409 
drivî
->
˛ock_mode
 = clock_mode;

410 
ãmp
 = 
	`mpb_ªad
(
drivî
->
chù
, 
TW_AI_CLOCK_MODE
);

411 
ãmp
 |= (1 << 5);

412 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_AI_CLOCK_MODE
, 
ãmp
);

413 
ªt
 = 
TW_OK
;

416 
	`TW_DBG
(
TW_DBG_ERR
, "unsuµ‹à˛ock modê%d\n", 
˛ock_mode
);

417 
ªt
 = -
EINVAL
;

422  
ªt
;

423 
	}
}

425 
	$chù_ai_drivî_gë_sync_mode
(
tw_chù_ai_drivî_t
 *
drivî
)

427 if(
drivî
) {

428  
drivî
->
sync_mode
;

431  
TW_ERR
;

432 
	}
}

434 
	$chù_ai_drivî_£t_sync_mode
(
tw_chù_ai_drivî_t
 *
drivî
, 
AUDIO_SYNC_MODE
 
sync_mode
)

436 
ªt
 = 
TW_ERR
, 
ãmp
;

438 if(
drivî
) {

439 
sync_mode
) {

440 
AUDIO_SYNC_MODE_DSP
:

441 
drivî
->
sync_mode
 = sync_mode;

442 
ãmp
 = 
	`mpb_ªad
(
drivî
->
chù
, 
TW_AI_SYNC_MODE
);

443 
ãmp
 |= (1 << 6);

444 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_AI_SYNC_MODE
, 
ãmp
);

445 
ªt
 = 
TW_OK
;

447 
AUDIO_SYNC_MODE_I2S
:

448 
drivî
->
sync_mode
 = sync_mode;

449 
ãmp
 = 
	`mpb_ªad
(
drivî
->
chù
, 
TW_AI_SYNC_MODE
);

450 
ãmp
 &= ~(1 << 6);

451 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_AI_SYNC_MODE
, 
ãmp
);

452 
ªt
 = 
TW_OK
;

455 
	`TW_DBG
(
TW_DBG_ERR
, "unsuµ‹àsyn¯modê%d\n", 
sync_mode
);

456 
ªt
 = -
EINVAL
;

461  
TW_ERR
;

462 
	}
}

464 
	$chù_ai_drivî_gë_ßm∂e_øã
(
tw_chù_ai_drivî_t
 *
drivî
)

466 if(
drivî
) {

467  
drivî
->
ßm∂e_øã
;

470  
TW_ERR
;

471 
	}
}

473 
	$chù_ai_drivî_£t_ßm∂e_øã
(
tw_chù_ai_drivî_t
 *
drivî
, 
TW_AUDIO_SAMPLE_RATE
 
ßm∂e_øã
)

475 
ªt
 = 
TW_ERR
, 
i
;

477 if(
drivî
) {

478 
ßm∂e_øã
) {

479 
TW_AUDIO_8000
:

480 
drivî
->
ßm∂e_øã
 = sample_rate;

481 
i
 = 0; i < 6; i++) {

482 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_AI_SAMPLE_RATE
 + 
i
, 
chù_h¨dw¨e_ßm∂e_256fs
[
ßm∂e_øã
][i]);

484 
ªt
 = 
TW_OK
;

486 
TW_AUDIO_16000
:

487 
drivî
->
ßm∂e_øã
 = sample_rate;

488 
i
 = 0; i < 6; i++) {

489 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_AI_SAMPLE_RATE
 + 
i
, 
chù_h¨dw¨e_ßm∂e_256fs
[
ßm∂e_øã
][i]);

491 
ªt
 = 
TW_OK
;

493 
TW_AUDIO_32000
:

494 
drivî
->
ßm∂e_øã
 = sample_rate;

495 
i
 = 0; i < 6; i++) {

496 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_AI_SAMPLE_RATE
 + 
i
, 
chù_h¨dw¨e_ßm∂e_256fs
[
ßm∂e_øã
][i]);

498 
ªt
 = 
TW_OK
;

500 
TW_AUDIO_44100
:

501 
drivî
->
ßm∂e_øã
 = sample_rate;

502 
i
 = 0; i < 6; i++) {

503 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_AI_SAMPLE_RATE
 + 
i
, 
chù_h¨dw¨e_ßm∂e_256fs
[
ßm∂e_øã
][i]);

505 
ªt
 = 
TW_OK
;

507 
TW_AUDIO_48000
:

508 
drivî
->
ßm∂e_øã
 = sample_rate;

509 
i
 = 0; i < 6; i++) {

510 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_AI_SAMPLE_RATE
 + 
i
, 
chù_h¨dw¨e_ßm∂e_256fs
[
ßm∂e_øã
][i]);

512 
ªt
 = 
TW_OK
;

515 
	`TW_DBG
(
TW_DBG_ERR
, "unsuµ‹àßm∂êøã %d\n", 
ßm∂e_øã
);

516 
ªt
 = -
EINVAL
;

521  
TW_ERR
;

522 
	}
}

524 
	$chù_ai_drivî_gë_bôs
(
tw_chù_ai_drivî_t
 *
drivî
)

526 if(
drivî
) {

527  
drivî
->
bôs
;

530  
TW_ERR
;

531 
	}
}

533 
	$chù_ai_drivî_£t_bôs
(
tw_chù_ai_drivî_t
 *
drivî
, 
TW_AUDIO_BIT
 
bôs
)

535 
ªt
 = 
TW_ERR
, 
ãmp
;

537 if(
drivî
) {

538 
bôs
) {

539 
TW_AUDIO_8BIT
:

540 
drivî
->
bôs
 = bits;

541 
ãmp
 = 
	`mpb_ªad
(
drivî
->
chù
, 
TW_AI_BITS
);

542 
ãmp
 |= (1 << 2);

543 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_AI_BITS
, 
ãmp
);

544 
ªt
 = 
TW_OK
;

546 
TW_AUDIO_16BIT
:

547 
drivî
->
bôs
 = bits;

548 
ãmp
 = 
	`mpb_ªad
(
drivî
->
chù
, 
TW_AI_BITS
);

549 
ãmp
 &= ~(1 << 2);

550 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_AI_BITS
, 
ãmp
);

551 
ªt
 = 
TW_OK
;

554 
	`TW_DBG
(
TW_DBG_ERR
, "unsuµ‹àbô†%d\n", 
bôs
);

555 
ªt
 = -
EINVAL
;

560  
TW_ERR
;

561 
	}
}

563 
tw_chù_ai_›î©i⁄
 
	gtw_chù_ai_›î©i⁄_›
 = {

564 .
öô
 = 
chù_ai_drivî_öô
,

565 .
	gªÀa£
 = 
chù_ai_drivî_ªÀa£
,

566 .
	gª£t
 = 
chù_ai_drivî_ª£t
,

568 .
	ggë_˛ock_mode
 = 
chù_ai_drivî_gë_˛ock_mode
,

569 .
	g£t_˛ock_mode
 = 
chù_ai_drivî_£t_˛ock_mode
,

570 .
	ggë_sync_mode
 = 
chù_ai_drivî_gë_sync_mode
,

571 .
	g£t_sync_mode
 = 
chù_ai_drivî_£t_sync_mode
,

572 .
	ggë_ßm∂e_øã

chù_ai_drivî_gë_ßm∂e_øã
,

573 .
	g£t_ßm∂e_øã

chù_ai_drivî_£t_ßm∂e_øã
,

574 .
	ggë_bôs
 = 
chù_ai_drivî_gë_bôs
,

575 .
	g£t_bôs
 = 
chù_ai_drivî_£t_bôs


578 
	$öô_chù_ai_drivî
(
tw_£rvi˚_devi˚
 *
tsd
, 
dvm_chù_t
 *
chù
)

580 
ªt
 = 0;

581 
tw_chù_ai_drivî_t
 *
drivî
;

583 
drivî
 = (
tw_chù_ai_drivî_t
 *)
	`kmÆloc
(—w_chù_ai_drivî_t),
GFP_KERNEL
);

584 if(
drivî
) {

585 if(
chù
) {

586 
drivî
->
chù
 = chip;

587 
drivî
->
›
 = &
tw_chù_ai_›î©i⁄_›
;

588 
chù
->
chù_ai_drivî
 = 
drivî
;

589 
ªt
 = 
drivî
->
›
->
	`öô
(driver);

590 
drivî
->
›
->
	`ª£t
(driver);

591 if(
ªt
){

592 
	`TW_DBG
(
TW_DBG_ERR
, "ÁûedÅÿöôáòdrivî %d!\n", 
ªt
);

593  -
ENOMEM
;

595 
	`öô_ídpoöt_tcb
(&
drivî
->
›íed_ai_ed
, 
chù
->
bus_id
, chù->
chù_id
,

596 
INVALID_TW_ED_TYPE_ID
, 0,

597 0, 
drivî
, 
NULL
,

598 
NULL
, NULL);

599 
tsd
->
≥d
 = &
drivî
->
›íed_ai_ed
;

600  
TW_OK
;

602 
	`TW_DBG
(
TW_DBG_ERR
, "nullÖointer\n");

603  -
EINVAL
;

606 
	`TW_DBG
(
TW_DBG_ERR
, "nomemory\n");

607  -
ENOMEM
;

610  
TW_ERR
;

611 
	}
}

613 
	$ªmove_chù_ai_drivî
(
tw_£rvi˚_devi˚
 *
tsd
)

615 
tw_chù_ai_drivî_t
 *
drivî
;

617 if(
tsd
 &&Åsd->
≥d
) {

618 
drivî
 = 
	`to_gë_chù_ai_drivî_wôh_›íed_logic_ch™_ed
(
tsd
->
≥d
);

619 
drivî
->
›
->
	`ªÀa£
(driver);

620 
	`k‰ì
(
drivî
);

621  
TW_OK
;

624  
TW_ERR
;

625 
	}
}

631 
	$tw_chù_ai_drivî_öô
(
tw_chù_devi˚
 *
tcd
,
tw_£rvi˚_devi˚
 *
tsd
,* 
∑ø
,
cmd_¨g
 *
¨g
)

633 
dvm_chù_t
 *
chù
 = (dvm_chù_à*)
∑ø
;

635  
	`öô_chù_ai_drivî
(
tsd
,
chù
);

636 
	}
}

639 
	$tw_chù_ai_drivî_ªmove
(
tw_chù_devi˚
 *
tcd
,
tw_£rvi˚_devi˚
 *
tsd
,* 
∑ø
,
cmd_¨g
 *
¨g
)

641 
	`¥ötk
("ö %s\n",
__FUNCTION__
);

642 
	`ªmove_chù_ai_drivî
(
tsd
);

643 
	}
}

646 
tw_dev_id
 
	gtw_chù_ai_dev_id
 =

648 .
ïobj
 = {

649 .
víd‹_id
 = 
TWELL
,

650 .
	gbus_id
 = 1,

651 .
	gchù_id
 = 
TW5864
,

652 .
	gfunc_id
 = (0 << 16) | 0,

653 .
	gty≥
 = 
TW_AUDIO_IN
,

654 .
	gkey
 = {0},

656 .
	gvîsi⁄
 = 1,

660 
tsd_drivî_›î©i⁄s
 
	gtw_chù_ai_›s
 =

662 .
öô
 = 
tw_chù_ai_drivî_öô
,

663 .
	gªmove
 = 
tw_chù_ai_drivî_ªmove
,

666 
tw_£rvi˚_drivî
 
	gtw_chù_ai_driv
 =

668 .
drivî
 = {

669 .
«me
 = "tw5864_audio_input_driv",

671 .
	gdevi˚_id
 = {

672 .
tid
 = &
tw_chù_ai_dev_id
,

673 .
	g›s
 = &
tw_chù_ai_›s
,

679 
	$tw5864_chù_ai_drivî_öô
(* 
∑ø
)

681 
tw_chù_ai_driv
.
devi˚_id
.
∑ø
 =Öara;

682  
	`ªgi°î_tc_drivî
(&
tw_chù_ai_driv
);

683 
	}
}

686 
	$tw5864_chù_ai_drivî_ªmove
()

688 
	`uƒegi°î_tc_drivî
(&
tw_chù_ai_driv
);

689 
	}
}

	@../../tw5864/tw5864/tw_chip_ao.c

1 
	~<tw5864/dvm_comm⁄.h
>

	@../../tw5864/tw5864/tw_chip_driver.c

1 
	~<tw5864/dvm_comm⁄.h
>

2 
	~<tw5864/tc_comm⁄.h
>

4 
	$chù_drivî_hcd_öãrÁ˚_›í
(
ed_tcb_t
 *
›íed_c⁄åﬁ_ed
)

6 
ªt
 = 
TW_ERR
;

8 if(
›íed_c⁄åﬁ_ed
) {

9 
chù_drivî_t
 *
drivî
;

11 
drivî
 = 
	`to_gë_chù_drivî_wôh_›íed_logic_ch™_ed
(
›íed_c⁄åﬁ_ed
);

12 
	`©omic_ªad
(&
›íed_c⁄åﬁ_ed
->
°©e
)){

14 
TW_ED_UNREGISTER
:

15 
TW_ED_CLOSED
:

16 
›íed_c⁄åﬁ_ed
->
ed
.
›
->
	`öô_com∂ëe
(&opened_control_ed->ed);

17 
	`©omic_£t
(&
drivî
->
›íed_Êag
, 1);

18 
ªt
 = 0;

20 
TW_ED_IDLE
:

21 
TW_ED_STANDBY
:

22 
TW_ED_SUSPEND
:

23 
TW_ED_RUNNING
:

24 
ªt
 = -
EBUSY
;

25 
	`TW_DBG
(
TW_DBG_ERR
, "chip control have been opened\n");

30  
ªt
;

31 
	}
}

33 
	$chù_drivî_hcd_öãrÁ˚_˛o£
(
ed_tcb_t
 *
›íed_c⁄åﬁ_ed
)

35 
ªt
 = 
TW_ERR
;

37 if(
›íed_c⁄åﬁ_ed
) {

38 
chù_drivî_t
 *
drivî
;

40 
drivî
 = 
	`to_gë_chù_drivî_wôh_›íed_logic_ch™_ed
(
›íed_c⁄åﬁ_ed
);

41 
	`©omic_ªad
(&
›íed_c⁄åﬁ_ed
->
°©e
)){

43 
TW_ED_UNREGISTER
:

44 
TW_ED_CLOSED
:

45 
ªt
 = 0;

46 
	`TW_DBG
(
TW_DBG_INFO
, "chip control have been close\n");

48 
TW_ED_IDLE
:

49 
TW_ED_STANDBY
:

50 
TW_ED_SUSPEND
:

51 
TW_ED_RUNNING
:

52 if(
›íed_c⁄åﬁ_ed
->
ed
.
›
 !
NULL
){

53 
	`©omic_£t
(&
›íed_c⁄åﬁ_ed
->
°©e
, 
TW_ED_CLOSED
);

54 
›íed_c⁄åﬁ_ed
->
ed
.
›
->
	`com∂ëe_d⁄e
(&opened_control_ed->ed);

55 
	`TW_DBG
(
TW_DBG_INFO
, "control complete doen\n");

56 
ªt
 = 0;

58 
	`TW_DBG
(
TW_DBG_FATAL
, "controlÇode haveÇot inital!\n");

59 
ªt
 = -
EACCES
;

61 
	`©omic_£t
(&
drivî
->
›íed_Êag
, 0);

66  
ªt
;

67 
	}
}

69 
	$chù_drivî_hcd_öãrÁ˚_su•íd
(
ed_tcb_t
 *
›íed_c⁄åﬁ_ed
)

71 if(
›íed_c⁄åﬁ_ed
) {

72 
chù_drivî_t
 *
drivî
;

74 
drivî
 = 
	`to_gë_chù_drivî_wôh_›íed_logic_ch™_ed
(
›íed_c⁄åﬁ_ed
);

75 if(
	`©omic_ªad
(&
drivî
->
›íed_Êag
)) {

77 
	`TW_DBG
(
TW_DBG_ERR
, "device haveÇot opened\n");

83 
	}
}

85 
	$chù_drivî_hcd_öãrÁ˚_ªsume
(
ed_tcb_t
 *
›íed_c⁄åﬁ_ed
)

87 if(
›íed_c⁄åﬁ_ed
) {

88 
chù_drivî_t
 *
drivî
;

90 
drivî
 = 
	`to_gë_chù_drivî_wôh_›íed_logic_ch™_ed
(
›íed_c⁄åﬁ_ed
);

91 if(
	`©omic_ªad
(&
drivî
->
›íed_Êag
)) {

93 
	`TW_DBG
(
TW_DBG_ERR
, "device haveÇot opened\n");

99 
	}
}

101 
	$chù_drivî_hcd_öãrÁ˚_io˘l
(
ed_tcb_t
 *
›íed_c⁄åﬁ_ed
, 
cmd
, 
¨g
)

103 
ªt
 = 
TW_ERR
;

104 
chù_drivî_t
 *
drivî
;

105 
tw_video_bus_t
 *
video_bus
;

106 
tw_audio_bus_t
 *
audio_bus
;

107 
chù_audio_t
 *
chù_audio_drivî
;

108 
tw_audio_drivî_t
 *
audio_drivî
;

110 if(
›íed_c⁄åﬁ_ed
) {

111 
drivî
 = 
	`to_gë_chù_drivî_wôh_›íed_logic_ch™_ed
(
›íed_c⁄åﬁ_ed
);

112 
video_bus
 = &
drivî
->video_bus;

113 
audio_bus
 = &
drivî
->audio_bus;

115 if(
	`©omic_ªad
(&
drivî
->
›íed_Êag
)) {

117 
	`TW_DBG
(
TW_DBG_ERR
, "device haveÇot opened\n");

118  -
EPERM
;

121 
	`TW_DBG
(
TW_DBG_INFO
, "%c, %d\n", 
	`_IOC_TYPE
(
cmd
), 
	`_IOC_NR
(cmd));

122 
cmd
) {

123 
TW_CHIP_AUDIO_ENCODE_PARAM_SET
:

124 
TW_CHIP_AUDIO_ENCODE_PARAM_GET
:

125 
TW_CHIP_AUDIO_DECODE_PARAM_SET
:

126 
TW_CHIP_AUDIO_DECODE_PARAM_GET
:

127 
chù_audio_drivî
 = 
audio_bus
->chip_audio_driver;

128 if(
chù_audio_drivî
) {

129 
tw_chù_audio_∑øm
 
audio_∑øm
;

130 
	`c›y_‰om_u£r
(&
audio_∑øm
, (*)
¨g
, (
tw_chù_audio_∑øm
));

131 if((
audio_∑øm
.
ch™√l
 >
TW_AUDIO_IN_CHAN0_ID
Ë&& (audio_∑øm.ch™√»<
TW_AUDIO_OUT_PLAYBACK_ID
)) {

132 
chù_audio_drivî
->
›
->
	`gë_audio_ch™_drivî
(chù_audio_drivî, 
audio_∑øm
.
ch™√l
, &
audio_drivî
);

133 if(
audio_drivî
) {

134 
ed_tcb_t
 *
ed
;

135 
ed
 = &
audio_drivî
->
audio_ed
;

136 
ªt
 = 
ed
->
›
->
	`io˘l
”d, 
cmd
, 
¨g
);

137 if(
ªt
) {

138 
	`TW_DBG
(
TW_DBG_ERR
, "audiÿio˘»Áûed %d\n", 
ªt
);

139  
ªt
;

142 
	`TW_DBG
(
TW_DBG_FATAL
, "audio driverÇot installed!\n");

143 
ªt
 = -
ENOSYS
;

146 
	`TW_DBG
(
TW_DBG_ERR
, "audiÿch™√»numbî %d ovîÊow\n", 
audio_∑øm
.
ch™√l
);

147 
ªt
 = -
ECHRNG
;

151 
	`TW_DBG
(
TW_DBG_FATAL
, "audio driverÇot installed!\n");

152 
ªt
 = -
ENOSYS
;

155 
TW_VIDEO_BUS_PARAM_SET
:

156 if(
video_bus
 && video_bus->
›
) {

157 
tw_chù_video_∑øm
 
video_∑øm
;

158 
	`c›y_‰om_u£r
(&
video_∑øm
, (*)
¨g
, (
tw_chù_video_∑øm
));

159 if(
video_∑øm
.
ch™ge_mask_Êag
 & 
TW_VIDEO_BUS_PARAM_ENABLE_CHANGE_VIDEO_STANDARD_MASK
) {

160 
ªt
 = 
video_bus
->
›
->
	`£t_video_°™d¨d
(video_bus, 
video_∑øm
.
e_video_°™d¨d
);

164 
TW_VIDEO_BUS_PARAM_GET
:

165 if(
video_bus
 && video_bus->
›
) {

166 
tw_chù_video_∑øm
 
video_∑øm
;

167 if(
video_∑øm
.
ch™ge_mask_Êag
 & 
TW_VIDEO_BUS_PARAM_ENABLE_CHANGE_VIDEO_STANDARD_MASK
) {

168 
video_∑øm
.
e_video_°™d¨d
 = 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus);

169 
	`c›y_to_u£r
((*)
¨g
, &
video_∑øm
, (
tw_chù_video_∑øm
));

171 
ªt
 = 
TW_OK
;

173 
	`TW_DBG
(
TW_DBG_INFO
, "change_mask_flagÇot set\n");

174 
ªt
 = -
EINVAL
;

179 
TW_CHIP_VD_CONFIG_PARAM_SET
:

180 if(
video_bus
) {

181 
u32
 
ch∆
;

182 
tw5864_vd_¸oss_bus_t
 *
vd_bus
;

183 
tw_chù_vd_∑øm
 
vd_∑øm
;

184 
tw_vd_ch™_∑øm
 *
vd_ch™_∑øm
;

185 
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
;

186 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

187 
vd_ch™_m≠_öfo_t
 
ch™_m≠_öfo
[
TW5864_PHY_VD_CHAN_NUMBER
], *
m≠_öfo
;

189 
	`c›y_‰om_u£r
(&
vd_∑øm
, (*)
¨g
, (
tw_chù_vd_∑øm
));

190 
m≠_öfo
 = 
ch™_m≠_öfo
;

191 if(
vd_∑øm
.
i_vd_ch™_numbî
 > 
TW5864_PHY_VD_CHAN_NUMBER
){

192 
	`TW_DBG
(
TW_DBG_ERR
, "ch™∆ênumbî %d ovîÊow\n", 
vd_∑øm
.
i_vd_ch™_numbî
);

193 
ªt
 = -
EINVAL
;

194  
ªt
;

197 
vd_bus
 = 
video_bus
->
vd_bus_drivî
;

198 if(
vd_bus
->
›
->
	`gë_w‹k_mode
(vd_busË!
TW_CROSS_BUS_UNREALTIME
) {

199 
	`TW_DBG
(
TW_DBG_ERR
, "To change vdÖarameter, Only work on TW_CROSS_BUS_UNREALTIME mode!\n");

202 
	`TW_DBG
(
TW_DBG_DEBUG
, "ch™gê%d ch™√l\n", 
vd_∑øm
.
i_vd_ch™_numbî
);

203 
ch∆
 = 0; ch∆ < 
vd_∑øm
.
i_vd_ch™_numbî
; ch∆++, 
m≠_öfo
++) {

204 
vd_ch™_∑øm
 = &
vd_∑øm
.vd_ch™_∑øm[
ch∆
];

205 
	`TW_DBG
(
TW_DBG_DEBUG
, "ch = %d, fp†%2d, mb_width = %2d, mb_heighà%2d\n", 
vd_ch™_∑øm
->
i_phy_ch™_id
, vd_ch™_∑øm->
i_phy_ch™_Âs
, vd_ch™_∑øm->
i_phy_video_width_mb_size
, vd_ch™_∑øm->
i_phy_video_height_mb_size
);

206 if(
vd_ch™_∑øm
->
i_phy_ch™_id
 < 
TW5864_PHY_VD_CHAN_NUMBER
) {

207 if(
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË=
TW_VIDEO_STANDARD_PAL
) {

208 if(
vd_ch™_∑øm
->
i_phy_ch™_Âs
 <
MAX_FRAME_RATE_PAL
) {

209 
m≠_öfo
->
Âs
 = 
vd_ch™_∑øm
->
i_phy_ch™_Âs
;

211 
	`TW_DBG
(
TW_DBG_ERR
, "Â†%d ovîÊow, [0, %d]\n", 
vd_ch™_∑øm
->
i_phy_ch™_Âs
, 
MAX_FRAME_RATE_PAL
);

212 
ªt
 = -
EINVAL
;

213  
ªt
;

216 if(
vd_ch™_∑øm
->
i_phy_ch™_Âs
 <
MAX_FRAME_RATE_NTSC
) {

217 
m≠_öfo
->
Âs
 = 
vd_ch™_∑øm
->
i_phy_ch™_Âs
;

219 
	`TW_DBG
(
TW_DBG_ERR
, "Â†%d ovîÊow, [0, %d]\n", 
vd_ch™_∑øm
->
i_phy_ch™_Âs
, 
MAX_FRAME_RATE_NTSC
);

220 
ªt
 = -
EINVAL
;

221  
ªt
;

224 
m≠_öfo
->
íabÀ
 = 
vd_ch™_∑øm
->
i_phy_ch™_íabÀ
;

225 if(
m≠_öfo
->
íabÀ
) {

226 
m≠_öfo
->
phy_¶Ÿ_id
 = 
vd_ch™_∑øm
->
i_phy_ch™_id
;

228 
m≠_öfo
->
phy_¶Ÿ_id
 = 
TW5864_LOGIC_VD_INVALID
;

230 
m≠_öfo
->
video_size
 = 
	`VIDEO_SIZE_FROM_WIDTH_HEIGHT
(
vd_ch™_∑øm
->
i_phy_video_width_mb_size
<<4,

231 
vd_ch™_∑øm
->
i_phy_video_height_mb_size
<<4,

232 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus));

233 if(
m≠_öfo
->
video_size
 =
TW_VIDEO_SIZE_USER
) {

234 
	`TW_DBG
(
TW_DBG_ERR
, "channel width or heightÉrror\n");

235 
ªt
 = -
EINVAL
;

236  
ªt
;

239 
	`TW_DBG
(
TW_DBG_ERR
, "Nÿsuch ch™√»%d\n", 
vd_ch™_∑øm
->
i_phy_ch™_id
);

240 
ªt
 = -
EINVAL
;

241  
ªt
;

244 ; 
ch∆
 < 
TW5864_PHY_VD_CHAN_NUMBER
; ch∆++, 
m≠_öfo
++) {

245 
m≠_öfo
->
Âs
 = 0;

246 
m≠_öfo
->
íabÀ
 = 0;

247 
m≠_öfo
->
phy_¶Ÿ_id
 = 
TW5864_LOGIC_VD_INVALID
;

248 
m≠_öfo
->
video_size
 = 
TW_VIDEO_SIZE_D1
;

250 
ªt
 = 
vd_bus
->
›
->
	`ˇlcuœã_¸oss_bus_m≠_èbÀ
(vd_bus, 
ch™_m≠_öfo
);

251 if(
ªt
) {

252 
	`TW_DBG
(
TW_DBG_ERR
, "please check configuration\n");

255 
m≠_öfo
 = 
ch™_m≠_öfo
;

256 if(
video_bus
->
›
->
	`nŸify_su•íd_logic_ch™
(video_bus)){

257 
	`TW_DBG
(
TW_DBG_FATAL
, "suspendÜogic channel failed\n");

258  -
EBUSY
;

260 
ch∆
 = 0; ch∆ < 
TW5864_CROSS_BUS_LOGIC_VD_CHAN_NUMBER
; ch∆++, 
m≠_öfo
++) {

261 
logic_video_¶Ÿ
 = 
vd_bus
->logic_video_¶Ÿ + 
m≠_öfo
->
m≠_logic_¶Ÿ_id
;

262 
logic_video_¶Ÿ
->
›
->
	`£t_m≠PhySlŸId
÷ogic_video_¶Ÿ, 
m≠_öfo
->
phy_¶Ÿ_id
);

263 
logic_video_¶Ÿ
->
›
->
	`£t_disˇrdTabÀ
÷ogic_video_¶Ÿ, 
m≠_öfo
->
logic_¶Ÿ_disˇrd_èbÀ
);

264 
logic_video_¶Ÿ
->
›
->
	`£t_roundTabÀSåide
÷ogic_video_¶Ÿ, 
m≠_öfo
->
roundTabÀSåide
);

265 
logic_video_¶Ÿ
->
›
->
	`£t_video_size
÷ogic_video_¶Ÿ, 
m≠_öfo
->
video_size
);

266 
logic_video_¶Ÿ
->
›
->
	`£t_íabÀ¶Ÿ
÷ogic_video_¶Ÿ, 
m≠_öfo
->
íabÀ
);

267 
logic_video_¶Ÿ
->
›
->
	`£t_Âs
÷ogic_video_¶Ÿ, 
m≠_öfo
->
Âs
);

268 
	`©omic_£t
(&
logic_video_¶Ÿ
->
√edUpd©eFœg
, 1);

269 
vd_bus
->
›
->
	`gë_phy_video_¶Ÿ_by_phy_id
(vd_bus, 
m≠_öfo
->
phy_¶Ÿ_id
, &
phy_video_¶Ÿ
);

270 
phy_video_¶Ÿ
->
›
->
	`£t_video_size
’hy_video_¶Ÿ, 
logic_video_¶Ÿ
->›->
	`gë_video_size
(logic_video_slot));

271 
phy_video_¶Ÿ
->
›
->
	`upd©e_m≠_logic_¶Ÿ
’hy_video_¶Ÿ, 
logic_video_¶Ÿ
->
logicSlŸId
,Üogic_video_slot);

273 if(
vd_bus
->
›
->
	`£t_chù_íd_¸oss_bus
(vd_bus, 
	`to_gë_chù_wôh_chù_¸oss_bus
(vd_bus))){

274 
	`TW_DBG
(
TW_DBG_FATAL
, "syncÅo hardware failed\n");

276 if(
video_bus
->
›
->
	`nŸify_ªsume_logic_ch™
(video_bus)){

277 
	`TW_DBG
(
TW_DBG_FATAL
, "resumeÜogic channel failed\n");

278  -
EBUSY
;

281 if(
video_bus
->
›
->
	`nŸify_logic_ch™_ch™ge
(video_bus)){

282 
	`TW_DBG
(
TW_DBG_FATAL
, "syncÅoÜogic channel failed\n");

283  -
EBUSY
;

285 
ªt
 = 
TW_OK
;

288 
TW_CHIP_VD_CONFIG_PARAM_GET
:

289 if(
video_bus
) {

290 
u32
 
ch∆
;

291 
tw5864_vd_¸oss_bus_t
 *
vd_bus
;

292 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

293 
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
;

294 
tw_chù_vd_∑øm
 
vd_∑øm
;

295 
tw_vd_ch™_∑øm
 *
vd_ch™_∑øm
;

297 
	`c›y_‰om_u£r
(&
vd_∑øm
, (*)
¨g
, (
tw_chù_vd_∑øm
));

298 if(
vd_∑øm
.
i_vd_ch™_numbî
 > 
TW5864_PHY_VD_CHAN_NUMBER
){

299 
	`TW_DBG
(
TW_DBG_ERR
, "ch™∆ênumbî %d ovîÊow\n", 
vd_∑øm
.
i_vd_ch™_numbî
);

300 
ªt
 = -
EINVAL
;

303 
vd_bus
 = 
video_bus
->
vd_bus_drivî
;

304 
ch∆
 = 0; ch∆ < 
vd_∑øm
.
i_vd_ch™_numbî
; chnl++) {

305 
vd_ch™_∑øm
 = &
vd_∑øm
.vd_ch™_∑øm[
ch∆
];

306 if(
vd_ch™_∑øm
->
i_phy_ch™_id
 < 
TW5864_PHY_VD_CHAN_NUMBER
) {

307 
vd_bus
->
›
->
	`gë_phy_video_¶Ÿ_by_phy_id
(vd_bus, 
vd_ch™_∑øm
->
i_phy_ch™_id
, &
phy_video_¶Ÿ
);

308 
logic_video_¶Ÿ
 = 
phy_video_¶Ÿ
->
¸oss_bus_logic_video_¶Ÿ
;

309 
vd_ch™_∑øm
->
i_phy_ch™_íabÀ
 = 
logic_video_¶Ÿ
->
›
->
	`gë_íabÀ¶Ÿ
(logic_video_slot);

310 
vd_ch™_∑øm
->
i_phy_ch™_Âs
 = 
logic_video_¶Ÿ
->
›
->
	`gë_Âs
(logic_video_slot);

311 
vd_ch™_∑øm
->
i_phy_video_width_mb_size
 = 
	`VIDEO_SIZE_TO_WIDTH
(
VIDEO_SIZE_FROM_VD
, 
logic_video_¶Ÿ
->
›
->
	`gë_video_size
(logic_video_slot),

312 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus))>>4;

313 
vd_ch™_∑øm
->
i_phy_video_height_mb_size

	`VIDEO_SIZE_TO_HEIGHT
(
VIDEO_SIZE_FROM_VD
, 
logic_video_¶Ÿ
->
›
->
	`gë_video_size
(logic_video_slot),

314 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus))>>4;

316 
	`TW_DBG
(
TW_DBG_ERR
, "Nÿsuch ch™√»%d\n", 
vd_ch™_∑øm
->
i_phy_ch™_id
);

317 
ªt
 = -
EINVAL
;

321 
	`c›y_to_u£r
((*)
¨g
, &
vd_∑øm
, (
tw_chù_vd_∑øm
));

324 
TW_CHIP_VD_CHNL_CONFIG_SET
:

325 if(
video_bus
) {

326 
tw5864_vd_¸oss_bus_t
 *
vd_bus
;

327 
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
;

328 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

329 
vd_ch™_m≠_öfo_t
 
ch™_m≠_öfo
[
TW5864_PHY_VD_CHAN_NUMBER
], *
m≠_öfo
;

330 
tw_vd_ch™_∑øm
 
vd_ch™_∑øm
;

331 
i
;

333 if(!
¨g
) {

334 
	`TW_DBG
(
TW_DBG_ERR
, "argÇull\n");

335 
ªt
 = -
EINVAL
;

339 
	`c›y_‰om_u£r
(&
vd_ch™_∑øm
, (*)
¨g
, (
tw_vd_ch™_∑øm
));

340 if(
vd_ch™_∑øm
.
i_phy_ch™_id
 > 
TW5864_PHY_VD_CHAN_NUMBER
){

341 
	`TW_DBG
(
TW_DBG_ERR
, "ch™∆ênumbî %d ovîÊow\n", 
vd_ch™_∑øm
.
i_phy_ch™_id
);

342 
ªt
 = -
EINVAL
;

346 
m≠_öfo
 = 
ch™_m≠_öfo
;

347 
vd_bus
 = 
video_bus
->
vd_bus_drivî
;

348 
m≠_öfo
->
phy_¶Ÿ_id
 = 
vd_ch™_∑øm
.
i_phy_ch™_id
;

349 
m≠_öfo
->
video_size
 = 
	`VIDEO_SIZE_FROM_WIDTH_HEIGHT
(
vd_ch™_∑øm
.
i_phy_video_width_mb_size
<<4,

350 
vd_ch™_∑øm
.
i_phy_video_height_mb_size
<<4,

351 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus));

352 if(
m≠_öfo
->
video_size
 =
TW_VIDEO_SIZE_USER
) {

353 
	`TW_DBG
(
TW_DBG_ERR
, "channel width or heightÉrror\n");

354 
ªt
 = -
EINVAL
;

357 if(
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË=
TW_VIDEO_STANDARD_PAL
) {

358 if(
vd_ch™_∑øm
.
i_phy_ch™_Âs
 <
MAX_FRAME_RATE_PAL
) {

359 
m≠_öfo
->
Âs
 = 
vd_ch™_∑øm
.
i_phy_ch™_Âs
;

361 
	`TW_DBG
(
TW_DBG_ERR
, "Â†%d ovîÊow, [0, %d]\n", 
vd_ch™_∑øm
.
i_phy_ch™_Âs
, 
MAX_FRAME_RATE_PAL
);

362 
ªt
 = -
EINVAL
;

366 if(
vd_ch™_∑øm
.
i_phy_ch™_Âs
 <
MAX_FRAME_RATE_NTSC
) {

367 
m≠_öfo
->
Âs
 = 
vd_ch™_∑øm
.
i_phy_ch™_Âs
;

369 
	`TW_DBG
(
TW_DBG_ERR
, "Â†%d ovîÊow, [0, %d]\n", 
vd_ch™_∑øm
.
i_phy_ch™_Âs
, 
MAX_FRAME_RATE_NTSC
);

370 
ªt
 = -
EINVAL
;

374 
m≠_öfo
++;

375 
i
 = 0; i < 
TW5864_PHY_VD_CHAN_NUMBER
; i++) {

376 if(
i
 =
vd_ch™_∑øm
.
i_phy_ch™_id
) {

379 
vd_bus
->
›
->
	`gë_phy_video_¶Ÿ_by_phy_id
(vd_bus, 
i
, &
phy_video_¶Ÿ
);

380 if(!
phy_video_¶Ÿ
) {

381 
	`TW_DBG
(
TW_DBG_ERR
, "u«bÀÅÿfödÖhy_video_¶Ÿ %d\n", 
i
);

382  -
EFAULT
;

384 
logic_video_¶Ÿ
 = 
phy_video_¶Ÿ
->
¸oss_bus_logic_video_¶Ÿ
;

385 
m≠_öfo
->
íabÀ
 = 
logic_video_¶Ÿ
->
›
->
	`gë_íabÀ¶Ÿ
(logic_video_slot);

386 
m≠_öfo
->
Âs
 = 
logic_video_¶Ÿ
->
›
->
	`gë_Âs
(logic_video_slot);

387 
m≠_öfo
->
video_size
 = 
logic_video_¶Ÿ
->
›
->
	`gë_video_size
(logic_video_slot);

388 
m≠_öfo
->
phy_¶Ÿ_id
 = 
i
;

389 
m≠_öfo
++;

392 
ªt
 = 
vd_bus
->
›
->
	`ˇlcuœã_¸oss_bus_m≠_èbÀ
(vd_bus, 
ch™_m≠_öfo
);

393 if(
ªt
) {

394 
	`TW_DBG
(
TW_DBG_ERR
, "please check configuration\n");

397 
m≠_öfo
 = 
ch™_m≠_öfo
;

398 if(
video_bus
->
›
->
	`nŸify_su•íd_logic_ch™
(video_bus)){

399 
	`TW_DBG
(
TW_DBG_FATAL
, "suspendÜogic channel failed\n");

400  -
EBUSY
;

402 
i
 = 0; i < 
TW5864_CROSS_BUS_LOGIC_VD_CHAN_NUMBER
; i++, 
m≠_öfo
++) {

403 
logic_video_¶Ÿ
 = 
vd_bus
->logic_video_¶Ÿ + 
m≠_öfo
->
m≠_logic_¶Ÿ_id
;

404 
logic_video_¶Ÿ
->
›
->
	`£t_m≠PhySlŸId
÷ogic_video_¶Ÿ, 
m≠_öfo
->
phy_¶Ÿ_id
);

405 
logic_video_¶Ÿ
->
›
->
	`£t_disˇrdTabÀ
÷ogic_video_¶Ÿ, 
m≠_öfo
->
logic_¶Ÿ_disˇrd_èbÀ
);

406 
logic_video_¶Ÿ
->
›
->
	`£t_roundTabÀSåide
÷ogic_video_¶Ÿ, 
m≠_öfo
->
roundTabÀSåide
);

407 
logic_video_¶Ÿ
->
›
->
	`£t_video_size
÷ogic_video_¶Ÿ, 
m≠_öfo
->
video_size
);

408 
logic_video_¶Ÿ
->
›
->
	`£t_íabÀ¶Ÿ
÷ogic_video_¶Ÿ, 
m≠_öfo
->
íabÀ
);

409 
logic_video_¶Ÿ
->
›
->
	`£t_Âs
÷ogic_video_¶Ÿ, 
m≠_öfo
->
Âs
);

410 
	`©omic_£t
(&
logic_video_¶Ÿ
->
√edUpd©eFœg
, 1);

411 
vd_bus
->
›
->
	`gë_phy_video_¶Ÿ_by_phy_id
(vd_bus, 
m≠_öfo
->
phy_¶Ÿ_id
, &
phy_video_¶Ÿ
);

412 
phy_video_¶Ÿ
->
›
->
	`£t_video_size
’hy_video_¶Ÿ, 
logic_video_¶Ÿ
->›->
	`gë_video_size
(logic_video_slot));

413 
phy_video_¶Ÿ
->
›
->
	`upd©e_m≠_logic_¶Ÿ
’hy_video_¶Ÿ, 
logic_video_¶Ÿ
->
logicSlŸId
,Üogic_video_slot);

415 if(
vd_bus
->
›
->
	`£t_chù_íd_¸oss_bus
(vd_bus, 
	`to_gë_chù_wôh_chù_¸oss_bus
(vd_bus))){

416 
	`TW_DBG
(
TW_DBG_FATAL
, "syncÅo hardware failed\n");

418 if(
video_bus
->
›
->
	`nŸify_ªsume_logic_ch™
(video_bus)){

419 
	`TW_DBG
(
TW_DBG_FATAL
, "resumeÜogic channel failed\n");

420  -
EBUSY
;

423 if(
video_bus
->
›
->
	`nŸify_logic_ch™_ch™ge
(video_bus)){

424 
	`TW_DBG
(
TW_DBG_FATAL
, "syncÅoÜogic channel failed\n");

425  -
EBUSY
;

427 
ªt
 = 
TW_OK
;

430 
TW_CHIP_VD_CHNL_CONFIG_GET
:

431 if(
video_bus
) {

432 
tw5864_vd_¸oss_bus_t
 *
vd_bus
;

433 
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
;

434 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

435 
tw_vd_ch™_∑øm
 
vd_ch™_∑øm
;

437 
	`c›y_‰om_u£r
(&
vd_ch™_∑øm
, (*)
¨g
, (
tw_vd_ch™_∑øm
));

438 if(
vd_ch™_∑øm
.
i_phy_ch™_id
 > 
TW5864_PHY_VD_CHAN_NUMBER
){

439 
	`TW_DBG
(
TW_DBG_ERR
, "ch™∆ênumbî %d ovîÊow\n", 
vd_ch™_∑øm
.
i_phy_ch™_id
);

440 
ªt
 = -
EINVAL
;

444 
vd_bus
 = 
video_bus
->
vd_bus_drivî
;

445 
vd_bus
->
›
->
	`gë_phy_video_¶Ÿ_by_phy_id
(vd_bus, 
vd_ch™_∑øm
.
i_phy_ch™_id
, &
phy_video_¶Ÿ
);

446 
logic_video_¶Ÿ
 = 
phy_video_¶Ÿ
->
¸oss_bus_logic_video_¶Ÿ
;

447 
vd_ch™_∑øm
.
i_phy_ch™_íabÀ
 = 
logic_video_¶Ÿ
->
›
->
	`gë_íabÀ¶Ÿ
(logic_video_slot);

448 
vd_ch™_∑øm
.
i_phy_ch™_Âs
 = 
logic_video_¶Ÿ
->
›
->
	`gë_Âs
(logic_video_slot);

449 
vd_ch™_∑øm
.
i_phy_video_width_mb_size
 = 
	`VIDEO_SIZE_TO_WIDTH
(
VIDEO_SIZE_FROM_VD
, 
logic_video_¶Ÿ
->
›
->
	`gë_video_size
(logic_video_slot),

450 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus))>>4;

451 
vd_ch™_∑øm
.
i_phy_video_height_mb_size

	`VIDEO_SIZE_TO_HEIGHT
(
VIDEO_SIZE_FROM_VD
, 
logic_video_¶Ÿ
->
›
->
	`gë_video_size
(logic_video_slot),

452 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus))>>4;

453 
vd_ch™_∑øm
.
h‹_ªvî£
 = 
logic_video_¶Ÿ
->hor_reverse;

454 
vd_ch™_∑øm
.
vî_ªvî£
 = 
logic_video_¶Ÿ
->ver_reverse;

456 
	`c›y_to_u£r
((*)
¨g
, &
vd_ch™_∑øm
, (
tw_vd_ch™_∑øm
));

458 
ªt
 = 
TW_OK
;

461 
TW_CHIP_VD_WORK_MODE_GET
:

462 if(
video_bus
) {

463 
u32
 
mode
;

464 
tw5864_vd_¸oss_bus_t
 *
vd_bus
;

466 
vd_bus
 = 
video_bus
->
vd_bus_drivî
;

467 
mode
 = 
vd_bus
->
›
->
	`gë_w‹k_mode
(vd_bus);

468 
	`c›y_to_u£r
((*)
¨g
, &
mode
, (
u32
));

469 
ªt
 = 
TW_OK
;

471 
ªt
 = -
ENOSYS
;

474 
TW_CHIP_VD_WORK_MODE_SET
:

475 if(
video_bus
) {

476 
u32
 
mode
;

477 
tw5864_vd_¸oss_bus_t
 *
vd_bus
;

479 
vd_bus
 = 
video_bus
->
vd_bus_drivî
;

480 
	`c›y_‰om_u£r
(&
mode
, (*)
¨g
, (
u32
));

482 
ªt
 = 
vd_bus
->
›
->
	`upd©e_w‹k_mode
(vd_bus, 
mode
);

483 if(
ªt
) {

484 
	`TW_DBG
(
TW_DBG_ERR
, "update work mode failed\n");

486 
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
;

487 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

488 
vd_ch™_m≠_öfo_t
 
ch™_m≠_èbÀ
[
TW5864_PHY_VD_CHAN_NUMBER
], *
ch™_m≠
;

489 
dvm_chù_t
 *
chù
 = 
NULL
;

490 
u32
 
loˇl_Âs
 = 0;

491 
i
;

493 
chù
 = 
drivî
->chip;

494 
ch™_m≠
 = 
ch™_m≠_èbÀ
;

495 if(
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË=
TW_VIDEO_STANDARD_PAL
) {

496 
loˇl_Âs
 = 25;

498 
loˇl_Âs
 = 30;

500 
vd_bus
->
›
->
	`gë_w‹k_mode
(vd_bus)){

501 
TW_CROSS_BUS_4D1_REALTIME
:

502 
i
=0; i<4; i++, 
ch™_m≠
++){

503 
ch™_m≠
->
phy_¶Ÿ_id
 = 
i
;

504 
ch™_m≠
->
Âs
 = 
loˇl_Âs
;

505 
ch™_m≠
->
video_size
 = 
TW_VIDEO_SIZE_D1
;

508 ;
i
<
TW5864_PHY_VD_CHAN_NUMBER
; i++, 
ch™_m≠
++){

509 
ch™_m≠
->
phy_¶Ÿ_id
 = 
TW5864_LOGIC_VD_INVALID
;

512 
TW_CROSS_BUS_8HÆfD1_REALTIME
:

513 
i
=0; i<8; i++, 
ch™_m≠
++){

514 
ch™_m≠
->
phy_¶Ÿ_id
 = 
i
;

515 
ch™_m≠
->
Âs
 = 
loˇl_Âs
;

516 
ch™_m≠
->
video_size
 = 
TW_VIDEO_SIZE_HALF_D1
;

518 ; 
i
 < 
TW5864_PHY_VD_CHAN_NUMBER
; i++, 
ch™_m≠
++){

519 
ch™_m≠
->
phy_¶Ÿ_id
 = 
TW5864_LOGIC_VD_INVALID
;

522 
TW_CROSS_BUS_16CIF_REALTIME
:

523 
i
=0; i<
TW5864_PHY_VD_CHAN_NUMBER
; i++, 
ch™_m≠
++){

524 
ch™_m≠
->
phy_¶Ÿ_id
 = 
i
;

525 
ch™_m≠
->
Âs
 = 
loˇl_Âs
;

526 
ch™_m≠
->
video_size
 = 
TW_VIDEO_SIZE_CIF
;

530 
TW_CROSS_BUS_UNREALTIME
:

531 
i
=0; i<
TW5864_PHY_VD_CHAN_NUMBER
; i++, 
ch™_m≠
++){

532 
logic_video_¶Ÿ
 = &
vd_bus
->logic_video_¶Ÿ[
i
];

533 
ch™_m≠
->
phy_¶Ÿ_id
 = 
logic_video_¶Ÿ
->
›
->
	`gë_m≠PhySlŸId
÷ogic_video_¶Ÿ, 
i
);

534 
ch™_m≠
->
Âs
 = 
logic_video_¶Ÿ
->
›
->
	`gë_Âs
(logic_video_slot);

535 
ch™_m≠
->
íabÀ
 = 
logic_video_¶Ÿ
->
›
->
	`gë_íabÀ¶Ÿ
(logic_video_slot);

536 
ch™_m≠
->
video_size
 = 
logic_video_¶Ÿ
->
›
->
	`gë_video_size
(logic_video_slot);

540 if(
vd_bus
->
›
->
	`ˇlcuœã_¸oss_bus_m≠_èbÀ
(vd_bus, 
ch™_m≠_èbÀ
)){

541 
	`TW_DBG
(
TW_DBG_ERR
, "calculate mapÅable failed,Ölease checkÖarameter!\n");

542  -
EINVAL
;

544 
ch™_m≠
 = 
ch™_m≠_èbÀ
;

545 if(
video_bus
->
›
->
	`nŸify_su•íd_logic_ch™
(video_bus)){

546 
	`TW_DBG
(
TW_DBG_FATAL
, "suspendÜogic channel failed\n");

547  -
EBUSY
;

549 
i
 = 0; i < 
TW5864_CROSS_BUS_LOGIC_VD_CHAN_NUMBER
; i++, 
ch™_m≠
++) {

550 if(
ch™_m≠
->
m≠_logic_¶Ÿ_id
 >
TW5864_CROSS_BUS_LOGIC_VD_CHAN_NUMBER
) {

551 
	`TW_DBG
(
TW_DBG_ERR
, "logi¯ch™√»numbî %d ovîÊow\n", 
ch™_m≠
->
m≠_logic_¶Ÿ_id
);

552  -
EINVAL
;

554 
logic_video_¶Ÿ
 = &
vd_bus
->logic_video_¶Ÿ[
ch™_m≠
->
m≠_logic_¶Ÿ_id
];

555 
logic_video_¶Ÿ
->
›
->
	`£t_m≠PhySlŸId
÷ogic_video_¶Ÿ, 
ch™_m≠
->
phy_¶Ÿ_id
);

556 
logic_video_¶Ÿ
->
›
->
	`£t_disˇrdTabÀ
÷ogic_video_¶Ÿ, 
ch™_m≠
->
logic_¶Ÿ_disˇrd_èbÀ
);

557 
logic_video_¶Ÿ
->
›
->
	`£t_roundTabÀSåide
÷ogic_video_¶Ÿ, 
ch™_m≠
->
roundTabÀSåide
);

558 
logic_video_¶Ÿ
->
›
->
	`£t_video_size
÷ogic_video_¶Ÿ, 
ch™_m≠
->
video_size
);

559 
logic_video_¶Ÿ
->
›
->
	`£t_íabÀ¶Ÿ
÷ogic_video_¶Ÿ, 
ch™_m≠
->
íabÀ
);

560 
logic_video_¶Ÿ
->
›
->
	`£t_Âs
÷ogic_video_¶Ÿ, 
ch™_m≠
->
Âs
);

561 
	`©omic_£t
(&
logic_video_¶Ÿ
->
√edUpd©eFœg
, 1);

563 
phy_video_¶Ÿ
 = &
vd_bus
->phy_video_¶Ÿ[
ch™_m≠
->
phy_¶Ÿ_id
];

564 
phy_video_¶Ÿ
->
›
->
	`£t_video_size
’hy_video_¶Ÿ, 
logic_video_¶Ÿ
->›->
	`gë_video_size
(logic_video_slot));

565 
phy_video_¶Ÿ
->
›
->
	`upd©e_m≠_logic_¶Ÿ
’hy_video_¶Ÿ, 
logic_video_¶Ÿ
->
logicSlŸId
,Üogic_video_slot);

567 if(
vd_bus
->
›
->
	`£t_chù_íd_¸oss_bus
(vd_bus, 
	`to_gë_chù_wôh_chù_¸oss_bus
(vd_bus))){

568 
	`TW_DBG
(
TW_DBG_FATAL
, "syncÅo hardware failed\n");

570 if(
video_bus
->
›
->
	`nŸify_ªsume_logic_ch™
(video_bus)){

571 
	`TW_DBG
(
TW_DBG_FATAL
, "resumeÜogic channel failed\n");

572  -
EBUSY
;

575 if(
video_bus
->
›
->
	`nŸify_logic_ch™_ch™ge
(video_bus)){

576 
	`TW_DBG
(
TW_DBG_FATAL
, "syncÅoÜogic channel failed\n");

577  -
EBUSY
;

579 
ªt
 = 
TW_OK
;

582 
ªt
 = -
ENOSYS
;

585 
TW_CHIP_VIN_CHAN_NUMBER_GET
:

587 
tw_chù_vi_öfo
 
vi_öfo
;

589 
vi_öfo
.
i_vö_ad_ch™_numbî
 = 
TW_VI_ON_CHIP_CHNL
;

590 
vi_öfo
.
i_vö_ch™_nubmî
 = 
TW5864_PHY_VD_CHAN_NUMBER
;

591 
vi_öfo
.
i_ˇsˇde_vö_ad_ch™_numbî
 = 
TW5864_PHY_VD_CHAN_NUMBER
 - 
TW_VI_ON_CHIP_CHNL
;

592 if(
¨g
) {

593 
	`c›y_to_u£r
((*)
¨g
, &
vi_öfo
, (
tw_chù_vi_öfo
));

594 
ªt
 = 
TW_OK
;

596 
	`TW_DBG
(
TW_DBG_ERR
, "arg isÇull\n");

597 
ªt
 = -
EINVAL
;

601 
TW_CHIP_VOUT_CHAN_NUMBER_GET
:

603 
tw_chù_vo_öfo
 
vo_öfo
;

605 
vo_öfo
.
i_vout_ad_ch™_numbî
 = 0;

606 
vo_öfo
.
i_vout_ch™_nubmî
 = 0;

607 if(
¨g
) {

608 
	`c›y_to_u£r
((*)
¨g
, &
vo_öfo
, (
tw_chù_vo_öfo
));

609 
ªt
 = 
TW_OK
;

611 
	`TW_DBG
(
TW_DBG_ERR
, "arg isÇull\n");

612 
ªt
 = -
EINVAL
;

616 
TW_CHIP_AIN_CHAN_NUMBER_GET
:

618 
tw_chù_ai_öfo
 
ai_öfo
;

620 
ai_öfo
.
i_aö_ad_ch™_numbî
 = 
TW_VI_ON_CHIP_CHNL
;

621 
ai_öfo
.
i_aö_ch™_nubmî
 = 
TW_AUDIO_IN_SPEAKER_ID
 + 1;

622 
ai_öfo
.
i_ˇsˇde_aö_ad_ch™_numbî
 = 0;

623 if(
¨g
) {

624 
	`c›y_to_u£r
((*)
¨g
, &
ai_öfo
, (
tw_chù_ai_öfo
));

625 
ªt
 = 
TW_OK
;

627 
	`TW_DBG
(
TW_DBG_ERR
, "arg isÇull\n");

628 
ªt
 = -
EINVAL
;

632 
TW_CHIP_AOUT_CHAN_NUMBER_GET
:

634 
tw_chù_ao_öfo
 
ao_öfo
;

636 
ao_öfo
.
i_aout_ad_ch™_numbî
 = 
TW_AUDIO_OUT_PLAYBACK_ID
 - 
TW_AUDIO_IN_SPEAKER_ID
;

637 
ao_öfo
.
i_aout_ch™_nubmî
 = 
TW_AUDIO_OUT_PLAYBACK_ID
 - 
TW_AUDIO_IN_SPEAKER_ID
;

638 if(
¨g
) {

639 
	`c›y_to_u£r
((*)
¨g
, &
ao_öfo
, (
tw_chù_ao_öfo
));

640 
ªt
 = 
TW_OK
;

642 
	`TW_DBG
(
TW_DBG_ERR
, "arg isÇull\n");

643 
ªt
 = -
EINVAL
;

647 
TW_CHIP_ID_GET
:

648 if(
drivî
) {

649 
dvm_chù_t
 *
chù
;

650 
tw_chù_id_öfo
 
chù_öfo
, *
p_öfo
 = &chip_info;

652 
chù
 = 
drivî
->chip;

653 
p_öfo
->
i_víd‹_id
 = 
chù
->
io_›
->
	`chù_ªad32
(chip, 0x0000);

654 
p_öfo
->
i_vîsi⁄_id
 = 
chù
->
io_›
->
	`chù_ªad32
(chip, 0x0004) & (~0xff);

655 if(
¨g
) {

656 
	`c›y_to_u£r
((*)
¨g
, 
p_öfo
, (
tw_chù_id_öfo
));

659 
ªt
 = 
TW_OK
;

661 
TW_CHIP_CONFIG_WRITE_REG
:

662 if(
drivî
) {

663 
tw_ªg_c⁄f
 
ªg
;

664 if(
¨g
) {

665 
__iomem
 *
vaddr
;

666 
u32
 
off£t
;

668 
	`c›y_‰om_u£r
(&
ªg
, (*)
¨g
, (
tw_ªg_c⁄f
));

669 
vaddr
 = (*)(
ªg
.
addr
 & (~(
PAGE_SIZE
 - 1)));

670 
off£t
 = 
ªg
.
addr
 & (
PAGE_SIZE
 - 1);

672 
vaddr
 = 
	`i‹em≠
((
u32
 )vaddr, 
PAGE_SIZE
);

673 if(!
vaddr
) {

674 
	`TW_DBG
(
TW_DBG_ERR
, "ioremapÉrror\n");

675 
ªt
 = -
EFAULT
;

677 
	`__øw_wrôñ
(
ªg
.
vÆ
, 
vaddr
 + 
off£t
);

678 
	`iounm≠
(
vaddr
);

679 
ªt
 = 
TW_OK
;

684 
TW_CHIP_CONFIG_READ_REG
:

685 if(
drivî
) {

686 
tw_ªg_c⁄f
 
ªg
;

687 if(
¨g
) {

688 
__iomem
 *
vaddr
;

689 
u32
 
off£t
;

691 
	`c›y_‰om_u£r
(&
ªg
, (*)
¨g
, (
tw_ªg_c⁄f
));

692 
vaddr
 = (*)(
ªg
.
addr
 & (~(
PAGE_SIZE
 - 1)));

693 
off£t
 = 
ªg
.
addr
 & (
PAGE_SIZE
 - 1);

695 
vaddr
 = 
	`i‹em≠
((
u32
 )vaddr, 
PAGE_SIZE
);

696 if(!
vaddr
) {

697 
	`TW_DBG
(
TW_DBG_ERR
, "ioremapÉrror\n");

698 
ªt
 = -
EFAULT
;

700 
ªg
.
vÆ
 = 
	`__øw_ªadl
(
vaddr
 + 
off£t
);

701 
	`c›y_to_u£r
((*)
¨g
, &
ªg
, (
tw_ªg_c⁄f
));

702 
	`iounm≠
(
vaddr
);

703 
ªt
 = 
TW_OK
;

708 
TW_CHIP_LOGIC_MAP_TABLE_SET
:

710 
tw_logic_m≠_èbÀ_t
 *
m≠_èbÀ
;

711 
èbÀ_size
 = (
tw_logic_m≠_èbÀ_t
Ë+ (*
m≠_èbÀ
->m≠_èbÀË* (
	`H264_MAX
(
TW5864_PHY_VD_CHAN_NUMBER
, 
TW_AUDIO_OUT_PLAYBACK_ID
) + 1);

713 
m≠_èbÀ
 = (
tw_logic_m≠_èbÀ_t
 *)
	`kmÆloc
(
èbÀ_size
, 
GFP_KERNEL
);

714 if(!
m≠_èbÀ
) {

715 
	`TW_DBG
(
TW_DBG_ERR
, "no memory for mapÅable\n");

716 
ªt
 = -
ENOMEM
;

719 if(
¨g
) {

720 
	`c›y_‰om_u£r
(
m≠_èbÀ
, (*)
¨g
, (
tw_logic_m≠_èbÀ_t
));

721 if((
m≠_èbÀ
->
e_böd_ty≥
 >
LOGIC_MAP_TABLE_BIND_RESERVED
) || (map_table->e_bind_type < 0)) {

722 
	`TW_DBG
(
TW_DBG_ERR
, "unknow¿e_böd_ty≥ %d\n", 
m≠_èbÀ
->
e_böd_ty≥
);

723 
ªt
 = -
EINVAL
;

725 if(
m≠_èbÀ
->
i_ch™_numbî
 > (
	`H264_MAX
(
TW5864_PHY_VD_CHAN_NUMBER
, 
TW_AUDIO_OUT_PLAYBACK_ID
) + 1)) {

726 
	`TW_DBG
(
TW_DBG_ERR
, "m∑ÅabÀ ch™√»numbî %d ovîÊow\n", 
m≠_èbÀ
->
i_ch™_numbî
);

727 
ªt
 = -
EINVAL
;

729 
tw_logic_phy_èbÀ_t
 *
logic_m≠_phy
;

732 
	`c›y_‰om_u£r
(
m≠_èbÀ
, (*)
¨g
, (
tw_logic_m≠_èbÀ_t
Ë+ (*m≠_èbÀ->m≠_èbÀË* (m≠_èbÀ->
i_ch™_numbî
));

733 
logic_m≠_phy
 = &
drivî
->logic_map_phy;

734 
logic_m≠_phy
->
›
->
	`upd©e_m≠_èbÀ
÷ogic_m≠_phy, 
m≠_èbÀ
->
e_böd_ty≥
, map_table);

736 
ªt
 = 
TW_OK
;

738 if(
m≠_èbÀ
) {

739 
	`k‰ì
(
m≠_èbÀ
);

742 
	`TW_DBG
(
TW_DBG_ERR
, "arg isÇull\n");

743 
ªt
 = -
EINVAL
;

747 
TW_CHIP_LOGIC_MAP_TABLE_GET
:

749 
tw_logic_m≠_èbÀ_t
 *
m≠_èbÀ
;

750 
èbÀ_size
 = (
tw_logic_m≠_èbÀ_t
Ë+ (*
m≠_èbÀ
->m≠_èbÀË* (
	`H264_MAX
(
TW5864_PHY_VD_CHAN_NUMBER
, 
TW_AUDIO_OUT_PLAYBACK_ID
) + 1);

752 
m≠_èbÀ
 = (
tw_logic_m≠_èbÀ_t
 *)
	`kmÆloc
(
èbÀ_size
, 
GFP_KERNEL
);

753 if(!
m≠_èbÀ
) {

754 
	`TW_DBG
(
TW_DBG_ERR
, "no memory for mapÅable\n");

755 
ªt
 = -
ENOMEM
;

758 if(
¨g
) {

759 
	`c›y_‰om_u£r
(
m≠_èbÀ
, (*)
¨g
, (
tw_logic_m≠_èbÀ_t
));

760 if((
m≠_èbÀ
->
e_böd_ty≥
 >
LOGIC_MAP_TABLE_BIND_RESERVED
) || (map_table->e_bind_type < 0)) {

761 
	`TW_DBG
(
TW_DBG_ERR
, "unknow¿e_böd_ty≥ %d\n", 
m≠_èbÀ
->
e_böd_ty≥
);

762 
ªt
 = -
EINVAL
;

764 if(
m≠_èbÀ
->
i_ch™_numbî
 > (
	`H264_MAX
(
TW5864_PHY_VD_CHAN_NUMBER
, 
TW_AUDIO_OUT_PLAYBACK_ID
) + 1)) {

765 
	`TW_DBG
(
TW_DBG_ERR
, "m∑ÅabÀ ch™√»numbî %d ovîÊow\n", 
m≠_èbÀ
->
i_ch™_numbî
);

766 
ªt
 = -
EINVAL
;

768 
tw_logic_phy_èbÀ_t
 *
logic_m≠_phy
;

770 
logic_m≠_phy
 = &
drivî
->logic_map_phy;

771 
logic_m≠_phy
->
›
->
	`gë_m≠_èbÀ
÷ogic_m≠_phy, 
m≠_èbÀ
->
e_böd_ty≥
, map_table);

772 
	`c›y_to_u£r
((*)
¨g
, 
m≠_èbÀ
, (
tw_logic_m≠_èbÀ_t
Ë+ (*m≠_èbÀ->m≠_èbÀË* (m≠_èbÀ->
i_ch™_numbî
));

774 
ªt
 = 
TW_OK
;

776 if(
m≠_èbÀ
) {

777 
	`k‰ì
(
m≠_èbÀ
);

780 
	`TW_DBG
(
TW_DBG_ERR
, "arg isÇull\n");

781 
ªt
 = -
EINVAL
;

786 
ªt
 = -
EBADRQC
;

787 
	`TW_DBG
(
TW_DBG_ERR
, "No such command!\n");

792  
ªt
;

793 
	}
}

795 
	$chù_drivî_hcd_öãrÁ˚_gë_°©e
(
ed_tcb_t
 *
›íed_c⁄åﬁ_ed
)

797 
ªt
 = 
TW_ED_UNREGISTER
;

799 if(
›íed_c⁄åﬁ_ed
 !
NULL
){

800 
ªt
 = 
	`©omic_ªad
(&
›íed_c⁄åﬁ_ed
->
°©e
);

803  
ªt
;

804 
	}
}

806 
hcd_öãrÁ˚_›î©i⁄
 
	gchù_drivî_hcd_öãrÁ˚_›
 = {

807 .
›í
 = 
chù_drivî_hcd_öãrÁ˚_›í
,

808 .
	g˛o£
 = 
chù_drivî_hcd_öãrÁ˚_˛o£
,

809 .
	gsu•íd
 = 
chù_drivî_hcd_öãrÁ˚_su•íd
,

810 .
	gªsume
 = 
chù_drivî_hcd_öãrÁ˚_ªsume
,

811 .
	gio˘l
 = 
chù_drivî_hcd_öãrÁ˚_io˘l
,

812 .
	ggë_°©e
 = 
chù_drivî_hcd_öãrÁ˚_gë_°©e
,

815 
	$video_bus_öô
(
tw_video_bus_t
 *
video_bus
, 
dvm_chù_t
 *
chù
)

817 
ªt
 = 
TW_ERR
;

819 if(
video_bus
 && 
chù
) {

820 
video_bus
->
vd_bus_drivî
 = &
chù
->
chù_vd_¸oss_bus
;

821 
video_bus
->
vj_bus_drivî
 = &
chù
->
chù_vj_bus
;

822 
video_bus
->
›
->
	`£t_video_°™d¨d
(video_bus, 
TW_VIDEO_STANDARD_NTSC
);

827 
ªt
 = 
	`öô_tw5864_vd_¸oss_bus
(&
chù
->
chù_vd_¸oss_bus
, 
TW_CROSS_BUS_UNREALTIME
, 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus));

828 if(
ªt
 !
TW_OK
) {

829 
	`TW_DBG
(
TW_DBG_ERR
, "öô vd bu†îr‹ 0x%08x\n", 
ªt
);

830  
ªt
;

833 
ªt
 = 
	`öô_tw5864_vj_bus
(&
chù
->
chù_vj_bus
);

834 if(
ªt
 !
TW_OK
) {

835 
	`TW_DBG
(
TW_DBG_ERR
, "öô vj bu†îr‹ 0x%08x\n", 
ªt
);

836  
ªt
;

839  
TW_OK
;

842  
TW_ERR
;

843 
	}
}

845 
	$video_bus_ªÀa£
(
tw_video_bus_t
 *
video_bus
)

847 if(
video_bus
) {

848 
	`ªmove_tw5864_vd_¸oss_bus
(
video_bus
->
vd_bus_drivî
);

849 
	`ªmove_tw5864_vj_bus
(
video_bus
->
vj_bus_drivî
);

851 
	}
}

853 
	$video_bus_ª£t
(
tw_video_bus_t
 *
video_bus
)

855 if(
video_bus
) {

856 
tw5864_vd_¸oss_bus_t
 *
vd_bus_drivî
 = 
video_bus
->vd_bus_driver;

857 
tw5864_vj_bus_t
 *
vj_bus_drivî
 = 
video_bus
->vj_bus_driver;

859 if(
vd_bus_drivî
->
›
) {

860 
vd_bus_drivî
->
›
->
	`ª£t
(vd_bus_driver);

863 if(
vj_bus_drivî
->
›
) {

864 
vj_bus_drivî
->
›
->
	`ª£t
(vj_bus_driver);

867  
TW_OK
;

870  
TW_ERR
;

871 
	}
}

873 
	$video_bus_gë_video_°™d¨d
(
tw_video_bus_t
 *
video_bus
)

875 if(
video_bus
) {

876  
video_bus
->
video_∑øm
.
e_video_°™d¨d
;

879  
TW_ERR
;

880 
	}
}

882 
	$video_bus_£t_video_°™d¨d
(
tw_video_bus_t
 *
video_bus
, 
video_°™d¨d
)

884 
ªt
 = 
TW_ERR
;

886 if(
video_bus
) {

887 
video_°™d¨d
) {

888 
TW_VIDEO_STANDARD_PAL
:

889 
TW_VIDEO_STANDARD_NTSC
:

890 
ªt
 = 
TW_OK
;

892 
TW_VIDEO_STANDARD_USER_DEFINE
:

894 
	`TW_DBG
(
TW_DBG_ERR
, "Thi†videÿ°™d¨d '%d'ÇŸ suµ‹t!\n", 
video_°™d¨d
);

895 
ªt
 = -
EINVAL
;

898 if(
ªt
 =
TW_OK
) {

899 
tw5864_vd_¸oss_bus_t
 *
vd_bus_drivî
;

901 
	`TW_DBG
(
TW_DBG_DEBUG
, "upd©êvideÿ°™d¨dÅÿ%d\n", 
video_°™d¨d
);

902 
video_bus
->
video_∑øm
.
e_video_°™d¨d
 = 
video_°™d¨d
;

905 
vd_bus_drivî
 = 
video_bus
->vd_bus_driver;

906 if(
vd_bus_drivî
 && vd_bus_drivî->
›
) {

907 
ªt
 = 
vd_bus_drivî
->
›
->
	`ª£t
(vd_bus_driver);

908 if(
ªt
) {

909 
	`TW_DBG
(
TW_DBG_ERR
, "ª£àvd_bu†Áûed %d\n", 
ªt
);

915  
ªt
;

916 
	}
}

918 
	$video_bus_nŸify_logic_ch™_ch™ge
(
tw_video_bus_t
 *
video_bus
)

920 
i
, 
logic_ch™_id
, 
phy_video_Âs
;

921 
tw_h264_phy_video_¶Ÿ_t
 *
phy_h264_¶Ÿ
;

922 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

923 
tw_j≥g_phy_video_¶Ÿ_t
 *
phy_j≥g_¶Ÿ
;

924 
tw_ªgi°î_èbÀ_t
 *
logic_ch™_èbÀ
;

925 
tw_ªgi°î_node_t
 *
ªgi°î_node
;

926 
ed_tcb_t
 *
logic_ch™_ed
;

928 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

929 
tw_j≥g_logic_ícode_ch™_t
 *
mjpg_logic_ícode_ch™
;

932 
phy_h264_¶Ÿ
 = 
video_bus
->
vd_bus_drivî
->
phy_video_¶Ÿ
;

933 
phy_j≥g_¶Ÿ
 = 
video_bus
->
vj_bus_drivî
->
phy_video_¶Ÿ
;

934 
i
 = 0; i < 
TW5864_PHY_VD_CHAN_NUMBER
; i++, 
phy_h264_¶Ÿ
++, 
phy_j≥g_¶Ÿ
++) {

935 
logic_ch™_èbÀ
 = &
phy_h264_¶Ÿ
->
›íed_logic_ch™_èbÀ
;

936 if(
logic_ch™_èbÀ
->
›
) {

937 
phy_video_Âs
 = 
phy_h264_¶Ÿ
->
¸oss_bus_logic_video_¶Ÿ
->
›
->
	`gë_Âs
(phy_h264_slot->cross_bus_logic_video_slot);

939 
logic_ch™_id
 = 
phy_h264_¶Ÿ
->
phy_¶Ÿ_id
;

940 
logic_ch™_id
 <<
VIDEO_MASTER_OR_SUB_FLAG_LEFT_SHIFT_NUMBER
;

941 
logic_ch™_id
 |
TW_MASTER_BITSTREAM
;

942 
logic_ch™_èbÀ
->
›
->
	`föd_ªgi°î_node_ö_èbÀ
÷ogic_ch™_èbÀ, &
ªgi°î_node
, 
logic_ch™_id
);

943 if(
ªgi°î_node
) {

944 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

945 
tw_h264_ícode_c⁄figuøti⁄_t
 
ícode_c⁄fig
, *
h264_ícode_c⁄fig
 = &encode_config;

947 
logic_ch™_ed
 = 
	`to_gë_ídpoöt_tcb_wôh_ªgi°î_node
(
ªgi°î_node
);

948 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_›íed_logic_ch™_ed
(
logic_ch™_ed
);

949 
ícode_¥›îty
 = &
h264_logic_ícode_ch™
->encode_property;

950 
ícode_c⁄åﬁ
 = &
h264_logic_ícode_ch™
->encode_control;

952 
ícode_c⁄åﬁ
->
i_¸ossbus_Âs
 = 
phy_video_Âs
;

953 
	`mem£t
(
h264_ícode_c⁄fig
, 0, (
tw_h264_ícode_c⁄figuøti⁄_t
));

954 
h264_ícode_c⁄fig
->
videoSènd¨d
 = 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus);

955 if(
video_bus
->
vd_bus_drivî
->
›
->
	`gë_w‹k_mode
(video_bus->vd_bus_drivîË=
TW_CROSS_BUS_UNREALTIME
) {

956 if(
phy_video_Âs
 < 
ícode_¥›îty
->
›
->
	`gë_èrgë_Âs
(encode_property)) {

957 
h264_ícode_c⁄fig
->
Âs
 = 
phy_video_Âs
;

959 
h264_ícode_c⁄fig
->
Âs
 = 
ícode_¥›îty
->
›
->
	`gë_èrgë_Âs
(encode_property);

962 
h264_ícode_c⁄fig
->
Âs
 = 
phy_video_Âs
;

964 
h264_ícode_c⁄fig
->
ícodeSize
 = 
phy_h264_¶Ÿ
->
›
->
	`gë_video_size
(phy_h264_slot);

965 
	`TW_DBG
(
TW_DBG_ERR
, "ch™√»%dÉncodêvideÿsizêch™gedÅÿ%d\n",
h264_logic_ícode_ch™
->
logic_ch™_id
, 
h264_ícode_c⁄fig
->
ícodeSize
);

966 
h264_ícode_c⁄fig
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
 | 
TW5864_ENCODE_CONFIG_VIDEO_STANDARD_CHANGED
 | 
TW5864_ENCODE_CONFIG_FPS_CHANGED
;

967 
ícode_¥›îty
->
›
->
	`upd©e_ícode_¥›îty
”ncode_¥›îty, 
h264_ícode_c⁄fig
);

971 
logic_ch™_id
 = 
phy_h264_¶Ÿ
->
phy_¶Ÿ_id
;

972 
logic_ch™_id
 <<
VIDEO_MASTER_OR_SUB_FLAG_LEFT_SHIFT_NUMBER
;

973 
logic_ch™_id
 |
TW_SUB_BITSTREAM
;

974 
logic_ch™_èbÀ
 = &
phy_h264_¶Ÿ
->
›íed_logic_ch™_èbÀ
;

975 
logic_ch™_èbÀ
->
›
->
	`föd_ªgi°î_node_ö_èbÀ
÷ogic_ch™_èbÀ, &
ªgi°î_node
, 
logic_ch™_id
);

976 if(
ªgi°î_node
) {

977 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

978 
tw_h264_ícode_c⁄figuøti⁄_t
 
ícode_c⁄fig
, *
h264_ícode_c⁄fig
 = &encode_config;

980 
logic_ch™_ed
 = 
	`to_gë_ídpoöt_tcb_wôh_ªgi°î_node
(
ªgi°î_node
);

981 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_›íed_logic_ch™_ed
(
logic_ch™_ed
);

982 
ícode_¥›îty
 = &
h264_logic_ícode_ch™
->encode_property;

983 
ícode_c⁄åﬁ
 = &
h264_logic_ícode_ch™
->encode_control;

985 
ícode_c⁄åﬁ
->
i_¸ossbus_Âs
 = 
phy_video_Âs
;

986 
	`mem£t
(
h264_ícode_c⁄fig
, 0, (
tw_h264_ícode_c⁄figuøti⁄_t
));

987 
h264_ícode_c⁄fig
->
videoSènd¨d
 = 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus);

988 if(
video_bus
->
vd_bus_drivî
->
›
->
	`gë_w‹k_mode
(video_bus->vd_bus_drivîË=
TW_CROSS_BUS_UNREALTIME
) {

989 if(
phy_video_Âs
 < 
ícode_¥›îty
->
›
->
	`gë_èrgë_Âs
(encode_property)) {

990 
h264_ícode_c⁄fig
->
Âs
 = 
phy_video_Âs
;

992 
h264_ícode_c⁄fig
->
Âs
 = 
ícode_¥›îty
->
›
->
	`gë_èrgë_Âs
(encode_property);

995 
h264_ícode_c⁄fig
->
Âs
 = 
phy_video_Âs
;

997 
	`TW_DBG
(
TW_DBG_ERR
, "ch™√»%dÉncodêvideÿsizêch™gedÅÿ%d\n",
h264_logic_ícode_ch™
->
logic_ch™_id
, 
h264_ícode_c⁄fig
->
ícodeSize
);

998 
h264_ícode_c⁄fig
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_VIDEO_STANDARD_CHANGED
 | 
TW5864_ENCODE_CONFIG_FPS_CHANGED
;

999 
ícode_¥›îty
->
›
->
	`upd©e_ícode_¥›îty
”ncode_¥›îty, 
h264_ícode_c⁄fig
);

1004 
logic_ch™_id
 = 
phy_j≥g_¶Ÿ
->
phy_¶Ÿ_id
;

1005 
logic_ch™_èbÀ
 = &
phy_j≥g_¶Ÿ
->logic_chan_table;

1006 if(
logic_ch™_èbÀ
->
›
) {

1007 
logic_ch™_èbÀ
->
›
->
	`föd_ªgi°î_node_ö_èbÀ
÷ogic_ch™_èbÀ, &
ªgi°î_node
, 
logic_ch™_id
);

1008 if(
ªgi°î_node
) {

1009 
tw_j≥g_ícode_¥›îty_t
 *
ícode_¥›îty
;

1010 
tw_mj≥g_ícode_∑øm_t
 *
j≥g_ícode_c⁄fig
;

1012 
logic_ch™_ed
 = 
	`to_gë_ídpoöt_tcb_wôh_ªgi°î_node
(
ªgi°î_node
);

1013 
mjpg_logic_ícode_ch™
 = 
	`to_gë_tw_j≥g_ícode_ch™_wôh_logic_ch™_ed
(
logic_ch™_ed
);

1014 
ícode_¥›îty
 = &
mjpg_logic_ícode_ch™
->encode_property;

1015 
j≥g_ícode_c⁄fig
 = &
ícode_¥›îty
->encode_property;

1016 
j≥g_ícode_c⁄fig
->
ch™ge_mask_Êag
 |
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_IMAGE_WIDTH_MASK
 | 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_IMAGE_HEIGHT_MASK
;

1021  
TW_OK
;

1022 
	}
}

1024 
	$video_bus_nŸify_su•íd_logic_ch™
(
tw_video_bus_t
 *
video_bus
)

1026 if(
video_bus
) {

1027 
i
, 
logic_ch™_id
;

1028 
tw_h264_phy_video_¶Ÿ_t
 *
phy_h264_¶Ÿ
;

1029 
tw_ªgi°î_èbÀ_t
 *
logic_ch™_èbÀ
;

1030 
tw_ªgi°î_node_t
 *
ªgi°î_node
;

1031 
ed_tcb_t
 *
logic_ch™_ed
;

1034 
phy_h264_¶Ÿ
 = 
video_bus
->
vd_bus_drivî
->
phy_video_¶Ÿ
;

1035 
i
 = 0; i < 
TW5864_PHY_VD_CHAN_NUMBER
; i++, 
phy_h264_¶Ÿ
++) {

1036 
logic_ch™_èbÀ
 = &
phy_h264_¶Ÿ
->
›íed_logic_ch™_èbÀ
;

1037 if(
logic_ch™_èbÀ
->
›
) {

1039 
logic_ch™_id
 = 
phy_h264_¶Ÿ
->
phy_¶Ÿ_id
;

1040 
logic_ch™_id
 <<
VIDEO_MASTER_OR_SUB_FLAG_LEFT_SHIFT_NUMBER
;

1041 
logic_ch™_id
 |
TW_MASTER_BITSTREAM
;

1042 
logic_ch™_èbÀ
->
›
->
	`föd_ªgi°î_node_ö_èbÀ
÷ogic_ch™_èbÀ, &
ªgi°î_node
, 
logic_ch™_id
);

1043 if(
ªgi°î_node
) {

1044 
logic_ch™_ed
 = 
	`to_gë_ídpoöt_tcb_wôh_ªgi°î_node
(
ªgi°î_node
);

1048 
logic_ch™_id
 = 
phy_h264_¶Ÿ
->
phy_¶Ÿ_id
;

1049 
logic_ch™_id
 <<
VIDEO_MASTER_OR_SUB_FLAG_LEFT_SHIFT_NUMBER
;

1050 
logic_ch™_id
 |
TW_SUB_BITSTREAM
;

1051 
logic_ch™_èbÀ
 = &
phy_h264_¶Ÿ
->
›íed_logic_ch™_èbÀ
;

1052 
logic_ch™_èbÀ
->
›
->
	`föd_ªgi°î_node_ö_èbÀ
÷ogic_ch™_èbÀ, &
ªgi°î_node
, 
logic_ch™_id
);

1053 if(
ªgi°î_node
) {

1054 
logic_ch™_ed
 = 
	`to_gë_ídpoöt_tcb_wôh_ªgi°î_node
(
ªgi°î_node
);

1060  
TW_OK
;

1063  -
EINVAL
;

1064 
	}
}

1066 
	$video_bus_nŸify_ªsume_logic_ch™
(
tw_video_bus_t
 *
video_bus
)

1068 if(
video_bus
) {

1069 
i
, 
logic_ch™_id
;

1070 
tw_h264_phy_video_¶Ÿ_t
 *
phy_h264_¶Ÿ
;

1071 
tw_ªgi°î_èbÀ_t
 *
logic_ch™_èbÀ
;

1072 
tw_ªgi°î_node_t
 *
ªgi°î_node
;

1073 
ed_tcb_t
 *
logic_ch™_ed
;

1076 
phy_h264_¶Ÿ
 = 
video_bus
->
vd_bus_drivî
->
phy_video_¶Ÿ
;

1077 
i
 = 0; i < 
TW5864_PHY_VD_CHAN_NUMBER
; i++, 
phy_h264_¶Ÿ
++) {

1079 
logic_ch™_id
 = 
phy_h264_¶Ÿ
->
phy_¶Ÿ_id
;

1080 
logic_ch™_id
 <<
VIDEO_MASTER_OR_SUB_FLAG_LEFT_SHIFT_NUMBER
;

1081 
logic_ch™_id
 |
TW_MASTER_BITSTREAM
;

1082 
logic_ch™_èbÀ
 = &
phy_h264_¶Ÿ
->
›íed_logic_ch™_èbÀ
;

1083 if(
logic_ch™_èbÀ
->
›
) {

1084 
logic_ch™_èbÀ
->
›
->
	`föd_ªgi°î_node_ö_èbÀ
÷ogic_ch™_èbÀ, &
ªgi°î_node
, 
logic_ch™_id
);

1085 if(
ªgi°î_node
) {

1089 
logic_ch™_ed
 = 
	`to_gë_ídpoöt_tcb_wôh_ªgi°î_node
(
ªgi°î_node
);

1093 
logic_ch™_id
 = 
phy_h264_¶Ÿ
->
phy_¶Ÿ_id
;

1094 
logic_ch™_id
 <<
VIDEO_MASTER_OR_SUB_FLAG_LEFT_SHIFT_NUMBER
;

1095 
logic_ch™_id
 |
TW_SUB_BITSTREAM
;

1096 
logic_ch™_èbÀ
 = &
phy_h264_¶Ÿ
->
›íed_logic_ch™_èbÀ
;

1097 
logic_ch™_èbÀ
->
›
->
	`föd_ªgi°î_node_ö_èbÀ
÷ogic_ch™_èbÀ, &
ªgi°î_node
, 
logic_ch™_id
);

1098 if(
ªgi°î_node
) {

1099 
logic_ch™_ed
 = 
	`to_gë_ídpoöt_tcb_wôh_ªgi°î_node
(
ªgi°î_node
);

1105  
TW_OK
;

1108  -
EINVAL
;

1109 
	}
}

1111 
video_bus_›î©i⁄
 
	gvideo_bus_›
 = {

1112 .
öô
 = 
video_bus_öô
,

1113 .
	gªÀa£
 = 
video_bus_ªÀa£
,

1114 .
	gª£t
 = 
video_bus_ª£t
,

1116 .
	ggë_video_°™d¨d
 = 
video_bus_gë_video_°™d¨d
,

1117 .
	g£t_video_°™d¨d
 = 
video_bus_£t_video_°™d¨d
,

1118 .
	gnŸify_logic_ch™_ch™ge
 = 
video_bus_nŸify_logic_ch™_ch™ge
,

1119 .
	gnŸify_su•íd_logic_ch™
 = 
video_bus_nŸify_su•íd_logic_ch™
,

1120 .
	gnŸify_ªsume_logic_ch™
 = 
video_bus_nŸify_ªsume_logic_ch™
,

1123 
	$öô_video_bus
(
tw_video_bus_t
 *
video_bus
, 
dvm_chù_t
 *
chù
)

1125 if(
video_bus
 && 
chù
) {

1126 
video_bus
->
›
 = &
video_bus_›
;

1127  
video_bus
->
›
->
	`öô
(video_bus, 
chù
);

1130  
TW_ERR
;

1131 
	}
}

1133 
	$audio_bus_öô
(
tw_audio_bus_t
 *
audio_bus
, 
dvm_chù_t
 *
chù
)

1135 
ªt
 = 
TW_ERR
;

1137 if(
audio_bus
 && 
chù
) {

1138 
audio_bus
->
chù_audio_drivî
 = &
chù
->
chù_audio
;

1140 
ªt
 = 
	`öô_chù_audio
(&
chù
->
chù_audio
, chù, chù->
bus_id
);

1141 if(
ªt
 !
TW_OK
) {

1142 
	`TW_DBG
(
TW_DBG_ERR
, "öôáudiÿîr‹ 0x%08x\n", 
ªt
);

1143  
ªt
;

1146  
TW_OK
;

1149  
TW_ERR
;

1150 
	}
}

1152 
	$audio_bus_ªÀa£
(
tw_audio_bus_t
 *
audio_bus
)

1154 if(
audio_bus
) {

1155 
	`ªmove_chù_audio
(
audio_bus
->
chù_audio_drivî
);

1157 
	}
}

1159 
	$audio_bus_ª£t
(
tw_audio_bus_t
 *
audio_bus
)

1161 if(
audio_bus
) {

1162  
TW_OK
;

1165  
TW_ERR
;

1166 
	}
}

1168 
audio_bus_›î©i⁄
 
	gaudio_bus_›
 = {

1169 .
öô
 = 
audio_bus_öô
,

1170 .
	gªÀa£
 = 
audio_bus_ªÀa£
,

1171 .
	gª£t
 = 
audio_bus_ª£t
,

1174 
	$öô_audio_bus
(
tw_audio_bus_t
 *
audio_bus
, 
dvm_chù_t
 *
chù
)

1176 if(
audio_bus
 && 
chù
) {

1177 
audio_bus
->
›
 = &
audio_bus_›
;

1178  
audio_bus
->
›
->
	`öô
◊udio_bus, 
chù
);

1181  
TW_ERR
;

1182 
	}
}

1184 
	$tw_logic_phy_m≠_èbÀ_öô
(
tw_logic_phy_èbÀ_t
 *
èbÀ
)

1186 if(
èbÀ
) {

1187 
ty≥
, 
i
;

1188 
tw_logic_m≠_èbÀ_t
 *
logic_èlbe
;

1190 
	`•ö_lock_öô
(&
èbÀ
->
lock
);

1191 
ty≥
 = 0;Åy≥ < 
LOGIC_MAP_TABLE_BIND_RESERVED
;Åype++) {

1192 
logic_èlbe
 = (
tw_logic_m≠_èbÀ_t
 *)
	`kmÆloc
((tw_logic_map_table_t)

1193 + (*
logic_èlbe
->
m≠_èbÀ
Ë* (
	`H264_MAX
(
TW5864_PHY_VD_CHAN_NUMBER
, 
TW_AUDIO_OUT_PLAYBACK_ID
) + 1),

1194 
GFP_KERNEL
);

1195 if(!
logic_èlbe
) {

1196 
	`TW_DBG
(
TW_DBG_ERR
, "no memory forÜogic mapÅable\n");

1197 
îr‹_ªÀa£
;

1199 
logic_èlbe
->
e_böd_ty≥
 = 
ty≥
;

1200 
logic_èlbe
->
i_ch™_numbî
 = 
	`H264_MAX
(
TW5864_PHY_VD_CHAN_NUMBER
, 
TW_AUDIO_OUT_PLAYBACK_ID
) + 1;

1201 
i
 = 0; i < 
logic_èlbe
->
i_ch™_numbî
; i++) {

1202 
logic_èlbe
->
m≠_èbÀ
[
i
].
logic_¶Ÿ_id
 = i;

1203 
logic_èlbe
->
m≠_èbÀ
[
i
].
phy_¶Ÿ_id
 = i;

1205 
èbÀ
->
logic_èlbe
[
ty≥
] =Üogic_talbe;

1208  
TW_OK
;

1210 
îr‹_ªÀa£
:

1211 if(
èbÀ
->
›
->
ªÀa£
) {

1212 
èbÀ
->
›
->
	`ªÀa£
(table);

1215  
TW_ERR
;

1216 
	}
}

1218 
	$tw_logic_phy_m≠_èbÀ_ª£t
(
tw_logic_phy_èbÀ_t
 *
èbÀ
)

1220 if(
èbÀ
) {

1221 
ty≥
, 
i
;

1222 
Êags
;

1223 
tw_logic_m≠_èbÀ_t
 *
logic_èlbe
;

1225 
	`•ö_lock_úqßve
(&
èbÀ
->
lock
, 
Êags
);

1226 
ty≥
 = 0;Åy≥ < 
LOGIC_MAP_TABLE_BIND_RESERVED
;Åype++) {

1227 
logic_èlbe
 = 
èbÀ
->logic_èlbe[
ty≥
];

1228 
logic_èlbe
->
e_böd_ty≥
 = 
ty≥
;

1229 
logic_èlbe
->
i_ch™_numbî
 = 
	`H264_MAX
(
TW5864_PHY_VD_CHAN_NUMBER
, 
TW_AUDIO_OUT_PLAYBACK_ID
) + 1;

1230 
i
 = 0; i < 
logic_èlbe
->
i_ch™_numbî
; i++) {

1231 
logic_èlbe
->
m≠_èbÀ
[
i
].
logic_¶Ÿ_id
 = i;

1232 
logic_èlbe
->
m≠_èbÀ
[
i
].
phy_¶Ÿ_id
 = i;

1235 
	`•ö_u∆ock_úqª°‹e
(&
èbÀ
->
lock
, 
Êags
);

1237  
TW_OK
;

1240  
TW_ERR
;

1241 
	}
}

1243 
	$tw_logic_phy_m≠_èbÀ_ªÀa£
(
tw_logic_phy_èbÀ_t
 *
èbÀ
)

1245 if(
èbÀ
) {

1246 
ty≥
;

1247 
Êags
;

1248 
tw_logic_m≠_èbÀ_t
 *
logic_èbÀ
;

1250 
	`•ö_lock_úqßve
(&
èbÀ
->
lock
, 
Êags
);

1251 
ty≥
 = 0;Åy≥ < 
LOGIC_MAP_TABLE_BIND_RESERVED
;Åype++) {

1252 
logic_èbÀ
 = 
èbÀ
->
logic_èlbe
[
ty≥
];

1253 if(
logic_èbÀ
) {

1254 
	`k‰ì
(
logic_èbÀ
);

1256 
èbÀ
->
logic_èlbe
[
ty≥
] = 
NULL
;

1258 
	`•ö_u∆ock_úqª°‹e
(&
èbÀ
->
lock
, 
Êags
);

1260  
TW_OK
;

1263  
TW_ERR
;

1264 
	}
}

1266 
	$tw_logic_phy_m≠_èbÀ_föd_logic_by_phy
(
tw_logic_phy_èbÀ_t
 *
èbÀ
, 
LOGIC_MAP_TABLE_TYPE
 
ty≥
, 
u32
 
phy_¶Ÿ_id
, u32 *
logic_¶Ÿ_id
)

1268 if(
èbÀ
 && 
logic_¶Ÿ_id
) {

1269 
i
;

1270 
Êags
;

1271 
tw_logic_m≠_èbÀ_t
 *
logic_èbÀ
;

1273 if((
ty≥
 < 0Ë|| (ty≥ >
LOGIC_MAP_TABLE_BIND_RESERVED
)) {

1274 
	`TW_DBG
(
TW_DBG_ERR
, "m≠ÅabÀÅy≥ %dÉº‹\n", 
ty≥
);

1275  -
EINVAL
;

1278 
logic_èbÀ
 = 
èbÀ
->
logic_èlbe
[
ty≥
];

1279 if(
phy_¶Ÿ_id
 >
logic_èbÀ
->
i_ch™_numbî
) {

1280 
	`TW_DBG
(
TW_DBG_ERR
, "phy slŸ id %d ovîÊow\n", 
phy_¶Ÿ_id
);

1281  -
EINVAL
;

1283 
	`•ö_lock_úqßve
(&
èbÀ
->
lock
, 
Êags
);

1284 
i
 = 0; i < 
logic_èbÀ
->
i_ch™_numbî
; i++) {

1285 if(
logic_èbÀ
->
m≠_èbÀ
[
i
].
phy_¶Ÿ_id
 ==Öhy_slot_id) {

1286 *
logic_¶Ÿ_id
 = 
logic_èbÀ
->
m≠_èbÀ
[
i
].logic_slot_id;

1287 
	`•ö_u∆ock_úqª°‹e
(&
èbÀ
->
lock
, 
Êags
);

1288  
TW_OK
;

1291 
	`•ö_u∆ock_úqª°‹e
(&
èbÀ
->
lock
, 
Êags
);

1292 
	`TW_DBG
(
TW_DBG_ERR
, "nÿsuchÖhy_¶Ÿ_id = %d, i¿èbÀÅy≥ %d\n", 
phy_¶Ÿ_id
, 
ty≥
);

1293  -
ENODATA
;

1296 
	`TW_DBG
(
TW_DBG_ERR
, "nullÖointer\n");

1298  
TW_ERR
;

1299 
	}
}

1301 
	$tw_logic_phy_m≠_èbÀ_föd_phy_by_logic
(
tw_logic_phy_èbÀ_t
 *
èbÀ
, 
LOGIC_MAP_TABLE_TYPE
 
ty≥
, 
u32
 
logic_¶Ÿ_id
, u32 *
phy_¶Ÿ_id
)

1303 if(
èbÀ
 && 
phy_¶Ÿ_id
) {

1304 
i
;

1305 
Êags
;

1306 
tw_logic_m≠_èbÀ_t
 *
logic_èbÀ
;

1308 if((
ty≥
 < 0Ë|| (ty≥ >
LOGIC_MAP_TABLE_BIND_RESERVED
)) {

1309 
	`TW_DBG
(
TW_DBG_ERR
, "m≠ÅabÀÅy≥ %dÉº‹\n", 
ty≥
);

1310  -
EINVAL
;

1313 
logic_èbÀ
 = 
èbÀ
->
logic_èlbe
[
ty≥
];

1314 if(
logic_¶Ÿ_id
 >
logic_èbÀ
->
i_ch™_numbî
) {

1315 
	`TW_DBG
(
TW_DBG_ERR
, "phy slŸ id %d ovîÊow\n", 
logic_¶Ÿ_id
);

1316  -
EINVAL
;

1318 
	`•ö_lock_úqßve
(&
èbÀ
->
lock
, 
Êags
);

1319 
i
 = 0; i < 
logic_èbÀ
->
i_ch™_numbî
; i++) {

1320 if(
logic_èbÀ
->
m≠_èbÀ
[
i
].
logic_¶Ÿ_id
 ==Üogic_slot_id) {

1321 *
phy_¶Ÿ_id
 = 
logic_èbÀ
->
m≠_èbÀ
[
i
].phy_slot_id;

1322 
	`•ö_u∆ock_úqª°‹e
(&
èbÀ
->
lock
, 
Êags
);

1323  
TW_OK
;

1326 
	`•ö_u∆ock_úqª°‹e
(&
èbÀ
->
lock
, 
Êags
);

1327 
	`TW_DBG
(
TW_DBG_ERR
, "nÿsuchÜogic_¶Ÿ_id = %d, i¿èbÀÅy≥ %d\n", 
logic_¶Ÿ_id
, 
ty≥
);

1328  -
ENODATA
;

1331 
	`TW_DBG
(
TW_DBG_ERR
, "nullÖointer\n");

1333  
TW_ERR
;

1334 
	}
}

1336 
	$tw_logic_phy_m≠_èbÀ_upd©e_m≠_èbÀ
(
tw_logic_phy_èbÀ_t
 *
èbÀ
, 
LOGIC_MAP_TABLE_TYPE
 
ty≥
, 
tw_logic_m≠_èbÀ_t
 *
√w_logic_èbÀ
)

1338 if(
èbÀ
 && 
√w_logic_èbÀ
) {

1339 
i
, 
j
;

1340 
Êags
;

1341 
tw_logic_m≠_èbÀ_t
 *
logic_èbÀ
;

1343 if((
ty≥
 < 0Ë|| (ty≥ >
LOGIC_MAP_TABLE_BIND_RESERVED
)) {

1344 
	`TW_DBG
(
TW_DBG_ERR
, "m≠ÅabÀÅy≥ %dÉº‹\n", 
ty≥
);

1345  -
EINVAL
;

1347 if(
√w_logic_èbÀ
->
i_ch™_numbî
 > (
	`H264_MAX
(
TW5864_PHY_VD_CHAN_NUMBER
, 
TW_AUDIO_OUT_PLAYBACK_ID
) + 1)) {

1348 
	`TW_DBG
(
TW_DBG_ERR
, "öpuàlogi¯ch™√»numbî %d ovîÊow\n", 
√w_logic_èbÀ
->
i_ch™_numbî
);

1349  -
EINVAL
;

1352 
i
 = 0; i < 
√w_logic_èbÀ
->
i_ch™_numbî
; i++) {

1353 
j
 = 0; j < 
√w_logic_èbÀ
->
i_ch™_numbî
; j++) {

1354 if((
i
 !
j
Ë&& (
√w_logic_èbÀ
->
m≠_èbÀ
[i].
logic_¶Ÿ_id
 ==Çew_logic_table->map_table[j].logic_slot_id)) {

1355 
	`TW_DBG
(
TW_DBG_ERR
, "ª≥©Üogic_¶Ÿ_id %d\n", 
√w_logic_èbÀ
->
m≠_èbÀ
[
i
].
logic_¶Ÿ_id
);

1356  -
EINVAL
;

1360 
i
 = 0; i < 
√w_logic_èbÀ
->
i_ch™_numbî
; i++) {

1361 
j
 = 0; j < 
√w_logic_èbÀ
->
i_ch™_numbî
; j++) {

1362 if((
i
 !
j
Ë&& (
√w_logic_èbÀ
->
m≠_èbÀ
[i].
phy_¶Ÿ_id
 ==Çew_logic_table->map_table[j].phy_slot_id)) {

1363 
	`TW_DBG
(
TW_DBG_ERR
, "ª≥©Öhy_¶Ÿ_id %d\n", 
√w_logic_èbÀ
->
m≠_èbÀ
[
i
].
phy_¶Ÿ_id
);

1364  -
EINVAL
;

1369 
	`•ö_lock_úqßve
(&
èbÀ
->
lock
, 
Êags
);

1370 
logic_èbÀ
 = 
èbÀ
->
logic_èlbe
[
ty≥
];

1371 
logic_èbÀ
->
i_ch™_numbî
 = 
√w_logic_èbÀ
->i_chan_number;

1372 
i
 = 0; i < 
logic_èbÀ
->
i_ch™_numbî
; i++) {

1373 
logic_èbÀ
->
m≠_èbÀ
[
i
].
logic_¶Ÿ_id
 = 
√w_logic_èbÀ
->map_table[i].logic_slot_id;

1374 
logic_èbÀ
->
m≠_èbÀ
[
i
].
phy_¶Ÿ_id
 = 
√w_logic_èbÀ
->map_table[i].phy_slot_id;

1376 
	`•ö_u∆ock_úqª°‹e
(&
èbÀ
->
lock
, 
Êags
);

1378  
TW_OK
;

1381 
	`TW_DBG
(
TW_DBG_ERR
, "nullÖointer\n");

1383  
TW_ERR
;

1384 
	}
}

1387 
	$tw_logic_phy_m≠_èbÀ_gë_m≠_èbÀ
(
tw_logic_phy_èbÀ_t
 *
èbÀ
, 
LOGIC_MAP_TABLE_TYPE
 
ty≥
, 
tw_logic_m≠_èbÀ_t
 *
√w_logic_èbÀ
)

1389 if(
èbÀ
 && 
√w_logic_èbÀ
) {

1390 
i
;

1391 
Êags
;

1392 
tw_logic_m≠_èbÀ_t
 *
logic_èbÀ
;

1394 if((
ty≥
 < 0Ë|| (ty≥ >
LOGIC_MAP_TABLE_BIND_RESERVED
)) {

1395 
	`TW_DBG
(
TW_DBG_ERR
, "m≠ÅabÀÅy≥ %dÉº‹\n", 
ty≥
);

1396  -
EINVAL
;

1398 if(
√w_logic_èbÀ
->
i_ch™_numbî
 > (
	`H264_MAX
(
TW5864_PHY_VD_CHAN_NUMBER
, 
TW_AUDIO_OUT_PLAYBACK_ID
) + 1)) {

1399 
	`TW_DBG
(
TW_DBG_ERR
, "öpuàlogi¯ch™√»numbî %d ovîÊow\n", 
√w_logic_èbÀ
->
i_ch™_numbî
);

1400  -
EINVAL
;

1403 
	`•ö_lock_úqßve
(&
èbÀ
->
lock
, 
Êags
);

1404 
logic_èbÀ
 = 
èbÀ
->
logic_èlbe
[
ty≥
];

1405 
logic_èbÀ
->
i_ch™_numbî
 = 
√w_logic_èbÀ
->i_chan_number;

1406 
i
 = 0; i < 
logic_èbÀ
->
i_ch™_numbî
; i++) {

1407 
√w_logic_èbÀ
->
m≠_èbÀ
[
i
].
logic_¶Ÿ_id
 = 
logic_èbÀ
->map_table[i].logic_slot_id;

1408 
√w_logic_èbÀ
->
m≠_èbÀ
[
i
].
phy_¶Ÿ_id
 = 
logic_èbÀ
->map_table[i].phy_slot_id;

1410 
	`•ö_u∆ock_úqª°‹e
(&
èbÀ
->
lock
, 
Êags
);

1412  
TW_OK
;

1415 
	`TW_DBG
(
TW_DBG_ERR
, "nullÖointer\n");

1417  
TW_ERR
;

1418 
	}
}

1420 
tw_logic_phy_›î©i⁄_t
 
	gtw_logic_phy_›î©i⁄_›s
 = {

1421 .
öô
 = 
tw_logic_phy_m≠_èbÀ_öô
,

1422 .
	gª£t
 = 
tw_logic_phy_m≠_èbÀ_ª£t
,

1423 .
	gªÀa£
 = 
tw_logic_phy_m≠_èbÀ_ªÀa£
,

1425 .
	gföd_logic_by_phy
 = 
tw_logic_phy_m≠_èbÀ_föd_logic_by_phy
,

1426 .
	gföd_phy_by_logic
 = 
tw_logic_phy_m≠_èbÀ_föd_phy_by_logic
,

1427 .
	gupd©e_m≠_èbÀ
 = 
tw_logic_phy_m≠_èbÀ_upd©e_m≠_èbÀ
,

1428 .
	ggë_m≠_èbÀ
 = 
tw_logic_phy_m≠_èbÀ_gë_m≠_èbÀ
,

1431 
	$chù_drivî_nŸify
(
tw_ªgi°î_node_t
 *
node
, *
¥iv
, 
tw_nŸify_msg
 *
msg
)

1433 if((
node
!=
NULL
Ë&& (
¥iv
!=NULL)){

1436 
	}
}

1438 
	$chù_drivî_m©ch_ªgsôî_node_¥iv_id
(
tw_ªgi°î_node_t
 *
node
, *
¥iv
, 
id
)

1440 if(
node
 && 
¥iv
) {

1441  
TW_OK
;

1444  
TW_ERR
;

1445 
	}
}

1447 
	$chù_drivî_öô
(
chù_drivî_t
 *
drivî
)

1449 
ªt
 = 
TW_ERR
;

1451 if(
drivî
) {

1452 
dvm_chù_t
 *
chù
;

1453 
tw_video_bus_t
 *
video_bus
;

1454 
tw_audio_bus_t
 *
audio_bus
;

1455 
tw_logic_phy_èbÀ_t
 *
m≠_èbÀ
;

1456 
ed_tcb_t
 *
ed
;

1458 
chù
 = 
drivî
->chip;

1460 
video_bus
 = &
drivî
->video_bus;

1461 
audio_bus
 = &
drivî
->audio_bus;

1462 
ed
 = &
drivî
->
›íed_c⁄åﬁ_ed
;

1464 
	`©omic_£t
(&
drivî
->
›íed_Êag
, 0);

1465 
	`öô_ídpoöt_tcb
(
ed
, 
chù
->
bus_id
, chù->
chù_id
,

1466 
TW_ED_CONTROL
, 0, 0,

1467 
drivî
, 
chù_drivî_nŸify
,

1468 
chù_drivî_m©ch_ªgsôî_node_¥iv_id
, 
NULL
);

1470 
ed
->
›
 = &
chù_drivî_hcd_öãrÁ˚_›
;

1471 
ªt
 = 
	`öô_audio_bus
(
audio_bus
, 
chù
);

1472 if(
ªt
 !
TW_OK
) {

1473 
	`TW_DBG
(
TW_DBG_ERR
, "öôáudiÿbu†îr‹ 0x%08x\n", 
ªt
);

1474  
ªt
;

1477 
ªt
 = 
	`öô_video_bus
(
video_bus
, 
chù
);

1478 if(
ªt
 !
TW_OK
) {

1479 
	`TW_DBG
(
TW_DBG_ERR
, "öô videÿbu†îr‹ 0x%08x\n", 
ªt
);

1480  
ªt
;

1482 
m≠_èbÀ
 = &
drivî
->
logic_m≠_phy
;

1483 
m≠_èbÀ
->
›
 = &
tw_logic_phy_›î©i⁄_›s
;

1484 
m≠_èbÀ
->
›
->
	`öô
(map_table);

1486  
TW_OK
;

1489  
TW_ERR
;

1490 
	}
}

1492 
	$chù_drivî_ªÀa£
(
chù_drivî_t
 *
drivî
)

1494 if(
drivî
) {

1495 
tw_video_bus_t
 *
video_bus
;

1496 
tw_audio_bus_t
 *
audio_bus
;

1497 
tw_logic_phy_èbÀ_t
 *
m≠_èbÀ
;

1499 
video_bus
 = &
drivî
->video_bus;

1500 
audio_bus
 = &
drivî
->audio_bus;

1501 
m≠_èbÀ
 = &
drivî
->
logic_m≠_phy
;

1503 if(
video_bus
->
›
) {

1504 
video_bus
->
›
->
	`ªÀa£
(video_bus);

1506 if(
audio_bus
->
›
) {

1507 
audio_bus
->
›
->
	`ªÀa£
(audio_bus);

1509 if(
m≠_èbÀ
->
›
) {

1510 
m≠_èbÀ
->
›
->
	`ªÀa£
(map_table);

1513 
	}
}

1515 
	$chù_drivî_ª£t
(
chù_drivî_t
 *
drivî
)

1517 
ªt
 = 
TW_ERR
;

1518 if(
drivî
) {

1519 
tw_video_bus_t
 *
video_bus
;

1520 
tw_audio_bus_t
 *
audio_bus
;

1521 
tw_logic_phy_èbÀ_t
 *
m≠_èbÀ
;

1523 
video_bus
 = &
drivî
->video_bus;

1524 
audio_bus
 = &
drivî
->audio_bus;

1525 
m≠_èbÀ
 = &
drivî
->
logic_m≠_phy
;

1527 if(
video_bus
->
›
) {

1528 
ªt
 = 
video_bus
->
›
->
	`ª£t
(video_bus);

1529 if(
ªt
) {

1530 
	`TW_DBG
(
TW_DBG_ERR
, "reset video bus failed\n");

1531  
ªt
;

1535 if(
audio_bus
->
›
) {

1536 
ªt
 = 
audio_bus
->
›
->
	`ª£t
(audio_bus);

1537 if(
ªt
) {

1538 
	`TW_DBG
(
TW_DBG_ERR
, "resetáudio bus failed\n");

1539  
ªt
;

1542 if(
m≠_èbÀ
->
›
) {

1543 
m≠_èbÀ
->
›
->
	`ª£t
(map_table);

1547  
ªt
;

1548 
	}
}

1550 
chù_drivî_›î©i⁄
 
	gchù_drivî_›
 = {

1551 .
öô
 = 
chù_drivî_öô
,

1552 .
	gªÀa£
 = 
chù_drivî_ªÀa£
,

1553 .
	gª£t
 = 
chù_drivî_ª£t
,

1556 
	$öô_chù_drivî
(
tw_chù_devi˚
 * 
tcd
, 
tw_chù_drivî
 * 
drv
)

1558 
ªt
 = 0;

1559 
dvm_chù_t
 *
chù
 = 
	`tcd_¥iv
(
tcd
);

1560 
chù_drivî_t
 *
drivî
;

1562 
tc_åa˚
;

1563 
drivî
 = (
chù_drivî_t
 *)
	`kmÆloc
((chù_drivî_t),
GFP_KERNEL
);

1564 if(
drivî
) {

1565 if(
chù
) {

1566 
drivî
->
chù
 = chip;

1567 
drivî
->
›
 = &
chù_drivî_›
;

1568 
chù
->
chù_drivî
 = 
drivî
;

1570 
ªt
 = 
drivî
->
›
->
	`öô
(driver);

1571 if(
ªt
){

1572 
	`¥ötk
("error while init!\n");

1573  -
ENOMEM
;

1575 
tcd
->
≥d
 = &
drivî
->
›íed_c⁄åﬁ_ed
;

1576  
TW_OK
;

1578 
	`TW_DBG
(
TW_DBG_ERR
, "nullÖointer\n");

1579  -
EINVAL
;

1582 
	`TW_DBG
(
TW_DBG_ERR
, "no memory\n");

1583  -
ENOMEM
;

1586  
TW_ERR
;

1587 
	}
}

1589 
	$ªmove_chù_drivî
(
tw_chù_devi˚
 * 
tcd
, 
tw_chù_drivî
 * 
drv
)

1591 
chù_drivî_t
 *
drivî
;

1593 if(
tcd
 &&Åcd->
≥d
) {

1594 
drivî
 = 
	`to_gë_chù_drivî_wôh_›íed_logic_ch™_ed
(
tcd
->
≥d
);

1595 
drivî
->
›
->
	`ªÀa£
(driver);

1596 
	`k‰ì
(
drivî
);

1597 
tcd
->
≥d
 = 
NULL
;

1599 
	}
}

1616 
	$chù5864_©èch
(
tw_chù_drivî
 *
drv
,
tw_chù_devi˚
 *
±cd
)

1618 
tw_dev_èbÀ_id
 *
driv_id
 = &
drv
->
devi˚_id
;

1619 
ïobj_t
 *
ï
 = &
driv_id
->
tid
->
ïobj
;

1620 
tcd_drivî_›î©i⁄s
 *
to
 = (tcd_drivî_›î©i⁄†*)
driv_id
->
›s
;

1622 
	`¥ötk
("--->fun˘i⁄ %†ˇŒed\n",
__FUNCTION__
);

1623  
to
->
	`öô
(
±cd
,
drv
);

1624 
	}
}

1626 
	$chù5864_dëach
(
tw_chù_drivî
 *
drv
,
tw_chù_devi˚
 *
±cd
)

1628 
tw_dev_èbÀ_id
 *
driv_id
 = &
drv
->
devi˚_id
;

1629 
ïobj_t
 *
ï
 = &
driv_id
->
tid
->
ïobj
;

1630 
tcd_drivî_›î©i⁄s
 *
t›
 = (tcd_drivî_›î©i⁄†*)
driv_id
->
›s
;

1632 
	`¥ötk
("--->fun˘i⁄ %†ˇŒed\n",
__FUNCTION__
);

1633 if(!
t›
->
ªmove
){

1634 
	`¥ötk
("chip driv hasÇoÑmove\n");

1635  -
EINVAL
;

1637 
t›
->
	`ªmove
(
±cd
,
drv
);

1639 
	}
}

1641 
	$chù5864_comm™d
(
tw_chù_devi˚
 *
±cd
,
cmd
, *
cmd_¨g
)

1643 
ªt
 = 0;

1646  
ªt
;

1647 
	}
}

1653 
tw_dev_id
 
	gtw5864_chù_dev_id
 =

1655 .
ïobj
 = {

1656 .
víd‹_id
 = 
TWELL
,

1657 .
	gbus_id
 = 1,

1658 .
	gchù_id
 = 
TW5864
,

1660 .
	gvîsi⁄
 = 1,

1664 
tcd_drivî_›î©i⁄s
 
	gtw_5864_chù_›s
 =

1666 .
öô
 = 
öô_chù_drivî
,

1667 .
	gªmove
 = 
ªmove_chù_drivî
,

1670 
tw_chù_drivî
 
	gtw_5864_chù_driv
 =

1672 .
drivî
 = {

1673 .
«me
 = "tw5864_chip_driv",

1675 .
	gdevi˚_id
 = {

1676 .
tid
 = &
tw5864_chù_dev_id
,

1677 .
	g›s
 = &
tw_5864_chù_›s
,

1679 .
	g©èch_chù
 = 
chù5864_©èch
,

1680 .
	gdëach_chù
 = 
chù5864_dëach
,

1681 .
	gcomm™d
 = 
chù5864_comm™d
,

1686 
	$tw5864_chù_drivî_öô
()

1688 
ïkey_t
 
key
 = {0};

1689 
tw_dev_èbÀ_id
 *
èbÀ_id
 = &
tw_5864_chù_driv
.
devi˚_id
;

1690 
tw_dev_id
 *
id
 = 
	`kzÆloc
((tw_dev_id),
GFP_KERNEL
);

1691 if(!
id
)

1694 
	`make_key
((
ïkey_t
 *)&
key
,0,0,0,0,0,0);

1695 
	`ïobj_öô
(&
id
->
ïobj
, 
TWELL
, 1,
TW5864
,0,0,&
key
);

1696 
èbÀ_id
->
tid
 = 
id
;

1697  
	`ªgi°î_chù_drivî
(&
tw_5864_chù_driv
);

1698 
	}
}

1700 
	$tw5864_chù_drivî_ªmove
()

1702 
	`uƒegi°î_chù_drivî
(&
tw_5864_chù_driv
);

1703 
	}
}

	@../../tw5864/tw5864/tw_chip_vi.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
	#TW_VI_EVENT_IRQ
 0

	)

5 
tw_chù_vi_„©uª_t
 
	gdeÁu…_vi_„©uª
 = {

6 .
e_mŸi⁄_mode
 = 
MOTION_TRIGGER_AUTIO
,

7 .
	gi_mŸi⁄_£nsôive
 = 
CHIP_VI_EVENT_MIN_SENSITIVE
,

8 .
	gi_night_£nsôive
 = 
CHIP_VI_EVENT_MIN_SENSITIVE
,

9 .
	gi_blöd_£nsôive
 = 
CHIP_VI_EVENT_MIN_SENSITIVE
,

11 .
	gb_novideo_íabÀ
 = 
TW_VI_FEATURE_ON
,

12 .
	gb_undîÊow_íabÀ
 = 
TW_VI_FEATURE_OFF
,

13 .
	gb_ovîÊow_íabÀ
 = 
TW_VI_FEATURE_OFF
,

14 .
	gch™ge_mask
 = 
TW_VI_FEATURE_ENABLE_CHANGE_MASK_ALL
,

17 
tw_chù_vi_¥›îty_t
 
	gdeÁu…_video_¥›îty
 = {

18 .
u32Brighäess
 = 
DEFAULT_VI_BRIGHTNESS
,

19 .
	gu32C⁄åa°
 = 
DEFAULT_VI_CONTRAST
,

20 .
	gu32Hue
 = 
DEFAULT_VI_HUE
,

21 .
	gu32S©uøti⁄
 = 
DEFAULT_VI_SATURATION
,

22 .
	gu32Sh¨≤ess
 = 
DEFAULT_VI_SHARPNESS
,

23 .
	gu32Mask
 = 0xff,

26 
tw_chù_evít_mask
(
tw_chù_vi_drivî_t
 *, 
CHIP_VI_EVENT
, 
u32
 , );

28 
	$chù_vi_drivî_hcd_öãrÁ˚_›í
(
ed_tcb_t
 *
›íed_ed
)

30 
ªt
 = 
TW_ERR
;

32 if(
›íed_ed
) {

33 
tw_chù_vi_drivî_t
 *
drivî
;

35 
drivî
 = 
	`to_gë_chù_vi_drivî_wôh_›íed_logic_ch™_ed
(
›íed_ed
);

36 
	`©omic_ªad
(&
›íed_ed
->
°©e
)){

38 
TW_ED_UNREGISTER
:

39 
TW_ED_CLOSED
:

40 if(
›íed_ed
->
ed
.
›
) {

41 
›íed_ed
->
ed
.
›
->
	`öô_com∂ëe
(&opened_ed->ed);

43 
	`TW_DBG
(
TW_DBG_FATAL
, "driverÇot init\n");

44  -
EPERM
;

46 
	`©omic_£t
(&
drivî
->
›íed_Êag
, 1);

47 
ªt
 = 0;

49 
TW_ED_IDLE
:

50 
TW_ED_STANDBY
:

51 
TW_ED_SUSPEND
:

52 
TW_ED_RUNNING
:

53 
ªt
 = -
EBUSY
;

54 
	`TW_DBG
(
TW_DBG_ERR
, "chip vi driver have been opened\n");

59  
ªt
;

60 
	}
}

62 
	$chù_vi_drivî_hcd_öãrÁ˚_˛o£
(
ed_tcb_t
 *
›íed_ed
)

64 
ªt
 = 
TW_ERR
;

66 if(
›íed_ed
) {

67 
tw_chù_vi_drivî_t
 *
drivî
;

69 
drivî
 = 
	`to_gë_chù_vi_drivî_wôh_›íed_logic_ch™_ed
(
›íed_ed
);

70 
	`©omic_ªad
(&
›íed_ed
->
°©e
)){

72 
TW_ED_UNREGISTER
:

73 
TW_ED_CLOSED
:

74 
ªt
 = 0;

75 
	`TW_DBG
(
TW_DBG_INFO
, "chip control have been close\n");

77 
TW_ED_IDLE
:

78 
TW_ED_STANDBY
:

79 
TW_ED_SUSPEND
:

80 
TW_ED_RUNNING
:

81 if(
›íed_ed
->
ed
.
›
 !
NULL
){

82 
	`©omic_£t
(&
›íed_ed
->
°©e
, 
TW_ED_CLOSED
);

83 
›íed_ed
->
ed
.
›
->
	`com∂ëe_d⁄e
(&opened_ed->ed);

84 
	`TW_DBG
(
TW_DBG_INFO
, "control complete doen\n");

85 
ªt
 = 0;

87 
	`TW_DBG
(
TW_DBG_FATAL
, "controlÇode haveÇot inital!\n");

88 
ªt
 = -
EACCES
;

90 
	`©omic_£t
(&
drivî
->
›íed_Êag
, 0);

95  
ªt
;

96 
	}
}

98 
	$chù_vi_drivî_hcd_öãrÁ˚_su•íd
(
ed_tcb_t
 *
›íed_ed
)

100 if(
›íed_ed
) {

101 
tw_chù_vi_drivî_t
 *
drivî
;

103 
drivî
 = 
	`to_gë_chù_vi_drivî_wôh_›íed_logic_ch™_ed
(
›íed_ed
);

104 if(
	`©omic_ªad
(&
drivî
->
›íed_Êag
)) {

106 
	`TW_DBG
(
TW_DBG_ERR
, "device haveÇot opened\n");

112 
	}
}

114 
	$chù_vi_drivî_hcd_öãrÁ˚_ªsume
(
ed_tcb_t
 *
›íed_ed
)

116 if(
›íed_ed
) {

117 
tw_chù_vi_drivî_t
 *
drivî
;

119 
drivî
 = 
	`to_gë_chù_vi_drivî_wôh_›íed_logic_ch™_ed
(
›íed_ed
);

120 if(
	`©omic_ªad
(&
drivî
->
›íed_Êag
)) {

122 
	`TW_DBG
(
TW_DBG_ERR
, "device haveÇot opened\n");

128 
	}
}

130 
	$chù_vi_drivî_hcd_öãrÁ˚_io˘l
(
ed_tcb_t
 *
›íed_ed
, 
cmd
, 
¨g
)

132 
ªt
 = 
TW_ERR
;

134 if(
›íed_ed
) {

135 
tw_chù_vi_drivî_t
 *
drivî
;

136 
tw_chù_vi_c⁄fig_¥›îty_t
 *
video_¥›îty
;

137 
tw_chù_vi_¥›îty_t
 
¥›îty
, *
p
 = &property;

138 
tw_chù_vi_„©uª_t
 
„©uª
, *
r„©uª
, *
p„©uª
 = &feature;

140 
drivî
 = 
	`to_gë_chù_vi_drivî_wôh_›íed_logic_ch™_ed
(
›íed_ed
);

142 if(!
	`©omic_ªad
(&
drivî
->
›íed_Êag
)) {

143 
	`TW_DBG
(
TW_DBG_ERR
, "device haveÇot opened\n");

144  -
EPERM
;

147 
	`TW_DBG
(
TW_DBG_INFO
, "%c, %d\n", 
	`_IOC_TYPE
(
cmd
), 
	`_IOC_NR
(cmd));

148 
cmd
) {

149 
TW_VI_SET_VIDEO_AD_PARM
:

150 
	`c›y_‰om_u£r
(
p
, (*)
¨g
, (
tw_chù_vi_¥›îty_t
));

151 if(
p
->
u32Ch™√l
 >
TW_VI_ON_CHIP_CHNL
) {

152 
	`TW_DBG
(
TW_DBG_ERR
, "vòch™√»ovîÊow, o∆y suµ‹àTW_VI_MAX_CHNL = %d\n", 
TW_VI_ON_CHIP_CHNL
);

153 
ªt
 = -
EINVAL
;

156 
video_¥›îty
 = &
drivî
->video_¥›îty[
p
->
u32Ch™√l
];

157 if(
p
->
u32Mask
 & 
MASK_VI_BRIGHTNESS
) {

158 
ªt
 = 
video_¥›îty
->
›
->
	`£t_brighäess
(&video_¥›îty->video_¥›îty, 
p
->
u32Brighäess
);

159 if(
ªt
) {

163 if(
p
->
u32Mask
 & 
MASK_VI_CONTRAST
) {

164 
ªt
 = 
video_¥›îty
->
›
->
	`£t_c⁄åa°
(&video_¥›îty->video_¥›îty, 
p
->
u32C⁄åa°
);

165 if(
ªt
) {

169 if(
p
->
u32Mask
 & 
MASK_VI_SATURATION
) {

170 
ªt
 = 
video_¥›îty
->
›
->
	`£t_ßtuøti⁄
(&video_¥›îty->video_¥›îty, 
p
->
u32S©uøti⁄
);

171 if(
ªt
) {

175 if(
p
->
u32Mask
 & 
MASK_VI_HUE
) {

176 
ªt
 = 
video_¥›îty
->
›
->
	`£t_hue
(&video_¥›îty->video_¥›îty, 
p
->
u32Hue
);

177 if(
ªt
) {

181 if(
p
->
u32Mask
 & 
MASK_VI_SHARPNESS
) {

182 
ªt
 = 
video_¥›îty
->
›
->
	`£t_sh¨≤ess
(&video_¥›îty->video_¥›îty, 
p
->
u32Sh¨≤ess
);

183 if(
ªt
) {

188 
video_¥›îty
->video_¥›îty.
u32Mask
 = 
p
->u32Mask;

189 if(
p
->
u32Mask
) {

190 
ªt
 = 
video_¥›îty
->
›
->
	`upd©e
(
drivî
, video_property);

192 
ªt
 = 
TW_OK
;

195 
TW_VI_GET_VIDEO_AD_PARM
:

196 
	`c›y_‰om_u£r
(
p
, (*)
¨g
, (
tw_chù_vi_¥›îty_t
));

197 if(
p
->
u32Ch™√l
 >
TW_VI_ON_CHIP_CHNL
) {

198 
	`TW_DBG
(
TW_DBG_ERR
, "vòch™√»ovîÊow, o∆y suµ‹àTW_VI_MAX_CHNL = %d\n", 
TW_VI_ON_CHIP_CHNL
);

199 
ªt
 = -
EINVAL
;

202 
video_¥›îty
 = &
drivî
->video_¥›îty[
p
->
u32Ch™√l
];

203 if(
p
->
u32Mask
 & 
MASK_VI_BRIGHTNESS
) {

204 
p
->
u32Brighäess
 = 
video_¥›îty
->
›
->
	`gë_brighäess
(&video_property->video_property);

206 if(
p
->
u32Mask
 & 
MASK_VI_CONTRAST
) {

207 
p
->
u32C⁄åa°
 = 
video_¥›îty
->
›
->
	`gë_c⁄åa°
(&video_property->video_property);

209 if(
p
->
u32Mask
 & 
MASK_VI_SATURATION
) {

210 
p
->
u32S©uøti⁄
 = 
video_¥›îty
->
›
->
	`gë_ßtuøti⁄
(&video_property->video_property);

212 if(
p
->
u32Mask
 & 
MASK_VI_HUE
) {

213 
p
->
u32Hue
 = 
video_¥›îty
->
›
->
	`gë_hue
(&video_property->video_property);

215 if(
p
->
u32Mask
 & 
MASK_VI_SHARPNESS
) {

216 
p
->
u32Sh¨≤ess
 = 
video_¥›îty
->
›
->
	`gë_sh¨≤ess
(&video_property->video_property);

218 if(
p
->
u32Mask
) {

219 
	`c›y_to_u£r
((*)
¨g
, 
p
, (
tw_chù_vi_¥›îty_t
));

221 
ªt
 = 
TW_OK
;

223 
TW_VI_GET_FEATURE
:

224 
	`c›y_‰om_u£r
(
p„©uª
, (*)
¨g
, (
tw_chù_vi_„©uª_t
));

225 if(
p„©uª
->
ch™√l
 < 
TW_VI_MAX_CHNL
) {

226 
video_¥›îty
 = &
drivî
->video_¥›îty[
p
->
u32Ch™√l
];

227 
r„©uª
 = &
video_¥›îty
->
video_„©uª
;

228 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_MODE_MASK
) {

229 
p„©uª
->
e_mŸi⁄_mode
 = 
r„©uª
->e_motion_mode;

231 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_MOTION_MASK
) {

232 
p„©uª
->
i_mŸi⁄_£nsôive
 = 
r„©uª
->i_motion_sensitive;

234 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_NIGHT_MASK
) {

235 
p„©uª
->
i_night_£nsôive
 = 
r„©uª
->i_night_sensitive;

237 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_BLIND_MASK
) {

238 
p„©uª
->
i_blöd_£nsôive
 = 
r„©uª
->i_blind_sensitive;

240 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_NOVIDEO_MASK
) {

241 
p„©uª
->
b_novideo_íabÀ
 = !!
r„©uª
->b_novideo_enable;

243 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_UNDERFLOW_MASK
) {

244 
p„©uª
->
b_undîÊow_íabÀ
 = !!
r„©uª
->b_underflow_enable;

246 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_OVERFLOW_MASK
) {

247 
p„©uª
->
b_ovîÊow_íabÀ
 = !!
r„©uª
->b_overflow_enable;

250 
	`TW_DBG
(
TW_DBG_ERR
, "channelÇumberÉrror\n");

251 
ªt
 = -
EINVAL
;

254 
TW_VI_SET_FEATURE
:

255 
	`c›y_‰om_u£r
(
p„©uª
, (*)
¨g
, (
tw_chù_vi_„©uª_t
));

256 if(
p„©uª
->
ch™√l
 < 
TW_VI_MAX_CHNL
) {

257 
tw_chù_vi_c⁄fig_¥›îty_t
 
¥›îty
;

259 
	`mem£t
(&
¥›îty
, 0, (
tw_chù_vi_c⁄fig_¥›îty_t
));

260 
video_¥›îty
 = &
drivî
->video_¥›îty[
p
->
u32Ch™√l
];

261 
r„©uª
 = &
¥›îty
.
video_„©uª
;

262 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_MODE_MASK
) {

263 if((
p„©uª
->
e_mŸi⁄_mode
 >
MOTION_TRIGGER_AUTIO
Ë|| (p„©uª->e_mŸi⁄_modê< 
MOTION_TRIGGER_RESERVED
)) {

264 
r„©uª
->
e_mŸi⁄_mode
 = 
p„©uª
->e_motion_mode;

266 
ªt
 = -
EINVAL
;

267 
	`TW_DBG
(
TW_DBG_ERR
, "bad mŸi⁄ modê%d\n", 
p„©uª
->
e_mŸi⁄_mode
);

271 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_MOTION_MASK
) {

272 if((
p„©uª
->
i_mŸi⁄_£nsôive
 >
CHIP_VI_EVENT_MIN_SENSITIVE
Ë&& (’„©uª->i_mŸi⁄_£nsôivê<
CHIP_VI_EVENT_MAX_SENSITIVE
))) {

273 
r„©uª
->
i_mŸi⁄_£nsôive
 = 
p„©uª
->i_motion_sensitive;

275 
ªt
 = -
EINVAL
;

276 
	`TW_DBG
(
TW_DBG_ERR
, "bad mŸi⁄ sísôivê%d\n", 
p„©uª
->
i_mŸi⁄_£nsôive
);

280 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_NIGHT_MASK
) {

281 if((
p„©uª
->
i_night_£nsôive
 >
CHIP_VI_EVENT_MIN_SENSITIVE
Ë&& (’„©uª->i_night_£nsôivê<
CHIP_VI_EVENT_MAX_SENSITIVE
))) {

282 
r„©uª
->
i_night_£nsôive
 = 
p„©uª
->i_night_sensitive;

284 
ªt
 = -
EINVAL
;

285 
	`TW_DBG
(
TW_DBG_ERR
, "badÇighà£nsôivê%d\n", 
p„©uª
->
i_night_£nsôive
);

289 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_BLIND_MASK
) {

290 if((
p„©uª
->
i_blöd_£nsôive
 >
CHIP_VI_EVENT_MIN_SENSITIVE
Ë&& (’„©uª->i_blöd_£nsôivê<
CHIP_VI_EVENT_MAX_SENSITIVE
))) {

291 
r„©uª
->
i_blöd_£nsôive
 = 
p„©uª
->i_blind_sensitive;

293 
ªt
 = -
EINVAL
;

294 
	`TW_DBG
(
TW_DBG_ERR
, "bad blöd sísôivê%d\n", 
p„©uª
->
i_blöd_£nsôive
);

298 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_NOVIDEO_MASK
) {

299 
r„©uª
->
b_novideo_íabÀ
 = !!
p„©uª
->b_novideo_enable;

301 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_UNDERFLOW_MASK
) {

302 
r„©uª
->
b_undîÊow_íabÀ
 = !!
p„©uª
->b_underflow_enable;

304 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_OVERFLOW_MASK
) {

305 
r„©uª
->
b_ovîÊow_íabÀ
 = !!
p„©uª
->b_overflow_enable;

307 
r„©uª
->
ch™ge_mask
 = 
p„©uª
->change_mask;

308 if(
r„©uª
->
ch™ge_mask
) {

309 
ªt
 = 
video_¥›îty
->
›
->
	`upd©e
(
drivî
, &
¥›îty
);

311 
ªt
 = 
TW_OK
;

314 
	`TW_DBG
(
TW_DBG_ERR
, "channelÇumberÉrror\n");

315 
ªt
 = -
EINVAL
;

318 
TW_VI_GET_VIDEO_STANDARD
:

319 
ªt
 = 
TW_OK
;

321 
TW_VI_SET_VIDEO_TYPE
:{

322 
VI_CH_VIDEOTYPE
 
video_ty≥
;

323 
	`c›y_‰om_u£r
(&
video_ty≥
, (*)
¨g
, (
VI_CH_VIDEOTYPE
));

324 
ªt
 = 
drivî
->
›
->
	`£t_video_°™d¨d
(drivî, 
video_ty≥
.
eVideoTy≥
);

328 
ªt
 = -
EBADRQC
;

329 
	`TW_DBG
(
TW_DBG_ERR
, "No such command!\n");

333 
	`TW_DBG
(
TW_DBG_FATAL
, "vi deviceÇot init\n");

336  
ªt
;

337 
	}
}

339 
	$chù_vi_drivî_hcd_öãrÁ˚_gë_°©e
(
ed_tcb_t
 *
›íed_ed
)

341 
ªt
 = 
TW_ED_UNREGISTER
;

343 if(
›íed_ed
 !
NULL
){

344 
ªt
 = 
	`©omic_ªad
(&
›íed_ed
->
°©e
);

347  
ªt
;

348 
	}
}

350 
hcd_öãrÁ˚_›î©i⁄
 
	gchù_vi_drivî_hcd_öãrÁ˚_›
 = {

351 .
›í
 = 
chù_vi_drivî_hcd_öãrÁ˚_›í
,

352 .
	g˛o£
 = 
chù_vi_drivî_hcd_öãrÁ˚_˛o£
,

353 .
	gsu•íd
 = 
chù_vi_drivî_hcd_öãrÁ˚_su•íd
,

354 .
	gªsume
 = 
chù_vi_drivî_hcd_öãrÁ˚_ªsume
,

355 .
	gio˘l
 = 
chù_vi_drivî_hcd_öãrÁ˚_io˘l
,

356 .
	ggë_°©e
 = 
chù_vi_drivî_hcd_öãrÁ˚_gë_°©e
,

359 
	$tw_chù_vi_¥›îty_öô
(
tw_chù_vi_¥›îty_t
 *
¥›îty
, 
u32
 
chn
)

361 if(
¥›îty
) {

362 
¥›îty
->
chù_num
 = 0;

363 
¥›îty
->
u32Ch™√l
 = 
chn
;

364 
¥›îty
->
u32Brighäess
 = 
DEFAULT_VI_BRIGHTNESS
;

365 
¥›îty
->
u32C⁄åa°
 = 
DEFAULT_VI_CONTRAST
;

366 
¥›îty
->
u32S©uøti⁄
 = 
DEFAULT_VI_SATURATION
;

367 
¥›îty
->
u32Hue
 = 
DEFAULT_VI_HUE
;

368 
¥›îty
->
u32Mask
 = 0;

369 
¥›îty
->
u32Sh¨≤ess
 = 
DEFAULT_VI_SHARPNESS
;

371  
TW_OK
;

374  
TW_ERR
;

375 
	}
}

377 
	$tw_chù_vi_¥›îty_ª£t
(
tw_chù_vi_¥›îty_t
 *
¥›îty
)

379 if(
¥›îty
) {

380 
¥›îty
->
u32Brighäess
 = 
DEFAULT_VI_BRIGHTNESS
;

381 
¥›îty
->
u32C⁄åa°
 = 
DEFAULT_VI_CONTRAST
;

382 
¥›îty
->
u32S©uøti⁄
 = 
DEFAULT_VI_SATURATION
;

383 
¥›îty
->
u32Hue
 = 
DEFAULT_VI_HUE
;

384 
¥›îty
->
u32Mask
 = 0;

385 
¥›îty
->
u32Sh¨≤ess
 = 
DEFAULT_VI_SHARPNESS
;

387  
TW_OK
;

390  
TW_ERR
;

391 
	}
}

393 
u32
 
	$tw_chù_vi_¥›îty_gë_brighäess
(
tw_chù_vi_¥›îty_t
 *
¥›îty
)

395 if(
¥›îty
) {

396  
¥›îty
->
u32Brighäess
;

399  
TW_ERR
;

400 
	}
}

402 
	$tw_chù_vi_¥›îty_£t_brighäess
(
tw_chù_vi_¥›îty_t
 *
¥›îty
, 
u32
 
brighäess
)

404 if(
¥›îty
) {

405 if((
brighäess
 >
MIN_VI_BRIGHNESS
Ë&& (brighäes†<
MAX_VI_BRIGHNESS
)) {

406 
¥›îty
->
u32Brighäess
 = 
brighäess
;

407  
TW_OK
;

409 
	`TW_DBG
(
TW_DBG_INFO
, "£àbrighäes†Áûed %d, [%d, %d]\n", 
brighäess
, 
MIN_VI_BRIGHNESS
, 
MAX_VI_BRIGHNESS
);

410  -
EINVAL
;

413  
TW_ERR
;

414 
	}
}

416 
u32
 
	$tw_chù_vi_¥›îty_gë_c⁄åa°
(
tw_chù_vi_¥›îty_t
 *
¥›îty
)

418 if(
¥›îty
) {

419  
¥›îty
->
u32C⁄åa°
;

422  
TW_ERR
;

423 
	}
}

425 
	$tw_chù_vi_¥›îty_£t_c⁄åa°
(
tw_chù_vi_¥›îty_t
 *
¥›îty
, 
u32
 
c⁄åa°
)

427 if(
¥›îty
) {

428 if((
c⁄åa°
 >
MIN_VI_CONTRAST
Ë&& (c⁄åa° <
MAX_VI_CONTRAST
)) {

429 
¥›îty
->
u32C⁄åa°
 = 
c⁄åa°
;

430  
TW_OK
;

432 
	`TW_DBG
(
TW_DBG_INFO
, "£àc⁄åa° faûed %d, [%d, %d]\n", 
c⁄åa°
, 
MIN_VI_CONTRAST
, 
MAX_VI_CONTRAST
);

433  -
EINVAL
;

436  
TW_ERR
;

437 
	}
}

439 
u32
 
	$tw_chù_vi_¥›îty_gë_ßtuøti⁄
(
tw_chù_vi_¥›îty_t
 *
¥›îty
)

441 if(
¥›îty
) {

442  
¥›îty
->
u32S©uøti⁄
;

445  
TW_ERR
;

446 
	}
}

448 
	$tw_chù_vi_¥›îty_£t_ßtuøti⁄
(
tw_chù_vi_¥›îty_t
 *
¥›îty
, 
u32
 
ßtuøti⁄
)

450 if(
¥›îty
) {

451 if((
ßtuøti⁄
 >
MIN_VI_SATURATION
Ë&& (ßtuøti⁄ <
MAX_VI_SATURATION
)) {

452 
¥›îty
->
u32S©uøti⁄
 = 
ßtuøti⁄
;

453  
TW_OK
;

455 
	`TW_DBG
(
TW_DBG_INFO
, "£àßtuøti⁄ faûed %d, [%d, %d]\n", 
ßtuøti⁄
, 
MIN_VI_SATURATION
, 
MAX_VI_SATURATION
);

456  -
EINVAL
;

459  
TW_ERR
;

460 
	}
}

462 
u32
 
	$tw_chù_vi_¥›îty_gë_hue
(
tw_chù_vi_¥›îty_t
 *
¥›îty
)

464 if(
¥›îty
) {

465  
¥›îty
->
u32Hue
;

468  
TW_ERR
;

469 
	}
}

471 
	$tw_chù_vi_¥›îty_£t_hue
(
tw_chù_vi_¥›îty_t
 *
¥›îty
, 
u32
 
hue
)

473 if(
¥›îty
) {

474 if((
hue
 >
MIN_VI_HUE
Ë&& (huê<
MAX_VI_HUE
)) {

475 
¥›îty
->
u32Hue
 = 
hue
;

476  
TW_OK
;

478 
	`TW_DBG
(
TW_DBG_INFO
, "£àhuêÁûed %d, [%d, %d]\n", 
hue
, 
MIN_VI_HUE
, 
MAX_VI_HUE
);

479  -
EINVAL
;

482  
TW_ERR
;

483 
	}
}

485 
u32
 
	$tw_chù_vi_¥›îty_gë_sh¨≤ess
(
tw_chù_vi_¥›îty_t
 *
¥›îty
)

487 if(
¥›îty
) {

488  
¥›îty
->
u32Sh¨≤ess
;

491  
TW_ERR
;

492 
	}
}

494 
	$tw_chù_vi_¥›îty_£t_sh¨≤ess
(
tw_chù_vi_¥›îty_t
 *
¥›îty
, 
u32
 
sh¨≤ess
)

496 if(
¥›îty
) {

497 if((
sh¨≤ess
 >
MIN_VI_SHARPNESS
Ë&& (sh¨≤es†<
MAX_VI_SHARPNESS
)) {

498 
¥›îty
->
u32Sh¨≤ess
 = 
sh¨≤ess
;

499  
TW_OK
;

501 
	`TW_DBG
(
TW_DBG_INFO
, "£àsh¨≤es†Áûed %d, [%d, %d]\n", 
sh¨≤ess
, 
MIN_VI_SHARPNESS
, 
MAX_VI_SHARPNESS
);

502  -
EINVAL
;

505  
TW_ERR
;

506 
	}
}

508 
	$tw_chù_vi_¥›îty_upd©e
(
tw_chù_vi_drivî_t
 *
drivî
, 
tw_chù_vi_c⁄fig_¥›îty_t
 *
c⁄fig
)

510 if(
drivî
 && 
c⁄fig
) {

511 
dvm_chù_t
 *
chù
;

512 
u32
 
vÆue
;

513 
tw_chù_vi_„©uª_t
 *
r„©uª
, *
p„©uª
 = &
c⁄fig
->
video_„©uª
;

514 
tw_chù_vi_¥›îty_t
 *
¥›îty
 = &
c⁄fig
->
video_¥›îty
;

516 
chù
 = 
drivî
->chip;

518 if(
¥›îty
->
u32Mask
 & 
MASK_VI_BRIGHTNESS
) {

520 
	`mpb_wrôe
(
chù
, ((
¥›îty
->
u32Ch™√l
 & 0x3Ë* 0x10Ë+ 
TW_VI_BRIGHNESS
, (¥›îty->
u32Brighäess
 - 0x80));

523 if(
¥›îty
->
u32Mask
 & 
MASK_VI_CONTRAST
) {

525 
	`mpb_wrôe
(
chù
, ((
¥›îty
->
u32Ch™√l
 & 0x3Ë* 0x10Ë+ 
TW_VI_CONTRAST
,Ör›îty->
u32C⁄åa°
);

528 if(
¥›îty
->
u32Mask
 & 
MASK_VI_SATURATION
) {

530 
	`mpb_wrôe
(
chù
, ((
¥›îty
->
u32Ch™√l
 & 0x3Ë* 0x10Ë+ 
TW_VI_SATURATION_U
,Ör›îty->
u32S©uøti⁄
);

531 
	`mpb_wrôe
(
chù
, ((
¥›îty
->
u32Ch™√l
 & 0x3Ë* 0x10Ë+ 
TW_VI_SATURATION_V
,Ör›îty->
u32S©uøti⁄
);

537 if(
¥›îty
->
u32Mask
 & 
MASK_VI_HUE
) {

539 
	`mpb_wrôe
(
chù
, ((
¥›îty
->
u32Ch™√l
 & 0x3Ë* 0x10Ë+ 
TW_VI_HUE
, (¥›îty->
u32Hue
 - 0x80));

542 if(
¥›îty
->
u32Mask
 & 
MASK_VI_SHARPNESS
) {

544 
	`mpb_wrôe
(
chù
, ((
¥›îty
->
u32Ch™√l
 & 0x3Ë* 0x10Ë+ 
TW_VI_SHARPNESS
,Ör›îty->
u32Sh¨≤ess
);

547 
¥›îty
->
u32Mask
 = 0x0;

549 
r„©uª
 = &
drivî
->
video_¥›îty
[
p„©uª
->
ch™√l
].
video_„©uª
;

550 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_MODE_MASK
) {

552 
r„©uª
->
e_mŸi⁄_mode
 = 
p„©uª
->e_motion_mode;

553 
vÆue
 = 
	`mpb_ªad
(
chù
, 
	`TW_VI_EVENT_CONTROL
(
¥›îty
->
u32Ch™√l
));

554 if(
r„©uª
->
e_mŸi⁄_mode
 =
MOTION_TRIGGER_AUTIO
) {

555 
vÆue
 &= ~(0x3<<2);

557 
vÆue
 |= 0x3<<2;

559 
	`mpb_wrôe
(
chù
, 
	`TW_VI_EVENT_CONTROL
(
¥›îty
->
u32Ch™√l
), 
vÆue
);

561 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_MOTION_MASK
) {

562 
r„©uª
->
i_mŸi⁄_£nsôive
 = 
p„©uª
->i_motion_sensitive;

563 
	`tw_chù_evít_mask
(
drivî
, 
CHIP_VI_EVENT_MOTION
, 
p„©uª
->
ch™√l
,

564 (
r„©uª
->
i_mŸi⁄_£nsôive
 < 
CHIP_VI_EVENT_MAX_SENSITIVE
));

566 
	`mpb_wrôe
(
chù
, 
	`TW_VI_EVENT_MD_TMPSENS
(
r„©uª
->
ch™√l
),Ñ„©uª->
i_mŸi⁄_£nsôive
 << 4);

567 
	`mpb_wrôe
(
chù
, 
	`TW_VI_EVENT_MD_FIELD
(
r„©uª
->
ch™√l
),Ñ„©uª->
i_mŸi⁄_£nsôive
 & 0xf);

568 
vÆue
 = 
	`mpb_ªad
(
chù
, 
	`TW_VI_EVENT_MD_SPSENS
(
r„©uª
->
ch™√l
));

569 
vÆue
 &= 0x0f;

570 
vÆue
 |(
r„©uª
->
i_mŸi⁄_£nsôive
 & 0xf)<<4;

571 
	`mpb_wrôe
(
chù
, 
	`TW_VI_EVENT_MD_SPSENS
(
r„©uª
->
ch™√l
), 
vÆue
);

573 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_NIGHT_MASK
) {

574 
r„©uª
->
i_night_£nsôive
 = 
p„©uª
->i_night_sensitive;

575 
	`tw_chù_evít_mask
(
drivî
, 
CHIP_VI_EVENT_NIGHT
, 
p„©uª
->
ch™√l
,

576 (
r„©uª
->
i_night_£nsôive
 < 
CHIP_VI_EVENT_MAX_SENSITIVE
));

578 
	`mpb_wrôe
(
chù
, 
	`TW_VI_EVENT_ND_TMPSENS
(
r„©uª
->
ch™√l
),

579 (
r„©uª
->
i_night_£nsôive
 << 4) | (rfeature->i_night_sensitive / 4));

581 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_BLIND_MASK
) {

582 
r„©uª
->
i_blöd_£nsôive
 = 
p„©uª
->i_blind_sensitive;

583 
	`tw_chù_evít_mask
(
drivî
, 
CHIP_VI_EVENT_BLIND
, 
p„©uª
->
ch™√l
,

584 (
r„©uª
->
i_blöd_£nsôive
 < 
CHIP_VI_EVENT_MAX_SENSITIVE
));

586 
vÆue
 = 
	`mpb_ªad
(
chù
, 
	`TW_VI_EVENT_MD_SPSENS
(
r„©uª
->
ch™√l
));

587 
vÆue
 &= 0xf0;

588 
vÆue
 |
r„©uª
->
i_blöd_£nsôive
 & 0xf;

589 
	`mpb_wrôe
(
chù
, 
	`TW_VI_EVENT_MD_SPSENS
(
r„©uª
->
ch™√l
), 
vÆue
);

591 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_NOVIDEO_MASK
) {

592 
r„©uª
->
b_novideo_íabÀ
 = 
p„©uª
->b_novideo_enable;

593 
	`tw_chù_evít_mask
(
drivî
, 
CHIP_VI_EVENT_LOST
, 
p„©uª
->
ch™√l
, 
r„©uª
->
b_novideo_íabÀ
);

595 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_UNDERFLOW_MASK
) {

596 
r„©uª
->
b_undîÊow_íabÀ
 = 
p„©uª
->b_underflow_enable;

597 
	`tw_chù_evít_mask
(
drivî
, 
CHIP_VI_EVENT_UNDERFLOW
, 
p„©uª
->
ch™√l
, 
r„©uª
->
b_undîÊow_íabÀ
);

599 if(
p„©uª
->
ch™ge_mask
 & 
TW_VI_FEATURE_ENABLE_CHANGE_OVERFLOW_MASK
) {

600 
r„©uª
->
b_ovîÊow_íabÀ
 = 
p„©uª
->b_overflow_enable;

601 
	`tw_chù_evít_mask
(
drivî
, 
CHIP_VI_EVENT_OVERFLOW
, 
p„©uª
->
ch™√l
, 
r„©uª
->
b_ovîÊow_íabÀ
);

603 
r„©uª
->
ch™ge_mask
 = 0x0;

605  
TW_OK
;

608  
TW_ERR
;

609 
	}
}

611 
tw_chù_vi_¥›îty_›î©i⁄
 
	gvideo_¥›îty_›
 = {

612 .
öô
 = 
tw_chù_vi_¥›îty_öô
,

613 .
	gª£t
 = 
tw_chù_vi_¥›îty_ª£t
,

614 .
	ggë_brighäess
 = 
tw_chù_vi_¥›îty_gë_brighäess
,

615 .
	g£t_brighäess
 = 
tw_chù_vi_¥›îty_£t_brighäess
,

616 .
	ggë_c⁄åa°
 = 
tw_chù_vi_¥›îty_gë_c⁄åa°
,

617 .
	g£t_c⁄åa°
 = 
tw_chù_vi_¥›îty_£t_c⁄åa°
,

618 .
	ggë_ßtuøti⁄
 = 
tw_chù_vi_¥›îty_gë_ßtuøti⁄
,

619 .
	g£t_ßtuøti⁄
 = 
tw_chù_vi_¥›îty_£t_ßtuøti⁄
,

620 .
	ggë_hue
 = 
tw_chù_vi_¥›îty_gë_hue
,

621 .
	g£t_hue
 = 
tw_chù_vi_¥›îty_£t_hue
,

622 .
	ggë_sh¨≤ess
 = 
tw_chù_vi_¥›îty_gë_sh¨≤ess
,

623 .
	g£t_sh¨≤ess
 = 
tw_chù_vi_¥›îty_£t_sh¨≤ess
,

624 .
	gupd©e
 = 
tw_chù_vi_¥›îty_upd©e
,

627 
	$tw_chù_vi_mŸi⁄_h™dÀr
(
u32
 
√vít
, *
c⁄ãxt
)

629 
ªt
 = 
TW_ERR
, 
ch™√l
;

630 
tw_chù_vi_evít_t
 *
evít
;

631 
tw_chù_vi_„©uª_t
 *
„©uª
;

632 
tw_chù_vi_drivî_t
 *
drivî
 = (tw_chù_vi_drivî_à*)
c⁄ãxt
;

634 if(
drivî
) {

635 
evít
 = &
drivî
->
drivî_evít
[
√vít
];

636 
ch™√l
 = 0; ch™√»< 
TW_VI_MAX_CHNL
; channel++) {

637 if(
evít
->
evít_Êags
 & (1 << 
ch™√l
)) {

638 
„©uª
 = &
drivî
->
video_¥›îty
[
ch™√l
].
video_„©uª
;

639 if(
„©uª
->
i_mŸi⁄_£nsôive
 !
CHIP_VI_EVENT_MAX_SENSITIVE
) {

641 
ªt
 = 
TW_OK
;

646 
ªt
 = -
EINVAL
;

650 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_VI_EVENT_MOTION_L
, 0xff);

651 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_VI_EVENT_MOTION_H
, 0xff);

653  
ªt
;

654 
	}
}

656 
	$tw_chù_vi_night_h™dÀr
(
u32
 
√vít
, *
c⁄ãxt
)

658 
ªt
 = 
TW_ERR
, 
ch™√l
;

659 
tw_chù_vi_evít_t
 *
evít
;

660 
tw_chù_vi_„©uª_t
 *
„©uª
;

661 
tw_chù_vi_drivî_t
 *
drivî
 = (tw_chù_vi_drivî_à*)
c⁄ãxt
;

663 if(
drivî
) {

664 
evít
 = &
drivî
->
drivî_evít
[
√vít
];

665 
ch™√l
 = 0; ch™√»< 
TW_VI_MAX_CHNL
; channel++) {

666 if(
evít
->
evít_Êags
 & (1 << 
ch™√l
)) {

667 
„©uª
 = &
drivî
->
video_¥›îty
[
ch™√l
].
video_„©uª
;

668 if(
„©uª
->
i_night_£nsôive
 !
CHIP_VI_EVENT_MAX_SENSITIVE
) {

670 
ªt
 = 
TW_OK
;

675 
ªt
 = -
EINVAL
;

679 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_VI_EVENT_NIGHT_L
, 0xff);

680 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_VI_EVENT_NIGHT_H
, 0xff);

682  
ªt
;

683 
	}
}

685 
	$tw_chù_vi_blöd_h™dÀr
(
u32
 
√vít
, *
c⁄ãxt
)

687 
ªt
 = 
TW_ERR
, 
ch™√l
;

688 
tw_chù_vi_evít_t
 *
evít
;

689 
tw_chù_vi_„©uª_t
 *
„©uª
;

690 
tw_chù_vi_drivî_t
 *
drivî
 = (tw_chù_vi_drivî_à*)
c⁄ãxt
;

692 if(
drivî
) {

693 
evít
 = &
drivî
->
drivî_evít
[
√vít
];

694 
ch™√l
 = 0; ch™√»< 
TW_VI_MAX_CHNL
; channel++) {

695 if(
evít
->
evít_Êags
 & (1 << 
ch™√l
)) {

696 
„©uª
 = &
drivî
->
video_¥›îty
[
ch™√l
].
video_„©uª
;

697 if(
„©uª
->
i_blöd_£nsôive
 !
CHIP_VI_EVENT_MAX_SENSITIVE
) {

699 
ªt
 = 
TW_OK
;

704 
ªt
 = -
EINVAL
;

708 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_VI_EVENT_BLIND_L
, 0xff);

709 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_VI_EVENT_BLIND_H
, 0xff);

711  
ªt
;

712 
	}
}

714 
	$tw_chù_vi_novideo_h™dÀr
(
u32
 
√vít
, *
c⁄ãxt
)

716 
ªt
 = 
TW_ERR
, 
ch™√l
, 
Êags
;

717 
tw_chù_vi_evít_t
 *
evít
;

718 
tw_chù_vi_„©uª_t
 *
„©uª
;

719 
tw_chù_vi_drivî_t
 *
drivî
 = (tw_chù_vi_drivî_à*)
c⁄ãxt
;

721 if(
drivî
) {

722 
Êags
 = (
	`mpb_ªad
(
drivî
->
chù
, 0x388) & 0xff);

723 
Êags
 |((
	`mpb_ªad
(
drivî
->
chù
, 0x389) & 0xff) << 8);

724 
evít
 = &
drivî
->
drivî_evít
[
√vít
];

725 
ch™√l
 = 0; ch™√»< 
TW_VI_MAX_CHNL
; channel++) {

726 if(
evít
->
evít_Êags
 & (1 << 
ch™√l
)) {

727 
„©uª
 = &
drivî
->
video_¥›îty
[
ch™√l
].
video_„©uª
;

729 if(
„©uª
->
b_novideo_íabÀ
) {

730 if(
Êags
 & (1 << 
ch™√l
)) {

731 
	`TW_DBG
(
TW_DBG_INFO
, "videÿch™√»%d ofÊöe\n", 
ch™√l
);

733 
	`TW_DBG
(
TW_DBG_INFO
, "videÿch™√»%d o∆öe\n", 
ch™√l
);

736 
ªt
 = 
TW_OK
;

741 
ªt
 = -
EINVAL
;

745 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_VI_EVENT_NOVIDEO_L
, 0xff);

746 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_VI_EVENT_NOVIDEO_H
, 0xff);

748  
ªt
;
	}
}

750 
	$tw_chù_vi_undîÊow_h™dÀr
(
u32
 
√vít
, *
c⁄ãxt
)

752 
ªt
 = 
TW_ERR
, 
ch™√l
;

753 
tw_chù_vi_evít_t
 *
evít
;

754 
tw_chù_vi_„©uª_t
 *
„©uª
;

755 
tw_chù_vi_drivî_t
 *
drivî
 = (tw_chù_vi_drivî_à*)
c⁄ãxt
;

757 if(
drivî
) {

758 
evít
 = &
drivî
->
drivî_evít
[
√vít
];

759 
ch™√l
 = 0; ch™√»< 
TW_VI_MAX_CHNL
; channel++) {

760 if(
evít
->
evít_Êags
 & (1 << 
ch™√l
)) {

761 
„©uª
 = &
drivî
->
video_¥›îty
[
ch™√l
].
video_„©uª
;

762 if(
„©uª
->
b_undîÊow_íabÀ
) {

764 
ªt
 = 
TW_OK
;

769 
ªt
 = -
EINVAL
;

773 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_VI_EVENT_UNDERFLOW_L
, 0xff);

774 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_VI_EVENT_UNDERFLOW_H
, 0xff);

776  
ªt
;

777 
	}
}

779 
	$tw_chù_vi_ovîÊow_h™dÀr
(
u32
 
√vít
, *
c⁄ãxt
)

781 
ªt
 = 
TW_ERR
, 
ch™√l
;

782 
tw_chù_vi_evít_t
 *
evít
;

783 
tw_chù_vi_„©uª_t
 *
„©uª
;

784 
tw_chù_vi_drivî_t
 *
drivî
 = (tw_chù_vi_drivî_à*)
c⁄ãxt
;

786 if(
drivî
) {

787 
evít
 = &
drivî
->
drivî_evít
[
√vít
];

788 
ch™√l
 = 0; ch™√»< 
TW_VI_MAX_CHNL
; channel++) {

789 if(
evít
->
evít_Êags
 & (1 << 
ch™√l
)) {

790 
„©uª
 = &
drivî
->
video_¥›îty
[
ch™√l
].
video_„©uª
;

791 if(
„©uª
->
b_ovîÊow_íabÀ
) {

793 
ªt
 = 
TW_OK
;

798 
ªt
 = -
EINVAL
;

802 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_VI_EVENT_OVERFLOW_L
, 0xff);

803 
	`mpb_wrôe
(
drivî
->
chù
, 
TW_VI_EVENT_OVERFLOW_H
, 0xff);

805  
ªt
;

806 
	}
}

808 
	$tw_chù_evít_mask
(
tw_chù_vi_drivî_t
 *
drivî
, 
CHIP_VI_EVENT
 
√vít
, 
u32
 
ch™√l
, 
íabÀ
)

810 
ªt
 = 
TW_ERR
;

811 
u32
 
addh
, 
addl
, 
vÆue
;

813 if(!
drivî
 || ((
√vít
 < 
CHIP_VI_EVENT_MOTION
Ë|| (√víà>
CHIP_VI_EVENT_RESERVED
)Ë|| (
ch™√l
 >
TW_VI_MAX_CHNL
)) {

814 
	`TW_DBG
(
TW_DBG_ERR
, "inavalidÖarameter\n");

815  -
EINVAL
;

818 
√vít
) {

820 
CHIP_VI_EVENT_MOTION
:

821 
addh
 = 
TW_VI_EVENT_MASK_MOTION_H
;

822 
addl
 = 
TW_VI_EVENT_MASK_MOTION_L
;

824 
CHIP_VI_EVENT_BLIND
:

825 
addh
 = 
TW_VI_EVENT_MASK_BLIND_H
;

826 
addl
 = 
TW_VI_EVENT_MASK_BLIND_L
;

828 
CHIP_VI_EVENT_NIGHT
:

829 
addh
 = 
TW_VI_EVENT_MASK_NIGHT_H
;

830 
addl
 = 
TW_VI_EVENT_MASK_NIGHT_L
;

832 
CHIP_VI_EVENT_LOST
:

833 
addh
 = 
TW_VI_EVENT_MASK_NOVIDEO_H
;

834 
addl
 = 
TW_VI_EVENT_MASK_NOVIDEO_L
;

836 
CHIP_VI_EVENT_UNDERFLOW
:

837 
addh
 = 
TW_VI_EVENT_MASK_UNDERFLOW_H
;

838 
addl
 = 
TW_VI_EVENT_MASK_UNDERFLOW_L
;

840 
CHIP_VI_EVENT_OVERFLOW
:

841 
addh
 = 
TW_VI_EVENT_MASK_OVERFLOW_H
;

842 
addl
 = 
TW_VI_EVENT_MASK_OVERFLOW_L
;

846 if(
ch™√l
 < (
TW_VI_MAX_CHNL
>>1)) {

847 
vÆue
 = 
	`mpb_ªad
(
drivî
->
chù
, 
addl
);

848 if(
íabÀ
) {

849 
vÆue
 |(1 << 
ch™√l
);

851 
vÆue
 &~(1 << 
ch™√l
);

853 
	`mpb_wrôe
(
drivî
->
chù
, 
addl
, 
vÆue
);

855 
vÆue
 = 
	`mpb_ªad
(
drivî
->
chù
, 
addh
);

856 if(
íabÀ
) {

857 
vÆue
 |(1 <<(
ch™√l
 - (
TW_VI_MAX_CHNL
>>1)));

859 
vÆue
 &~(1 <<(
ch™√l
 - (
TW_VI_MAX_CHNL
>>1)));

861 
	`mpb_wrôe
(
drivî
->
chù
, 
addh
, 
vÆue
);

866  
ªt
;

867 
	}
}

869 
	$tw_chù_evít_ªgi°î
(
tw_chù_vi_drivî_t
 *
drivî
, 
CHIP_VI_EVENT
 
√vít
, 
evít_h™dÀr
 
h™dÀr
, *
c⁄ãxt
)

871 
ªt
 = 
TW_ERR
;

872 
Êags
;

873 
tw_vi_evít_a˘i⁄_t
 *
a˘i⁄
;

874 
tw_chù_vi_evít_t
 *
evít
;

876 if(
drivî
) {

877 if((
√vít
 < 
CHIP_VI_EVENT_MOTION
Ë|| (√víà> 
CHIP_VI_EVENT_OVERFLOW
)) {

878 
	`TW_DBG
(
TW_DBG_ERR
, "eventÇumber overflow\n");

879  -
EINVAL
;

881 
evít
 = &
drivî
->
drivî_evít
[
√vít
];

882 
a˘i⁄
 = &
evít
->action;

883 
	`•ö_lock_úqßve
(&
evít
->
lock
, 
Êags
);

884 if(
a˘i⁄
->
c⁄ãxt
 =
NULL
) {

885 
a˘i⁄
->
evít
 = 
√vít
;

886 
a˘i⁄
->
c⁄ãxt
 = context;

887 
a˘i⁄
->
h™dÀr
 = handler;

888 
a˘i⁄
->
√xt
 = 
NULL
;

890 
ªt
 = 
TW_OK
;

892 
	`TW_DBG
(
TW_DBG_ERR
, "evíà%dáÃódyÑegi°î\n", 
√vít
);

894 
ªt
 = -
ENODEV
;

897 
	`•ö_u∆ock_úqª°‹e
(&
evít
->
lock
, 
Êags
);

900  
ªt
;

901 
	}
}

903 
	$tw_chù_evít_uƒegi°î
(
tw_chù_vi_drivî_t
 *
drivî
, 
CHIP_VI_EVENT
 
√vít
, *
c⁄ãxt
)

905 
ªt
 = 
TW_ERR
;

906 
Êags
;

907 
tw_vi_evít_a˘i⁄_t
 *
a˘i⁄
;

908 
tw_chù_vi_evít_t
 *
evít
;

910 if(
drivî
) {

911 if((
√vít
 < 
CHIP_VI_EVENT_MOTION
Ë|| (√víà> 
CHIP_VI_EVENT_OVERFLOW
)) {

912 
	`TW_DBG
(
TW_DBG_ERR
, "eventÇumber overflow\n");

913  -
EINVAL
;

915 
evít
 = &
drivî
->
drivî_evít
[
√vít
];

916 
a˘i⁄
 = &
evít
->action;

917 
	`•ö_lock_úqßve
(&
evít
->
lock
, 
Êags
);

918 if(
a˘i⁄
->
c⁄ãxt
 == context) {

919 
a˘i⁄
->
c⁄ãxt
 = 
NULL
;

920 
a˘i⁄
->
h™dÀr
 = 
NULL
;

921 
a˘i⁄
->
√xt
 = 
NULL
;

923 
ªt
 = 
TW_OK
;

925 
	`TW_DBG
(
TW_DBG_ERR
, "evíà%dáÃódy uƒegi°î\n", 
√vít
);

927 
ªt
 = -
ENODEV
;

930 
	`•ö_u∆ock_úqª°‹e
(&
evít
->
lock
, 
Êags
);

933  
ªt
;

934 
	}
}

936 
	$tw_chù_vi_úq
(
úq
, *
c⁄ãxt
)

938 
u32
 
evít_Êags
;

939 
Êags
;

940 
CHIP_VI_EVENT
 
√vít
;

941 
tw_chù_vi_evít_t
 *
evít
;

942 
tw_chù_vi_drivî_t
 *
drivî
 = (tw_chù_vi_drivî_à*)
c⁄ãxt
;

944 if(
drivî
) {

946 
evít_Êags
 = 
drivî
->
›
->
	`gë_video_evít
(driver);

947 
√vít
 = 
CHIP_VI_EVENT_MOTION
;Çevíà< 
CHIP_VI_EVENT_RESERVED
;Çevent++) {

948 if(
evít_Êags
 & (1 << 
√vít
)) {

949 
tw_vi_evít_a˘i⁄_t
 *
a˘i⁄
;

951 
evít
 = &
drivî
->
drivî_evít
[
√vít
];

952 
evít
->
cou¡
++;

953 
a˘i⁄
 = &
evít
->action;

954 
	`•ö_lock_úqßve
(&
evít
->
lock
, 
Êags
);

955 
a˘i⁄
 &&á˘i⁄->
h™dÀr
) {

956 if(
a˘i⁄
->
	`h™dÀr
(
evít
->evít,á˘i⁄->
c⁄ãxt
)){

957 
evít
->
unh™dÀd
++;

960 
a˘i⁄
 =á˘i⁄->
√xt
;

962 
	`•ö_u∆ock_úqª°‹e
(&
evít
->
lock
, 
Êags
);

968 
	}
}

970 
	$tw_chù_vi_evít_timî_check
(*
c⁄ãxt
)

972 if(
c⁄ãxt
) {

973  
	`tw_chù_vi_úq
(
IRQ_FRONT_END_TYPE_INTR
, 
c⁄ãxt
);

976  
TW_ERR
;

977 
	}
}

979 
	$vi_¥oc_ªad
(*
∑ge
, **
°¨t
, 
off_t
 
off
,

980 
cou¡
, *
eof
, *
d©a
)

982 
Àn
 = 0, 
i
;

983 
CHIP_VI_EVENT
 
√vít
;

984 
tw_chù_vi_evít_t
 *
evít
;

985 
tw_chù_vi_c⁄fig_¥›îty_t
 *
video_¥›îty
;

986 
tw_chù_vi_¥›îty_t
 *
¥›îty
;

987 
tw_chù_vi_drivî_t
 *
drivî
 = (tw_chù_vi_drivî_à*)
d©a
;

989 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "video standard: ");

990 
drivî
->
›
->
	`gë_video_°™d¨d
(driver)) {

991 
CHIP_VI_STANDARD_NTSC_M
:

992 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%s\n", "NTSC(M)");

994 
CHIP_VI_STANDARD_PAL_BDGHI
:

995 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%s\n", "PAL(B,D,G,H,I)");

997 
CHIP_VI_STANDARD_SECAM
:

998 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%s\n", "SECAM");

1000 
CHIP_VI_STANDARD_NTSC443
:

1001 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%s\n", "NTSC4.43");

1003 
CHIP_VI_STANDARD_PAL_M
:

1004 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%s\n", "PAL(M)");

1006 
CHIP_VI_STANDARD_PAL_CN
:

1007 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%s\n", "PAL(CN)");

1009 
CHIP_VI_STANDARD_PAL_60
:

1010 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%s\n", "PAL 60");

1012 
CHIP_VI_STANDARD_AUTO
:

1013 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%s\n", "Auto");

1016 
CHIP_VI_STANDARD_INVALID
:

1017 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%s\n", "Invalid");

1021 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "vi configure\n");

1022 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s %12s %12s %12s %12s %12s\n", "ch", "brightness", "contrast", "saturation", "hue", "sharpness");

1023 
i
 = 0; i < 
TW_VI_ON_CHIP_CHNL
; i++) {

1024 
¥›îty
 = &
drivî
->
video_¥›îty
[
i
].video_property;

1025 
Àn
 +
	`•rötf
(
∑ge
 +Üí, "%8d %12d %12d %12d %12d %12d\n", 
¥›îty
->
u32Ch™√l
,

1026 
¥›îty
->
u32Brighäess
,Ör›îty->
u32C⁄åa°
,Ör›îty->
u32S©uøti⁄
,

1027 
¥›îty
->
u32Hue
,Ör›îty->
u32Sh¨≤ess
);

1029 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "vi feature configure:\n");

1030 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s %8s %8s %8s %8s %8s %8s\n", "ch", "motion", "night",

1032 
i
 = 0; i < 
TW_VI_MAX_CHNL
; i++) {

1033 
video_¥›îty
 = &
drivî
->video_¥›îty[
i
];

1034 
Àn
 +
	`•rötf
(
∑ge
 +Üí, "%8d %8d %8d %8d %8d %8d %8d\n", 
i
,

1035 
video_¥›îty
->
video_„©uª
.
i_mŸi⁄_£nsôive
,

1036 
video_¥›îty
->
video_„©uª
.
i_night_£nsôive
,

1037 
video_¥›îty
->
video_„©uª
.
i_blöd_£nsôive
,

1038 
video_¥›îty
->
video_„©uª
.
b_novideo_íabÀ
,

1039 
video_¥›îty
->
video_„©uª
.
b_undîÊow_íabÀ
,

1040 
video_¥›îty
->
video_„©uª
.
b_ovîÊow_íabÀ
);

1042 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "event status:\n%10s :%8s %8s\n", "event", "happened", "unhandled");

1043 
√vít
 = 
CHIP_VI_EVENT_MOTION
;Çevíà< 
CHIP_VI_EVENT_RESERVED
;Çevent++) {

1044 
evít
 = &
drivî
->
drivî_evít
[
√vít
];

1045 
Àn
 +
	`•rötf
(
∑ge
 +Üí, "%10† :%8d %8d\n", 
evít
->
«me
,Évít->
cou¡
,Évít->
unh™dÀd
);

1048  
Àn
;

1049 
	}
}

1051 
	$vi_¥oc_wrôe
(
fûe
 *fûe, c⁄° 
__u£r
 *
buf„r
,

1052 
cou¡
, *
d©a
)

1054 
tw_chù_vi_drivî_t
 *
drivî
 = (tw_chù_vi_drivî_à*)
d©a
;

1056 if(
drivî
) {

1057 
	`TW_DBG
(
TW_DBG_ERR
, "vi driver uninitial\n");

1060  
cou¡
;

1061 
	}
}

1063 
	$chù_vi_drivî_öô
(
tw_chù_vi_drivî_t
 *
drivî
)

1065 
ªt
 = 
TW_ERR
;

1067 if(
drivî
) {

1068 
i
;

1069 
tw_chù_vi_c⁄fig_¥›îty_t
 *
video_¥›îty
;

1070 
tw_chù_vi_„©uª_t
 *
video_„©uª
;

1071 
tw_chù_vi_evít_t
 *
evít
;

1072 
CHIP_VI_EVENT
 
√vít
;

1073 
ed_tcb_t
 *
ed
;

1074 
tw_¥oc_ªgi°î_s
 *
vi_¥oc
;

1076 
	`©omic_£t
(&
drivî
->
›íed_Êag
, 0);

1077 
ed
 = &
drivî
->
›íed_vi_ed
;

1078 
vi_¥oc
 = &
drivî
->vi_proc;

1079 
ed
->
›
 = &
chù_vi_drivî_hcd_öãrÁ˚_›
;

1080 
i
 = 0; i < 
TW_VI_MAX_CHNL
; i++, 
video_¥›îty
++) {

1081 
video_¥›îty
 = &
drivî
->video_¥›îty[
i
];

1082 
video_„©uª
 = &
video_¥›îty
->video_feature;

1083 
video_¥›îty
->
›
 = &
video_¥›îty_›
;

1084 
video_¥›îty
->
›
->
	`öô
(&video_¥›îty->video_¥›îty, 
i
);

1085 
	`mem˝y
(
video_„©uª
, &
deÁu…_vi_„©uª
, (
tw_chù_vi_„©uª_t
));

1086 
	`mem˝y
(&
video_¥›îty
->video_¥›îty, &
deÁu…_video_¥›îty
, (
tw_chù_vi_¥›îty_t
));

1087 
video_¥›îty
->video_¥›îty.
u32Ch™√l
 = 
i
;

1088 
video_„©uª
->
ch™√l
 = 
i
;

1089 
video_¥›îty
->
›
->
	`upd©e
(
drivî
, video_property);

1091 if(
drivî
->
›
) {

1092 
drivî
->
›
->
	`£t_video_°™d¨d
(drivî, 
DEFAULT_VI_STANDARD
);

1094 
	`TW_DBG
(
TW_DBG_INFO
, "not supportÅhis operation, set video standard failed\n");

1097 
√vít
 = 
CHIP_VI_EVENT_MOTION
;Çevíà< 
CHIP_VI_EVENT_RESERVED
;Çevent++) {

1098 
evít
 = &
drivî
->
drivî_evít
[
√vít
];

1099 
evít
->
cou¡
 = 0;

1100 
evít
->
unh™dÀd
 = 0;

1101 
evít
->evíà
√vít
;

1102 
	`mem£t
(&
evít
->
a˘i⁄
, 0, (
tw_vi_evít_a˘i⁄_t
));

1103 
	`•ö_lock_öô
(&
evít
->
lock
);

1104 
√vít
) {

1105 
CHIP_VI_EVENT_MOTION
:

1106 
evít
->
«me
 = "motion";

1107 
ªt
 = 
	`tw_chù_evít_ªgi°î
(
drivî
, 
CHIP_VI_EVENT_MOTION
, 
tw_chù_vi_mŸi⁄_h™dÀr
, driver);

1109 
CHIP_VI_EVENT_BLIND
:

1110 
evít
->
«me
 = "blind";

1111 
ªt
 = 
	`tw_chù_evít_ªgi°î
(
drivî
, 
CHIP_VI_EVENT_BLIND
, 
tw_chù_vi_blöd_h™dÀr
, driver);

1113 
CHIP_VI_EVENT_NIGHT
:

1114 
evít
->
«me
 = "night";

1115 
ªt
 = 
	`tw_chù_evít_ªgi°î
(
drivî
, 
CHIP_VI_EVENT_NIGHT
, 
tw_chù_vi_night_h™dÀr
, driver);

1117 
CHIP_VI_EVENT_LOST
:

1118 
evít
->
«me
 = "vlost";

1119 
ªt
 = 
	`tw_chù_evít_ªgi°î
(
drivî
, 
CHIP_VI_EVENT_LOST
, 
tw_chù_vi_novideo_h™dÀr
, driver);

1121 
CHIP_VI_EVENT_UNDERFLOW
:

1122 
evít
->
«me
 = "underflow";

1123 
ªt
 = 
	`tw_chù_evít_ªgi°î
(
drivî
, 
CHIP_VI_EVENT_UNDERFLOW
, 
tw_chù_vi_undîÊow_h™dÀr
, driver);

1125 
CHIP_VI_EVENT_OVERFLOW
:

1126 
evít
->
«me
 = "overflow";

1127 
ªt
 = 
	`tw_chù_evít_ªgi°î
(
drivî
, 
CHIP_VI_EVENT_OVERFLOW
, 
tw_chù_vi_ovîÊow_h™dÀr
, driver);

1130 
	`TW_DBG
(
TW_DBG_ERR
, "unknow¿evíà%d\n", 
√vít
);

1131 
ªt
 = -
EPERM
;

1134 if(
ªt
) {

1135 
	`TW_DBG
(
TW_DBG_ERR
, "ªgi°îÉvíàh™dÀ∏Áûed %d\n", 
ªt
);

1136  
ªt
;

1140 
	`°r˝y
(
vi_¥oc
->
«me
, "vi");

1141 
vi_¥oc
->
ªad
 = 
vi_¥oc_ªad
;

1142 
vi_¥oc
->
wrôe
 = 
vi_¥oc_wrôe
;

1143 
vi_¥oc
->
¥iv©e
 = 
drivî
;

1144 
vi_¥oc
->
íåy
 = 
NULL
;

1145 
	`tw_moduÀ_ªgi°î
(
drivî
->
chù
, 
vi_¥oc
);

1147 #i‡
TW_VI_EVENT_IRQ


1148 
ªt
 = 
	`chù_ªque°_úq
(
drivî
->
chù
, 
IRQ_FRONT_END_TYPE_INTR
, 
tw_chù_vi_úq
, "vi_event", (*)driver);

1149 if(
ªt
) {

1150 
	`TW_DBG
(
TW_DBG_ERR
, "ªgi°î irq faûed, %d\n", 
ªt
);

1152 
drivî
->
evít_timî
 = 
INVALIDTIMERID
;

1154 
drivî
->
evít_timî
 = 
	`AddF‹FúeTimîJob
(
TIMER_40MS
, 
tw_chù_vi_evít_timî_check
, driver);

1155 if(
drivî
->
evít_timî
 =
ADDJOBERROR
) {

1156 
	`TW_DBG
(
TW_DBG_ERR
, "addÅimerÉrror!\n");

1157 
drivî
->
evít_timî
 = 
INVALIDTIMERID
;

1161 
ªt
 = -
EINVAL
;

1164  
ªt
;

1165 
	}
}

1167 
	$chù_vi_drivî_ªÀa£
(
tw_chù_vi_drivî_t
 *
drivî
)

1169 if(
drivî
) {

1170 
CHIP_VI_EVENT
 
√vít
;

1172 
√vít
 = 
CHIP_VI_EVENT_MOTION
;Çevíà< 
CHIP_VI_EVENT_RESERVED
;Çevent++) {

1173 
	`tw_chù_evít_uƒegi°î
(
drivî
, 
√vít
, driver);

1175 #i‡
TW_VI_EVENT_IRQ


1176 
	`chù_‰ì_úq
(
drivî
->
chù
, 
IRQ_FRONT_END_TYPE_INTR
, driver);

1178 if(
drivî
->
evít_timî
 !
INVALIDTIMERID
) {

1179 
	`DñëeF‹FúeTimîJob
(
drivî
->
evít_timî
);

1180 
drivî
->
evít_timî
 = 
INVALIDTIMERID
;

1183 
	`tw_moduÀ_uƒegi°î
(
drivî
->
chù
, &drivî->
vi_¥oc
);

1185  
TW_OK
;

1188  
TW_ERR
;

1189 
	}
}

1191 
	$chù_vi_drivî_ª£t
(
tw_chù_vi_drivî_t
 *
drivî
)

1193 if(
drivî
) {

1194 
dvm_chù_t
 *
chù
 = 
drivî
->chip;

1196 
	`mpb_wrôe
(
chù
, 0x41, 0x03);

1197 
	`mpb_wrôe
(
chù
, 0x46, 0x00);

1199 
	`mpb_wrôe
(
chù
, 0xc0, 0x04);

1200 #i‚de‡
FPGA_330_5864_TESTING


1201 
	`TW_DBG
(
TW_DBG_INFO
, "c⁄figuª sy°em clockÅÿ%dMhz\n", 
chù
->
sys_˛ock
);

1202 
chù
->
sys_˛ock
) {

1204 
	`¥ötk
("SYSTEM CLOCK RATE %dMhz NOT SUPPORT!!!\n", 
chù
->
sys_˛ock
);

1205 
	`BUG
();

1207 #ifde‡
TW5864_ASIC_NEW


1208 
	`mpb_wrôe
(
chù
, 0x0ee6, 0x1);

1209 
	`mpb_wrôe
(
chù
, 0x0ee7, 0x1);

1210 
	`mpb_wrôe
(
chù
, 0x0ee8, 0x1);

1211 
	`mpb_wrôe
(
chù
, 0x0eeb, 0x1);

1212 
	`mpb_wrôe
(
chù
, 0x0eec, 0x1);

1213 
	`mpb_wrôe
(
chù
, 0x0eed, 0x1);

1215 
	`mpb_wrôe
(
chù
, 0x0ee6, 0x0);

1216 
	`mpb_wrôe
(
chù
, 0x0ee7, 0x0);

1217 
	`mpb_wrôe
(
chù
, 0x0ee8, 0xf);

1218 
	`mpb_wrôe
(
chù
, 0x0eeb, 0x0);

1219 
	`mpb_wrôe
(
chù
, 0x0eec, 0x0);

1220 
	`mpb_wrôe
(
chù
, 0x0eed, 0x1);

1224 
	`mpb_wrôe
(
chù
, 0x0ee6, 0x1);

1225 
	`mpb_wrôe
(
chù
, 0x0ee7, 0x1);

1226 
	`mpb_wrôe
(
chù
, 0x0ee8, 0x0);

1227 
	`mpb_wrôe
(
chù
, 0x0eeb, 0x1);

1228 
	`mpb_wrôe
(
chù
, 0x0eec, 0x1);

1229 
	`mpb_wrôe
(
chù
, 0x0eed, 0x1);

1232 
	`mpb_wrôe
(
chù
, 0x0ee6, 0x0);

1233 
	`mpb_wrôe
(
chù
, 0x0ee7, 0x0);

1234 
	`mpb_wrôe
(
chù
, 0x0ee8, 0x1);

1235 
	`mpb_wrôe
(
chù
, 0x0eeb, 0x0);

1236 
	`mpb_wrôe
(
chù
, 0x0eec, 0x0);

1237 
	`mpb_wrôe
(
chù
, 0x0eed, 0x1);

1240 
	`mpb_wrôe
(
chù
, 0x0ee6, 0x1);

1241 
	`mpb_wrôe
(
chù
, 0x0ee7, 0x1);

1242 
	`mpb_wrôe
(
chù
, 0x0ee8, 0x0);

1243 
	`mpb_wrôe
(
chù
, 0x0eeb, 0x1);

1244 
	`mpb_wrôe
(
chù
, 0x0eec, 0x1);

1245 
	`mpb_wrôe
(
chù
, 0x0eed, 0x1);

1248 
	`mpb_wrôe
(
chù
, 0x0ee6, 0x0);

1249 
	`mpb_wrôe
(
chù
, 0x0ee7, 0x0);

1250 
	`mpb_wrôe
(
chù
, 0x0ee8, 0x1);

1251 
	`mpb_wrôe
(
chù
, 0x0eeb, 0x1);

1252 
	`mpb_wrôe
(
chù
, 0x0eec, 0x1);

1253 
	`mpb_wrôe
(
chù
, 0x0eed, 0x0);

1256 
	`mpb_wrôe
(
chù
, 0x0ee6, 0xf);

1257 
	`mpb_wrôe
(
chù
, 0x0ee7, 0xf);

1258 
	`mpb_wrôe
(
chù
, 0x0ee8, 0x0);

1259 
	`mpb_wrôe
(
chù
, 0x0eeb, 0x0);

1260 
	`mpb_wrôe
(
chù
, 0x0eec, 0x0);

1261 
	`mpb_wrôe
(
chù
, 0x0eed, 0x1);

1264 
	`mpb_wrôe
(
chù
, 0x0ee6, 0x3);

1265 
	`mpb_wrôe
(
chù
, 0x0ee7, 0x3);

1266 
	`mpb_wrôe
(
chù
, 0x0ee8, 0xf);

1267 
	`mpb_wrôe
(
chù
, 0x0eeb, 0x3);

1268 
	`mpb_wrôe
(
chù
, 0x0eec, 0x3);

1269 
	`mpb_wrôe
(
chù
, 0x0eed, 0xf);

1273 
	`mpb_wrôe
(
chù
, 0x0ee6, 0x4);

1274 
	`mpb_wrôe
(
chù
, 0x0ee7, 0x4);

1275 
	`mpb_wrôe
(
chù
, 0x0ee8, 0x2);

1276 
	`mpb_wrôe
(
chù
, 0x0eeb, 0x4);

1277 
	`mpb_wrôe
(
chù
, 0x0eec, 0x4);

1278 
	`mpb_wrôe
(
chù
, 0x0eed, 0x2);

1282 
	`mpb_wrôe
(
chù
, 0x03ba, 0x3);

1283 
	`mpb_wrôe
(
chù
, 0x03bb, 0x0);

1287 
drivî
->
›
->
	`£t_video_°™d¨d
(drivî, drivî->›->
	`gë_video_°™d¨d
(driver));

1289  
TW_OK
;

1292  
TW_ERR
;

1293 
	}
}

1295 
	$chù_vi_drivî_gë_video_°™d¨d
(
tw_chù_vi_drivî_t
 *
drivî
)

1297 if(
drivî
) {

1298  
drivî
->
video_°™d¨d
;

1301  -
EINVAL
;

1302 
	}
}

1304 
	$chù_vi_drivî_£t_video_°™d¨d
(
tw_chù_vi_drivî_t
 *
drivî
, 
CHIP_VI_STANDARD
 
n‹m
)

1306 
ªt
 = 
TW_OK
;

1308 if(
drivî
) {

1309 
u32
 
vÆue
 = 0;

1310 
dvm_chù_t
 *
chù
;

1311 
chù_drivî_t
 *
chù_drivî
 = 
NULL
;

1312 
tw_video_bus_t
 *
video_bus
 = 
NULL
;

1313 
i
 = 0;

1315 
chù
 = 
drivî
->chip;

1316 
chù_drivî
 = 
chù
->chip_driver;

1317 if(
chù_drivî
) {

1318 
video_bus
 = &
chù_drivî
->video_bus;

1321 
	`TW_DBG
(
TW_DBG_INFO
, "£àvòvideÿ°™d¨d %d\n", 
n‹m
);

1322 
i
 = 0; i < 
TW_VI_ON_CHIP_CHNL
; i++) {

1323 
n‹m
) {

1324 
CHIP_VI_STANDARD_AUTO
:

1325 
vÆue
 = 0x07;

1327 
CHIP_VI_STANDARD_NTSC443
:

1328 
vÆue
 = 0x03;

1330 
CHIP_VI_STANDARD_NTSC_M
:

1331 
vÆue
 = 0x00;

1333 
CHIP_VI_STANDARD_PAL_60
:

1334 
vÆue
 = 0x06;

1336 
CHIP_VI_STANDARD_PAL_BDGHI
:

1337 
vÆue
 = 0x01;

1339 
CHIP_VI_STANDARD_PAL_CN
:

1340 
vÆue
 = 0x05;

1342 
CHIP_VI_STANDARD_PAL_M
:

1343 
vÆue
 = 0x04;

1345 
CHIP_VI_STANDARD_SECAM
:

1346 
vÆue
 = 0x02;

1349 
ªt
 = -
EINVAL
;

1350 
	`TW_DBG
(
TW_DBG_ERR
, "nŸ suµ‹àvideÿ°™d¨d %d\n", 
n‹m
);

1351  
ªt
;

1353 
	`mpb_wrôe
(
chù
, 
TW_VI_STANDARD
 + (
i
<<4), 
vÆue
);

1355 
	`pci_i2c_wrôe
(
chù
, 0x52, 
TW_VI_STANDARD
 + (
i
<<4), 
vÆue
);

1356 
	`pci_i2c_wrôe
(
chù
, 0x54, 
TW_VI_STANDARD
 + (
i
<<4), 
vÆue
);

1357 
	`pci_i2c_wrôe
(
chù
, 0x56, 
TW_VI_STANDARD
 + (
i
<<4), 
vÆue
);

1360 
i
 = 0; i < 
TW_VI_ON_CHIP_CHNL
; i++) {

1361 if((
n‹m
 !
CHIP_VI_STANDARD_NTSC443
Ë&& (n‹m !
CHIP_VI_STANDARD_NTSC_M
Ë&& (n‹m !
CHIP_VI_STANDARD_SECAM
)) {

1362 
	`TW_DBG
(
TW_DBG_INFO
, "£àvòch™√»%d cr›pögÅÿ720x576\n", 
i
);

1364 
	`mpb_wrôe
(
chù
, (
i
<<4) + 0x02, 0x0a);

1365 
	`mpb_wrôe
(
chù
, (
i
<<4) + 0x03, 0xd0);

1366 
	`mpb_wrôe
(
chù
, (
i
<<4) + 0x04, 0x06);

1367 
	`mpb_wrôe
(
chù
, (
i
<<4) + 0x05, 0x20);

1368 
	`mpb_wrôe
(
chù
, (
i
<<4) + 0x06, 0x28);

1370 
	`pci_i2c_wrôe
(
chù
, 0x52, (
i
<<4) + 0x07, (0x0<<6) | (0x1<<4) | (0x0<<2) | (0x2<<0));

1371 
	`pci_i2c_wrôe
(
chù
, 0x52, (
i
<<4) + 0x08, 0x12);

1372 
	`pci_i2c_wrôe
(
chù
, 0x52, (
i
<<4) + 0x09, 0x20);

1373 
	`pci_i2c_wrôe
(
chù
, 0x52, (
i
<<4) + 0x0a, 0x0a);

1374 
	`pci_i2c_wrôe
(
chù
, 0x52, (
i
<<4) + 0x0b, 0xd0);

1376 
	`pci_i2c_wrôe
(
chù
, 0x54, (
i
<<4) + 0x07, (0x0<<6) | (0x1<<4) | (0x0<<2) | (0x2<<0));

1377 
	`pci_i2c_wrôe
(
chù
, 0x54, (
i
<<4) + 0x08, 0x12);

1378 
	`pci_i2c_wrôe
(
chù
, 0x54, (
i
<<4) + 0x09, 0x20);

1379 
	`pci_i2c_wrôe
(
chù
, 0x54, (
i
<<4) + 0x0a, 0x0a);

1380 
	`pci_i2c_wrôe
(
chù
, 0x54, (
i
<<4) + 0x0b, 0xd0);

1382 
	`pci_i2c_wrôe
(
chù
, 0x56, (
i
<<4) + 0x07, (0x0<<6) | (0x1<<4) | (0x0<<2) | (0x2<<0));

1383 
	`pci_i2c_wrôe
(
chù
, 0x56, (
i
<<4) + 0x08, 0x12);

1384 
	`pci_i2c_wrôe
(
chù
, 0x56, (
i
<<4) + 0x09, 0x20);

1385 
	`pci_i2c_wrôe
(
chù
, 0x56, (
i
<<4) + 0x0a, 0x0a);

1386 
	`pci_i2c_wrôe
(
chù
, 0x56, (
i
<<4) + 0x0b, 0xd0);

1388 
	`TW_DBG
(
TW_DBG_INFO
, "£àvòch™√»%d cr›pögÅÿ720x480\n", 
i
);

1390 
	`mpb_wrôe
(
chù
, (
i
<<4) + 0x02, 0x0f);

1391 
	`mpb_wrôe
(
chù
, (
i
<<4) + 0x03, 0xd0);

1392 
	`mpb_wrôe
(
chù
, (
i
<<4) + 0x04, 0x06);

1393 
	`mpb_wrôe
(
chù
, (
i
<<4) + 0x05, 0xf0);

1394 
	`mpb_wrôe
(
chù
, (
i
<<4) + 0x06, 0x08);

1396 
	`pci_i2c_wrôe
(
chù
, 0x52, (
i
<<4) + 0x07, (0x0<<6) | (0x0<<4) | (0x0<<2) | (0x2<<0));

1397 
	`pci_i2c_wrôe
(
chù
, 0x52, (
i
<<4) + 0x08, 0x12);

1398 
	`pci_i2c_wrôe
(
chù
, 0x52, (
i
<<4) + 0x09, 0xf0);

1399 
	`pci_i2c_wrôe
(
chù
, 0x52, (
i
<<4) + 0x0a, 0x0a);

1400 
	`pci_i2c_wrôe
(
chù
, 0x52, (
i
<<4) + 0x0b, 0xd0);

1402 
	`pci_i2c_wrôe
(
chù
, 0x54, (
i
<<4) + 0x07, (0x0<<6) | (0x0<<4) | (0x0<<2) | (0x2<<0));

1403 
	`pci_i2c_wrôe
(
chù
, 0x54, (
i
<<4) + 0x08, 0x12);

1404 
	`pci_i2c_wrôe
(
chù
, 0x54, (
i
<<4) + 0x09, 0xf0);

1405 
	`pci_i2c_wrôe
(
chù
, 0x54, (
i
<<4) + 0x0a, 0x0a);

1406 
	`pci_i2c_wrôe
(
chù
, 0x54, (
i
<<4) + 0x0b, 0xd0);

1408 
	`pci_i2c_wrôe
(
chù
, 0x56, (
i
<<4) + 0x07, (0x0<<6) | (0x0<<4) | (0x0<<2) | (0x2<<0));

1409 
	`pci_i2c_wrôe
(
chù
, 0x56, (
i
<<4) + 0x08, 0x12);

1410 
	`pci_i2c_wrôe
(
chù
, 0x56, (
i
<<4) + 0x09, 0xf0);

1411 
	`pci_i2c_wrôe
(
chù
, 0x56, (
i
<<4) + 0x0a, 0x0a);

1412 
	`pci_i2c_wrôe
(
chù
, 0x56, (
i
<<4) + 0x0b, 0xd0);

1416 
i
 = 0; i < 
TW_VI_MAX_CHNL
; i++) {

1417 if((
n‹m
 !
CHIP_VI_STANDARD_NTSC443
Ë&& (n‹m !
CHIP_VI_STANDARD_NTSC_M
)) {

1418 
	`mpb_wrôe
(
chù
, 
	`TW_VI_SYSTEM_IN_WIDTH
(
i
), (720>>2));

1419 
	`mpb_wrôe
(
chù
, 
	`TW_VI_SYSTEM_IN_HEIGHT
(
i
), (576>>3));

1420 
	`mpb_wrôe
(
chù
, 
	`TW_VI_SYSTEM_OUT_WIDTH
(
i
), (720>>3));

1421 
	`mpb_wrôe
(
chù
, 
	`TW_VI_SYSTEM_OUT_HEIGHT
(
i
), (576>>4));

1422 
	`mpb_wrôe
(
chù
, 
TW_VI_SYSTEM_VIDEO_STANDARD
, 0x1);

1424 
	`mpb_wrôe
(
chù
, 
	`TW_VI_SYSTEM_IN_WIDTH
(
i
), (720>>2));

1425 
	`mpb_wrôe
(
chù
, 
	`TW_VI_SYSTEM_IN_HEIGHT
(
i
), (480>>3));

1426 
	`mpb_wrôe
(
chù
, 
	`TW_VI_SYSTEM_OUT_WIDTH
(
i
), (720>>3));

1427 
	`mpb_wrôe
(
chù
, 
	`TW_VI_SYSTEM_OUT_HEIGHT
(
i
), (480>>4));

1428 
	`mpb_wrôe
(
chù
, 
TW_VI_SYSTEM_VIDEO_STANDARD
, 0x0);

1431 
n‹m
) {

1433 
CHIP_VI_STANDARD_AUTO
:

1435 
CHIP_VI_STANDARD_NTSC443
:

1436 
CHIP_VI_STANDARD_NTSC_M
:

1437 if(
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË!
TW_VIDEO_STANDARD_NTSC
) {

1438 
video_bus
->
›
->
	`£t_video_°™d¨d
(video_bus, 
TW_VIDEO_STANDARD_NTSC
);

1441 
CHIP_VI_STANDARD_PAL_60
:

1442 
CHIP_VI_STANDARD_PAL_BDGHI
:

1443 
CHIP_VI_STANDARD_PAL_CN
:

1444 
CHIP_VI_STANDARD_PAL_M
:

1445 
CHIP_VI_STANDARD_SECAM
:

1446 if(
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË!
TW_VIDEO_STANDARD_PAL
) {

1447 
video_bus
->
›
->
	`£t_video_°™d¨d
(video_bus, 
TW_VIDEO_STANDARD_PAL
);

1451 
drivî
->
video_°™d¨d
 = 
n‹m
;

1453 
ªt
 = -
EINVAL
;

1456  
ªt
;

1457 
	}
}

1460 
	$chù_vi_drivî_£t_video_°™d¨d_ext
(
tw_chù_vi_drivî_t
 *
drivî
, 
CHIP_VI_STANDARD
 
n‹m
)

1462 if(
drivî
) {

1463 
i
, 
ªt
;

1464 
u32
 
vÆue
 = 0;

1465 
dvm_chù_t
 *
chù
;

1466 
chù_drivî_t
 *
chù_drivî
 = 
NULL
;

1468 
chù
 = 
drivî
->chip;

1469 
chù_drivî
 = 
chù
->chip_driver;

1471 
	`TW_DBG
(
TW_DBG_INFO
, "£àvòvideÿ°™d¨d %d\n", 
n‹m
);

1472 
i
 = 0; i < 
TW_VI_ON_CHIP_CHNL
; i++) {

1473 
n‹m
) {

1474 
CHIP_VI_STANDARD_AUTO
:

1475 
vÆue
 = 0x07;

1477 
CHIP_VI_STANDARD_NTSC443
:

1478 
vÆue
 = 0x03;

1480 
CHIP_VI_STANDARD_NTSC_M
:

1481 
vÆue
 = 0x00;

1483 
CHIP_VI_STANDARD_PAL_60
:

1484 
vÆue
 = 0x06;

1486 
CHIP_VI_STANDARD_PAL_BDGHI
:

1487 
vÆue
 = 0x01;

1489 
CHIP_VI_STANDARD_PAL_CN
:

1490 
vÆue
 = 0x05;

1492 
CHIP_VI_STANDARD_PAL_M
:

1493 
vÆue
 = 0x04;

1495 
CHIP_VI_STANDARD_SECAM
:

1496 
vÆue
 = 0x02;

1499 
ªt
 = -
EINVAL
;

1500 
	`TW_DBG
(
TW_DBG_ERR
, "nŸ suµ‹àvideÿ°™d¨d %d\n", 
n‹m
);

1501  
ªt
;

1503 
	`mpb_wrôe
(
chù
, 
TW_VI_STANDARD
 + (
i
<<4), 
vÆue
);

1505 
	`pci_i2c_wrôe
(
chù
, 0x52, 
TW_VI_STANDARD
 + (
i
<<4), 
vÆue
);

1506 
	`pci_i2c_wrôe
(
chù
, 0x54, 
TW_VI_STANDARD
 + (
i
<<4), 
vÆue
);

1507 
	`pci_i2c_wrôe
(
chù
, 0x56, 
TW_VI_STANDARD
 + (
i
<<4), 
vÆue
);

1510 
drivî
->
video_°™d¨d
 = 
n‹m
;

1512  
TW_OK
;

1515  
TW_ERR
;

1516 
	}
}

1518 
u32
 
	$chù_vi_drivî_gë_video_evít
(
tw_chù_vi_drivî_t
 *
drivî
)

1520 
CHIP_VI_EVENT
 
√vít
;

1521 
u32
 
evít_Êags
 = 0, 
ãmp
;

1522 
dvm_chù_t
 *
chù
;

1523 
tw_chù_vi_evít_t
 *
evít
;

1525 if(
drivî
) {

1526 
chù
 = 
drivî
->chip;

1528 
ãmp
 = (
	`mpb_ªad
(
chù
, 
TW_VI_EVENT_SUMMARY_L
) & 0xff) |

1529 ((
	`mpb_ªad
(
chù
, 
TW_VI_EVENT_SUMMARY_H
) & 0xf) << 8);

1530 
√vít
 = 
CHIP_VI_EVENT_MOTION
;Çevíà< 
CHIP_VI_EVENT_RESERVED
;Çevent++) {

1531 if(
ãmp
 & 0x3) {

1533 
evít_Êags
 |(1 << 
√vít
);

1534 
evít
 = &
drivî
->
drivî_evít
[
√vít
];

1535 
√vít
) {

1536 
CHIP_VI_EVENT_MOTION
:

1537 
evít
->
evít_Êags
 = (
	`mpb_ªad
(
chù
, 
TW_VI_EVENT_MOTION_L
) & 0xff) |

1538 ((
	`mpb_ªad
(
chù
, 
TW_VI_EVENT_MOTION_H
) & 0xff)<<8);

1540 
CHIP_VI_EVENT_NIGHT
:

1541 
evít
->
evít_Êags
 = (
	`mpb_ªad
(
chù
, 
TW_VI_EVENT_NIGHT_L
) & 0xff) |

1542 ((
	`mpb_ªad
(
chù
, 
TW_VI_EVENT_NIGHT_H
) & 0xff)<<8);

1544 
CHIP_VI_EVENT_BLIND
:

1545 
evít
->
evít_Êags
 = (
	`mpb_ªad
(
chù
, 
TW_VI_EVENT_BLIND_L
) & 0xff) |

1546 ((
	`mpb_ªad
(
chù
, 
TW_VI_EVENT_BLIND_H
) & 0xff)<<8);

1548 
CHIP_VI_EVENT_LOST
:

1549 
evít
->
evít_Êags
 = (
	`mpb_ªad
(
chù
, 
TW_VI_EVENT_NOVIDEO_L
) & 0xff) |

1550 ((
	`mpb_ªad
(
chù
, 
TW_VI_EVENT_NOVIDEO_H
) & 0xff)<<8);

1552 
CHIP_VI_EVENT_UNDERFLOW
:

1553 
evít
->
evít_Êags
 = (
	`mpb_ªad
(
chù
, 
TW_VI_EVENT_UNDERFLOW_L
) & 0xff) |

1554 ((
	`mpb_ªad
(
chù
, 
TW_VI_EVENT_UNDERFLOW_H
) & 0xff)<<8);

1556 
CHIP_VI_EVENT_OVERFLOW
:

1557 
evít
->
evít_Êags
 = (
	`mpb_ªad
(
chù
, 
TW_VI_EVENT_OVERFLOW_L
) & 0xff) |

1558 ((
	`mpb_ªad
(
chù
, 
TW_VI_EVENT_OVERFLOW_H
) & 0xff)<<8);

1561 
	`TW_DBG
(
TW_DBG_ERR
, "unknow¿evíà%d\n", 
√vít
);

1564 
ãmp
 >>= 2;

1568  
evít_Êags
;

1569 
	}
}

1571 
tw_chù_vi_›î©i⁄
 
	gtw_chù_vi_›î©i⁄_›
 = {

1572 .
öô
 = 
chù_vi_drivî_öô
,

1573 .
	gªÀa£
 = 
chù_vi_drivî_ªÀa£
,

1574 .
	gª£t
 = 
chù_vi_drivî_ª£t
,

1575 .
	ggë_video_°™d¨d
 = 
chù_vi_drivî_gë_video_°™d¨d
,

1576 .
	g£t_video_°™d¨d
 = 
chù_vi_drivî_£t_video_°™d¨d
,

1577 .
	g£t_video_°™d¨d_ext
 = 
chù_vi_drivî_£t_video_°™d¨d_ext
,

1578 .
	ggë_video_evít
 = 
chù_vi_drivî_gë_video_evít
,

1581 
	$öô_chù_vi_drivî
(
tw_£rvi˚_devi˚
 *
tsd
, 
dvm_chù_t
 *
chù
)

1583 
ªt
 = 0;

1584 
tw_chù_vi_drivî_t
 *
drivî
;

1586 
drivî
 = (
tw_chù_vi_drivî_t
 *)
	`kmÆloc
(—w_chù_vi_drivî_t), 
GFP_KERNEL
);

1587 if(
drivî
) {

1588 if(
chù
) {

1589 
drivî
->
chù
 = chip;

1590 
drivî
->
›
 = &
tw_chù_vi_›î©i⁄_›
;

1591 
chù
->
chù_vi_drivî
 = 
drivî
;

1592 
ªt
 = 
drivî
->
›
->
	`öô
(driver);

1593 
drivî
->
›
->
	`ª£t
(driver);

1594 if(
ªt
){

1595 
	`TW_DBG
(
TW_DBG_ERR
, "ÁûedÅÿöô vòdrivî %d\n", 
ªt
);

1596  -
ENOMEM
;

1598 
	`öô_ídpoöt_tcb
(&
drivî
->
›íed_vi_ed
, 
chù
->
bus_id
, chù->
chù_id
,

1599 
INVALID_TW_ED_TYPE_ID
, 0,

1600 0, 
drivî
, 
NULL
,

1601 
NULL
, NULL);

1602 
tsd
->
≥d
 = &
drivî
->
›íed_vi_ed
;

1603  
TW_OK
;

1606 
	`TW_DBG
(
TW_DBG_ERR
, "nullÖointer\n");

1607  -
EINVAL
;

1610 
	`TW_DBG
(
TW_DBG_ERR
, "no memory\n");

1611  -
ENOMEM
;

1614  
TW_ERR
;

1615 
	}
}

1617 
	$ªmove_chù_vi_drivî
(
tw_£rvi˚_devi˚
 *
tsd
)

1619 
tw_chù_vi_drivî_t
 *
drivî
;

1620 
ªt
 = 
TW_ERR
;

1622 if(
tsd
 &&Åsd->
≥d
) {

1623 
drivî
 = 
	`to_gë_chù_vi_drivî_wôh_›íed_logic_ch™_ed
(
tsd
->
≥d
);

1624 
ªt
 = 
drivî
->
›
->
	`ªÀa£
(driver);

1625 
	`k‰ì
(
drivî
);

1628  
ªt
;

1629 
	}
}

1630 
	$tw_chù_vi_drivî_öô
(
tw_chù_devi˚
 *
tcd
,
tw_£rvi˚_devi˚
 *
tsd
,* 
∑ø
,
cmd_¨g
 *
¨g
)

1632 
dvm_chù_t
 *
chù
 = (dvm_chù_à*)
∑ø
;

1634  
	`öô_chù_vi_drivî
(
tsd
,
chù
);

1635 
	}
}

1637 
	$tw_chù_vi_drivî_ªmove
(
tw_chù_devi˚
 *
tcd
,
tw_£rvi˚_devi˚
 *
tsd
,* 
∑ø
,
cmd_¨g
 *
¨g
)

1640 
	`ªmove_chù_vi_drivî
(
tsd
);

1641 
	}
}

1644 
tw_dev_id
 
	gtw_chù_vi_dev_id
 =

1646 .
ïobj
 = {

1647 .
víd‹_id
 = 
TWELL
,

1648 .
	gbus_id
 = 1,

1649 .
	gchù_id
 = 
TW5864
,

1650 .
	gfunc_id
 = (0 << 16) | 0,

1651 .
	gty≥
 = 
TW_VIDEO_IN
,

1652 .
	gkey
 = {0},

1654 .
	gvîsi⁄
 = 1,

1657 
tsd_drivî_›î©i⁄s
 
	gtw_chù_vi_›s
 =

1659 .
öô
 = 
tw_chù_vi_drivî_öô
,

1660 .
	gªmove
 = 
tw_chù_vi_drivî_ªmove
,

1663 
tw_£rvi˚_drivî
 
	gtw_chù_vi_driv
 =

1665 .
drivî
 = {

1666 .
«me
 = "tw5864_video_input_driv",

1668 .
	gdevi˚_id
 = {

1669 .
tid
 = &
tw_chù_vi_dev_id
,

1670 .
	g›s
 = &
tw_chù_vi_›s
,

1676 
	$tw5864_chù_vi_drivî_öô
(* 
∑ø
)

1678 
tw_chù_vi_driv
.
devi˚_id
.
∑ø
 =Öara;

1679  
	`ªgi°î_tc_drivî
(&
tw_chù_vi_driv
);

1680 
	}
}

1683 
	$tw5864_chù_vi_drivî_ªmove
()

1685 
	`uƒegi°î_tc_drivî
(&
tw_chù_vi_driv
);

1686 
	}
}

	@../../tw5864/tw5864/tw_chip_vo.c

1 
	~<tw5864/dvm_comm⁄.h
>

	@../../tw5864/tw5864/tw_decode_sync.c

	@../../tw5864/tw5864/tw_devices_machine.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
tw_kthªad_msg_queue_t
 
	gtw_msg_queue
;

4 
tw_kthªad_msg_poﬁ_t
 
	gtw_msg_poﬁ
;

6 
	$gë_msg_queue_hódî
(
tw_kthªad_msg_queue_t
 **
±r_queue
)

8 *
±r_queue
 = &
tw_msg_queue
;

9 
	}
}

11 
	$gë_msg_poﬁ_hódî
(
tw_kthªad_msg_poﬁ_t
 **
msg_poﬁ
)

13 *
msg_poﬁ
 = &
tw_msg_poﬁ
;

14 
	}
}

16 
	$tw_kthªad_msg_öô
(
tw_kthªad_msg_t
 *
msg
, 
tw_kthªad_msg_poﬁ_t
 *
msg_poﬁ
)

18 if((
msg
!=
NULL
Ë&& (
msg_poﬁ
!=NULL)){

19 
tcb_node_t
 *
node
 = &
msg
->
msg_node
;

20 
node
->
›
 = &
tcb_node_›
;

21 
node
->
›
->
	`öô
(node);

22 
node
->
›
->
	`£t_¥iv
“ode, 
msg
);

23 
	`©omic_£t
(&
msg
->
ªf_cou¡
, 0);

24 
	`•ö_lock_öô
(&
msg
->
lock
);

25 
msg
->
msg_poﬁ
 = msg_pool;

26 
msg
->
chù
 = 
NULL
;

27 
msg
->
msg_ty≥
 = 
REQ_ALGO_NULL
;

28 
msg
->
msg_c⁄ãxt
 = 
NULL
;

30 
	}
}

32 
	$tw_kthªad_msg_ª£t
(
tw_kthªad_msg_t
 *
msg
)

34 if(
msg
 !
NULL
){

35 
	`©omic_£t
(&
msg
->
ªf_cou¡
, 0);

36 
msg
->
chù
 = 
NULL
;

37 
msg
->
msg_ty≥
 = 
REQ_ALGO_NULL
;

38 
msg
->
msg_c⁄ãxt
 = 
NULL
;

40 
	}
}

42 
	$tw_kthªad_msg_ªÀa£
(
tw_kthªad_msg_t
 **
±r_msg
)

44 if(
±r_msg
 !
NULL
){

45 
tw_kthªad_msg_t
 *
msg
 = *
±r_msg
;

46 
Êags
;

47 
	`•ö_lock_úqßve
(&
msg
->
lock
, 
Êags
);

48 if(
	`©omic_ªad
(&
msg
->
ªf_cou¡
) > 1){

49 
	`©omic_dec
(&
msg
->
ªf_cou¡
);

51 
tcb_node_t
 *
node
;

52 if(
msg
->
›
 !
NULL
){

53 
msg
->
›
->
	`ª£t
(msg);

55 
node
 = &
msg
->
msg_node
;

56 if(
node
->
›
 !
NULL
){

57 
node
->
›
->
	`ªÀa£
“ode, &
msg
->
msg_poﬁ
->
poﬁ_node
);

59 *
±r_msg
 = 
NULL
;

61 
	`•ö_u∆ock_úqª°‹e
(&
msg
->
lock
, 
Êags
);

63 
	}
}

65 
	$tw_kthªad_msg_upd©e_∑øm
(
tw_kthªad_msg_t
 *
msg
, 
dvm_chù_t
 *
chù
, 
msg_ty≥
, *
c⁄ãxt
)

67 if(
msg
 !
NULL
){

68 
msg
->
chù
 = chip;

69 
msg
->
msg_ty≥
 = msg_type;

70 
msg
->
msg_c⁄ãxt
 = 
c⁄ãxt
;

72 
	}
}

74 
tw_kthªad_msg_›î©i⁄
 
	gtw_kthªad_msg_›
 = {

75 .
öô
 = 
tw_kthªad_msg_öô
,

76 .
	gª£t
 = 
tw_kthªad_msg_ª£t
,

77 .
	gªÀa£
 = 
tw_kthªad_msg_ªÀa£
,

78 .
	gupd©e_∑øm
 = 
tw_kthªad_msg_upd©e_∑øm
,

81 
	$tw_kthªad_msg_queue_öô
(
tw_kthªad_msg_queue_t
 *
msg_queue
)

83 if(
msg_queue
 !
NULL
){

84 
tcb_node_queue_t
 *
queue
;

85 
queue
 = &
msg_queue
->
queue_node
;

86 
queue
->
›
 = &
tcb_node_queue_›
;

87 
queue
->
›
->
	`öô
(queue);

88 
msg_queue
->
cuº_c⁄sumî
 = 
NULL
;

89 
	`•ö_lock_öô
(&
msg_queue
->
lock
);

91 
	}
}

93 
	$tw_kthªad_msg_queue_put
(
tw_kthªad_msg_queue_t
 *
msg_queue
, 
tw_kthªad_msg_t
 *
msg
)

95 if((
msg_queue
!=
NULL
Ë&& (
msg
!=NULL)){

96 
tcb_node_queue_t
 *
queue
;

97 
queue
 = &
msg_queue
->
queue_node
;

98 if(
queue
->
›
 !
NULL
){

99 
queue
->
›
->
	`put
(queue, &
msg
->
msg_node
);

102 
	}
}

104 
	$tw_kthªad_msg_queue_gë
(
tw_kthªad_msg_queue_t
 *
msg_queue
, 
tw_kthªad_msg_t
 **
±r_msg
)

106 if((
msg_queue
!=
NULL
Ë&& (
±r_msg
!=NULL)){

107 
tcb_node_queue_t
 *
queue
;

108 
queue
 = &
msg_queue
->
queue_node
;

109 *
±r_msg
 = 
NULL
;

110 if(
queue
->
›
 !
NULL
){

111 
tcb_node_t
 *
ãmp_node
;

112 
queue
->
›
->
	`gë
(queue, &
ãmp_node
);

113 if(
ãmp_node
 !
NULL
){

114 *
±r_msg
 = 
	`to_gë_tw_kthªad_msg
(
ãmp_node
);

118 
	}
}

120 
	$tw_kthªad_msg_queue_ªÀa£
(
tw_kthªad_msg_queue_t
 *
msg_queue
)

122 if(
msg_queue
 !
NULL
){

123 
msg_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(msg_queue);

124 
msg_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(msg_queue)){

125 
msg_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(msg_queue);

126 if(
msg_queue
->
cuº_c⁄sumî
 =
NULL
){

129 
msg_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(msg_queue);

132 
	}
}

134 
	$tw_kthªad_msg_queue_gë_cuº_c⁄sumî_‰om_queue
(
tw_kthªad_msg_queue_t
 *
msg_queue
)

136 if(
msg_queue
 !
NULL
){

137 
Êags
;

138 
	`•ö_lock_úqßve
(&
msg_queue
->
lock
, 
Êags
);

139 if(
msg_queue
->
cuº_c⁄sumî
 =
NULL
){

140 
	`•ö_u∆ock_úqª°‹e
(&
msg_queue
->
lock
, 
Êags
);

141 if(
msg_queue
->
›
 !
NULL
){

142 
msg_queue
->
›
->
	`gë
(msg_queue, &msg_queue->
cuº_c⁄sumî
);

144 
	`tw_kthªad_msg_queue_gë
(
msg_queue
, &msg_queue->
cuº_c⁄sumî
);

146 
	`•ö_lock_úqßve
(&
msg_queue
->
lock
, 
Êags
);

148 
	`•ö_u∆ock_úqª°‹e
(&
msg_queue
->
lock
, 
Êags
);

150 
	}
}

152 
	$tw_kthªad_msg_queue_ªÀa£_cuº_c⁄sumî
(
tw_kthªad_msg_queue_t
 *
msg_queue
)

154 if(
msg_queue
 !
NULL
){

155 
Êags
;

156 
	`•ö_lock_úqßve
(&
msg_queue
->
lock
, 
Êags
);

157 if(
msg_queue
->
cuº_c⁄sumî
 !
NULL
){

158 if(
msg_queue
->
cuº_c⁄sumî
->
›
 !
NULL
){

159 
msg_queue
->
cuº_c⁄sumî
->
›
->
	`ªÀa£
(&msg_queue->curr_consumer);

161 
	`tw_kthªad_msg_ªÀa£
(&
msg_queue
->
cuº_c⁄sumî
);

164 
	`•ö_u∆ock_úqª°‹e
(&
msg_queue
->
lock
, 
Êags
);

166 
	}
}

168 
	$tw_kthªad_msg_queue_gë_cuº_queue_íåy_numbî
(
tw_kthªad_msg_queue_t
 *
msg_queue
)

170 
ªt
 = 0;

171 if(
msg_queue
 !
NULL
){

172 
ªt
 = 
msg_queue
->
queue_node
.
›
->
	`gë_queue_cuº_íåy_numbî
(&msg_queue->queue_node);

174  
ªt
;

175 
	}
}

177 
tw_kthªad_msg_queue_›î©i⁄
 
	gtw_kthªad_msg_queue_›
 =

179 .
öô
 = 
tw_kthªad_msg_queue_öô
,

180 .
	gput
 = 
tw_kthªad_msg_queue_put
,

181 .
	ggë
 = 
tw_kthªad_msg_queue_gë
,

182 .
	gªÀa£
 = 
tw_kthªad_msg_queue_ªÀa£
,

184 .
	ggë_cuº_c⁄sumî_‰om_queue
 = 
tw_kthªad_msg_queue_gë_cuº_c⁄sumî_‰om_queue
,

185 .
	gªÀa£_cuº_c⁄sumî
 = 
tw_kthªad_msg_queue_ªÀa£_cuº_c⁄sumî
,

186 .
	ggë_cuº_queue_íåy_numbî
 = 
tw_kthªad_msg_queue_gë_cuº_queue_íåy_numbî
,

189 
	$öô_tw_kthªad_msg_queue
(
tw_kthªad_msg_queue_t
 *
msg_queue
)

191 if(
msg_queue
 !
NULL
){

192 
msg_queue
->
›
 = &
tw_kthªad_msg_queue_›
;

193 
msg_queue
->
›
->
	`öô
(msg_queue);

195 
	}
}

197 
	$ªmove_tw_kthªad_msg_queue
(
tw_kthªad_msg_queue_t
 *
msg_queue
)

199 if(
msg_queue
 !
NULL
){

200 
msg_queue
->
›
->
	`ªÀa£
(msg_queue);

202 
	}
}

204 
	$tw_kthªad_msg_poﬁ_gë
(
tw_kthªad_msg_poﬁ_t
 *
msg_poﬁ
, 
tw_kthªad_msg_t
 **
±r_msg
)

206 if((
msg_poﬁ
!=
NULL
Ë&& (
±r_msg
!=NULL)){

207 
tcb_node_poﬁ_t
 *
poﬁ_node
 = &
msg_poﬁ
->pool_node;

208 *
±r_msg
 = 
NULL
;

209 if(
poﬁ_node
->
›
 !
NULL
){

210 
tcb_node_t
 *
ãmp_node
;

211 
poﬁ_node
->
›
->
	`gë
’oﬁ_node, &
ãmp_node
);

212 if(
ãmp_node
 !
NULL
){

213 *
±r_msg
 = 
	`to_gë_tw_kthªad_msg
(
ãmp_node
);

214 
	`©omic_öc
(&((*
±r_msg
)->
ªf_cou¡
));

218 
	}
}

220 
	$tw_kthªad_msg_poﬁ_åy_gë
(
tw_kthªad_msg_poﬁ_t
 *
msg_poﬁ
, 
tw_kthªad_msg_t
 **
±r_msg
)

222 if((
msg_poﬁ
!=
NULL
Ë&& (
±r_msg
!=NULL)){

223 
tcb_node_poﬁ_t
 *
poﬁ_node
 = &
msg_poﬁ
->pool_node;

224 *
±r_msg
 = 
NULL
;

225 if(
poﬁ_node
->
›
 !
NULL
){

226 
tcb_node_t
 *
ãmp_node
;

227 
poﬁ_node
->
›
->
	`åy_gë
’oﬁ_node, &
ãmp_node
);

228 if(
ãmp_node
 !
NULL
){

229 *
±r_msg
 = 
	`to_gë_tw_kthªad_msg
(
ãmp_node
);

230 
	`©omic_öc
(&((*
±r_msg
)->
ªf_cou¡
));

234 
	}
}

236 
	$tw_kthªad_msg_poﬁ_put
(
tw_kthªad_msg_poﬁ_t
 *
msg_poﬁ
, 
tw_kthªad_msg_t
 *
msg
)

238 if((
msg_poﬁ
!=
NULL
Ë&& (
msg
!=NULL)){

239 
tcb_node_poﬁ_t
 *
poﬁ_node
 = &
msg_poﬁ
->pool_node;

240 if(
poﬁ_node
->
›
 !
NULL
){

241 
poﬁ_node
->
›
->
	`put
’oﬁ_node, &
msg
->
msg_node
);

244 
	}
}

246 
	$tw_kthªad_msg_poﬁ_ªÀa£
(
tw_kthªad_msg_poﬁ_t
 *
msg_poﬁ
)

248 if(
msg_poﬁ
 !
NULL
){

249 
msg_poﬁ
->
poﬁ_node
.
›
->
	`ªÀa£
(&msg_pool->pool_node);

250 if(
msg_poﬁ
->
msg_ˇche_poﬁ
 !
NULL
){

251 
	`k‰ì
(
msg_poﬁ
->
msg_ˇche_poﬁ
);

252 
msg_poﬁ
->
msg_ˇche_poﬁ
 = 
NULL
;

254 
msg_poﬁ
->
msg_íåy_numbî
 = 0;

256 
	}
}

258 
	$tw_kthªad_msg_poﬁ_öô
(
tw_kthªad_msg_poﬁ_t
 *
msg_poﬁ
)

260 
ªt
 = -
ENOMEM
;

261 if(
msg_poﬁ
 !
NULL
){

262 
tcb_node_poﬁ_t
 *
poﬁ_node
 = &
msg_poﬁ
->pool_node;

263 
tw_kthªad_msg_t
 *
msg
;

264 
i
;

266 
poﬁ_node
->
›
 = &
tcb_node_poﬁ_›
;

267 
msg_poﬁ
->
msg_íåy_numbî
 = 128;

268 
msg_poﬁ
->
msg_ˇche_poﬁ
 = (
tw_kthªad_msg_t
*)
	`kmÆloc
(—w_kthªad_msg_t)*msg_poﬁ->
msg_íåy_numbî
, 
GFP_KERNEL
);

269 if(
msg_poﬁ
->
msg_ˇche_poﬁ
 =
NULL
){

270 
	`¥ötk
("%s.%d: c™'à¸óã msgÖoﬁ\n", 
__FUNCTION__
, 
__LINE__
);

272 
poﬁ_node
->
›
->
	`öô
’oﬁ_node, 
msg_poﬁ
->
msg_íåy_numbî
);

273 
i
=0; i<
msg_poﬁ
->
msg_íåy_numbî
; i++) {

274 
msg
 = &
msg_poﬁ
->
msg_ˇche_poﬁ
[
i
];

275 
msg
->
›
 = &
tw_kthªad_msg_›
;

276 
msg
->
›
->
	`öô
(msg, 
msg_poﬁ
);

277 
msg
->
›
->
	`ªÀa£
(&msg);

279 
ªt
 = 0;

282  
ªt
;

283 
	}
}

285 
tw_kthªad_msg_poﬁ_›î©i⁄
 
	gtw_kthªad_msg_poﬁ_›
 =

287 .
gë
 = 
tw_kthªad_msg_poﬁ_gë
,

288 .
	gåy_gë
 = 
tw_kthªad_msg_poﬁ_åy_gë
,

289 .
	gput
 = 
tw_kthªad_msg_poﬁ_put
,

290 .
	gªÀa£
 = 
tw_kthªad_msg_poﬁ_ªÀa£
,

291 .
	göô
 = 
tw_kthªad_msg_poﬁ_öô
,

294 
	$öô_tw_kthªad_msg_poﬁ
(
tw_kthªad_msg_poﬁ_t
 *
msg_poﬁ
)

296 
ªt
 = -
ENOMEM
;

297 if(
msg_poﬁ
 !
NULL
){

298 
msg_poﬁ
->
›
 = &
tw_kthªad_msg_poﬁ_›
;

299 
ªt
 = 
msg_poﬁ
->
›
->
	`öô
(msg_pool);

301  
ªt
;

302 
	}
}

304 
	$ªmove_tw_kthªad_msg_poﬁ
(
tw_kthªad_msg_poﬁ_t
 *
msg_poﬁ
)

306 if(
msg_poﬁ
 !
NULL
){

307 
msg_poﬁ
->
›
->
	`ªÀa£
(msg_pool);

309 
	}
}

311 
	$gí_drivî_ªq_msg_‰om_ícode_ch™
(
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
, 
msg_ty≥
)

313 
tw_kthªad_msg_poﬁ_t
 *
tw_msg_poﬁ
;

314 
tw_kthªad_msg_t
 *
tw_msg
;

315 
ªt
 = -1;

317 
	`gë_msg_poﬁ_hódî
(&
tw_msg_poﬁ
);

318 
tw_msg_poﬁ
->
›
->
	`gë
—w_msg_poﬁ, &
tw_msg
);

319 if(
tw_msg
!
NULL
) {

320 
tw_kthªad_msg_queue_t
 *
tw_msg_queue
;

321 
	`gë_msg_queue_hódî
(&
tw_msg_queue
);

322 
tw_msg
->
›
->
	`upd©e_∑øm
—w_msg, 
ícode_ch™
->
chù
, 
msg_ty≥
,Éncode_chan);

323 
tw_msg_queue
->
›
->
	`put
—w_msg_queue, 
tw_msg
);

324 
ªt
 = 0;

326  
ªt
;

327 
	}
}

329 
	$åy_gí_drivî_ªq_msg_‰om_ícode_ch™
(
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
, 
msg_ty≥
)

331 
tw_kthªad_msg_poﬁ_t
 *
tw_msg_poﬁ
;

332 
tw_kthªad_msg_t
 *
tw_msg
;

333 
ªt
 = -1;

335 
	`gë_msg_poﬁ_hódî
(&
tw_msg_poﬁ
);

336 
tw_msg_poﬁ
->
›
->
	`åy_gë
—w_msg_poﬁ, &
tw_msg
);

337 if(
tw_msg
!
NULL
) {

338 
tw_kthªad_msg_queue_t
 *
tw_msg_queue
;

339 
	`gë_msg_queue_hódî
(&
tw_msg_queue
);

340 
tw_msg
->
›
->
	`upd©e_∑øm
—w_msg, 
ícode_ch™
->
chù
, 
msg_ty≥
,Éncode_chan);

341 
tw_msg_queue
->
›
->
	`put
—w_msg_queue, 
tw_msg
);

342 
ªt
 = 0;

344  
ªt
;

345 
	}
}

347 
	$noblock_gí_dev_¶i˚hód_ªq_msg
(*
c⁄ãxt
)

349 
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
 = (tw_h264_logic_ícode_ch™_t*)
c⁄ãxt
;

350 if(
	`åy_gí_drivî_ªq_msg_‰om_ícode_ch™
(
ícode_ch™
, 
REQ_ALGO_SLICE_HEAD
) != 0){

351 
ícode_ch™
->
n⁄block_msg_timî_id
[
REQ_ALGO_SLICE_HEAD
] = 
	`AddSögÀFúeTimîJob
(
NONBLOCK_COUNT
, 
noblock_gí_dev_¶i˚hód_ªq_msg
,Éncode_chan);

352 if(
ícode_ch™
->
n⁄block_msg_timî_id
[
REQ_ALGO_SLICE_HEAD
] =
INVALIDTIMERID
){

353 
	`¥ötk
("\n\n**************gí sli˚hódÑeq msg faû[%d]***********\n\n", 
__LINE__
);

357 
ícode_ch™
->
n⁄block_msg_timî_id
[
REQ_ALGO_SLICE_HEAD
] = 
INVALIDTIMERID
;

360 
	}
}

362 
	$noblock_gí_dev_avSync_ªq_msg
(*
c⁄ãxt
)

364 
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
 = (tw_h264_logic_ícode_ch™_t*)
c⁄ãxt
;

365 if(
	`åy_gí_drivî_ªq_msg_‰om_ícode_ch™
(
ícode_ch™
, 
REQ_AV_SYNC
) != 0){

366 
ícode_ch™
->
n⁄block_msg_timî_id
[
REQ_AV_SYNC
] = 
	`AddSögÀFúeTimîJob
(
NONBLOCK_COUNT
, 
noblock_gí_dev_avSync_ªq_msg
,Éncode_chan);

367 if(
ícode_ch™
->
n⁄block_msg_timî_id
[
REQ_AV_SYNC
] =
INVALIDTIMERID
){

368 
	`¥ötk
("\n\n**************gíávSyn¯ªq msg faû[%d]***********\n\n", 
__LINE__
);

372 
ícode_ch™
->
n⁄block_msg_timî_id
[
REQ_AV_SYNC
] = 
INVALIDTIMERID
;

375 
	}
}

377 
	$noblock_gí_chù_ª£t_ªq_msg
(*
c⁄ãxt
)

379 
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
 = (tw_h264_logic_ícode_ch™_t*)
c⁄ãxt
;

380 if(
	`åy_gí_drivî_ªq_msg_‰om_ícode_ch™
(
ícode_ch™
, 
REQ_ALGO_CHIP_RESET
) != 0){

381 
ícode_ch™
->
n⁄block_msg_timî_id
[
REQ_ALGO_CHIP_RESET
] = 
	`AddSögÀFúeTimîJob
(
NONBLOCK_COUNT
, 
noblock_gí_chù_ª£t_ªq_msg
,Éncode_chan);

382 if(
ícode_ch™
->
n⁄block_msg_timî_id
[
REQ_ALGO_CHIP_RESET
] =
INVALIDTIMERID
){

383 
	`¥ötk
("\n\n**************gí chù_ª£àªq msg faû[%d]***********\n\n", 
__LINE__
);

387 
ícode_ch™
->
n⁄block_msg_timî_id
[
REQ_ALGO_CHIP_RESET
] = 
INVALIDTIMERID
;

390 
	}
}

392 
	$dñay_gí_dev_¶i˚hód_ªq_msg
(*
c⁄ãxt
)

394 
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
 = (tw_h264_logic_ícode_ch™_t*)
c⁄ãxt
;

395 
ícode_ch™
->
dñay_msg_timî_id
[
REQ_ALGO_SLICE_HEAD
] = 
INVALIDTIMERID
;

396 if(
	`åy_gí_drivî_ªq_msg_‰om_ícode_ch™
(
ícode_ch™
, 
REQ_ALGO_SLICE_HEAD
) != 0){

397 
ícode_ch™
->
dñay_msg_timî_id
[
REQ_ALGO_SLICE_HEAD
] = 
	`AddSögÀFúeTimîJob
(
DELAY_COUNT
, 
dñay_gí_dev_¶i˚hód_ªq_msg
,Éncode_chan);

398 if(
ícode_ch™
->
dñay_msg_timî_id
[
REQ_ALGO_SLICE_HEAD
] =
INVALIDTIMERID
){

399 
	`¥ötk
("\n\n&&&&&&&&&&&&&gí dñay sli˚hódÑeq msg faû[%d]***********\n\n", 
__LINE__
);

403 
	}
}

405 
	$dñay_gí_dev_avSync_ªq_msg
(*
c⁄ãxt
)

407 
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
 = (tw_h264_logic_ícode_ch™_t*)
c⁄ãxt
;

408 
ícode_ch™
->
dñay_msg_timî_id
[
REQ_AV_SYNC
] = 
INVALIDTIMERID
;

409 if(
	`åy_gí_drivî_ªq_msg_‰om_ícode_ch™
(
ícode_ch™
, 
REQ_AV_SYNC
) != 0){

410 
ícode_ch™
->
dñay_msg_timî_id
[
REQ_AV_SYNC
] = 
	`AddSögÀFúeTimîJob
(
DELAY_COUNT
, 
dñay_gí_dev_avSync_ªq_msg
,Éncode_chan);

411 if(
ícode_ch™
->
dñay_msg_timî_id
[
REQ_AV_SYNC
] =
INVALIDTIMERID
){

412 
	`¥ötk
("\n\n&&&&&&&&&&&&&gí dñayávSyn¯ªq msg faû[%d]***********\n\n", 
__LINE__
);

416 
	}
}

418 
	$dñay_gí_chù_ª£t_ªq_msg
(*
c⁄ãxt
)

420 
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
 = (tw_h264_logic_ícode_ch™_t*)
c⁄ãxt
;

421 
ícode_ch™
->
dñay_msg_timî_id
[
REQ_ALGO_CHIP_RESET
] = 
INVALIDTIMERID
;

422 if(
	`åy_gí_drivî_ªq_msg_‰om_ícode_ch™
(
ícode_ch™
, 
REQ_ALGO_CHIP_RESET
) != 0){

423 
ícode_ch™
->
dñay_msg_timî_id
[
REQ_ALGO_CHIP_RESET
] = 
	`AddSögÀFúeTimîJob
(
DELAY_COUNT
, 
dñay_gí_chù_ª£t_ªq_msg
,Éncode_chan);

424 if(
ícode_ch™
->
dñay_msg_timî_id
[
REQ_ALGO_CHIP_RESET
] =
INVALIDTIMERID
){

425 
	`¥ötk
("\n\n&&&&&&&&&&&&&gí dñay chù_ª£àªq msg faû[%d]***********\n\n", 
__LINE__
);

429 
	}
}

431 
	$ícode_ch™_gí_ªq_msg
(
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
, 
msg_ty≥
, 
block
)

433 
dvm_chù_t
 *
chù
;

434 
ªt
 = -1;

436 if((
msg_ty≥
>=
INVALID_REQ_ALGO
Ë|| !
ícode_ch™
)

437  
ªt
;

438 
chù
 = 
ícode_ch™
->chip;

440 #ifde‡
USE_ON_CHIP_TIMER


441 if(
chù
->
dißbÀ_timî
) {

442 
chù
->
	`dißbÀ_timî
(chip);

445 
	`dißbÀ_timî_öt
();

447 if(
block
 =
BLOCK_OP
) {

448 
ªt
 = 
	`gí_drivî_ªq_msg_‰om_ícode_ch™
(
ícode_ch™
, 
msg_ty≥
);

449 }if(
block
 =
NONBLOCK_OP
) {

450 if(
ícode_ch™
->
n⁄block_msg_timî_id
[
msg_ty≥
] =
INVALIDTIMERID
){

451 
msg_ty≥
){

452 
REQ_ALGO_SLICE_HEAD
:

453 
ªt
 = 
	`noblock_gí_dev_¶i˚hód_ªq_msg
(
ícode_ch™
);

455 
REQ_AV_SYNC
:

456 
ªt
 = 
	`noblock_gí_dev_avSync_ªq_msg
(
ícode_ch™
);

458 
REQ_ALGO_CHIP_RESET
:

459 
ªt
 = 
	`noblock_gí_chù_ª£t_ªq_msg
(
ícode_ch™
);

462 
	`¥ötk
("nÿsuΩp‹àmsg %dÇoblock\n", 
msg_ty≥
);

466 
	`¥ötk
("%s:%d-%d, havêbì¿addedÅimî\n", 
__FUNCTION__
, 
msg_ty≥
, 
block
);

469 
ªt
 = 0;

470 if(
ícode_ch™
->
dñay_msg_timî_id
[
msg_ty≥
] =
INVALIDTIMERID
){

471 
msg_ty≥
){

472 
REQ_ALGO_SLICE_HEAD
:

473 
ícode_ch™
->
dñay_msg_timî_id
[
REQ_ALGO_SLICE_HEAD
] = 
	`AddSögÀFúeTimîJob
(
DELAY_COUNT
, 
dñay_gí_dev_¶i˚hód_ªq_msg
,Éncode_chan);

474 if(
ícode_ch™
->
dñay_msg_timî_id
[
REQ_ALGO_SLICE_HEAD
] =
INVALIDTIMERID
){

475 
	`¥ötk
("\n\n&&&&&&&&&&&& gen slice_headÑeq msg fail&&&&&&&&&&&&\n\n");

478 
REQ_AV_SYNC
:

479 
ícode_ch™
->
dñay_msg_timî_id
[
REQ_AV_SYNC
] = 
	`AddSögÀFúeTimîJob
(
DELAY_COUNT
, 
dñay_gí_dev_avSync_ªq_msg
,Éncode_chan);

480 if(
ícode_ch™
->
dñay_msg_timî_id
[
REQ_AV_SYNC
] =
INVALIDTIMERID
){

481 
	`¥ötk
("\n\n&&&&&&&&&&& genávSyncÑeq msg fail &&&&&&&&&&&&&&&&\n\n");

484 
REQ_ALGO_CHIP_RESET
:

485 
ícode_ch™
->
dñay_msg_timî_id
[
REQ_ALGO_CHIP_RESET
] = 
	`AddSögÀFúeTimîJob
(
DELAY_COUNT
, 
dñay_gí_chù_ª£t_ªq_msg
,Éncode_chan);

486 if(
ícode_ch™
->
dñay_msg_timî_id
[
REQ_ALGO_CHIP_RESET
] =
INVALIDTIMERID
){

487 
	`¥ötk
("\n\n&&&&&&&&&&&& gen chip_resetÑeq msg fail&&&&&&&&&&&&\n\n");

491 
	`¥ötk
("nÿsuΩp‹àmsg %d dñay\n", 
msg_ty≥
);

495 
	`¥ötk
("%s:%d-%d, havêbì¿addedÅimî\n", 
__FUNCTION__
, 
msg_ty≥
, 
block
);

498 #ifde‡
USE_ON_CHIP_TIMER


499 if(
chù
->
íabÀ_timî
) {

500 
chù
->
	`íabÀ_timî
(chip);

503 
	`íabÀ_timî_öt
();

505  
ªt
;

506 
	}
}

	@../../tw5864/tw5864/tw_h264_encode.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
tw_h264_ícode_c⁄figuøti⁄_t
 
	gdeÁu…_h264_ma°î_ícode_¥›îty
 = {

4 .
ch™gedMask
 = 
TW5864_ENCODE_CONFIG_MASKALL
,

5 .
	gvideoSènd¨d
 = 
TW_VIDEO_STANDARD_PAL
,

7 .
	gícodeSize
 = 
TW_VIDEO_SIZE_CIF
,

8 .
	gwidth
 = 
WIDTH_FRAME_CIF_PAL
,

9 .
	gheight
 = 
HEIGHT_FRAME_CIF_PAL
,

10 .
	gbôøã
 = 
DEFAULT_BITRATE_CIFSIZE
,

12 .
	gícodeSize
 = 
TW_VIDEO_SIZE_D1
,

13 .
	gwidth
 = 
WIDTH_FRAME_D1_PAL
,

14 .
	gheight
 = 
HEIGHT_FRAME_D1_PAL
,

15 .
	gbôøã
 = 
DEFAULT_BITRATE_D1SIZE
,

17 .
	gÂs
 = 
DEFAULT_FRAMERATE_PAL
,

18 .
	gkeyFømeI¡îvÆs
 = 
DEFAULT_I_P_STRIDE
,

19 .
	gg›I¡îvÆs
 = 
DEFAULT_GOP_VALUE
,

20 .
	gimageLevñ
 = 0,

21 .
	gqpi
 = 
DEFAULT_QP
,

22 .
	gqµ
 = 
DEFAULT_QP
,

23 .
	gqpb
 = 
DEFAULT_QP
,

25 
tw_h264_ícode_„©uª_∑øm_t
 
	gdeÁu…_maö_ícode_„©uª
 = {

26 .
b_íabÀ_deöãæa˚
 = 
TW_H264_FEATURE_OFF
,

27 .
	gb_íabÀ_skù
 = 
TW_H264_FEATURE_OFF
,

28 .
	gb_íabÀ_hÆf_pixñ
 = 
TW_H264_FEATURE_ON
,

29 .
	gb_íabÀ_I_4X4
 = 
TW_H264_FEATURE_ON
,

30 .
	gb_íabÀ_qu¨ãr_pixñ
 = 
TW_H264_FEATURE_ON
,

31 .
	gi_mb_dñay_vÆue
 = 
MB_DELAY_VALUE
,

32 .
	gch™ge_mask_Êag
 = 0xff,

34 
tw_h264_ícode_„©uª_∑øm_t
 
	gdeÁu…_sub_ícode_„©uª
 = {

35 .
b_íabÀ_deöãæa˚
 = 
TW_H264_FEATURE_OFF
,

36 .
	gb_íabÀ_skù
 = 
TW_H264_FEATURE_OFF
,

37 .
	gb_íabÀ_hÆf_pixñ
 = 
TW_H264_FEATURE_ON
,

38 .
	gb_íabÀ_I_4X4
 = 
TW_H264_FEATURE_ON
,

39 .
	gb_íabÀ_qu¨ãr_pixñ
 = 
TW_H264_FEATURE_ON
,

40 .
	gi_mb_dñay_vÆue
 = 
MB_DELAY_VALUE
,

41 .
	gch™ge_mask_Êag
 = 0xff,

44 
	gs_⁄ly_i_4x4
 = 0;

46 
tw_h264_ícode_rc_t
 
	gdeÁu…_maö_ícode_rc
 = {

47 .
e_image_¥i‹ôy
 = 
TW_RC_IMAGE_QUALITY_FIRST
,

48 .
	ge_rc_ty≥
 = 
TW_H264_CBR
,

49 .
	gi_deÁu…_qp
 = 
DEFAULT_QP
,

50 .
	gch™ge_mask_Êag
 = 0xf,

53 
tw_h264_ícode_c⁄figuøti⁄_t
 
	gdeÁu…_h264_sub_ícode_¥›îty
 = {

54 .
ch™gedMask
 = 
TW5864_ENCODE_CONFIG_MASKALL
,

55 .
	gvideoSènd¨d
 = 
TW_VIDEO_STANDARD_PAL
,

57 .
	gícodeSize
 = 
TW_VIDEO_SIZE_QCIF
,

58 .
	gwidth
 = 
WIDTH_FRAME_QCIF_PAL
,

59 .
	gheight
 = 
HEIGHT_FRAME_QCIF_PAL
,

60 .
	gbôøã
 = 
DEFAULT_BITRATE_QCIFSIZE
,

62 .
	gícodeSize
 = 
TW_VIDEO_SIZE_CIF
,

63 .
	gwidth
 = 
WIDTH_FRAME_CIF_PAL
,

64 .
	gheight
 = 
HEIGHT_FRAME_CIF_PAL
,

65 .
	gbôøã
 = 
DEFAULT_BITRATE_CIFSIZE
,

67 .
	gÂs
 = 
DEFAULT_FRAMERATE_PAL
,

68 .
	gkeyFømeI¡îvÆs
 = 
DEFAULT_I_P_STRIDE
,

69 .
	gg›I¡îvÆs
 = 
DEFAULT_GOP_VALUE
,

70 .
	gimageLevñ
 = 0,

71 .
	gqpi
 = 
DEFAULT_QP
,

72 .
	gqµ
 = 
DEFAULT_QP
,

73 .
	gqpb
 = 
DEFAULT_QP
,

76 
tw_h264_ícode_rc_t
 
	gdeÁu…_sub_ícode_rc
 = {

77 .
e_image_¥i‹ôy
 = 
TW_RC_IMAGE_QUALITY_FIRST
,

78 .
	ge_rc_ty≥
 = 
TW_H264_CBR
,

79 .
	gi_deÁu…_qp
 = 
DEFAULT_QP
,

80 .
	gch™ge_mask_Êag
 = 0xf,

83 c⁄° 
u32
 
	gdeÁu…_n⁄ªÆ_time_Âs_èbÀ
[
TW5864_PHY_VD_CHAN_NUMBER
]= {

90 c⁄° 
u32
 
	gdeÁu…_n⁄ªÆ_time_fmt_èbÀ
[
TW5864_PHY_VD_CHAN_NUMBER
]= {

91 
TW_VIDEO_SIZE_D1
, TW_VIDEO_SIZE_D1, TW_VIDEO_SIZE_D1, TW_VIDEO_SIZE_D1,

92 
TW_VIDEO_SIZE_D1
, TW_VIDEO_SIZE_D1, TW_VIDEO_SIZE_D1, TW_VIDEO_SIZE_D1,

93 
TW_VIDEO_SIZE_D1
, TW_VIDEO_SIZE_D1, TW_VIDEO_SIZE_D1, TW_VIDEO_SIZE_D1,

94 
TW_VIDEO_SIZE_D1
, TW_VIDEO_SIZE_D1, TW_VIDEO_SIZE_D1, TW_VIDEO_SIZE_D1,

97 c⁄° 
	gLambda_lookup_èbÀ
[52] =

113 c⁄° 
	gI¡ø4X4_Lambda3
[52] = {

122 
tw_h264_h™dÀ_u£r_q
(
dvm_chù_t
 *
chù
, 
tw_h264_logic_ícode_ch™_t
 *
logic_ch∆
, *
«me
, *
ßve
, 
˙t
);

124 
tw_h264_ßve_chn
(
tw_h264_logic_ícode_ch™_t
 *, *);

126 
tw_h264_to_fûe
(
fûe
 *, 
tw_video_‰ame_tcb_t
 *);

127 
tw_mv_to_fûe
(
fûe
 *
mv_fûe
, 
tw_video_mv_‰ame_tcb_t
 *
‰ame
);

129 
ªgi°î_›íed_logic_ícode_ch™_öto_ma°î_¶Ÿ
(
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
, 
tw_h264_phy_video_¶Ÿ_t
 *
ma°î_¶Ÿ
);

130 
	$h264_ícode_drivî_ö_uƒegi°î_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

132 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

133 
ed_tcb_t
 *
ed_tcb
;

134 
dvm_chù_t
 *
chù
;

135 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

137 
ed_fsm
->
›
->
	`ª£t
(ed_fsm);

138 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

139 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

140 if(
	`©omic_ªad
(&
h264_logic_ícode_ch™
->
›íed_Êag
)){

144 
ed_tcb
->
ed
.
›
->
	`com∂ëe_d⁄e
(&ed_tcb->ed);

146 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

148  
TW_OK
;

149 
	}
}

151 
	$h264_ícode_drivî_ö_uƒegi°î_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

153  
TW_OK
;

154 
	}
}

156 
	$h264_ícode_drivî_ö_uƒegi°î_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

158  
TW_OK
;

159 
	}
}

161 
	$h264_ícode_drivî_ö_uƒegi°î_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

163  
TW_OK
;

164 
	}
}

166 
	$h264_ícode_drivî_ö_uƒegi°î_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

168 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

169 
ed_tcb_t
 *
ed_tcb
;

170 
dvm_chù_t
 *
chù
;

171 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

173 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

174 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

175 
chù
 = 
h264_logic_ícode_ch™
->chip;

176 if(
	`©omic_ªad
(&
h264_logic_ícode_ch™
->
›íed_Êag
) == 0){

177 
chù
->
	`chù_›í
(chip);

179 
	`¥ötk
("%s, %d\n", 
__FUNCTION__
, 
__LINE__
);

180 
	`ªgi°î_›íed_logic_ícode_ch™_öto_ma°î_¶Ÿ
(
h264_logic_ícode_ch™
, h264_logic_ícode_ch™->
ma°î_¶Ÿ
);

181 
	`öô_ícode_ch™_£rvi˚_tcb_wôh_fú°_°¨t
(&
h264_logic_ícode_ch™
->
ícode_ªque°_tcb
);

182 
h264_logic_ícode_ch™
->
ícode_c⁄åﬁ
.
œ°_jiffõs
 = 
jiffõs
;

183 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_CLOSED
);

185 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

186 
	`drivî_gí_›í_evít
(
ed_tcb
, 1);

188  
TW_OK
;

189 
	}
}

191 
	$h264_ícode_drivî_ö_uƒegi°î_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

193  
TW_OK
;

194 
	}
}

196 
	$h264_ícode_drivî_ö_˛o£d_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

198 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

199 
ed_tcb_t
 *
ed_tcb
;

200 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

202 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

203 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

204 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

205 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_UNREGISTER
);

206 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

208  
TW_OK
;

209 
	}
}

211 
	$h264_ícode_drivî_ö_˛o£d_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

213  
TW_OK
;

214 
	}
}

216 
	$h264_ícode_drivî_ö_˛o£d_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

218 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

219 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

220 
ed_tcb_t
 *
ed_tcb
;

222 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

223 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

224 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

225 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 0);

227  
TW_OK
;

228 
	}
}

230 
	$h264_ícode_drivî_ö_˛o£d_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

232 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

233 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

234 
ed_tcb_t
 *
ed_tcb
;

236 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

237 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

238 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

239 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 0);

241  
TW_OK
;

242 
	}
}

244 
	$h264_ícode_drivî_ö_˛o£d_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

246 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

247 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

249 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

250 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

252 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_SUSPEND
);

254 
	`ícode_ch™_gí_ªq_msg
(
h264_logic_ícode_ch™
, 
REQ_ALGO_SLICE_HEAD
, 
NONBLOCK_OP
);

256  
TW_OK
;

257 
	}
}

259 
	$h264_ícode_drivî_ö_˛o£d_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

261  
TW_OK
;

262 
	}
}

264 
	$h264_ícode_drivî_ö_idÀ_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

266 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

267 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

268 
ed_tcb_t
 *
ed_tcb
;

270 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

271 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

272 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_CLOSED
);

273 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

274 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

276  
TW_OK
;

277 
	}
}

279 
	$h264_ícode_drivî_ö_idÀ_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

281  
TW_OK
;

282 
	}
}

284 
	$h264_ícode_drivî_ö_idÀ_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

286 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

287 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

289 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

290 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

291 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_SUSPEND
);

293  
TW_OK
;

294 
	}
}

296 
	$h264_ícode_drivî_ö_idÀ_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

298  
TW_OK
;

299 
	}
}

301 
	$h264_ícode_drivî_ö_idÀ_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

303  
TW_OK
;

304 
	}
}

306 
	$h264_ícode_drivî_ö_idÀ_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

308 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

309 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
 = (tw_h264_logic_ícode_ch™_t*)
c⁄ãxt
;

310 
ed_fsm
->
›
->
	`upd©e_íabÀ_åiggî_≥ndög_evít
(ed_fsm, 0);

311 
ed_fsm
->
›
->
	`upd©e_íabÀ_°©e_å™s„r
(ed_fsm, 0);

312 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_STANDBY
);

313 
	`öô_ícode_ch™_£rvi˚_tcb_wôh_°¨t_ícode
(&
h264_logic_ícode_ch™
->
ícode_ªque°_tcb
);

315  
TW_OK
;

316 
	}
}

318 
	$h264_ícode_drivî_ö_°™dby_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

320 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

321 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

322 
ed_tcb_t
 *
ed_tcb
;

324 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

325 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

326 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

327 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 0);

329  
TW_OK
;

330 
	}
}

332 
	$h264_ícode_drivî_ö_°™dby_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

334  
TW_OK
;

335 
	}
}

337 
	$h264_ícode_drivî_ö_°™dby_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

339 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

340 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

341 
ed_tcb_t
 *
ed_tcb
;

343 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

344 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

345 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

346 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 0);

348  
TW_OK
;

349 
	}
}

351 
	$h264_ícode_drivî_ö_°™dby_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

353 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

354 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

355 
ed_tcb_t
 *
ed_tcb
;

357 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

358 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

359 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

360 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 0);

362  
TW_OK
;

363 
	}
}

365 
	$h264_ícode_drivî_ö_°™dby_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

367  
TW_OK
;

368 
	}
}

370 
	$h264_ícode_drivî_ö_°™dby_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

372 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

373 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_RUNNING
);

375  
TW_OK
;

376 
	}
}

378 
	$h264_ícode_drivî_ö_su•íd_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

380 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

381 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

382 
ed_tcb_t
 *
ed_tcb
;

384 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

385 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

386 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

387 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 1);

388 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

390  
TW_OK
;

391 
	}
}

393 
	$h264_ícode_drivî_ö_su•íd_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

395  
TW_OK
;

396 
	}
}

398 
	$h264_ícode_drivî_ö_su•íd_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

400  
TW_OK
;

401 
	}
}

403 
	$h264_ícode_drivî_ö_su•íd_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

405 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

406 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

407 
ed_tcb_t
 *
ed_tcb
;

409 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

410 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

411 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

412 if(
ed_fsm
->
èbÀ
 !
NULL
){

413 if(
ed_fsm
->
èbÀ
->
sync_hook
 !
NULL
){

414 
ed_fsm
->
èbÀ
->
	`sync_hook
”d_fsm, 
c⁄ãxt
);

417 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_IDLE
);

418 
	`drivî_åiggî_≥ndög_evít
(
ed_tcb
, 1);

420  
TW_OK
;

421 
	}
}

423 
	$h264_ícode_drivî_ö_su•íd_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

425  
TW_OK
;

426 
	}
}

428 
	$h264_ícode_drivî_ö_su•íd_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

430  
TW_OK
;

431 
	}
}

433 
	$h264_ícode_drivî_ö_ru¬ög_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

435 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

436 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

437 
ed_tcb_t
 *
ed_tcb
;

439 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

440 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

441 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

442 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 0);

444  
TW_OK
;

445 
	}
}

447 
	$h264_ícode_drivî_ö_ru¬ög_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

449  
TW_OK
;

450 
	}
}

452 
	$h264_ícode_drivî_ö_ru¬ög_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

454 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

455 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

456 
ed_tcb_t
 *
ed_tcb
;

458 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

459 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

460 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

461 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 0);

463  
TW_OK
;

464 
	}
}

466 
	$h264_ícode_drivî_ö_ru¬ög_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

468 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

469 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

470 
ed_tcb_t
 *
ed_tcb
;

472 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

473 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

474 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

475 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 0);

477  
TW_OK
;

478 
	}
}

480 
	$h264_ícode_drivî_ö_ru¬ög_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

482  
TW_OK
;

483 
	}
}

485 
	$h264_ícode_drivî_ö_ru¬ög_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

487 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

488 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_TRANSFERING
);

490  
TW_OK
;

491 
	}
}

493 
	$h264_ícode_drivî_ö_å™s„rög_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

495 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

496 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

497 
ed_tcb_t
 *
ed_tcb
;

499 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

500 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

501 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

502 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 0);

504  
TW_OK
;

505 
	}
}

507 
	$h264_ícode_drivî_ö_å™s„rög_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

509  
TW_OK
;

510 
	}
}

512 
	$h264_ícode_drivî_ö_å™s„rög_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

514 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

515 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

516 
ed_tcb_t
 *
ed_tcb
;

518 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

519 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

520 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

521 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 0);

523  
TW_OK
;

524 
	}
}

526 
	$h264_ícode_drivî_ö_å™s„rög_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

528 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

529 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

530 
ed_tcb_t
 *
ed_tcb
;

532 
h264_logic_ícode_ch™
 = (
tw_h264_logic_ícode_ch™_t
*)
c⁄ãxt
;

533 
	`¥ötk
("%s.%d, %d.%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

534 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

535 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 0);

537  
TW_OK
;

538 
	}
}

540 
	$h264_ícode_drivî_ö_å™s„rög_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

542  
TW_OK
;

543 
	}
}

545 
	$h264_ícode_drivî_ö_å™s„rög_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

547 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

548 
ed_tcb_t
 *
ed_tcb
;

550 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_IDLE
);

551 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

552 
	`drivî_åiggî_≥ndög_evít
(
ed_tcb
, 1);

554  
TW_OK
;

555 
	}
}

557 
	$h264_ícode_drivî_sync_hook
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

559  
TW_OK
;

560 
	}
}

562 
fsm_°©e_å™s„r_m©rix_èbÀ_t
 
	gh264_ícode_drivî_fsm_°©e_å™s„r_m©rix_èbÀ
 = {

563 .
a˘i⁄
 = {

565 
h264_ícode_drivî_ö_uƒegi°î_°©e_ªcv_˛o£_evít
,

566 
h264_ícode_drivî_ö_uƒegi°î_°©e_ªcv_timeout_evít
,

567 
h264_ícode_drivî_ö_uƒegi°î_°©e_ªcv_su•íd_evít
,

568 
h264_ícode_drivî_ö_uƒegi°î_°©e_ªcv_ªsume_evít
,

569 
h264_ícode_drivî_ö_uƒegi°î_°©e_ªcv_›í_evít
,

570 
h264_ícode_drivî_ö_uƒegi°î_°©e_ªcv_dñivî_evít


573 
h264_ícode_drivî_ö_˛o£d_°©e_ªcv_˛o£_evít
,

574 
h264_ícode_drivî_ö_˛o£d_°©e_ªcv_timeout_evít
,

575 
h264_ícode_drivî_ö_˛o£d_°©e_ªcv_su•íd_evít
,

576 
h264_ícode_drivî_ö_˛o£d_°©e_ªcv_ªsume_evít
,

577 
h264_ícode_drivî_ö_˛o£d_°©e_ªcv_›í_evít
,

578 
h264_ícode_drivî_ö_˛o£d_°©e_ªcv_dñivî_evít


581 
h264_ícode_drivî_ö_idÀ_°©e_ªcv_˛o£_evít
,

582 
h264_ícode_drivî_ö_idÀ_°©e_ªcv_timeout_evít
,

583 
h264_ícode_drivî_ö_idÀ_°©e_ªcv_su•íd_evít
,

584 
h264_ícode_drivî_ö_idÀ_°©e_ªcv_ªsume_evít
,

585 
h264_ícode_drivî_ö_idÀ_°©e_ªcv_›í_evít
,

586 
h264_ícode_drivî_ö_idÀ_°©e_ªcv_dñivî_evít


589 
h264_ícode_drivî_ö_°™dby_°©e_ªcv_˛o£_evít
,

590 
h264_ícode_drivî_ö_°™dby_°©e_ªcv_timeout_evít
,

591 
h264_ícode_drivî_ö_°™dby_°©e_ªcv_su•íd_evít
,

592 
h264_ícode_drivî_ö_°™dby_°©e_ªcv_ªsume_evít
,

593 
h264_ícode_drivî_ö_°™dby_°©e_ªcv_›í_evít
,

594 
h264_ícode_drivî_ö_°™dby_°©e_ªcv_dñivî_evít


597 
h264_ícode_drivî_ö_su•íd_°©e_ªcv_˛o£_evít
,

598 
h264_ícode_drivî_ö_su•íd_°©e_ªcv_timeout_evít
,

599 
h264_ícode_drivî_ö_su•íd_°©e_ªcv_su•íd_evít
,

600 
h264_ícode_drivî_ö_su•íd_°©e_ªcv_ªsume_evít
,

601 
h264_ícode_drivî_ö_su•íd_°©e_ªcv_›í_evít
,

602 
h264_ícode_drivî_ö_su•íd_°©e_ªcv_dñivî_evít


605 
h264_ícode_drivî_ö_ru¬ög_°©e_ªcv_˛o£_evít
,

606 
h264_ícode_drivî_ö_ru¬ög_°©e_ªcv_timeout_evít
,

607 
h264_ícode_drivî_ö_ru¬ög_°©e_ªcv_su•íd_evít
,

608 
h264_ícode_drivî_ö_ru¬ög_°©e_ªcv_ªsume_evít
,

609 
h264_ícode_drivî_ö_ru¬ög_°©e_ªcv_›í_evít
,

610 
h264_ícode_drivî_ö_ru¬ög_°©e_ªcv_dñivî_evít


613 
h264_ícode_drivî_ö_å™s„rög_°©e_ªcv_˛o£_evít
,

614 
h264_ícode_drivî_ö_å™s„rög_°©e_ªcv_timeout_evít
,

615 
h264_ícode_drivî_ö_å™s„rög_°©e_ªcv_su•íd_evít
,

616 
h264_ícode_drivî_ö_å™s„rög_°©e_ªcv_ªsume_evít
,

617 
h264_ícode_drivî_ö_å™s„rög_°©e_ªcv_›í_evít
,

618 
h264_ícode_drivî_ö_å™s„rög_°©e_ªcv_dñivî_evít


621 .
	gsync_hook
 = 
h264_ícode_drivî_sync_hook
,

625 
öô_tw5864_h264_phy_video_¶Ÿ
(
tw_h264_phy_video_¶Ÿ_t
 *, 
¶Ÿ_id
, 
TW_VIDEO_SIZE
 
video_size
);

627 
	$ªgi°î_logic_ícode_ch™_öto_ma°î_¶Ÿ
(
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
, 
tw_h264_phy_video_¶Ÿ_t
 *
ma°î_¶Ÿ
)

629 if((
h264_logic_ícode_ch™
!=
NULL
Ë&& (
ma°î_¶Ÿ
!=NULL)){

630 
tw_ªgi°î_èbÀ_t
 *
logic_ch™_èbÀ
 = &
ma°î_¶Ÿ
->logic_chan_table;

631 
ed_tcb_t
 *
logic_ch™_ed
 = &
h264_logic_ícode_ch™
->logic_chan_ed;

632 
tw_ªgi°î_node_t
 *
ªgi°î_node
 = &
logic_ch™_ed
->
ed
;

634 
logic_ch™_èbÀ
->
›
->
	`ªgi°î_node_öto_èbÀ
÷ogic_ch™_èbÀ, 
ªgi°î_node
);

635 
	`©omic_£t
(&
logic_ch™_ed
->
°©e
, 
TW_ED_IDLE
);

637 
	}
}

639 
	$föd_ªgi°î_logic_ícode_ch™_ö_ma°î_¶Ÿ
(
tw_h264_phy_video_¶Ÿ_t
 *
ma°î_¶Ÿ
, 
logic_ch™_id
, 
tw_h264_logic_ícode_ch™_t
 **
±r_h264_logic_ícode_ch™
)

641 if((
ma°î_¶Ÿ
!=
NULL
Ë&& (
±r_h264_logic_ícode_ch™
!=NULL)){

642 
tw_ªgi°î_èbÀ_t
 *
logic_ch™_èbÀ
 = &
ma°î_¶Ÿ
->logic_chan_table;

643 
tw_ªgi°î_node_t
 *
ªgi°î_node
;

645 *
±r_h264_logic_ícode_ch™
 = 
NULL
;

646 
logic_ch™_èbÀ
->
›
->
	`föd_ªgi°î_node_ö_èbÀ
÷ogic_ch™_èbÀ, &
ªgi°î_node
, 
logic_ch™_id
);

647 if(
ªgi°î_node
 !
NULL
){

648 
ed_tcb_t
 *
logic_ch™_ed
;

649 
logic_ch™_ed
 = 
	`to_gë_ídpoöt_tcb_wôh_ªgi°î_node
(
ªgi°î_node
);

650 *
±r_h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_logic_ch™_ed
(
logic_ch™_ed
);

653 
	}
}

655 
	$uƒegi°î_logic_ícode_ch™_öto_ma°î_¶Ÿ
(
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
, 
tw_h264_phy_video_¶Ÿ_t
 *
ma°î_¶Ÿ
)

657 if((
h264_logic_ícode_ch™
!=
NULL
Ë&& (
ma°î_¶Ÿ
!=NULL)){

658 
tw_ªgi°î_èbÀ_t
 *
logic_ch™_èbÀ
 = &
ma°î_¶Ÿ
->logic_chan_table;

659 
ed_tcb_t
 *
logic_ch™_ed
 = &
h264_logic_ícode_ch™
->logic_chan_ed;

660 
tw_ªgi°î_node_t
 *
ªgi°î_node
 = &
logic_ch™_ed
->
ed
;

662 
	`©omic_£t
(&
logic_ch™_ed
->
°©e
, 
TW_ED_CLOSED
);

663 
ªgi°î_node
->
›
->
	`com∂ëe_d⁄e
(register_node);

664 
logic_ch™_èbÀ
->
›
->
	`uƒegi°î_node_‰om_èbÀ
÷ogic_ch™_èbÀ, 
ªgi°î_node
);

665 
	`©omic_£t
(&
logic_ch™_ed
->
°©e
, 
TW_ED_UNREGISTER
);

667 
	}
}

669 
	$ªgi°î_›íed_logic_ícode_ch™_öto_ma°î_¶Ÿ
(
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
, 
tw_h264_phy_video_¶Ÿ_t
 *
ma°î_¶Ÿ
)

671 if((
h264_logic_ícode_ch™
!=
NULL
Ë&& (
ma°î_¶Ÿ
!=NULL)){

672 
tw_ªgi°î_èbÀ_t
 *
›íed_logic_ch™_èbÀ
 = &
ma°î_¶Ÿ
->opened_logic_chan_table;

673 
ed_tcb_t
 *
›íed_logic_ch™_ed
 = &
h264_logic_ícode_ch™
->opened_logic_chan_ed;

674 
tw_ªgi°î_node_t
 *
ªgi°î_node
 = &
›íed_logic_ch™_ed
->
ed
;

676 
h264_logic_ícode_ch™
->
ícode_c⁄åﬁ
.
›
->
	`ª£t
(&h264_logic_encode_chan->encode_control);

677 
h264_logic_ícode_ch™
->
rc_drivî
.
rc_›
->
	`öô_rc
(h264_logic_encode_chan);

678 
	`©omic_£t
(&
h264_logic_ícode_ch™
->
›íed_Êag
, 1);

679 
›íed_logic_ch™_èbÀ
->
›
->
	`ªgi°î_node_öto_èbÀ
(›íed_logic_ch™_èbÀ, 
ªgi°î_node
);

681 
	}
}

683 
	$föd_ªgi°î_›íed_logic_ícode_ch™_ö_ma°î_¶Ÿ
(
tw_h264_phy_video_¶Ÿ_t
 *
ma°î_¶Ÿ
, 
logic_ch™_id
, 
tw_h264_logic_ícode_ch™_t
 **
±r_h264_logic_ícode_ch™
)

685 if((
ma°î_¶Ÿ
!=
NULL
Ë&& (
±r_h264_logic_ícode_ch™
!=NULL)){

686 
tw_ªgi°î_èbÀ_t
 *
›íed_logic_ch™_èbÀ
 = &
ma°î_¶Ÿ
->opened_logic_chan_table;

687 
tw_ªgi°î_node_t
 *
ªgi°î_node
;

688 
ed_tcb_t
 *
›íed_logic_ch™_ed
;

690 *
±r_h264_logic_ícode_ch™
 = 
NULL
;

691 
›íed_logic_ch™_èbÀ
->
›
->
	`föd_ªgi°î_node_ö_èbÀ
(›íed_logic_ch™_èbÀ, &
ªgi°î_node
, 
logic_ch™_id
);

692 if(
ªgi°î_node
 !
NULL
){

693 
›íed_logic_ch™_ed
 = 
	`to_gë_ídpoöt_tcb_wôh_ªgi°î_node
(
ªgi°î_node
);

694 *
±r_h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_›íed_logic_ch™_ed
(
›íed_logic_ch™_ed
);

697 
	}
}

699 
	$uƒegi°î_›íed_logic_ícode_ch™_öto_ma°î_¶Ÿ
(
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
, 
tw_h264_phy_video_¶Ÿ_t
 *
ma°î_¶Ÿ
)

701 if((
h264_logic_ícode_ch™
!=
NULL
Ë&& (
ma°î_¶Ÿ
!=NULL)){

702 
tw_ªgi°î_èbÀ_t
 *
›íed_logic_ch™_èbÀ
 = &
ma°î_¶Ÿ
->opened_logic_chan_table;

703 
ed_tcb_t
 *
›íed_logic_ch™_ed
 = &
h264_logic_ícode_ch™
->opened_logic_chan_ed;

704 
tw_ªgi°î_node_t
 *
ªgi°î_node
 = &
›íed_logic_ch™_ed
->
ed
;

706 
›íed_logic_ch™_èbÀ
->
›
->
	`uƒegi°î_node_‰om_èbÀ
(›íed_logic_ch™_èbÀ, 
ªgi°î_node
);

707 if(
h264_logic_ícode_ch™
->
ma°î_¶Ÿ
 !
NULL
){

708 
h264_logic_ícode_ch™
->
ma°î_¶Ÿ
->
›
->
	`ícode_uƒegi°î_nŸify
(h264_logic_encode_chan->master_slot, h264_logic_encode_chan);

710 
	`©omic_£t
(&
›íed_logic_ch™_ed
->
°©e
, 
TW_ED_UNREGISTER
);

712 
	}
}

714 
	$tw5864_ícode_time°amp_öô
(
tw_time°amp_t
 *
tw5864_ícode_time°amp
)

716 
	`©omic_£t
(&
tw5864_ícode_time°amp
->
fú°_sync
, 1);

717 
tw5864_ícode_time°amp
->
cuº_timî_cou¡
 = 0;

718 
tw5864_ícode_time°amp
->
œ°_timî_cou¡
 = 0;

719 
tw5864_ícode_time°amp
->
tŸÆ_dñè_timî_cou¡
 = 
	`gë_tw_sy°em_tick
();

720 
	}
}

722 
	$tw5864_ícode_time°amp_ª£t
(
tw_time°amp_t
 *
tw5864_ícode_time°amp
)

724 
	`©omic_£t
(&
tw5864_ícode_time°amp
->
fú°_sync
, 1);

725 
tw5864_ícode_time°amp
->
cuº_timî_cou¡
 = 0;

726 
tw5864_ícode_time°amp
->
œ°_timî_cou¡
 = 0;

727 
tw5864_ícode_time°amp
->
tŸÆ_dñè_timî_cou¡
 = 
	`gë_tw_sy°em_tick
();

728 
	}
}

730 
	$tw5864_ícode_time°amp_£t_time°amp
(
tw_time°amp_t
 *
tw5864_ícode_time°amp
, 
time°amp
, *
ˇŒ_‚_«me
)

732 
dñèT
;

733 
tw5864_ícode_time°amp
->
cuº_timî_cou¡
 = 
time°amp
;

734 if(
	`©omic_ªad
(&
tw5864_ícode_time°amp
->
fú°_sync
)){

735 
	`©omic_£t
(&
tw5864_ícode_time°amp
->
fú°_sync
, 0);

736 
dñèT
 = 0;

737 
tw5864_ícode_time°amp
->
tŸÆ_dñè_timî_cou¡
 = 
	`gë_tw_sy°em_tick
();

739 
dñèT
 = ((0x10000 + 
tw5864_ícode_time°amp
->
cuº_timî_cou¡
 -Åw5864_ícode_time°amp->
œ°_timî_cou¡
)&0xffff);

741 if(
dñèT
 > 1000){

744 
tw5864_ícode_time°amp
->
œ°_timî_cou¡
 =Åw5864_ícode_time°amp->
cuº_timî_cou¡
;

745 
tw5864_ícode_time°amp
->
tŸÆ_dñè_timî_cou¡
 +
dñèT
;

746 
	}
}

748 
u32
 
	$tw5864_ícode_time°amp_gë_time°amp
(
tw_time°amp_t
 *
tw5864_ícode_time°amp
)

750  
tw5864_ícode_time°amp
->
tŸÆ_dñè_timî_cou¡
;

751 
	}
}

753 
tw_time°amp_›î©i⁄
 
	gtw5864_ícode_time°amp_›
 = {

754 .
öô
 = 
tw5864_ícode_time°amp_öô
,

755 .
	gª£t
 = 
tw5864_ícode_time°amp_ª£t
,

756 .
	g£t_time°amp
 = 
tw5864_ícode_time°amp_£t_time°amp
,

757 .
	ggë_time°amp
 = 
tw5864_ícode_time°amp_gë_time°amp
,

760 
	$öô_tw5864_ícode_time°amp
(
tw_time°amp_t
 *
tw5864_ícode_time°amp
)

762 
tw5864_ícode_time°amp
->
›
 = &
tw5864_ícode_time°amp_›
;

763 
tw5864_ícode_time°amp
->
›
->
	`öô
(tw5864_encode_timestamp);

764 
	}
}

766 
	$tw_h264_ma°î_ícode_¥›îty_upd©e_ícode_¥›îty
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
, 
tw_h264_ícode_c⁄figuøti⁄_t
 *
c⁄fig_∑øm
)

768 if(
c⁄fig_∑øm
 !
NULL
){

769 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_MASKALL
){

770 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

771 
tw_h264_ícode_c⁄figuøti⁄_t
 *
ru¬ög_∑øm
;

772 
Êags
;

774 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_¥›îty
(
ícode_¥›îty
);

775 
	`•ö_lock_úqßve
(&
ícode_¥›îty
->
lock
, 
Êags
);

776 
ru¬ög_∑øm
 = &
ícode_¥›îty
->encode_property;

777 
ru¬ög_∑øm
->
ch™gedMask
 |
c⁄fig_∑øm
->changedMask;

779 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_VIDEO_STANDARD_CHANGED
){

780 if(
ru¬ög_∑øm
->
videoSènd¨d
 !
c⁄fig_∑øm
->videoStandard){

781 
ru¬ög_∑øm
->
videoSènd¨d
 = 
c⁄fig_∑øm
->videoStandard;

782 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
;

783 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
){

784 
ru¬ög_∑øm
->
ícodeSize
 = 
c⁄fig_∑øm
->encodeSize;

786 
ru¬ög_∑øm
->
videoSènd¨d
){

788 
TW_VIDEO_STANDARD_PAL
:

789 
ru¬ög_∑øm
->
ícodeSize
){

790 
TW_VIDEO_SIZE_D1
:

791 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_PAL
;

792 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_PAL
;

794 
TW_VIDEO_SIZE_HALF_D1
:

795 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_PAL
;

796 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_PAL
>>1;

798 
TW_VIDEO_SIZE_CIF
:

799 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_CIF_PAL
;

800 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_CIF_PAL
;

802 
TW_VIDEO_SIZE_USER
:

803 if((
c⁄fig_∑øm
->
width
<=0Ë|| (c⁄fig_∑øm->width>=
WIDTH_FRAME_D1_PAL
)){

804 
c⁄fig_∑øm
->
width
 = 
WIDTH_FRAME_D1_PAL
;

806 if((
c⁄fig_∑øm
->
height
<=0Ë|| (c⁄fig_∑øm->height>=
HEIGHT_FRAME_D1_PAL
)){

807 
c⁄fig_∑øm
->
height
 = 
HEIGHT_FRAME_D1_PAL
;

809 
ru¬ög_∑øm
->
width
 = 
c⁄fig_∑øm
->width;

810 
ru¬ög_∑øm
->
height
 = 
c⁄fig_∑øm
->height;

813 
	`¥ötk
("%s.%d:ÉºÉncodeSizê∑øm\n", 
__FUNCTION__
, 
__LINE__
);

814 
ru¬ög_∑øm
->
ch™gedMask
 &~
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
;

818 if(
ru¬ög_∑øm
->
Âs
 < 
MIN_FRAME_RATE
){

819 
ru¬ög_∑øm
->
Âs
 = 
MIN_FRAME_RATE
;

820 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_FPS_CHANGED
;

822 if(
ru¬ög_∑øm
->
Âs
 > 
MAX_FRAME_RATE_PAL
){

823 
ru¬ög_∑øm
->
Âs
 = 
MAX_FRAME_RATE_PAL
;

824 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_FPS_CHANGED
;

827 
TW_VIDEO_STANDARD_NTSC
:

828 
ru¬ög_∑øm
->
ícodeSize
){

829 
TW_VIDEO_SIZE_D1
:

830 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_NTSC
;

831 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_NTSC
;

833 
TW_VIDEO_SIZE_HALF_D1
:

834 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_NTSC
;

835 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_NTSC
>>1;

837 
TW_VIDEO_SIZE_CIF
:

838 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_CIF_NTSC
;

839 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_CIF_NTSC
;

841 
TW_VIDEO_SIZE_USER
:

842 if((
c⁄fig_∑øm
->
width
<=0Ë|| (c⁄fig_∑øm->width>=
WIDTH_FRAME_D1_NTSC
)){

843 
c⁄fig_∑øm
->
width
 = 
WIDTH_FRAME_D1_NTSC
;

845 if((
c⁄fig_∑øm
->
height
<=0Ë|| (c⁄fig_∑øm->height>=
HEIGHT_FRAME_D1_NTSC
)){

846 
c⁄fig_∑øm
->
height
 = 
HEIGHT_FRAME_D1_NTSC
;

848 
ru¬ög_∑øm
->
width
 = 
c⁄fig_∑øm
->width;

849 
ru¬ög_∑øm
->
height
 = 
c⁄fig_∑øm
->height;

852 
	`¥ötk
("%s.%d:ÉºÉncodeSizê∑øm\n", 
__FUNCTION__
, 
__LINE__
);

853 
ru¬ög_∑øm
->
ch™gedMask
 &~
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
;

857 if(
ru¬ög_∑øm
->
Âs
 < 
MIN_FRAME_RATE
){

858 
ru¬ög_∑øm
->
Âs
 = 
MIN_FRAME_RATE
;

859 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_FPS_CHANGED
;

861 if(
ru¬ög_∑øm
->
Âs
 > 
MAX_FRAME_RATE_NTSC
){

862 
ru¬ög_∑øm
->
Âs
 = 
MAX_FRAME_RATE_NTSC
;

863 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_FPS_CHANGED
;

866 
TW_VIDEO_STANDARD_USER_DEFINE
:

867 if((
c⁄fig_∑øm
->
width
<=0Ë|| (c⁄fig_∑øm->width>=
WIDTH_FRAME_D1_NTSC
)){

868 
c⁄fig_∑øm
->
width
 = 
WIDTH_FRAME_D1_NTSC
;

870 if((
c⁄fig_∑øm
->
height
<=0Ë|| (c⁄fig_∑øm->height>=
HEIGHT_FRAME_D1_PAL
)){

871 
c⁄fig_∑øm
->
height
 = 
HEIGHT_FRAME_D1_PAL
;

873 
ru¬ög_∑øm
->
width
 = 
c⁄fig_∑øm
->width;

874 
ru¬ög_∑øm
->
height
 = 
c⁄fig_∑øm
->height;

880 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
){

881 
ru¬ög_∑øm
->
ícodeSize
 = 
c⁄fig_∑øm
->encodeSize;

882 
ru¬ög_∑øm
->
videoSènd¨d
){

884 
TW_VIDEO_STANDARD_PAL
:

885 
ru¬ög_∑øm
->
ícodeSize
){

887 
TW_VIDEO_SIZE_D1
:

888 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_PAL
;

889 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_PAL
;

891 
TW_VIDEO_SIZE_HALF_D1
:

892 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_PAL
;

893 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_PAL
>>1;

895 
TW_VIDEO_SIZE_CIF
:

896 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_CIF_PAL
;

897 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_CIF_PAL
;

899 
TW_VIDEO_SIZE_USER
:

900 if((
c⁄fig_∑øm
->
width
<=0Ë|| (c⁄fig_∑øm->width>=
WIDTH_FRAME_D1_PAL
)){

901 
c⁄fig_∑øm
->
width
 = 
WIDTH_FRAME_D1_PAL
;

903 if((
c⁄fig_∑øm
->
height
<=0Ë|| (c⁄fig_∑øm->height>=
HEIGHT_FRAME_D1_PAL
)){

904 
c⁄fig_∑øm
->
height
 = 
HEIGHT_FRAME_D1_PAL
;

906 
ru¬ög_∑øm
->
width
 = 
c⁄fig_∑øm
->width;

907 
ru¬ög_∑øm
->
height
 = 
c⁄fig_∑øm
->height;

911 
TW_VIDEO_STANDARD_NTSC
:

912 
ru¬ög_∑øm
->
ícodeSize
){

914 
TW_VIDEO_SIZE_D1
:

915 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_NTSC
;

916 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_NTSC
;

918 
TW_VIDEO_SIZE_HALF_D1
:

919 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_NTSC
;

920 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_NTSC
>>1;

922 
TW_VIDEO_SIZE_CIF
:

923 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_CIF_NTSC
;

924 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_CIF_NTSC
;

926 
TW_VIDEO_SIZE_USER
:

927 if((
c⁄fig_∑øm
->
width
<=0Ë|| (c⁄fig_∑øm->width>=
WIDTH_FRAME_D1_NTSC
)){

928 
c⁄fig_∑øm
->
width
 = 
WIDTH_FRAME_D1_NTSC
;

930 if((
c⁄fig_∑øm
->
height
<=0Ë|| (c⁄fig_∑øm->height>=
HEIGHT_FRAME_D1_NTSC
)){

931 
c⁄fig_∑øm
->
height
 = 
HEIGHT_FRAME_D1_NTSC
;

933 
ru¬ög_∑øm
->
width
 = 
c⁄fig_∑øm
->width;

934 
ru¬ög_∑øm
->
height
 = 
c⁄fig_∑øm
->height;

938 
TW_VIDEO_STANDARD_USER_DEFINE
:

939 if((
c⁄fig_∑øm
->
width
<=0Ë|| (c⁄fig_∑øm->width>=
WIDTH_FRAME_D1_NTSC
)){

940 
c⁄fig_∑øm
->
width
 = 
WIDTH_FRAME_D1_NTSC
;

942 if((
c⁄fig_∑øm
->
height
<=0Ë|| (c⁄fig_∑øm->height>=
HEIGHT_FRAME_D1_PAL
)){

943 
c⁄fig_∑øm
->
height
 = 
HEIGHT_FRAME_D1_PAL
;

945 
ru¬ög_∑øm
->
width
 = 
c⁄fig_∑øm
->width;

946 
ru¬ög_∑øm
->
height
 = 
c⁄fig_∑øm
->height;

951 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_BITRATE_CHANGED
){

952 if(
c⁄fig_∑øm
->
bôøã
 < 
MASTER_MIN_BIT_RATE
){

953 
c⁄fig_∑øm
->
bôøã
 = 
MASTER_MIN_BIT_RATE
;

955 if(
c⁄fig_∑øm
->
bôøã
 > 
MASTER_MAX_BIT_RATE
){

956 
c⁄fig_∑øm
->
bôøã
 = 
MASTER_MAX_BIT_RATE
;

958 
ru¬ög_∑øm
->
bôøã
 = 
c⁄fig_∑øm
->bitrate;

959 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_BITRATE_CHANGED
;

962 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_FPS_CHANGED
){

963 if(
c⁄fig_∑øm
->
Âs
 < 
MIN_FRAME_RATE
){

964 
c⁄fig_∑øm
->
Âs
 = 
MIN_FRAME_RATE
;

966 
ru¬ög_∑øm
->
videoSènd¨d
){

967 
TW_VIDEO_STANDARD_PAL
:

968 if(
c⁄fig_∑øm
->
Âs
 > 
MAX_FRAME_RATE_PAL
){

969 
c⁄fig_∑øm
->
Âs
 = 
MAX_FRAME_RATE_PAL
;

973 
TW_VIDEO_STANDARD_NTSC
:

974 if(
c⁄fig_∑øm
->
Âs
 > 
MAX_FRAME_RATE_NTSC
){

975 
c⁄fig_∑øm
->
Âs
 = 
MAX_FRAME_RATE_NTSC
;

979 
ru¬ög_∑øm
->
Âs
 = 
c⁄fig_∑øm
->fps;

980 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_FPS_CHANGED
;

983 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_KEYFRAME_INTERVALS_CHANGED
){

984 
ru¬ög_∑øm
->
keyFømeI¡îvÆs
 = 
c⁄fig_∑øm
->keyFrameIntervals;

985 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_KEYFRAME_INTERVALS_CHANGED
;

988 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_GOP_INTERVALS_CHANGED
){

989 
ru¬ög_∑øm
->
g›I¡îvÆs
 = 
c⁄fig_∑øm
->gopIntervals;

990 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_GOP_INTERVALS_CHANGED
;

993 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_IMAGE_LEVEL_CHANGED
){

994 
ru¬ög_∑øm
->
imageLevñ
 = 
c⁄fig_∑øm
->imageLevel;

995 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_IMAGE_LEVEL_CHANGED
;

998 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_QPI_CHANGED
){

999 
ru¬ög_∑øm
->
qpi
 = 
c⁄fig_∑øm
->qpi;

1000 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_QPI_CHANGED
;

1003 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_QPP_CHANGED
){

1004 
ru¬ög_∑øm
->
qµ
 = 
c⁄fig_∑øm
->qpp;

1005 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_QPP_CHANGED
;

1008 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_QPP_CHANGED
){

1009 
ru¬ög_∑øm
->
qpb
 = 
c⁄fig_∑øm
->qpb;

1010 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_QPP_CHANGED
;

1012 
	`•ö_u∆ock_úqª°‹e
(&
ícode_¥›îty
->
lock
, 
Êags
);

1015 
	}
}

1017 
	$tw_h264_ícode_¥›îty_is_videoSènd¨d_ch™ged
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1019 
tw_h264_ícode_c⁄figuøti⁄_t
 *
ru¬ög_∑øm
;

1020 
Êags
;

1021 
ªt
 = 
TW_ENCODE_PROPERTY_NO_CHANGED
;

1022 
	`•ö_lock_úqßve
(&
ícode_¥›îty
->
lock
, 
Êags
);

1023 
ru¬ög_∑øm
 = &
ícode_¥›îty
->encode_property;

1024 if(
ru¬ög_∑øm
->
ch™gedMask
 & 
TW5864_ENCODE_CONFIG_VIDEO_STANDARD_CHANGED
){

1025 
ru¬ög_∑øm
->
ch™gedMask
 &~
TW5864_ENCODE_CONFIG_VIDEO_STANDARD_CHANGED
;

1026 
ªt
 = 
TW_ENCODE_PROPERTY_CHANGED
;

1028 
	`•ö_u∆ock_úqª°‹e
(&
ícode_¥›îty
->
lock
, 
Êags
);

1029  
ªt
;

1030 
	}
}

1032 
	$tw_h264_ícode_¥›îty_gë_videoSènd¨d
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1034  
ícode_¥›îty
->ícode_¥›îty.
videoSènd¨d
;

1035 
	}
}

1037 
	$tw_h264_ícode_¥›îty_is_ícodeSize_ch™ged
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1039 
tw_h264_ícode_c⁄figuøti⁄_t
 *
ru¬ög_∑øm
;

1040 
Êags
;

1041 
ªt
 = 
TW_ENCODE_PROPERTY_NO_CHANGED
;

1042 
	`•ö_lock_úqßve
(&
ícode_¥›îty
->
lock
, 
Êags
);

1043 
ru¬ög_∑øm
 = &
ícode_¥›îty
->encode_property;

1044 if(
ru¬ög_∑øm
->
ch™gedMask
 & 
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
){

1045 
ru¬ög_∑øm
->
ch™gedMask
 &~
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
;

1046 
ªt
 = 
TW_ENCODE_PROPERTY_CHANGED
;

1048 
	`•ö_u∆ock_úqª°‹e
(&
ícode_¥›îty
->
lock
, 
Êags
);

1049  
ªt
;

1050 
	}
}

1052 
	$tw_h264_ícode_¥›îty_gë_ícodeSize
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1054  
ícode_¥›îty
->ícode_¥›îty.
ícodeSize
;

1055 
	}
}

1057 
	$tw_h264_ícode_¥›îty_gë_ícodeSize_width
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1059  
ícode_¥›îty
->ícode_¥›îty.
width
;

1060 
	}
}

1062 
	$tw_h264_ícode_¥›îty_gë_ícodeSize_height
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1064  
ícode_¥›îty
->ícode_¥›îty.
height
;

1065 
	}
}

1067 
	$tw_h264_ícode_¥›îty_is_èrgë_bôøã_ch™ged
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1069 
tw_h264_ícode_c⁄figuøti⁄_t
 *
ru¬ög_∑øm
;

1070 
Êags
;

1071 
ªt
 = 
TW_ENCODE_PROPERTY_NO_CHANGED
;

1072 
	`•ö_lock_úqßve
(&
ícode_¥›îty
->
lock
, 
Êags
);

1073 
ru¬ög_∑øm
 = &
ícode_¥›îty
->encode_property;

1074 if(
ru¬ög_∑øm
->
ch™gedMask
 & 
TW5864_ENCODE_CONFIG_BITRATE_CHANGED
){

1075 
ru¬ög_∑øm
->
ch™gedMask
 &~
TW5864_ENCODE_CONFIG_BITRATE_CHANGED
;

1076 
ªt
 = 
TW_ENCODE_PROPERTY_CHANGED
;

1078 
	`•ö_u∆ock_úqª°‹e
(&
ícode_¥›îty
->
lock
, 
Êags
);

1079  
ªt
;

1080 
	}
}

1082 
	$tw_h264_ícode_¥›îty_gë_èrgë_bôøã
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1084  
ícode_¥›îty
->ícode_¥›îty.
bôøã
;

1085 
	}
}

1087 
	$tw_h264_ícode_¥›îty_is_èrgë_Âs_ch™ged
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1089 
tw_h264_ícode_c⁄figuøti⁄_t
 *
ru¬ög_∑øm
;

1090 
Êags
;

1091 
ªt
 = 
TW_ENCODE_PROPERTY_NO_CHANGED
;

1092 
	`•ö_lock_úqßve
(&
ícode_¥›îty
->
lock
, 
Êags
);

1093 
ru¬ög_∑øm
 = &
ícode_¥›îty
->encode_property;

1094 if(
ru¬ög_∑øm
->
ch™gedMask
 & 
TW5864_ENCODE_CONFIG_FPS_CHANGED
){

1095 
ru¬ög_∑øm
->
ch™gedMask
 &~
TW5864_ENCODE_CONFIG_FPS_CHANGED
;

1096 
ªt
 = 
TW_ENCODE_PROPERTY_CHANGED
;

1098 
	`•ö_u∆ock_úqª°‹e
(&
ícode_¥›îty
->
lock
, 
Êags
);

1099  
ªt
;

1100 
	}
}

1102 
	$tw_h264_ícode_¥›îty_gë_èrgë_Âs
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1104  
ícode_¥›îty
->ícode_¥›îty.
Âs
;

1105 
	}
}

1107 
	$tw_h264_ícode_¥›îty_is_keyFømeI¡îvÆs_ch™ged
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1109 
tw_h264_ícode_c⁄figuøti⁄_t
 *
ru¬ög_∑øm
;

1110 
Êags
;

1111 
ªt
 = 
TW_ENCODE_PROPERTY_NO_CHANGED
;

1112 
	`•ö_lock_úqßve
(&
ícode_¥›îty
->
lock
, 
Êags
);

1113 
ru¬ög_∑øm
 = &
ícode_¥›îty
->encode_property;

1114 if(
ru¬ög_∑øm
->
ch™gedMask
 & 
TW5864_ENCODE_CONFIG_KEYFRAME_INTERVALS_CHANGED
){

1115 
ru¬ög_∑øm
->
ch™gedMask
 &~
TW5864_ENCODE_CONFIG_KEYFRAME_INTERVALS_CHANGED
;

1116 
ªt
 = 
TW_ENCODE_PROPERTY_CHANGED
;

1118 
	`•ö_u∆ock_úqª°‹e
(&
ícode_¥›îty
->
lock
, 
Êags
);

1119  
ªt
;

1120 
	}
}

1122 
	$tw_h264_ícode_¥›îty_gë_keyFømeI¡îvÆs
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1124  
ícode_¥›îty
->ícode_¥›îty.
keyFømeI¡îvÆs
;

1125 
	}
}

1127 
	$tw_h264_ícode_¥›îty_is_g›I¡îvÆs_ch™ged
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1129 
tw_h264_ícode_c⁄figuøti⁄_t
 *
ru¬ög_∑øm
;

1130 
Êags
;

1131 
ªt
 = 
TW_ENCODE_PROPERTY_NO_CHANGED
;

1132 
	`•ö_lock_úqßve
(&
ícode_¥›îty
->
lock
, 
Êags
);

1133 
ru¬ög_∑øm
 = &
ícode_¥›îty
->encode_property;

1134 if(
ru¬ög_∑øm
->
ch™gedMask
 & 
TW5864_ENCODE_CONFIG_GOP_INTERVALS_CHANGED
){

1135 
ru¬ög_∑øm
->
ch™gedMask
 &~
TW5864_ENCODE_CONFIG_GOP_INTERVALS_CHANGED
;

1136 
ªt
 = 
TW_ENCODE_PROPERTY_CHANGED
;

1138 
	`•ö_u∆ock_úqª°‹e
(&
ícode_¥›îty
->
lock
, 
Êags
);

1139  
ªt
;

1140 
	}
}

1142 
	$tw_h264_ícode_¥›îty_gë_g›I¡îvÆs
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1144  
ícode_¥›îty
->ícode_¥›îty.
g›I¡îvÆs
;

1145 
	}
}

1147 
	$tw_h264_ícode_¥›îty_is_rcTy≥_ch™ged
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1149 
tw_h264_ícode_rc_t
 *
ru¬ög_∑øm
;

1150 
Êags
;

1151 
ªt
 = 
TW_ENCODE_PROPERTY_NO_CHANGED
;

1152 
	`•ö_lock_úqßve
(&
ícode_¥›îty
->
lock
, 
Êags
);

1153 
ru¬ög_∑øm
 = &
ícode_¥›îty
->
ícode_rc
;

1154 if(
ru¬ög_∑øm
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_RC_ENABLE_CHANGE_RC_TYPE_MASK
){

1155 
ru¬ög_∑øm
->
ch™ge_mask_Êag
 &~
TW_H264_ENCODE_RC_ENABLE_CHANGE_RC_TYPE_MASK
;

1156 
ªt
 = 
TW_ENCODE_PROPERTY_CHANGED
;

1158 
	`•ö_u∆ock_úqª°‹e
(&
ícode_¥›îty
->
lock
, 
Êags
);

1159  
ªt
;

1160 
	}
}

1162 
	$tw_h264_ícode_¥›îty_gë_rcTy≥
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1164  
ícode_¥›îty
->
ícode_rc
.
e_rc_ty≥
;

1165 
	}
}

1167 
	$tw_h264_ícode_¥›îty_is_ümgeLevñ_ch™ged
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1169 
tw_h264_ícode_c⁄figuøti⁄_t
 *
ru¬ög_∑øm
;

1170 
Êags
;

1171 
ªt
 = 
TW_ENCODE_PROPERTY_NO_CHANGED
;

1172 
	`•ö_lock_úqßve
(&
ícode_¥›îty
->
lock
, 
Êags
);

1173 
ru¬ög_∑øm
 = &
ícode_¥›îty
->encode_property;

1174 if(
ru¬ög_∑øm
->
ch™gedMask
 & 
TW5864_ENCODE_CONFIG_IMAGE_LEVEL_CHANGED
){

1175 
ru¬ög_∑øm
->
ch™gedMask
 &~
TW5864_ENCODE_CONFIG_IMAGE_LEVEL_CHANGED
;

1176 
ªt
 = 
TW_ENCODE_PROPERTY_CHANGED
;

1178 
	`•ö_u∆ock_úqª°‹e
(&
ícode_¥›îty
->
lock
, 
Êags
);

1179  
ªt
;

1180 
	}
}

1182 
	$tw_h264_ícode_¥›îty_gë_ümgeLevñ
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1184  
ícode_¥›îty
->ícode_¥›îty.
imageLevñ
;

1185 
	}
}

1187 
	$tw_h264_ícode_¥›îty_is_qpi_ch™ged
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1189 
tw_h264_ícode_c⁄figuøti⁄_t
 *
ru¬ög_∑øm
;

1190 
tw_h264_ícode_rc_t
 *
ícode_rc
;

1191 
Êags
;

1192 
ªt
 = 
TW_ENCODE_PROPERTY_NO_CHANGED
;

1193 
	`•ö_lock_úqßve
(&
ícode_¥›îty
->
lock
, 
Êags
);

1194 
ru¬ög_∑øm
 = &
ícode_¥›îty
->encode_property;

1195 if(
ru¬ög_∑øm
->
ch™gedMask
 & 
TW5864_ENCODE_CONFIG_QPI_CHANGED
){

1196 
ru¬ög_∑øm
->
ch™gedMask
 &~
TW5864_ENCODE_CONFIG_QPI_CHANGED
;

1197 
ªt
 = 
TW_ENCODE_PROPERTY_CHANGED
;

1199 
	`•ö_u∆ock_úqª°‹e
(&
ícode_¥›îty
->
lock
, 
Êags
);

1200  
ªt
;

1201 
	}
}

1203 
	$tw_h264_ícode_¥›îty_gë_qpi
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1205  
ícode_¥›îty
->ícode_¥›îty.
qpi
;

1206 
	}
}

1208 
	$tw_h264_ícode_¥›îty_is_qµ_ch™ged
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1210 
tw_h264_ícode_c⁄figuøti⁄_t
 *
ru¬ög_∑øm
;

1211 
Êags
;

1212 
ªt
 = 
TW_ENCODE_PROPERTY_NO_CHANGED
;

1213 
	`•ö_lock_úqßve
(&
ícode_¥›îty
->
lock
, 
Êags
);

1214 
ru¬ög_∑øm
 = &
ícode_¥›îty
->encode_property;

1215 if(
ru¬ög_∑øm
->
ch™gedMask
 & 
TW5864_ENCODE_CONFIG_QPP_CHANGED
){

1216 
ru¬ög_∑øm
->
ch™gedMask
 &~
TW5864_ENCODE_CONFIG_QPP_CHANGED
;

1217 
ªt
 = 
TW_ENCODE_PROPERTY_CHANGED
;

1219 
	`•ö_u∆ock_úqª°‹e
(&
ícode_¥›îty
->
lock
, 
Êags
);

1220  
ªt
;

1221 
	}
}

1223 
	$tw_h264_ícode_¥›îty_gë_qµ
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1225  
ícode_¥›îty
->ícode_¥›îty.
qµ
;

1226 
	}
}

1228 
	$tw_h264_ícode_¥›îty_is_qpb_ch™ged
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1230 
tw_h264_ícode_c⁄figuøti⁄_t
 *
ru¬ög_∑øm
;

1231 
Êags
;

1232 
ªt
 = 
TW_ENCODE_PROPERTY_NO_CHANGED
;

1233 
	`•ö_lock_úqßve
(&
ícode_¥›îty
->
lock
, 
Êags
);

1234 
ru¬ög_∑øm
 = &
ícode_¥›îty
->encode_property;

1235 if(
ru¬ög_∑øm
->
ch™gedMask
 & 
TW5864_ENCODE_CONFIG_QPB_CHANGED
){

1236 
ru¬ög_∑øm
->
ch™gedMask
 &~
TW5864_ENCODE_CONFIG_QPB_CHANGED
;

1237 
ªt
 = 
TW_ENCODE_PROPERTY_CHANGED
;

1239 
	`•ö_u∆ock_úqª°‹e
(&
ícode_¥›îty
->
lock
, 
Êags
);

1240  
ªt
;

1241 
	}
}

1243 
	$tw_h264_ícode_¥›îty_gë_qpb
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
)

1245  
ícode_¥›îty
->ícode_¥›îty.
qpb
;

1246 
	}
}

1248 
tw_h264_ícode_¥›îty_›î©i⁄
 
	gtw_h264_ma°î_ícode_¥›îty_›
 = {

1249 .
upd©e_ícode_¥›îty
 = 
tw_h264_ma°î_ícode_¥›îty_upd©e_ícode_¥›îty
,

1250 .
	gis_videoSènd¨d_ch™ged
 = 
tw_h264_ícode_¥›îty_is_videoSènd¨d_ch™ged
,

1251 .
	ggë_videoSènd¨d
 = 
tw_h264_ícode_¥›îty_gë_videoSènd¨d
,

1252 .
	gis_ícodeSize_ch™ged
 = 
tw_h264_ícode_¥›îty_is_ícodeSize_ch™ged
,

1253 .
	ggë_ícodeSize
 = 
tw_h264_ícode_¥›îty_gë_ícodeSize
,

1254 .
	ggë_ícodeSize_width
 = 
tw_h264_ícode_¥›îty_gë_ícodeSize_width
,

1255 .
	ggë_ícodeSize_height
 = 
tw_h264_ícode_¥›îty_gë_ícodeSize_height
,

1256 .
	gis_èrgë_bôøã_ch™ged
 = 
tw_h264_ícode_¥›îty_is_èrgë_bôøã_ch™ged
,

1257 .
	ggë_èrgë_bôøã
 = 
tw_h264_ícode_¥›îty_gë_èrgë_bôøã
,

1258 .
	gis_èrgë_Âs_ch™ged
 = 
tw_h264_ícode_¥›îty_is_èrgë_Âs_ch™ged
,

1259 .
	ggë_èrgë_Âs
 = 
tw_h264_ícode_¥›îty_gë_èrgë_Âs
,

1260 .
	gis_keyFømeI¡îvÆs_ch™ged
 = 
tw_h264_ícode_¥›îty_is_keyFømeI¡îvÆs_ch™ged
,

1261 .
	ggë_keyFømeI¡îvÆs
 = 
tw_h264_ícode_¥›îty_gë_keyFømeI¡îvÆs
,

1262 .
	gis_g›I¡îvÆs_ch™ged
 = 
tw_h264_ícode_¥›îty_is_g›I¡îvÆs_ch™ged
,

1263 .
	ggë_g›I¡îvÆs
 = 
tw_h264_ícode_¥›îty_gë_g›I¡îvÆs
,

1264 .
	gis_rcTy≥_ch™ged
 = 
tw_h264_ícode_¥›îty_is_rcTy≥_ch™ged
,

1265 .
	ggë_rcTy≥
 = 
tw_h264_ícode_¥›îty_gë_rcTy≥
,

1266 .
	gis_ümgeLevñ_ch™ged
 = 
tw_h264_ícode_¥›îty_is_ümgeLevñ_ch™ged
,

1267 .
	ggë_ümgeLevñ
 = 
tw_h264_ícode_¥›îty_gë_ümgeLevñ
,

1268 .
	gis_qpi_ch™ged
 = 
tw_h264_ícode_¥›îty_is_qpi_ch™ged
,

1269 .
	ggë_qpi
 = 
tw_h264_ícode_¥›îty_gë_qpi
,

1270 .
	gis_qµ_ch™ged
 = 
tw_h264_ícode_¥›îty_is_qµ_ch™ged
,

1271 .
	ggë_qµ
 = 
tw_h264_ícode_¥›îty_gë_qµ
,

1272 .
	gis_qpb_ch™ged
 = 
tw_h264_ícode_¥›îty_is_qpb_ch™ged
,

1273 .
	ggë_qpb
 = 
tw_h264_ícode_¥›îty_gë_qpb
,

1276 
	$tw_h264_ícode_„©uª_öô
(
tw_h264_ícode_„©uª_t
 *
ícode_„©uª
)

1278 if(
ícode_„©uª
) {

1279 
tw_h264_ícode_„©uª_∑øm_t
 *
„©uª_∑øm
 = &
ícode_„©uª
->feature_param;

1281 
„©uª_∑øm
->
b_íabÀ_deöãæa˚
 = 0;

1282 
„©uª_∑øm
->
b_íabÀ_hÆf_pixñ
 = 0;

1283 
„©uª_∑øm
->
b_íabÀ_I_4X4
 = 0;

1284 
„©uª_∑øm
->
b_íabÀ_qu¨ãr_pixñ
 = 0;

1285 
„©uª_∑øm
->
b_íabÀ_skù
 = 0;

1286 
„©uª_∑øm
->
i_mb_dñay_vÆue
 = 
MB_DELAY_VALUE
;

1287 
„©uª_∑øm
->
ch™ge_mask_Êag
 = 0x0;

1291 
	}
}

1293 
	$tw_h264_ícode_„©uª_ª£t
(
tw_h264_ícode_„©uª_t
 *
ícode_„©uª
)

1295 if(
ícode_„©uª
) {

1296 
tw_h264_ícode_„©uª_∑øm_t
 *
„©uª_∑øm
 = &
ícode_„©uª
->feature_param;

1298 
„©uª_∑øm
->
b_íabÀ_deöãæa˚
 = 0;

1299 
„©uª_∑øm
->
b_íabÀ_hÆf_pixñ
 = 0;

1300 
„©uª_∑øm
->
b_íabÀ_I_4X4
 = 0;

1301 
„©uª_∑øm
->
b_íabÀ_qu¨ãr_pixñ
 = 0;

1302 
„©uª_∑øm
->
b_íabÀ_skù
 = 0;

1303 
„©uª_∑øm
->
i_mb_dñay_vÆue
 = 
MB_DELAY_VALUE
;

1304 
„©uª_∑øm
->
ch™ge_mask_Êag
 = 0x0;

1308 
	}
}

1310 
	$tw_h264_ícode_„©uª_gë_deöãæa˚
(
tw_h264_ícode_„©uª_t
 *
ícode_„©uª
)

1312 if(
ícode_„©uª
) {

1313 
tw_h264_ícode_„©uª_∑øm_t
 *
„©uª_∑øm
 = &
ícode_„©uª
->feature_param;

1315  
„©uª_∑øm
->
b_íabÀ_deöãæa˚
;

1319 
	}
}

1320 
	$tw_h264_ícode_„©uª_gë_hÆf_pixñ
(
tw_h264_ícode_„©uª_t
 *
ícode_„©uª
)

1322 if(
ícode_„©uª
) {

1323 
tw_h264_ícode_„©uª_∑øm_t
 *
„©uª_∑øm
 = &
ícode_„©uª
->feature_param;

1325  
„©uª_∑øm
->
b_íabÀ_hÆf_pixñ
;

1329 
	}
}

1330 
	$tw_h264_ícode_„©uª_gë_i_4x4
(
tw_h264_ícode_„©uª_t
 *
ícode_„©uª
)

1332 if(
ícode_„©uª
) {

1333 
tw_h264_ícode_„©uª_∑øm_t
 *
„©uª_∑øm
 = &
ícode_„©uª
->feature_param;

1335  
„©uª_∑øm
->
b_íabÀ_I_4X4
;

1339 
	}
}

1340 
u32
 
	$tw_h264_ícode_„©uª_gë_mb_dñay
(
tw_h264_ícode_„©uª_t
 *
ícode_„©uª
)

1342 if(
ícode_„©uª
) {

1343 
tw_h264_ícode_„©uª_∑øm_t
 *
„©uª_∑øm
 = &
ícode_„©uª
->feature_param;

1345  
„©uª_∑øm
->
i_mb_dñay_vÆue
;

1349 
	}
}

1350 
	$tw_h264_ícode_„©uª_gë_qu¨ãr_pixñ
(
tw_h264_ícode_„©uª_t
 *
ícode_„©uª
)

1352 if(
ícode_„©uª
) {

1353 
tw_h264_ícode_„©uª_∑øm_t
 *
„©uª_∑øm
 = &
ícode_„©uª
->feature_param;

1355  
„©uª_∑øm
->
b_íabÀ_qu¨ãr_pixñ
;

1359 
	}
}

1360 
	$tw_h264_ícode_„©uª_gë_skù
(
tw_h264_ícode_„©uª_t
 *
ícode_„©uª
)

1362 if(
ícode_„©uª
) {

1363 
tw_h264_ícode_„©uª_∑øm_t
 *
„©uª_∑øm
 = &
ícode_„©uª
->feature_param;

1365  
„©uª_∑øm
->
b_íabÀ_skù
;

1369 
	}
}

1370 
	$tw_h264_ícode_„©uª_upd©e_deöãæa˚
(
tw_h264_ícode_„©uª_t
 *
ícode_„©uª
, 
íabÀ
)

1372 if(
ícode_„©uª
) {

1373 
tw_h264_ícode_„©uª_∑øm_t
 *
„©uª_∑øm
 = &
ícode_„©uª
->feature_param;

1375 
„©uª_∑øm
->
b_íabÀ_deöãæa˚
 = 
íabÀ
;

1379 
	}
}

1380 
	$tw_h264_ícode_„©uª_upd©e_hÆf_pixñ
(
tw_h264_ícode_„©uª_t
 *
ícode_„©uª
, 
íabÀ
)

1382 if(
ícode_„©uª
) {

1383 
tw_h264_ícode_„©uª_∑øm_t
 *
„©uª_∑øm
 = &
ícode_„©uª
->feature_param;

1385 
„©uª_∑øm
->
b_íabÀ_hÆf_pixñ
 = 
íabÀ
;

1389 
	}
}

1390 
	$tw_h264_ícode_„©uª_upd©e_i_4x4
(
tw_h264_ícode_„©uª_t
 *
ícode_„©uª
, 
íabÀ
)

1392 if(
ícode_„©uª
) {

1393 
tw_h264_ícode_„©uª_∑øm_t
 *
„©uª_∑øm
 = &
ícode_„©uª
->feature_param;

1395 
„©uª_∑øm
->
b_íabÀ_I_4X4
 = 
íabÀ
;

1399 
	}
}

1400 
	$tw_h264_ícode_„©uª_upd©e_mb_dñay
(
tw_h264_ícode_„©uª_t
 *
ícode_„©uª
, 
u32
 
dñay
)

1402 if(
ícode_„©uª
) {

1403 
tw_h264_ícode_„©uª_∑øm_t
 *
„©uª_∑øm
 = &
ícode_„©uª
->feature_param;

1405 
„©uª_∑øm
->
i_mb_dñay_vÆue
 = 
dñay
;

1409 
	}
}

1410 
	$tw_h264_ícode_„©uª_upd©e_qu¨ãr_pixñ
(
tw_h264_ícode_„©uª_t
 *
ícode_„©uª
, 
íabÀ
)

1412 if(
ícode_„©uª
) {

1413 
tw_h264_ícode_„©uª_∑øm_t
 *
„©uª_∑øm
 = &
ícode_„©uª
->feature_param;

1415 
„©uª_∑øm
->
b_íabÀ_qu¨ãr_pixñ
 = 
íabÀ
;

1419 
	}
}

1420 
	$tw_h264_ícode_„©uª_upd©e_skù
(
tw_h264_ícode_„©uª_t
 *
ícode_„©uª
, 
íabÀ
)

1422 if(
ícode_„©uª
) {

1423 
tw_h264_ícode_„©uª_∑øm_t
 *
„©uª_∑øm
 = &
ícode_„©uª
->feature_param;

1426 
	`TW_DBG
(
TW_DBG_DEBUG
, "ignor skip mode\n");

1427 
„©uª_∑øm
->
b_íabÀ_skù
 = 0;

1431 
	}
}

1433 
tw_h264_ícode_„©uª_›î©i⁄_t
 
	gtw_h264_ícode_„©uª_›î©i⁄_›
 = {

1434 .
öô
 = 
tw_h264_ícode_„©uª_öô
,

1435 .
	gª£t
 = 
tw_h264_ícode_„©uª_ª£t
,

1437 .
	ggë_deöãæa˚
 = 
tw_h264_ícode_„©uª_gë_deöãæa˚
,

1438 .
	ggë_hÆf_pixñ
 = 
tw_h264_ícode_„©uª_gë_hÆf_pixñ
,

1439 .
	ggë_i_4x4
 = 
tw_h264_ícode_„©uª_gë_i_4x4
,

1440 .
	ggë_mb_dñay
 = 
tw_h264_ícode_„©uª_gë_mb_dñay
,

1441 .
	ggë_qu¨ãr_pixñ
 = 
tw_h264_ícode_„©uª_gë_qu¨ãr_pixñ
,

1442 .
	ggë_skù
 = 
tw_h264_ícode_„©uª_gë_skù
,

1444 .
	gupd©e_deöãæa˚
 = 
tw_h264_ícode_„©uª_upd©e_deöãæa˚
,

1445 .
	gupd©e_hÆf_pixñ
 = 
tw_h264_ícode_„©uª_upd©e_hÆf_pixñ
,

1446 .
	gupd©e_i_4x4
 = 
tw_h264_ícode_„©uª_upd©e_i_4x4
,

1447 .
	gupd©e_mb_dñay
 = 
tw_h264_ícode_„©uª_upd©e_mb_dñay
,

1448 .
	gupd©e_qu¨ãr_pixñ
 = 
tw_h264_ícode_„©uª_upd©e_qu¨ãr_pixñ
,

1449 .
	gupd©e_skù
 = 
tw_h264_ícode_„©uª_upd©e_skù
,

1452 
	$öô_tw5864_h264_ma°î_ícode_¥›îty
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
, 
tw_h264_ícode_c⁄figuøti⁄_t
 *
c⁄fig_∑øm
)

1454 
tw_h264_ícode_„©uª_∑øm_t
 *
p„©uª
;

1455 
tw_h264_ícode_„©uª_t
 *
¥u¬ög_„©uª
;

1456 
tw_h264_ícode_rc_t
 *
p_rc
, *
¥u¬ög_rc
;

1457 
tw_h264_ícode_c⁄figuøti⁄_t
 
ícode_∑øm
;

1459 if(
c⁄fig_∑øm
 =
NULL
){

1460 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ch™
;

1461 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

1462 
dvm_chù_t
 *
chù
;

1463 
chù_drivî_t
 *
chù_drivî
;

1464 
tw_video_bus_t
 *
video_bus
;

1467 
	`mem˝y
(&
ícode_∑øm
, &
deÁu…_h264_ma°î_ícode_¥›îty
, (
tw_h264_ícode_c⁄figuøti⁄_t
));

1468 
h264_logic_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_¥›îty
(
ícode_¥›îty
);

1469 
chù
 = 
h264_logic_ch™
->chip;

1470 
chù_drivî
 = 
chù
->chip_driver;

1471 
video_bus
 = &
chù_drivî
->video_bus;

1473 
c⁄fig_∑øm
 = &
ícode_∑øm
;

1474 if(
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË=
TW_VIDEO_STANDARD_PAL
) {

1475 
c⁄fig_∑øm
->
videoSènd¨d
 = 
TW_VIDEO_STANDARD_PAL
;

1476 }if(
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË=
TW_VIDEO_STANDARD_NTSC
){

1477 
c⁄fig_∑øm
->
videoSènd¨d
 = 
TW_VIDEO_STANDARD_NTSC
;

1479 
	`TW_DBG
(
TW_DBG_FATAL
, "unknow¿videÿ°™d¨d %d\n", 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus));

1481 
	`TW_DBG
(
TW_DBG_DEBUG
, "öôÜogi¯ch™√»%dÅÿ%s\n", 
h264_logic_ch™
->
logic_ch™_id
, (
c⁄fig_∑øm
->
videoSènd¨d
 =
TW_VIDEO_STANDARD_PAL
)?"PAL":"NTSC");

1482 
phy_video_¶Ÿ
 = 
h264_logic_ch™
->
ma°î_¶Ÿ
;

1483 
c⁄fig_∑øm
->
ícodeSize
 = 
phy_video_¶Ÿ
->
›
->
	`gë_video_size
(phy_video_slot);

1485 
	`•ö_lock_öô
(&
ícode_¥›îty
->
lock
);

1486 
ícode_¥›îty
->
›
 = &
tw_h264_ma°î_ícode_¥›îty_›
;

1487 
ícode_¥›îty
->
›
->
	`upd©e_ícode_¥›îty
”ncode_¥›îty, 
c⁄fig_∑øm
);

1489 
¥u¬ög_„©uª
 = &
ícode_¥›îty
->
ícode_„©uª
;

1490 
p„©uª
 = &
deÁu…_maö_ícode_„©uª
;

1491 
¥u¬ög_„©uª
->
›
 = &
tw_h264_ícode_„©uª_›î©i⁄_›
;

1492 
¥u¬ög_„©uª
->
›
->
	`öô
(prunning_feature);

1493 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_DEINTERLACE_MASK
) {

1494 
¥u¬ög_„©uª
->
›
->
	`upd©e_deöãæa˚
’ru¬ög_„©uª, 
p„©uª
->
b_íabÀ_deöãæa˚
);

1496 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_SKIP_MASK
) {

1497 
¥u¬ög_„©uª
->
›
->
	`upd©e_skù
’ru¬ög_„©uª, 
p„©uª
->
b_íabÀ_skù
);

1499 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_I_4X4_MASK
) {

1500 
¥u¬ög_„©uª
->
›
->
	`upd©e_i_4x4
’ru¬ög_„©uª, 
p„©uª
->
b_íabÀ_I_4X4
);

1502 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENABLE_CHANGE_HALF_PIXEL_MASK
) {

1503 
¥u¬ög_„©uª
->
›
->
	`upd©e_hÆf_pixñ
’ru¬ög_„©uª, 
p„©uª
->
b_íabÀ_hÆf_pixñ
);

1505 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_QUARTER_PIXEL_MASK
) {

1506 
¥u¬ög_„©uª
->
›
->
	`upd©e_qu¨ãr_pixñ
’ru¬ög_„©uª, 
p„©uª
->
b_íabÀ_qu¨ãr_pixñ
);

1508 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_MB_DELAY_MASK
) {

1509 
¥u¬ög_„©uª
->
›
->
	`upd©e_mb_dñay
’ru¬ög_„©uª, 
p„©uª
->
i_mb_dñay_vÆue
);

1513 
¥u¬ög_rc
 = &
ícode_¥›îty
->
ícode_rc
;

1514 
p_rc
 = &
deÁu…_maö_ícode_rc
;

1515 if(
p_rc
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_RC_ENABLE_CHANGE_RC_TYPE_MASK
) {

1516 if((
p_rc
->
e_image_¥i‹ôy
 >
TW_RC_IMAGE_QUALITY_FIRST
Ë&& (p_rc->e_image_¥i‹ôy <
TW_RC_IMAGE_SMOOTH_FIRST
)) {

1517 
¥u¬ög_rc
->
e_image_¥i‹ôy
 = 
p_rc
->e_image_priority;

1519 
	`TW_DBG
(
TW_DBG_ERR
, "unknow¿image_¥i‹ôy %d\n", 
p_rc
->
e_image_¥i‹ôy
);

1522 if(
p_rc
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_RC_ENABLE_CHANGE_IMAGE_PRIORITY_MASK
) {

1523 if((
p_rc
->
e_rc_ty≥
 >
TW_H264_NO_RC
Ë&& (p_rc->e_rc_ty≥ <
TW_H264_VBR
)) {

1524 
¥u¬ög_rc
->
e_rc_ty≥
 = 
p_rc
->e_rc_type;

1526 
	`TW_DBG
(
TW_DBG_ERR
, "unknow¿rc_ty≥ %d\n", 
p_rc
->
e_rc_ty≥
);

1529 if(
p_rc
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_RC_ENABLE_CHANGE_DEFAULT_QP_MASK
) {

1530 if((
p_rc
->
i_deÁu…_qp
 >
QUANT_SCALE_MIN
Ë&& (p_rc->i_deÁu…_q∞<
QUANT_SCALE_MAX
)) {

1531 
¥u¬ög_rc
->
i_deÁu…_qp
 = 
p_rc
->i_default_qp;

1533 
	`TW_DBG
(
TW_DBG_ERR
, "deÁu…_q∞%dÉº‹, [%d, %d]\n", 
p_rc
->
i_deÁu…_qp
, 
QUANT_SCALE_MIN
, 
QUANT_SCALE_MAX
);

1536 
	}
}

1538 
	$tw_h264_sub_ícode_¥›îty_upd©e_ícode_¥›îty
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
, 
tw_h264_ícode_c⁄figuøti⁄_t
 *
c⁄fig_∑øm
)

1540 if(
c⁄fig_∑øm
 !
NULL
){

1541 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_MASKALL
){

1542 
tw_h264_ícode_c⁄figuøti⁄_t
 *
ru¬ög_∑øm
;

1543 
Êags
;

1545 
	`•ö_lock_úqßve
(&
ícode_¥›îty
->
lock
, 
Êags
);

1546 
ru¬ög_∑øm
 = &
ícode_¥›îty
->encode_property;

1547 
ru¬ög_∑øm
->
ch™gedMask
 |
c⁄fig_∑øm
->changedMask;

1549 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_VIDEO_STANDARD_CHANGED
){

1550 if(
ru¬ög_∑øm
->
videoSènd¨d
 !
c⁄fig_∑øm
->videoStandard){

1551 
ru¬ög_∑øm
->
videoSènd¨d
 = 
c⁄fig_∑øm
->videoStandard;

1552 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
;

1553 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
){

1554 
ru¬ög_∑øm
->
ícodeSize
 = 
c⁄fig_∑øm
->encodeSize;

1556 
ru¬ög_∑øm
->
videoSènd¨d
){

1557 
TW_VIDEO_STANDARD_PAL
:

1558 
ru¬ög_∑øm
->
ícodeSize
){

1559 
TW_VIDEO_SIZE_D1
:

1560 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_PAL
;

1561 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_PAL
;

1563 
TW_VIDEO_SIZE_HALF_D1
:

1564 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_PAL
;

1565 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_PAL
>>1;

1567 
TW_VIDEO_SIZE_CIF
:

1568 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_CIF_PAL
;

1569 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_CIF_PAL
;

1571 
TW_VIDEO_SIZE_QHALF_D1
:

1572 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_PAL
>>1;

1573 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_PAL
>>2;

1575 
TW_VIDEO_SIZE_QCIF
:

1576 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_CIF_PAL
>>1;

1577 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_CIF_PAL
>>1;

1579 
TW_VIDEO_SIZE_USER
:

1580 if((
c⁄fig_∑øm
->
width
<=0Ë|| (c⁄fig_∑øm->width>=
WIDTH_FRAME_D1_PAL
)){

1581 
c⁄fig_∑øm
->
width
 = 
WIDTH_FRAME_CIF_PAL
;

1583 if((
c⁄fig_∑øm
->
height
<=0Ë|| (c⁄fig_∑øm->height>=
HEIGHT_FRAME_D1_PAL
)){

1584 
c⁄fig_∑øm
->
height
 = 
HEIGHT_FRAME_CIF_PAL
;

1586 
ru¬ög_∑øm
->
width
 = 
c⁄fig_∑øm
->width;

1587 
ru¬ög_∑øm
->
height
 = 
c⁄fig_∑øm
->height;

1590 
	`TW_DBG
(
TW_DBG_ERR
, "errÉncodeSizeÖaram\n");

1591 
ru¬ög_∑øm
->
ch™gedMask
 &~
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
;

1595 if(
c⁄fig_∑øm
->
Âs
 < 
MIN_FRAME_RATE
){

1596 
ru¬ög_∑øm
->
Âs
 = 
MIN_FRAME_RATE
;

1597 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_FPS_CHANGED
;

1599 if(
ru¬ög_∑øm
->
Âs
 > 
MAX_FRAME_RATE_PAL
){

1600 
ru¬ög_∑øm
->
Âs
 = 
MAX_FRAME_RATE_PAL
;

1601 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_FPS_CHANGED
;

1604 
TW_VIDEO_STANDARD_NTSC
:

1605 
ru¬ög_∑øm
->
ícodeSize
){

1606 
TW_VIDEO_SIZE_D1
:

1607 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_NTSC
;

1608 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_NTSC
;

1610 
TW_VIDEO_SIZE_HALF_D1
:

1611 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_NTSC
;

1612 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_NTSC
>>1;

1614 
TW_VIDEO_SIZE_CIF
:

1615 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_CIF_NTSC
;

1616 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_CIF_NTSC
;

1618 
TW_VIDEO_SIZE_QHALF_D1
:

1619 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_CIF_NTSC
>>1;

1620 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_CIF_NTSC
>>2;

1622 
TW_VIDEO_SIZE_QCIF
:

1623 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_CIF_NTSC
>>1;

1624 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_CIF_NTSC
>>1;

1626 
TW_VIDEO_SIZE_USER
:

1627 if((
c⁄fig_∑øm
->
width
<=0Ë|| (c⁄fig_∑øm->width>=
WIDTH_FRAME_D1_NTSC
)){

1628 
c⁄fig_∑øm
->
width
 = 
WIDTH_FRAME_CIF_NTSC
;

1630 if((
c⁄fig_∑øm
->
height
<=0Ë|| (c⁄fig_∑øm->height>=
HEIGHT_FRAME_D1_NTSC
)){

1631 
c⁄fig_∑øm
->
height
 = 
HEIGHT_FRAME_CIF_NTSC
;

1633 
ru¬ög_∑øm
->
width
 = 
c⁄fig_∑øm
->width;

1634 
ru¬ög_∑øm
->
height
 = 
c⁄fig_∑øm
->height;

1637 
	`TW_DBG
(
TW_DBG_ERR
, "errÉncodeSizeÖaram\n");

1638 
ru¬ög_∑øm
->
ch™gedMask
 &~
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
;

1642 if(
ru¬ög_∑øm
->
Âs
 < 
MIN_FRAME_RATE
){

1643 
ru¬ög_∑øm
->
Âs
 = 
MIN_FRAME_RATE
;

1644 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_FPS_CHANGED
;

1646 if(
ru¬ög_∑øm
->
Âs
 > 
MAX_FRAME_RATE_NTSC
){

1647 
ru¬ög_∑øm
->
Âs
 = 
MAX_FRAME_RATE_NTSC
;

1648 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_FPS_CHANGED
;

1652 
	`TW_DBG
(
TW_DBG_ERR
, "err videoStandardÖaram\n");

1653 
ru¬ög_∑øm
->
ch™gedMask
 &~
TW5864_ENCODE_CONFIG_VIDEO_STANDARD_CHANGED
;

1659 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
){

1660 
ru¬ög_∑øm
->
ícodeSize
 = 
c⁄fig_∑øm
->encodeSize;

1661 
ru¬ög_∑øm
->
videoSènd¨d
){

1662 
TW_VIDEO_STANDARD_PAL
:

1663 
ru¬ög_∑øm
->
ícodeSize
){

1664 
TW_VIDEO_SIZE_D1
:

1665 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_PAL
;

1666 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_PAL
;

1668 
TW_VIDEO_SIZE_HALF_D1
:

1669 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_PAL
;

1670 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_PAL
>>1;

1672 
TW_VIDEO_SIZE_CIF
:

1673 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_CIF_PAL
;

1674 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_CIF_PAL
;

1676 
TW_VIDEO_SIZE_QHALF_D1
:

1677 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_PAL
>>1;

1678 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_PAL
>>2;

1680 
TW_VIDEO_SIZE_QCIF
:

1681 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_CIF_PAL
>>1;

1682 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_CIF_PAL
>>1;

1684 
TW_VIDEO_SIZE_USER
:

1685 if((
c⁄fig_∑øm
->
width
<=0Ë|| (c⁄fig_∑øm->width>=
WIDTH_FRAME_D1_PAL
)){

1686 
c⁄fig_∑øm
->
width
 = 
WIDTH_FRAME_CIF_PAL
;

1688 if((
c⁄fig_∑øm
->
height
<=0Ë|| (c⁄fig_∑øm->height>=
HEIGHT_FRAME_D1_PAL
)){

1689 
c⁄fig_∑øm
->
height
 = 
HEIGHT_FRAME_CIF_PAL
;

1691 
ru¬ög_∑øm
->
width
 = 
c⁄fig_∑øm
->width;

1692 
ru¬ög_∑øm
->
height
 = 
c⁄fig_∑øm
->height;

1695 
	`¥ötk
("%s.%d:ÉºÉncodeSizê∑øm\n", 
__FUNCTION__
, 
__LINE__
);

1696 
ru¬ög_∑øm
->
ch™gedMask
 &~
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
;

1700 
TW_VIDEO_STANDARD_NTSC
:

1701 
ru¬ög_∑øm
->
ícodeSize
){

1702 
TW_VIDEO_SIZE_D1
:

1703 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_NTSC
;

1704 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_NTSC
;

1706 
TW_VIDEO_SIZE_HALF_D1
:

1707 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_NTSC
;

1708 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_NTSC
>>1;

1710 
TW_VIDEO_SIZE_CIF
:

1711 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_CIF_NTSC
;

1712 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_CIF_NTSC
;

1714 
TW_VIDEO_SIZE_QHALF_D1
:

1715 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_D1_NTSC
>>1;

1716 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_D1_NTSC
>>2;

1718 
TW_VIDEO_SIZE_QCIF
:

1719 
ru¬ög_∑øm
->
width
 = 
WIDTH_FRAME_CIF_NTSC
>>1;

1720 
ru¬ög_∑øm
->
height
 = 
HEIGHT_FRAME_CIF_NTSC
>>1;

1722 
TW_VIDEO_SIZE_USER
:

1723 if((
c⁄fig_∑øm
->
width
<=0Ë|| (c⁄fig_∑øm->width>=
WIDTH_FRAME_D1_NTSC
)){

1724 
c⁄fig_∑øm
->
width
 = 
WIDTH_FRAME_CIF_NTSC
;

1726 if((
c⁄fig_∑øm
->
height
<=0Ë|| (c⁄fig_∑øm->height>=
HEIGHT_FRAME_D1_NTSC
)){

1727 
c⁄fig_∑øm
->
height
 = 
HEIGHT_FRAME_CIF_NTSC
;

1729 
ru¬ög_∑øm
->
width
 = 
c⁄fig_∑øm
->width;

1730 
ru¬ög_∑øm
->
height
 = 
c⁄fig_∑øm
->height;

1733 
	`¥ötk
("%s.%d:ÉºÉncodeSizê∑øm\n", 
__FUNCTION__
, 
__LINE__
);

1734 
ru¬ög_∑øm
->
ch™gedMask
 &~
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
;

1739 
	`¥ötk
("%s.%d:Éº video°™d¨dÖ¨am\n", 
__FUNCTION__
, 
__LINE__
);

1740 
ru¬ög_∑øm
->
ch™gedMask
 &~(
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
|
TW5864_ENCODE_CONFIG_VIDEO_STANDARD_CHANGED
);

1745 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_BITRATE_CHANGED
){

1746 if(
c⁄fig_∑øm
->
bôøã
 < 
SUB_MIN_BIT_RATE
){

1747 
c⁄fig_∑øm
->
bôøã
 = 
SUB_MIN_BIT_RATE
;

1749 if(
c⁄fig_∑øm
->
bôøã
 > 
SUB_MAX_BIT_RATE
){

1750 
c⁄fig_∑øm
->
bôøã
 = 
SUB_MAX_BIT_RATE
;

1752 
ru¬ög_∑øm
->
bôøã
 = 
c⁄fig_∑øm
->bitrate;

1753 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_BITRATE_CHANGED
;

1756 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_FPS_CHANGED
){

1757 if(
c⁄fig_∑øm
->
Âs
 < 
MIN_FRAME_RATE
){

1758 
c⁄fig_∑øm
->
Âs
 = 
MIN_FRAME_RATE
;

1760 
ru¬ög_∑øm
->
videoSènd¨d
){

1761 
TW_VIDEO_STANDARD_PAL
:

1762 if(
c⁄fig_∑øm
->
Âs
 > 
MAX_FRAME_RATE_PAL
){

1763 
c⁄fig_∑øm
->
Âs
 = 
MAX_FRAME_RATE_PAL
;

1767 
TW_VIDEO_STANDARD_NTSC
:

1768 if(
c⁄fig_∑øm
->
Âs
 > 
MAX_FRAME_RATE_NTSC
){

1769 
c⁄fig_∑øm
->
Âs
 = 
MAX_FRAME_RATE_NTSC
;

1773 
ru¬ög_∑øm
->
Âs
 = 
c⁄fig_∑øm
->fps;

1774 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_FPS_CHANGED
;

1777 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_KEYFRAME_INTERVALS_CHANGED
){

1778 
ru¬ög_∑øm
->
keyFømeI¡îvÆs
 = 
c⁄fig_∑øm
->keyFrameIntervals;

1779 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_KEYFRAME_INTERVALS_CHANGED
;

1782 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_GOP_INTERVALS_CHANGED
){

1783 
ru¬ög_∑øm
->
g›I¡îvÆs
 = 
c⁄fig_∑øm
->gopIntervals;

1784 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_GOP_INTERVALS_CHANGED
;

1787 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_IMAGE_LEVEL_CHANGED
){

1788 
ru¬ög_∑øm
->
imageLevñ
 = 
c⁄fig_∑øm
->imageLevel;

1789 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_IMAGE_LEVEL_CHANGED
;

1792 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_QPI_CHANGED
){

1793 
ru¬ög_∑øm
->
qpi
 = 
c⁄fig_∑øm
->qpi;

1794 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_QPI_CHANGED
;

1797 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_QPP_CHANGED
){

1798 
ru¬ög_∑øm
->
qµ
 = 
c⁄fig_∑øm
->qpp;

1799 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_QPP_CHANGED
;

1802 if(
c⁄fig_∑øm
->
ch™gedMask
&
TW5864_ENCODE_CONFIG_QPP_CHANGED
){

1803 
ru¬ög_∑øm
->
qpb
 = 
c⁄fig_∑øm
->qpb;

1804 
ru¬ög_∑øm
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_QPP_CHANGED
;

1807 
	`•ö_u∆ock_úqª°‹e
(&
ícode_¥›îty
->
lock
, 
Êags
);

1810 
	}
}

1812 
tw_h264_ícode_¥›îty_›î©i⁄
 
	gtw_h264_sub_ícode_¥›îty_›
 = {

1813 .
upd©e_ícode_¥›îty
 = 
tw_h264_sub_ícode_¥›îty_upd©e_ícode_¥›îty
,

1814 .
	gis_videoSènd¨d_ch™ged
 = 
tw_h264_ícode_¥›îty_is_videoSènd¨d_ch™ged
,

1815 .
	ggë_videoSènd¨d
 = 
tw_h264_ícode_¥›îty_gë_videoSènd¨d
,

1816 .
	gis_ícodeSize_ch™ged
 = 
tw_h264_ícode_¥›îty_is_ícodeSize_ch™ged
,

1817 .
	ggë_ícodeSize
 = 
tw_h264_ícode_¥›îty_gë_ícodeSize
,

1818 .
	ggë_ícodeSize_width
 = 
tw_h264_ícode_¥›îty_gë_ícodeSize_width
,

1819 .
	ggë_ícodeSize_height
 = 
tw_h264_ícode_¥›îty_gë_ícodeSize_height
,

1820 .
	gis_èrgë_bôøã_ch™ged
 = 
tw_h264_ícode_¥›îty_is_èrgë_bôøã_ch™ged
,

1821 .
	ggë_èrgë_bôøã
 = 
tw_h264_ícode_¥›îty_gë_èrgë_bôøã
,

1822 .
	gis_èrgë_Âs_ch™ged
 = 
tw_h264_ícode_¥›îty_is_èrgë_Âs_ch™ged
,

1823 .
	ggë_èrgë_Âs
 = 
tw_h264_ícode_¥›îty_gë_èrgë_Âs
,

1824 .
	gis_keyFømeI¡îvÆs_ch™ged
 = 
tw_h264_ícode_¥›îty_is_keyFømeI¡îvÆs_ch™ged
,

1825 .
	ggë_keyFømeI¡îvÆs
 = 
tw_h264_ícode_¥›îty_gë_keyFømeI¡îvÆs
,

1826 .
	gis_g›I¡îvÆs_ch™ged
 = 
tw_h264_ícode_¥›îty_is_g›I¡îvÆs_ch™ged
,

1827 .
	ggë_g›I¡îvÆs
 = 
tw_h264_ícode_¥›îty_gë_g›I¡îvÆs
,

1828 .
	gis_rcTy≥_ch™ged
 = 
tw_h264_ícode_¥›îty_is_rcTy≥_ch™ged
,

1829 .
	ggë_rcTy≥
 = 
tw_h264_ícode_¥›îty_gë_rcTy≥
,

1830 .
	gis_ümgeLevñ_ch™ged
 = 
tw_h264_ícode_¥›îty_is_ümgeLevñ_ch™ged
,

1831 .
	ggë_ümgeLevñ
 = 
tw_h264_ícode_¥›îty_gë_ümgeLevñ
,

1832 .
	gis_qpi_ch™ged
 = 
tw_h264_ícode_¥›îty_is_qpi_ch™ged
,

1833 .
	ggë_qpi
 = 
tw_h264_ícode_¥›îty_gë_qpi
,

1834 .
	gis_qµ_ch™ged
 = 
tw_h264_ícode_¥›îty_is_qµ_ch™ged
,

1835 .
	ggë_qµ
 = 
tw_h264_ícode_¥›îty_gë_qµ
,

1836 .
	gis_qpb_ch™ged
 = 
tw_h264_ícode_¥›îty_is_qpb_ch™ged
,

1837 .
	ggë_qpb
 = 
tw_h264_ícode_¥›îty_gë_qpb
,

1840 
	$öô_tw5864_h264_sub_ícode_¥›îty
(
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
, 
tw_h264_ícode_c⁄figuøti⁄_t
 *
c⁄fig_∑øm
)

1843 
tw_h264_ícode_„©uª_∑øm_t
 *
p„©uª
;

1844 
tw_h264_ícode_„©uª_t
 *
¥u¬ög_„©uª
;

1845 
tw_h264_ícode_rc_t
 *
p_rc
, *
¥u¬ög_rc
;

1846 
tw_h264_ícode_c⁄figuøti⁄_t
 
ícode_∑øm
;

1848 if(
c⁄fig_∑øm
 =
NULL
){

1849 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ch™
;

1850 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

1851 
dvm_chù_t
 *
chù
;

1852 
chù_drivî_t
 *
chù_drivî
;

1853 
tw_video_bus_t
 *
video_bus
;

1855 
	`mem˝y
(&
ícode_∑øm
, &
deÁu…_h264_sub_ícode_¥›îty
, (
tw_h264_ícode_c⁄figuøti⁄_t
));

1856 
h264_logic_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_¥›îty
(
ícode_¥›îty
);

1857 
chù
 = 
h264_logic_ch™
->chip;

1858 
chù_drivî
 = 
chù
->chip_driver;

1859 
video_bus
 = &
chù_drivî
->video_bus;

1861 
c⁄fig_∑øm
 = &
ícode_∑øm
;

1862 if(
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË=
TW_VIDEO_STANDARD_PAL
) {

1863 
c⁄fig_∑øm
->
videoSènd¨d
 = 
TW_VIDEO_STANDARD_PAL
;

1864 }if(
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË=
TW_VIDEO_STANDARD_NTSC
){

1865 
c⁄fig_∑øm
->
videoSènd¨d
 = 
TW_VIDEO_STANDARD_NTSC
;

1867 
	`TW_DBG
(
TW_DBG_FATAL
, "unknow¿videÿ°™d¨d %d\n", 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus));

1869 
phy_video_¶Ÿ
 = 
h264_logic_ch™
->
ma°î_¶Ÿ
;

1870 
phy_video_¶Ÿ
->
›
->
	`gë_video_size
(phy_video_slot)) {

1872 
TW_VIDEO_SIZE_QCIF
:

1873 
c⁄fig_∑øm
->
ícodeSize
 = 
TW_VIDEO_SIZE_QCIF
;

1874 
TW_VIDEO_SIZE_D1
:

1875 
c⁄fig_∑øm
->
ícodeSize
 = 
TW_VIDEO_SIZE_CIF
;

1877 
TW_VIDEO_SIZE_HALF_D1
:

1878 
c⁄fig_∑øm
->
ícodeSize
 = 
TW_VIDEO_SIZE_CIF
;

1880 
TW_VIDEO_SIZE_CIF
:

1881 
c⁄fig_∑øm
->
ícodeSize
 = 
TW_VIDEO_SIZE_QCIF
;

1885 
	`•ö_lock_öô
(&
ícode_¥›îty
->
lock
);

1886 
ícode_¥›îty
->
›
 = &
tw_h264_sub_ícode_¥›îty_›
;

1887 
ícode_¥›îty
->
›
->
	`upd©e_ícode_¥›îty
”ncode_¥›îty, 
c⁄fig_∑øm
);

1890 
¥u¬ög_„©uª
 = &
ícode_¥›îty
->
ícode_„©uª
;

1891 
p„©uª
 = &
deÁu…_sub_ícode_„©uª
;

1892 
¥u¬ög_„©uª
->
›
 = &
tw_h264_ícode_„©uª_›î©i⁄_›
;

1893 
¥u¬ög_„©uª
->
›
->
	`öô
(prunning_feature);

1894 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_DEINTERLACE_MASK
) {

1895 
¥u¬ög_„©uª
->
›
->
	`upd©e_deöãæa˚
’ru¬ög_„©uª, 
p„©uª
->
b_íabÀ_deöãæa˚
);

1897 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_SKIP_MASK
) {

1898 
¥u¬ög_„©uª
->
›
->
	`upd©e_skù
’ru¬ög_„©uª, 
p„©uª
->
b_íabÀ_skù
);

1900 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_I_4X4_MASK
) {

1901 
¥u¬ög_„©uª
->
›
->
	`upd©e_i_4x4
’ru¬ög_„©uª, 
p„©uª
->
b_íabÀ_I_4X4
);

1903 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENABLE_CHANGE_HALF_PIXEL_MASK
) {

1904 
¥u¬ög_„©uª
->
›
->
	`upd©e_hÆf_pixñ
’ru¬ög_„©uª, 
p„©uª
->
b_íabÀ_hÆf_pixñ
);

1906 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_QUARTER_PIXEL_MASK
) {

1907 
¥u¬ög_„©uª
->
›
->
	`upd©e_qu¨ãr_pixñ
’ru¬ög_„©uª, 
p„©uª
->
b_íabÀ_qu¨ãr_pixñ
);

1909 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_MB_DELAY_MASK
) {

1910 
¥u¬ög_„©uª
->
›
->
	`upd©e_mb_dñay
’ru¬ög_„©uª, 
p„©uª
->
i_mb_dñay_vÆue
);

1914 
¥u¬ög_rc
 = &
ícode_¥›îty
->
ícode_rc
;

1915 
p_rc
 = &
deÁu…_sub_ícode_rc
;

1916 if(
p_rc
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_RC_ENABLE_CHANGE_RC_TYPE_MASK
) {

1917 if((
p_rc
->
e_image_¥i‹ôy
 >
TW_RC_IMAGE_QUALITY_FIRST
Ë&& (p_rc->e_image_¥i‹ôy <
TW_RC_IMAGE_SMOOTH_FIRST
)) {

1918 
¥u¬ög_rc
->
e_image_¥i‹ôy
 = 
p_rc
->e_image_priority;

1920 
	`TW_DBG
(
TW_DBG_ERR
, "unknow¿image_¥i‹ôy %d\n", 
p_rc
->
e_image_¥i‹ôy
);

1923 if(
p_rc
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_RC_ENABLE_CHANGE_IMAGE_PRIORITY_MASK
) {

1924 if((
p_rc
->
e_rc_ty≥
 >
TW_H264_NO_RC
Ë&& (p_rc->e_rc_ty≥ <
TW_H264_VBR
)) {

1925 
¥u¬ög_rc
->
e_rc_ty≥
 = 
p_rc
->e_rc_type;

1927 
	`TW_DBG
(
TW_DBG_ERR
, "unknow¿rc_ty≥ %d\n", 
p_rc
->
e_rc_ty≥
);

1930 if(
p_rc
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_RC_ENABLE_CHANGE_DEFAULT_QP_MASK
) {

1931 if((
p_rc
->
i_deÁu…_qp
 >
QUANT_SCALE_MIN
Ë&& (p_rc->i_deÁu…_q∞<
QUANT_SCALE_MAX
)) {

1932 
¥u¬ög_rc
->
i_deÁu…_qp
 = 
p_rc
->i_default_qp;

1934 
	`TW_DBG
(
TW_DBG_ERR
, "deÁu…_q∞%dÉº‹, [%d, %d]\n", 
p_rc
->
i_deÁu…_qp
, 
QUANT_SCALE_MIN
, 
QUANT_SCALE_MAX
);

1937 
	}
}

1939 
	$tw_h264_logic_video_¶Ÿ_öô
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
, 
logic_¶Ÿ_id
, 
TW_VIDEO_SIZE
 
video_size
)

1941 if(
logic_video_¶Ÿ
 !
NULL
){

1942 
logic_video_¶Ÿ
->
logicSlŸId
 = 
logic_¶Ÿ_id
;

1943 
logic_video_¶Ÿ
->
m≠PhySlŸId
 = 
TW5864_LOGIC_VD_INVALID
;

1944 
logic_video_¶Ÿ
->
disˇrdTabÀ
 = 0;

1945 
logic_video_¶Ÿ
->
roundTabÀSåide
 = 0;

1946 
logic_video_¶Ÿ
->
video_size
 = video_size;

1947 
logic_video_¶Ÿ
->
íabÀSlŸ
 = 0;

1948 
logic_video_¶Ÿ
->
¶ŸFps
 = 0;

1949 
logic_video_¶Ÿ
->
h‹_ªvî£
= 0;

1950 
logic_video_¶Ÿ
->
vî_ªvî£
= 0;

1951 
	`©omic_£t
(&
logic_video_¶Ÿ
->
√edUpd©eFœg
, 0);

1953 
	}
}

1955 
	$tw_h264_logic_video_¶Ÿ_£t_m≠PhySlŸId
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
, 
phy_¶Ÿ_id
)

1957 if(
logic_video_¶Ÿ
 !
NULL
) {

1958 
logic_video_¶Ÿ
->
m≠PhySlŸId
 = 
phy_¶Ÿ_id
;

1960 
	}
}

1962 
	$tw_h264_logic_video_¶Ÿ_gë_m≠PhySlŸId
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
, 
phy_¶Ÿ
)

1964 if(
logic_video_¶Ÿ
)

1966  
logic_video_¶Ÿ
->
m≠PhySlŸId
;

1972 
	}
}

1974 
	$tw_h264_logic_video_¶Ÿ_£t_disˇrdTabÀ
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
, 
u32
 
disˇrdTabÀ
)

1976 if(
logic_video_¶Ÿ
)

1978 
logic_video_¶Ÿ
->
disˇrdTabÀ
 = discardTable;

1982 
	}
}

1984 
u32
 
	$tw_h264_logic_video_¶Ÿ_gë_disˇrdTabÀ
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
)

1986 if(
logic_video_¶Ÿ
)

1988  
logic_video_¶Ÿ
->
disˇrdTabÀ
;

1994 
	}
}

1996 
	$tw_h264_logic_video_¶Ÿ_£t_roundTabÀSåide
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
, 
roundTabÀSåide
)

1998 if(
logic_video_¶Ÿ
)

2000 
logic_video_¶Ÿ
->
roundTabÀSåide
 =ÑoundTableStride;

2004 
	}
}

2006 
	$tw_h264_logic_video_¶Ÿ_gë_roundTabÀSåide
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
)

2008 if(
logic_video_¶Ÿ
)

2010  
logic_video_¶Ÿ
->
roundTabÀSåide
;

2016 
	}
}

2018 
	$tw_h264_logic_video_¶Ÿ_˛ór_√edUpd©eFœg
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
)

2020 if(
logic_video_¶Ÿ
)

2022 
	`©omic_£t
(&
logic_video_¶Ÿ
->
√edUpd©eFœg
, 0);

2026 
	}
}

2028 
	$tw_h264_logic_video_¶Ÿ_gë_√edUpd©eFœg
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
)

2030 if(
logic_video_¶Ÿ
)

2032  
	`©omic_ªad
(&
logic_video_¶Ÿ
->
√edUpd©eFœg
);

2038 
	}
}

2040 
	$tw_h264_logic_video_¶Ÿ_gë_video_size
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
)

2042 if(
logic_video_¶Ÿ
) {

2043  
logic_video_¶Ÿ
->
video_size
;

2046 
	`TW_DBG
(
TW_DBG_ERR
, "nullÖointer\n");

2047  
TW_VIDEO_SIZE_D1
;

2048 
	}
}

2050 
	$tw_h264_logic_video_¶Ÿ_£t_video_size
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
, 
TW_VIDEO_SIZE
 
video_size
)

2052 if(
logic_video_¶Ÿ
) {

2053 
logic_video_¶Ÿ
->
video_size
 = video_size;

2055 
	}
}

2057 
u32
 
	$tw_h264_logic_video_¶Ÿ_gë_íabÀ¶Ÿ
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
)

2059 if(
logic_video_¶Ÿ
) {

2060  
logic_video_¶Ÿ
->
íabÀSlŸ
;

2064 
	}
}

2066 
	$tw_h264_logic_video_¶Ÿ_£t_íabÀ¶Ÿ
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
, 
u32
 
íabÀ
)

2068 if(
logic_video_¶Ÿ
) {

2069 
logic_video_¶Ÿ
->
íabÀSlŸ
 = 
íabÀ
;

2071 
	}
}

2073 
u32
 
	$tw_h264_logic_video_¶Ÿ_gë_Âs
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
)

2075 if(
logic_video_¶Ÿ
) {

2076  
logic_video_¶Ÿ
->
¶ŸFps
;

2080 
	}
}

2082 
	$tw_h264_logic_video_¶Ÿ_£t_Âs
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
, 
u32
 
Âs
)

2084 if(
logic_video_¶Ÿ
) {

2085 
logic_video_¶Ÿ
->
¶ŸFps
 = 
Âs
;

2087 
	}
}

2089 
	$tw_h264_logic_video_¶Ÿ_£t_chù_íd_logic_video_¶Ÿ_∑øm
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
, 
dvm_chù_t
 *
chù
)

2092 
	}
}

2094 
u32
 
	$tw_h264_logic_video_¶Ÿ_gë_chù_íd_logic_video_¶Ÿ_∑øm
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
, 
dvm_chù_t
 *
chù
)

2100 
	}
}

2102 
tw_h264_logic_video_¶Ÿ_›î©i⁄
 
	gtw_h264_logic_video_¶Ÿ_›
 = {

2103 .
öô
 = 
tw_h264_logic_video_¶Ÿ_öô
,

2104 .
	g£t_m≠PhySlŸId
 = 
tw_h264_logic_video_¶Ÿ_£t_m≠PhySlŸId
,

2105 .
	ggë_m≠PhySlŸId
 = 
tw_h264_logic_video_¶Ÿ_gë_m≠PhySlŸId
,

2106 .
	g£t_disˇrdTabÀ
 = 
tw_h264_logic_video_¶Ÿ_£t_disˇrdTabÀ
,

2107 .
	ggë_disˇrdTabÀ
 = 
tw_h264_logic_video_¶Ÿ_gë_disˇrdTabÀ
,

2108 .
	g£t_roundTabÀSåide
 = 
tw_h264_logic_video_¶Ÿ_£t_roundTabÀSåide
,

2109 .
	ggë_roundTabÀSåide
 = 
tw_h264_logic_video_¶Ÿ_gë_roundTabÀSåide
,

2110 .
	g˛ór_√edUpd©eFœg
 = 
tw_h264_logic_video_¶Ÿ_˛ór_√edUpd©eFœg
,

2111 .
	ggë_√edUpd©eFœg
 = 
tw_h264_logic_video_¶Ÿ_gë_√edUpd©eFœg
,

2112 .
	ggë_video_size
 = 
tw_h264_logic_video_¶Ÿ_gë_video_size
,

2113 .
	g£t_video_size
 = 
tw_h264_logic_video_¶Ÿ_£t_video_size
,

2114 .
	ggë_íabÀ¶Ÿ
 = 
tw_h264_logic_video_¶Ÿ_gë_íabÀ¶Ÿ
,

2115 .
	g£t_íabÀ¶Ÿ
 = 
tw_h264_logic_video_¶Ÿ_£t_íabÀ¶Ÿ
,

2116 .
	ggë_Âs
 = 
tw_h264_logic_video_¶Ÿ_gë_Âs
,

2117 .
	g£t_Âs
 = 
tw_h264_logic_video_¶Ÿ_£t_Âs
,

2119 .
	g£t_chù_íd_logic_video_¶Ÿ_∑øm
 = 
tw_h264_logic_video_¶Ÿ_£t_chù_íd_logic_video_¶Ÿ_∑øm
,

2120 .
	ggë_chù_íd_logic_video_¶Ÿ_∑øm
 = 
tw_h264_logic_video_¶Ÿ_gë_chù_íd_logic_video_¶Ÿ_∑øm
,

2123 
	$c⁄fig_£nif_bus
(
tw5864_vd_¸oss_bus_t
 *
vd_bus
, 
bus_id
, 
mode
)

2125 
u32
 
vÆ
 = 0, 
i
 = 0, 
fuŒ_size
 = 0, 
∑πab_£À˘
 = 0;

2126 
u32
 
n‹m
;

2127 
dvm_chù_t
 *
chù
;

2128 
chù_drivî_t
 *
drivî
;

2129 
tw_video_bus_t
 *
video_bus
;

2130 
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
;

2131 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

2132 
u32
 
ãmp
, 
width_∑πa
, 
width_∑πb
, 
height_∑πa
, 
height_∑πb
;

2134 if((
bus_id
 < 0Ë|| (bus_id >
TW_MAX_GRP
))

2136 
	`TW_DBG
(
TW_DBG_ERR
, "invalidárgument\n");

2137  -
EINVAL
;

2140 
chù
 = 
	`to_gë_chù_wôh_chù_¸oss_bus
(
vd_bus
);

2141 
drivî
 = 
chù
->
chù_drivî
;

2142 
video_bus
 = &
drivî
->video_bus;

2143 
n‹m
 = 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus);

2144 
mode
)

2147 
MODE_D1
:

2148 
MODE_HALFD1
:

2149 
ãmp
 = 0x3c;

2150 
width_∑πa
 = 
	`VIDEO_SIZE_TO_WIDTH
(
VIDEO_SIZE_FROM_VD
, 
TW_VIDEO_SIZE_D1
, 
n‹m
) - 1;

2151 
width_∑πb
 = 
	`VIDEO_SIZE_TO_WIDTH
(
VIDEO_SIZE_FROM_VD
, 
TW_VIDEO_SIZE_D1
, 
n‹m
) - 1;

2152 
height_∑πa

	`VIDEO_SIZE_TO_HEIGHT
(
VIDEO_SIZE_FROM_VD
, 
TW_VIDEO_SIZE_D1
, 
n‹m
) - 1;

2153 
height_∑πb

	`VIDEO_SIZE_TO_HEIGHT
(
VIDEO_SIZE_FROM_VD
, 
TW_VIDEO_SIZE_HALF_D1
, 
n‹m
) - 1;

2155 
MODE_HALFD1_CIF
:

2156 
MODE_D1_CIF
:

2157 
ãmp
 = 0x2e;

2158 
width_∑πa
 = 
	`VIDEO_SIZE_TO_WIDTH
(
VIDEO_SIZE_FROM_VD
, 
TW_VIDEO_SIZE_D1
, 
n‹m
) - 1;

2159 
width_∑πb
 = 
	`VIDEO_SIZE_TO_WIDTH
(
VIDEO_SIZE_FROM_VD
, 
TW_VIDEO_SIZE_CIF
, 
n‹m
) - 1;

2160 
height_∑πa

	`VIDEO_SIZE_TO_HEIGHT
(
VIDEO_SIZE_FROM_VD
, 
TW_VIDEO_SIZE_D1
, 
n‹m
) - 1;

2161 
height_∑πb

	`VIDEO_SIZE_TO_HEIGHT
(
VIDEO_SIZE_FROM_VD
, 
TW_VIDEO_SIZE_CIF
, 
n‹m
) - 1;

2163 
MODE_CIF
:

2164 
ãmp
 = 0x27;

2165 
width_∑πa
 = 
	`VIDEO_SIZE_TO_WIDTH
(
VIDEO_SIZE_FROM_VD
, 
TW_VIDEO_SIZE_CIF
, 
n‹m
) - 1;

2166 
width_∑πb
 = 
	`VIDEO_SIZE_TO_WIDTH
(
VIDEO_SIZE_FROM_VD
, 
TW_VIDEO_SIZE_CIF
, 
n‹m
) - 1;

2167 
height_∑πa

	`VIDEO_SIZE_TO_HEIGHT
(
VIDEO_SIZE_FROM_VD
, 
TW_VIDEO_SIZE_CIF
, 
n‹m
) - 1;

2168 
height_∑πb

	`VIDEO_SIZE_TO_HEIGHT
(
VIDEO_SIZE_FROM_VD
, 
TW_VIDEO_SIZE_CIF
, 
n‹m
) - 1;

2171 if(
bus_id
 < 2){

2172 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
SENIF_BUS01_MODE
);

2173 if(
bus_id
%2){

2174 
vÆ
 &= 0xff;

2175 
vÆ
 |
ãmp
<<8;

2178 
vÆ
 &= 0xfff00;

2179 
vÆ
 |
ãmp
;

2181 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
SENIF_BUS01_MODE
, 
vÆ
);

2184 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
SENIF_BUS23_MODE
);

2185 if(
bus_id
%2){

2186 
vÆ
 &= 0xff;

2187 
vÆ
 |
ãmp
<<8;

2190 
vÆ
 &= 0xfff00;

2191 
vÆ
 |
ãmp
;

2193 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
SENIF_BUS23_MODE
, 
vÆ
);

2196 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
	`SENIF_WIDTH_PARTA
(
bus_id
), 
width_∑πa
);

2197 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
	`SENIF_WIDTH_PARTB
(
bus_id
), 
width_∑πb
);

2198 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
	`SENIF_HEIGHT_PARTA
(
bus_id
), 
height_∑πa
);

2199 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
	`SENIF_HEIGHT_PARTB
(
bus_id
), 
height_∑πb
);

2200 
ãmp
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
SENIF_HOR_MIR
);

2201 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
SENIF_VER_MIR
);

2202 
fuŒ_size
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
SENIF_FULL_FLAGS
);

2203 
∑πab_£À˘
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
SENIF_PARTAB_SELECT
);

2204 
phy_video_¶Ÿ
 = 
vd_bus
->phy_video_slot;

2205 
i
 = 0; i < 
TW5864_PHY_VD_CHAN_NUMBER
; i++, 
phy_video_¶Ÿ
++) {

2206 
logic_video_¶Ÿ
 = 
phy_video_¶Ÿ
->
¸oss_bus_logic_video_¶Ÿ
;

2207 if(
logic_video_¶Ÿ
->
h‹_ªvî£
) {

2208 
ãmp
 |(1 << 
logic_video_¶Ÿ
->
logicSlŸId
);

2210 
ãmp
 &~(1 << 
logic_video_¶Ÿ
->
logicSlŸId
);

2212 if(
logic_video_¶Ÿ
->
vî_ªvî£
) {

2213 
vÆ
 |(1 << 
logic_video_¶Ÿ
->
logicSlŸId
);

2215 
vÆ
 &~(1 << 
logic_video_¶Ÿ
->
logicSlŸId
);

2217 if((
logic_video_¶Ÿ
->
video_size
 =
TW_VIDEO_SIZE_D1
Ë|| (logic_video_¶Ÿ->video_sizê=
TW_VIDEO_SIZE_CIF
)) {

2218 
fuŒ_size
 |(1 << 
logic_video_¶Ÿ
->
logicSlŸId
);

2219 
∑πab_£À˘
 &~(1 << 
logic_video_¶Ÿ
->
logicSlŸId
);

2221 
fuŒ_size
 &~(1 << 
logic_video_¶Ÿ
->
logicSlŸId
);

2222 
∑πab_£À˘
 |(1 << 
logic_video_¶Ÿ
->
logicSlŸId
);

2225 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
SENIF_HOR_MIR
, 
ãmp
);

2226 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
SENIF_VER_MIR
, 
vÆ
);

2227 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
SENIF_FULL_FLAGS
, 
fuŒ_size
);

2228 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
SENIF_PARTAB_SELECT
, 
∑πab_£À˘
);

2230 
	`TW_DBG
(
TW_DBG_INFO
, "£nif: bus%d modê%d, (0x%x, 0x%x, 0x%x, 0x%x),Ö¨èb 0x%08x, fuŒ 0x%08x\n", 
bus_id
, 
mode
,

2231 
width_∑πa
, 
width_∑πb
, 
height_∑πa
, 
height_∑πb
, 
∑πab_£À˘
, 
fuŒ_size
);

2234 
	}
}

2236 
	$öô_tw5864_h264_logic_video_¶Ÿ
(
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
, 
logic_id
, 
TW_VIDEO_SIZE
 
video_size
)

2238 
logic_video_¶Ÿ
->
›
 = &
tw_h264_logic_video_¶Ÿ_›
;

2239 
logic_video_¶Ÿ
->
›
->
	`öô
÷ogic_video_¶Ÿ, 
logic_id
, 
video_size
);

2240 
	}
}

2242 
	$tw5864_vd_¸oss_bus_öô
(
tw5864_vd_¸oss_bus_t
 *
vd_¸oss_bus
, 
TW_CROSS_BUS_WORK_MODE
 
mode
, 
TW_VIDEO_STANDARD
 
video_°™d¨d
)

2245 
phy_bus_id
[
TW5864_PHY_VD_CHAN_NUMBER
];

2247 
	`mem£t
(
phy_bus_id
, 0, (Ë* 
TW5864_PHY_VD_CHAN_NUMBER
);

2249 if(
vd_¸oss_bus
 !
NULL
){

2250 
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
;

2251 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

2252 
vd_ch™_m≠_öfo_t
 
ch™_m≠_èbÀ
[
TW5864_PHY_VD_CHAN_NUMBER
], *
ch™_m≠
;

2253 
dvm_chù_t
 *
chù
 = 
NULL
;

2254 
TW_VIDEO_SIZE
 
video_size
;

2255 
u32
 
loˇl_Âs
 = 0;

2256 
i
;

2258 
chù
 = 
	`to_gë_chù_wôh_chù_¸oss_bus
(
vd_¸oss_bus
);

2259 
vd_¸oss_bus
->
›
->
	`upd©e_w‹k_mode
(vd_¸oss_bus, 
mode
);

2260 
ch™_m≠
 = 
ch™_m≠_èbÀ
;

2261 if(
video_°™d¨d
 =
TW_VIDEO_STANDARD_PAL
) {

2262 
loˇl_Âs
 = 25;

2264 
loˇl_Âs
 = 30;

2266 
vd_¸oss_bus
->
›
->
	`gë_w‹k_mode
(vd_cross_bus)){

2267 
TW_CROSS_BUS_4D1_REALTIME
:

2268 
video_size
 = 
TW_VIDEO_SIZE_D1
;

2269 
i
=0; i<4; i++, 
ch™_m≠
++){

2270 
ch™_m≠
->
phy_¶Ÿ_id
 = 
i
;

2271 
ch™_m≠
->
Âs
 = 
loˇl_Âs
;

2272 
ch™_m≠
->
video_size
 = 
TW_VIDEO_SIZE_D1
;

2275 ;
i
<
TW5864_PHY_VD_CHAN_NUMBER
; i++, 
ch™_m≠
++){

2276 
ch™_m≠
->
phy_¶Ÿ_id
 = 
TW5864_LOGIC_VD_INVALID
;

2279 
TW_CROSS_BUS_8HÆfD1_REALTIME
:

2280 
video_size
 = 
TW_VIDEO_SIZE_HALF_D1
;

2281 
i
=0; i<8; i++, 
ch™_m≠
++){

2282 
ch™_m≠
->
phy_¶Ÿ_id
 = 
i
;

2283 
ch™_m≠
->
Âs
 = 
loˇl_Âs
;

2284 
ch™_m≠
->
video_size
 = 
TW_VIDEO_SIZE_HALF_D1
;

2286 ; 
i
 < 
TW5864_PHY_VD_CHAN_NUMBER
; i++, 
ch™_m≠
++){

2287 
ch™_m≠
->
phy_¶Ÿ_id
 = 
TW5864_LOGIC_VD_INVALID
;

2290 
TW_CROSS_BUS_16CIF_REALTIME
:

2291 
video_size
 = 
TW_VIDEO_SIZE_CIF
;

2292 
i
=0; i<
TW5864_PHY_VD_CHAN_NUMBER
; i++, 
ch™_m≠
++){

2293 
ch™_m≠
->
phy_¶Ÿ_id
 = 
i
;

2294 
ch™_m≠
->
Âs
 = 
loˇl_Âs
;

2295 
ch™_m≠
->
video_size
 = 
TW_VIDEO_SIZE_CIF
;

2299 
TW_CROSS_BUS_UNREALTIME
:

2300 
video_size
 = 
TW_VIDEO_SIZE_D1
;

2301 
i
=0; i<
TW5864_PHY_VD_CHAN_NUMBER
; i++, 
ch™_m≠
++){

2302 
ch™_m≠
->
phy_¶Ÿ_id
 = 
i
;

2303 
ch™_m≠
->
Âs
 = 
deÁu…_n⁄ªÆ_time_Âs_èbÀ
[
i
];

2304 
ch™_m≠
->
video_size
 = 
deÁu…_n⁄ªÆ_time_fmt_èbÀ
[
i
];

2309 
phy_video_¶Ÿ
 = 
vd_¸oss_bus
->phy_video_slot;

2310 
logic_video_¶Ÿ
 = 
vd_¸oss_bus
->logic_video_slot;

2311 
i
=0; i<
TW5864_PHY_VD_CHAN_NUMBER
; i++){

2312 
	`öô_tw5864_h264_phy_video_¶Ÿ
(
phy_video_¶Ÿ
++, 
i
, 
video_size
);

2313 
	`öô_tw5864_h264_logic_video_¶Ÿ
(
logic_video_¶Ÿ
++, 
i
, 
video_size
);

2316 if(
vd_¸oss_bus
->
›
->
	`ˇlcuœã_¸oss_bus_m≠_èbÀ
(vd_¸oss_bus, 
ch™_m≠_èbÀ
)){

2317 
	`TW_DBG
(
TW_DBG_ERR
, "calculate mapÅable failed,Ölease checkÖarameter!\n");

2318  -
EINVAL
;

2320 
ch™_m≠
 = 
ch™_m≠_èbÀ
;

2321 
i
 = 0; i < 
TW5864_CROSS_BUS_LOGIC_VD_CHAN_NUMBER
; i++, 
ch™_m≠
++) {

2322 if(
ch™_m≠
->
m≠_logic_¶Ÿ_id
 >
TW5864_CROSS_BUS_LOGIC_VD_CHAN_NUMBER
) {

2323 
	`TW_DBG
(
TW_DBG_ERR
, "logi¯ch™√»numbî %d ovîÊow\n", 
ch™_m≠
->
m≠_logic_¶Ÿ_id
);

2324  -
TW_ERR
;

2326 
logic_video_¶Ÿ
 = &
vd_¸oss_bus
->logic_video_¶Ÿ[
ch™_m≠
->
m≠_logic_¶Ÿ_id
];

2327 
logic_video_¶Ÿ
->
›
->
	`£t_m≠PhySlŸId
÷ogic_video_¶Ÿ, 
ch™_m≠
->
phy_¶Ÿ_id
);

2328 
logic_video_¶Ÿ
->
›
->
	`£t_disˇrdTabÀ
÷ogic_video_¶Ÿ, 
ch™_m≠
->
logic_¶Ÿ_disˇrd_èbÀ
);

2329 
logic_video_¶Ÿ
->
›
->
	`£t_roundTabÀSåide
÷ogic_video_¶Ÿ, 
ch™_m≠
->
roundTabÀSåide
);

2330 
logic_video_¶Ÿ
->
›
->
	`£t_video_size
÷ogic_video_¶Ÿ, 
ch™_m≠
->
video_size
);

2331 
logic_video_¶Ÿ
->
›
->
	`£t_íabÀ¶Ÿ
÷ogic_video_¶Ÿ, 
ch™_m≠
->
íabÀ
);

2332 
logic_video_¶Ÿ
->
›
->
	`£t_Âs
÷ogic_video_¶Ÿ, 
ch™_m≠
->
Âs
);

2333 
	`©omic_£t
(&
logic_video_¶Ÿ
->
√edUpd©eFœg
, 1);

2334 
vd_¸oss_bus
->
›
->
	`gë_phy_video_¶Ÿ_by_phy_id
(vd_¸oss_bus, 
ch™_m≠
->
phy_¶Ÿ_id
, &
phy_video_¶Ÿ
);

2335 
phy_video_¶Ÿ
->
›
->
	`upd©e_m≠_logic_¶Ÿ
’hy_video_¶Ÿ, 
logic_video_¶Ÿ
->
logicSlŸId
,Üogic_video_slot);

2338  
TW_OK
;

2341 
	`TW_DBG
(
TW_DBG_ERR
, "nullÖointer\n");

2343  
TW_ERR
;

2344 
	}
}

2346 
	$tw5864_vd_¸oss_bus_gë_logic_video_¶Ÿ_by_logic_id
(
tw5864_vd_¸oss_bus_t
 *
vd_¸oss_bus
, 
logic_¶Ÿ_id
, 
tw_h264_logic_video_¶Ÿ_t
 **
±r_logic_video_¶Ÿ
)

2348 if((
±r_logic_video_¶Ÿ
!=
NULL
Ë&& (
logic_¶Ÿ_id
<
TW5864_CROSS_BUS_LOGIC_VD_CHAN_NUMBER
)){

2349 *
±r_logic_video_¶Ÿ
 = &
vd_¸oss_bus
->
logic_video_¶Ÿ
[
logic_¶Ÿ_id
];

2351 
	}
}

2353 
	$tw5864_vd_¸oss_bus_gë_logic_video_¶Ÿ_by_phy_id
(
tw5864_vd_¸oss_bus_t
 *
vd_¸oss_bus
, 
phy_¶Ÿ_id
, 
tw_h264_logic_video_¶Ÿ_t
 **
±r_logic_video_¶Ÿ
)

2355 if(
vd_¸oss_bus
) {

2356 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

2357 if((
phy_¶Ÿ_id
 < 0Ë|| (phy_¶Ÿ_id >
TW5864_PHY_VD_CHAN_NUMBER
)) {

2358 *
±r_logic_video_¶Ÿ
 = 
NULL
;

2361 
phy_video_¶Ÿ
 = &
vd_¸oss_bus
->phy_video_¶Ÿ[
phy_¶Ÿ_id
];

2362 *
±r_logic_video_¶Ÿ
 = 
phy_video_¶Ÿ
->
¸oss_bus_logic_video_¶Ÿ
;

2364 
	}
}

2366 
	$tw5864_vd_¸oss_bus_gë_phy_video_¶Ÿ_by_logic_id
(
tw5864_vd_¸oss_bus_t
 *
vd_¸oss_bus
, 
logic_¶Ÿ_id
, 
tw_h264_phy_video_¶Ÿ_t
 **
±r_phy_video_¶Ÿ
)

2368 if((
±r_phy_video_¶Ÿ
!=
NULL
Ë&& (
logic_¶Ÿ_id
<
TW5864_CROSS_BUS_LOGIC_VD_CHAN_NUMBER
)){

2369 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

2370 
i
;

2372 
i
=0; i<
TW5864_PHY_VD_CHAN_NUMBER
; i++){

2373 
phy_video_¶Ÿ
 = &
vd_¸oss_bus
->phy_video_¶Ÿ[
i
];

2374 if(
phy_video_¶Ÿ
->
m≠_logic_id
 !
TW5864_LOGIC_VD_INVALID
){

2375 if(
phy_video_¶Ÿ
->
m≠_logic_id
 =
logic_¶Ÿ_id
){

2376 *
±r_phy_video_¶Ÿ
 = 
phy_video_¶Ÿ
;

2382 
	}
}

2384 
	$tw5864_vd_¸oss_bus_gë_phy_video_¶Ÿ_by_phy_id
(
tw5864_vd_¸oss_bus_t
 *
vd_¸oss_bus
, 
phy_¶Ÿ_id
, 
tw_h264_phy_video_¶Ÿ_t
 **
±r_phy_video_¶Ÿ
)

2386 if((
±r_phy_video_¶Ÿ
!=
NULL
Ë&& (
phy_¶Ÿ_id
<
TW5864_PHY_VD_CHAN_NUMBER
)){

2387 *
±r_phy_video_¶Ÿ
 = &
vd_¸oss_bus
->
phy_video_¶Ÿ
[
phy_¶Ÿ_id
];

2389 
	}
}

2392 
	$tw5864_vd_¸oss_bus_gë_w‹k_mode
(
tw5864_vd_¸oss_bus_t
 *
vd_¸oss_bus
)

2394  
vd_¸oss_bus
->
mode
;

2395 
	}
}

2397 
	$tw5864_vd_¸oss_bus_upd©e_w‹k_mode
(
tw5864_vd_¸oss_bus_t
 *
vd_¸oss_bus
, 
TW_CROSS_BUS_WORK_MODE
 
mode
)

2399 if(!
vd_¸oss_bus
) {

2400 
	`TW_DBG
(
TW_DBG_ERR
, "nullÖointer\n");

2401  -
EINVAL
;

2404 if((
mode
 < 
TW_CROSS_BUS_4D1_REALTIME
Ë|| (modê> 
TW_CROSS_BUS_UNREALTIME
)){

2405 
	`TW_DBG
(
TW_DBG_ERR
, "unsuµ‹àw‹k modê%d\n", 
mode
);

2406  -
EINVAL
;

2409 
	`TW_DBG
(
TW_DBG_INFO
, "upd©êvd bu†w‹k modê%d\n", 
mode
);

2410 
vd_¸oss_bus
->
mode
 = mode;

2412  
TW_OK
;

2413 
	}
}

2415 
	$tw5864_vd_¸oss_bus_ˇlcuœã_¸oss_bus_m≠_èbÀ
(
tw5864_vd_¸oss_bus_t
 *
vd_¸oss_bus
, 
vd_ch™_m≠_öfo_t
 *
ch™_m≠_öfo
)

2418 
VGROUP_S
 
vgroup
[
TW_MAX_GRP
];

2419 
chn_no
[
TW_MAX_VI
];

2420 
chn_˙t
 = 0;

2421 
f‹m©
[
TW_MAX_VI
];

2422 
‰©e
[
TW_MAX_VI
];

2423 
n‹m
, 
œ°_video_size
;

2424 
i
 = 0, 
j
 = 0, 
c⁄si°ícy
 = 
TW_TRUE
;

2425 
vd_ch™_m≠_öfo_t
 *
m≠_öfo
;

2426 
dvm_chù_t
 *
chù
;

2427 
chù_drivî_t
 *
drivî
;

2428 
tw_video_bus_t
 *
video_bus
;

2430 if(!
vd_¸oss_bus
)

2432 
	`TW_DBG
(
TW_DBG_ERR
, "nullÖointer\n");

2433  
TW_ERR
;

2436 
m≠_öfo
 = 
ch™_m≠_öfo
;

2437 
	`mem£t
(
vgroup
, 0x0, (
VGROUP_S
Ë* 
TW_MAX_GRP
);

2438 
	`mem£t
(
chn_no
, 0x0, ()*
TW_MAX_VI
);

2439 
	`mem£t
(
f‹m©
, 0x0, ()*
TW_MAX_VI
);

2440 
	`mem£t
(
‰©e
, 0x0, ()*
TW_MAX_VI
);

2442 
i
 = 0; i < 
TW_MAX_GRP
; i++)

2444 
vgroup
[
i
].
gΩ_id
 = i;

2446 
chù
 = 
	`to_gë_chù_wôh_chù_¸oss_bus
(
vd_¸oss_bus
);

2447 
drivî
 = 
chù
->
chù_drivî
;

2448 
video_bus
 = &
drivî
->video_bus;

2449 
n‹m
 = 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus);

2450 
chn_˙t
 = 0;

2451 
i
 = 0; i < 
TW5864_PHY_VD_CHAN_NUMBER
; i++, 
m≠_öfo
++)

2453 if((
m≠_öfo
->
phy_¶Ÿ_id
 !
TW5864_LOGIC_VD_INVALID
Ë&& (m≠_öfo->
íabÀ
 !0Ë&& (m≠_öfo->
Âs
 != 0)) {

2454 
chn_no
[
chn_˙t
] = 
m≠_öfo
->
phy_¶Ÿ_id
;

2455 
m≠_öfo
->
video_size
) {

2456 
TW_VIDEO_SIZE_D1
:

2457 
TW_VIDEO_SIZE_HALF_D1
:

2458 
TW_VIDEO_SIZE_CIF
:

2461 
TW_VIDEO_SIZE_QCIF
:

2462 
TW_VIDEO_SIZE_USER
:

2463 
m≠_öfo
->
video_size
 = 
TW_VIDEO_SIZE_CIF
;

2466 
f‹m©
[
chn_˙t
] = 
m≠_öfo
->
video_size
;

2467 
‰©e
[
chn_˙t
] = 
m≠_öfo
->
Âs
;

2468 
chn_˙t
++;

2472 if(
	`cb_˘æ_ˇlcuœã
(
chn_no
, 
f‹m©
, 
‰©e
, 
n‹m
, 
vgroup
, 
chn_˙t
, 1))

2474 
	`TW_DBG
(
TW_DBG_ERR
, "UnableÅo calculate mapÅable!\n");

2476  -
EINVAL
;

2479 
	`TW_DBG
(
TW_DBG_INFO
, "%8s %8s %8s %8s %8s %8s %8s\n", "phy", "logic",

2481 
m≠_öfo
 = 
ch™_m≠_öfo
;

2482 
i
 = 0; i < 
TW_MAX_GRP
; i++)

2484 
j
 = 0; j < 
TW_CHN_NO
; j++)

2486 
m≠_öfo
->
phy_¶Ÿ_id
 = 
vgroup
[
i
].
ö_£À˘
[
j
];

2487 
m≠_öfo
->
m≠_logic_¶Ÿ_id
 = 
i
 * 
TW_CHN_NO
 + 
j
;

2488 
m≠_öfo
->
video_size
 = 
vgroup
[
i
].
ö_fmt
[
j
];

2489 
m≠_öfo
->
Âs
 = 
vgroup
[
i
].
out_øã
[
j
];

2490 
m≠_öfo
->
logic_¶Ÿ_disˇrd_èbÀ
 = 
vgroup
[
i
].
ö_m≠
[
j
];

2491 
m≠_öfo
->
roundTabÀSåide
 = (
n‹m
 =
TW_VIDEO_STANDARD_PAL
) ?0x18:0x1d;

2492 
m≠_öfo
->
íabÀ
 = (m≠_öfo->
Âs
 == 0)?0:1;

2493 if(
m≠_öfo
->
íabÀ
) {

2494 if(
c⁄si°ícy
 =
TW_TRUE
 ) {

2495 if((
i
 =0Ë&& (
j
 == 0)) {

2496 
œ°_video_size
 = 
m≠_öfo
->
video_size
;

2498 if(
m≠_öfo
->
video_size
 !
œ°_video_size
) {

2499 
c⁄si°ícy
 = 
TW_FALSE
;

2503 
	`TW_DBG
(
TW_DBG_INFO
, "%8d %8d %8d %8d %8d %8d 0x%08x\n", 
m≠_öfo
->
phy_¶Ÿ_id
,

2504 
m≠_öfo
->
m≠_logic_¶Ÿ_id
, m≠_öfo->
video_size
, m≠_öfo->
Âs
,

2505 
m≠_öfo
->
roundTabÀSåide
, m≠_öfo->
íabÀ
, m≠_öfo->
logic_¶Ÿ_disˇrd_èbÀ
);

2506 
m≠_öfo
++;

2508 
vd_¸oss_bus
->
bus_mode
[
vgroup
[
i
].
gΩ_id
] = vgroup[i].
mode
;

2511 if(
c⁄si°ícy
 =
TW_FALSE
) {

2512 
chù
->
video_ícode_ˇp
->
ddr_m≠_mode
 = 
DDR_MAP_COMPRESS_DISABLE
;

2513 
	`TW_DBG
(
TW_DBG_INFO
, "change video_encode_work_modeÅo DDR_MAP_COMPRESS_DISABLE\n");

2515 
chù
->
video_ícode_ˇp
->
ddr_m≠_mode
 = 
DDR_MAP_COMPRESS_ENABLE
;

2516 
	`TW_DBG
(
TW_DBG_INFO
, "change video_encode_work_modeÅo DDR_MAP_COMPRESS_ENABLE\n");

2519  
TW_OK
;

2520 
	}
}

2523 
	$tw5864_vd_¸oss_bus_≠∂y
(
tw5864_vd_¸oss_bus_t
 *
bus
, 
dvm_chù_t
 *
chù
)

2525 
i
;

2526 
downßm∂e
 = 0;

2527 
vÆid
 = 0;

2528 
f‹m©
 = 0;

2529 
vÆ
 = 0;

2530 
timeout
 = 0;

2531 
bus_£À˘
[
TW_MAX_GRP
];

2532 
bus_m≠
[
TW_MAX_GRP
];

2533 
chù_drivî_t
 *
drivî
;

2534 
tw_video_bus_t
 *
video_bus
;

2535 
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
;

2536 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

2538 if(!
bus
 || !
chù
) {

2539 
	`TW_DBG
(
TW_DBG_ERR
, "NULLÖointer\n");

2540  
TW_ERR
;

2542 
	`TW_DBG
(
TW_DBG_INFO
, "update vd configureÅo hardware\n");

2543 
drivî
 = 
chù
->
chù_drivî
;

2544 
video_bus
 = &
drivî
->video_bus;

2545 
	`mem£t
(
bus_£À˘
, 0, (Ë* 
TW_MAX_GRP
);

2547 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
VD_CHANNEL_SWITCH
, 0x0000);

2548 
timeout
 = 100;

2549 
chù
->
io_›
->
	`chù_ªad32
(chù, 
VD_CHANNEL_SWITCH
Ë&& (--
timeout
)) {

2550 
	`mdñay
(1);

2552 
	`mem£t
(
bus_m≠
, 0, (bus_map));

2553 
i
 = 0; i < 
TW5864_CROSS_BUS_LOGIC_VD_CHAN_NUMBER
; i++){

2554 
phy_video_¶Ÿ
 = &
bus
->phy_video_¶Ÿ[
i
];

2555 
logic_video_¶Ÿ
 = 
phy_video_¶Ÿ
->
¸oss_bus_logic_video_¶Ÿ
;

2556 if(
logic_video_¶Ÿ
->
logicSlŸId
 >
TW5864_CROSS_BUS_LOGIC_VD_CHAN_NUMBER
) {

2557 
	`TW_DBG
(
TW_DBG_ERR
, "logic slotÉrror\n");

2558  
TW_ERR
;

2561 if(
logic_video_¶Ÿ
->
video_size
 !
TW_VIDEO_SIZE_D1
){

2563 
downßm∂e
 |1 << 
phy_video_¶Ÿ
->
phy_¶Ÿ_id
;

2566 
logic_video_¶Ÿ
->
video_size
)

2569 
TW_VIDEO_SIZE_HALF_D1
:

2570 
TW_VIDEO_SIZE_D1
:

2571 
vÆ
 = 0x00;

2573 
TW_VIDEO_SIZE_CIF
:

2574 
vÆ
 = 0x03;

2576 
TW_VIDEO_SIZE_QCIF
:

2577 
vÆ
 = 0x01;

2580 
f‹m©
 |
vÆ
 << (
phy_video_¶Ÿ
->
phy_¶Ÿ_id
 * 2);

2581 if(
logic_video_¶Ÿ
->
íabÀSlŸ
){

2582 
vÆid
 |1<<
logic_video_¶Ÿ
->
m≠PhySlŸId
;

2586 
bus_£À˘
[(
logic_video_¶Ÿ
->
logicSlŸId
 / 4)] |÷ogic_video_¶Ÿ->
m≠PhySlŸId
 << 16);

2587 
bus_£À˘
[(
logic_video_¶Ÿ
->
logicSlŸId
 / 4)] >>= 4;

2589 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
	`VD_CHANNEL_LMAP
(((
logic_video_¶Ÿ
->
logicSlŸId
 / 4Ë* 4Ë+ 
bus_m≠
[logic_video_¶Ÿ->logicSlŸId / 4]),logic_video_¶Ÿ->
disˇrdTabÀ
);

2590 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
	`VD_CHANNEL_HMAP
(((
logic_video_¶Ÿ
->
logicSlŸId
 / 4Ë* 4Ë+ 
bus_m≠
[logic_video_¶Ÿ->logicSlŸId / 4]),Üogic_video_¶Ÿ->
disˇrdTabÀ
>>16);

2591 
bus_m≠
[
logic_video_¶Ÿ
->
logicSlŸId
 / 4]++;

2594 
i
 = 0; i < 
TW_MAX_GRP
; i++){

2595 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
	`VD_BUS_MAP
(
i
), 
bus_£À˘
[i]);

2596 
	`c⁄fig_£nif_bus
(
bus
, 
i
, bus->
bus_mode
[i]);

2599 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
VD_CHANNEL_DOWNSAMPLE
, 
downßm∂e
);

2601 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
VD_CHANNEL_FORMAT0
, 
f‹m©
 & 0xffff);

2602 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
VD_CHANNEL_FORMAT1
, (
f‹m©
 >> 16) & 0xffff);

2605 if(
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË=
TW_VIDEO_STANDARD_PAL
){

2606 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
VD_BUS_MAX_LINE0
, 0x318);

2607 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
VD_BUS_MAX_LINE1
, 0x318);

2610 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
VD_BUS_MAX_LINE0
, 0x3bd);

2611 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
VD_BUS_MAX_LINE1
, 0x3bd);

2615 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
VD_BUS_MAX_CHANNEL
, 0x0000);

2616 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
VD_CHANNEL_INTERLACE
, 0x0000);

2619 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
VD_CHANNEL_SWITCH
, 
vÆid
);

2621  
TW_OK
;

2622 
	}
}

2624 
	$tw5864_vd_¸oss_bus_ª£t
(
tw5864_vd_¸oss_bus_t
 *
vd_¸oss_bus
)

2626 if(
vd_¸oss_bus
) {

2627 
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
;

2628 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

2629 
vd_ch™_m≠_öfo_t
 
ch™_m≠_èbÀ
[
TW5864_PHY_VD_CHAN_NUMBER
], *
ch™_m≠
;

2630 
dvm_chù_t
 *
chù
 = 
NULL
;

2631 
tw_video_bus_t
 *
video_bus
;

2632 
u32
 
loˇl_Âs
 = 0;

2633 
i
,
ªt
;

2635 
	`TW_DBG
(
TW_DBG_INFO
, "vd_bu†ª£àtÿmodê%d\n", 
vd_¸oss_bus
->
›
->
	`gë_w‹k_mode
(vd_cross_bus));

2636 
chù
 = 
	`to_gë_chù_wôh_chù_¸oss_bus
(
vd_¸oss_bus
);

2637 
video_bus
 = &
chù
->
chù_drivî
->video_bus;

2638 
ch™_m≠
 = 
ch™_m≠_èbÀ
;

2639 if(
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË=
TW_VIDEO_STANDARD_PAL
) {

2640 
loˇl_Âs
 = 25;

2642 
loˇl_Âs
 = 30;

2644 
vd_¸oss_bus
->
›
->
	`gë_w‹k_mode
(vd_cross_bus)){

2645 
TW_CROSS_BUS_4D1_REALTIME
:

2646 
i
=0; i<4; i++, 
ch™_m≠
++){

2647 
ch™_m≠
->
phy_¶Ÿ_id
 = 
i
;

2648 
ch™_m≠
->
Âs
 = 
loˇl_Âs
;

2649 
ch™_m≠
->
video_size
 = 
TW_VIDEO_SIZE_D1
;

2650 
ch™_m≠
->
íabÀ
 = 1;

2653 ;
i
<
TW5864_PHY_VD_CHAN_NUMBER
; i++, 
ch™_m≠
++){

2654 
ch™_m≠
->
phy_¶Ÿ_id
 = 
TW5864_LOGIC_VD_INVALID
;

2657 
TW_CROSS_BUS_8HÆfD1_REALTIME
:

2658 
i
=0; i<8; i++, 
ch™_m≠
++){

2659 
ch™_m≠
->
phy_¶Ÿ_id
 = 
i
;

2660 
ch™_m≠
->
Âs
 = 
loˇl_Âs
;

2661 
ch™_m≠
->
video_size
 = 
TW_VIDEO_SIZE_HALF_D1
;

2662 
ch™_m≠
->
íabÀ
 = 1;

2664 ; 
i
 < 
TW5864_PHY_VD_CHAN_NUMBER
; i++, 
ch™_m≠
++){

2665 
ch™_m≠
->
phy_¶Ÿ_id
 = 
TW5864_LOGIC_VD_INVALID
;

2668 
TW_CROSS_BUS_16CIF_REALTIME
:

2669 
i
=0; i<
TW5864_PHY_VD_CHAN_NUMBER
; i++, 
ch™_m≠
++){

2670 
ch™_m≠
->
phy_¶Ÿ_id
 = 
i
;

2671 
ch™_m≠
->
Âs
 = 
loˇl_Âs
;

2672 
ch™_m≠
->
video_size
 = 
TW_VIDEO_SIZE_CIF
;

2673 
ch™_m≠
->
íabÀ
 = 1;

2677 
TW_CROSS_BUS_UNREALTIME
:

2678 
i
=0; i<
TW5864_PHY_VD_CHAN_NUMBER
; i++, 
ch™_m≠
++){

2679 
logic_video_¶Ÿ
 = &
vd_¸oss_bus
->logic_video_¶Ÿ[
i
];

2680 
ch™_m≠
->
phy_¶Ÿ_id
 = 
logic_video_¶Ÿ
->
›
->
	`gë_m≠PhySlŸId
÷ogic_video_¶Ÿ, 
i
);

2681 
ch™_m≠
->
Âs
 = 
logic_video_¶Ÿ
->
›
->
	`gë_Âs
(logic_video_slot);

2682 
ch™_m≠
->
íabÀ
 = 
logic_video_¶Ÿ
->
›
->
	`gë_íabÀ¶Ÿ
(logic_video_slot);

2683 
ch™_m≠
->
video_size
 = 
logic_video_¶Ÿ
->
›
->
	`gë_video_size
(logic_video_slot);

2686 if(
vd_¸oss_bus
->
›
->
	`ˇlcuœã_¸oss_bus_m≠_èbÀ
(vd_¸oss_bus, 
ch™_m≠_èbÀ
)){

2687 
	`TW_DBG
(
TW_DBG_ERR
, "calculate mapÅable failed,Ölease checkÖarameter!\n");

2688  -
EINVAL
;

2690 
ch™_m≠
 = 
ch™_m≠_èbÀ
;

2691 
video_bus
->
›
->
	`nŸify_su•íd_logic_ch™
(video_bus);

2692 
i
 = 0; i < 
TW5864_CROSS_BUS_LOGIC_VD_CHAN_NUMBER
; i++, 
ch™_m≠
++) {

2693 if(
ch™_m≠
->
m≠_logic_¶Ÿ_id
 >
TW5864_CROSS_BUS_LOGIC_VD_CHAN_NUMBER
) {

2694 
	`TW_DBG
(
TW_DBG_ERR
, "logi¯ch™√»numbî %d ovîÊow\n", 
ch™_m≠
->
m≠_logic_¶Ÿ_id
);

2695  -
EINVAL
;

2697 
logic_video_¶Ÿ
 = &
vd_¸oss_bus
->logic_video_¶Ÿ[
ch™_m≠
->
m≠_logic_¶Ÿ_id
];

2698 
logic_video_¶Ÿ
->
›
->
	`£t_m≠PhySlŸId
÷ogic_video_¶Ÿ, 
ch™_m≠
->
phy_¶Ÿ_id
);

2699 
logic_video_¶Ÿ
->
›
->
	`£t_disˇrdTabÀ
÷ogic_video_¶Ÿ, 
ch™_m≠
->
logic_¶Ÿ_disˇrd_èbÀ
);

2700 
logic_video_¶Ÿ
->
›
->
	`£t_roundTabÀSåide
÷ogic_video_¶Ÿ, 
ch™_m≠
->
roundTabÀSåide
);

2701 
logic_video_¶Ÿ
->
›
->
	`£t_video_size
÷ogic_video_¶Ÿ, 
ch™_m≠
->
video_size
);

2702 
logic_video_¶Ÿ
->
›
->
	`£t_íabÀ¶Ÿ
÷ogic_video_¶Ÿ, 
ch™_m≠
->
íabÀ
);

2703 
logic_video_¶Ÿ
->
›
->
	`£t_Âs
÷ogic_video_¶Ÿ, 
ch™_m≠
->
Âs
);

2704 
	`©omic_£t
(&
logic_video_¶Ÿ
->
√edUpd©eFœg
, 1);

2705 
vd_¸oss_bus
->
›
->
	`gë_phy_video_¶Ÿ_by_phy_id
(vd_¸oss_bus, 
ch™_m≠
->
phy_¶Ÿ_id
, &
phy_video_¶Ÿ
);

2706 
phy_video_¶Ÿ
->
›
->
	`£t_video_size
’hy_video_¶Ÿ, 
logic_video_¶Ÿ
->›->
	`gë_video_size
(logic_video_slot));

2707 
phy_video_¶Ÿ
->
›
->
	`upd©e_m≠_logic_¶Ÿ
’hy_video_¶Ÿ, 
logic_video_¶Ÿ
->
logicSlŸId
,Üogic_video_slot);

2709 
vd_¸oss_bus
->
›
->
	`£t_chù_íd_¸oss_bus
(vd_¸oss_bus, 
chù
);

2710 
video_bus
->
›
->
	`nŸify_ªsume_logic_ch™
(video_bus);

2712 
ªt
 = 
video_bus
->
›
->
	`nŸify_logic_ch™_ch™ge
(video_bus);

2714  
ªt
;

2717  
TW_ERR
;

2718 
	}
}

2720 
tw5864_vd_¸oss_bus_›î©i⁄
 
	gtw5864_vd_¸oss_bus_›
 = {

2721 .
öô
 = 
tw5864_vd_¸oss_bus_öô
,

2722 .
	gª£t
 = 
tw5864_vd_¸oss_bus_ª£t
,

2723 .
	ggë_logic_video_¶Ÿ_by_logic_id
 = 
tw5864_vd_¸oss_bus_gë_logic_video_¶Ÿ_by_logic_id
,

2724 .
	ggë_logic_video_¶Ÿ_by_phy_id
 = 
tw5864_vd_¸oss_bus_gë_logic_video_¶Ÿ_by_phy_id
,

2725 .
	ggë_phy_video_¶Ÿ_by_logic_id
 = 
tw5864_vd_¸oss_bus_gë_phy_video_¶Ÿ_by_logic_id
,

2726 .
	ggë_phy_video_¶Ÿ_by_phy_id
 = 
tw5864_vd_¸oss_bus_gë_phy_video_¶Ÿ_by_phy_id
,

2727 .
	ggë_w‹k_mode
 = 
tw5864_vd_¸oss_bus_gë_w‹k_mode
,

2728 .
	gupd©e_w‹k_mode
 = 
tw5864_vd_¸oss_bus_upd©e_w‹k_mode
,

2730 .
	gˇlcuœã_¸oss_bus_m≠_èbÀ
 = 
tw5864_vd_¸oss_bus_ˇlcuœã_¸oss_bus_m≠_èbÀ
,

2731 .
	g£t_chù_íd_¸oss_bus
 = 
tw5864_vd_¸oss_bus_≠∂y
,

2735 
	$öô_tw5864_vd_¸oss_bus
(
tw5864_vd_¸oss_bus_t
 *
vd_¸oss_bus
, 
TW_CROSS_BUS_WORK_MODE
 
mode
, 
TW_VIDEO_STANDARD
 
video_°™d¨d
)

2737 if(
vd_¸oss_bus
 !
NULL
){

2738 
vd_¸oss_bus
->
›
 = &
tw5864_vd_¸oss_bus_›
;

2739  
vd_¸oss_bus
->
›
->
	`öô
(vd_¸oss_bus, 
mode
, 
video_°™d¨d
);

2742  
TW_ERR
;

2743 
	}
}

2745 
	$ªmove_tw5864_vd_¸oss_bus
(
tw5864_vd_¸oss_bus_t
 *
vd_¸oss_bus
)

2748 
	}
}

2750 
	$tw5864_vd_¶Ÿ_‹ig_buf_öfo_öô
(
tw_vd_‹ig_buf_öfo_t
 *
tw_vd_‹ig_buf
, 
phy_¶Ÿ_id
)

2752 
	`©omic_£t
(&
tw_vd_‹ig_buf
->
°›_check_ad
, 0);

2753 
	`•ö_lock_öô
(&
tw_vd_‹ig_buf
->
lock
);

2754 
tw_vd_‹ig_buf
->
phy_¶Ÿ_id
 =Öhy_slot_id;

2755 
tw_vd_‹ig_buf
->
fú°_°¨t_disˇrd_‰ame_numbî
 = 
FIRST_START_DISCARD_FRAME_NUMBER
;

2756 
tw_vd_‹ig_buf
->
vd_‹ig_ad_phy_±r
 = 0;

2757 
tw_vd_‹ig_buf
->
vd_upd©e_‹ig_ad_phy_±r
 =0;

2758 
tw_vd_‹ig_buf
->
vd_ícode_±r
 = 0;

2760 
	`öô_tw5864_ícode_time°amp
(&
tw_vd_‹ig_buf
->
vd_ícode_time°amp
);

2761 
tw_vd_‹ig_buf
->
vd_±r_check_cou¡
 = 0;

2762 
tw_vd_‹ig_buf
->
logic_ch™_ad_ªady_m≠_èbÀ
 = 0;

2763 
tw_vd_‹ig_buf
->
logic_ch™_ícode_ovî_m≠_èbÀ
 = 0;

2764 
	}
}

2766 
	$tw5864_vd_¶Ÿ_‹ig_buf_öfo_gë_vd_ad_phy_±r
(
tw_vd_‹ig_buf_öfo_t
 *
tw_vd_‹ig_buf
, 
dvm_chù_t
 *
chù
)

2768 
Êags
;

2769 
mask
=0x3;

2770 
shi·_numbî
, 
ªt
;

2771 
	`•ö_lock_úqßve
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

2772 if(
tw_vd_‹ig_buf
->
phy_¶Ÿ_id
 < 8){

2773 
tw_vd_‹ig_buf
->
vd_‹ig_ad_phy_±r
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
AD_ORIG_RAM_BASE
);

2774 
shi·_numbî
 = (
tw_vd_‹ig_buf
->
phy_¶Ÿ_id
<<1);

2776 
tw_vd_‹ig_buf
->
vd_‹ig_ad_phy_±r
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
AD_CHAN_8_15_ORIG_BASE
);

2777 
shi·_numbî
 = (
tw_vd_‹ig_buf
->
phy_¶Ÿ_id
-8)<<1;

2779 
mask
 <<
shi·_numbî
;

2780 
tw_vd_‹ig_buf
->
vd_‹ig_ad_phy_±r
 &
mask
;

2781 
tw_vd_‹ig_buf
->
vd_‹ig_ad_phy_±r
 >>
shi·_numbî
;

2782 
	`•ö_u∆ock_úqª°‹e
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

2783 
ªt
 = 
tw_vd_‹ig_buf
->
vd_‹ig_ad_phy_±r
;

2784  
ªt
;

2785 
	}
}

2787 
	$tw5864_vd_¶Ÿ_‹ig_buf_öfo_£t_vd_cuº_ícode_±r
(
tw_vd_‹ig_buf_öfo_t
 *
tw_vd_‹ig_buf
, 
dvm_chù_t
 *
chù
, 
tw_h264_logic_ícode_ch™_t
 *
logic_ícode_ch™
)

2789 if((
chù
!=
NULL
Ë&& (
logic_ícode_ch™
!=NULL)){

2790 
Êags
;

2791 
u32
 
d©a
;

2793 
	`•ö_lock_úqßve
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

2794 
d©a
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
CHANNEL_ID
);

2795 
d©a
 = (d©®& (~0xf)Ë| 
tw_vd_‹ig_buf
->
phy_¶Ÿ_id
;

2796 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
CHANNEL_ID
, 
d©a
);

2797 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DSP_CUR_RAM_BASE
, (
tw_vd_‹ig_buf
->
vd_ícode_±r
<<12));

2798 
	`•ö_u∆ock_úqª°‹e
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

2800 
	}
}

2802 
	$tw5864_vd_¶Ÿ_‹ig_buf_öfo_upd©e_vd_ícode_±r
(
tw_vd_‹ig_buf_öfo_t
 *
tw_vd_‹ig_buf
)

2804 
Êags
;

2805 
	`•ö_lock_úqßve
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

2806 
tw_vd_‹ig_buf
->
vd_ícode_±r
++;

2807 
tw_vd_‹ig_buf
->
vd_ícode_±r
 &= 3;

2808 
	`•ö_u∆ock_úqª°‹e
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

2809 
	}
}

2811 
	$tw5864_vd_¶Ÿ_‹ig_buf_öfo_£t_vd_upd©e_‹ig_buf_ªg
(
tw_vd_‹ig_buf_öfo_t
 *
tw_vd_‹ig_buf
, 
dvm_chù_t
 *
chù
)

2813 
mask
=0x3;

2814 
shi·_numbî
;

2815 
Êags
;

2816 
	`•ö_lock_úqßve
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

2817 if(
tw_vd_‹ig_buf
->
phy_¶Ÿ_id
 < 8){

2818 
tw_vd_‹ig_buf
->
vd_upd©e_‹ig_ad_phy_±r
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
TOTAL_CHAN_CUR_PTR
);

2819 
shi·_numbî
 = (
tw_vd_‹ig_buf
->
phy_¶Ÿ_id
<<1);

2821 
tw_vd_‹ig_buf
->
vd_upd©e_‹ig_ad_phy_±r
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
TOTAL_CHAN_8_15_CUR_PTR
);

2822 
shi·_numbî
 = (
tw_vd_‹ig_buf
->
phy_¶Ÿ_id
-8)<<1;

2824 
mask
 <<
shi·_numbî
;

2825 
tw_vd_‹ig_buf
->
vd_upd©e_‹ig_ad_phy_±r
 &~
mask
;

2826 
tw_vd_‹ig_buf
->
vd_upd©e_‹ig_ad_phy_±r
 |((—w_vd_‹ig_buf->
vd_ícode_±r
+3)&3)<<
shi·_numbî
);

2827 if(
tw_vd_‹ig_buf
->
phy_¶Ÿ_id
 < 8){

2828 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
TOTAL_CHAN_CUR_PTR
, 
tw_vd_‹ig_buf
->
vd_upd©e_‹ig_ad_phy_±r
);

2830 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
TOTAL_CHAN_8_15_CUR_PTR
, 
tw_vd_‹ig_buf
->
vd_upd©e_‹ig_ad_phy_±r
);

2832 
	`•ö_u∆ock_úqª°‹e
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

2833 
	}
}

2835 
	$tw5864_vd_¶Ÿ_‹ig_buf_öfo_vd_‹ig_buf_ªady
(
tw_vd_‹ig_buf_öfo_t
 *
tw_vd_‹ig_buf
, 
dvm_chù_t
 *
chù
, 
tw_h264_logic_ícode_ch™_t
 *
logic_ícode_ch™
)

2837 
ªt
 = 0;

2838 if((
chù
!=
NULL
Ë&& (
logic_ícode_ch™
!=NULL)){

2839 
Êags
;

2840 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
 = &
logic_ícode_ch™
->encode_control;

2841 
ícode_c⁄åﬁ
->
ad_check
++;

2842 
tw_vd_‹ig_buf
->
›
->
	`gë_vd_ad_phy_±r
—w_vd_‹ig_buf, 
chù
);

2843 if(
	`©omic_ªad
(&
tw_vd_‹ig_buf
->
°›_check_ad
) == 0){

2844 if(
tw_vd_‹ig_buf
->
vd_ícode_±r
 !tw_vd_‹ig_buf->
vd_‹ig_ad_phy_±r
){

2845 
dñè
 = 0;

2846 
dñè
 = (
tw_vd_‹ig_buf
->
vd_‹ig_ad_phy_±r
 + 4 -Åw_vd_‹ig_buf->
vd_ícode_±r
) & 3;

2847 if(
dñè
 == 1) {

2848 
ícode_c⁄åﬁ
->
ad_dñè1
++;

2849 }if(
dñè
 == 2) {

2850 
ícode_c⁄åﬁ
->
ad_dñè2
++;

2851 }if(
dñè
 == 3) {

2852 
ícode_c⁄åﬁ
->
ad_dñè3
++;

2854 
tw_vd_‹ig_buf
->
vd_±r_check_cou¡
 = 0;

2855 if(
tw_vd_‹ig_buf
->
fú°_°¨t_disˇrd_‰ame_numbî
 > 0){

2856 
tw_vd_‹ig_buf
->
fú°_°¨t_disˇrd_‰ame_numbî
--;

2857 
tw_vd_‹ig_buf
->
›
->
	`£t_vd_cuº_ícode_±r
—w_vd_‹ig_buf, 
chù
, 
logic_ícode_ch™
);

2858 
tw_vd_‹ig_buf
->
›
->
	`upd©e_vd_ícode_±r
(tw_vd_orig_buf);

2859 
tw_vd_‹ig_buf
->
›
->
	`£t_vd_upd©e_‹ig_buf_ªg
—w_vd_‹ig_buf, 
chù
);

2860 
	`¥ötk
("\n%d-%d: %x, %x\n", 
__LINE__
, 
logic_ícode_ch™
->
logic_ch™_id
, 
tw_vd_‹ig_buf
->
vd_ícode_±r
,Åw_vd_‹ig_buf->
vd_‹ig_ad_phy_±r
);

2862 
	`•ö_lock_úqßve
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

2863 
tw_vd_‹ig_buf
->
logic_ch™_ad_ªady_m≠_èbÀ
 = 
LOGIC_CHAN_NUMBER_MASK
;

2864 
tw_vd_‹ig_buf
->
logic_ch™_ad_ªady_m≠_èbÀ
 &~(1<<(
logic_ícode_ch™
->
logic_ch™_id
&
VIDEO_LOGIC_MASTER_OR_SUB_MASK
));

2865 
tw_vd_‹ig_buf
->
logic_ch™_ícode_ovî_m≠_èbÀ
 = 0;

2866 
tw_vd_‹ig_buf
->
›
->
	`upd©e_time°amp
—w_vd_‹ig_buf, 
chù
);

2867 
	`•ö_u∆ock_úqª°‹e
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

2868 
	`©omic_£t
(&
tw_vd_‹ig_buf
->
°›_check_ad
, 1);

2869 
ªt
 = 1;

2871 #ifde‡ 
OSD_MODULE


2872 #ifdef 
TESTING_TIMESTAMP


2873 
logic_ícode_ch™
->
ícode_osd_ígöe
.
›
->
	`¸óã_ª˘™gÀ
(&logic_ícode_ch™->ícode_osd_ígöe, &logic_ícode_ch™->ícode_osd_ígöe.
osd_ru¬ög_∑øm
, 
tw_vd_‹ig_buf
->›->
	`gë_time°amp
—w_vd_‹ig_buf),Åw_vd_‹ig_buf->
vd_ícode_±r
, 
ícode_c⁄åﬁ
->
i_vd_ª„ªn˚_±r
,Éncode_c⁄åﬁ->
i_Âs
,Éncode_c⁄åﬁ->
i_Âm
);

2875 
logic_ícode_ch™
->
ícode_osd_ígöe
.
›
->
	`¸óã_ª˘™gÀ
(&logic_ícode_ch™->ícode_osd_ígöe, &logic_ícode_ch™->ícode_osd_ígöe.
osd_ru¬ög_∑øm
);

2881 
tw_vd_‹ig_buf
->
vd_±r_check_cou¡
++;

2882 if(
tw_vd_‹ig_buf
->
vd_±r_check_cou¡
 >= 200){

2883 
tw_vd_‹ig_buf
->
vd_±r_check_cou¡
 = 0;

2889 
	`•ö_lock_úqßve
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

2890 if((
tw_vd_‹ig_buf
->
logic_ch™_ad_ªady_m≠_èbÀ
 & (1<<(
logic_ícode_ch™
->
logic_ch™_id
&
VIDEO_LOGIC_MASTER_OR_SUB_MASK
)))){

2891 
tw_vd_‹ig_buf
->
logic_ch™_ad_ªady_m≠_èbÀ
 &~(1<<(
logic_ícode_ch™
->
logic_ch™_id
&
VIDEO_LOGIC_MASTER_OR_SUB_MASK
));

2892 
ªt
 = 1;

2894 #ifde‡ 
OSD_MODULE


2895 #ifdef 
TESTING_TIMESTAMP


2896 
logic_ícode_ch™
->
ícode_osd_ígöe
.
›
->
	`¸óã_ª˘™gÀ
(&logic_ícode_ch™->ícode_osd_ígöe, &logic_ícode_ch™->ícode_osd_ígöe.
osd_ru¬ög_∑øm
, 
tw_vd_‹ig_buf
->›->
	`gë_time°amp
—w_vd_‹ig_buf),Åw_vd_‹ig_buf->
vd_ícode_±r
, 
ícode_c⁄åﬁ
->
i_vd_ª„ªn˚_±r
,Éncode_c⁄åﬁ->
i_Âs
,Éncode_c⁄åﬁ->
i_Âm
);

2898 
logic_ícode_ch™
->
ícode_osd_ígöe
.
›
->
	`¸óã_ª˘™gÀ
(&logic_ícode_ch™->ícode_osd_ígöe, &logic_ícode_ch™->ícode_osd_ígöe.
osd_ru¬ög_∑øm
);

2903 
	`•ö_u∆ock_úqª°‹e
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

2906  
ªt
;

2907 
	}
}

2909 
	$tw5864_vd_¶Ÿ_‹ig_buf_öfo_fú°_sync_‹ig_buf_öfo
(
tw_vd_‹ig_buf_öfo_t
 *
tw_vd_‹ig_buf
, 
dvm_chù_t
 *
chù
)

2911 if((
chù
!=
NULL
)){

2912 
tw_vd_‹ig_buf
->
fú°_°¨t_disˇrd_‰ame_numbî
 = 
FIRST_START_DISCARD_FRAME_NUMBER
;

2913 
tw_vd_‹ig_buf
->
vd_ícode_time°amp
.
›
->
	`ª£t
(&tw_vd_orig_buf->vd_encode_timestamp);

2914 
tw_vd_‹ig_buf
->
vd_ícode_±r
 =Åw_vd_‹ig_buf->
›
->
	`gë_vd_ad_phy_±r
—w_vd_‹ig_buf, 
chù
);

2915 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DSP_CUR_RAM_BASE
, (((
tw_vd_‹ig_buf
->
vd_ícode_±r
+3)&3)<<12));

2916 
tw_vd_‹ig_buf
->
›
->
	`£t_vd_upd©e_‹ig_buf_ªg
—w_vd_‹ig_buf, 
chù
);

2918 
	}
}

2920 
	$tw5864_vd_¶Ÿ_‹ig_buf_öfo_upd©e_time°amp
(
tw_vd_‹ig_buf_öfo_t
 *
tw_vd_‹ig_buf
, 
dvm_chù_t
 *
chù
)

2922 if((
chù
!=
NULL
)){

2923 
tw_time°amp_t
 *
vd_ícode_time°amp
 = &
tw_vd_‹ig_buf
->vd_encode_timestamp;

2924 
video_time°amp_ªg_off£t
;

2925 
video_time°amp_ªg_off£t
 = 
CHAN_VIDEO_TIMESTAMP_BASE
 + 0x10*
tw_vd_‹ig_buf
->
phy_¶Ÿ_id
 + (tw_vd_‹ig_buf->
vd_ícode_±r
<<2);

2926 
vd_ícode_time°amp
->
›
->
	`£t_time°amp
(vd_ícode_time°amp, 
chù
->
io_›
->
	`chù_ªad32
(chù, 
video_time°amp_ªg_off£t
), 
__FILE__
);

2928 
	}
}

2930 
u32
 
	$tw5864_vd_¶Ÿ_‹ig_buf_öfo_gë_time°amp
(
tw_vd_‹ig_buf_öfo_t
 *
tw_vd_‹ig_buf
)

2932 
tw_time°amp_t
 *
vd_ícode_time°amp
 = &
tw_vd_‹ig_buf
->vd_encode_timestamp;

2933  
vd_ícode_time°amp
->
›
->
	`gë_time°amp
(vd_encode_timestamp);

2934 
	}
}

2936 
	$tw5864_vd_¶Ÿ_‹ig_buf_öfo_so·w¨e_disˇrd_‰ame
(
tw_vd_‹ig_buf_öfo_t
 *
tw_vd_‹ig_buf
, 
dvm_chù_t
 *
chù
, 
tw_h264_logic_ícode_ch™_t
 *
logic_ícode_ch™
)

2938 if((
chù
!=
NULL
Ë&& (
logic_ícode_ch™
!=NULL)){

2939 
tw_h264_phy_video_¶Ÿ_t
 *
ma°î_¶Ÿ
;

2940 
mask
=0x3;

2941 
shi·_numbî
;

2942 
have_bìn_ícoded_ch™_numbî
, 
ícode_ovî_m≠_èbÀ
;

2943 
Êags
;

2944 
	`•ö_lock_úqßve
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

2945 
tw_vd_‹ig_buf
->
logic_ch™_ícode_ovî_m≠_èbÀ
 |(1<<(
logic_ícode_ch™
->
logic_ch™_id
&
VIDEO_LOGIC_MASTER_OR_SUB_MASK
));

2946 
tw_vd_‹ig_buf
->
logic_ch™_ícode_ovî_m≠_èbÀ
 &
LOGIC_CHAN_NUMBER_MASK
;

2947 
have_bìn_ícoded_ch™_numbî
 = 0;

2948 
ícode_ovî_m≠_èbÀ
 = 
tw_vd_‹ig_buf
->
logic_ch™_ícode_ovî_m≠_èbÀ
;

2949 
ícode_ovî_m≠_èbÀ
){

2950 if(
ícode_ovî_m≠_èbÀ
&1){

2951 
have_bìn_ícoded_ch™_numbî
++;

2953 
ícode_ovî_m≠_èbÀ
 >>= 1;

2955 
ma°î_¶Ÿ
 = 
logic_ícode_ch™
->master_slot;

2956 if(
have_bìn_ícoded_ch™_numbî
 =
ma°î_¶Ÿ
->
›íed_logic_ch™_èbÀ
.
›
->
	`gë_cuº_ªgi°î_node_numbî
(&master_slot->opened_logic_chan_table)){

2960 if(
tw_vd_‹ig_buf
->
phy_¶Ÿ_id
 < 8){

2961 
tw_vd_‹ig_buf
->
vd_upd©e_‹ig_ad_phy_±r
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
TOTAL_CHAN_CUR_PTR
);

2962 
shi·_numbî
 = (
tw_vd_‹ig_buf
->
phy_¶Ÿ_id
<<1);

2964 
tw_vd_‹ig_buf
->
vd_upd©e_‹ig_ad_phy_±r
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
TOTAL_CHAN_8_15_CUR_PTR
);

2965 
shi·_numbî
 = (
tw_vd_‹ig_buf
->
phy_¶Ÿ_id
-8)<<1;

2967 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DSP_CUR_RAM_BASE
, (((
tw_vd_‹ig_buf
->
vd_ícode_±r
+3)&3)<<12));

2968 
mask
 <<
shi·_numbî
;

2969 
tw_vd_‹ig_buf
->
vd_upd©e_‹ig_ad_phy_±r
 &~
mask
;

2970 
tw_vd_‹ig_buf
->
vd_upd©e_‹ig_ad_phy_±r
 |((—w_vd_‹ig_buf->
vd_ícode_±r
+3)&3)<<
shi·_numbî
);

2971 if(
tw_vd_‹ig_buf
->
phy_¶Ÿ_id
 < 8){

2972 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
TOTAL_CHAN_CUR_PTR
, 
tw_vd_‹ig_buf
->
vd_upd©e_‹ig_ad_phy_±r
);

2974 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
TOTAL_CHAN_8_15_CUR_PTR
, 
tw_vd_‹ig_buf
->
vd_upd©e_‹ig_ad_phy_±r
);

2976 
tw_vd_‹ig_buf
->
vd_±r_check_cou¡
 = 0;

2977 
tw_vd_‹ig_buf
->
logic_ch™_ad_ªady_m≠_èbÀ
 = 0;

2978 
tw_vd_‹ig_buf
->
logic_ch™_ícode_ovî_m≠_èbÀ
 = 0;

2979 
	`©omic_£t
(&
tw_vd_‹ig_buf
->
°›_check_ad
, 0);

2984 
	`•ö_u∆ock_úqª°‹e
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

2986 
	}
}

2988 
	$tw5864_vd_¶Ÿ_‹ig_buf_öfo_ícode_ídof¶i˚_nŸify
(
tw_vd_‹ig_buf_öfo_t
 *
tw_vd_‹ig_buf
, 
tw_h264_logic_ícode_ch™_t
 *
logic_ícode_ch™
)

2990 if((
logic_ícode_ch™
!=
NULL
)){

2991 
tw_h264_phy_video_¶Ÿ_t
 *
ma°î_¶Ÿ
;

2992 
have_bìn_ícoded_ch™_numbî
, 
ícode_ovî_m≠_èbÀ
, 
íåy_numbî_ö_ªgi°î_èbÀ
;

2993 
Êags
;

2994 
	`•ö_lock_úqßve
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

2995 
tw_vd_‹ig_buf
->
logic_ch™_ícode_ovî_m≠_èbÀ
 |(1<<(
logic_ícode_ch™
->
logic_ch™_id
&
VIDEO_LOGIC_MASTER_OR_SUB_MASK
));

2996 
tw_vd_‹ig_buf
->
logic_ch™_ícode_ovî_m≠_èbÀ
 &
LOGIC_CHAN_NUMBER_MASK
;

2997 
have_bìn_ícoded_ch™_numbî
 = 0;

2998 
ícode_ovî_m≠_èbÀ
 = 
tw_vd_‹ig_buf
->
logic_ch™_ícode_ovî_m≠_èbÀ
;

2999 
ícode_ovî_m≠_èbÀ
){

3000 if(
ícode_ovî_m≠_èbÀ
&1){

3001 
have_bìn_ícoded_ch™_numbî
++;

3003 
ícode_ovî_m≠_èbÀ
 >>= 1;

3005 
ma°î_¶Ÿ
 = 
logic_ícode_ch™
->master_slot;

3006 
íåy_numbî_ö_ªgi°î_èbÀ
 = 
ma°î_¶Ÿ
->
›íed_logic_ch™_èbÀ
.
›
->
	`gë_cuº_ªgi°î_node_numbî
(&master_slot->opened_logic_chan_table);

3007 if(
have_bìn_ícoded_ch™_numbî
 =
íåy_numbî_ö_ªgi°î_èbÀ
){

3008 
tw_vd_‹ig_buf
->
vd_ícode_±r
++;

3009 
tw_vd_‹ig_buf
->
vd_ícode_±r
 &= 3;

3011 
tw_vd_‹ig_buf
->
vd_±r_check_cou¡
 = 0;

3012 
tw_vd_‹ig_buf
->
logic_ch™_ad_ªady_m≠_èbÀ
 = 0;

3013 
tw_vd_‹ig_buf
->
logic_ch™_ícode_ovî_m≠_èbÀ
 = 0;

3014 
	`©omic_£t
(&
tw_vd_‹ig_buf
->
°›_check_ad
, 0);

3016 
	`•ö_u∆ock_úqª°‹e
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

3018 
	}
}

3020 
	$tw5864_vd_¶Ÿ_‹ig_buf_öfo_ícode_uƒegi°î_nŸify
(
tw_vd_‹ig_buf_öfo_t
 *
tw_vd_‹ig_buf
, 
tw_h264_logic_ícode_ch™_t
 *
logic_ícode_ch™
)

3022 if((
logic_ícode_ch™
!=
NULL
)){

3023 
tw_h264_phy_video_¶Ÿ_t
 *
ma°î_¶Ÿ
;

3024 
have_bìn_ícoded_ch™_numbî
, 
ícode_ovî_m≠_èbÀ
, 
íåy_numbî_ö_ªgi°î_èbÀ
;

3025 
Êags
;

3026 
	`•ö_lock_úqßve
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

3027 
tw_vd_‹ig_buf
->
logic_ch™_ícode_ovî_m≠_èbÀ
 &~(1<<(
logic_ícode_ch™
->
logic_ch™_id
&
VIDEO_LOGIC_MASTER_OR_SUB_MASK
));

3028 
tw_vd_‹ig_buf
->
logic_ch™_ícode_ovî_m≠_èbÀ
 &
LOGIC_CHAN_NUMBER_MASK
;

3029 
have_bìn_ícoded_ch™_numbî
 = 0;

3030 
ícode_ovî_m≠_èbÀ
 = 
tw_vd_‹ig_buf
->
logic_ch™_ícode_ovî_m≠_èbÀ
;

3031 
ícode_ovî_m≠_èbÀ
){

3032 if(
ícode_ovî_m≠_èbÀ
&1){

3033 
have_bìn_ícoded_ch™_numbî
++;

3035 
ícode_ovî_m≠_èbÀ
 >>= 1;

3037 
ma°î_¶Ÿ
 = 
logic_ícode_ch™
->master_slot;

3038 
íåy_numbî_ö_ªgi°î_èbÀ
 = 
ma°î_¶Ÿ
->
›íed_logic_ch™_èbÀ
.
›
->
	`gë_cuº_ªgi°î_node_numbî
(&master_slot->opened_logic_chan_table);

3039 if(
have_bìn_ícoded_ch™_numbî
 =
íåy_numbî_ö_ªgi°î_èbÀ
){

3040 
tw_vd_‹ig_buf
->
vd_ícode_±r
++;

3041 
tw_vd_‹ig_buf
->
vd_ícode_±r
 &= 3;

3043 
tw_vd_‹ig_buf
->
vd_±r_check_cou¡
 = 0;

3044 
tw_vd_‹ig_buf
->
logic_ch™_ad_ªady_m≠_èbÀ
 = 0;

3045 
tw_vd_‹ig_buf
->
logic_ch™_ícode_ovî_m≠_èbÀ
 = 0;

3046 
	`©omic_£t
(&
tw_vd_‹ig_buf
->
°›_check_ad
, 0);

3048 
	`•ö_u∆ock_úqª°‹e
(&
tw_vd_‹ig_buf
->
lock
, 
Êags
);

3050 
	}
}

3052 
tw_vd_‹ig_buf_öfo_›î©i⁄
 
	gtw5864_vd_¶Ÿ_‹ig_buf_öfo_›
 = {

3053 .
öô
 = 
tw5864_vd_¶Ÿ_‹ig_buf_öfo_öô
,

3054 .
	gfú°_sync_‹ig_buf_öfo
 = 
tw5864_vd_¶Ÿ_‹ig_buf_öfo_fú°_sync_‹ig_buf_öfo
,

3055 .
	gvd_‹ig_buf_ªady
 = 
tw5864_vd_¶Ÿ_‹ig_buf_öfo_vd_‹ig_buf_ªady
,

3056 .
	ggë_vd_ad_phy_±r
 = 
tw5864_vd_¶Ÿ_‹ig_buf_öfo_gë_vd_ad_phy_±r
,

3057 .
	g£t_vd_upd©e_‹ig_buf_ªg
 = 
tw5864_vd_¶Ÿ_‹ig_buf_öfo_£t_vd_upd©e_‹ig_buf_ªg
,

3058 .
	g£t_vd_cuº_ícode_±r
 = 
tw5864_vd_¶Ÿ_‹ig_buf_öfo_£t_vd_cuº_ícode_±r
,

3059 .
	gupd©e_vd_ícode_±r
 = 
tw5864_vd_¶Ÿ_‹ig_buf_öfo_upd©e_vd_ícode_±r
,

3060 .
	gupd©e_time°amp
 = 
tw5864_vd_¶Ÿ_‹ig_buf_öfo_upd©e_time°amp
,

3061 .
	ggë_time°amp
 = 
tw5864_vd_¶Ÿ_‹ig_buf_öfo_gë_time°amp
,

3062 .
	gso·w¨e_disˇrd_‰ame
 = 
tw5864_vd_¶Ÿ_‹ig_buf_öfo_so·w¨e_disˇrd_‰ame
,

3063 .
	gícode_ídof¶i˚_nŸify
 = 
tw5864_vd_¶Ÿ_‹ig_buf_öfo_ícode_ídof¶i˚_nŸify
,

3064 .
	gícode_uƒegi°î_nŸify
 = 
tw5864_vd_¶Ÿ_‹ig_buf_öfo_ícode_uƒegi°î_nŸify
,

3067 
	$öô_tw5864_vd_¶Ÿ_‹ig_buf_öfo
(
tw_vd_‹ig_buf_öfo_t
 *
tw_vd_‹ig_buf
, 
phy_¶Ÿ_id
)

3069 if(
tw_vd_‹ig_buf
 !
NULL
){

3070 
tw_vd_‹ig_buf
->
›
 = &
tw5864_vd_¶Ÿ_‹ig_buf_öfo_›
;

3071 
tw_vd_‹ig_buf
->
›
->
	`öô
—w_vd_‹ig_buf, 
phy_¶Ÿ_id
);

3073 
	}
}

3075 
	$tw5864_h264_logic_ícode_ch™_m⁄ô‹
(
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
, 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
)

3077 
tw_video_‰ame_tcb_queue_t
 *
ícode_‰ame_queue
;

3078 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

3079 
ed_tcb_t
 *
›íed_logic_ch™_ed
;

3080 
logic_ch™_id
;

3081 
tw_ed_fsm_t
 *
ed_fsm
;

3082 
tw_h264_ícode_dñè_t
 *
dñè
;

3084 #ifde‡
USER_FILE_IO_REQ


3087 
ícode_‰ame_queue
 = &
h264_logic_ícode_ch™
->encode_frame_queue;

3088 
ícode_c⁄åﬁ
 = &
h264_logic_ícode_ch™
->encode_control;

3089 
dñè
 = &
ícode_c⁄åﬁ
->
ícode_dñè
;

3090 
›íed_logic_ch™_ed
 = &
h264_logic_ícode_ch™
->opened_logic_chan_ed;

3091 
logic_ch™_id
 = 
h264_logic_ícode_ch™
->logic_chan_id;

3092 
ed_fsm
 = &
›íed_logic_ch™_ed
->ed_fsm;

3093 
ed_fsm
->
›
->
	`gë_cuº_°©e
(ed_fsm)){

3094 
TW_ED_IDLE
:

3095 if(
phy_video_¶Ÿ
->
›
->
	`¶Ÿ_ad_is_ªady
’hy_video_¶Ÿ, 
h264_logic_ícode_ch™
->
chù
, h264_logic_encode_chan)){

3096 
ícode_c⁄åﬁ
->
›
->
	`upd©e_ad_ªady
(encode_control);

3098 if(
ícode_c⁄åﬁ
->
›
->
	`gë_¶i˚_hód_™d_ad_°©us
(encode_control)){

3099 
	`drivî_gí_dñivî_evít
(
›íed_logic_ch™_ed
, 1);

3102 
TW_ED_SUSPEND
:

3103 if(
phy_video_¶Ÿ
->
›
->
	`¶Ÿ_ad_is_ªady
’hy_video_¶Ÿ, 
h264_logic_ícode_ch™
->
chù
, h264_logic_encode_chan)){

3104 
ícode_c⁄åﬁ
->
›
->
	`upd©e_ad_ªady
(encode_control);

3106 if(
ícode_c⁄åﬁ
->
›
->
	`gë_ad_°©us
(encode_control)){

3107 
phy_video_¶Ÿ
->
›
->
	`¶Ÿ_so·w¨e_disˇrd_‰ame
’hy_video_¶Ÿ, 
h264_logic_ícode_ch™
->
chù
, h264_logic_encode_chan);

3111 
TW_ED_UNREGISTER
:

3112 
TW_ED_CLOSED
:

3113 
TW_ED_STANDBY
:

3114 
TW_ED_RUNNING
:

3115 
TW_ED_TRANSFERING
:

3118 
ícode_c⁄åﬁ
->
i_°©i°ic_möuãr_cou¡î
++;

3119 
ícode_c⁄åﬁ
->
i_åiggî_sync_cou¡î
++;

3120 if(
ícode_c⁄åﬁ
->
i_åiggî_sync_cou¡î
 > 
TIMER_200MS
){

3121 
ícode_c⁄åﬁ
->
i_åiggî_sync_cou¡î
 = 0;

3122 if(
	`©omic_ªad
(&
h264_logic_ícode_ch™
->
have_dñivî_sync_Êag
) == 0){

3123 
	`ícode_ch™_gí_ªq_msg
(
h264_logic_ícode_ch™
, 
REQ_AV_SYNC
, 
NONBLOCK_OP
);

3124 
	`©omic_£t
(&
h264_logic_ícode_ch™
->
have_dñivî_sync_Êag
, 1);

3127 if(
ícode_c⁄åﬁ
->
i_°©i°ic_möuãr_cou¡î
 >(
TIMER_1_MINUTE
)){

3128 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
 = &
h264_logic_ícode_ch™
->
chù
->chip_dpram_controller;

3129 
ddr_video_bô°ªam_ªsour˚_m™age_t
 *
video_bô°ªam_ªsour˚
 = &
chù_d¥am_c⁄åﬁÀr
->video_bitstream_resource;

3130 
u32
 
£c
;

3131 
ícode_c⁄åﬁ
->
œ°_jiffõs
 = 
jiffõs
 -Éncode_control->last_jiffies;

3132 
£c
 = 
	`jiffõs_to_m£cs
(
ícode_c⁄åﬁ
->
œ°_jiffõs
) / 1000;

3133 
£c
 = 
ícode_c⁄åﬁ
->
i_Âm
 / sec;

3134 
ícode_c⁄åﬁ
->
i_cuº_Âs
 =Éncode_c⁄åﬁ->
i_Âm
;

3136 
	`TW_DBG
(
TW_DBG_INFO
, "ch™_%d_%d: fpm=%d, %dms, %dÂs\n", 
phy_video_¶Ÿ
->
phy_¶Ÿ_id
,

3137 
logic_ch™_id
, 
ícode_c⁄åﬁ
->
i_Âm
,

3138 
	`jiffõs_to_m£cs
(
ícode_c⁄åﬁ
->
œ°_jiffõs
), 
£c
);

3139 
	`TW_DBG
(
TW_DBG_INFO
, "%d, (%d, %d, %d, %d, %d), (%d, %d, %x), %d\n", 
__LINE__
, 
ícode_c⁄åﬁ
->
ad_check
,Éncode_c⁄åﬁ->
ad_dñè1
,

3140 
ícode_c⁄åﬁ
->
ad_dñè2
,Éncode_c⁄åﬁ->
ad_dñè3
,Éncode_c⁄åﬁ->
ad_ªady
,

3141 
ed_fsm
->
›
->
	`gë_cuº_°©e
(ed_fsm),

3142 
ed_fsm
->
›
->
	`gë_œ°_°©e
(ed_fsm),

3143 *((*)&
ed_fsm
->
å™s„r_≥ndög
),

3144 
video_bô°ªam_ªsour˚
->
›
->
	`gë_ˇn_u£_ªsour˚_numbî
(video_bitstream_resource));

3146 
dñè
->
max_dñè
 = 0;

3147 
dñè
->
mö_dñè
 = 0;

3148 
ícode_c⁄åﬁ
->
i_Âs
 = 
£c
;

3149 
ícode_c⁄åﬁ
->
ad_check
 = 0;

3150 
ícode_c⁄åﬁ
->
ad_dñè1
 = 0;

3151 
ícode_c⁄åﬁ
->
ad_dñè2
 = 0;

3152 
ícode_c⁄åﬁ
->
ad_dñè3
 = 0;

3153 
ícode_c⁄åﬁ
->
ad_ªady
 = 0;

3154 
ícode_c⁄åﬁ
->
i_Âm
 = 0;

3155 
ícode_c⁄åﬁ
->
i_°©i°ic_möuãr_cou¡î
 = 0;

3156 
ícode_c⁄åﬁ
->
œ°_jiffõs
 = 
jiffõs
;

3158 
	}
}

3160 
	$tw_ad≠tive_deöãæa˚_c⁄åﬁ_öô
(
tw_ad≠tive_deöãæa˚_c⁄åﬁ
 *
deöãæa˚_c⁄åﬁ
)

3162 if(
deöãæa˚_c⁄åﬁ
) {

3163 
deöãæa˚_c⁄åﬁ
->
œ°_Êags
 = 
TW_TRUE
;

3164 
deöãæa˚_c⁄åﬁ
->
cuº_Êags
 = 
TW_TRUE
;

3165 
deöãæa˚_c⁄åﬁ
->
íabÀ
 = 
TW_TRUE
;

3166 
deöãæa˚_c⁄åﬁ
->
£nsôive
 = 0;

3168  
TW_OK
;

3171  
TW_ERR
;

3172 
	}
}

3174 
	$tw_ad≠tive_deöãæa˚_c⁄åﬁ_ª£t
(
tw_ad≠tive_deöãæa˚_c⁄åﬁ
 *
deöãæa˚_c⁄åﬁ
)

3176 if(
deöãæa˚_c⁄åﬁ
) {

3177 
deöãæa˚_c⁄åﬁ
->
œ°_Êags
 = 
TW_TRUE
;

3178 
deöãæa˚_c⁄åﬁ
->
cuº_Êags
 = 
TW_TRUE
;

3179 
deöãæa˚_c⁄åﬁ
->
íabÀ
 = 
TW_TRUE
;

3180 
deöãæa˚_c⁄åﬁ
->
£nsôive
 = 0;

3182  
TW_OK
;

3185  
TW_ERR
;

3186 
	}
}

3187 
	$tw_ad≠tive_deöãæa˚_c⁄åﬁ_adju°_£nsôive
(
tw_ad≠tive_deöãæa˚_c⁄åﬁ
 *
deöãæa˚_c⁄åﬁ
, 
u32
 
£nsôive
)

3189 if(
deöãæa˚_c⁄åﬁ
) {

3190 
deöãæa˚_c⁄åﬁ
->
£nsôive
 = sensitive;

3192  
TW_OK
;

3195  
TW_ERR
;

3196 
	}
}

3198 
	$tw_ad≠tive_deöãæa˚_c⁄åﬁ_upd©e
(
tw_ad≠tive_deöãæa˚_c⁄åﬁ
 *
deöãæa˚_c⁄åﬁ
)

3200 if(
deöãæa˚_c⁄åﬁ
) {

3201 
deöãæa˚_c⁄åﬁ
->
œ°_Êags
 = deöãæa˚_c⁄åﬁ->
cuº_Êags
;

3203  
TW_OK
;

3206  
TW_ERR
;

3207 
	}
}

3209 
	$tw_ad≠tive_deöãæa˚_c⁄åﬁ_dëe˘
(
tw_ad≠tive_deöãæa˚_c⁄åﬁ
 *
deöãæa˚_c⁄åﬁ
, 
dvm_chù_t
 *
chù
, 
u32
 
phy_¶Ÿ_id
)

3211 
ªt
 = 
TW_ERR
;

3213 if(
deöãæa˚_c⁄åﬁ
 && 
chù
 && (
phy_¶Ÿ_id
 < 
TW5864_PHY_VD_CHAN_NUMBER
)) {

3214 
Êags
;

3216 
	`loˇl_úq_ßve
(
Êags
);

3217 
	`mpb_wrôe
(
chù
, 0x382, 
phy_¶Ÿ_id
);

3218 if(
	`mpb_ªad
(
chù
, 0x3b8)){

3219 
deöãæa˚_c⁄åﬁ
->
cuº_Êags
 = 
TW_TRUE
;

3220 
deöãæa˚_c⁄åﬁ
->
íabÀ
 = 
TW_TRUE
;

3222 
deöãæa˚_c⁄åﬁ
->
cuº_Êags
 = 
TW_FALSE
;

3223 
deöãæa˚_c⁄åﬁ
->
íabÀ
 = 
TW_FALSE
;

3225 
	`loˇl_úq_ª°‹e
(
Êags
);

3226 
ªt
 = 
TW_OK
;

3228 
	`TW_DBG
(
TW_DBG_ERR
, "invalidÖarameter\n");

3231  
ªt
;

3232 
	}
}

3233 
	$tw_ad≠tive_deöãæa˚_c⁄åﬁ_isch™ge
(
tw_ad≠tive_deöãæa˚_c⁄åﬁ
 *
deöãæa˚_c⁄åﬁ
)

3235 if(
deöãæa˚_c⁄åﬁ
) {

3236 if(
deöãæa˚_c⁄åﬁ
->
œ°_Êags
 !deöãæa˚_c⁄åﬁ->
cuº_Êags
){

3238  
TW_TRUE
;

3240  
TW_FALSE
;

3244  
TW_ERR
;

3245 
	}
}

3247 
tw_ad≠tive_deöãæa˚_c⁄åﬁ_›î©i⁄
 
	gtw_ad≠tive_deöãæa˚_c⁄åﬁ_›î©i⁄_›
 = {

3248 .
öô
 = 
tw_ad≠tive_deöãæa˚_c⁄åﬁ_öô
,

3249 .
	gª£t
 = 
tw_ad≠tive_deöãæa˚_c⁄åﬁ_ª£t
,

3251 .
	gadju°_£nsôive
 = 
tw_ad≠tive_deöãæa˚_c⁄åﬁ_adju°_£nsôive
,

3252 .
	gupd©e
 = 
tw_ad≠tive_deöãæa˚_c⁄åﬁ_upd©e
,

3253 .
	gdëe˘
 = 
tw_ad≠tive_deöãæa˚_c⁄åﬁ_dëe˘
,

3254 .
	gisch™ge
 = 
tw_ad≠tive_deöãæa˚_c⁄åﬁ_isch™ge
,

3257 
	$tw5864_h264_phy_video_¶Ÿ_m⁄ô‹
(*
c⁄ãxt
)

3259 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
 = (tw_h264_phy_video_¶Ÿ_t*)
c⁄ãxt
;

3260 if(
phy_video_¶Ÿ
 !
NULL
){

3261 
tw_h264_logic_ícode_ch™_t
 *
ma°î_h264_logic_ícode_ch™
, *
sub_h264_logic_ícode_ch™
;

3262 
logic_ch™_id
;

3263 
u32
 
Êags
;

3264 
tw_ad≠tive_deöãæa˚_c⁄åﬁ
 *
deöãæa˚
;

3266 
deöãæa˚
 = &
phy_video_¶Ÿ
->deinterlace;

3267 
logic_ch™_id
 = 
phy_video_¶Ÿ
->
phy_¶Ÿ_id
;

3268 
logic_ch™_id
 <<
VIDEO_MASTER_OR_SUB_FLAG_LEFT_SHIFT_NUMBER
;

3269 
logic_ch™_id
 |
TW_MASTER_BITSTREAM
;

3270 
	`föd_ªgi°î_›íed_logic_ícode_ch™_ö_ma°î_¶Ÿ
(
phy_video_¶Ÿ
, 
logic_ch™_id
, &
ma°î_h264_logic_ícode_ch™
);

3271 if(
ma°î_h264_logic_ícode_ch™
 !
NULL
){

3272 
	`tw5864_h264_logic_ícode_ch™_m⁄ô‹
(
ma°î_h264_logic_ícode_ch™
, 
phy_video_¶Ÿ
);

3273 
Êags
 = 
deöãæa˚
->
›
->
	`dëe˘
(deöãæa˚, 
ma°î_h264_logic_ícode_ch™
->
chù
, 
phy_video_¶Ÿ
->
phy_¶Ÿ_id
);

3274 if(
deöãæa˚
->
›
->
	`isch™ge
(deinterlace)){

3275 
tw_h264_ícode_„©uª_t
 *
pc⁄fig
;

3276 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
 = &
ma°î_h264_logic_ícode_ch™
->encode_property;

3278 
pc⁄fig
 = &
ícode_¥›îty
->
ícode_„©uª
;

3279 
pc⁄fig
->
„©uª_∑øm
.
ch™ge_mask_Êag
 = 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_DEINTERLACE_MASK
;

3280 if(
deöãæa˚
->
íabÀ
 =
TW_TRUE
) {

3281 
pc⁄fig
->
›
->
	`upd©e_deöãæa˚
’c⁄fig, 
TW_H264_FEATURE_ON
);

3283 
pc⁄fig
->
›
->
	`upd©e_deöãæa˚
’c⁄fig, 
TW_H264_FEATURE_OFF
);

3288 
logic_ch™_id
 = 
phy_video_¶Ÿ
->
phy_¶Ÿ_id
;

3289 
logic_ch™_id
 <<
VIDEO_MASTER_OR_SUB_FLAG_LEFT_SHIFT_NUMBER
;

3290 
logic_ch™_id
 |
TW_SUB_BITSTREAM
;

3291 
	`föd_ªgi°î_›íed_logic_ícode_ch™_ö_ma°î_¶Ÿ
(
phy_video_¶Ÿ
, 
logic_ch™_id
, &
sub_h264_logic_ícode_ch™
);

3292 if(
sub_h264_logic_ícode_ch™
 !
NULL
){

3293 
	`tw5864_h264_logic_ícode_ch™_m⁄ô‹
(
sub_h264_logic_ícode_ch™
, 
phy_video_¶Ÿ
);

3294 if(
deöãæa˚
->
›
->
	`isch™ge
(deinterlace)){

3295 
tw_h264_ícode_„©uª_t
 *
pc⁄fig
;

3296 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
 = &
sub_h264_logic_ícode_ch™
->encode_property;

3298 
pc⁄fig
 = &
ícode_¥›îty
->
ícode_„©uª
;

3299 
pc⁄fig
->
„©uª_∑øm
.
ch™ge_mask_Êag
 = 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_DEINTERLACE_MASK
;

3300 if(
deöãæa˚
->
íabÀ
 =
TW_TRUE
) {

3301 
pc⁄fig
->
›
->
	`upd©e_deöãæa˚
’c⁄fig, 
TW_H264_FEATURE_ON
);

3303 
pc⁄fig
->
›
->
	`upd©e_deöãæa˚
’c⁄fig, 
TW_H264_FEATURE_OFF
);

3308 
deöãæa˚
->
›
->
	`upd©e
(deinterlace);

3311 
	}
}

3313 
	$°¨t_ícode_ch™_m⁄ô‹_hook
(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
)

3315 if(
phy_video_¶Ÿ
 !
NULL
){

3316 
phy_video_¶Ÿ
->
ícode_ch™_m⁄ô‹_timeid
 = 
	`AddF‹FúeTimîJob
(
ENCODE_CHAN_MONITOR_COUNTER
, 
tw5864_h264_phy_video_¶Ÿ_m⁄ô‹
,Öhy_video_slot);

3317 if(
phy_video_¶Ÿ
->
ícode_ch™_m⁄ô‹_timeid
 =
ADDJOBERROR
){

3318 
	`¥ötk
("%s.%d:áddÅimî hookÉº\n", 
__FUNCTION__
, 
__LINE__
);

3320 
	`¥ötk
("%s.%d:áddÅimî hook okÖhy_video_¶Ÿ = %d\n", 
__FUNCTION__
, 
__LINE__
, 
phy_video_¶Ÿ
->
phy_¶Ÿ_id
);

3323 
	}
}

3325 
	$dñëe_ícode_ch™_m⁄ô‹_hook
(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
)

3327 if(
phy_video_¶Ÿ
 !
NULL
){

3328 if(
phy_video_¶Ÿ
->
ícode_ch™_m⁄ô‹_timeid
 !
INVALIDTIMERID
){

3329 
	`DñëeF‹FúeTimîJob
(
phy_video_¶Ÿ
->
ícode_ch™_m⁄ô‹_timeid
);

3330 
phy_video_¶Ÿ
->
ícode_ch™_m⁄ô‹_timeid
 = 
INVALIDTIMERID
;

3331 
	`¥ötk
("%s.%d: dñëêtimî hook okÖhy_video_¶Ÿ = %d\n", 
__FUNCTION__
, 
__LINE__
, 
phy_video_¶Ÿ
->
phy_¶Ÿ_id
);

3334 
	}
}

3336 
	$tw5864_h264_phy_video_¶Ÿ_öô
(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
phy_¶Ÿ_id
, 
TW_VIDEO_SIZE
 
video_size
)

3339 if(
phy_video_¶Ÿ
 !
NULL
){

3340 
tw_ad≠tive_deöãæa˚_c⁄åﬁ
 *
deöãæa˚
;

3342 
	`©omic_£t
(&
phy_video_¶Ÿ
->
fú°_°¨t_Êag
, 1);

3343 
phy_video_¶Ÿ
->
phy_¶Ÿ_id
 =Öhy_slot_id;

3344 
phy_video_¶Ÿ
->
phy_bus_id
 = 
phy_¶Ÿ_id
 / 4;

3345 
phy_video_¶Ÿ
->
m≠_logic_id
 = 
TW5864_LOGIC_VD_INVALID
;

3346 
phy_video_¶Ÿ
->
¸oss_bus_logic_video_¶Ÿ
 = 
NULL
;

3347 
phy_video_¶Ÿ
->
video_size
 = video_size;

3348 
	`öô_tw5864_vd_¶Ÿ_‹ig_buf_öfo
(&
phy_video_¶Ÿ
->
vd_‹ig_buf
, 
phy_¶Ÿ_id
);

3349 
	`öô_ªgi°î_èbÀ_node
(&
phy_video_¶Ÿ
->
logic_ch™_èbÀ
);

3350 
	`öô_ªgi°î_èbÀ_node
(&
phy_video_¶Ÿ
->
›íed_logic_ch™_èbÀ
);

3351 
phy_video_¶Ÿ
->
ícode_ch™_m⁄ô‹_timeid
 = 
INVALIDTIMERID
;

3352 
phy_video_¶Ÿ
->
°¨t_ícode_ch™_m⁄ô‹_hook
 = start_encode_chan_monitor_hook;

3353 
phy_video_¶Ÿ
->
dñëe_ícode_ch™_m⁄ô‹_hook
 = delete_encode_chan_monitor_hook;

3355 
deöãæa˚
 = &
phy_video_¶Ÿ
->deinterlace;

3356 
deöãæa˚
->
›
 = &
tw_ad≠tive_deöãæa˚_c⁄åﬁ_›î©i⁄_›
;

3357 
deöãæa˚
->
›
->
	`öô
(deinterlace);

3359 
	}
}

3361 
	$tw5864_h264_phy_video_¶Ÿ_ª£t
(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
dvm_chù_t
 *
chù
)

3363 
tw_ad≠tive_deöãæa˚_c⁄åﬁ
 *
deöãæa˚
;

3365 
deöãæa˚
 = &
phy_video_¶Ÿ
->deinterlace;

3366 
deöãæa˚
->
›
->
	`ª£t
(deinterlace);

3368 
	}
}

3370 
	$tw5864_h264_phy_video_¶Ÿ_so·w¨e_disˇrd_‰amî
(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
dvm_chù_t
 *
chù
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
)

3372 if((
chù
!=
NULL
)){

3373 
tw_vd_‹ig_buf_öfo_t
 *
vd_‹ig_buf
 = &
phy_video_¶Ÿ
->vd_orig_buf;

3374 
vd_‹ig_buf
->
›
->
	`so·w¨e_disˇrd_‰ame
(vd_‹ig_buf, 
chù
, 
h264_logic_ícode_ch™
);

3376 
	}
}

3378 
	$tw5864_h264_phy_video_¶Ÿ_ad_is_ªady
(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
dvm_chù_t
 *
chù
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
)

3380 
ªt
 = 0;

3381 if((
chù
!=
NULL
)){

3382 
tw_vd_‹ig_buf_öfo_t
 *
vd_‹ig_buf
 = &
phy_video_¶Ÿ
->vd_orig_buf;

3384 if(
vd_‹ig_buf
->
›
->
	`vd_‹ig_buf_ªady
(vd_‹ig_buf, 
chù
, 
h264_logic_ícode_ch™
)){

3385 
ªt
 = 1;

3388  
ªt
;

3389 
	}
}

3391 
	$tw5864_h264_phy_video_¶Ÿ_fú°_°¨t
(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
dvm_chù_t
 *
chù
)

3393 
	`¥ötk
("%s.%d:%d\n", 
__FUNCTION__
, 
__LINE__
, 
	`©omic_ªad
(&
phy_video_¶Ÿ
->
fú°_°¨t_Êag
));

3394 if(
	`©omic_ªad
(&
phy_video_¶Ÿ
->
fú°_°¨t_Êag
)){

3395 
tw_vd_‹ig_buf_öfo_t
 *
vd_‹ig_buf
;

3396 
£À˘_ch™
;

3397 
u32
 
d©a
;

3398 
	`©omic_£t
(&
phy_video_¶Ÿ
->
fú°_°¨t_Êag
, 0);

3400 
£À˘_ch™
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
CHANNEL_SELECT
);

3401 
£À˘_ch™
 |(1<<
phy_video_¶Ÿ
->
phy_¶Ÿ_id
);

3402 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
CHANNEL_SELECT
, 
£À˘_ch™
);

3403 
d©a
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
CHANNEL_ID
);

3404 
d©a
 = (d©®& (~0xf)Ë| 
phy_video_¶Ÿ
->
phy_¶Ÿ_id
;

3405 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
CHANNEL_ID
, 
d©a
);

3406 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
REFERENCEFRAME
, 0x0440);

3407 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRANDMECONTROL
, 0x0000);

3408 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
WINDOWSIZE
, 
SEARCH_WINDOW_SIZE_VALUE
);

3409 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRAENABLE
, 0x0060);

3410 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRA4X4_THRESHOLD_I
, 0x18);

3412 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRA4X4_THRESHOLD_IP
, 0x0);

3413 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
CHIPSCOPE
, 0x0070);

3414 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ORIGINALSEQUENCE
, 0x0440);

3416 
vd_‹ig_buf
 = &
phy_video_¶Ÿ
->vd_orig_buf;

3417 if(
vd_‹ig_buf
->
›
 !
NULL
){

3418 
vd_‹ig_buf
->
›
->
	`fú°_sync_‹ig_buf_öfo
(vd_‹ig_buf, 
chù
);

3420 
	`tw5864_vd_¶Ÿ_‹ig_buf_öfo_fú°_sync_‹ig_buf_öfo
(
vd_‹ig_buf
, 
chù
);

3422 
chù
->
video_ícode_ˇp
->
ícode_ªg_4
 = (
DEBLOCKINGON
|
INTRAON
|
CMOSON
|
INTERON
|
DDRON
);

3424 
phy_video_¶Ÿ
->
›
->
	`gë_video_size
(phy_video_slot)){

3426 
TW_VIDEO_SIZE_D1
:

3427 
chù
->
video_ícode_ˇp
->
ícode_ªg_4
 |
D1
;

3429 
TW_VIDEO_SIZE_HALF_D1
:

3430 
chù
->
video_ícode_ˇp
->
ícode_ªg_4
 |
HALFD1
;

3432 
TW_VIDEO_SIZE_CIF
:

3433 
chù
->
video_ícode_ˇp
->
ícode_ªg_4
 |
CIF
;

3437 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MODE
, chù->
video_ícode_ˇp
->
ícode_ªg_4
);

3438 
phy_video_¶Ÿ
->
	`°¨t_ícode_ch™_m⁄ô‹_hook
(phy_video_slot);

3440 
	}
}

3442 
	$tw5864_h264_phy_video_¶Ÿ_íd_°›
(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
)

3444 if((
h264_logic_ícode_ch™
!=
NULL
)){

3445 
dvm_chù_t
 *
chù
 = 
h264_logic_ícode_ch™
->chip;

3446 
£À˘_ch™
;

3447 
£À˘_ch™
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
CHANNEL_SELECT
);

3448 
£À˘_ch™
 &~(1<<
phy_video_¶Ÿ
->
phy_¶Ÿ_id
);

3449 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
CHANNEL_SELECT
, 
£À˘_ch™
);

3450 
	`©omic_£t
(&
phy_video_¶Ÿ
->
fú°_°¨t_Êag
, 1);

3452 
	}
}

3454 
	$tw5864_h264_phy_video_¶Ÿ_£t_¶Ÿ_ícode_±r
(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
dvm_chù_t
 *
chù
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
)

3456 if((
chù
!=
NULL
Ë&& (
h264_logic_ícode_ch™
!=NULL)){

3457 
phy_video_¶Ÿ
->
vd_‹ig_buf
.
›
->
	`£t_vd_cuº_ícode_±r
(&phy_video_¶Ÿ->vd_‹ig_buf, 
chù
, 
h264_logic_ícode_ch™
);

3459 
	}
}

3461 
u32
 
	$tw5864_h264_phy_video_¶Ÿ_gë_time°amp
(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
)

3463 
tw_vd_‹ig_buf_öfo_t
 *
vd_‹ig_buf
;

3464 
vd_‹ig_buf
 = &
phy_video_¶Ÿ
->vd_orig_buf;

3465  
vd_‹ig_buf
->
›
->
	`gë_time°amp
(vd_orig_buf);

3466 
	}
}

3468 
	$tw5864_h264_phy_video_¶Ÿ_ícode_ídof¶i˚_nŸify
(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
)

3470 if((
h264_logic_ícode_ch™
!=
NULL
)){

3471 
phy_video_¶Ÿ
->
vd_‹ig_buf
.
›
->
	`ícode_ídof¶i˚_nŸify
(&phy_video_¶Ÿ->vd_‹ig_buf, 
h264_logic_ícode_ch™
);

3473 
	}
}

3475 
	$tw5864_h264_phy_video_¶Ÿ_ícode_uƒegi°î_nŸify
(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
)

3477 if((
h264_logic_ícode_ch™
!=
NULL
)){

3478 
phy_video_¶Ÿ
->
vd_‹ig_buf
.
›
->
	`ícode_uƒegi°î_nŸify
(&phy_video_¶Ÿ->vd_‹ig_buf, 
h264_logic_ícode_ch™
);

3480 
	}
}

3482 
	$tw5864_h264_phy_video_¶Ÿ_upd©e_m≠_logic_¶Ÿ
(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
m≠_logic_id
, 
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
)

3484 if(
phy_video_¶Ÿ
 !
NULL
){

3485 
phy_video_¶Ÿ
->
m≠_logic_id
 = map_logic_id;

3486 if(
m≠_logic_id
 =
TW5864_LOGIC_VD_INVALID
){

3487 
phy_video_¶Ÿ
->
¸oss_bus_logic_video_¶Ÿ
 = 
NULL
;

3489 
phy_video_¶Ÿ
->
¸oss_bus_logic_video_¶Ÿ
 = 
logic_video_¶Ÿ
;

3492 
	}
}

3494 
	$tw5864_h264_phy_video_¶Ÿ_gë_video_size
(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
)

3496 if(
phy_video_¶Ÿ
 !
NULL
){

3497  
phy_video_¶Ÿ
->
video_size
;

3499  
TW_VIDEO_SIZE_D1
;

3501 
	}
}

3503 
	$tw5864_h264_phy_video_¶Ÿ_£t_video_size
(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
TW_VIDEO_SIZE
 
video_size
)

3505 if(
phy_video_¶Ÿ
 !
NULL
){

3506 if((
video_size
!=
TW_VIDEO_SIZE_D1
Ë&& (video_size!=
TW_VIDEO_SIZE_HALF_D1
Ë&& (video_size!=
TW_VIDEO_SIZE_CIF
)){

3507 
video_size
 = 
TW_VIDEO_SIZE_D1
;

3509 
phy_video_¶Ÿ
->
video_size
 = video_size;

3511 
	}
}

3513 
	$tw5864_h264_gë_phy_¶Ÿ_by_phy_¶Ÿ_id
(
dvm_chù_t
 *
chù
, 
phy_¶Ÿ_id
, 
tw_h264_phy_video_¶Ÿ_t
 **
phy_video_¶Ÿ
)

3515 if(
chù
 && 
phy_video_¶Ÿ
 && (
phy_¶Ÿ_id
 >0Ë&& (phy_¶Ÿ_id < 
TW5864_PHY_VD_CHAN_NUMBER
)) {

3516 *
phy_video_¶Ÿ
 = &
chù
->
chù_drivî
->
video_bus
.
vd_bus_drivî
->phy_video_¶Ÿ[
phy_¶Ÿ_id
];

3518 *
phy_video_¶Ÿ
 = 
NULL
;

3519 
	`TW_DBG
(
TW_DBG_ERR
, "övÆidÖhy_¶Ÿ_id %d\n", 
phy_¶Ÿ_id
);

3521 
	}
}

3523 
tw_h264_phy_video_¶Ÿ_›î©i⁄
 
	gtw5864_h264_phy_video_¶Ÿ_›
 = {

3524 .
öô
 = 
tw5864_h264_phy_video_¶Ÿ_öô
,

3525 .
	g¶Ÿ_ª£t
 = 
tw5864_h264_phy_video_¶Ÿ_ª£t
,

3526 .
	g¶Ÿ_so·w¨e_disˇrd_‰ame
 = 
tw5864_h264_phy_video_¶Ÿ_so·w¨e_disˇrd_‰amî
,

3527 .
	g¶Ÿ_ad_is_ªady
 = 
tw5864_h264_phy_video_¶Ÿ_ad_is_ªady
,

3528 .
	g¶Ÿ_fú°_°¨t
 = 
tw5864_h264_phy_video_¶Ÿ_fú°_°¨t
,

3529 .
	g¶Ÿ_íd_°›
 = 
tw5864_h264_phy_video_¶Ÿ_íd_°›
,

3530 .
	g£t_¶Ÿ_ícode_±r
 = 
tw5864_h264_phy_video_¶Ÿ_£t_¶Ÿ_ícode_±r
,

3531 .
	ggë_time°amp
 = 
tw5864_h264_phy_video_¶Ÿ_gë_time°amp
,

3532 .
	gícode_ídof¶i˚_nŸify
 = 
tw5864_h264_phy_video_¶Ÿ_ícode_ídof¶i˚_nŸify
,

3533 .
	gícode_uƒegi°î_nŸify
 = 
tw5864_h264_phy_video_¶Ÿ_ícode_uƒegi°î_nŸify
,

3534 .
	gupd©e_m≠_logic_¶Ÿ
 = 
tw5864_h264_phy_video_¶Ÿ_upd©e_m≠_logic_¶Ÿ
,

3535 .
	ggë_video_size
 = 
tw5864_h264_phy_video_¶Ÿ_gë_video_size
,

3536 .
	g£t_video_size
 = 
tw5864_h264_phy_video_¶Ÿ_£t_video_size
,

3537 .
	ggë_phy_¶Ÿ_by_phy_¶Ÿ_id
 = 
tw5864_h264_gë_phy_¶Ÿ_by_phy_¶Ÿ_id
,

3540 
	$öô_tw5864_h264_phy_video_¶Ÿ
(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
¶Ÿ_id
, 
TW_VIDEO_SIZE
 
video_size
)

3542 if(
phy_video_¶Ÿ
 !
NULL
){

3543 
phy_video_¶Ÿ
->
›
 = &
tw5864_h264_phy_video_¶Ÿ_›
;

3544 
phy_video_¶Ÿ
->
›
->
	`öô
’hy_video_¶Ÿ, 
¶Ÿ_id
, 
video_size
);

3546 
	}
}

3548 
	$ªmove_tw5864_h264_phy_video_¶Ÿ
(
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
)

3550 if(
phy_video_¶Ÿ
 !
NULL
){

3551 
tw_ªgi°î_èbÀ_t
 *
›íed_logic_ch™_èbÀ
 = &
phy_video_¶Ÿ
->opened_logic_chan_table;

3552 if(
›íed_logic_ch™_èbÀ
->
›
->
	`gë_cuº_ªgi°î_node_numbî
(opened_logic_chan_table) == 0){

3553 
phy_video_¶Ÿ
->
	`dñëe_ícode_ch™_m⁄ô‹_hook
(phy_video_slot);

3554 
phy_video_¶Ÿ
->
›
->
	`¶Ÿ_íd_°›
’hy_video_¶Ÿ, 
h264_logic_ícode_ch™
);

3557 
	}
}

3559 
	$tw5864_h264_ícode_c⁄åﬁ_£t_•s
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3561 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

3562 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

3563 
h264_•s_t
 *
•s
;

3564 
g›I¡îvÆs
;

3566 
•s
 = 
h264_ícode_c⁄åﬁ
->sps;

3567 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

3568 
ícode_¥›îty
 = &
h264_logic_ícode_ch™
->encode_property;

3569 if(
ícode_¥›îty
->
›
 !
NULL
){

3570 
g›I¡îvÆs
 = 
ícode_¥›îty
->
›
->
	`gë_g›I¡îvÆs
(encode_property);

3572 
g›I¡îvÆs
 = 
	`tw_h264_ícode_¥›îty_gë_g›I¡îvÆs
(
ícode_¥›îty
);

3574 
•s
->
i_id
 = 0;

3575 
•s
->
i_¥ofûe_idc
 = 
PROFILE_BASELINE
;

3576 
•s
->
i_Àvñ_idc
 = 
DEFAULT_LEVEL_IDC
;

3577 
•s
->
b_c⁄°øöt_£t0
 = 0;

3578 
•s
->
b_c⁄°øöt_£t1
 = 0;

3579 
•s
->
b_c⁄°øöt_£t2
 = 0;

3580 
•s
->
i_log2_max_‰ame_num
 = 4;

3581  (1 << 
•s
->
i_log2_max_‰ame_num
Ë< 
g›I¡îvÆs
){

3582 
•s
->
i_log2_max_‰ame_num
++;

3584 
•s
->
i_poc_ty≥
 = 0;

3585 if–
•s
->
i_poc_ty≥
 == 0 ){

3586 
•s
->
i_log2_max_poc_lsb
 = sps->
i_log2_max_‰ame_num
;

3587 } i‡–
•s
->
i_poc_ty≥
 == 1 ) {

3588 
i
;

3589 
•s
->
b_dñè_pic_‹dî_Æways_zîo
 = 1;

3590 
•s
->
i_off£t_f‹_n⁄_ªf_pic
 = 0;

3591 
•s
->
i_off£t_f‹_t›_to_bŸtom_fõld
 = 0;

3592 
•s
->
i_num_ªf_‰ames_ö_poc_cy˛e
 = 0;

3593  
i
 = 0; i < 
•s
->
i_num_ªf_‰ames_ö_poc_cy˛e
; i++ ){

3594 
•s
->
i_off£t_f‹_ªf_‰ame
[
i
] = 0;

3597 
•s
->
i_num_ªf_‰ames
 = 1;

3598 
•s
->
b_g≠s_ö_‰ame_num_vÆue_Ælowed
 = 0;

3599 
•s
->
i_mb_width
 = 
h264_ícode_c⁄åﬁ
->
i_mb_x
;

3600 
•s
->
i_mb_height
 = 
h264_ícode_c⁄åﬁ
->
i_mb_y
;

3601 
•s
->
b_‰ame_mbs_⁄ly
 = 1;

3602 
•s
->
b_mb_ad≠tive_‰ame_fõld
 = 0;

3603 
•s
->
b_dúe˘8x8_ö„ªn˚
 = 0;

3604 if–
•s
->
b_‰ame_mbs_⁄ly
 == 0){

3605 
•s
->
b_dúe˘8x8_ö„ªn˚
 = 1;

3607 
•s
->
b_¸›
 = 0;

3608 
•s
->
b_vui
 = 0;

3609 
	}
}

3611 
	$tw5864_h264_ícode_c⁄åﬁ_£t_µs
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3613 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

3614 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

3615 
h264_•s_t
 *
•s
 = 
h264_ícode_c⁄åﬁ
->sps;

3616 
h264_µs_t
 *
µs
 = 
h264_ícode_c⁄åﬁ
->pps;

3618 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

3619 
ícode_¥›îty
 = &
h264_logic_ícode_ch™
->encode_property;

3620 
µs
->
i_id
 = 0;

3621 
µs
->
i_•s_id
 = 
•s
->
i_id
;

3622 
µs
->
b_ˇbac
 = 0;

3623 
µs
->
b_pic_‹dî
 = 0;

3624 
µs
->
i_num_¶i˚_groups
 = 1;

3625 
µs
->
i_num_ªf_idx_l0_a˘ive
 = 1;

3626 
µs
->
i_num_ªf_idx_l1_a˘ive
 = 1;

3627 
µs
->
b_weighãd_¥ed
 = 0;

3628 
µs
->
b_weighãd_bùªd
 = 0;

3629 
µs
->
i_pic_öô_qp
 = 
DEFAULT_QP
;

3630 
µs
->
i_pic_öô_qs
 =Öps->
i_pic_öô_qp
;

3631 
µs
->
i_chroma_qp_ödex_off£t
 = 0;

3632 
µs
->
b_deblockög_fûãr_c⁄åﬁ
 = 0;

3633 
µs
->
b_c⁄°øöed_öåa_¥ed
 = 0;

3634 
µs
->
b_ªdund™t_pic_˙t
 = 0;

3635 
	}
}

3637 
	$tw5864_h264_ícode_c⁄åﬁ_£t_¶i˚_hód
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3639 
h264_¶i˚_hódî_t
 *
¶i˚
 = 
h264_ícode_c⁄åﬁ
->
¶i˚_hód
;

3640 
h264_•s_t
 *
•s
 = 
h264_ícode_c⁄åﬁ
->sps;

3641 
h264_µs_t
 *
µs
 = 
h264_ícode_c⁄åﬁ
->pps;

3643 
¶i˚
->
•s
 = sps;

3644 
¶i˚
->
µs
 =Öps;

3645 
¶i˚
->
i_fú°_mb
 = 
h264_ícode_c⁄åﬁ
->i_first_mb;

3646 
¶i˚
->
i_œ°_mb
 = 
•s
->
i_mb_width
 * sps->
i_mb_height
;

3647 
¶i˚
->
i_µs_id
 = 
µs
->
i_id
;

3648 
¶i˚
->
i_‰ame_num
 = 
h264_ícode_c⁄åﬁ
->
i_¶i˚_‰ame_num
;

3649 
¶i˚
->
b_fõld_pic
 = 0;

3650 
¶i˚
->
b_bŸtom_fõld
 = 1;

3651 
¶i˚
->
i_poc_lsb
 = 0;

3652 
¶i˚
->
i_dñè_poc_bŸtom
 = 0;

3653 
¶i˚
->
i_dñè_poc
[0] = 0;

3654 
¶i˚
->
i_dñè_poc
[1] = 0;

3655 
¶i˚
->
i_ªdund™t_pic_˙t
 = 0;

3656 
¶i˚
->
b_num_ªf_idx_ovîride
 = 0;

3657 
¶i˚
->
i_num_ªf_idx_l0_a˘ive
 = 1;

3658 
¶i˚
->
i_num_ªf_idx_l1_a˘ive
 = 1;

3659 if(
¶i˚
->
i_‰ame_num
<=¶i˚->
i_num_ªf_idx_l0_a˘ive
){

3660 
¶i˚
->
i_ªdund™t_pic_˙t
 = 1;

3662 
¶i˚
->
i_ªdund™t_pic_˙t
 = 0;

3664 
¶i˚
->
i_qp_dñè
 = (
h264_ícode_c⁄åﬁ
->
i_cuº_qp
 - 
µs
->
i_pic_öô_qp
);

3665 
¶i˚
->
b_•_f‹_swidth
 = 0;

3666 
¶i˚
->
i_qs_dñè
 = 0;

3667 
¶i˚
->
i_dißbÀ_deblockög_fûãr_idc
 = 0;

3668 
¶i˚
->
i_Æpha_c0_off£t
 = 0;

3669 
¶i˚
->
i_bëa_off£t
 = 0;

3670 
	}
}

3672 
	$tw5864_h264_ícode_c⁄åﬁ_ˇlcuœã_‰ame_ty≥
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3674 if(
h264_ícode_c⁄åﬁ
 !
NULL
){

3675 
h264_¶i˚_hódî_t
 *
¶i˚_hód
 = 
h264_ícode_c⁄åﬁ
->slice_head;

3676 if(
h264_ícode_c⁄åﬁ
->
i_g›_°ride
 == 0) {

3677 
h264_ícode_c⁄åﬁ
->
‰ame_ty≥
 = 
H264_FRAME_TYPE_IDR
;

3679 if((
h264_ícode_c⁄åﬁ
->
i_p_°ride
==0Ë|| (h264_ícode_c⁄åﬁ->
b_f‹˚_i_‰ame
)){

3680 
h264_ícode_c⁄åﬁ
->
‰ame_ty≥
 = 
H264_FRAME_TYPE_IDR
;

3682 
h264_ícode_c⁄åﬁ
->
‰ame_ty≥
 = 
H264_FRAME_TYPE_P
;

3685 if(
h264_ícode_c⁄åﬁ
->
‰ame_ty≥
 =
H264_FRAME_TYPE_IDR
){

3686 
h264_ícode_c⁄åﬁ
->
b_f‹˚_i_‰ame
 = 0;

3687 
h264_ícode_c⁄åﬁ
->
i_p_°ride
 = 0;

3688 
h264_ícode_c⁄åﬁ
->
i_¶i˚_‰ame_num
 = 0;

3689 
h264_ícode_c⁄åﬁ
->
i_‰ame_≥r_£c⁄d
 = 0;

3691 
h264_ícode_c⁄åﬁ
->
‰ame_ty≥
) {

3692 
H264_FRAME_TYPE_P
:

3693 
¶i˚_hód
->
i_ty≥
 = 
SLICE_TYPE_P
;

3695 
H264_FRAME_TYPE_I
:

3696 
¶i˚_hód
->
i_ty≥
 = 
SLICE_TYPE_I
;

3699 
H264_FRAME_TYPE_IDR
:

3700 
¶i˚_hód
->
i_ty≥
 = 
SLICE_TYPE_I
;

3701 
h264_ícode_c⁄åﬁ
->
i_idr_pic_id
++;

3702 
h264_ícode_c⁄åﬁ
->
i_idr_pic_id
 &= 0xffff;

3703 
¶i˚_hód
->
i_idr_pic_id
 = 
h264_ícode_c⁄åﬁ
->i_idr_pic_id;

3707 
	}
}

3709 
	$tw5864_h264_ícode_c⁄åﬁ_gë_‰ame_ty≥
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3711 if(
h264_ícode_c⁄åﬁ
 !
NULL
){

3712  
h264_ícode_c⁄åﬁ
->
‰ame_ty≥
;

3714  
H264_FRAME_TYPE_IDR
;

3716 
	}
}

3718 
	$tw5864_h264_ícode_c⁄åﬁ_gíî©‹_hód
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
tw_video_‰ame_tcb_t
 *
‰ame
)

3720 if((
h264_ícode_c⁄åﬁ
!=
NULL
Ë&& (
‰ame
!=NULL)){

3721 
‰ame_ty≥
;

3722 
‰ame_ty≥
 = 
h264_ícode_c⁄åﬁ
->
›
->
	`gë_‰ame_ty≥
(h264_encode_control);

3723 
‰ame_ty≥
){

3725 
H264_FRAME_TYPE_IDR
:

3726 
	`gí_h264_•s
(
h264_ícode_c⁄åﬁ
, 
‰ame
);

3727 
	`gí_h264_µs
(
h264_ícode_c⁄åﬁ
, 
‰ame
);

3728 
	`gí_h264_¶i˚hód
(
h264_ícode_c⁄åﬁ
, 
‰ame
, 
H264_FRAME_TYPE_IDR
);

3730 
H264_FRAME_TYPE_I
:

3731 
	`gí_h264_¶i˚hód
(
h264_ícode_c⁄åﬁ
, 
‰ame
, 
H264_FRAME_TYPE_I
);

3733 
H264_FRAME_TYPE_P
:

3734 
	`gí_h264_¶i˚hód
(
h264_ícode_c⁄åﬁ
, 
‰ame
, 
H264_FRAME_TYPE_P
);

3738 
	}
}

3740 
	$tw5864_h264_ícode_c⁄åﬁ_f‹˚_I_‰ame
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3742 if(
h264_ícode_c⁄åﬁ
->
b_f‹˚_i_‰ame
){

3743 
h264_ícode_c⁄åﬁ
->
b_f‹˚_i_‰ame
 = 1;

3745 
	}
}

3747 
	$tw5864_h264_ícode_c⁄åﬁ_upd©e_©_ícode_‰ame_ok
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3749 if(
h264_ícode_c⁄åﬁ
 !
NULL
){

3750 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

3751 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

3752 
keyFømeI¡îvÆs
, 
g›I¡îvÆs
;

3754 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

3755 
ícode_¥›îty
 = &
h264_logic_ícode_ch™
->encode_property;

3756 
h264_ícode_c⁄åﬁ
->
i_‰ameNumbî
++;

3757 
h264_ícode_c⁄åﬁ
->
i_‰ame_£rül
++;

3758 
h264_ícode_c⁄åﬁ
->
i_¶i˚_‰ame_num
++;

3759 
h264_ícode_c⁄åﬁ
->
i_g›_°ride
++;

3760 
h264_ícode_c⁄åﬁ
->
i_p_°ride
++;

3761 
keyFømeI¡îvÆs
 = 
ícode_¥›îty
->
›
->
	`gë_keyFømeI¡îvÆs
(encode_property);

3762 
g›I¡îvÆs
 = 
ícode_¥›îty
->
›
->
	`gë_g›I¡îvÆs
(encode_property);

3763 if(
h264_ícode_c⁄åﬁ
->
i_p_°ride
 >
keyFømeI¡îvÆs
){

3764 
h264_ícode_c⁄åﬁ
->
i_p_°ride
 = 0;

3769 if(
h264_ícode_c⁄åﬁ
->
i_g›_°ride
 >
g›I¡îvÆs
){

3770 
h264_ícode_c⁄åﬁ
->
i_g›_°ride
 = 0;

3772 
h264_ícode_c⁄åﬁ
->
i_vd_ª„ªn˚_±r
++;

3773 
h264_ícode_c⁄åﬁ
->
i_vd_ª„ªn˚_±r
 &= 3;

3775 
	}
}

3777 
	$tw5864_h264_ícode_c⁄åﬁ_upd©e_©_disˇrd_‰ame
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3779 if(
h264_ícode_c⁄åﬁ
 !
NULL
){

3780 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

3781 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

3782 
keyFømeI¡îvÆs
, 
g›I¡îvÆs
;

3784 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

3785 
ícode_¥›îty
 = &
h264_logic_ícode_ch™
->encode_property;

3787 
h264_ícode_c⁄åﬁ
->
i_g›_°ride
++;

3789 
h264_ícode_c⁄åﬁ
->
i_p_°ride
++;

3790 if(
ícode_¥›îty
->
›
 !
NULL
){

3791 
keyFømeI¡îvÆs
 = 
ícode_¥›îty
->
›
->
	`gë_keyFømeI¡îvÆs
(encode_property);

3792 
g›I¡îvÆs
 = 
ícode_¥›îty
->
›
->
	`gë_g›I¡îvÆs
(encode_property);

3794 
keyFømeI¡îvÆs
 = 
	`tw_h264_ícode_¥›îty_gë_keyFømeI¡îvÆs
(
ícode_¥›îty
);

3795 
g›I¡îvÆs
 = 
	`tw_h264_ícode_¥›îty_gë_g›I¡îvÆs
(
ícode_¥›îty
);

3797 if(
h264_ícode_c⁄åﬁ
->
i_p_°ride
 >
keyFømeI¡îvÆs
){

3798 
h264_ícode_c⁄åﬁ
->
i_p_°ride
 = 0;

3803 if(
h264_ícode_c⁄åﬁ
->
i_g›_°ride
 >
g›I¡îvÆs
){

3804 
h264_ícode_c⁄åﬁ
->
i_g›_°ride
 = 0;

3807 
	}
}

3809 
	$tw5864_h264_ícode_c⁄åﬁ_upd©e_©_ícode_‰ame_îr
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3811 if(
h264_ícode_c⁄åﬁ
 !
NULL
){

3812 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

3813 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

3814 
keyFømeI¡îvÆs
, 
g›I¡îvÆs
;

3816 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

3817 
ícode_¥›îty
 = &
h264_logic_ícode_ch™
->encode_property;

3820 
h264_ícode_c⁄åﬁ
->
i_g›_°ride
++;

3821 
h264_ícode_c⁄åﬁ
->
i_p_°ride
++;

3822 
keyFømeI¡îvÆs
 = 
ícode_¥›îty
->
›
->
	`gë_keyFømeI¡îvÆs
(encode_property);

3823 
g›I¡îvÆs
 = 
ícode_¥›îty
->
›
->
	`gë_g›I¡îvÆs
(encode_property);

3824 if(
h264_ícode_c⁄åﬁ
->
i_p_°ride
 >
keyFømeI¡îvÆs
){

3825 
h264_ícode_c⁄åﬁ
->
i_p_°ride
 = 0;

3830 if(
h264_ícode_c⁄åﬁ
->
i_g›_°ride
 >
g›I¡îvÆs
){

3831 
h264_ícode_c⁄åﬁ
->
i_g›_°ride
 = 0;

3834 
	}
}

3836 
	$tw5864_h264_ícode_c⁄åﬁ_upd©e_image_ªsﬁuti⁄
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3838 if(
h264_ícode_c⁄åﬁ
 !
NULL
){

3839 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

3840 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

3841 
osd_ch™_ígöe_t
 *
osd_ígöe
;

3842 
i_mb_numbî
;

3844 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

3845 
ícode_¥›îty
 = &
h264_logic_ícode_ch™
->encode_property;

3846 
osd_ígöe
 = &
h264_logic_ícode_ch™
->
ícode_osd_ígöe
;

3847 
i_mb_numbî
 = 
ícode_¥›îty
->
›
->
	`gë_ícodeSize_width
(encode_property);

3849 
h264_ícode_c⁄åﬁ
->
i_mb_x
 = ((
i_mb_numbî
)>>4);

3850 
i_mb_numbî
 = 
ícode_¥›îty
->
›
->
	`gë_ícodeSize_height
(encode_property);

3852 
h264_ícode_c⁄åﬁ
->
i_mb_y
 = ((
i_mb_numbî
)>>4);

3853 
h264_ícode_c⁄åﬁ
->
i_fú°_mb
 = 0;

3854 
h264_ícode_c⁄åﬁ
->
i_fú°_mb_x_™d_y
 = 0;

3855 
	`TW_DBG
(
TW_DBG_INFO
, "video size changed,ÑesyncÅo osd\n");

3856 
	`©omic_£t
(&
osd_ígöe
->
sync_osd_∑øm
, 1);

3858 
	}
}

3860 
	$tw5864_h264_ícode_c⁄åﬁ_upd©e_Âs_disˇrd_èbÀ
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
u32
 
phy_Âs
, u32 
èrgë_Âs
)

3862 if(
h264_ícode_c⁄åﬁ
) {

3863 
u32
 
mask
, 
i
;

3865 
mask
 = 0;

3866 
i
 = 0; i < 
phy_Âs
; i++) {

3867 
mask
 |(1 << 
i
);

3870 if((
phy_Âs
 =0Ë|| (
èrgë_Âs
 == 0)) {

3871 
h264_ícode_c⁄åﬁ
->
i_so·w¨e_disˇrd_‰ame_èbÀ
 = 0;

3872 }if(
phy_Âs
 < 
èrgë_Âs
){

3873 
h264_ícode_c⁄åﬁ
->
i_so·w¨e_disˇrd_‰ame_èbÀ
 = 
mask
;

3875 
mask
 = 0;

3876 
i
 = 0; i < 
èrgë_Âs
; i++) {

3877 
mask
 |(1 << 
i
);

3879 
h264_ícode_c⁄åﬁ
->
i_so·w¨e_disˇrd_‰ame_èbÀ
 = 
mask
;

3882 
h264_ícode_c⁄åﬁ
->
i_so·w¨e_disˇrd_‰ame_èbÀ
 = 
	`gë_bôs_m≠
(
phy_Âs
, 
èrgë_Âs
);

3883 
mask
 = 0;

3884 
i
 = 0; i < 
phy_Âs
; i++) {

3885 if(
h264_ícode_c⁄åﬁ
->
i_so·w¨e_disˇrd_‰ame_èbÀ
 & (1<<
i
)) {

3886 
mask
++;

3890 
	`TW_DBG
(
TW_DBG_INFO
, "phy_fps = %d,Åarget_fps = %d,Åable size %d, discardTable = 0x%08x\n",

3891 
phy_Âs
, 
èrgë_Âs
, 
mask
, 
h264_ícode_c⁄åﬁ
->
i_so·w¨e_disˇrd_‰ame_èbÀ
);

3893 
	}
}

3895 
	$tw5864_h264_ícode_c⁄åﬁ_gë_¶i˚_hód_™d_ad_°©us
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3897 
ªt
 = 0;

3898 if(
h264_ícode_c⁄åﬁ
 !
NULL
){

3899 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

3900 
Êags
;

3902 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

3903 
	`loˇl_úq_ßve
(
Êags
);

3904 
ªt
 = 
	`©omic_ªad
(&
h264_ícode_c⁄åﬁ
->
¶i˚_hód_™d_ad_°©us
);

3905 if((
ªt
&
DEV_CAN_SERVICE
) == DEV_CAN_SERVICE){

3906 
h264_ícode_c⁄åﬁ
->
›
->
	`˛ór_¶i˚_hód_™d_ad_°©us
(h264_encode_control);

3907 
ªt
 = 1;

3909 
ªt
 = 0;

3911 
	`loˇl_úq_ª°‹e
(
Êags
);

3913  
ªt
;

3914 
	}
}

3916 
	$tw5864_h264_ícode_c⁄åﬁ_˛ór_¶i˚_hód_™d_ad_°©us
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3918 if(
h264_ícode_c⁄åﬁ
 !
NULL
){

3919 
	`©omic_£t
(&
h264_ícode_c⁄åﬁ
->
¶i˚_hód_™d_ad_°©us
, 0);

3921 
	}
}

3923 
	$tw5864_h264_ícode_c⁄åﬁ_upd©e_¶i˚_hód_ªady
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3925 if(
h264_ícode_c⁄åﬁ
 !
NULL
){

3926 
Êags
;

3927 
ªt
;

3928 
	`loˇl_úq_ßve
(
Êags
);

3929 
ªt
 = 
	`©omic_ªad
(&
h264_ícode_c⁄åﬁ
->
¶i˚_hód_™d_ad_°©us
);

3930 
ªt
 |
SLICEHEAD_IS_READY
;

3931 
	`©omic_£t
(&
h264_ícode_c⁄åﬁ
->
¶i˚_hód_™d_ad_°©us
, 
ªt
);

3932 
	`loˇl_úq_ª°‹e
(
Êags
);

3934 
	}
}

3936 
	$tw5864_h264_ícode_c⁄åﬁ_˛ór_¶i˚_hód_ªady
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3938 if(
h264_ícode_c⁄åﬁ
 !
NULL
){

3939 
Êags
;

3940 
ªt
;

3941 
	`loˇl_úq_ßve
(
Êags
);

3942 
ªt
 = 
	`©omic_ªad
(&
h264_ícode_c⁄åﬁ
->
¶i˚_hód_™d_ad_°©us
);

3943 
ªt
 &~
SLICEHEAD_IS_READY
;

3944 
	`©omic_£t
(&
h264_ícode_c⁄åﬁ
->
¶i˚_hód_™d_ad_°©us
, 
ªt
);

3945 
	`loˇl_úq_ª°‹e
(
Êags
);

3947 
	}
}

3949 
	$tw5864_h264_ícode_c⁄åﬁ_upd©e_ad_ªady
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3951 if(
h264_ícode_c⁄åﬁ
 !
NULL
){

3952 
Êags
;

3953 
ªt
;

3954 
	`loˇl_úq_ßve
(
Êags
);

3955 
ªt
 = 
	`©omic_ªad
(&
h264_ícode_c⁄åﬁ
->
¶i˚_hód_™d_ad_°©us
);

3956 
ªt
 |
AD_IS_READY
;

3957 
	`©omic_£t
(&
h264_ícode_c⁄åﬁ
->
¶i˚_hód_™d_ad_°©us
, 
ªt
);

3958 
h264_ícode_c⁄åﬁ
->
ad_ªady
++;

3959 
	`loˇl_úq_ª°‹e
(
Êags
);

3961 
	}
}

3963 
	$tw5864_h264_ícode_c⁄åﬁ_˛ór_ad_ªady
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3965 if(
h264_ícode_c⁄åﬁ
 !
NULL
){

3966 
Êags
;

3967 
ªt
;

3968 
	`loˇl_úq_ßve
(
Êags
);

3969 
ªt
 = 
	`©omic_ªad
(&
h264_ícode_c⁄åﬁ
->
¶i˚_hód_™d_ad_°©us
);

3970 
ªt
 &~
AD_IS_READY
;

3971 
	`©omic_£t
(&
h264_ícode_c⁄åﬁ
->
¶i˚_hód_™d_ad_°©us
, 
ªt
);

3972 
	`loˇl_úq_ª°‹e
(
Êags
);

3974 
	}
}

3976 
	$tw5864_h264_ícode_c⁄åﬁ_gë_ad_°©us
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3978 
ªt
 = 0, 
°©us
;

3979 if(
h264_ícode_c⁄åﬁ
 !
NULL
){

3980 
Êags
;

3982 
	`loˇl_úq_ßve
(
Êags
);

3983 
°©us
 = 
	`©omic_ªad
(&
h264_ícode_c⁄åﬁ
->
¶i˚_hód_™d_ad_°©us
);

3984 if((
°©us
&
AD_IS_READY
)){

3985 
ªt
 = 1;

3986 
°©us
 &~
AD_IS_READY
;

3988 
	`©omic_£t
(&
h264_ícode_c⁄åﬁ
->
¶i˚_hód_™d_ad_°©us
, 
°©us
);

3989 
	`loˇl_úq_ª°‹e
(
Êags
);

3991  
ªt
;

3992 
	}
}

3994 
	$tw5864_h264_ícode_c⁄åﬁ_fú°_°¨t
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

3996 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

3997 
tw_h264_phy_video_¶Ÿ_t
 *
ma°î_¶Ÿ
;

3998 
dvm_chù_t
 *
chù
;

4000 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

4001 
ma°î_¶Ÿ
 = 
h264_logic_ícode_ch™
->master_slot;

4002 
chù
 = 
h264_logic_ícode_ch™
->chip;

4003 if((
ma°î_¶Ÿ
!=
NULL
Ë&& (
chù
!=NULL)){

4004 
ma°î_¶Ÿ
->
›
->
	`¶Ÿ_fú°_°¨t
(ma°î_¶Ÿ, 
chù
);

4005 
h264_ícode_c⁄åﬁ
->
i_vd_ª„ªn˚_±r
 = 
ma°î_¶Ÿ
->
vd_‹ig_buf
.
vd_ícode_±r
;

4007 
	}
}

4009 
	$tw5864_h264_ícode_c⁄åﬁ_°¨t_ícode
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

4011 if((
h264_ícode_c⁄åﬁ
!=
NULL
)){

4012 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

4013 
ed_tcb_t
 *
›íed_logic_ch™_ed
;

4014 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

4015 
tw_h264_ícode_„©uª_t
 *
ícode_„©uª
;

4016 
tw_h264_phy_video_¶Ÿ_t
 *
ma°î_¶Ÿ
;

4017 
dvm_chù_t
 *
chù
;

4018 
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_queue
;

4019 
tw_video_‰ame_tcb_t
 *
‰ame
;

4020 
tw_h264_ícode_dñè_t
 *
dñè
;

4021 
ícodeSize
, 
video_mode
 = 0;

4022 
tw_ed_fsm_t
 *
ed_fsm
;

4024 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

4025 
›íed_logic_ch™_ed
 = &
h264_logic_ícode_ch™
->opened_logic_chan_ed;

4026 
ícode_¥›îty
 = &
h264_logic_ícode_ch™
->encode_property;

4027 
ícode_„©uª
 = &
ícode_¥›îty
->encode_feature;

4028 
ma°î_¶Ÿ
 = 
h264_logic_ícode_ch™
->master_slot;

4029 
chù
 = 
h264_logic_ícode_ch™
->chip;

4030 
video_‰ame_queue
 = &
h264_logic_ícode_ch™
->
ícode_‰ame_queue
;

4032 
dñè
 = &
h264_ícode_c⁄åﬁ
->
ícode_dñè
;

4033 
ed_fsm
 = &
›íed_logic_ch™_ed
->ed_fsm;

4034 if(
ed_fsm
->
›
->
	`gë_cuº_°©e
”d_fsmË=
TW_ED_STANDBY
){

4035 
‰ame
 = 
video_‰ame_queue
->
cuº_¥odu˚r
;

4036 
ma°î_¶Ÿ
->
›
->
	`£t_¶Ÿ_ícode_±r
(ma°î_¶Ÿ, 
chù
, 
h264_logic_ícode_ch™
);

4037 
‰ame
->
time°amp
 = 
ma°î_¶Ÿ
->
›
->
	`gë_time°amp
(master_slot);

4038 
‰ame
->
duøti⁄
 = 40;

4039 
‰ame
->
i_cuº_qp
 = 
h264_ícode_c⁄åﬁ
->i_curr_qp;

4040 
‰ame
->
i_mb_x
 = 
h264_ícode_c⁄åﬁ
->i_mb_x;

4041 
‰ame
->
i_mb_y
 = 
h264_ícode_c⁄åﬁ
->i_mb_y;

4042 
‰ame
->
‰ame_numbî
 = 
h264_ícode_c⁄åﬁ
->
i_‰ame_£rül
;

4043 
‰ame
->
i_log_g›_vÆue
 = 
h264_ícode_c⁄åﬁ
->
•s
->
i_log2_max_‰ame_num
;

4044 
‰ame
->
Âs
 = 
ícode_¥›îty
->
›
->
	`gë_èrgë_Âs
(encode_property);

4046 if((
h264_ícode_c⁄åﬁ
->
i_so·w¨e_disˇrd_‰ame_èbÀ
 & (1<<h264_ícode_c⁄åﬁ->
i_‰ame_≥r_£c⁄d
))

4047 || (
‰ame
->
‰ame_ty≥
==
H264_FRAME_TYPE_IDR
Ë|| (‰ame->‰ame_ty≥==
H264_FRAME_TYPE_I
)){

4048 
h264_«l_t
 *
«l
 = &
‰ame
->nal;

4049 
£n_ty≥
=0x4, 
mode_£À˘
, 
mbdñay
;

4050 
hód_vÆue
;

4051 
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
 = &
‰ame
->video_packet_queue;

4052 
tw_video_∑ckë_tcb_t
 *
∑ckë
 = 
video_∑ckë_queue
->
cuº_¥odu˚r
;

4053 
__u8
 *
hód_buf_±r
 = 
∑ckë
->
d©a
;

4055 
mode_£À˘
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
CIF_MAP_D1_MODE
);

4056 
ma°î_¶Ÿ
->
›
->
	`gë_video_size
(master_slot)){

4057 
TW_VIDEO_SIZE_CIF
:

4058 if(
chù
->
video_ícode_ˇp
->
ddr_m≠_mode
 =
DDR_MAP_COMPRESS_DISABLE
){

4059 
mode_£À˘
 |= 0x40;

4063 
mode_£À˘
 &= ~0x40;

4065 
video_mode
 = 0x00;

4067 
TW_VIDEO_SIZE_HALF_D1
:

4068 if(
chù
->
video_ícode_ˇp
->
ddr_m≠_mode
 =
DDR_MAP_COMPRESS_DISABLE
){

4069 
mode_£À˘
 |= 0x80;

4073 
mode_£À˘
 &= ~0x80;

4075 
video_mode
 = 0x03;

4078 
TW_VIDEO_SIZE_D1
:

4079 
video_mode
 = 0x01;

4082 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
CIF_MAP_D1_MODE
, 
mode_£À˘
);

4084 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
FRAMERESOLUTION
, ((
h264_ícode_c⁄åﬁ
->
i_mb_x
<<8)|h264_ícode_c⁄åﬁ->
i_mb_y
));

4085 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
REFFRAMEINDEX
, ((
h264_ícode_c⁄åﬁ
->
i_vd_ª„ªn˚_±r
<<12)|((h264_encode_control->i_vd_reference_ptr+3)&3)));

4086 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MBADDR
, 
h264_ícode_c⁄åﬁ
->
i_fú°_mb_x_™d_y
);

4088 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENCODER_VLC_PARAM
, ( (
MASK_HARDWARE_INSERT_03
|
ENABLE_VLC_FLOWCONTROL
|
ENABLE_INSERT_03
|
h264_ícode_c⁄åﬁ
->
i_cuº_qp
) ));

4089 
‰ame
->
‰ame_Àn
){

4090 if(
‰ame
->
‰ame_Àn
 == 0){

4091 
	`¥ötk
("\n&&&&&&&&&&&&&&&&&&&&impossibÀ %d&&&&&&&&&&&&&&&&&&&&&&&\n", 
__LINE__
);

4094 
hód_vÆue
 = *
hód_buf_±r
;

4095 
hód_vÆue
 <<= 8;

4096 
hód_buf_±r
++;

4097 
‰ame
->
‰ame_Àn
--;

4098 if(
‰ame
->
‰ame_Àn
 == 0){

4099 
	`¥ötk
("\n&&&&&&&&&&&&&&&&&&&&impossibÀ %d&&&&&&&&&&&&&&&&&&&&&&&\n", 
__LINE__
);

4102 
hód_vÆue
 |*
hód_buf_±r
;

4103 
hód_vÆue
 <<= 16;

4104 
hód_buf_±r
++;

4105 
‰ame
->
‰ame_Àn
--;

4106 
hód_vÆue
 |= 0x8000;

4107 
hód_vÆue
 |= (16<<8);

4108 #ifde‡
POWERPC_PCI_PLATFORM


4109 
hód_vÆue
 |= 0x2;

4111 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENABLE_VLC_LOOKUP_TABLE
, 
hód_vÆue
);

4114 if(
«l
->
i_ãmp_bôÆign_numbî
){

4115 
hód_vÆue
 = 
«l
->
i_ãmp_bôÆign_c⁄ã¡
;

4116 
hód_vÆue
 >>(16-
«l
->
i_ãmp_bôÆign_numbî
);

4117 
hód_vÆue
 <<= 16;

4118 
hód_vÆue
 |= 0x8000;

4119 
hód_vÆue
 |(
«l
->
i_ãmp_bôÆign_numbî
<<8);

4120 #ifde‡
POWERPC_PCI_PLATFORM


4121 
hód_vÆue
 |= 0x2;

4123 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENABLE_VLC_LOOKUP_TABLE
, 
hód_vÆue
);

4127 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENCODER_VLC_PARAM
, ( (
ENABLE_VLC_FLOWCONTROL
|
ENABLE_INSERT_03
|
h264_ícode_c⁄åﬁ
->
i_cuº_qp
) ));

4128 
∑ckë
->
›
->
	`dma_m≠
’ackë, 
DMA_FROM_DEVICE
);

4130 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
QP
, 
h264_ícode_c⁄åﬁ
->
i_cuº_qp
);

4131 
h264_ícode_c⁄åﬁ
->
i_cuº_œmda
 = 
Lambda_lookup_èbÀ
[h264_ícode_c⁄åﬁ->
i_cuº_qp
];

4132 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
LAMDA
, 
h264_ícode_c⁄åﬁ
->
i_cuº_œmda
);

4133 
ícodeSize
 = 
ícode_¥›îty
->
›
->
	`gë_ícodeSize
(encode_property);

4134 
ma°î_¶Ÿ
->
›
->
	`gë_video_size
(master_slot)){

4136 
TW_VIDEO_SIZE_D1
:

4137 
ícodeSize
){

4138 
TW_VIDEO_SIZE_QCIF
:

4139 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

4140 
£n_ty≥
 = 0xa4;

4142 
£n_ty≥
 = 0x1a4;

4145 
TW_VIDEO_SIZE_CIF
:

4146 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

4147 
£n_ty≥
 = 0x54;

4149 
£n_ty≥
 = 0x154;

4152 
TW_VIDEO_SIZE_HALF_D1
:

4153 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

4154 
£n_ty≥
 = 0x44;

4156 
£n_ty≥
 = 0x144;

4160 
TW_VIDEO_SIZE_D1
:

4161 if(
ícode_„©uª
->
›
->
	`gë_deöãæa˚
(encode_feature)){

4162 
£n_ty≥
 = 0x6;

4164 
£n_ty≥
 = 0x4;

4169 
TW_VIDEO_SIZE_HALF_D1
:

4170 
ícodeSize
) {

4172 
TW_VIDEO_SIZE_HALF_D1
:

4173 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

4174 
£n_ty≥
 = 0x04;

4176 
£n_ty≥
 = 0x104;

4179 
TW_VIDEO_SIZE_D1
:

4180 
	`¥ötk
("%s.%dÇÿsuΩp‹t\n", 
__FUNCTION__
, 
__LINE__
);

4182 
TW_VIDEO_SIZE_CIF
:

4183 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

4184 
£n_ty≥
 = 0x14;

4186 
£n_ty≥
 = 0x114;

4189 
TW_VIDEO_SIZE_QCIF
:

4190 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

4191 
£n_ty≥
 = 0x64;

4193 
£n_ty≥
 = 0x164;

4198 
TW_VIDEO_SIZE_CIF
:

4199 
ícodeSize
){

4200 
TW_VIDEO_SIZE_QCIF
:

4201 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

4202 
£n_ty≥
 = 0x54;

4204 
£n_ty≥
 = 0x154;

4207 
TW_VIDEO_SIZE_CIF
:

4208 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

4209 
£n_ty≥
 = 0x04;

4211 
£n_ty≥
 = 0x104;

4215 
TW_VIDEO_SIZE_D1
:

4216 
TW_VIDEO_SIZE_HALF_D1
:

4217 
	`¥ötk
("%s.%dÇÿsuΩp‹t\n", 
__FUNCTION__
, 
__LINE__
);

4222 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERSTART
, 
£n_ty≥
);

4223 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MODE
, chù->
video_ícode_ˇp
->
ícode_ªg_4
 | (
video_mode
 << 6));

4225 
h264_ícode_c⁄åﬁ
->
‰ame_ty≥
) {

4226 
H264_FRAME_TYPE_P
:

4227 
mode_£À˘
 = 0xc;

4228 if(
ícode_„©uª
->
›
->
	`gë_skù
(encode_feature)) {

4229 
mode_£À˘
 |= 0x30;

4231 
mode_£À˘
 |= 0x40;

4233 if(
ícode_„©uª
->
›
->
	`gë_hÆf_pixñ
(encode_feature)){

4234 
mode_£À˘
 |= 0x02;

4236 
mode_£À˘
 &= 0xfd;

4238 if(
ícode_„©uª
->
›
->
	`gë_qu¨ãr_pixñ
(encode_feature)) {

4239 
mode_£À˘
 |= 0x03;

4241 
mode_£À˘
 &= 0xfc;

4243 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRAENABLE
, 0x0060);

4246 
H264_FRAME_TYPE_IDR
:

4247 
H264_FRAME_TYPE_I
:

4248 if(
ícode_„©uª
->
›
->
	`gë_i_4x4
(encode_feature)) {

4249 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MB4X4LAMDA
, 
I¡ø4X4_Lambda3
[
h264_ícode_c⁄åﬁ
->
i_cuº_qp
]);

4250 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRAENABLE
, 0x0070);

4252 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRAENABLE
, 0x0060);

4254 
mode_£À˘
 = 0x8;

4258 
mbdñay
 = 
ícode_„©uª
->
›
->
	`gë_mb_dñay
(encode_feature);

4259 if(
mbdñay
 <= 240) {

4260 
mbdñay
 >>= 4;

4261 
mbdñay
 <<= 8;

4262 
mbdñay
 |= (0 << 4);

4264 
mbdñay
 >>= 7;

4265 
mbdñay
 <<= 8;

4266 
mbdñay
 |= (1 << 4);

4268 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
CHANNEL_ID
, (
ma°î_¶Ÿ
->
phy_¶Ÿ_id
| 
mbdñay
 | 
DDR_B_CHIP
));

4269 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRANDMECONTROL
, 
mode_£À˘
);

4271 if(
chù
->
ªgi°î_cuº_h264_ícode_ch™
 !
NULL
){

4272 
chù
->
	`ªgi°î_cuº_h264_ícode_ch™
(chù, 
h264_logic_ícode_ch™
);

4275 
	`drivî_gí_dñivî_evít
(
›íed_logic_ch™_ed
, 1);

4276 if(
ed_fsm
->
›
->
	`gë_cuº_°©e
”d_fsmË=
TW_ED_RUNNING
){

4277 
	`do_gëtimeofday
(&
dñè
->
œ°_time
);

4278 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
CHIPSCOPE
, 0x8000);

4279 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
CHIPSCOPE
, 0x0000);

4280 
h264_ícode_c⁄åﬁ
->
	`add_ícode_timeout_hook
(h264_encode_control);

4282 
ma°î_¶Ÿ
->
›
->
	`¶Ÿ_so·w¨e_disˇrd_‰ame
(ma°î_¶Ÿ, 
chù
, 
h264_logic_ícode_ch™
);

4283 
video_‰ame_queue
->
›
->
	`ªÀa£_cuº_¥odu˚r
(video_‰ame_queue, &
h264_logic_ícode_ch™
->
ícode_ch™_buf_poﬁ
);

4284 
h264_ícode_c⁄åﬁ
->
›
->
	`nŸify
(h264_ícode_c⁄åﬁ, 
h264_logic_ícode_ch™
, 
chù
);

4285 
	`¥ötk
("%s.%d, %d.%d, sèãÉº %d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
(ed_fsm));

4288 
	`¥ötk
("%s.%d: so·w¨êdisˇrd føme\n", 
__FUNCTION__
, 
__LINE__
);

4289 
ma°î_¶Ÿ
->
›
->
	`¶Ÿ_so·w¨e_disˇrd_‰ame
(ma°î_¶Ÿ, 
chù
, 
h264_logic_ícode_ch™
);

4290 
video_‰ame_queue
->
›
->
	`ªÀa£_cuº_¥odu˚r
(video_‰ame_queue, &
h264_logic_ícode_ch™
->
ícode_ch™_buf_poﬁ
);

4292 
h264_ícode_c⁄åﬁ
->
›
->
	`nŸify
(h264_ícode_c⁄åﬁ, 
h264_logic_ícode_ch™
, 
chù
);

4295 
h264_ícode_c⁄åﬁ
->
i_‰ame_≥r_£c⁄d
++;

4296 if(
h264_ícode_c⁄åﬁ
->
i_‰ame_≥r_£c⁄d
 >h264_ícode_c⁄åﬁ->
i_¸ossbus_Âs
){

4297 
h264_ícode_c⁄åﬁ
->
i_‰ame_≥r_£c⁄d
 = 0;

4300 
	`¥ötk
("\n%s.%d, sèã i†nŸ sèndby, why?????, %d, %d--%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
(ed_fsm));

4303 
	}
}

4305 
	$tw5864_h264_ícode_c⁄åﬁ_úq_func
(
úq
, *
c⁄ãxt
)

4307 
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
 = (tw_h264_ícode_c⁄åﬁ_t*)
c⁄ãxt
;

4308 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

4309 
dvm_chù_t
 *
chù
;

4310 
ªt
=0, 
f‹˚_esˇ≥
=100;

4312 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

4313 
chù
 = 
h264_logic_ícode_ch™
->chip;

4315 
f‹˚_esˇ≥
>0) {

4316 
f‹˚_esˇ≥
--;

4317 
h264_ícode_c⁄åﬁ
->
›
->
	`ªad_vlc_∑øm
(h264_ícode_c⁄åﬁ, 
chù
);

4318 i‡(!
h264_ícode_c⁄åﬁ
->
vlc_°©us
)

4320 
h264_ícode_c⁄åﬁ
->
›
->
	`ˇlcuœã_mov_∑øm
(h264_ícode_c⁄åﬁ, 
chù
);

4321 
h264_ícode_c⁄åﬁ
->
›
->
	`mov_vlc_codög
(h264_ícode_c⁄åﬁ, 
h264_logic_ícode_ch™
, 
chù
);

4322 
ªt
 = 
h264_ícode_c⁄åﬁ
->
›
->
	`chù_pög_p⁄g_upd©e
(h264_ícode_c⁄åﬁ, 
h264_logic_ícode_ch™
, 
chù
);

4323 i‡(
ªt
==
VLC_STATUS_OVER
 ||Ñë==
VLC_NO_PACKET_BUF
)

4326 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
VLC_ENCODER_INTERRUPT
, (1<<
IRQ_VLC_TYPE_INTR
));

4328 if(
ªt
 =
VLC_STATUS_OVER
){

4333 
	}
}

4335 
	$tw5864_h264_ícode_c⁄åﬁ_ªad_vlc_∑øm
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
dvm_chù_t
 *
chù
)

4337 
h264_ícode_c⁄åﬁ
->
vlc_°©us
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
ENCODER_VLC_INTR_STATUS
);

4338 if(
h264_ícode_c⁄åﬁ
->
vlc_°©us
&
VLC_OVERFLOW
) {

4339 
h264_ícode_c⁄åﬁ
->
ovîÊow
++;

4340 
h264_ícode_c⁄åﬁ
->
vlc_°©us
 &~
VLC_OVERFLOW
;

4341 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENCODER_VLC_INTR_STATUS
, 
VLC_OVERFLOW
);

4343 
h264_ícode_c⁄åﬁ
->
vlc_°©us
 &
VLC_INTR_STATUS_MASK
;

4344 
	}
}

4346 
	$tw5864_h264_ícode_c⁄åﬁ_ˇlcuœã_mov_∑øm
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
dvm_chù_t
 *
chù
)

4348 
h264_ícode_c⁄åﬁ
->
vlc_°©us
) {

4350 
h264_ícode_c⁄åﬁ
->
vlcI¡rLí
 = 
VLC_ENCODER_DMA_LEN
;

4352 
VLC_END_SLICE
:

4353 
h264_ícode_c⁄åﬁ
->
vlcI¡rLí
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
ENCODER_VLC_INTR_STATUS
);

4354 
h264_ícode_c⁄åﬁ
->
vlcI¡rLí
 >>
FPGA_LEN_OFFSET
;

4355 
h264_ícode_c⁄åﬁ
->
vlcI¡rLí
 &
FPGA_LEN_OFFSET_MASK
;

4356 
h264_ícode_c⁄åﬁ
->
vlcI¡rLí
 <<= 1;

4359 
	}
}

4361 
	$tw5864_h264_ícode_c⁄åﬁ_mov_vlc_codög
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
, 
dvm_chù_t
 *
chù
)

4363 
tw_video_‰ame_tcb_t
 *
‰ame
;

4364 
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
;

4365 
tw_video_∑ckë_tcb_t
 *
∑ckë
;

4366 #ifdef 
USE_POLLING_DMA


4367 
dma_addr_t
 
§c
, 
de°
;

4369 
__u32
 
__iomem
 *
§c
, *
de°
;

4370 
i
, 
cou¡
;

4373 if(
h264_ícode_c⁄åﬁ
->
vlcI¡rLí
 == 0){

4376 
‰ame
 = 
h264_logic_ícode_ch™
->
ícode_‰ame_queue
.
cuº_¥odu˚r
;

4377 if(
‰ame
 !
NULL
) {

4378 if(
‰ame
->
‰ame_is_îr
){

4381 
video_∑ckë_queue
 = &
‰ame
->video_packet_queue;

4382 
∑ckë
 = 
video_∑ckë_queue
->
cuº_¥odu˚r
;

4383 i‡(
∑ckë
 =
NULL
) {

4384 
video_∑ckë_queue
->
›
->
	`åy_gë_cuº_¥odu˚r_‰om_poﬁ
(video_∑ckë_queue, &
h264_logic_ícode_ch™
->
ícode_ch™_buf_poﬁ
);

4385 
∑ckë
 = 
video_∑ckë_queue
->
cuº_¥odu˚r
;

4386 i‡(
∑ckë
 =
NULL
) {

4387 
‰ame
->
‰ame_is_îr
 = 1;

4390 
∑ckë
->
›
->
	`dma_m≠
’ackë, 
DMA_FROM_DEVICE
);

4393 if(
chù
->
vlc_pög_p⁄g_ödex
){

4394 #ifdef 
USE_POLLING_DMA


4395 #ifde‡
UPM_SYNC_MODE


4396 
§c
 = 
chù
->
∑_sync_ªgs
 + 
VLC_ENCODER_PONG
;

4398 
§c
 = 
chù
->
∑_ªgs
 + 
VLC_ENCODER_PONG
;

4400 
de°
 = 
∑ckë
->
dma_addr
;

4401 
	`Âga_dma_ª˚ive
((
u32
)
§c
, (u32)
de°
, 
h264_ícode_c⁄åﬁ
->
vlcI¡rLí
);

4403 #ifde‡
UPM_SYNC_MODE


4404 
§c
 = (
__u32
 
__iomem
 *)(
chù
->
sync_ªgs
 + 
VLC_ENCODER_PONG
);

4406 
§c
 = (
__u32
 
__iomem
 *)(
chù
->
ªgs
 + 
VLC_ENCODER_PONG
);

4408 
de°
 = (
__u32
 
__iomem
 *)
∑ckë
->
d©a
;

4409 
cou¡
 = (
h264_ícode_c⁄åﬁ
->
vlcI¡rLí
+3)>>2;

4410 
i
=0; i<
cou¡
; i++){

4411 *
de°
++ = *
§c
++;

4415 #ifdef 
USE_POLLING_DMA


4416 #ifde‡
UPM_SYNC_MODE


4417 
§c
 = 
chù
->
∑_sync_ªgs
 + 
VLC_ENCODER_PING
;

4419 
§c
 = 
chù
->
∑_ªgs
 + 
VLC_ENCODER_PING
;

4421 
de°
 = 
∑ckë
->
dma_addr
;

4422 
	`Âga_dma_ª˚ive
((
u32
)
§c
, (u32)
de°
, 
h264_ícode_c⁄åﬁ
->
vlcI¡rLí
);

4424 #ifde‡
UPM_SYNC_MODE


4425 
§c
 = (
__u32
 
__iomem
 *)(
chù
->
sync_ªgs
 + 
VLC_ENCODER_PING
);

4427 
§c
 = (
__u32
 
__iomem
 *)(
chù
->
ªgs
 + 
VLC_ENCODER_PING
);

4429 
de°
 = (
__u32
 
__iomem
 *)
∑ckë
->
d©a
;

4430 
cou¡
 = (
h264_ícode_c⁄åﬁ
->
vlcI¡rLí
+3)>>2;

4431 
i
=0; i<
cou¡
; i++){

4432 *
de°
++ = *
§c
++;

4436 
∑ckë
->
∑ylﬂd_Àn
 = 
h264_ícode_c⁄åﬁ
->
vlcI¡rLí
;

4437 
‰ame
->
‰ame_Àn
 +
h264_ícode_c⁄åﬁ
->
vlcI¡rLí
;

4439 
	}
}

4441 
	$tw5864_h264_ícode_c⁄åﬁ_chù_pög_p⁄g_upd©e
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
, 
dvm_chù_t
 *
chù
)

4443 
tw_video_‰ame_tcb_t
 *
‰ame
;

4444 
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
;

4445 
tw_video_∑ckë_tcb_t
 *
∑ckë
 = 
NULL
;

4447 
‰ame
 = 
h264_logic_ícode_ch™
->
ícode_‰ame_queue
.
cuº_¥odu˚r
;

4448 i‡(
‰ame
 !
NULL
) {

4449 
video_∑ckë_queue
 = &
‰ame
->video_packet_queue;

4450 
∑ckë
 = 
video_∑ckë_queue
->
cuº_¥odu˚r
;

4451 if(
∑ckë
 !
NULL
){

4452 
∑ckë
->
›
->
	`dma_unm≠
’ackë, 
DMA_FROM_DEVICE
);

4453 
video_∑ckë_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(video_packet_queue);

4455 
‰ame
->
‰ame_is_îr
 = 1;

4459 
h264_ícode_c⁄åﬁ
->
vlc_°©us
){

4461 
h264_ícode_c⁄åﬁ
->
vlc_°©us
 &~(1<<
chù
->
vlc_pög_p⁄g_ödex
);

4462 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENCODER_VLC_INTR_STATUS
, (1<<chù->
vlc_pög_p⁄g_ödex
));

4463 
chù
->
vlc_pög_p⁄g_ödex
++;

4464 
chù
->
vlc_pög_p⁄g_ödex
 &= 1;

4467 
	`¥ötk
("%d: vl¯öå sètu†i†nuŒ\n", 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
);

4469 
VLC_END_SLICE
:

4470 if((
‰ame
!=
NULL
Ë&& (
∑ckë
!=NULL)){

4471 i‡(
h264_ícode_c⁄åﬁ
->
vlcI¡rLí
&3) {

4472 
u32
 *
buf
;

4473 
buf
 = (
u32
*)&
∑ckë
->
d©a
[’ackë->
∑ylﬂd_Àn
&0xfffffffc)];

4474 #ifde‡ 
ARM_PLATFORM


4475 *
buf
 &= 0x0000ffff;

4477 #ifde‡ 
POWERPC_PLATFORM


4478 *
buf
 &= 0xffff0000;

4482 
h264_ícode_c⁄åﬁ
->
›
->
	`nŸify
(h264_ícode_c⁄åﬁ, 
h264_logic_ícode_ch™
, 
chù
);

4483  
VLC_STATUS_OVER
;

4486 i‡(
h264_ícode_c⁄åﬁ
->
vlc_°©us
)

4487  
VLC_STATUS_NEED_PROCESS
;

4489  
VLC_STATUS_NULL
;

4490 
	}
}

4492 
	$tw5864_h264_ícode_c⁄åﬁ_nŸify
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
, 
dvm_chù_t
 *
chù
)

4494 
tw_video_‰ame_tcb_queue_t
 *
ícode_‰ame_queue
;

4495 
tw_video_‰ame_tcb_t
 *
‰ame
;

4496 
chù_ícode_ch™_£rvi˚_queue_t
 *
chù_ícode_£rvi˚_queue
;

4497 
ed_tcb_t
 *
›íed_logic_ch™_ed
;

4498 
tw_h264_ícode_dñè_t
 *
dñè
;

4499 
u32
 
vÆ
;

4501 
h264_ícode_c⁄åﬁ
->
	`dñëe_ícode_timeout_hook
(h264_encode_control);

4502 
h264_ícode_c⁄åﬁ
->
vlc_°©us
 = 0;

4503 
h264_logic_ícode_ch™
->
rc_drivî
.
rc_›
->
	`upd©e_rc
(h264_logic_encode_chan);

4504 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENCODER_VLC_INTR_STATUS
, 
VLC_INTR_MASK_ALL
);

4505 if(
h264_logic_ícode_ch™
->
ma°î_¶Ÿ
 !
NULL
){

4506 
h264_logic_ícode_ch™
->
ma°î_¶Ÿ
->
›
->
	`ícode_ídof¶i˚_nŸify
(h264_logic_encode_chan->master_slot, h264_logic_encode_chan);

4509 
dñè
 = &
h264_ícode_c⁄åﬁ
->
ícode_dñè
;

4510 
	`do_gëtimeofday
(&
dñè
->
cuº_time
);

4511 
vÆ
 = 
	`timevÆ_to_ns
(&
dñè
->
cuº_time
Ë-ÅimevÆ_to_ns(&dñè->
œ°_time
);

4512 
vÆ
 = val / 1000;

4513 if(
dñè
->
max_dñè
 == 0) {

4514 
dñè
->
max_dñè
 = 
vÆ
;

4516 if(
dñè
->
mö_dñè
 == 0) {

4517 
dñè
->
mö_dñè
 = 
vÆ
;

4519 if(
dñè
->
max_dñè
 < 
vÆ
) {

4520 
dñè
->
max_dñè
 = 
vÆ
;

4522 if(
dñè
->
mö_dñè
 > 
vÆ
) {

4523 
dñè
->
mö_dñè
 = 
vÆ
;

4525 
dñè
->
cur_dñè
 = 
vÆ
;

4527 
ícode_‰ame_queue
 = &
h264_logic_ícode_ch™
->encode_frame_queue;

4528 
‰ame
 = 
ícode_‰ame_queue
->
cuº_¥odu˚r
;

4529 if(
‰ame
 !
NULL
){

4530 
chù
->
	`uƒegi°î_cuº_h264_ícode_ch™
(chù, 
h264_logic_ícode_ch™
);

4531 if(
h264_ícode_c⁄åﬁ
->
ovîÊow
){

4532 
h264_ícode_c⁄åﬁ
->
ovîÊow
 = 0;

4533 
	`¥ötk
("\n\n%d ovîÊow %d\n\n", 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, 
h264_ícode_c⁄åﬁ
->
ovîÊow
);

4535 if(
‰ame
->
‰ame_is_îr
 == 0){

4536 
h264_«l_t
 *
«l
;

4538 
«l
 = &
‰ame
->nal;

4539 
‰ame
->
‰ame_Àn
 -(
«l
->
•s_∑ysize
 +ÇÆ->
µs_∑ysize
);

4540 #ifde‡ 
ADD_DVM_NAL_HEAD


4542 
h264_«l_bô°ªam_t
 *
h264_«l_¶i˚_hód
;

4543 
DVM_NAL_HEAD
 *
«l_¶i˚_hód
;

4544 
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
;

4545 
tw_video_∑ckë_tcb_t
 *
∑ckë
;

4546 
Êags
;

4547 
ªt
;

4549 
video_∑ckë_queue
 = &
‰ame
->video_packet_queue;

4550 
	`•ö_lock_úqßve
(&
video_∑ckë_queue
->
lock
, 
Êags
);

4551 
video_∑ckë_queue
->
›
->
	`åy_gë
(video_∑ckë_queue, &
∑ckë
);

4552 if(
∑ckë
 !
NULL
){

4553 
h264_«l_¶i˚_hód
 = (
h264_«l_bô°ªam_t
*)&
∑ckë
->
d©a
[
«l
->
•s_∑ysize
 +ÇÆ->
µs_∑ysize
];

4554 
«l_¶i˚_hód
 = &
h264_«l_¶i˚_hód
->
hód
;

4555 
ªt
 = 
‰ame
->
‰ame_Àn
 - (
DVM_NAL_HEAD
);

4556 
«l_¶i˚_hód
->
i_«l_size_0_7
 = (
ªt
&0xff);

4557 
«l_¶i˚_hód
->
i_«l_size_8_15
 = ((
ªt
>>8)&0xff);

4558 
«l_¶i˚_hód
->
i_«l_size_16_23
 = ((
ªt
>>16)&0xff);

4560 
video_∑ckë_queue
->
›
->
	`put_hódî
(video_∑ckë_queue, 
∑ckë
);

4561 
	`•ö_u∆ock_úqª°‹e
(&
video_∑ckë_queue
->
lock
, 
Êags
);

4565 
h264_ícode_c⁄åﬁ
->
i_Âm
++;

4566 
ícode_‰ame_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(encode_frame_queue);

4567 
h264_ícode_c⁄åﬁ
->
›
->
	`upd©e_©_ícode_‰ame_ok
(h264_encode_control);

4569 
ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_¥odu˚r
”ncode_‰ame_queue, &
h264_logic_ícode_ch™
->
ícode_ch™_buf_poﬁ
);

4570 
h264_ícode_c⁄åﬁ
->
›
->
	`upd©e_©_ícode_‰ame_îr
(h264_encode_control);

4571 
h264_ícode_c⁄åﬁ
->
b_f‹˚_i_‰ame
 = 1;

4574 
	`¥ötk
("%d:ch™_%d_%d disˇrd\n", 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

4575 
h264_logic_ícode_ch™
->
rc_drivî
.
rc_›
->
	`jump_rc
(h264_logic_encode_chan);

4576 
h264_ícode_c⁄åﬁ
->
›
->
	`upd©e_©_ícode_‰ame_îr
(h264_encode_control);

4579 
›íed_logic_ch™_ed
 = &
h264_logic_ícode_ch™
->opened_logic_chan_ed;

4580 
	`drivî_gí_dñivî_evít
(
›íed_logic_ch™_ed
, 1);

4581 
	`drivî_gí_dñivî_evít
(
›íed_logic_ch™_ed
, 1);

4582 
	`ícode_ch™_gí_ªq_msg
(
h264_logic_ícode_ch™
, 
REQ_ALGO_SLICE_HEAD
, 
NONBLOCK_OP
);

4584 
chù_ícode_£rvi˚_queue
 = &
chù
->chip_encode_service_queue;

4585 
chù_ícode_£rvi˚_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(chip_encode_service_queue);

4586 
chù_ícode_£rvi˚_queue
->
›
->
	`åiggî_chù_≥ndög_£rvi˚_ªque°
(chip_encode_service_queue);

4589 
	}
}

4591 
	$tw5864_h264_ícode_c⁄åﬁ_ícode_¥o˚ssög_timeout
(*
c⁄ãxt
)

4593 
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
 = (tw_h264_ícode_c⁄åﬁ_t*)
c⁄ãxt
;

4594 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

4595 
tw_video_‰ame_tcb_queue_t
 *
ícode_‰ame_queue
;

4596 
dvm_chù_t
 *
chù
;

4597 
ed_tcb_t
 *
›íed_logic_ch™_ed
;

4599 
h264_ícode_c⁄åﬁ
->
ícode_timeout_m⁄ô‹_timeid
 = 
INVALIDTIMERID
;

4600 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

4601 
chù
 = 
h264_logic_ícode_ch™
->chip;

4602 
›íed_logic_ch™_ed
 = &
h264_logic_ícode_ch™
->opened_logic_chan_ed;

4603 
ícode_‰ame_queue
 = &
h264_logic_ícode_ch™
->encode_frame_queue;

4604 
ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_¥odu˚r
”ncode_‰ame_queue, &
h264_logic_ícode_ch™
->
ícode_ch™_buf_poﬁ
);

4605 
h264_ícode_c⁄åﬁ
->
›
->
	`upd©e_©_ícode_‰ame_îr
(h264_encode_control);

4606 
h264_ícode_c⁄åﬁ
->
b_f‹˚_i_‰ame
 = 1;

4607 
h264_ícode_c⁄åﬁ
->
›
->
	`nŸify
(h264_ícode_c⁄åﬁ, 
h264_logic_ícode_ch™
, 
chù
);

4610 
	`¥ötk
("%s.%d:°©e=%d %d, %x=%x\n", 
__FUNCTION__
, 
__LINE__
, 
›íed_logic_ch™_ed
->
›
->
	`gë_°©e
(›íed_logic_ch™_ed), 
h264_logic_ícode_ch™
->
logic_ch™_id
, 
INTERRUPT_STATUS_REG_L
, 
chù
->
io_›
->
	`chù_ªad32
(chip, INTERRUPT_STATUS_REG_L));

4612 
	}
}

4614 
	$tw5864_h264_ícode_c⁄åﬁ_¥ï¨e_ícode_ªsour˚_timeout
(*
c⁄ãxt
)

4616 
	`¥ötk
("%s.%d\n", 
__FUNCTION__
, 
__LINE__
);

4618 
	}
}

4620 
	$tw5864_h264_ícode_dñay_ª°¨t
(*
c⁄ãxt
)

4622 
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
 = (tw_h264_ícode_c⁄åﬁ_t*)
c⁄ãxt
;

4623 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

4625 
h264_ícode_c⁄åﬁ
->
dñay_ª°¨t_ícode_timeid
 = 
INVALIDTIMERID
;

4626 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

4627 
	`h264_logic_ícode_ch™_dñay_ª°¨t_ícode
(
h264_logic_ícode_ch™
);

4629 
	}
}

4631 
	$ícode_ch™_add_ícode_timeout_hook
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

4633 
h264_ícode_c⁄åﬁ
->
	`dñëe_ícode_timeout_hook
(h264_encode_control);

4634 
h264_ícode_c⁄åﬁ
->
ícode_timeout_m⁄ô‹_timeid
 = 
	`AddSögÀFúeTimîJob
(
ENCODE_CHAN_TIMEOUT
, 
tw5864_h264_ícode_c⁄åﬁ_ícode_¥o˚ssög_timeout
, h264_encode_control);

4635 if(
h264_ícode_c⁄åﬁ
->
ícode_timeout_m⁄ô‹_timeid
 =
ADDJOBERROR
){

4636 
	`¥ötk
("%s.%d:áddÅimî hookÉº\n", 
__FUNCTION__
, 
__LINE__
);

4638 
	}
}

4640 
	$ícode_ch™_dñëe_ícode_timeout_hook
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

4642 
	`DñëeSögÀFúeTimîJob
(
h264_ícode_c⁄åﬁ
->
ícode_timeout_m⁄ô‹_timeid
);

4643 
h264_ícode_c⁄åﬁ
->
ícode_timeout_m⁄ô‹_timeid
 = 
INVALIDTIMERID
;

4644 
	}
}

4646 
	$ícode_ch™_add_dñay_ª°¨t_ícode_hook
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

4648 
h264_ícode_c⁄åﬁ
->
	`dñëe_dñay_ª°¨t_ícode_hook
(h264_encode_control);

4649 
h264_ícode_c⁄åﬁ
->
dñay_ª°¨t_ícode_timeid
 = 
	`AddSögÀFúeTimîJob
(
DELAY_COUNT
, 
tw5864_h264_ícode_dñay_ª°¨t
, h264_encode_control);

4650 if(
h264_ícode_c⁄åﬁ
->
dñay_ª°¨t_ícode_timeid
 =
ADDJOBERROR
){

4651 
	`¥ötk
("%s.%d:áddÅimî hookÉº\n", 
__FUNCTION__
, 
__LINE__
);

4653 
	}
}

4655 
	$ícode_ch™_dñëe_dñay_ª°¨t_ícode_hook
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

4657 
	`DñëeSögÀFúeTimîJob
(
h264_ícode_c⁄åﬁ
->
dñay_ª°¨t_ícode_timeid
);

4658 
h264_ícode_c⁄åﬁ
->
dñay_ª°¨t_ícode_timeid
 = 
INVALIDTIMERID
;

4659 
	}
}

4661 
	$tw5864_h264_ícode_c⁄åﬁ_öô
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

4663 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

4664 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

4665 
tw_h264_ícode_dñè_t
 *
dñè
;

4666 
cou¡
;

4667 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

4668 
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
;

4670 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

4671 
ícode_¥›îty
 = &
h264_logic_ícode_ch™
->encode_property;

4672 
	`©omic_£t
(&
h264_ícode_c⁄åﬁ
->
¶i˚_hód_™d_ad_°©us
, 0);

4673 
h264_ícode_c⁄åﬁ
->
‰ame_ty≥
 = 
H264_FRAME_TYPE_IDR
;

4674 
dñè
 = &
h264_ícode_c⁄åﬁ
->
ícode_dñè
;

4675 
phy_video_¶Ÿ
 = 
h264_logic_ícode_ch™
->
ma°î_¶Ÿ
;

4676 
logic_video_¶Ÿ
 = 
phy_video_¶Ÿ
->
¸oss_bus_logic_video_¶Ÿ
;

4678 
h264_ícode_c⁄åﬁ
->
b_f‹˚_i_‰ame
 = 1;

4679 
h264_ícode_c⁄åﬁ
->
i_‰ame_£rül
 = 0;

4680 
h264_ícode_c⁄åﬁ
->
i_‰ameNumbî
 = 0;

4681 
h264_ícode_c⁄åﬁ
->
i_¶i˚_‰ame_num
 = 0;

4682 
h264_ícode_c⁄åﬁ
->
i_¸ossbus_Âs
 = 
logic_video_¶Ÿ
->
›
->
	`gë_Âs
(logic_video_slot);

4683 
h264_ícode_c⁄åﬁ
->
i_‰ame_≥r_£c⁄d
 = 0;

4684 
h264_ícode_c⁄åﬁ
->
i_g›_°ride
 = 0;

4685 
h264_ícode_c⁄åﬁ
->
i_p_°ride
 = 0;

4686 
h264_ícode_c⁄åﬁ
->
i_åiggî_sync_cou¡î
 = 0;

4687 
h264_ícode_c⁄åﬁ
->
i_°©i°ic_möuãr_cou¡î
 = 0;

4688 
h264_ícode_c⁄åﬁ
->
ad_check
 = 0;

4689 
h264_ícode_c⁄åﬁ
->
ad_dñè1
 = 0;

4690 
h264_ícode_c⁄åﬁ
->
ad_dñè2
 = 0;

4691 
h264_ícode_c⁄åﬁ
->
ad_dñè3
 = 0;

4692 
h264_ícode_c⁄åﬁ
->
œ°_jiffõs
 = 0;

4693 
h264_ícode_c⁄åﬁ
->
i_cuº_Âs
 = 0;

4694 
h264_ícode_c⁄åﬁ
->
i_ﬁd_Âs
 = 0;

4695 
h264_ícode_c⁄åﬁ
->
i_Âm
 = 0;

4696 
h264_ícode_c⁄åﬁ
->
i_Âs
 = 0;

4697 
h264_ícode_c⁄åﬁ
->
ad_ªady
 = 0;

4698 
h264_ícode_c⁄åﬁ
->
i_œ°_idr
 = -
ícode_¥›îty
->
›
->
	`gë_keyFømeI¡îvÆs
(encode_property);

4699 
h264_ícode_c⁄åﬁ
->
i_idr_pic_id
 = 0;

4700 
h264_ícode_c⁄åﬁ
->
i_cuº_qp
 = 
ícode_¥›îty
->
›
->
	`gë_qpi
(encode_property);

4701 
h264_ícode_c⁄åﬁ
->
i_cuº_œmda
 = 
Lambda_lookup_èbÀ
[h264_ícode_c⁄åﬁ->
i_cuº_qp
];

4702 
h264_ícode_c⁄åﬁ
->
›
->
	`upd©e_image_ªsﬁuti⁄
(h264_encode_control);

4704 
cou¡
 = 
h264_ícode_c⁄åﬁ
->
i_¸ossbus_Âs
;

4705 
h264_ícode_c⁄åﬁ
->
i_‰ame_≥r_£c⁄d
 = 0;

4706 
h264_ícode_c⁄åﬁ
->
i_so·w¨e_disˇrd_‰ame_èbÀ
 = 0;

4708 
cou¡
>0){

4709 
h264_ícode_c⁄åﬁ
->
i_so·w¨e_disˇrd_‰ame_èbÀ
 |= 1;

4710 if(
cou¡
 > 1){

4711 
h264_ícode_c⁄åﬁ
->
i_so·w¨e_disˇrd_‰ame_èbÀ
 <<= 1;

4713 
cou¡
--;

4716 
h264_ícode_c⁄åﬁ
->
›
->
	`upd©e_Âs_disˇrd_èbÀ
(h264_ícode_c⁄åﬁ, h264_ícode_c⁄åﬁ->
i_¸ossbus_Âs
,

4717 
ícode_¥›îty
->
›
->
	`gë_èrgë_Âs
(encode_property));

4720 
h264_ícode_c⁄åﬁ
->
•s
 = h264_ícode_c⁄åﬁ->
•s_¨øy
;

4721 
h264_ícode_c⁄åﬁ
->
µs
 = h264_ícode_c⁄åﬁ->
µs_¨øy
;

4722 
h264_ícode_c⁄åﬁ
->
¶i˚_hód
 = h264_ícode_c⁄åﬁ->
¶i˚_hód_¨øy
;

4723 
h264_ícode_c⁄åﬁ
->
›
->
	`£t_•s
(h264_encode_control);

4724 
h264_ícode_c⁄åﬁ
->
›
->
	`£t_µs
(h264_encode_control);

4725 
h264_ícode_c⁄åﬁ
->
›
->
	`£t_¶i˚_hód
(h264_encode_control);

4727 
h264_ícode_c⁄åﬁ
->
ovîÊow
 = 0;

4728 
h264_ícode_c⁄åﬁ
->
vlc_°©us
 = 0;

4729 
h264_ícode_c⁄åﬁ
->
vlcI¡rLí
 = 0;

4731 
dñè
->
max_dñè
 = 0;

4732 
dñè
->
mö_dñè
 = 0;

4733 
	`mem£t
(&
dñè
->
cuº_time
, 0, (
timevÆ
));

4734 
	`mem£t
(&
dñè
->
œ°_time
, 0, (
timevÆ
));

4735 
h264_ícode_c⁄åﬁ
->
ícode_timeout_m⁄ô‹_timeid
 = 
INVALIDTIMERID
;

4736 
h264_ícode_c⁄åﬁ
->
add_ícode_timeout_hook
 = 
ícode_ch™_add_ícode_timeout_hook
;

4737 
h264_ícode_c⁄åﬁ
->
dñëe_ícode_timeout_hook
 = 
ícode_ch™_dñëe_ícode_timeout_hook
;

4739 
h264_ícode_c⁄åﬁ
->
dñay_ª°¨t_ícode_timeid
 = 
INVALIDTIMERID
;

4740 
h264_ícode_c⁄åﬁ
->
add_dñay_ª°¨t_ícode_hook
 = 
ícode_ch™_add_dñay_ª°¨t_ícode_hook
;

4741 
h264_ícode_c⁄åﬁ
->
dñëe_dñay_ª°¨t_ícode_hook
 = 
ícode_ch™_dñëe_dñay_ª°¨t_ícode_hook
;

4742 
	}
}

4744 
	$tw5864_h264_ícode_c⁄åﬁ_ª£t
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

4746 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

4747 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

4748 
tw_h264_ícode_dñè_t
 *
dñè
;

4749 
cou¡
;

4750 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

4751 
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
;

4753 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

4754 
	`TW_DBG
(
TW_DBG_DEBUG
, "ª£àch™√»%d\n", 
h264_logic_ícode_ch™
->
logic_ch™_id
);

4755 
	`©omic_£t
(&
h264_logic_ícode_ch™
->
›íed_Êag
, 0);

4756 
	`©omic_£t
(&
h264_logic_ícode_ch™
->
have_dñivî_sync_Êag
, 0);

4757 
ícode_¥›îty
 = &
h264_logic_ícode_ch™
->encode_property;

4758 
dñè
 = &
h264_ícode_c⁄åﬁ
->
ícode_dñè
;

4759 
	`©omic_£t
(&
h264_ícode_c⁄åﬁ
->
¶i˚_hód_™d_ad_°©us
, 0);

4760 
phy_video_¶Ÿ
 = 
h264_logic_ícode_ch™
->
ma°î_¶Ÿ
;

4761 
logic_video_¶Ÿ
 = 
phy_video_¶Ÿ
->
¸oss_bus_logic_video_¶Ÿ
;

4763 
h264_ícode_c⁄åﬁ
->
‰ame_ty≥
 = 
H264_FRAME_TYPE_IDR
;

4764 
h264_ícode_c⁄åﬁ
->
b_f‹˚_i_‰ame
 = 1;

4765 
h264_ícode_c⁄åﬁ
->
i_‰ameNumbî
 = 0;

4766 
h264_ícode_c⁄åﬁ
->
i_‰ame_£rül
 = 0;

4767 
h264_ícode_c⁄åﬁ
->
i_g›_°ride
 = 0;

4768 
h264_ícode_c⁄åﬁ
->
i_¶i˚_‰ame_num
 = 0;

4769 
h264_ícode_c⁄åﬁ
->
i_¸ossbus_Âs
 = 
logic_video_¶Ÿ
->
›
->
	`gë_Âs
(logic_video_slot);

4770 
h264_ícode_c⁄åﬁ
->
i_p_°ride
 = 0;

4771 
h264_ícode_c⁄åﬁ
->
i_åiggî_sync_cou¡î
 = 0;

4772 
h264_ícode_c⁄åﬁ
->
i_°©i°ic_möuãr_cou¡î
 = 0;

4773 
h264_ícode_c⁄åﬁ
->
ad_check
 = 0;

4774 
h264_ícode_c⁄åﬁ
->
ad_dñè1
 = 0;

4775 
h264_ícode_c⁄åﬁ
->
ad_dñè2
 = 0;

4776 
h264_ícode_c⁄åﬁ
->
ad_dñè3
 = 0;

4777 
h264_ícode_c⁄åﬁ
->
œ°_jiffõs
 = 0;

4778 
h264_ícode_c⁄åﬁ
->
i_cuº_Âs
 = 0;

4779 
h264_ícode_c⁄åﬁ
->
i_ﬁd_Âs
 = 0;

4780 
h264_ícode_c⁄åﬁ
->
i_Âm
 = 0;

4781 
h264_ícode_c⁄åﬁ
->
i_Âs
 = 0;

4782 
h264_ícode_c⁄åﬁ
->
ad_ªady
 = 0;

4783 
h264_ícode_c⁄åﬁ
->
i_œ°_idr
 = -
ícode_¥›îty
->
›
->
	`gë_keyFømeI¡îvÆs
(encode_property);

4784 
h264_ícode_c⁄åﬁ
->
i_idr_pic_id
 = 0;

4785 
h264_ícode_c⁄åﬁ
->
i_cuº_qp
 = 
ícode_¥›îty
->
›
->
	`gë_qpi
(encode_property);

4786 
h264_ícode_c⁄åﬁ
->
i_cuº_œmda
 = 
Lambda_lookup_èbÀ
[h264_ícode_c⁄åﬁ->
i_cuº_qp
];

4788 
cou¡
 = 
h264_ícode_c⁄åﬁ
->
i_¸ossbus_Âs
;

4789 
h264_ícode_c⁄åﬁ
->
i_‰ame_≥r_£c⁄d
 = 0;

4790 
h264_ícode_c⁄åﬁ
->
i_so·w¨e_disˇrd_‰ame_èbÀ
 = 0;

4792 
cou¡
>0){

4793 
h264_ícode_c⁄åﬁ
->
i_so·w¨e_disˇrd_‰ame_èbÀ
 |= 1;

4794 if(
cou¡
 > 1){

4795 
h264_ícode_c⁄åﬁ
->
i_so·w¨e_disˇrd_‰ame_èbÀ
 <<= 1;

4797 
cou¡
--;

4800 
h264_ícode_c⁄åﬁ
->
›
->
	`upd©e_Âs_disˇrd_èbÀ
(h264_ícode_c⁄åﬁ, h264_ícode_c⁄åﬁ->
i_¸ossbus_Âs
,

4801 
ícode_¥›îty
->
›
->
	`gë_èrgë_Âs
(encode_property));

4803 
h264_ícode_c⁄åﬁ
->
›
->
	`upd©e_image_ªsﬁuti⁄
(h264_encode_control);

4804 
h264_ícode_c⁄åﬁ
->
ovîÊow
 = 0;

4805 
h264_ícode_c⁄åﬁ
->
vlc_°©us
 = 0;

4806 
h264_ícode_c⁄åﬁ
->
vlcI¡rLí
 = 0;

4807 
dñè
->
max_dñè
 = 0;

4808 
dñè
->
mö_dñè
 = 0;

4809 
	`mem£t
(&
dñè
->
cuº_time
, 0, (
timevÆ
));

4810 
	`mem£t
(&
dñè
->
œ°_time
, 0, (
timevÆ
));

4811 
h264_ícode_c⁄åﬁ
->
	`dñëe_ícode_timeout_hook
(h264_encode_control);

4812 
	}
}

4814 
	$tw5864_h264_ícode_c⁄åﬁ_ch™_ˇn_com∂ëe
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

4816 if(
h264_ícode_c⁄åﬁ
 !
NULL
){

4817 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

4818 
ed_tcb_t
 *
›íed_logic_ch™_ed
 = &
h264_logic_ícode_ch™
->opened_logic_chan_ed;

4819 if(
›íed_logic_ch™_ed
->
ed
.
›
 !
NULL
){

4820 
	`©omic_£t
(&
›íed_logic_ch™_ed
->
°©e
, 
TW_ED_CLOSED
);

4821 
›íed_logic_ch™_ed
->
ed
.
›
->
	`com∂ëe_d⁄e
(&opened_logic_chan_ed->ed);

4822 
	`¥ötk
("\n****ch™_%d_%d: com∂ëe_d⁄e, %d*****\n", 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
, 
__LINE__
);

4825 
	}
}

4827 
tw_h264_ícode_c⁄åﬁ_›î©i⁄
 
	gtw5864_h264_ícode_c⁄åﬁ_›
 = {

4828 .
öô
 = 
tw5864_h264_ícode_c⁄åﬁ_öô
,

4829 .
	gª£t
 = 
tw5864_h264_ícode_c⁄åﬁ_ª£t
,

4831 .
	g£t_•s
 = 
tw5864_h264_ícode_c⁄åﬁ_£t_•s
,

4832 .
	g£t_µs
 = 
tw5864_h264_ícode_c⁄åﬁ_£t_µs
,

4833 .
	g£t_¶i˚_hód
 = 
tw5864_h264_ícode_c⁄åﬁ_£t_¶i˚_hód
,

4834 .
	ggíî©‹_hód
 = 
tw5864_h264_ícode_c⁄åﬁ_gíî©‹_hód
,

4836 .
	gˇlcuœã_‰ame_ty≥
 = 
tw5864_h264_ícode_c⁄åﬁ_ˇlcuœã_‰ame_ty≥
,

4837 .
	ggë_‰ame_ty≥
 = 
tw5864_h264_ícode_c⁄åﬁ_gë_‰ame_ty≥
,

4838 .
	gf‹˚_I_‰ame
 = 
tw5864_h264_ícode_c⁄åﬁ_f‹˚_I_‰ame
,

4839 .
	gupd©e_©_ícode_‰ame_ok
 = 
tw5864_h264_ícode_c⁄åﬁ_upd©e_©_ícode_‰ame_ok
,

4840 .
	gupd©e_©_disˇrd_‰ame
 = 
tw5864_h264_ícode_c⁄åﬁ_upd©e_©_disˇrd_‰ame
,

4841 .
	gupd©e_©_ícode_‰ame_îr
 = 
tw5864_h264_ícode_c⁄åﬁ_upd©e_©_ícode_‰ame_îr
,

4842 .
	gupd©e_image_ªsﬁuti⁄
 = 
tw5864_h264_ícode_c⁄åﬁ_upd©e_image_ªsﬁuti⁄
,

4843 .
	gupd©e_Âs_disˇrd_èbÀ
 = 
tw5864_h264_ícode_c⁄åﬁ_upd©e_Âs_disˇrd_èbÀ
,

4845 .
	ggë_¶i˚_hód_™d_ad_°©us
 = 
tw5864_h264_ícode_c⁄åﬁ_gë_¶i˚_hód_™d_ad_°©us
,

4846 .
	g˛ór_¶i˚_hód_™d_ad_°©us
 = 
tw5864_h264_ícode_c⁄åﬁ_˛ór_¶i˚_hód_™d_ad_°©us
,

4847 .
	gupd©e_¶i˚_hód_ªady
 = 
tw5864_h264_ícode_c⁄åﬁ_upd©e_¶i˚_hód_ªady
,

4848 .
	g˛ór_¶i˚_hód_ªady
 = 
tw5864_h264_ícode_c⁄åﬁ_˛ór_¶i˚_hód_ªady
,

4849 .
	gupd©e_ad_ªady
 = 
tw5864_h264_ícode_c⁄åﬁ_upd©e_ad_ªady
,

4850 .
	g˛ór_ad_ªady
 = 
tw5864_h264_ícode_c⁄åﬁ_˛ór_ad_ªady
,

4851 .
	ggë_ad_°©us
 = 
tw5864_h264_ícode_c⁄åﬁ_gë_ad_°©us
,

4853 .
	gfú°_°¨t
 = 
tw5864_h264_ícode_c⁄åﬁ_fú°_°¨t
,

4854 .
	g°¨t_ícode
 = 
tw5864_h264_ícode_c⁄åﬁ_°¨t_ícode
,

4856 .
	gúq_func
 = 
tw5864_h264_ícode_c⁄åﬁ_úq_func
,

4857 .
	gªad_vlc_∑øm
 = 
tw5864_h264_ícode_c⁄åﬁ_ªad_vlc_∑øm
,

4858 .
	gˇlcuœã_mov_∑øm
 = 
tw5864_h264_ícode_c⁄åﬁ_ˇlcuœã_mov_∑øm
,

4859 .
	gmov_vlc_codög
 = 
tw5864_h264_ícode_c⁄åﬁ_mov_vlc_codög
,

4860 .
	gchù_pög_p⁄g_upd©e
 = 
tw5864_h264_ícode_c⁄åﬁ_chù_pög_p⁄g_upd©e
,

4861 .
	gnŸify
 = 
tw5864_h264_ícode_c⁄åﬁ_nŸify
,

4863 .
	gch™_ˇn_com∂ëe
 = 
tw5864_h264_ícode_c⁄åﬁ_ch™_ˇn_com∂ëe
,

4866 
	$tw5864_h264_ícode_c⁄åﬁ_through_ddr_°¨t_ícode
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

4868 if((
h264_ícode_c⁄åﬁ
!=
NULL
)){

4869 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

4870 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
;

4871 
ed_tcb_t
 *
›íed_logic_ch™_ed
;

4872 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

4873 
tw_h264_ícode_„©uª_t
 *
ícode_„©uª
;

4874 
tw_h264_phy_video_¶Ÿ_t
 *
ma°î_¶Ÿ
;

4875 
dvm_chù_t
 *
chù
;

4876 
chù_drivî_t
 *
chù_drivî
;

4877 
tw_video_bus_t
 *
video_bus
;

4878 
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_queue
;

4879 
tw_video_‰ame_tcb_t
 *
‰ame
;

4880 
tw_h264_ícode_dñè_t
 *
dñè
;

4881 
ícodeSize
,
video_mode
 = 0;

4882 
n‹m
;

4883 
tw_ed_fsm_t
 *
ed_fsm
;

4885 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

4886 
›íed_logic_ch™_ed
 = &
h264_logic_ícode_ch™
->opened_logic_chan_ed;

4887 
ícode_¥›îty
 = &
h264_logic_ícode_ch™
->encode_property;

4888 
ícode_„©uª
 = &
ícode_¥›îty
->encode_feature;

4889 
ma°î_¶Ÿ
 = 
h264_logic_ícode_ch™
->master_slot;

4890 
chù
 = 
h264_logic_ícode_ch™
->chip;

4891 
chù_drivî
 = 
chù
->chip_driver;

4892 
video_bus
 = &
chù_drivî
->video_bus;

4893 
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

4894 
video_‰ame_queue
 = &
h264_logic_ícode_ch™
->
ícode_‰ame_queue
;

4895 
dñè
 = &
h264_ícode_c⁄åﬁ
->
ícode_dñè
;

4897 
n‹m
 = 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus);

4898 
ed_fsm
 = &
›íed_logic_ch™_ed
->ed_fsm;

4899 if(
ed_fsm
->
›
->
	`gë_cuº_°©e
”d_fsmË=
TW_ED_STANDBY
){

4900 
‰ame
 = 
video_‰ame_queue
->
cuº_¥odu˚r
;

4901 
ma°î_¶Ÿ
->
›
->
	`£t_¶Ÿ_ícode_±r
(ma°î_¶Ÿ, 
chù
, 
h264_logic_ícode_ch™
);

4902 
‰ame
->
time°amp
 = 
ma°î_¶Ÿ
->
›
->
	`gë_time°amp
(master_slot);

4903 
‰ame
->
duøti⁄
 = 40;

4904 
‰ame
->
i_cuº_qp
 = 
h264_ícode_c⁄åﬁ
->i_curr_qp;

4905 
‰ame
->
i_mb_x
 = 
h264_ícode_c⁄åﬁ
->i_mb_x;

4906 
‰ame
->
i_mb_y
 = 
h264_ícode_c⁄åﬁ
->i_mb_y;

4907 
‰ame
->
‰ame_numbî
 = 
h264_ícode_c⁄åﬁ
->
i_‰ame_£rül
;

4908 
‰ame
->
i_log_g›_vÆue
 = 
h264_ícode_c⁄åﬁ
->
•s
->
i_log2_max_‰ame_num
;

4909 
‰ame
->
Âs
 = 
ícode_¥›îty
->
›
->
	`gë_èrgë_Âs
(encode_property);

4911 if((
h264_ícode_c⁄åﬁ
->
i_so·w¨e_disˇrd_‰ame_èbÀ
 & (1<<h264_ícode_c⁄åﬁ->
i_‰ame_≥r_£c⁄d
))

4912 || (
‰ame
->
‰ame_ty≥
==
H264_FRAME_TYPE_IDR
Ë|| (‰ame->‰ame_ty≥==
H264_FRAME_TYPE_I
)){

4913 if(
chù_d¥am_c⁄åﬁÀr
->
›
->
	`is_ˇn_submô_h264_ícode_£rvi˚_ªq
(chù_d¥am_c⁄åﬁÀr, &
h264_logic_ícode_ch™
->
video_bô°ªam_buf
)){

4914 
h264_«l_t
 *
«l
 = &
‰ame
->nal;

4915 
£n_ty≥
=0x4, 
mode_£À˘
,
mbdñay
;

4916 
hód_vÆue
;

4917 
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
 = &
‰ame
->video_packet_queue;

4918 
tw_video_∑ckë_tcb_t
 *
∑ckë
 = 
video_∑ckë_queue
->
cuº_¥odu˚r
;

4919 
__u8
 *
hód_buf_±r
 = 
∑ckë
->
d©a
;

4920 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
FRAMERESOLUTION
, ((
h264_ícode_c⁄åﬁ
->
i_mb_x
<<8)|h264_ícode_c⁄åﬁ->
i_mb_y
));

4921 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
REFFRAMEINDEX
, ((
h264_ícode_c⁄åﬁ
->
i_vd_ª„ªn˚_±r
<<12)|((h264_encode_control->i_vd_reference_ptr+3)&3)));

4922 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MBADDR
, 
h264_ícode_c⁄åﬁ
->
i_fú°_mb_x_™d_y
);

4924 
mode_£À˘
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
CIF_MAP_D1_MODE
);

4925 
mode_£À˘
 &= 0xfffffc0;

4926 
mode_£À˘
 |= 0x100;

4927 
mode_£À˘
 |(((
h264_logic_ícode_ch™
->
video_bô°ªam_buf
->
›
->
	`gë_buf_id
(h264_logic_encode_chan->video_bitstream_buf))&0x7)<<2);

4928 
ma°î_¶Ÿ
->
›
->
	`gë_video_size
(master_slot)){

4929 
TW_VIDEO_SIZE_CIF
:

4930 if(
chù
->
video_ícode_ˇp
->
ddr_m≠_mode
 =
DDR_MAP_COMPRESS_DISABLE
){

4931 
mode_£À˘
 |= 0x40;

4935 
mode_£À˘
 &= ~0x40;

4937 
video_mode
 = 0x00;

4939 
TW_VIDEO_SIZE_HALF_D1
:

4940 if(
chù
->
video_ícode_ˇp
->
ddr_m≠_mode
 =
DDR_MAP_COMPRESS_DISABLE
){

4941 
mode_£À˘
 |= 0x80;

4945 
mode_£À˘
 &= ~0x80;

4947 
video_mode
 = 0x03;

4950 
TW_VIDEO_SIZE_D1
:

4951 
video_mode
 = 0x01;

4954 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
CIF_MAP_D1_MODE
, 
mode_£À˘
);

4955 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
CDC_VLCS_MASTER_REG
, 
ENABLE_VLC_BITSTREAM_SEND_DDR
);

4956 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENCODER_VLC_PARAM
, ( (
MASK_HARDWARE_INSERT_03
|
ENABLE_VLC_FLOWCONTROL
|
ENABLE_CDC_VLCS_MAST_R
|
ENABLE_INSERT_03
|
h264_ícode_c⁄åﬁ
->
i_cuº_qp
) ));

4958 
‰ame
->
‰ame_Àn
){

4959 if(
‰ame
->
‰ame_Àn
 == 0){

4960 
	`¥ötk
("\n&&&&&&&&&&&&&&&&&&&&impossibÀ %d&&&&&&&&&&&&&&&&&&&&&&&\n", 
__LINE__
);

4963 
hód_vÆue
 = *
hód_buf_±r
;

4964 
hód_vÆue
 <<= 8;

4965 
hód_buf_±r
++;

4966 
‰ame
->
‰ame_Àn
--;

4967 if(
‰ame
->
‰ame_Àn
 == 0){

4968 
	`¥ötk
("\n&&&&&&&&&&&&&&&&&&&&impossibÀ %d&&&&&&&&&&&&&&&&&&&&&&&\n", 
__LINE__
);

4971 
hód_vÆue
 |*
hód_buf_±r
;

4972 
hód_vÆue
 <<= 16;

4973 
hód_buf_±r
++;

4974 
‰ame
->
‰ame_Àn
--;

4975 
hód_vÆue
 |= 0x8000;

4976 
hód_vÆue
 |= (16<<8);

4977 #ifde‡
POWERPC_PCI_PLATFORM


4978 
hód_vÆue
 |= 0x2;

4980 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENABLE_VLC_LOOKUP_TABLE
, 
hód_vÆue
);

4983 if(
«l
->
i_ãmp_bôÆign_numbî
){

4984 
hód_vÆue
 = 
«l
->
i_ãmp_bôÆign_c⁄ã¡
;

4985 
hód_vÆue
 >>(16-
«l
->
i_ãmp_bôÆign_numbî
);

4986 
hód_vÆue
 <<= 16;

4987 
hód_vÆue
 |= 0x8000;

4988 
hód_vÆue
 |(
«l
->
i_ãmp_bôÆign_numbî
<<8);

4989 #ifde‡
POWERPC_PCI_PLATFORM


4990 
hód_vÆue
 |= 0x2;

4992 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENABLE_VLC_LOOKUP_TABLE
, 
hód_vÆue
);

4995 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENCODER_VLC_PARAM
, ( (
ENABLE_VLC_FLOWCONTROL
|
ENABLE_CDC_VLCS_MAST_R
|
ENABLE_INSERT_03
|
h264_ícode_c⁄åﬁ
->
i_cuº_qp
) ));

4997 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
QP
, 
h264_ícode_c⁄åﬁ
->
i_cuº_qp
);

4998 
h264_ícode_c⁄åﬁ
->
i_cuº_œmda
 = 
Lambda_lookup_èbÀ
[h264_ícode_c⁄åﬁ->
i_cuº_qp
];

4999 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
LAMDA
, 
h264_ícode_c⁄åﬁ
->
i_cuº_œmda
);

5001 if(
ícode_„©uª
->
›
->
	`gë_i_4x4
(encode_feature)) {

5002 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MB4X4LAMDA
, 
I¡ø4X4_Lambda3
[
h264_ícode_c⁄åﬁ
->
i_cuº_qp
]);

5003 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRAENABLE
, 0x0070);

5005 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRAENABLE
, 0x0060);

5008 
ícodeSize
 = 
ícode_¥›îty
->
›
->
	`gë_ícodeSize
(encode_property);

5009 
ma°î_¶Ÿ
->
›
->
	`gë_video_size
(master_slot)){

5011 
TW_VIDEO_SIZE_D1
:

5012 
ícodeSize
){

5013 
TW_VIDEO_SIZE_QCIF
:

5014 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

5015 
£n_ty≥
 = 0xa4;

5017 
£n_ty≥
 = 0x1a4;

5020 
TW_VIDEO_SIZE_CIF
:

5021 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

5022 
£n_ty≥
 = 0x54;

5024 
£n_ty≥
 = 0x154;

5027 
TW_VIDEO_SIZE_HALF_D1
:

5028 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

5029 
£n_ty≥
 = 0x44;

5031 
£n_ty≥
 = 0x144;

5035 
TW_VIDEO_SIZE_D1
:

5036 if(
ícode_„©uª
->
›
->
	`gë_deöãæa˚
(encode_feature)){

5037 
£n_ty≥
 = 0x6;

5039 
£n_ty≥
 = 0x4;

5044 
TW_VIDEO_SIZE_HALF_D1
:

5045 
ícodeSize
) {

5047 
TW_VIDEO_SIZE_HALF_D1
:

5048 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

5049 
£n_ty≥
 = 0x04;

5051 
£n_ty≥
 = 0x104;

5054 
TW_VIDEO_SIZE_D1
:

5055 
	`¥ötk
("%s.%dÇÿsuΩp‹t\n", 
__FUNCTION__
, 
__LINE__
);

5057 
TW_VIDEO_SIZE_CIF
:

5058 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

5059 
£n_ty≥
 = 0x14;

5061 
£n_ty≥
 = 0x114;

5064 
TW_VIDEO_SIZE_QCIF
:

5065 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

5066 
£n_ty≥
 = 0x64;

5068 
£n_ty≥
 = 0x164;

5073 
TW_VIDEO_SIZE_CIF
:

5074 
ícodeSize
){

5075 
TW_VIDEO_SIZE_QCIF
:

5076 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

5077 
£n_ty≥
 = 0x54;

5079 
£n_ty≥
 = 0x154;

5082 
TW_VIDEO_SIZE_CIF
:

5083 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

5084 
£n_ty≥
 = 0x04;

5086 
£n_ty≥
 = 0x104;

5090 
TW_VIDEO_SIZE_D1
:

5091 
TW_VIDEO_SIZE_HALF_D1
:

5092 
	`¥ötk
("%s.%dÇÿsuΩp‹t\n", 
__FUNCTION__
, 
__LINE__
);

5097 
mbdñay
 = 
ícode_„©uª
->
›
->
	`gë_mb_dñay
(encode_feature);

5098 if(
mbdñay
 <= 240) {

5099 
mbdñay
 >>= 4;

5100 
mbdñay
 &= 0xf;

5101 
mbdñay
 <<= 8;

5102 
mbdñay
 |= (0 << 4);

5104 
mbdñay
 >>= 7;

5105 
mbdñay
 &= 0xf;

5106 
mbdñay
 <<= 8;

5107 
mbdñay
 |= (1 << 4);

5109 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
CHANNEL_ID
, (
ma°î_¶Ÿ
->
phy_¶Ÿ_id
|
mbdñay
|
DDR_B_CHIP
));

5110 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTERSTART
, 
£n_ty≥
);

5111 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MODE
, chù->
video_ícode_ˇp
->
ícode_ªg_4
 | (
video_mode
 << 6));

5113 if(
s_⁄ly_i_4x4
 == 0) {

5114 if(
ícode_„©uª
->
›
->
	`gë_i_4x4
(encode_feature)) {

5115 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MB4X4LAMDA
, 
I¡ø4X4_Lambda3
[
h264_ícode_c⁄åﬁ
->
i_cuº_qp
]);

5116 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRAENABLE
, 0x0070);

5118 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRAENABLE
, 0x0060);

5122 
h264_ícode_c⁄åﬁ
->
‰ame_ty≥
) {

5123 
H264_FRAME_TYPE_P
:

5124 
mode_£À˘
 = 0x2c;

5125 if(
ícode_„©uª
->
›
->
	`gë_skù
(encode_feature)) {

5126 
mode_£À˘
 |= 0x90;

5128 
mode_£À˘
 &= ~(0x90);

5130 if(
ícode_„©uª
->
›
->
	`gë_hÆf_pixñ
(encode_feature)){

5131 
mode_£À˘
 |= 0x02;

5133 
mode_£À˘
 &= 0xfd;

5135 if(
ícode_„©uª
->
›
->
	`gë_qu¨ãr_pixñ
(encode_feature)) {

5136 
mode_£À˘
 |= 0x01;

5138 
mode_£À˘
 &= 0xfe;

5141 if(
ícode_„©uª
->
›
->
	`gë_i_4x4
(encode_feature)) {

5142 if(
s_⁄ly_i_4x4
 == 0) {

5143 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MB4X4LAMDA
, 
I¡ø4X4_Lambda3
[
h264_ícode_c⁄åﬁ
->
i_cuº_qp
]);

5144 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRAENABLE
, 0x0070);

5146 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRAENABLE
, 0x0060);

5149 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRAENABLE
, 0x0060);

5153 
H264_FRAME_TYPE_IDR
:

5154 
H264_FRAME_TYPE_I
:

5155 
mode_£À˘
 = 0x8;

5156 if(
ícode_„©uª
->
›
->
	`gë_i_4x4
(encode_feature)) {

5157 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MB4X4LAMDA
, 
I¡ø4X4_Lambda3
[
h264_ícode_c⁄åﬁ
->
i_cuº_qp
]);

5158 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRAENABLE
, 0x0070);

5160 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRAENABLE
, 0x0060);

5165 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
INTRANDMECONTROL
, 
mode_£À˘
);

5167 if(
chù
->
ªgi°î_cuº_h264_ícode_ch™
 !
NULL
){

5168 
chù
->
	`ªgi°î_cuº_h264_ícode_ch™
(chù, 
h264_logic_ícode_ch™
);

5170 
h264_ícode_c⁄åﬁ
->
	`add_ícode_timeout_hook
(h264_encode_control);

5172 
	`drivî_gí_dñivî_evít
(
›íed_logic_ch™_ed
, 1);

5173 if(
ed_fsm
->
›
->
	`gë_cuº_°©e
”d_fsmË=
TW_ED_RUNNING
){

5174 
	`do_gëtimeofday
(&
dñè
->
œ°_time
);

5175 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
CHIPSCOPE
, 0x8000);

5176 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
CHIPSCOPE
, 0x0000);

5178 
ma°î_¶Ÿ
->
›
->
	`¶Ÿ_so·w¨e_disˇrd_‰ame
(ma°î_¶Ÿ, 
chù
, 
h264_logic_ícode_ch™
);

5179 
video_‰ame_queue
->
›
->
	`ªÀa£_cuº_¥odu˚r
(video_‰ame_queue, &
h264_logic_ícode_ch™
->
ícode_ch™_buf_poﬁ
);

5180 
chù
->
	`uƒegi°î_cuº_h264_ícode_ch™
(chù, 
h264_logic_ícode_ch™
);

5181 
h264_ícode_c⁄åﬁ
->
›
->
	`nŸify
(h264_ícode_c⁄åﬁ, 
h264_logic_ícode_ch™
, 
chù
);

5182 
	`drivî_gí_dñivî_evít
(
›íed_logic_ch™_ed
, 1);

5183 
	`¥ötk
("\n\n%s.%d, %d.%d, sèãÉº %d\n\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
(ed_fsm));

5187 
	`¥ötk
("\n\n%s.%d, %d.%d, c™'àgë vl˚, sèã=%d\n\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
(ed_fsm));

5188 
	`drivî_gí_dñivî_evít
(
›íed_logic_ch™_ed
, 1);

5189 
	`drivî_gí_dñivî_evít
(
›íed_logic_ch™_ed
, 1);

5190 
	`drivî_gí_dñivî_evít
(
›íed_logic_ch™_ed
, 1);

5191 
	`¥ötk
("\n\n%s.%d, %d.%d, c™'àgë vl˚, sèã=%d\n\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
(ed_fsm));

5192 
h264_ícode_c⁄åﬁ
->
›
->
	`upd©e_ad_ªady
(h264_encode_control);

5193 
h264_ícode_c⁄åﬁ
->
›
->
	`upd©e_¶i˚_hód_ªady
(h264_encode_control);

5195 
	`¥ötk
("\n\n\n\n&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\n");

5196 
	`¥ötk
("%s.%d, %d.%d, c™'àgë vl˚, sèã=%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
(ed_fsm));

5197 
	`¥ötk
("&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\n\n\n\n");

5198 
	`drivî_gí_dñivî_evít
(
›íed_logic_ch™_ed
, 1);

5199 
ma°î_¶Ÿ
->
›
->
	`¶Ÿ_so·w¨e_disˇrd_‰ame
(ma°î_¶Ÿ, 
chù
, 
h264_logic_ícode_ch™
);

5200 
video_‰ame_queue
->
›
->
	`ªÀa£_cuº_¥odu˚r
(video_‰ame_queue, &
h264_logic_ícode_ch™
->
ícode_ch™_buf_poﬁ
);

5201 
h264_ícode_c⁄åﬁ
->
›
->
	`nŸify
(h264_ícode_c⁄åﬁ, 
h264_logic_ícode_ch™
, 
chù
);

5203 
	`drivî_gí_dñivî_evít
(
›íed_logic_ch™_ed
, 1);

5204 
	`ícode_ch™_gí_ªq_msg
(
h264_logic_ícode_ch™
, 
REQ_ALGO_SLICE_HEAD
, 
NONBLOCK_OP
);

5209 
	`drivî_gí_dñivî_evít
(
›íed_logic_ch™_ed
, 1);

5210 
ma°î_¶Ÿ
->
›
->
	`¶Ÿ_so·w¨e_disˇrd_‰ame
(ma°î_¶Ÿ, 
chù
, 
h264_logic_ícode_ch™
);

5211 
video_‰ame_queue
->
›
->
	`ªÀa£_cuº_¥odu˚r
(video_‰ame_queue, &
h264_logic_ícode_ch™
->
ícode_ch™_buf_poﬁ
);

5212 
h264_ícode_c⁄åﬁ
->
›
->
	`nŸify
(h264_ícode_c⁄åﬁ, 
h264_logic_ícode_ch™
, 
chù
);

5214 
	`drivî_gí_dñivî_evít
(
›íed_logic_ch™_ed
, 1);

5215 
	`ícode_ch™_gí_ªq_msg
(
h264_logic_ícode_ch™
, 
REQ_ALGO_SLICE_HEAD
, 
NONBLOCK_OP
);

5218 
h264_ícode_c⁄åﬁ
->
i_‰ame_≥r_£c⁄d
++;

5219 if(
h264_ícode_c⁄åﬁ
->
i_‰ame_≥r_£c⁄d
 >h264_ícode_c⁄åﬁ->
i_¸ossbus_Âs
){

5220 
h264_ícode_c⁄åﬁ
->
i_‰ame_≥r_£c⁄d
 = 0;

5223 
	`¥ötk
("\n\n%s.%d, sèã i†nŸ sèndby, why?????, %d, %d--%d\n\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
, 
ed_fsm
->
›
->
	`gë_cuº_°©e
(ed_fsm));

5226 
	}
}

5228 
	$h264_logic_ch™_ª•⁄£_ddr_bur°_d⁄e_i§
(
úq
, *
c⁄ãxt
)

5230 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
 = (tw_h264_logic_ícode_ch™_t*)
c⁄ãxt
;

5231 
ªt
 = 0;

5233 if(
h264_logic_ícode_ch™
 !
NULL
){

5234 
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
 = &
h264_logic_ícode_ch™
->
ícode_c⁄åﬁ
;

5235 
h264_ícode_c⁄åﬁ
->
›
->
	`mov_vlc_codög
(h264_ícode_c⁄åﬁ, 
h264_logic_ícode_ch™
, h264_logic_ícode_ch™->
chù
);

5236 if(
h264_ícode_c⁄åﬁ
->
›
->
	`chù_pög_p⁄g_upd©e
(h264_ícode_c⁄åﬁ, 
h264_logic_ícode_ch™
, h264_logic_ícode_ch™->
chù
) <= 0){

5237 
tw_video_‰ame_tcb_queue_t
 *
ícode_‰ame_queue
;

5238 
tw_video_‰ame_tcb_t
 *
‰ame
;

5239 
dvm_chù_t
 *
chù
;

5240 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
;

5241 
ed_tcb_t
 *
›íed_logic_ch™_ed
;

5243 
ícode_‰ame_queue
 = &
h264_logic_ícode_ch™
->encode_frame_queue;

5244 
‰ame
 = 
ícode_‰ame_queue
->
cuº_¥odu˚r
;

5245 if(
‰ame
 !
NULL
){

5246 
h264_«l_t
 *
«l
;

5248 
«l
 = &
‰ame
->nal;

5249 
‰ame
->
‰ame_Àn
 -(
«l
->
•s_∑ysize
 +ÇÆ->
µs_∑ysize
);

5250 if(
‰ame
->
‰ame_is_îr
 == 0){

5251 #ifde‡ 
ADD_DVM_NAL_HEAD


5253 
h264_«l_bô°ªam_t
 *
h264_«l_¶i˚_hód
;

5254 
DVM_NAL_HEAD
 *
«l_¶i˚_hód
;

5255 
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
;

5256 
tw_video_∑ckë_tcb_t
 *
∑ckë
;

5257 
Êags
;

5258 
ªt
;

5260 
video_∑ckë_queue
 = &
‰ame
->video_packet_queue;

5261 
	`•ö_lock_úqßve
(&
video_∑ckë_queue
->
lock
, 
Êags
);

5262 
video_∑ckë_queue
->
›
->
	`åy_gë
(video_∑ckë_queue, &
∑ckë
);

5263 if(
∑ckë
 !
NULL
){

5264 
h264_«l_¶i˚_hód
 = (
h264_«l_bô°ªam_t
*)&
∑ckë
->
d©a
[
«l
->
•s_∑ysize
 +ÇÆ->
µs_∑ysize
];

5265 
«l_¶i˚_hód
 = &
h264_«l_¶i˚_hód
->
hód
;

5266 
ªt
 = 
‰ame
->
‰ame_Àn
 - (
DVM_NAL_HEAD
);

5267 
«l_¶i˚_hód
->
i_«l_size_0_7
 = (
ªt
&0xff);

5268 
«l_¶i˚_hód
->
i_«l_size_8_15
 = ((
ªt
>>8)&0xff);

5269 
«l_¶i˚_hód
->
i_«l_size_16_23
 = ((
ªt
>>16)&0xff);

5271 
video_∑ckë_queue
->
›
->
	`put_hódî
(video_∑ckë_queue, 
∑ckë
);

5272 
	`•ö_u∆ock_úqª°‹e
(&
video_∑ckë_queue
->
lock
, 
Êags
);

5275 
ícode_‰ame_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(encode_frame_queue);

5277 
ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_¥odu˚r
”ncode_‰ame_queue, &
h264_logic_ícode_ch™
->
ícode_ch™_buf_poﬁ
);

5278 
h264_ícode_c⁄åﬁ
->
b_f‹˚_i_‰ame
 = 1;

5279 
	`¥ötk
("%d.%d disˇrd\n", 
__LINE__
, 
h264_logic_ícode_ch™
->
logic_ch™_id
);

5283 
	`ícode_ch™_gí_ªq_msg
(
h264_logic_ícode_ch™
, 
REQ_ALGO_SLICE_HEAD
, 
NONBLOCK_OP
);

5284 
›íed_logic_ch™_ed
 = &
h264_logic_ícode_ch™
->opened_logic_chan_ed;

5285 
	`drivî_gí_dñivî_evít
(
›íed_logic_ch™_ed
, 1);

5288 
chù
 = 
h264_logic_ícode_ch™
->chip;

5289 
	`chù_‰ì_úq
(
chù
, 
IRQ_BURST_TYPE_INTR
, 
h264_logic_ícode_ch™
);

5290 
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

5292 
chù_d¥am_c⁄åﬁÀr
->
›
->
	`ack_ªad_h264_bô°ªam_ªq
(chù_d¥am_c⁄åﬁÀr, 
h264_logic_ícode_ch™
);

5293 
ªt
 = 1;

5296 
	`¥ötk
("\n%s.%d\n", 
__FUNCTION__
, 
__LINE__
);

5298  
ªt
;

5299 
	}
}

5301 
	$h264_logic_ch™_°¨t_ªad_bô°ªam
(
d¥am_ªque°_t
 *
d¥am_ªq
, *
c⁄ãxt
)

5303 
ªt
=1;

5304 if((
d¥am_ªq
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

5305 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
 = (tw_h264_logic_ícode_ch™_t*)
c⁄ãxt
;

5306 
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
 = &
h264_logic_ícode_ch™
->
ícode_c⁄åﬁ
;

5307 
	`chù_ªque°_úq
(
h264_logic_ícode_ch™
->
chù
, 
IRQ_BURST_TYPE_INTR
, 
h264_logic_ch™_ª•⁄£_ddr_bur°_d⁄e_i§
, "BURST", (*)h264_logic_encode_chan);

5308 
h264_ícode_c⁄åﬁ
->
›
->
	`ªad_vlc_∑øm
(h264_ícode_c⁄åﬁ, 
h264_logic_ícode_ch™
->
chù
);

5310  
ªt
;

5311 
	}
}

5313 
	$öô_submô_ªcv_ícode_d⁄e_£rvi˚
(
d¥am_ªque°_t
 *
d¥am_ªq
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
)

5315 if((
d¥am_ªq
!=
NULL
Ë|| (
h264_logic_ícode_ch™
!=NULL)){

5316 
d¥am_ªq
->
ty≥
 = 
DPRAM_NONBLOCK_TRANSFER_REQUEST
;

5317 
d¥am_ªq
->
c⁄ãxt
 = (*)
h264_logic_ícode_ch™
;

5318 
d¥am_ªq
->
ªq_ˇŒback
 = 
h264_logic_ch™_°¨t_ªad_bô°ªam
;

5320 
	}
}

5322 
	$tw5864_h264_ícode_c⁄åﬁ_through_ddr_úq_func
(
úq
, *
c⁄ãxt
)

5324 
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
 = (tw_h264_ícode_c⁄åﬁ_t*)
c⁄ãxt
;

5325 if(
h264_ícode_c⁄åﬁ
 !
NULL
){

5326 
tw_h264_ícode_dñè_t
 *
dñè
;

5327 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

5328 
dvm_chù_t
 *
chù
;

5329 
ddr_video_bô°ªam_buf_node_t
 *
video_bô°ªam_buf
;

5330 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
;

5331 
u32
 
vÆ
;

5333 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

5334 
chù
 = 
h264_logic_ícode_ch™
->chip;

5336 
dñè
 = &
h264_ícode_c⁄åﬁ
->
ícode_dñè
;

5337 
	`do_gëtimeofday
(&
dñè
->
cuº_time
);

5338 
vÆ
 = 
	`timevÆ_to_ns
(&
dñè
->
cuº_time
Ë-ÅimevÆ_to_ns(&dñè->
œ°_time
);

5339 
vÆ
 = val / 1000;

5340 if(
dñè
->
max_dñè
 == 0) {

5341 
dñè
->
max_dñè
 = 
vÆ
;

5343 if(
dñè
->
mö_dñè
 == 0) {

5344 
dñè
->
mö_dñè
 = 
vÆ
;

5346 if(
dñè
->
max_dñè
 < 
vÆ
) {

5347 
dñè
->
max_dñè
 = 
vÆ
;

5349 if(
dñè
->
mö_dñè
 > 
vÆ
) {

5350 
dñè
->
mö_dñè
 = 
vÆ
;

5352 
dñè
->
cur_dñè
 = 
vÆ
;

5354 
video_bô°ªam_buf
 = 
h264_logic_ícode_ch™
->video_bitstream_buf;

5355 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
ENCODER_VLC_PARAM
);

5356 
vÆ
 |1<<(
video_bô°ªam_buf
->
›
->
	`gë_buf_id
(video_bitstream_buf) + 24);

5357 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENCODER_VLC_PARAM
, 
vÆ
);

5360 
h264_ícode_c⁄åﬁ
->
›
->
	`nŸify
(h264_ícode_c⁄åﬁ, 
h264_logic_ícode_ch™
, h264_logic_ícode_ch™->
chù
);

5361 
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

5362 
	`öô_submô_ªcv_ícode_d⁄e_£rvi˚
(&
h264_logic_ícode_ch™
->
ªad_video_bô°ªam_ªq
, h264_logic_encode_chan);

5363 
chù_d¥am_c⁄åﬁÀr
->
›
->
	`submô_ªad_h264_bô°ªam_ªq
(chù_d¥am_c⁄åﬁÀr, 
h264_logic_ícode_ch™
);

5366 
	}
}

5368 
	$tw5864_h264_ícode_c⁄åﬁ_through_ddr_ªad_vlc_∑øm
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
dvm_chù_t
 *
chù
)

5370 if((
h264_ícode_c⁄åﬁ
!=
NULL
Ë&& (
chù
!=NULL)){

5371 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

5372 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
;

5374 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

5375 
chù_d¥am_c⁄åﬁÀr
 = &
h264_logic_ícode_ch™
->
chù
->chip_dpram_controller;

5376 if(
chù_d¥am_c⁄åﬁÀr
->
›
->
	`is_ˇn_submô_move_d©a_‰om_ddr_to_d¥am_£rvi˚_ªq
(chù_d¥am_c⁄åﬁÀr, &
h264_logic_ícode_ch™
->
d¥am_∑ge
)){

5377 
d¥am_∑ge_node_t
 *
d¥am_∑ge
 = 
h264_logic_ícode_ch™
->dpram_page;

5378 
ddr_video_bô°ªam_buf_node_t
 *
video_bô°ªam_buf
 = 
h264_logic_ícode_ch™
->video_bitstream_buf;

5379 
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
 = &
chù_d¥am_c⁄åﬁÀr
->burst_interface;

5380 
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_queue
;

5381 
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
;

5382 
tw_video_‰ame_tcb_t
 *
‰ame
;

5383 
h264_«l_t
 *
«l
;

5385 
video_‰ame_queue
 = &
h264_logic_ícode_ch™
->
ícode_‰ame_queue
;

5386 
‰ame
 = 
video_‰ame_queue
->
cuº_¥odu˚r
;

5387 
«l
 = &
‰ame
->nal;

5388 
bur°_öãrÁ˚
->
›
->
	`°¨t_block_å™s„r_‰om_ddr_to_§am
(bur°_öãrÁ˚, 
d¥am_∑ge
, 
video_bô°ªam_buf
->›->
	`gë_buf_ba£_off£t
(video_bô°ªam_buf), video_bô°ªam_buf->›->
	`gë_∑ge_id
(video_bô°ªam_buf), (
ddr_video_bô°ªam_hódî_t
), video_bô°ªam_buf->›->
	`gë_buf_ö_chù_a_‹_b
(video_bitstream_buf));

5389 
«l
->
¶i˚_hód_buf
 = 
‰ame
->
video_∑ckë_queue
.
cuº_¥odu˚r
->
d©a
;

5390 
bur°_öãrÁ˚
->
›
->
	`pio_ho°_to_§am_ªad
(bur°_öãrÁ˚, 
d¥am_∑ge
, (
u32
*)
«l
->
¶i˚_hód_buf
, (
ddr_video_bô°ªam_hódî_t
));

5392 
h264_ícode_c⁄åﬁ
->
›
->
	`ˇlcuœã_mov_∑øm
(h264_ícode_c⁄åﬁ, 
h264_logic_ícode_ch™
->
chù
);

5393 
video_∑ckë_queue
 = &
‰ame
->video_packet_queue;

5394 
video_∑ckë_queue
->
cuº_¥odu˚r
->
›
->
	`dma_m≠
(video_∑ckë_queue->cuº_¥odu˚r, 
DMA_FROM_DEVICE
);

5396 
bur°_öãrÁ˚
->
›
->
	`°¨t_n⁄block_å™s„r_‰om_ddr_to_§am
(bur°_öãrÁ˚, 
d¥am_∑ge
, (
video_bô°ªam_buf
->›->
	`gë_buf_ba£_off£t
(video_bô°ªam_buf)+
h264_ícode_c⁄åﬁ
->
‰ame_ba£_addr
), video_bô°ªam_buf->›->
	`gë_∑ge_id
(video_bô°ªam_buf), h264_ícode_c⁄åﬁ->
£˘i⁄_Àn
, video_bô°ªam_buf->›->
	`gë_buf_ö_chù_a_‹_b
(video_bitstream_buf));

5398 
	`¥ötk
("\n\n[%s.%d]&&&&√edáddÅriggî&&&\n\n", 
__FUNCTION__
, 
__LINE__
);

5401 
	}
}

5403 
	$tw5864_h264_ícode_c⁄åﬁ_through_ddr_ˇlcuœã_mov_∑øm
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
dvm_chù_t
 *
chù
)

5405 if((
h264_ícode_c⁄åﬁ
!=
NULL
Ë&& (
chù
!=NULL)){

5406 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

5407 
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_queue
;

5408 
tw_video_‰ame_tcb_t
 *
‰ame
;

5409 
h264_«l_t
 *
«l
;

5410 
ddr_video_bô°ªam_hódî_t
 *
video_bô°ªam_hódî
;

5411 
d¥am_∑ge_node_t
 *
d¥am_∑ge
;

5413 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_c⁄åﬁ
(
h264_ícode_c⁄åﬁ
);

5414 
video_‰ame_queue
 = &
h264_logic_ícode_ch™
->
ícode_‰ame_queue
;

5415 
‰ame
 = 
video_‰ame_queue
->
cuº_¥odu˚r
;

5416 
«l
 = &
‰ame
->nal;

5417 
d¥am_∑ge
 = 
h264_logic_ícode_ch™
->dpram_page;

5418 
video_bô°ªam_hódî
 = (
ddr_video_bô°ªam_hódî_t
*)
«l
->
¶i˚_hód_buf
;

5419 
‰ame
->
‰ame_Àn
 = 
h264_ícode_c⁄åﬁ
->
tŸÆ_‰ame_Àn
 = 
video_bô°ªam_hódî
->
h264_bô°ªam_hódî
.
Àn
<<1;

5420 
h264_ícode_c⁄åﬁ
->
‰ame_ba£_addr
 = 
video_bô°ªam_hódî
->
h264_bô°ªam_hódî
.
off£t
<<2;

5421 
h264_ícode_c⁄åﬁ
->
have_ªcv_£˘i⁄_numbî
 = 0;

5422 
h264_ícode_c⁄åﬁ
->
£˘i⁄_Àn
 = 
d¥am_∑ge
->
›
->
	`gë_∑ge_size
(dpram_page);

5423 
h264_ícode_c⁄åﬁ
->
£˘i⁄_numbî
 = h264_ícode_c⁄åﬁ->
tŸÆ_‰ame_Àn
 / h264_ícode_c⁄åﬁ->
£˘i⁄_Àn
;

5424 
h264_ícode_c⁄åﬁ
->
èûî_Àn
 = h264_ícode_c⁄åﬁ->
tŸÆ_‰ame_Àn
 % h264_ícode_c⁄åﬁ->
£˘i⁄_Àn
;

5425 if(
h264_ícode_c⁄åﬁ
->
èûî_Àn
){

5426 
h264_ícode_c⁄åﬁ
->
£˘i⁄_numbî
++;

5428 
h264_ícode_c⁄åﬁ
->
èûî_Àn
 = h264_ícode_c⁄åﬁ->
£˘i⁄_Àn
;

5431 
	}
}

5433 
	$tw5864_h264_ícode_c⁄åﬁ_through_ddr_mov_vlc_codög
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
, 
dvm_chù_t
 *
chù
)

5435 if((
h264_ícode_c⁄åﬁ
!=
NULL
Ë&& (
h264_logic_ícode_ch™
!=NULLË&& (
chù
!=NULL)){

5436 
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_queue
;

5437 
tw_video_‰ame_tcb_t
 *
‰ame
;

5438 
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
;

5439 
tw_video_∑ckë_tcb_t
 *
∑ckë
;

5440 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

5441 
d¥am_∑ge_node_t
 *
d¥am_∑ge
 = 
h264_logic_ícode_ch™
->dpram_page;

5442 
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
 = &
chù_d¥am_c⁄åﬁÀr
->burst_interface;

5443 
dma_addr_t
 
ãmp_dma_addr
;

5445 
bur°_öãrÁ˚
->
›
->
	`˛ór_bur°_d⁄e
(burst_interface);

5446 
video_‰ame_queue
 = &
h264_logic_ícode_ch™
->
ícode_‰ame_queue
;

5447 
‰ame
 = 
video_‰ame_queue
->
cuº_¥odu˚r
;

5448 if(
‰ame
 !
NULL
) {

5449 if(
‰ame
->
‰ame_is_îr
){

5452 
video_∑ckë_queue
 = &
‰ame
->video_packet_queue;

5453 
∑ckë
 = 
video_∑ckë_queue
->
cuº_¥odu˚r
;

5454 if(
∑ckë
 =
NULL
) {

5455 
video_∑ckë_queue
->
›
->
	`åy_gë_cuº_¥odu˚r_‰om_poﬁ
(video_∑ckë_queue, &
h264_logic_ícode_ch™
->
ícode_ch™_buf_poﬁ
);

5456 
∑ckë
 = 
video_∑ckë_queue
->
cuº_¥odu˚r
;

5457 if(
∑ckë
 =
NULL
) {

5458 
‰ame
->
‰ame_is_îr
 = 1;

5461 
∑ckë
->
›
->
	`dma_m≠
’ackë, 
DMA_FROM_DEVICE
);

5464 
ãmp_dma_addr
 = 
∑ckë
->
dma_addr
;

5465 if(
h264_ícode_c⁄åﬁ
->
have_ªcv_£˘i⁄_numbî
&1){

5466 
ãmp_dma_addr
 +
h264_ícode_c⁄åﬁ
->
£˘i⁄_Àn
;

5468 if(
h264_ícode_c⁄åﬁ
->
£˘i⁄_numbî
 > 1){

5469 
bur°_öãrÁ˚
->
›
->
	`dma_ho°_to_§am_ªad
(bur°_öãrÁ˚, 
d¥am_∑ge
, 
ãmp_dma_addr
, 
h264_ícode_c⁄åﬁ
->
£˘i⁄_Àn
);

5470 
∑ckë
->
∑ylﬂd_Àn
 +
h264_ícode_c⁄åﬁ
->
£˘i⁄_Àn
;

5472 
bur°_öãrÁ˚
->
›
->
	`dma_ho°_to_§am_ªad
(bur°_öãrÁ˚, 
d¥am_∑ge
, 
ãmp_dma_addr
, 
h264_ícode_c⁄åﬁ
->
èûî_Àn
);

5473 
∑ckë
->
∑ylﬂd_Àn
 +
h264_ícode_c⁄åﬁ
->
èûî_Àn
;

5477 
	}
}

5479 
	$tw5864_h264_ícode_c⁄åﬁ_through_ddr_chù_pög_p⁄g_upd©e
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
, 
dvm_chù_t
 *
chù
)

5481 
ªt
 = 0;

5482 if((
h264_ícode_c⁄åﬁ
!=
NULL
Ë&& (
h264_logic_ícode_ch™
!=NULLË&& (
chù
!=NULL)){

5483 
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_queue
;

5484 
tw_video_‰ame_tcb_t
 *
‰ame
;

5485 
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
;

5486 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

5487 
d¥am_∑ge_node_t
 *
d¥am_∑ge
 = 
h264_logic_ícode_ch™
->dpram_page;

5488 
ddr_video_bô°ªam_buf_node_t
 *
video_bô°ªam_buf
 = 
h264_logic_ícode_ch™
->video_bitstream_buf;

5489 
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
 = &
chù_d¥am_c⁄åﬁÀr
->burst_interface;

5491 
video_‰ame_queue
 = &
h264_logic_ícode_ch™
->
ícode_‰ame_queue
;

5492 
‰ame
 = 
video_‰ame_queue
->
cuº_¥odu˚r
;

5493 
h264_ícode_c⁄åﬁ
->
‰ame_ba£_addr
 +h264_ícode_c⁄åﬁ->
£˘i⁄_Àn
;

5494 
h264_ícode_c⁄åﬁ
->
have_ªcv_£˘i⁄_numbî
++;

5495 if(!(
h264_ícode_c⁄åﬁ
->
have_ªcv_£˘i⁄_numbî
&0x1)){

5496 if(
‰ame
 !
NULL
){

5497 
video_∑ckë_queue
 = &
‰ame
->video_packet_queue;

5498 if(
video_∑ckë_queue
->
cuº_¥odu˚r
 !
NULL
){

5499 
video_∑ckë_queue
->
cuº_¥odu˚r
->
›
->
	`dma_unm≠
(video_∑ckë_queue->cuº_¥odu˚r, 
DMA_FROM_DEVICE
);

5501 
video_∑ckë_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(video_packet_queue);

5504 
h264_ícode_c⁄åﬁ
->
£˘i⁄_numbî
--;

5505 
ªt
 = 
h264_ícode_c⁄åﬁ
->
£˘i⁄_numbî
;

5507 if(
ªt
 > 1){

5508 
bur°_öãrÁ˚
->
›
->
	`°¨t_n⁄block_å™s„r_‰om_ddr_to_§am
(bur°_öãrÁ˚, 
d¥am_∑ge
, (
video_bô°ªam_buf
->›->
	`gë_buf_ba£_off£t
(video_bô°ªam_buf)+
h264_ícode_c⁄åﬁ
->
‰ame_ba£_addr
), video_bô°ªam_buf->›->
	`gë_∑ge_id
(video_bô°ªam_buf), h264_ícode_c⁄åﬁ->
£˘i⁄_Àn
, video_bô°ªam_buf->›->
	`gë_buf_ö_chù_a_‹_b
(video_bitstream_buf));

5509 } if(
ªt
 == 1) {

5510 
bur°_öãrÁ˚
->
›
->
	`°¨t_n⁄block_å™s„r_‰om_ddr_to_§am
(bur°_öãrÁ˚, 
d¥am_∑ge
, (
video_bô°ªam_buf
->›->
	`gë_buf_ba£_off£t
(video_bô°ªam_buf)+
h264_ícode_c⁄åﬁ
->
‰ame_ba£_addr
), video_bô°ªam_buf->›->
	`gë_∑ge_id
(video_bô°ªam_buf), h264_ícode_c⁄åﬁ->
èûî_Àn
, video_bô°ªam_buf->›->
	`gë_buf_ö_chù_a_‹_b
(video_bitstream_buf));

5512 if(
h264_ícode_c⁄åﬁ
->
have_ªcv_£˘i⁄_numbî
&0x1){

5513 if(
‰ame
 !
NULL
){

5514 
video_∑ckë_queue
 = &
‰ame
->video_packet_queue;

5515 if(
video_∑ckë_queue
->
cuº_¥odu˚r
 !
NULL
){

5516 
video_∑ckë_queue
->
cuº_¥odu˚r
->
›
->
	`dma_unm≠
(video_∑ckë_queue->cuº_¥odu˚r, 
DMA_FROM_DEVICE
);

5518 
video_∑ckë_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(video_packet_queue);

5523  
ªt
;

5524 
	}
}

5526 
	$tw5864_h264_ícode_c⁄åﬁ_through_ddr_nŸify
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
, 
dvm_chù_t
 *
chù
)

5528 
tw_video_‰ame_tcb_queue_t
 *
ícode_‰ame_queue
;

5529 
tw_video_‰ame_tcb_t
 *
‰ame
;

5530 
chù_ícode_ch™_£rvi˚_queue_t
 *
chù_ícode_£rvi˚_queue
;

5531 
ed_tcb_t
 *
›íed_logic_ch™_ed
;

5533 
h264_ícode_c⁄åﬁ
->
	`dñëe_ícode_timeout_hook
(h264_encode_control);

5534 
h264_ícode_c⁄åﬁ
->
vlc_°©us
 = 0;

5535 
h264_logic_ícode_ch™
->
rc_drivî
.
rc_›
->
	`upd©e_rc
(h264_logic_encode_chan);

5536 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ENCODER_VLC_INTR_STATUS
, 
VLC_INTR_MASK_ALL
);

5537 if(
h264_logic_ícode_ch™
->
ma°î_¶Ÿ
 !
NULL
){

5538 
h264_logic_ícode_ch™
->
ma°î_¶Ÿ
->
›
->
	`ícode_ídof¶i˚_nŸify
(h264_logic_encode_chan->master_slot, h264_logic_encode_chan);

5541 
ícode_‰ame_queue
 = &
h264_logic_ícode_ch™
->encode_frame_queue;

5542 
‰ame
 = 
ícode_‰ame_queue
->
cuº_¥odu˚r
;

5543 if(
‰ame
 !
NULL
){

5544 
h264_ícode_c⁄åﬁ
->
i_Âm
++;

5545 
h264_ícode_c⁄åﬁ
->
›
->
	`upd©e_©_ícode_‰ame_ok
(h264_encode_control);

5546 
chù
->
	`uƒegi°î_cuº_h264_ícode_ch™
(chù, 
h264_logic_ícode_ch™
);

5547 if(
h264_ícode_c⁄åﬁ
->
ovîÊow
){

5548 
h264_ícode_c⁄åﬁ
->
ovîÊow
 = 0;

5549 
	`¥ötk
("\n\n%d ovîÊow %d\n\n", 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, 
h264_ícode_c⁄åﬁ
->
ovîÊow
);

5552 
h264_logic_ícode_ch™
->
rc_drivî
.
rc_›
->
	`jump_rc
(h264_logic_encode_chan);

5553 
h264_ícode_c⁄åﬁ
->
›
->
	`upd©e_©_ícode_‰ame_îr
(h264_encode_control);

5556 
›íed_logic_ch™_ed
 = &
h264_logic_ícode_ch™
->opened_logic_chan_ed;

5557 
	`drivî_gí_dñivî_evít
(
›íed_logic_ch™_ed
, 1);

5558 
chù_ícode_£rvi˚_queue
 = &
chù
->chip_encode_service_queue;

5559 
chù_ícode_£rvi˚_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(chip_encode_service_queue);

5560 
chù_ícode_£rvi˚_queue
->
›
->
	`åiggî_chù_≥ndög_£rvi˚_ªque°
(chip_encode_service_queue);

5562 
	}
}

5564 
tw_h264_ícode_c⁄åﬁ_›î©i⁄
 
	gtw5864_h264_ícode_c⁄åﬁ_through_ddr_›
 = {

5565 .
öô
 = 
tw5864_h264_ícode_c⁄åﬁ_öô
,

5566 .
	gª£t
 = 
tw5864_h264_ícode_c⁄åﬁ_ª£t
,

5568 .
	g£t_•s
 = 
tw5864_h264_ícode_c⁄åﬁ_£t_•s
,

5569 .
	g£t_µs
 = 
tw5864_h264_ícode_c⁄åﬁ_£t_µs
,

5570 .
	g£t_¶i˚_hód
 = 
tw5864_h264_ícode_c⁄åﬁ_£t_¶i˚_hód
,

5571 .
	ggíî©‹_hód
 = 
tw5864_h264_ícode_c⁄åﬁ_gíî©‹_hód
,

5573 .
	gˇlcuœã_‰ame_ty≥
 = 
tw5864_h264_ícode_c⁄åﬁ_ˇlcuœã_‰ame_ty≥
,

5574 .
	ggë_‰ame_ty≥
 = 
tw5864_h264_ícode_c⁄åﬁ_gë_‰ame_ty≥
,

5575 .
	gf‹˚_I_‰ame
 = 
tw5864_h264_ícode_c⁄åﬁ_f‹˚_I_‰ame
,

5576 .
	gupd©e_©_ícode_‰ame_ok
 = 
tw5864_h264_ícode_c⁄åﬁ_upd©e_©_ícode_‰ame_ok
,

5577 .
	gupd©e_©_disˇrd_‰ame
 = 
tw5864_h264_ícode_c⁄åﬁ_upd©e_©_disˇrd_‰ame
,

5578 .
	gupd©e_©_ícode_‰ame_îr
 = 
tw5864_h264_ícode_c⁄åﬁ_upd©e_©_ícode_‰ame_îr
,

5579 .
	gupd©e_image_ªsﬁuti⁄
 = 
tw5864_h264_ícode_c⁄åﬁ_upd©e_image_ªsﬁuti⁄
,

5580 .
	gupd©e_Âs_disˇrd_èbÀ
 = 
tw5864_h264_ícode_c⁄åﬁ_upd©e_Âs_disˇrd_èbÀ
,

5582 .
	ggë_¶i˚_hód_™d_ad_°©us
 = 
tw5864_h264_ícode_c⁄åﬁ_gë_¶i˚_hód_™d_ad_°©us
,

5583 .
	g˛ór_¶i˚_hód_™d_ad_°©us
 = 
tw5864_h264_ícode_c⁄åﬁ_˛ór_¶i˚_hód_™d_ad_°©us
,

5584 .
	gupd©e_¶i˚_hód_ªady
 = 
tw5864_h264_ícode_c⁄åﬁ_upd©e_¶i˚_hód_ªady
,

5585 .
	g˛ór_¶i˚_hód_ªady
 = 
tw5864_h264_ícode_c⁄åﬁ_˛ór_¶i˚_hód_ªady
,

5586 .
	gupd©e_ad_ªady
 = 
tw5864_h264_ícode_c⁄åﬁ_upd©e_ad_ªady
,

5587 .
	g˛ór_ad_ªady
 = 
tw5864_h264_ícode_c⁄åﬁ_˛ór_ad_ªady
,

5588 .
	ggë_ad_°©us
 = 
tw5864_h264_ícode_c⁄åﬁ_gë_ad_°©us
,

5591 .
	gfú°_°¨t
 = 
tw5864_h264_ícode_c⁄åﬁ_fú°_°¨t
,

5592 .
	g°¨t_ícode
 = 
tw5864_h264_ícode_c⁄åﬁ_through_ddr_°¨t_ícode
,

5594 .
	gúq_func
 = 
tw5864_h264_ícode_c⁄åﬁ_through_ddr_úq_func
,

5595 .
	gªad_vlc_∑øm
 = 
tw5864_h264_ícode_c⁄åﬁ_through_ddr_ªad_vlc_∑øm
,

5596 .
	gˇlcuœã_mov_∑øm
 = 
tw5864_h264_ícode_c⁄åﬁ_through_ddr_ˇlcuœã_mov_∑øm
,

5597 .
	gmov_vlc_codög
 = 
tw5864_h264_ícode_c⁄åﬁ_through_ddr_mov_vlc_codög
,

5598 .
	gchù_pög_p⁄g_upd©e
 = 
tw5864_h264_ícode_c⁄åﬁ_through_ddr_chù_pög_p⁄g_upd©e
,

5599 .
	gnŸify
 = 
tw5864_h264_ícode_c⁄åﬁ_through_ddr_nŸify
,

5601 .
	gch™_ˇn_com∂ëe
 = 
tw5864_h264_ícode_c⁄åﬁ_ch™_ˇn_com∂ëe
,

5604 
	$öô_tw5864_h264_ícode_c⁄åﬁ
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
, 
ªad_bô°ªam_mode
)

5606 if(
h264_ícode_c⁄åﬁ
 !
NULL
){

5607 if(
ªad_bô°ªam_mode
 =
READ_H264_BITSTREAM_BY_DDR
){

5608 
h264_ícode_c⁄åﬁ
->
›
 = &
tw5864_h264_ícode_c⁄åﬁ_through_ddr_›
;

5610 
h264_ícode_c⁄åﬁ
->
›
 = &
tw5864_h264_ícode_c⁄åﬁ_›
;

5612 
h264_ícode_c⁄åﬁ
->
›
->
	`öô
(h264_encode_control);

5614 
	}
}

5616 
	$ªmove_tw5864_h264_ícode_c⁄åﬁ
(
tw_h264_ícode_c⁄åﬁ_t
 *
h264_ícode_c⁄åﬁ
)

5618 if(
h264_ícode_c⁄åﬁ
 !
NULL
){

5619 
h264_ícode_c⁄åﬁ
->
	`dñëe_ícode_timeout_hook
(h264_encode_control);

5621 
	}
}

5623 
	$h264_logic_ícode_ch™_fú°_°¨t
(*
c⁄ãxt
)

5625 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
 = (tw_h264_logic_ícode_ch™_t*)
c⁄ãxt
;

5626 if(
h264_logic_ícode_ch™
 !
NULL
){

5627 
h264_logic_ícode_ch™
->
ícode_c⁄åﬁ
.
›
->
	`fú°_°¨t
(&h264_logic_encode_chan->encode_control);

5628 
	`¥ötk
("%s.%d:%d-%d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
);

5630 
	}
}

5632 
	$h264_logic_ícode_ch™_°¨t_ícode
(*
c⁄ãxt
)

5634 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
 = (tw_h264_logic_ícode_ch™_t*)
c⁄ãxt
;

5635 if(
h264_logic_ícode_ch™
 !
NULL
){

5636 
h264_logic_ícode_ch™
->
ícode_c⁄åﬁ
.
›
->
	`°¨t_ícode
(&h264_logic_encode_chan->encode_control);

5638 
	}
}

5640 
	$öô_ícode_ch™_£rvi˚_tcb_wôh_nuŒ
(
ícode_ch™_£rvi˚_tcb_t
 *
ícode_ªque°_tcb
)

5642 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_ªque°_tcb
(
ícode_ªque°_tcb
);

5643 
tcb_node_t
 *
£rvi˚_tcb
 = &
ícode_ªque°_tcb
->service_tcb;

5645 
£rvi˚_tcb
->
›
 = &
tcb_node_›
;

5646 
£rvi˚_tcb
->
›
->
	`öô
(service_tcb);

5647 
£rvi˚_tcb
->
›
->
	`£t_¥iv
(£rvi˚_tcb, 
ícode_ªque°_tcb
);

5648 
ícode_ªque°_tcb
->
c⁄ãxt
 = 
h264_logic_ícode_ch™
;

5649 
ícode_ªque°_tcb
->
ty≥
 = 
DVM_CHIP_REQ_FIRST_STRAT_ENCODE_CHAN
;

5650 
ícode_ªque°_tcb
->
ªq_ˇŒback
 = 
h264_logic_ícode_ch™_fú°_°¨t
;

5651 
	}
}

5653 
	$öô_ícode_ch™_£rvi˚_tcb_wôh_fú°_°¨t
(
ícode_ch™_£rvi˚_tcb_t
 *
ícode_ªque°_tcb
)

5655 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_ªque°_tcb
(
ícode_ªque°_tcb
);

5656 
chù_ícode_ch™_£rvi˚_queue_t
 *
chù_ícode_£rvi˚_queue
;

5658 
	`öô_ícode_ch™_£rvi˚_tcb_wôh_nuŒ
(
ícode_ªque°_tcb
);

5659 
chù_ícode_£rvi˚_queue
 = &
h264_logic_ícode_ch™
->
chù
->chip_encode_service_queue;

5660 
chù_ícode_£rvi˚_queue
->
›
->
	`put_£rvi˚_ªque°_öto_queue_hódî
(chù_ícode_£rvi˚_queue, 
ícode_ªque°_tcb
);

5661 
	}
}

5663 
	$öô_ícode_ch™_£rvi˚_tcb_wôh_°¨t_ícode
(
ícode_ch™_£rvi˚_tcb_t
 *
ícode_ªque°_tcb
)

5665 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_ªque°_tcb
(
ícode_ªque°_tcb
);

5666 
tcb_node_t
 *
£rvi˚_tcb
 = &
ícode_ªque°_tcb
->service_tcb;

5667 
chù_ícode_ch™_£rvi˚_queue_t
 *
chù_ícode_£rvi˚_queue
;

5669 
£rvi˚_tcb
->
›
 = &
tcb_node_›
;

5670 
£rvi˚_tcb
->
›
->
	`öô
(service_tcb);

5671 
£rvi˚_tcb
->
›
->
	`£t_¥iv
(£rvi˚_tcb, 
ícode_ªque°_tcb
);

5672 
ícode_ªque°_tcb
->
c⁄ãxt
 = 
h264_logic_ícode_ch™
;

5673 
ícode_ªque°_tcb
->
ty≥
 = 
DVM_CHIP_REQ_START_ENCODE_CHAN
;

5674 
ícode_ªque°_tcb
->
ªq_ˇŒback
 = 
h264_logic_ícode_ch™_°¨t_ícode
;

5675 
chù_ícode_£rvi˚_queue
 = &
h264_logic_ícode_ch™
->
chù
->chip_encode_service_queue;

5676 
chù_ícode_£rvi˚_queue
->
›
->
	`put_£rvi˚_ªque°_öto_queue
(chù_ícode_£rvi˚_queue, 
ícode_ªque°_tcb
);

5677 
	}
}

5679 
	$h264_logic_ícode_ch™_dñay_ª°¨t_ícode
(
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
)

5681 
chù_ícode_ch™_£rvi˚_queue_t
 *
chù_ícode_£rvi˚_queue
;

5682 
ícode_ch™_£rvi˚_tcb_t
 *
ícode_ªque°_tcb
;

5683 
tcb_node_t
 *
£rvi˚_tcb
;

5684 
dvm_chù_t
 *
chù
;

5686 
	`¥ötk
("\n=========>%s.%d\n", 
__FUNCTION__
, 
__LINE__
);

5687 
chù
 = 
h264_logic_ícode_ch™
->chip;

5688 
ícode_ªque°_tcb
 = &
h264_logic_ícode_ch™
->encode_request_tcb;

5689 
£rvi˚_tcb
 = &
ícode_ªque°_tcb
->service_tcb;

5690 
£rvi˚_tcb
->
›
 = &
tcb_node_›
;

5691 
£rvi˚_tcb
->
›
->
	`öô
(service_tcb);

5692 
£rvi˚_tcb
->
›
->
	`£t_¥iv
(£rvi˚_tcb, 
ícode_ªque°_tcb
);

5693 
ícode_ªque°_tcb
->
c⁄ãxt
 = 
h264_logic_ícode_ch™
;

5694 
ícode_ªque°_tcb
->
ty≥
 = 
DVM_CHIP_REQ_START_ENCODE_CHAN
;

5695 
ícode_ªque°_tcb
->
ªq_ˇŒback
 = 
h264_logic_ícode_ch™_°¨t_ícode
;

5696 
chù_ícode_£rvi˚_queue
 = &
chù
->chip_encode_service_queue;

5697 
chù_ícode_£rvi˚_queue
->
›
->
	`put_£rvi˚_ªque°_öto_queue_hódî
(chù_ícode_£rvi˚_queue, 
ícode_ªque°_tcb
);

5698 
	}
}

5700 
	$h264_ícode_hcd_öãrÁ˚_›í
(
ed_tcb_t
 *
›íed_logic_ch™_ed
)

5702 
ªt
 = 
TW_ERR
;

5704 if(
›íed_logic_ch™_ed
 !
NULL
){

5705 
	`drivî_gí_›í_evít
(
›íed_logic_ch™_ed
, 1);

5706 
ªt
 = 
TW_OK
;

5709  
ªt
;

5710 
	}
}

5712 
	$h264_ícode_hcd_öãrÁ˚_˛o£
(
ed_tcb_t
 *
›íed_logic_ch™_ed
)

5714 
ªt
 = 
TW_ERR
;

5715 if(
›íed_logic_ch™_ed
 !
NULL
){

5716 
i
;

5717 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_›íed_logic_ch™_ed
(
›íed_logic_ch™_ed
);

5718 
	`¥ötk
("\n%s.%d: %d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
logic_ch™_id
, h264_logic_ícode_ch™->
ma°î_¶Ÿ
->
phy_¶Ÿ_id
);

5719 
	`drivî_gí_˛o£_evít
(
›íed_logic_ch™_ed
, 1);

5720 
h264_logic_ícode_ch™
->
ícode_c⁄åﬁ
.
i_°©i°ic_möuãr_cou¡î
 = 0;

5721 
	`uƒegi°î_›íed_logic_ícode_ch™_öto_ma°î_¶Ÿ
(
h264_logic_ícode_ch™
, h264_logic_ícode_ch™->
ma°î_¶Ÿ
);

5722 
	`ªmove_tw5864_h264_ícode_c⁄åﬁ
(&
h264_logic_ícode_ch™
->
ícode_c⁄åﬁ
);

5723 
	`ªmove_tw5864_h264_phy_video_¶Ÿ
(
h264_logic_ícode_ch™
->
ma°î_¶Ÿ
, h264_logic_encode_chan);

5724 
	`ªmove_tw_video_‰ame_tcb_queue
(&
h264_logic_ícode_ch™
->
ícode_‰ame_queue
, &h264_logic_ícode_ch™->
ícode_ch™_buf_poﬁ
);

5725 #ifde‡ 
MV_MODULE


5726 
	`ªmove_tw_video_mv_‰ame_tcb_queue
(&
h264_logic_ícode_ch™
->
ícode_mv_‰ame_queue
, &h264_logic_ícode_ch™->
ícode_ch™_buf_poﬁ
);

5728 
h264_logic_ícode_ch™
->
ícode_c⁄åﬁ
.
›
->
	`ª£t
(&h264_logic_encode_chan->encode_control);

5729 
ªt
 = 
TW_OK
;

5730 
i
=0; i<
REQ_MSG_NUMBER
; i++){

5731 
	`DñëeSögÀFúeTimîJob
(
h264_logic_ícode_ch™
->
n⁄block_msg_timî_id
[
i
]);

5732 
h264_logic_ícode_ch™
->
n⁄block_msg_timî_id
[
i
] = 
INVALIDTIMERID
;

5733 
	`DñëeSögÀFúeTimîJob
(
h264_logic_ícode_ch™
->
dñay_msg_timî_id
[
i
]);

5734 
h264_logic_ícode_ch™
->
dñay_msg_timî_id
[
i
] = 
INVALIDTIMERID
;

5736 #ifde‡ 
OSD_MODULE


5737 
	`˛o£_ícode_osd_ch™_ígöe
(&
h264_logic_ícode_ch™
->
ícode_osd_ígöe
);

5739 if(
	`©omic_ªad
(&
h264_logic_ícode_ch™
->
›íed_Êag
)){

5740 
dvm_chù_t
 *
chù
;

5741 
	`©omic_£t
(&
h264_logic_ícode_ch™
->
›íed_Êag
, 0);

5742 
chù
 = 
h264_logic_ícode_ch™
->chip;

5743 
chù
->
	`chù_˛o£
(chip);

5745 
	`¥ötk
("\n%s.%d: %d, %d\n\n", 
__FUNCTION__
, 
__LINE__
, 
h264_logic_ícode_ch™
->
logic_ch™_id
, h264_logic_ícode_ch™->
ma°î_¶Ÿ
->
phy_¶Ÿ_id
);

5747  
ªt
;

5748 
	}
}

5750 
	$h264_ícode_hcd_öãrÁ˚_su•íd
(
ed_tcb_t
 *
›íed_logic_ch™_ed
)

5753 
	}
}

5755 
	$h264_ícode_hcd_öãrÁ˚_ªsume
(
ed_tcb_t
 *
›íed_logic_ch™_ed
)

5758 
	}
}

5760 
	$h264_ícode_hcd_öãrÁ˚_io˘l
(
ed_tcb_t
 *
›íed_logic_ch™_ed
, 
cmd
, 
¨g
)

5762 
ªt
 = 0;

5763 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
;

5764 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

5765 
tw_h264_ícode_c⁄figuøti⁄_t
 
ícode_c⁄figuøti⁄
, *
pc⁄fig
 = &encode_configuration;

5766 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

5767 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

5768 
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
;

5770 
tw_h264_ícode_∑øm
 
ícode_∑øm
, *
≥ncode_∑øm
 = &encode_param;

5771 
chù_drivî_t
 *
chù_drivî
;

5772 
tw_video_bus_t
 *
video_bus
;

5774 if(!
›íed_logic_ch™_ed
) {

5775 
	`TW_DBG
(
TW_DBG_ERR
, "invalidárg\n");

5776  -
EINVAL
;

5779 
	`TW_DBG
(
TW_DBG_INFO
, "%c, %d\n", 
	`_IOC_TYPE
(
cmd
), 
	`_IOC_NR
(cmd));

5781 
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_›íed_logic_ch™_ed
(
›íed_logic_ch™_ed
);

5782 
ícode_¥›îty
 = &
h264_logic_ícode_ch™
->encode_property;

5783 
	`mem£t
(
pc⁄fig
, 0, (
tw_h264_ícode_c⁄figuøti⁄_t
));

5784 
chù_drivî
 = 
h264_logic_ícode_ch™
->
chù
->chip_driver;

5785 
video_bus
 = &
chù_drivî
->video_bus;

5786 
phy_video_¶Ÿ
 = 
h264_logic_ícode_ch™
->
ma°î_¶Ÿ
;

5787 
logic_video_¶Ÿ
 = 
phy_video_¶Ÿ
->
¸oss_bus_logic_video_¶Ÿ
;

5788 if(
	`©omic_ªad
(&
h264_logic_ícode_ch™
->
›íed_Êag
) == 0){

5789 
	`TW_DBG
(
TW_DBG_ERR
, "channel haveÇot be opend\n");

5790  -
ENODEV
;

5792 
cmd
) {

5793 
DVM_CODEC_GET_VIDEO_ENCODER_PARAM
:

5794 if(!
¨g
) {

5795 
	`TW_DBG
(
TW_DBG_ERR
, "invalidárg\n");

5796  -
EINVAL
;

5798 
	`c›y_‰om_u£r
(
≥ncode_∑øm
, (*)
¨g
, (
tw_h264_ícode_∑øm
));

5799 
pc⁄fig
 = &
ícode_¥›îty
->encode_property;

5800 if(
≥ncode_∑øm
->
ch™ge_mask_Êag
 & 
TW_h264_ENCODER_PARAM_BPS_MASK
) {

5801 
≥ncode_∑øm
->
i_bps
 = 
pc⁄fig
->
bôøã
;

5803 if(
≥ncode_∑øm
->
ch™ge_mask_Êag
 & 
TW_h264_ENCODER_PARAM_FPS_MASK
) {

5804 
≥ncode_∑øm
->
i_Âs
 = 
pc⁄fig
->
Âs
;

5806 if(
≥ncode_∑øm
->
ch™ge_mask_Êag
 & 
TW_h264_ENCODER_PARAM_IP_STRIDE_MASK
) {

5807 
≥ncode_∑øm
->
i_I_P_°ride
 = 
pc⁄fig
->
keyFømeI¡îvÆs
;

5809 if(
≥ncode_∑øm
->
ch™ge_mask_Êag
 & 
TW_h264_ENCODER_PARAM_PB_STRIDE_MASK
) {

5810 
≥ncode_∑øm
->
i_P_B_°ride
 = 0;

5812 if(
≥ncode_∑øm
->
ch™ge_mask_Êag
 & 
TW_h264_ENCODER_PARAM_GOP_MASK
) {

5813 
≥ncode_∑øm
->
i_g›_vÆue
 = 
pc⁄fig
->
g›I¡îvÆs
;

5815 if(
≥ncode_∑øm
->
ch™ge_mask_Êag
 & 
TW_h264_ENCODER_PARAM_FORCE_I_MASK
) {

5816 
≥ncode_∑øm
->
b_f‹˚_I_Êag
 = 0;

5818 if(
≥ncode_∑øm
->
ch™ge_mask_Êag
 & 
TW_h264_ENCODER_PARAM_WIDTH_MASK
) {

5819 
≥ncode_∑øm
->
i_logic_video_width_mb_size
 = 
pc⁄fig
->
width
;

5821 if(
≥ncode_∑øm
->
ch™ge_mask_Êag
 & 
TW_h264_ENCODER_PARAM_HEIGHT_MASK
) {

5822 
≥ncode_∑øm
->
i_logic_video_height_mb_size
 = 
pc⁄fig
->
height
;

5825 
	`c›y_to_u£r
((*)
¨g
, 
≥ncode_∑øm
, (
tw_h264_ícode_∑øm
));

5827 
DVM_CODEC_SET_VIDEO_ENCODER_PARAM
:

5828 if(!
¨g
) {

5829 
	`TW_DBG
(
TW_DBG_ERR
, "invalidárg\n");

5830  -
EINVAL
;

5832 
	`c›y_‰om_u£r
(
≥ncode_∑øm
, (*)
¨g
, (
tw_h264_ícode_∑øm
));

5834 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

5835 if((
≥ncode_∑øm
->
i_bps
 < 
MASTER_MIN_BIT_RATE
Ë|| (≥ncode_∑øm->i_bp†> 
MASTER_MAX_BIT_RATE
)){

5836 
	`TW_DBG
(
TW_DBG_ERR
, "bôøãÉº‹ %d [%d, %d]!\n", 
≥ncode_∑øm
->
i_bps
,

5837 
MASTER_MIN_BIT_RATE
, 
MASTER_MAX_BIT_RATE
);

5838 
ªt
 = -
EINVAL
;

5841 
pc⁄fig
->
bôøã
 = 
≥ncode_∑øm
->
i_bps
;

5842 
pc⁄fig
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_BITRATE_CHANGED
;

5844 if((
≥ncode_∑øm
->
i_bps
 < 
SUB_MIN_BIT_RATE
Ë|| (≥ncode_∑øm->i_bp†> 
SUB_MAX_BIT_RATE
)){

5845 
	`TW_DBG
(
TW_DBG_ERR
, "bôøãÉº‹ %d [%d, %d]!\n", 
≥ncode_∑øm
->
i_bps
,

5846 
SUB_MIN_BIT_RATE
, 
SUB_MAX_BIT_RATE
);

5848 
ªt
 = -
EINVAL
;

5851 
pc⁄fig
->
bôøã
 = 
≥ncode_∑øm
->
i_bps
;

5852 
pc⁄fig
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_BITRATE_CHANGED
;

5854 if((
≥ncode_∑øm
->
i_Âs
 < 
MIN_FRAME_RATE
Ë|| (≥ncode_∑øm->i_Â†> 
MAX_FRAME_RATE_PAL
)) {

5855 
	`TW_DBG
(
TW_DBG_ERR
, "Â†îr‹ %d [%d, %d]!\n", 
≥ncode_∑øm
->
i_Âs
,

5856 
MIN_FRAME_RATE
, 
MAX_FRAME_RATE_PAL
);

5857 
ªt
 = -
EINVAL
;

5860 if(
≥ncode_∑øm
->
i_Âs
 > 
logic_video_¶Ÿ
->
›
->
	`gë_Âs
(logic_video_slot)) {

5862 
	`TW_DBG
(
TW_DBG_ERR
, "èrgë fp†%d should smÆ»th™ vòÂ†%d\n", 
≥ncode_∑øm
->
i_Âs
, 
logic_video_¶Ÿ
->
›
->
	`gë_Âs
(logic_video_slot));

5863 
ªt
 = -
EINVAL
;

5866 
pc⁄fig
->
Âs
 = 
≥ncode_∑øm
->
i_Âs
;

5867 
pc⁄fig
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_FPS_CHANGED
;

5869 if((
≥ncode_∑øm
->
i_g›_vÆue
 < 
MIN_GOP
Ë|| (≥ncode_∑øm->i_g›_vÆuê> 
MAX_GOP
)) {

5870 
	`TW_DBG
(
TW_DBG_ERR
, "g›Éº‹ %d [%d, %d]!\n", 
≥ncode_∑øm
->
i_g›_vÆue
,

5871 
MIN_GOP
, 
MAX_GOP
);

5872 
ªt
 = -
EINVAL
;

5875 
pc⁄fig
->
g›I¡îvÆs
 = 
≥ncode_∑øm
->
i_g›_vÆue
;

5876 
pc⁄fig
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_GOP_INTERVALS_CHANGED
;

5878 if((
≥ncode_∑øm
->
i_I_P_°ride
 < 
MIN_I_P_STRIDE
Ë|| (≥ncode_∑øm->i_I_P_°ridê> 
MAX_I_P_STRIDE
)) {

5879 
	`TW_DBG
(
TW_DBG_ERR
, "key fømêöãrvÆÉº‹ %d [%d, %d]!\n", 
≥ncode_∑øm
->
i_I_P_°ride
,

5880 
MIN_I_P_STRIDE
, 
MAX_I_P_STRIDE
);

5881 
ªt
 = -
EINVAL
;

5884 
pc⁄fig
->
keyFømeI¡îvÆs
 = 
≥ncode_∑øm
->
i_I_P_°ride
;

5885 
pc⁄fig
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_KEYFRAME_INTERVALS_CHANGED
;

5887 if(
≥ncode_∑øm
->
ch™ge_mask_Êag
 & 
TW_h264_ENCODER_PARAM_WIDTH_MASK
) {

5888 if(
≥ncode_∑øm
->
ch™ge_mask_Êag
 & 
TW_h264_ENCODER_PARAM_HEIGHT_MASK
) {

5889 if(
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË=
TW_VIDEO_STANDARD_PAL
) {

5890 if((
≥ncode_∑øm
->
i_logic_video_height_mb_size
 =0Ë|| (≥ncode_∑øm->i_logic_video_height_mb_sizê> 
WIDTH_FRAME_D1_PAL
)) {

5891 
	`TW_DBG
(
TW_DBG_ERR
, "heighà(%dËîr‹áàn‹m PAL\n", 
≥ncode_∑øm
->
i_logic_video_height_mb_size
);

5892 
ªt
 = -
EINVAL
;

5895 if((
≥ncode_∑øm
->
i_logic_video_width_mb_size
 =0Ë|| (≥ncode_∑øm->i_logic_video_width_mb_sizê> 
WIDTH_FRAME_D1_PAL
)) {

5896 
	`TW_DBG
(
TW_DBG_ERR
, "width (%dËîr‹áàn‹m PAL\n", 
≥ncode_∑øm
->
i_logic_video_width_mb_size
);

5897 
ªt
 = -
EINVAL
;

5901 if((
≥ncode_∑øm
->
i_logic_video_height_mb_size
 =0Ë|| (≥ncode_∑øm->i_logic_video_height_mb_sizê> 
WIDTH_FRAME_D1_NTSC
)) {

5902 
	`TW_DBG
(
TW_DBG_ERR
, "heighà(%dËîr‹áàn‹m NTSC\n", 
≥ncode_∑øm
->
i_logic_video_height_mb_size
);

5903 
ªt
 = -
EINVAL
;

5906 if((
≥ncode_∑øm
->
i_logic_video_height_mb_size
 =0Ë|| (≥ncode_∑øm->
i_logic_video_width_mb_size
 > 
WIDTH_FRAME_D1_NTSC
)) {

5907 
	`TW_DBG
(
TW_DBG_ERR
, "width (%dËîr‹áàn‹m NTSC\n", 
≥ncode_∑øm
->
i_logic_video_width_mb_size
);

5908 
ªt
 = -
EINVAL
;

5912 if(
h264_logic_ícode_ch™
->
ty≥
 =
TW_SUB_BITSTREAM
) {

5913 if((
≥ncode_∑øm
->
i_logic_video_width_mb_size
<<4Ë>=
	`VIDEO_SIZE_TO_WIDTH
(
VIDEO_SIZE_FROM_VD
, 
phy_video_¶Ÿ
->
video_size
, 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus))) {

5914 
	`TW_DBG
(
TW_DBG_ERR
, "width should smallÅhan vi\n");

5915 
ªt
 = -
EINVAL
;

5918 if((
≥ncode_∑øm
->
i_logic_video_height_mb_size
<<4Ë>=
	`VIDEO_SIZE_TO_HEIGHT
(
VIDEO_SIZE_FROM_VD
, 
phy_video_¶Ÿ
->
video_size
, 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus))) {

5919 
	`TW_DBG
(
TW_DBG_ERR
, "heigh should smallÅhan vi\n");

5920 
ªt
 = -
EINVAL
;

5924 
	`TW_DBG
(
TW_DBG_INFO
, "ch™√»%d, upd©êwidthánd heighàtÿ(%d, %d)\n", 
h264_logic_ícode_ch™
->
logic_ch™_id
, 
≥ncode_∑øm
->
i_logic_video_width_mb_size
,Öícode_∑øm->
i_logic_video_height_mb_size
);

5926 
	`TW_DBG
(
TW_DBG_ERR
, "need set height\n");

5927 
ªt
 = -
EINVAL
;

5931 
pc⁄fig
->
width
 = 
≥ncode_∑øm
->
i_logic_video_width_mb_size
<<4;

5932 
pc⁄fig
->
height
 = 
≥ncode_∑øm
->
i_logic_video_height_mb_size
<<4;

5933 
pc⁄fig
->
ícodeSize
 = 
	`VIDEO_SIZE_FROM_WIDTH_HEIGHT
(
≥ncode_∑øm
->
i_logic_video_width_mb_size
<<4,

5934 
≥ncode_∑øm
->
i_logic_video_height_mb_size
<<4, 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus));

5935 
	`TW_DBG
(
TW_DBG_INFO
, "upd©êvideÿsizê%d, width = %d, heighà%d\n", 
pc⁄fig
->
ícodeSize
,

5936 
≥ncode_∑øm
->
i_logic_video_width_mb_size
,Öícode_∑øm->
i_logic_video_height_mb_size
);

5937 
pc⁄fig
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_ENCODE_SIZE_CHANGED
;

5940 
ícode_¥›îty
->
›
->
	`upd©e_ícode_¥›îty
”ncode_¥›îty, &
ícode_c⁄figuøti⁄
);

5942 
TW_LOGIC_CHAN_ENABLE_SET
:

5944 
ícode_c⁄åﬁ
 = &
h264_logic_ícode_ch™
->encode_control;

5945 
	`ícode_ch™_gí_ªq_msg
(
h264_logic_ícode_ch™
, 
REQ_ALGO_SLICE_HEAD
, 
NONBLOCK_OP
);

5946 if(
	`©omic_ªad
(&
ícode_c⁄åﬁ
->
íabÀ
)) {

5947 
	`TW_DBG
(
TW_DBG_ERR
, "ch™√»%dáÃódÉ«bÀ\n", 
h264_logic_ícode_ch™
->
logic_ch™_id
);

5948 
ªt
 = 
TW_OK
;

5950 
	`©omic_£t
(&
ícode_c⁄åﬁ
->
íabÀ
, 1);

5952 
	`ªgi°î_›íed_logic_ícode_ch™_öto_ma°î_¶Ÿ
(
h264_logic_ícode_ch™
, h264_logic_ícode_ch™->
ma°î_¶Ÿ
);

5954 
	`TW_DBG
(
TW_DBG_INFO
, "ch™√»%dÑeq REQ_ALGO_SLICE_HEAD\n", 
h264_logic_ícode_ch™
->
logic_ch™_id
);

5955 
ªt
 = 
TW_OK
;

5958 
	`drivî_gí_ªsume_evít
(
›íed_logic_ch™_ed
, 1);

5959 
ªt
 = 
TW_OK
;

5962 
TW_LOGIC_CHAN_DISABLE_SET
:

5964 
ícode_c⁄åﬁ
 = &
h264_logic_ícode_ch™
->encode_control;

5965 if(
	`©omic_ªad
(&
ícode_c⁄åﬁ
->
íabÀ
) == 0) {

5966 
	`TW_DBG
(
TW_DBG_INFO
, "ch™√»%dáÃódy dißbÀd\n", 
h264_logic_ícode_ch™
->
logic_ch™_id
);

5967 
ªt
 = -
EPERM
;

5969 
	`©omic_£t
(&
ícode_c⁄åﬁ
->
íabÀ
, 0);

5971 
	`uƒegi°î_›íed_logic_ícode_ch™_öto_ma°î_¶Ÿ
(
h264_logic_ícode_ch™
, h264_logic_ícode_ch™->
ma°î_¶Ÿ
);

5972 
ªt
 = 
TW_OK
;

5975 
	`drivî_gí_su•íd_evít
(
›íed_logic_ch™_ed
, 1);

5976 
ªt
 = 
TW_OK
;

5979 
TW_H264_ENCODE_FEATURE_SET
:

5980 if(!
¨g
) {

5981 
	`TW_DBG
(
TW_DBG_ERR
, "invalidárg\n");

5982  -
EINVAL
;

5984 if(
h264_logic_ícode_ch™
) {

5985 
tw_h264_ícode_„©uª_∑øm_t
 
h264_„©uª
, *
p„©uª
 = &h264_feature;

5986 
tw_h264_ícode_„©uª_t
 *
¥u¬ög_„©uª
;

5988 
¥u¬ög_„©uª
 = &
ícode_¥›îty
->
ícode_„©uª
;

5989 
	`c›y_‰om_u£r
(
p„©uª
, (*)
¨g
, (
tw_h264_ícode_„©uª_∑øm_t
));

5990 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_DEINTERLACE_MASK
) {

5991 
¥u¬ög_„©uª
->
›
->
	`upd©e_deöãæa˚
’ru¬ög_„©uª, 
p„©uª
->
b_íabÀ_deöãæa˚
);

5993 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_SKIP_MASK
) {

5994 
¥u¬ög_„©uª
->
›
->
	`upd©e_skù
’ru¬ög_„©uª, 
p„©uª
->
b_íabÀ_skù
);

5996 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_I_4X4_MASK
) {

5997 
¥u¬ög_„©uª
->
›
->
	`upd©e_i_4x4
’ru¬ög_„©uª, 
p„©uª
->
b_íabÀ_I_4X4
);

5999 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENABLE_CHANGE_HALF_PIXEL_MASK
) {

6000 
¥u¬ög_„©uª
->
›
->
	`upd©e_hÆf_pixñ
’ru¬ög_„©uª, 
p„©uª
->
b_íabÀ_hÆf_pixñ
);

6002 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_QUARTER_PIXEL_MASK
) {

6003 
¥u¬ög_„©uª
->
›
->
	`upd©e_qu¨ãr_pixñ
’ru¬ög_„©uª, 
p„©uª
->
b_íabÀ_qu¨ãr_pixñ
);

6005 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_MB_DELAY_MASK
) {

6006 if(
p„©uª
->
i_mb_dñay_vÆue
) {

6007 if((
p„©uª
->
i_mb_dñay_vÆue
 >
MAX_MB_DELAY
Ë|| (p„©uª->i_mb_dñay_vÆuê< 
MIN_MB_DELAY
)){

6008 
	`TW_DBG
(
TW_DBG_ERR
, "mb_dñay %dÉº‹, [%d, %d)\n", 
p„©uª
->
i_mb_dñay_vÆue
, 
MIN_MB_DELAY
, 
MAX_MB_DELAY
);

6009 
ªt
 = -
EINVAL
;

6012 
¥u¬ög_„©uª
->
›
->
	`upd©e_mb_dñay
’ru¬ög_„©uª, 
p„©uª
->
i_mb_dñay_vÆue
);

6014 
	`TW_DBG
(
TW_DBG_ERR
, "mb_dñay 0x%xÉº‹\n", 
p„©uª
->
i_mb_dñay_vÆue
);

6015 
ªt
 = -
EINVAL
;

6020 
ªt
 = 
TW_OK
;

6023 
TW_H264_ENCODE_FEATURE_GET
:

6024 if(!
¨g
) {

6025 
	`TW_DBG
(
TW_DBG_ERR
, "invalidárg\n");

6026  -
EINVAL
;

6028 if(
h264_logic_ícode_ch™
) {

6029 
tw_h264_ícode_„©uª_∑øm_t
 
h264_„©uª
, *
p„©uª
 = &h264_feature;

6030 
tw_h264_ícode_„©uª_t
 *
¥u¬ög_„©uª
;

6032 
¥u¬ög_„©uª
 = &
ícode_¥›îty
->
ícode_„©uª
;

6033 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_DEINTERLACE_MASK
) {

6034 
p„©uª
->
b_íabÀ_deöãæa˚
 = 
¥u¬ög_„©uª
->
›
->
	`gë_deöãæa˚
(prunning_feature);

6036 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_SKIP_MASK
) {

6037 
p„©uª
->
b_íabÀ_skù
 = 
¥u¬ög_„©uª
->
›
->
	`gë_skù
(prunning_feature);

6039 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_I_4X4_MASK
) {

6040 
p„©uª
->
b_íabÀ_I_4X4
 = 
¥u¬ög_„©uª
->
›
->
	`gë_i_4x4
(prunning_feature);

6042 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENABLE_CHANGE_HALF_PIXEL_MASK
) {

6043 
p„©uª
->
b_íabÀ_hÆf_pixñ
 = 
¥u¬ög_„©uª
->
›
->
	`gë_hÆf_pixñ
(prunning_feature);

6045 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_QUARTER_PIXEL_MASK
) {

6046 
p„©uª
->
b_íabÀ_qu¨ãr_pixñ
 = 
¥u¬ög_„©uª
->
›
->
	`gë_qu¨ãr_pixñ
(prunning_feature);

6048 if(
p„©uª
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_FEATURE_ENABLE_CHANGE_MB_DELAY_MASK
) {

6049 
p„©uª
->
i_mb_dñay_vÆue
 = 
¥u¬ög_„©uª
->
›
->
	`gë_mb_dñay
(prunning_feature);

6052 
	`c›y_to_u£r
((*)
¨g
, 
p„©uª
, (
tw_h264_ícode_„©uª_∑øm_t
));

6053 
ªt
 = 
TW_OK
;

6056 
TW_H264_ENCODE_RC_SET
:

6057 if(!
¨g
) {

6058 
	`TW_DBG
(
TW_DBG_ERR
, "invalidárg\n");

6059  -
EINVAL
;

6061 if(
h264_logic_ícode_ch™
) {

6062 
tw_h264_ícode_rc_t
 
rc
, *
p_rc
 = &rc, *
¥u¬ög_rc
;

6064 
¥u¬ög_rc
 = &
ícode_¥›îty
->
ícode_rc
;

6065 
	`mem£t
(
pc⁄fig
, 0, (
tw_h264_ícode_c⁄figuøti⁄_t
));

6066 
	`c›y_‰om_u£r
(
p_rc
, (*)
¨g
, (
tw_h264_ícode_rc_t
));

6067 if(
p_rc
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_RC_ENABLE_CHANGE_IMAGE_PRIORITY_MASK
 ) {

6068 if((
p_rc
->
e_image_¥i‹ôy
 >
TW_RC_IMAGE_QUALITY_FIRST
Ë&& (p_rc->e_image_¥i‹ôy <
TW_RC_IMAGE_SMOOTH_FIRST
)) {

6069 
¥u¬ög_rc
->
e_image_¥i‹ôy
 = 
p_rc
->e_image_priority;

6070 
¥u¬ög_rc
->
ch™ge_mask_Êag
 |
TW_H264_ENCODE_RC_ENABLE_CHANGE_IMAGE_PRIORITY_MASK
;

6072 
	`TW_DBG
(
TW_DBG_ERR
, "unknow¿image_¥i‹ôy %d\n", 
p_rc
->
e_image_¥i‹ôy
);

6073 
ªt
 = -
EINVAL
;

6076 if(
p_rc
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_RC_ENABLE_CHANGE_RC_TYPE_MASK
) {

6077 if((
p_rc
->
e_rc_ty≥
 >
TW_H264_NO_RC
Ë&& (p_rc->e_rc_ty≥ < 
TW_H264_VBR
)) {

6078 
¥u¬ög_rc
->
e_rc_ty≥
 = 
p_rc
->e_rc_type;

6079 
¥u¬ög_rc
->
ch™ge_mask_Êag
 |
TW_H264_ENCODE_RC_ENABLE_CHANGE_RC_TYPE_MASK
;

6081 
	`TW_DBG
(
TW_DBG_ERR
, "unknow¿rc_ty≥ %d\n", 
p_rc
->
e_rc_ty≥
);

6082 
ªt
 = -
EINVAL
;

6085 if(
p_rc
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_RC_ENABLE_CHANGE_DEFAULT_QP_MASK
) {

6086 
qp_mö
 = 
QUANT_SCALE_MIN
, 
qp_max
 = 
QUANT_SCALE_MAX
;

6087 if(
p_rc
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_RC_ENABLE_CHANGE_RC_TYPE_MASK
) {

6088 if(
p_rc
->
e_rc_ty≥
 =
TW_H264_NO_RC
) {

6089 
qp_mö
 = 12;

6092 if((
p_rc
->
i_deÁu…_qp
 >
qp_mö
Ë&& (p_rc->i_deÁu…_q∞<
qp_max
)) {

6093 
¥u¬ög_rc
->
i_deÁu…_qp
 = 
p_rc
->i_default_qp;

6094 
pc⁄fig
->
qpi
 = 
p_rc
->
i_deÁu…_qp
;

6095 
pc⁄fig
->
ch™gedMask
 |
TW5864_ENCODE_CONFIG_QPI_CHANGED
;

6096 
¥u¬ög_rc
->
ch™ge_mask_Êag
 |
TW_H264_ENCODE_RC_ENABLE_CHANGE_DEFAULT_QP_MASK
;

6098 
	`TW_DBG
(
TW_DBG_ERR
, "deÁu…_q∞%dÉº‹, [%d, %d]\n", 
p_rc
->
i_deÁu…_qp
, 
qp_mö
, 
qp_max
);

6099 
ªt
 = -
EINVAL
;

6102 
ícode_¥›îty
->
›
->
	`upd©e_ícode_¥›îty
”ncode_¥›îty, 
pc⁄fig
);

6105 
TW_H264_ENCODE_RC_GET
:

6106 if(!
¨g
) {

6107 
	`TW_DBG
(
TW_DBG_ERR
, "invalidárg\n");

6108  -
EINVAL
;

6110 if(
h264_logic_ícode_ch™
) {

6111 
tw_h264_ícode_rc_t
 
rc
, *
p_rc
 = &rc, *
¥u¬ög_rc
;

6113 
¥u¬ög_rc
 = &
ícode_¥›îty
->
ícode_rc
;

6114 if(
p_rc
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_RC_ENABLE_CHANGE_RC_TYPE_MASK
) {

6115 
p_rc
->
e_rc_ty≥
 = 
¥u¬ög_rc
->e_rc_type;

6117 if(
p_rc
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_RC_ENABLE_CHANGE_IMAGE_PRIORITY_MASK
) {

6118 
p_rc
->
e_image_¥i‹ôy
 = 
¥u¬ög_rc
->e_image_priority;

6120 if(
p_rc
->
ch™ge_mask_Êag
 & 
TW_H264_ENCODE_RC_ENABLE_CHANGE_DEFAULT_QP_MASK
) {

6121 
p_rc
->
i_deÁu…_qp
 = 
¥u¬ög_rc
->i_default_qp;

6124 
ªt
 = 
TW_OK
;

6127 
TW_H264_ENCODE_RC_PARAM_SET
:

6128 
TW_H264_ENCODE_RC_PARAM_GET
:

6129 
	`TW_DBG
(
TW_DBG_ERR
, "not support\n");

6130 
ªt
 = -
EPERM
;

6132 
TW_H264_ENCODE_CHAN_MAP_GET
:

6133 if(!
¨g
) {

6134 
	`TW_DBG
(
TW_DBG_ERR
, "invalidárg\n");

6135  -
EINVAL
;

6137 if(
h264_logic_ícode_ch™
){

6138 
tw_h264_ch™_m≠_öfo
 
m≠_öfo
, *
p_m≠
 = &map_info;

6140 
p_m≠
->
i_phy_ch™_id
 = 
h264_logic_ícode_ch™
->
ma°î_¶Ÿ
->
phy_¶Ÿ_id
;

6141 
p_m≠
->
i_logic_ch™_id
 = 
h264_logic_ícode_ch™
->
ma°î_¶Ÿ
->
¸oss_bus_logic_video_¶Ÿ
->
logicSlŸId
;

6143 
	`c›y_to_u£r
((*)
¨g
, 
p_m≠
, (
tw_h264_ch™_m≠_öfo
));

6145 
ªt
 = 
TW_OK
;

6147 
TW_LOGIC_CHAN_OSD_GET_PARAM
:

6148 if(
¨g
){

6149 
TW_OSD_PARAM
 *
osd_c⁄fig_∑øm
;

6151 
osd_c⁄fig_∑øm
 = &
h264_logic_ícode_ch™
->
ícode_osd_ígöe
.
osd_ru¬ög_∑øm
;

6152 
	`c›y_to_u£r
((*)
¨g
, 
osd_c⁄fig_∑øm
, (
TW_OSD_PARAM
));

6154 
	`TW_DBG
(
TW_DBG_ERR
, "invalidárg\n");

6155  -
EINVAL
;

6158 
TW_LOGIC_CHAN_OSD_SET_PARAM
:

6159 if(
¨g
){

6160 
TW_OSD_PARAM
 *
osd_c⁄fig_∑øm
, 
c⁄fig_∑øm
;

6161 
osd_ch™_ígöe_t
 *
ígöe
;

6162 
u32
 
width
 , 
height
;

6164 
osd_c⁄fig_∑øm
 = &
c⁄fig_∑øm
;

6165 
	`c›y_‰om_u£r
(
osd_c⁄fig_∑øm
, (*)
¨g
, (
TW_OSD_PARAM
));

6167 
ígöe
 = &
h264_logic_ícode_ch™
->
ícode_osd_ígöe
;

6168 
width
 = 
ícode_¥›îty
->
›
->
	`gë_ícodeSize_width
(encode_property);

6169 
height
 = 
ícode_¥›îty
->
›
->
	`gë_ícodeSize_height
(encode_property);

6171 
osd_c⁄fig_∑øm
->
«me
[
NAME_LEN
 - 1] = '\0';

6172 if((
osd_c⁄fig_∑øm
->
«me_©åib
 !
OSD_ATTR_DISPLAY_ON
Ë&& (osd_c⁄fig_∑øm->«me_©åib !
OSD_ATTR_DISPLAY_OFF
)){

6173 
	`TW_DBG
(
TW_DBG_ERR
, "osdÇame_attribÉrror, only support OSD_ATTR_DISPLAY_ON, OSD_ATTR_DISPLAY_OFF");

6174 
OSD_FAILED
;

6176 if(
osd_c⁄fig_∑øm
->
«me_pos_x
 >
width
) {

6177 
	`TW_DBG
(
TW_DBG_ERR
, "osdÇame_pos_x %d ovîÊow, should smÆ»th™ %d\n", 
osd_c⁄fig_∑øm
->
«me_pos_x
, 
width
);

6178 
OSD_FAILED
;

6180 if(
osd_c⁄fig_∑øm
->
«me_pos_y
 >
height
) {

6181 
	`TW_DBG
(
TW_DBG_ERR
, "osdÇame_pos_y %d ovîÊow, should smÆ»th™ %d\n", 
osd_c⁄fig_∑øm
->
«me_pos_y
, 
height
);

6182 
OSD_FAILED
;

6185 if((
osd_c⁄fig_∑øm
->
time_©åib
 !
OSD_ATTR_DISPLAY_ON
Ë&& (osd_c⁄fig_∑øm->time_©åib !
OSD_ATTR_DISPLAY_OFF
)){

6186 
	`TW_DBG
(
TW_DBG_ERR
, "osdÅime_attribÉrror, only support OSD_ATTR_DISPLAY_ON, OSD_ATTR_DISPLAY_OFF");

6187 
OSD_FAILED
;

6189 if(
osd_c⁄fig_∑øm
->
time_pos_x
 >
width
) {

6190 
	`TW_DBG
(
TW_DBG_ERR
, "osdÅime_pos_x %d ovîÊow, should smÆ»th™ %d\n", 
osd_c⁄fig_∑øm
->
time_pos_x
, 
width
);

6191 
OSD_FAILED
;

6193 if(
osd_c⁄fig_∑øm
->
time_pos_y
 >
height
) {

6194 
	`TW_DBG
(
TW_DBG_ERR
, "osdÅime_pos_y %d ovîÊow, should smÆ»th™ %d\n", 
osd_c⁄fig_∑øm
->
time_pos_y
, 
height
);

6195 
OSD_FAILED
;

6198 if((
osd_c⁄fig_∑øm
->
shñãr1_©åib
 !
OSD_ATTR_DISPLAY_ON
Ë&& (osd_c⁄fig_∑øm->shñãr1_©åib !
OSD_ATTR_DISPLAY_OFF
)){

6199 
	`TW_DBG
(
TW_DBG_ERR
, "osd shelter1_attribÉrror, only support OSD_ATTR_DISPLAY_ON, OSD_ATTR_DISPLAY_OFF");

6200 
OSD_FAILED
;

6202 if((
osd_c⁄fig_∑øm
->
shñãr1_pos_x
 >
width
Ë|| ((osd_c⁄fig_∑øm->shñãr1_pos_x + osd_c⁄fig_∑øm->
shñãr1_width
) >width)

6203 ||(
osd_c⁄fig_∑øm
->
shñãr1_pos_y
 >
height
Ë|| ((osd_c⁄fig_∑øm->shñãr1_pos_y + osd_c⁄fig_∑øm->
shñãr1_height
) >height)) {

6204 
	`TW_DBG
(
TW_DBG_ERR
, "osd shñãr1Ñegi⁄ (%d, %d, %d, %dËovîÊow\n", 
osd_c⁄fig_∑øm
->
shñãr1_pos_x
,

6205 
osd_c⁄fig_∑øm
->
shñãr1_pos_y
, osd_c⁄fig_∑øm->
shñãr1_width
, osd_c⁄fig_∑øm->
shñãr1_height
);

6206 
OSD_FAILED
;

6209 if((
osd_c⁄fig_∑øm
->
shñãr2_©åib
 !
OSD_ATTR_DISPLAY_ON
Ë&& (osd_c⁄fig_∑øm->shñãr2_©åib !
OSD_ATTR_DISPLAY_OFF
)){

6210 
	`TW_DBG
(
TW_DBG_ERR
, "osd shelter2_attribÉrror, only support OSD_ATTR_DISPLAY_ON, OSD_ATTR_DISPLAY_OFF");

6211 
OSD_FAILED
;

6213 if((
osd_c⁄fig_∑øm
->
shñãr2_pos_x
 >
width
Ë|| ((osd_c⁄fig_∑øm->shñãr2_pos_x + osd_c⁄fig_∑øm->
shñãr2_width
) >width)

6214 ||(
osd_c⁄fig_∑øm
->
shñãr2_pos_y
 >
height
Ë|| ((osd_c⁄fig_∑øm->shñãr2_pos_y + osd_c⁄fig_∑øm->
shñãr2_height
) >height)) {

6215 
	`TW_DBG
(
TW_DBG_ERR
, "osd shñãr2Ñegi⁄ (%d, %d, %d, %dËovîÊow\n", 
osd_c⁄fig_∑øm
->
shñãr2_pos_x
,

6216 
osd_c⁄fig_∑øm
->
shñãr2_pos_y
, osd_c⁄fig_∑øm->
shñãr2_width
, osd_c⁄fig_∑øm->
shñãr2_height
);

6217 
OSD_FAILED
;

6220 
osd_c⁄fig_∑øm
->
subtôÀ1
[
SUB_LEN
 - 1] = '\0';

6221 if((
osd_c⁄fig_∑øm
->
subtôÀ1_©åib
 !
OSD_ATTR_DISPLAY_ON
Ë&& (osd_c⁄fig_∑øm->subtôÀ1_©åib !
OSD_ATTR_DISPLAY_OFF
)){

6222 
	`TW_DBG
(
TW_DBG_ERR
, "osd subtitle1_attribÉrror, only support OSD_ATTR_DISPLAY_ON, OSD_ATTR_DISPLAY_OFF");

6223 
OSD_FAILED
;

6225 if(
osd_c⁄fig_∑øm
->
subtôÀ1_pos_x
 >
width
) {

6226 
	`TW_DBG
(
TW_DBG_ERR
, "osd subtôÀ1_pos_x %d ovîÊow, should smÆ»th™ %d\n", 
osd_c⁄fig_∑øm
->
subtôÀ1_pos_x
, 
width
);

6227 
OSD_FAILED
;

6229 if(
osd_c⁄fig_∑øm
->
subtôÀ1_pos_y
 >
height
) {

6230 
	`TW_DBG
(
TW_DBG_ERR
, "osd subtôÀ1_pos_y %d ovîÊow, should smÆ»th™ %d\n", 
osd_c⁄fig_∑øm
->
subtôÀ1_pos_y
, 
height
);

6231 
OSD_FAILED
;

6234 
osd_c⁄fig_∑øm
->
subtôÀ2
[
SUB_LEN
 - 1] = '\0';

6235 if((
osd_c⁄fig_∑øm
->
subtôÀ2_©åib
 !
OSD_ATTR_DISPLAY_ON
Ë&& (osd_c⁄fig_∑øm->subtôÀ2_©åib !
OSD_ATTR_DISPLAY_OFF
)){

6236 
	`TW_DBG
(
TW_DBG_ERR
, "osd subtitle2_attribÉrror, only support OSD_ATTR_DISPLAY_ON, OSD_ATTR_DISPLAY_OFF");

6237 
OSD_FAILED
;

6239 if(
osd_c⁄fig_∑øm
->
subtôÀ2_pos_x
 >
width
) {

6240 
	`TW_DBG
(
TW_DBG_ERR
, "osd subtôÀ2_pos_x %d ovîÊow, should smÆ»th™ %d\n", 
osd_c⁄fig_∑øm
->
subtôÀ2_pos_x
, 
width
);

6241 
OSD_FAILED
;

6243 if(
osd_c⁄fig_∑øm
->
subtôÀ2_pos_y
 >
height
) {

6244 
	`TW_DBG
(
TW_DBG_ERR
, "osd subtôÀ2_pos_y %d ovîÊow, should smÆ»th™ %d\n", 
osd_c⁄fig_∑øm
->
subtôÀ2_pos_y
, 
height
);

6245 
OSD_FAILED
;

6248 
osd_c⁄fig_∑øm
->
subtôÀ3
[
SUB_LEN
 - 1] = '\0';

6249 if((
osd_c⁄fig_∑øm
->
subtôÀ3_©åib
 !
OSD_ATTR_DISPLAY_ON
Ë&& (osd_c⁄fig_∑øm->subtôÀ3_©åib !
OSD_ATTR_DISPLAY_OFF
)){

6250 
	`TW_DBG
(
TW_DBG_ERR
, "osd subtitle3_attribÉrror, only support OSD_ATTR_DISPLAY_ON, OSD_ATTR_DISPLAY_OFF");

6251 
OSD_FAILED
;

6253 if(
osd_c⁄fig_∑øm
->
subtôÀ3_pos_x
 >
width
) {

6254 
	`TW_DBG
(
TW_DBG_ERR
, "osd subtôÀ3_pos_x %d ovîÊow, should smÆ»th™ %d\n", 
osd_c⁄fig_∑øm
->
subtôÀ3_pos_x
, 
width
);

6255 
OSD_FAILED
;

6257 if(
osd_c⁄fig_∑øm
->
subtôÀ3_pos_y
 >
height
) {

6258 
	`TW_DBG
(
TW_DBG_ERR
, "osd subtôÀ3_pos_y %d ovîÊow, should smÆ»th™ %d\n", 
osd_c⁄fig_∑øm
->
subtôÀ3_pos_y
, 
height
);

6259 
OSD_FAILED
;

6262 
osd_c⁄fig_∑øm
->
subtôÀ4
[
SUB_LEN
 - 1] = '\0';

6263 if((
osd_c⁄fig_∑øm
->
subtôÀ4_©åib
 !
OSD_ATTR_DISPLAY_ON
Ë&& (osd_c⁄fig_∑øm->subtôÀ4_©åib !
OSD_ATTR_DISPLAY_OFF
)){

6264 
	`TW_DBG
(
TW_DBG_ERR
, "osd subtitle4_attribÉrror, only support OSD_ATTR_DISPLAY_ON, OSD_ATTR_DISPLAY_OFF");

6265 
OSD_FAILED
;

6267 if(
osd_c⁄fig_∑øm
->
subtôÀ4_pos_x
 >
width
) {

6268 
	`TW_DBG
(
TW_DBG_ERR
, "osd subtôÀ4_pos_x %d ovîÊow, should smÆ»th™ %d\n", 
osd_c⁄fig_∑øm
->
subtôÀ4_pos_x
, 
width
);

6269 
OSD_FAILED
;

6271 if(
osd_c⁄fig_∑øm
->
subtôÀ4_pos_y
 >
height
) {

6272 
	`TW_DBG
(
TW_DBG_ERR
, "osd subtôÀ4_pos_y %d ovîÊow, should smÆ»th™ %d\n", 
osd_c⁄fig_∑øm
->
subtôÀ4_pos_y
, 
height
);

6273 
OSD_FAILED
;

6275 
ígöe
->
›
->
	`upd©e_ícode_osd_¥›îty
”ngöe, 
osd_c⁄fig_∑øm
);

6276  
TW_OK
;

6277 
OSD_FAILED
:

6278  -
EINVAL
;

6280 
	`TW_DBG
(
TW_DBG_ERR
, "invalidárg\n");

6281  -
EINVAL
;

6285  -
ENODEV
;

6288  
ªt
;

6289 
	}
}

6291 
	$h264_ícode_hcd_öãrÁ˚_gë_°©e
(
ed_tcb_t
 *
›íed_logic_ch™_ed
)

6293 
ªt
 = 
TW_ED_UNREGISTER
;

6294 if(
›íed_logic_ch™_ed
 !
NULL
){

6295 
ªt
 = 
	`©omic_ªad
(&
›íed_logic_ch™_ed
->
°©e
);

6297  
ªt
;

6298 
	}
}

6300 
hcd_öãrÁ˚_›î©i⁄
 
	gh264_ícode_hcd_öãrÁ˚_›
 = {

6301 .
›í
 = 
h264_ícode_hcd_öãrÁ˚_›í
,

6302 .
	g˛o£
 = 
h264_ícode_hcd_öãrÁ˚_˛o£
,

6303 .
	gsu•íd
 = 
h264_ícode_hcd_öãrÁ˚_su•íd
,

6304 .
	gªsume
 = 
h264_ícode_hcd_öãrÁ˚_ªsume
,

6305 .
	gio˘l
 = 
h264_ícode_hcd_öãrÁ˚_io˘l
,

6306 .
	ggë_°©e
 = 
h264_ícode_hcd_öãrÁ˚_gë_°©e
,

6309 
	$h264_logic_ícode_ch™_drivî_nŸify_my£lf
(
tw_ªgi°î_node_t
 *
node
, *
¥iv
, 
tw_nŸify_msg
 *
msg
)

6311 if((
node
!=
NULL
Ë&& (
¥iv
!=NULL)){

6314 
	}
}

6316 
	$h264_logic_ícode_ch™_drivî_m©ch_id
(
tw_ªgi°î_node_t
 *
node
, *
¥iv
, 
logic_ch™_id
)

6318 
ªt
 = 
TW_ERR
;

6319 if((
node
!=
NULL
Ë&& (
¥iv
!=NULL)){

6320 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
 = (tw_h264_logic_ícode_ch™_t*)
¥iv
;

6321 if(
h264_logic_ícode_ch™
->
logic_ch™_id
 ==Üogic_chan_id){

6322 
ªt
 = 
TW_OK
;

6325  
ªt
;

6326 
	}
}

6329 
	#li°_f‹_óch_h264
(
logic_ch™
, 
h264_¥›îty
, 
phy_¶Ÿ
, 
logic_¶Ÿ
, \

6330 
ícode_c⁄åﬁ
, 
ícode_‰ame_queue
, 
video_ch™_buf_poﬁ
, \

6331 
ícode_„©uª
, 
ícode_rc
, 
vd_‹ig
, 
ba£_logic_ch™
) \

6332 
logic_ch™
 = 
ba£_logic_ch™
; \

6333 ((
logic_ch™
 - 
ba£_logic_ch™
Ë< 
TW5864_PHY_VD_CHAN_NUMBER
) && (\

6334 (
ícode_„©uª
 = &
logic_ch™
->
ícode_¥›îty
.encode_feature), \

6335 (
ícode_rc
 = &
logic_ch™
->
ícode_¥›îty
.encode_rc), \

6336 (
h264_¥›îty
 = &
logic_ch™
->
ícode_¥›îty
.encode_property), \

6337 (
phy_¶Ÿ
 = 
logic_ch™
->
ma°î_¶Ÿ
)) && \

6338 (
phy_¶Ÿ
) && \

6339 (
logic_¶Ÿ
 = 
phy_¶Ÿ
->
¸oss_bus_logic_video_¶Ÿ
, \

6340 (
vd_‹ig
 = &
phy_¶Ÿ
->
vd_‹ig_buf
), \

6341 (
ícode_c⁄åﬁ
 = &
logic_ch™
->encode_control), \

6342 (
ícode_‰ame_queue
 = &
logic_ch™
->encode_frame_queue), \

6343 (
video_ch™_buf_poﬁ
 = &
logic_ch™
->
ícode_ch™_buf_poﬁ
)Ë&& (
logic_¶Ÿ
); \

6344 
logic_ch™
++)

	)

6346 
	$h264_¥oc_ªad
(*
∑ge
, **
°¨t
, 
off_t
 
off
,

6347 
cou¡
, *
eof
, *
d©a
)

6349 
Àn
 = 0, 
i
 = 0, 
issub
 = 0;

6350 
dvm_chù_t
 *
chù
;

6351 
tw_h264_logic_ícode_ch™_t
 *
h264_maö
, *
ba£
;

6352 
tw_h264_logic_ícode_ch™_t
 *
h264_sub
;

6353 
tw_h264_ícode_c⁄figuøti⁄_t
 *
h264_c⁄fig
;

6355 
tw_vd_‹ig_buf_öfo_t
 *
vd_‹ig
;

6356 
tw_h264_phy_video_¶Ÿ_t
 *
phy_¶Ÿ
;

6357 
tw_h264_logic_video_¶Ÿ_t
 *
logic_¶Ÿ
;

6358 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

6359 
tw_video_‰ame_tcb_queue_t
 *
ícode_‰ame_queue
;

6360 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
;

6361 
tw_h264_ícode_„©uª_t
 *
ícode_„©uª
;

6362 
tw_h264_ícode_rc_t
 *
ícode_rc
;

6364 
h264_maö
 = (
tw_h264_logic_ícode_ch™_t
 *)
d©a
;

6365 
h264_sub
 = 
h264_maö
->
chù
->
h264_sub_ícode_logic_ch™
;

6367 
chù
 = 
h264_maö
->chip;

6368 
ba£
 = 
chù
->
h264_ma°î_ícode_logic_ch™
;

6372 
ªåy
:

6374 
Àn
 +
	`•rötf
(
∑ge
+len, "%8s %8s %8s %8s %8s", "=====>ch", "phy", "logic", "type", "read_bitstream_mode\n");

6375 
	`li°_f‹_óch_h264
(
h264_maö
, 
h264_c⁄fig
, 
phy_¶Ÿ
, 
logic_¶Ÿ
, \

6376 
ícode_c⁄åﬁ
, 
ícode_‰ame_queue
, 
video_ch™_buf_poﬁ
, \

6377 
ícode_„©uª
, 
ícode_rc
, 
vd_‹ig
, 
ba£
){

6378 if(
	`©omic_ªad
(&
h264_maö
->
›íed_Êag
) == 0){

6381 
Àn
 +
	`•rötf
(
∑ge
 +Üí, "%8d %8d %8d %8†%8s\n",
i
++,

6382 
h264_maö
->
phy_¶Ÿ_id
,

6383 
h264_maö
->
logic_ch™_id
,

6384 (
h264_maö
->
ty≥
 =
TW_MASTER_BITSTREAM
)?"MAIN":"SUB",

6385 (
h264_maö
->
ªad_bô°ªam_mode
 =
READ_H264_BITSTREAM_BY_DDR
)?"DDR":"RAM");

6387 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s %8s %8s %8s %8s %8s %8s %8s\n", "Dterlace", "SMV", "MVA",

6389 
	`li°_f‹_óch_h264
(
h264_maö
, 
h264_c⁄fig
, 
phy_¶Ÿ
, 
logic_¶Ÿ
, \

6390 
ícode_c⁄åﬁ
, 
ícode_‰ame_queue
, 
video_ch™_buf_poﬁ
, \

6391 
ícode_„©uª
, 
ícode_rc
, 
vd_‹ig
, 
ba£
){

6392 if(
	`©omic_ªad
(&
h264_maö
->
›íed_Êag
) == 0){

6395 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8d %8d %8d %8d %8d %8d %8d %8d\n",

6396 
ícode_„©uª
->
›
->
	`gë_deöãæa˚
(encode_feature),

6397 
h264_c⁄fig
->
íabÀSubmôMŸi⁄Ve˘‹
,

6398 
h264_c⁄fig
->
íabÀMŸi⁄Ve˘‹A«ly£s
,

6399 
h264_c⁄fig
->
ícodeSize
,

6400 
h264_c⁄fig
->
width
,

6401 
h264_c⁄fig
->
height
,

6402 
h264_c⁄fig
->
bôøã
,

6403 
h264_c⁄fig
->
Âs
);

6407 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s %8s %8s %8s %8s %8s %8s %8s\n", "I", "gop",

6409 
	`li°_f‹_óch_h264
(
h264_maö
, 
h264_c⁄fig
, 
phy_¶Ÿ
, 
logic_¶Ÿ
, \

6410 
ícode_c⁄åﬁ
, 
ícode_‰ame_queue
, 
video_ch™_buf_poﬁ
, \

6411 
ícode_„©uª
, 
ícode_rc
, 
vd_‹ig
, 
ba£
){

6412 if(
	`©omic_ªad
(&
h264_maö
->
›íed_Êag
) == 0){

6415 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8d %8d %8d %8d %8d %8d %8d %8d\n",

6416 
h264_c⁄fig
->
keyFømeI¡îvÆs
,

6417 
h264_c⁄fig
->
g›I¡îvÆs
,

6418 
h264_c⁄fig
->
¥i
,

6419 
ícode_rc
->
e_rc_ty≥
,

6420 
h264_c⁄fig
->
imageLevñ
,

6421 
h264_c⁄fig
->
qpi
,

6422 
h264_c⁄fig
->
qµ
,

6423 
h264_c⁄fig
->
qpb
);

6427 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "encode feature:\n");

6428 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s %8s %8s %8s %8s %8s\n", "deinterlace", "1/2", "1/4", "i_4x4", "skip", "MBDELAY");

6429 
	`li°_f‹_óch_h264
(
h264_maö
, 
h264_c⁄fig
, 
phy_¶Ÿ
, 
logic_¶Ÿ
, \

6430 
ícode_c⁄åﬁ
, 
ícode_‰ame_queue
, 
video_ch™_buf_poﬁ
, \

6431 
ícode_„©uª
, 
ícode_rc
, 
vd_‹ig
, 
ba£
){

6432 if(
	`©omic_ªad
(&
h264_maö
->
›íed_Êag
) == 0){

6435 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s %8s %8s %8s %8s %8d\n",

6436 
ícode_„©uª
->
›
->
	`gë_deöãæa˚
(encode_feature)? "ON":"OFF",

6437 
ícode_„©uª
->
›
->
	`gë_hÆf_pixñ
(encode_feature)? "ON":"OFF",

6438 
ícode_„©uª
->
›
->
	`gë_qu¨ãr_pixñ
(encode_feature)? "ON":"OFF",

6439 
ícode_„©uª
->
›
->
	`gë_i_4x4
(encode_feature)? "ON":"OFF",

6440 
ícode_„©uª
->
›
->
	`gë_skù
(encode_feature)? "ON":"OFF",

6441 
ícode_„©uª
->
›
->
	`gë_mb_dñay
(encode_feature));

6445 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "phy video slot info:\n");

6446 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s %8s %8s %8s %8s %8s", "slot_id", "bus_id", "logic_id", "size", "discard_table", "soft_discard_table\n");

6447 
	`li°_f‹_óch_h264
(
h264_maö
, 
h264_c⁄fig
, 
phy_¶Ÿ
, 
logic_¶Ÿ
, \

6448 
ícode_c⁄åﬁ
, 
ícode_‰ame_queue
, 
video_ch™_buf_poﬁ
, \

6449 
ícode_„©uª
, 
ícode_rc
, 
vd_‹ig
, 
ba£
){

6450 if(
	`©omic_ªad
(&
h264_maö
->
›íed_Êag
) == 0){

6453 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8d%8d%8d%8d 0x%08x 0x%08x\n",

6454 
phy_¶Ÿ
->
phy_¶Ÿ_id
,

6455 
phy_¶Ÿ
->
phy_bus_id
,

6456 
phy_¶Ÿ
->
m≠_logic_id
,

6457 
phy_¶Ÿ
->
video_size
,

6458 
logic_¶Ÿ
->
disˇrdTabÀ
,

6459 
ícode_c⁄åﬁ
->
i_so·w¨e_disˇrd_‰ame_èbÀ
);

6462 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "encoder status:\n");

6463 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s\n", "int", "AD_ready", "BlkCnt", "FrmCnt", "FrmQue", "fps", "slice", "state", "checkad", "max_int", "cur_int", "min_int");

6464 
	`li°_f‹_óch_h264
(
h264_maö
, 
h264_c⁄fig
, 
phy_¶Ÿ
, 
logic_¶Ÿ
, \

6465 
ícode_c⁄åﬁ
, 
ícode_‰ame_queue
, 
video_ch™_buf_poﬁ
, \

6466 
ícode_„©uª
, 
ícode_rc
, 
vd_‹ig
, 
ba£
){

6467 if(
	`©omic_ªad
(&
h264_maö
->
›íed_Êag
) == 0){

6470 
Àn
 +
	`•rötf
(
∑ge
 +Üí, "%8d %8d %8d %8d %8d %8d %8d %8d %8d %8d %8d %8d\n", 
ícode_c⁄åﬁ
->
i_Âm
,Éncode_c⁄åﬁ->
ad_ªady
,

6471 
video_ch™_buf_poﬁ
->
›
->
	`gë_video_∑ckë_tcb_poﬁ_íåy_numbî
(video_chan_buf_pool),

6472 
video_ch™_buf_poﬁ
->
›
->
	`gë_video_‰ame_tcb_poﬁ_íåy_numbî
(video_chan_buf_pool),

6473 
ícode_‰ame_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(encode_frame_queue),

6474 
ícode_c⁄åﬁ
->
i_cuº_Âs
,

6475 
	`©omic_ªad
(&
ícode_c⁄åﬁ
->
¶i˚_hód_™d_ad_°©us
),

6476 
h264_maö
->
›íed_logic_ch™_ed
.
›
->
	`gë_°©e
(&h264_main->opened_logic_chan_ed),

6477 
	`©omic_ªad
(&
phy_¶Ÿ
->
vd_‹ig_buf
.
°›_check_ad
),

6478 
ícode_c⁄åﬁ
->
ícode_dñè
.
max_dñè
,

6479 
ícode_c⁄åﬁ
->
ícode_dñè
.
cur_dñè
,

6480 
ícode_c⁄åﬁ
->
ícode_dñè
.
mö_dñè
);

6482 if(
issub
 == 0) {

6483 
issub
 = 1;

6484 
ba£
 = 
chù
->
h264_sub_ícode_logic_ch™
;

6485 
ªåy
;

6487 
Àn
 +
	`•rötf
(
∑ge
 +Üí, "s_⁄ly_i_4x4 = %d\n", 
s_⁄ly_i_4x4
);

6491  
Àn
;

6492 
	}
}

6493 
	eSTATISTIC_MODE
{

6494 
	mSTATISTIC_MODE_0
 = 0,

6495 
	mSTATISTIC_MODE_1
,

6496 
	mSTATISTIC_MODE_2
,

6497 
	mSTATISTIC_MODE_3
,

6498 
	mSTATISTIC_MODE_4
,

6499 
	mSTATISTIC_MODE_5
,

6500 
	mSTATISTIC_MODE_6
,

6501 
	mSTATISTIC_MODE_7
,

6502 
	mSTATISTIC_MODE_8
,

6503 
	mSTATISTIC_MODE_9
,

6504 
	mSTATISTIC_MODE_10
,

6505 
	mSTATISTIC_MODE_11
,

6506 
	mSTATISTIC_MODE_12
,

6507 
	mSTATISTIC_MODE_13
,

6508 
	mSTATISTIC_MODE_ALL_OFF
,

6512 
STATISTIC_MODE
 
	gs_ã°_°©i°ic
 = 
STATISTIC_MODE_0
;

6513 
timî_li°
 
	g°©i°ics_timî
;

6514 
	g°©i°ics_timî_id
 = 
INVALIDTIMERID
;

6515 
	$°©i°ics_h264_„©uª
(*
c⁄ãxt
)

6517 
tw_h264_ícode_„©uª_t
 *
„©uª
;

6518 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

6519 
tw_h264_logic_ícode_ch™_t
 *
h264_ma°î
, *
h264_sub
, *
ba£
, *
logic_ch™
;

6520 
tw_h264_ícode_„©uª_∑øm_t
 
ma°î_ícode_„©uª
, 
sub_ícode_„©uª
;

6521 
max_öt
, 
mö_öt
, 
cur_öt
, 
Âs
, 
ch™√l
;

6522 
dvm_chù_t
 *
chù
 = (dvm_chù_à*)
c⁄ãxt
;

6524 
h264_ma°î
 = 
chù
->
h264_ma°î_ícode_logic_ch™
;

6525 
h264_sub
 = 
chù
->
h264_sub_ícode_logic_ch™
;

6527 
	`mem£t
(&
ma°î_ícode_„©uª
, 0, (
tw_h264_ícode_„©uª_∑øm_t
));

6528 
	`mem£t
(&
sub_ícode_„©uª
, 0, (
tw_h264_ícode_„©uª_∑øm_t
));

6530 
max_öt
 = 0;

6531 
mö_öt
 = 79879874;

6532 
ch™√l
 = 0;

6533 
Âs
 = 0;

6534 
cur_öt
 = 0;

6535 
logic_ch™
 = 
h264_ma°î
; (logic_ch™ - h264_ma°îË< 
TW5864_PHY_VD_CHAN_NUMBER
;Üogic_chan++) {

6536 if(
logic_ch™
 && 
	`©omic_ªad
(&logic_ch™->
›íed_Êag
) == 0){

6539 
ícode_c⁄åﬁ
 = &
logic_ch™
->encode_control;

6540 
max_öt
 = 
	`H264_MAX
(max_öt, 
ícode_c⁄åﬁ
->
ícode_dñè
.
max_dñè
);

6541 
mö_öt
 = 
	`H264_MIN
(mö_öt, 
ícode_c⁄åﬁ
->
ícode_dñè
.
mö_dñè
);

6542 
cur_öt
 +
ícode_c⁄åﬁ
->
ícode_dñè
.
cur_dñè
;

6543 
Âs
 +
ícode_c⁄åﬁ
->
i_cuº_Âs
;

6544 
ch™√l
++;

6546 
cur_öt
 = cur_öà/ 
ch™√l
;

6547 
Âs
 = fp†/ 
ch™√l
;

6548 
	`¥ötk
("------->modê%d<---------\n", 
s_ã°_°©i°ic
);

6549 
	`¥ötk
("ma°î:max %5d, mö %5d ,ávg %5d, fp†%5d\n", 
max_öt
, 
mö_öt
, 
cur_öt
, 
Âs
);

6550 
max_öt
 = 0;

6551 
mö_öt
 = 79879874;

6552 
ch™√l
 = 0;

6553 
Âs
 = 0;

6554 
cur_öt
 = 0;

6555 
logic_ch™
 = 
h264_sub
; (logic_ch™ - h264_subË< 
TW5864_PHY_VD_CHAN_NUMBER
;Üogic_chan++) {

6556 if(
logic_ch™
 && 
	`©omic_ªad
(&logic_ch™->
›íed_Êag
) == 0){

6559 
ícode_c⁄åﬁ
 = &
logic_ch™
->encode_control;

6560 
max_öt
 = 
	`H264_MAX
(max_öt, 
ícode_c⁄åﬁ
->
ícode_dñè
.
max_dñè
);

6561 
mö_öt
 = 
	`H264_MIN
(mö_öt, 
ícode_c⁄åﬁ
->
ícode_dñè
.
mö_dñè
);

6562 
cur_öt
 +
ícode_c⁄åﬁ
->
ícode_dñè
.
cur_dñè
;

6563 
Âs
 +
ícode_c⁄åﬁ
->
i_cuº_Âs
;

6564 
ch™√l
++;

6566 
cur_öt
 = cur_öà/ 
ch™√l
;

6567 
Âs
 = fp†/ 
ch™√l
;

6568 
	`¥ötk
("¶ave:max %5d, mö %5d ,ávg %5d, fp†%5d\n", 
max_öt
, 
mö_öt
, 
cur_öt
, 
Âs
);

6570 
s_ã°_°©i°ic
) {

6571 
STATISTIC_MODE_0
:

6572 
s_⁄ly_i_4x4
 = 0;

6573 
ma°î_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 0;

6574 
ma°î_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 0;

6575 
ma°î_ícode_„©uª
.
b_íabÀ_I_4X4
 = 0;

6576 
ma°î_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 0;

6577 
ma°î_ícode_„©uª
.
b_íabÀ_skù
 = 0;

6579 
sub_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 0;

6580 
sub_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 0;

6581 
sub_ícode_„©uª
.
b_íabÀ_I_4X4
 = 0;

6582 
sub_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 0;

6583 
sub_ícode_„©uª
.
b_íabÀ_skù
 = 0;

6585 
STATISTIC_MODE_1
:

6586 
s_⁄ly_i_4x4
 = 1;

6587 
ma°î_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 0;

6588 
ma°î_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 0;

6589 
ma°î_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6590 
ma°î_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 0;

6591 
ma°î_ícode_„©uª
.
b_íabÀ_skù
 = 0;

6593 
sub_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 0;

6594 
sub_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 0;

6595 
sub_ícode_„©uª
.
b_íabÀ_I_4X4
 = 0;

6596 
sub_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 0;

6597 
sub_ícode_„©uª
.
b_íabÀ_skù
 = 0;

6599 
STATISTIC_MODE_2
:

6600 
s_⁄ly_i_4x4
 = 0;

6601 
ma°î_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 0;

6602 
ma°î_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 0;

6603 
ma°î_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6604 
ma°î_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 0;

6605 
ma°î_ícode_„©uª
.
b_íabÀ_skù
 = 0;

6607 
sub_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 0;

6608 
sub_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 0;

6609 
sub_ícode_„©uª
.
b_íabÀ_I_4X4
 = 0;

6610 
sub_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 0;

6611 
sub_ícode_„©uª
.
b_íabÀ_skù
 = 0;

6613 
STATISTIC_MODE_3
:

6614 
s_⁄ly_i_4x4
 = 1;

6615 
ma°î_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 0;

6616 
ma°î_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 1;

6617 
ma°î_ícode_„©uª
.
b_íabÀ_I_4X4
 = 0;

6618 
ma°î_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 1;

6619 
ma°î_ícode_„©uª
.
b_íabÀ_skù
 = 0;

6621 
sub_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 0;

6622 
sub_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 0;

6623 
sub_ícode_„©uª
.
b_íabÀ_I_4X4
 = 0;

6624 
sub_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 0;

6625 
sub_ícode_„©uª
.
b_íabÀ_skù
 = 0;

6627 
STATISTIC_MODE_4
:

6628 
s_⁄ly_i_4x4
 = 1;

6629 
ma°î_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 1;

6630 
ma°î_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 1;

6631 
ma°î_ícode_„©uª
.
b_íabÀ_I_4X4
 = 0;

6632 
ma°î_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 1;

6633 
ma°î_ícode_„©uª
.
b_íabÀ_skù
 = 1;

6635 
sub_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 0;

6636 
sub_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 0;

6637 
sub_ícode_„©uª
.
b_íabÀ_I_4X4
 = 0;

6638 
sub_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 0;

6639 
sub_ícode_„©uª
.
b_íabÀ_skù
 = 0;

6641 
STATISTIC_MODE_5
:

6642 
s_⁄ly_i_4x4
 = 1;

6643 
ma°î_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 1;

6644 
ma°î_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 1;

6645 
ma°î_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6646 
ma°î_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 1;

6647 
ma°î_ícode_„©uª
.
b_íabÀ_skù
 = 1;

6649 
sub_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 0;

6650 
sub_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 0;

6651 
sub_ícode_„©uª
.
b_íabÀ_I_4X4
 = 0;

6652 
sub_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 0;

6653 
sub_ícode_„©uª
.
b_íabÀ_skù
 = 0;

6655 
STATISTIC_MODE_6
:

6656 
s_⁄ly_i_4x4
 = 1;

6657 
ma°î_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 1;

6658 
ma°î_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 1;

6659 
ma°î_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6660 
ma°î_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 1;

6661 
ma°î_ícode_„©uª
.
b_íabÀ_skù
 = 1;

6663 
sub_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 0;

6664 
sub_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 0;

6665 
sub_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6666 
sub_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 0;

6667 
sub_ícode_„©uª
.
b_íabÀ_skù
 = 0;

6669 
STATISTIC_MODE_7
:

6670 
s_⁄ly_i_4x4
 = 1;

6671 
ma°î_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 1;

6672 
ma°î_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 1;

6673 
ma°î_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6674 
ma°î_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 1;

6675 
ma°î_ícode_„©uª
.
b_íabÀ_skù
 = 1;

6677 
sub_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 0;

6678 
sub_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 1;

6679 
sub_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6680 
sub_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 1;

6681 
sub_ícode_„©uª
.
b_íabÀ_skù
 = 1;

6683 
STATISTIC_MODE_8
:

6684 
s_⁄ly_i_4x4
 = 1;

6685 
ma°î_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 1;

6686 
ma°î_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 1;

6687 
ma°î_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6688 
ma°î_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 1;

6689 
ma°î_ícode_„©uª
.
b_íabÀ_skù
 = 1;

6691 
sub_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 0;

6692 
sub_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 1;

6693 
sub_ícode_„©uª
.
b_íabÀ_I_4X4
 = 0;

6694 
sub_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 1;

6695 
sub_ícode_„©uª
.
b_íabÀ_skù
 = 0;

6697 
STATISTIC_MODE_9
:

6698 
s_⁄ly_i_4x4
 = 1;

6699 
ma°î_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 1;

6700 
ma°î_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 1;

6701 
ma°î_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6702 
ma°î_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 1;

6703 
ma°î_ícode_„©uª
.
b_íabÀ_skù
 = 1;

6705 
sub_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 1;

6706 
sub_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 1;

6707 
sub_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6708 
sub_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 1;

6709 
sub_ícode_„©uª
.
b_íabÀ_skù
 = 1;

6711 
STATISTIC_MODE_10
:

6712 
s_⁄ly_i_4x4
 = 0;

6713 
ma°î_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 1;

6714 
ma°î_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 1;

6715 
ma°î_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6716 
ma°î_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 1;

6717 
ma°î_ícode_„©uª
.
b_íabÀ_skù
 = 1;

6719 
sub_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 0;

6720 
sub_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 0;

6721 
sub_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6722 
sub_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 0;

6723 
sub_ícode_„©uª
.
b_íabÀ_skù
 = 0;

6725 
STATISTIC_MODE_11
:

6726 
s_⁄ly_i_4x4
 = 0;

6727 
ma°î_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 1;

6728 
ma°î_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 1;

6729 
ma°î_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6730 
ma°î_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 1;

6731 
ma°î_ícode_„©uª
.
b_íabÀ_skù
 = 1;

6733 
sub_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 0;

6734 
sub_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 0;

6735 
sub_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6736 
sub_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 0;

6737 
sub_ícode_„©uª
.
b_íabÀ_skù
 = 0;

6739 
STATISTIC_MODE_12
:

6740 
s_⁄ly_i_4x4
 = 0;

6741 
ma°î_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 1;

6742 
ma°î_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 1;

6743 
ma°î_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6744 
ma°î_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 1;

6745 
ma°î_ícode_„©uª
.
b_íabÀ_skù
 = 1;

6747 
sub_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 1;

6748 
sub_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 1;

6749 
sub_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6750 
sub_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 1;

6751 
sub_ícode_„©uª
.
b_íabÀ_skù
 = 1;

6753 
STATISTIC_MODE_13
:

6754 
s_⁄ly_i_4x4
 = 0;

6755 
ma°î_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 1;

6756 
ma°î_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 1;

6757 
ma°î_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6758 
ma°î_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 1;

6759 
ma°î_ícode_„©uª
.
b_íabÀ_skù
 = 0;

6761 
sub_ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 1;

6762 
sub_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 1;

6763 
sub_ícode_„©uª
.
b_íabÀ_I_4X4
 = 1;

6764 
sub_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 1;

6765 
sub_ícode_„©uª
.
b_íabÀ_skù
 = 0;

6771 if(
s_ã°_°©i°ic
 > 
STATISTIC_MODE_ALL_OFF
) {

6772 
	`¥ötk
("all over\n");

6775 
s_ã°_°©i°ic
++;

6776 
ba£
 = 
chù
->
h264_ma°î_ícode_logic_ch™
;

6777 
logic_ch™
 = 
ba£
; (logic_ch™ - ba£Ë< 
TW5864_PHY_VD_CHAN_NUMBER
;Üogic_chan++){

6778 if(
logic_ch™
 && 
	`©omic_ªad
(&logic_ch™->
›íed_Êag
) == 0){

6781 
„©uª
 = &
logic_ch™
->
ícode_¥›îty
.
ícode_„©uª
;

6782 
„©uª
->
›
->
	`upd©e_deöãæa˚
(„©uª, 
ma°î_ícode_„©uª
.
b_íabÀ_deöãæa˚
);

6783 
„©uª
->
›
->
	`upd©e_skù
(„©uª, 
ma°î_ícode_„©uª
.
b_íabÀ_skù
);

6784 
„©uª
->
›
->
	`upd©e_i_4x4
(„©uª, 
ma°î_ícode_„©uª
.
b_íabÀ_I_4X4
);

6785 
„©uª
->
›
->
	`upd©e_hÆf_pixñ
(„©uª, 
ma°î_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
);

6786 
„©uª
->
›
->
	`upd©e_qu¨ãr_pixñ
(„©uª, 
ma°î_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
);

6788 
ba£
 = 
chù
->
h264_sub_ícode_logic_ch™
;

6789 
logic_ch™
 = 
ba£
; (logic_ch™ - ba£Ë< 
TW5864_PHY_VD_CHAN_NUMBER
;Üogic_chan++){

6790 if(
logic_ch™
 && 
	`©omic_ªad
(&logic_ch™->
›íed_Êag
) == 0){

6793 
„©uª
 = &
logic_ch™
->
ícode_¥›îty
.
ícode_„©uª
;

6794 
„©uª
->
›
->
	`upd©e_deöãæa˚
(„©uª, 
sub_ícode_„©uª
.
b_íabÀ_deöãæa˚
);

6795 
„©uª
->
›
->
	`upd©e_skù
(„©uª, 
sub_ícode_„©uª
.
b_íabÀ_skù
);

6796 
„©uª
->
›
->
	`upd©e_i_4x4
(„©uª, 
sub_ícode_„©uª
.
b_íabÀ_I_4X4
);

6797 
„©uª
->
›
->
	`upd©e_hÆf_pixñ
(„©uª, 
sub_ícode_„©uª
.
b_íabÀ_hÆf_pixñ
);

6798 
„©uª
->
›
->
	`upd©e_qu¨ãr_pixñ
(„©uª, 
sub_ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
);

6802 
°©i°ics_timî
.
fun˘i⁄
 = 
°©i°ics_h264_„©uª
;

6803 
°©i°ics_timî
.
d©a
 = 
chù
;

6804 
°©i°ics_timî
.
expúes
 = 
jiffõs
 + (1000/
HZ
) * 1000 * 20;

6805 
	`add_timî
(&
°©i°ics_timî
);

6807 
°©i°ics_timî_id
 = 
	`AddSögÀFúeTimîJob
((
TIMER_1_MINUTE
), 
°©i°ics_h264_„©uª
, 
chù
);

6808 if(
°©i°ics_timî_id
 =
INVALIDTIMERID
) {

6809 
	`¥ötk
("addÅimerÉrror\n");

6814 
	}
}

6816 
New_Ród_O√_Føme_‰om_DDR
(
tw_h264_logic_ícode_ch™_t
* 
ícodî
,
u16
 
FømeIdx
, u16 
ch™√l
,
u8
 *
buf
, 
u32
 *
Àn
);

6817 
	$h264_¥oc_wrôe
(
fûe
 *fûe, c⁄° 
__u£r
 *
buf„r
,

6818 
cou¡
, *
d©a
)

6820 
tw_h264_logic_ícode_ch™_t
 *
h264
 = (tw_h264_logic_ícode_ch™_à*)
d©a
;

6821 
cmdbuf
[1024];

6822 **
¨gv
;

6823 
¨gc
, 
i
, 
ch
, 
˙t
;

6824 
dvm_chù_t
 *
chù
;

6825 *
fûíame
;

6827 
	`mem£t
(
cmdbuf
, 0, 1024);

6828 if(
cou¡
 > 1024){

6829 
	`c›y_‰om_u£r
(
cmdbuf
, 
buf„r
, 1024);

6832 
	`c›y_‰om_u£r
(
cmdbuf
, 
buf„r
, 
cou¡
);

6834 
¨gv
 = 
	`¨gv_•lô
(
GFP_KERNEL
, 
cmdbuf
, &
¨gc
);

6835 
i
 = 0; i < (
¨gc
); i++)

6837 
	`TW_DBG
(
TW_DBG_INFO
, "cmd %d: %s\n", 
i
, 
¨gv
[i]);

6839 
fûíame
 = 
¨gv
[1];

6840 
chù
 = 
h264
->chip;

6842 if(
	`°rcmp
(
¨gv
[0], "user_yuv") == 0)

6844 if((
¨gv
[1] =
NULL
) || (argv[2] == NULL))

6846 
	`¥ötk
("no yuv file!\n");

6847 
cmd_íd
;

6849 if(!
¨gv
[3]){

6850 
˙t
 = 4;

6852 
˙t
 = 
	`©oi
(
¨gv
[3]);

6854 
	`tw_h264_h™dÀ_u£r_q
(
chù
, 
h264
, 
fûíame
, 
¨gv
[2], 
˙t
);

6856 if(
	`°rcmp
(
¨gv
[0], "read_yuv") == 0)

6858 
u32
 
Àn
, 
size
;

6859 
fûe
 *
yuv_fûe
 = 
NULL
;

6860 
mm_£gmít_t
 
fs
;

6861 *
yuv_buf
 = 
NULL
;

6862 if((
¨gv
[1] =
NULL
) || (argv[2] == NULL))

6864 
	`¥ötk
("no channel idánd buffer id\n");

6865 
cmd_íd
;

6867 
ch
 = 
	`©oi
(
¨gv
[1]);

6868 
˙t
 = 
	`©oi
(
¨gv
[2]);

6870 
yuv_buf
 = (*)
	`__gë_‰ì_∑ges
(
GFP_KERNEL
, 
	`gë_‹dî
(
size
));

6871 
h264
 +
ch
;

6872 
	`New_Ród_O√_Føme_‰om_DDR
(
h264
, 
˙t
, 
ch
, 
yuv_buf
, &
Àn
);

6873 
size
 = 704 * 576 * 3 / 2;

6875 
yuv_fûe
 = 
	`fûp_›í
(
¨gv
[3], 
O_RDONLY
, 655);

6876 
fs
=
	`gë_fs
();

6877 
	`£t_fs
(
KERNEL_DS
);

6878 
Àn
 = 
yuv_fûe
->
f_›
->
	`wrôe
(yuv_fûe, 
yuv_buf
, 
size
, &(yuv_fûe->
f_pos
));

6879 
	`£t_fs
(
fs
);

6880 if(
yuv_buf
)

6881 
	`‰ì_∑ges
(()
yuv_buf
, 
	`gë_‹dî
(
size
));

6882 
	`fûp_˛o£
(
yuv_fûe
, 
NULL
);

6884 if(
	`°rcmp
(
¨gv
[0], "ch") == 0)

6886 
ch
 = 
	`©oi
(
¨gv
[2]);

6887 
h264
 +
ch
;

6888 
	`tw_h264_ßve_chn
(
h264
, 
¨gv
[1]);

6889 }if(
	`°rcmp
(
¨gv
[0], "config") == 0){

6890 
tw_h264_ícode_„©uª_∑øm_t
 
ícode_„©uª
;

6891 
tw_h264_ícode_„©uª_t
 *
„©uª
;

6892 
tw_h264_logic_ícode_ch™_t
 *
ba£
, *
logic_ch™
;

6893 
is⁄
;

6895 if(
	`°rcmp
(
¨gv
[1], "master") == 0){

6896 
ba£
 = 
chù
->
h264_ma°î_ícode_logic_ch™
;

6897 
	`mem˝y
(&
ícode_„©uª
, &
deÁu…_maö_ícode_„©uª
, (
tw_h264_ícode_„©uª_∑øm_t
));

6899 
ba£
 = 
chù
->
h264_sub_ícode_logic_ch™
;

6900 
	`mem˝y
(&
ícode_„©uª
, &
deÁu…_sub_ícode_„©uª
, (
tw_h264_ícode_„©uª_∑øm_t
));

6902 
i
 = 2; i < 
¨gc
; i++) {

6903 
is⁄
 = (
	`°rcmp
(
¨gv
[
i
], "ON") == 0) || (strcmp(argv[i], "on") == 0);

6904 
i
) {

6905 2:
ícode_„©uª
.
b_íabÀ_deöãæa˚
 = 
is⁄
; 
	`¥ötk
("deöãøl˚=%†", 
¨gv
[2]); ;

6906 3:
ícode_„©uª
.
b_íabÀ_skù
 = 
is⁄
; 
	`¥ötk
("skù=%†", 
¨gv
[3]); ;

6907 4:
ícode_„©uª
.
b_íabÀ_I_4X4
 = 
is⁄
; 
	`¥ötk
("I_4x4=%†", 
¨gv
[4]); ;

6908 5:
ícode_„©uª
.
b_íabÀ_hÆf_pixñ
 = 
is⁄
; 
	`¥ötk
("1/2pixñ=%†", 
¨gv
[5]); ;

6909 6:
ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
 = 
is⁄
; 
	`¥ötk
("1/4pixñ=%†", 
¨gv
[6]); ;

6910 7:
s_⁄ly_i_4x4
 = 
is⁄
;
	`¥ötk
("⁄ly_I_4x4=%†", 
¨gv
[7]);;

6915 
	`¥ötk
("\n");

6917 
logic_ch™
 = 
ba£
; (logic_ch™ - ba£Ë< 
TW5864_PHY_VD_CHAN_NUMBER
;Üogic_chan++){

6918 if(
logic_ch™
 && 
	`©omic_ªad
(&logic_ch™->
›íed_Êag
) == 0){

6921 
„©uª
 = &
logic_ch™
->
ícode_¥›îty
.
ícode_„©uª
;

6922 
„©uª
->
›
->
	`upd©e_deöãæa˚
(„©uª, 
ícode_„©uª
.
b_íabÀ_deöãæa˚
);

6923 
„©uª
->
›
->
	`upd©e_skù
(„©uª, 
ícode_„©uª
.
b_íabÀ_skù
);

6924 
„©uª
->
›
->
	`upd©e_i_4x4
(„©uª, 
ícode_„©uª
.
b_íabÀ_I_4X4
);

6925 
„©uª
->
›
->
	`upd©e_hÆf_pixñ
(„©uª, 
ícode_„©uª
.
b_íabÀ_hÆf_pixñ
);

6926 
„©uª
->
›
->
	`upd©e_qu¨ãr_pixñ
(„©uª, 
ícode_„©uª
.
b_íabÀ_qu¨ãr_pixñ
);

6929 if(
	`°rcmp
(
¨gv
[0], "statistics") == 0) {

6930 
s_ã°_°©i°ic
 = 
STATISTIC_MODE_0
;

6932 
°©i°ics_timî
.
fun˘i⁄
 = 
°©i°ics_h264_„©uª
;

6933 
°©i°ics_timî
.
d©a
 = 
chù
;

6934 
°©i°ics_timî
.
expúes
 = 
jiffõs
 + (1000/
HZ
) * 1000 * 20;

6935 
	`öô_timî
(&
°©i°ics_timî
);

6936 
	`add_timî
(&
°©i°ics_timî
);

6938 
°©i°ics_timî_id
 = 
	`AddSögÀFúeTimîJob
((
TIMER_1_MINUTE
), 
°©i°ics_h264_„©uª
, 
chù
);

6939 if(
°©i°ics_timî_id
 =
INVALIDTIMERID
) {

6940 
	`¥ötk
("addÅimerÉrror\n");

6946 
	`¥ötk
("no such cmd!\n");

6948 
cmd_íd
:

6949 
	`¨gv_‰ì
(
¨gv
);

6951  
cou¡
;

6952 
	}
}

6954 
	$öô_tw5864_h264_ícode_ch™
(
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
, 
bus_id
, 
chù_id
, 
phy_¶Ÿ_id
, 
ty≥
, 
dvm_chù_t
 *
chù
)

6956 if((
h264_logic_ícode_ch™
!=
NULL
Ë&& (
chù
!=NULL)){

6957 
tw5864_vd_¸oss_bus_t
 *
chù_vd_¸oss_bus
;

6958 
chù_drivî_t
 *
chù_drivî
;

6959 
tw_video_bus_t
 *
video_bus
;

6960 
tw_h264_ícode_c⁄figuøti⁄_t
 *
ícode_c⁄fig
, 
ícode_∑øm
;

6961 
ed_tcb_t
 *
›íed_logic_ch™_ed
;

6962 
tw_¥oc_ªgi°î_s
 *
h264_¥oc
;

6963 
buf_size
;

6964 
i
;

6966 
chù_drivî
 = 
chù
->chip_driver;

6967 
video_bus
 = &
chù_drivî
->video_bus;

6968 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
 =Öhy_slot_id;

6969 
h264_logic_ícode_ch™
->
ªad_bô°ªam_mode
 = 
READ_H264_BITSTREAM_BY_DDR
;

6970 
h264_logic_ícode_ch™
->
chù
 = chip;

6971 
h264_logic_ícode_ch™
->
tw_devi˚_ch™
 = 
NULL
;

6972 
chù_vd_¸oss_bus
 = &
chù
->chip_vd_cross_bus;

6973 if(
chù_vd_¸oss_bus
->
›
 !
NULL
){

6974 
chù_vd_¸oss_bus
->
›
->
	`gë_phy_video_¶Ÿ_by_phy_id
(chù_vd_¸oss_bus, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, &h264_logic_ícode_ch™->
ma°î_¶Ÿ
);

6976 
	`tw5864_vd_¸oss_bus_gë_phy_video_¶Ÿ_by_phy_id
(
chù_vd_¸oss_bus
, 
h264_logic_ícode_ch™
->
phy_¶Ÿ_id
, &h264_logic_ícode_ch™->
ma°î_¶Ÿ
);

6978 if(
ty≥
 =
TW_MASTER_BITSTREAM
){

6979 
buf_size
 = 
VIDEO_MASTER_CHAN_BUF_POOL_LEN
;

6980 
h264_logic_ícode_ch™
->
ty≥
 = 
TW_MASTER_BITSTREAM
;

6981 
h264_logic_ícode_ch™
->
logic_ch™_id
 = ((
phy_¶Ÿ_id
<<
VIDEO_MASTER_OR_SUB_FLAG_LEFT_SHIFT_NUMBER
)|
TW_MASTER_BITSTREAM
);

6983 
ícode_c⁄fig
 = &
ícode_∑øm
;

6984 
	`mem˝y
(
ícode_c⁄fig
, &
deÁu…_h264_ma°î_ícode_¥›îty
, (
tw_h264_ícode_c⁄figuøti⁄_t
));

6985 
ícode_c⁄fig
->
videoSènd¨d
 = 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus);

6986 
ícode_c⁄fig
->
Âs
 = (
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË=
TW_VIDEO_STANDARD_PAL
)? 25:30;

6987 
	`öô_tw5864_h264_ma°î_ícode_¥›îty
(&
h264_logic_ícode_ch™
->
ícode_¥›îty
, 
NULL
);

6989 
buf_size
 = 
VIDEO_SUB_CHAN_BUF_POOL_LEN
;

6990 
h264_logic_ícode_ch™
->
ty≥
 = 
TW_SUB_BITSTREAM
;

6991 
h264_logic_ícode_ch™
->
logic_ch™_id
 = ((
phy_¶Ÿ_id
<<
VIDEO_MASTER_OR_SUB_FLAG_LEFT_SHIFT_NUMBER
)|
TW_SUB_BITSTREAM
);

6993 
ícode_c⁄fig
 = &
ícode_∑øm
;

6994 
	`mem˝y
(
ícode_c⁄fig
, &
deÁu…_h264_sub_ícode_¥›îty
, (
tw_h264_ícode_c⁄figuøti⁄_t
));

6995 
ícode_c⁄fig
->
videoSènd¨d
 = 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus);

6996 
ícode_c⁄fig
->
Âs
 = (
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË=
TW_VIDEO_STANDARD_PAL
)? 25:30;

6997 
	`öô_tw5864_h264_sub_ícode_¥›îty
(&
h264_logic_ícode_ch™
->
ícode_¥›îty
, 
NULL
);

6999 
	`öô_ídpoöt_tcb
(&
h264_logic_ícode_ch™
->
logic_ch™_ed
, 
bus_id
, 
chù_id
, 
TW_ED_VIDEO_ENCODE_IN
, h264_logic_ícode_ch™->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
, h264_logic_ícode_ch™, 
h264_logic_ícode_ch™_drivî_nŸify_my£lf
, 
h264_logic_ícode_ch™_drivî_m©ch_id
, &
h264_ícode_drivî_fsm_°©e_å™s„r_m©rix_èbÀ
);

7000 
	`öô_ídpoöt_tcb
(&
h264_logic_ícode_ch™
->
›íed_logic_ch™_ed
, 
bus_id
, 
chù_id
, 
TW_ED_VIDEO_ENCODE_IN
, h264_logic_ícode_ch™->
phy_¶Ÿ_id
, h264_logic_ícode_ch™->
logic_ch™_id
, h264_logic_ícode_ch™, 
h264_logic_ícode_ch™_drivî_nŸify_my£lf
, 
h264_logic_ícode_ch™_drivî_m©ch_id
, &
h264_ícode_drivî_fsm_°©e_å™s„r_m©rix_èbÀ
);

7001 
i
=0; i<
REQ_MSG_NUMBER
; i++){

7002 
h264_logic_ícode_ch™
->
n⁄block_msg_timî_id
[
i
] = 
INVALIDTIMERID
;

7003 
h264_logic_ícode_ch™
->
dñay_msg_timî_id
[
i
] = 
INVALIDTIMERID
;

7005 
	`©omic_£t
(&
h264_logic_ícode_ch™
->
›íed_Êag
, 0);

7006 
	`©omic_£t
(&
h264_logic_ícode_ch™
->
have_dñivî_sync_Êag
, 0);

7008 
	`öô_tw5864_h264_ícode_c⁄åﬁ
(&
h264_logic_ícode_ch™
->
ícode_c⁄åﬁ
, h264_logic_ícode_ch™->
ªad_bô°ªam_mode
);

7009 
	`öô_rc_drivî
(
h264_logic_ícode_ch™
);

7010 #ifde‡ 
OSD_MODULE


7011 
	`öô_ícode_osd_ch™_ígöe
(&
h264_logic_ícode_ch™
->
ícode_osd_ígöe
, h264_logic_ícode_ch™->
ty≥
);

7013 
	`öô_ícode_ch™_£rvi˚_tcb_wôh_nuŒ
(&
h264_logic_ícode_ch™
->
ícode_ªque°_tcb
);

7014 
	`öô_d¥am_ªque°_£rvi˚_tcb
(&
h264_logic_ícode_ch™
->
ªad_video_bô°ªam_ªq
);

7015 
h264_logic_ícode_ch™
->
video_bô°ªam_buf
 = 
NULL
;

7017 
	`öô_tw_video_ch™_buf_poﬁ
(&
h264_logic_ícode_ch™
->
ícode_ch™_buf_poﬁ
, 
buf_size
);

7018 
	`öô_tw_video_‰ame_tcb_queue
(&
h264_logic_ícode_ch™
->
ícode_‰ame_queue
);

7019 #ifde‡ 
MV_MODULE


7020 
	`öô_tw_video_mv_‰ame_tcb_queue
(&
h264_logic_ícode_ch™
->
ícode_mv_‰ame_queue
);

7023 
	`ªgi°î_logic_ícode_ch™_öto_ma°î_¶Ÿ
(
h264_logic_ícode_ch™
, h264_logic_ícode_ch™->
ma°î_¶Ÿ
);

7024 
›íed_logic_ch™_ed
 = &
h264_logic_ícode_ch™
->opened_logic_chan_ed;

7025 
›íed_logic_ch™_ed
->
›
 = &
h264_ícode_hcd_öãrÁ˚_›
;

7027 
h264_¥oc
 = &
chù
->h264_proc;

7028 if(!
h264_¥oc
->
íåy
) {

7029 
	`°r˝y
(
h264_¥oc
->
«me
, "h264");

7030 
h264_¥oc
->
ªad
 = 
h264_¥oc_ªad
;

7031 
h264_¥oc
->
wrôe
 = 
h264_¥oc_wrôe
;

7032 
h264_¥oc
->
¥iv©e
 = 
chù
->
h264_ma°î_ícode_logic_ch™
;

7033 
	`tw_moduÀ_ªgi°î
(
chù
, 
h264_¥oc
);

7036  
TW_OK
;

7039  
TW_ERR
;

7040 
	}
}

7042 
	$ªmove_tw5864_h264_ícode_ch™
(
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
)

7044 if(
h264_logic_ícode_ch™
!=
NULL
){

7045 
ed_tcb_t
 *
›íed_logic_ch™_ed
;

7047 
›íed_logic_ch™_ed
 = &
h264_logic_ícode_ch™
->opened_logic_chan_ed;

7048 if(
›íed_logic_ch™_ed
->
›
 !
NULL
){

7049 
›íed_logic_ch™_ed
->
›
->
	`˛o£
(opened_logic_chan_ed);

7051 
	`ªmove_tw_video_ch™_buf_poﬁ
(&
h264_logic_ícode_ch™
->
ícode_ch™_buf_poﬁ
);

7052 #ifde‡ 
OSD_MODULE


7053 
	`ªmove_ícode_osd_ch™_ígöe
(&
h264_logic_ícode_ch™
->
ícode_osd_ígöe
);

7055 
	`uƒegi°î_logic_ícode_ch™_öto_ma°î_¶Ÿ
(
h264_logic_ícode_ch™
, h264_logic_ícode_ch™->
ma°î_¶Ÿ
);

7058 
	`tw_moduÀ_uƒegi°î
(
h264_logic_ícode_ch™
->
chù
, &h264_logic_ícode_ch™->chù->
h264_¥oc
);

7059 
	}
}

7061 
	$nŸify_ªmove_ícode_ch™_£rvi˚
(
ícode_ch™_£rvi˚_tcb_t
 *
cuº_c⁄sumî
)

7063 if(
cuº_c⁄sumî
 !
NULL
){

7064 
tw_h264_logic_ícode_ch™_t
 *
h264_logic_ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_ícode_ªque°_tcb
(
cuº_c⁄sumî
);

7065 
	`ªmove_tw5864_h264_ícode_ch™
(
h264_logic_ícode_ch™
);

7067 
	}
}

7070 
Wrôe_O√_Føme_To_DDR_D1_Føme
(
tw_h264_logic_ícode_ch™_t
 *
ícodî
, 
u16
 
FømeIdx
, u16 
ch™√l
,
u8
 *
buf
, 
u32
 *
Àn
);

7071 
	$tw_h264_h™dÀ_u£r_q
(
dvm_chù_t
 *
chù
, 
tw_h264_logic_ícode_ch™_t
 *
logic_ch∆
, *
«me
, *
ßve
, 
˙t
)

7073 
fûe
 *
yuv_fûe
 = 
NULL
;

7074 
fûe
 *
h264_fûe
 = 
NULL
;

7075 
öode
 *öodê
NULL
;

7076 
öode
 *
h264_öode
 = 
NULL
;

7077 
mm_£gmít_t
 
fs
;

7078 *
yuv_buf
 = 
NULL
;

7079 
tw_h264_ícode_c⁄figuøti⁄_t
 *
h264_c⁄fig
 = 
NULL
;

7080 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

7081 
tw_video_‰ame_tcb_t
 *
‰ame
;

7082 
tw_video_‰ame_tcb_queue_t
 *
‰ame_queue
;

7083 
size
;

7084 
Àn
, 
i
;

7085 
u8
 
buf
[12];

7087 if(!
chù
 || !
logic_ch∆
 || !
«me
)

7089 
	`¥ötk
("NULL Pointer!\n");

7090  -
EPERM
;

7092 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x9000, 0x0);

7093 
chù
->
io_›
->
	`chù_wrôe32
(chip, 0x9004, 0x0);

7094 
	`mem£t
(
buf
, 0, 12);

7095 
yuv_fûe
 = 
	`fûp_›í
(
«me
, 
O_RDONLY
, 655);

7096 if(
	`IS_ERR
(
yuv_fûe
))

7098 
	`¥ötk
("›í fûê\"%s\" faûd, %d\n", 
«me
, ()
yuv_fûe
);

7099  
	`IS_ERR
(
yuv_fûe
);

7102 
öode
=
yuv_fûe
->
f_díåy
->
d_öode
;

7103 
h264_fûe
 = 
	`fûp_›í
(
ßve
, 
O_CREAT
 | 
O_RDWR
 | 
O_SYNC
, 655);

7104 if(
	`IS_ERR
(
h264_fûe
))

7106 
	`¥ötk
("›í fûê\"%s\" faûd, %d\n", 
«me
, ()
h264_fûe
);

7107  
	`IS_ERR
(
h264_fûe
);

7109 
h264_öode
 = 
h264_fûe
->
f_díåy
->
d_öode
;

7111 
h264_c⁄fig
 = &
logic_ch∆
->
ícode_¥›îty
.encode_property;

7114 
size
 = 704 * 576 * 3 / 2;

7116 
yuv_buf
 = (*)
	`__gë_‰ì_∑ges
(
GFP_KERNEL
, 
	`gë_‹dî
(
size
));

7117 if(!
yuv_buf
)

7119 
q_ªÀa£
;

7122 
fs
=
	`gë_fs
();

7123 
	`£t_fs
(
KERNEL_DS
);

7124 
i
 = 0; i < 4; i++)

7126 
Àn
 = 
yuv_fûe
->
f_›
->
	`ªad
(yuv_fûe, 
yuv_buf
, 
size
, &(yuv_fûe->
f_pos
));

7127 if(
Àn
 !
size
)

7129 
	`¥ötk
("only support YV12, YCbCr420!\n");

7133 
	`Wrôe_O√_Føme_To_DDR_D1_Føme
(
logic_ch∆
, 
i
, 0, 
yuv_buf
, &
Àn
);

7136 
	`¥ötk
("ªad fûêsizê%Œd\n", 
öode
->
i_size
);

7137 
ícode_c⁄åﬁ
 = &
logic_ch∆
->encode_control;

7144 
ícode_c⁄åﬁ
 = &
logic_ch∆
->encode_control;

7145 
˙t
 = 4;

7146 
i
 = 0; i < 
˙t
; i++)

7150 
‰ame_queue
 = &
logic_ch∆
->
ícode_‰ame_queue
;

7151 
‰ame_queue
->
›
->
	`åy_gë_cuº_¥odu˚r_‰om_poﬁ
(‰ame_queue, &
logic_ch∆
->
ícode_ch™_buf_poﬁ
);

7152 if(
‰ame_queue
->
cuº_¥odu˚r
 =
NULL
) {

7153 
	`¥ötk
("%s,%d: fømêi†nuŒ!\n", 
__FUNCTION__
, 
__LINE__
);

7155 
ícode_c⁄åﬁ
->
›
->
	`upd©e_ad_ªady
(encode_control);

7157 if(
ícode_c⁄åﬁ
->
›
->
	`gë_¶i˚_hód_™d_ad_°©us
(encode_control)){

7158 
	`öô_ícode_ch™_£rvi˚_tcb_wôh_°¨t_ícode
(&
logic_ch∆
->
ícode_ªque°_tcb
);

7160 
	`mdñay
(10);

7162 
‰ame_queue
 = &
logic_ch∆
->
ícode_‰ame_queue
;

7163 !
‰ame_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(frame_queue)){

7164 
	`scheduÀ
();

7165 i‡(
	`sig«l_≥ndög
(
cuºít
)) {

7166 
q_ªÀa£
;

7170 
‰ame_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(frame_queue);

7171 
‰ame
 = 
‰ame_queue
->
cuº_c⁄sumî
;

7172 if(!
‰ame
->
‰ame_is_îr
){

7173 
	`tw_h264_to_fûe
(
h264_fûe
, 
‰ame
);

7175 
	`¥ötk
("---------------->wrôê%d\n", 
i
);

7176 
‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(‰ame_queue, &
logic_ch∆
->
ícode_ch™_buf_poﬁ
);

7180 
‰ame_queue
 = &
logic_ch∆
->
ícode_‰ame_queue
;

7181 
‰ame_queue
->
›
->
	`åy_gë_cuº_¥odu˚r_‰om_poﬁ
(‰ame_queue, &
logic_ch∆
->
ícode_ch™_buf_poﬁ
);

7183 
‰ame
 = 
‰ame_queue
->
cuº_¥odu˚r
;

7184 
∑ckë_queue
 = &
‰ame
->
video_∑ckë_queue
;

7185 
∑ckë_queue
->
›
->
	`åy_gë_cuº_¥odu˚r_‰om_poﬁ
’ackë_queue, &
logic_ch∆
->
ícode_ch™_buf_poﬁ
);

7186 
∑ckë
 = 
∑ckë_queue
->
cuº_¥odu˚r
;

7188 
	`Âga_dma_ª˚ive
(
chù
->
∑_ªgs
 + 
VLC_ENCODER_PING
, 
∑ckë
->
dma_addr
, 4096);

7189 
Àn
 = 
h264_fûe
->
f_›
->
	`wrôe
(h264_fûe, 
∑ckë
->
d©a
, 4096, &(h264_fûe->
f_pos
));

7190 
	`Âga_dma_ª˚ive
(
chù
->
∑_ªgs
 + 
VLC_ENCODER_PONG
, 
∑ckë
->
dma_addr
, 4096);

7191 
i
 = 0; i< 1024; i++)

7192 *(
u16
 *)(
∑ckë
->
d©a
 + 
i
 * 2) = i;

7194 
	`∂©f‹m_ho°_wrôñ
(
	`∂©f‹m_ho°_ªadl
(
chù
->
ªgs
 + 0x30) & (~(1 << 13)), chip->regs + 0x30);

7195 
	`∂©f‹m_ho°_wrôñ
(0x0, 
chù
->
ªgs
 + 0x18004);

7196 
	`∂©f‹m_ho°_wrôñ
(0x0, 
chù
->
ªgs
 + 0x101c);

7198 
	`∂©f‹m_ho°_wrôñ
(
	`∂©f‹m_ho°_ªadl
(
chù
->
ªgs
 + 0x30) | (0x8000), chip->regs + 0x30);

7199 
	`Âga_dma_ª˚ive
(
∑ckë
->
dma_addr
, 
chù
->
∑_ªgs
 + 0x84000, 2048);

7201 
	`∂©f‹m_ho°_wrôñ
(
	`∂©f‹m_ho°_ªadl
(
chù
->
ªgs
 + 0x30) | ((1 << 13)), chip->regs + 0x30);

7202 
	`∂©f‹m_ho°_wrôñ
(0x1c000000, 
chù
->
ªgs
 + 0x18004);

7203 
	`∂©f‹m_ho°_wrôñ
(0x2, 
chù
->
ªgs
 + 0x101c);

7204 
	`mem£t
(
∑ckë
->
d©a
, 0x0, 4096);

7205 
	`Âga_dma_ª˚ive
(
chù
->
∑_ªgs
 + 0x84000, 
∑ckë
->
dma_addr
, 2048);

7206 
Àn
 = 
h264_fûe
->
f_›
->
	`wrôe
(h264_fûe, 
∑ckë
->
d©a
, 2048, &(h264_fûe->
f_pos
));

7209 
	`£t_fs
(
fs
);

7210 
q_ªÀa£
:

7211 if(
yuv_buf
)

7212 
	`‰ì_∑ges
(()
yuv_buf
, 
	`gë_‹dî
(
size
));

7213 if(!(
	`IS_ERR
(
yuv_fûe
)))

7215 
	`fûp_˛o£
(
yuv_fûe
, 
NULL
);

7216 
	`fûp_˛o£
(
h264_fûe
, 
NULL
);

7219 
	}
}

7221 
	$tw_h264_ßve_chn
(
tw_h264_logic_ícode_ch™_t
 *
logic_ch∆
, *
∑th
)

7223 
fûe
 *
h264_fûe
;

7225 
tw_video_‰ame_tcb_t
 *
‰ame
;

7227 
tw_video_‰ame_tcb_queue_t
 *
‰ame_queue
;

7229 
ch∆
 = 
logic_ch∆
->
logic_ch™_id
;

7230 
«me
[128];

7234 
	`mem£t
(
«me
, 0, 128);

7236 
	`•rötf
(
«me
, "%s/video_chn_%02d_%02d.h264", 
∑th
, 
ch∆
, 
logic_ch∆
->
phy_¶Ÿ_id
);

7238 
h264_fûe
 = 
	`tw_kî√l_fûe_›í
(
«me
);

7239 if(
	`IS_ERR
(
h264_fûe
)){

7240  -
EINVAL
;

7246 
‰ame_queue
 = &
logic_ch∆
->
ícode_‰ame_queue
;

7253 
‰ame_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(frame_queue)){

7254 
‰ame_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(frame_queue);

7255 
‰ame
 = 
‰ame_queue
->
cuº_c⁄sumî
;

7256 if(!
‰ame
->
‰ame_is_îr
){

7257 
	`tw_h264_to_fûe
(
h264_fûe
, 
‰ame
);

7259 
‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(‰ame_queue, &
logic_ch∆
->
ícode_ch™_buf_poﬁ
);

7263 
sub_‰ame_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(sub_frame_queue);

7264 
sub_‰ame_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(sub_frame_queue)) {

7265 
sub_‰ame
 = 
sub_‰ame_queue
->
cuº_c⁄sumî
;

7266 if(
sub_‰ame
){

7267 
	`tw_h264_to_fûe
(
sub_fûe
, 
sub_‰ame
);

7268 
sub_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(sub_‰ame_queue, &
logic_ch∆
->
chù
->
h264_sub_ícode_logic_ch™
[logic_ch∆->
phy_¶Ÿ_id
].
ícode_ch™_buf_poﬁ
);

7272 
	`scheduÀ
();

7273 i‡(
	`sig«l_≥ndög
(
cuºít
)) {

7277 
	`tw_kî√l_fûe_˛o£
(
h264_fûe
);

7281 
mm_£gmít_t
 
fs
;

7282 
fûe
 *
h264_sync_fûe
;

7283 
Àn
 = 0;

7284 *
buf„r
 = 
NULL
;

7286 
h264_sync_fûe
 = 
	`tw_kî√l_fûe_›í
("/dev/video0");

7287 
h264_fûe
 = 
	`tw_kî√l_fûe_›í
("/software/h264_sync.h264");

7289 
buf„r
 = 
	`__gë_‰ì_∑ges
(
GFP_KERNEL
, 9);

7291 
fs
=
	`gë_fs
();

7292 
	`£t_fs
(
KERNEL_DS
);

7294 
Àn
 = 
h264_sync_fûe
->
f_›
->
	`ªad
(h264_sync_fûe, 
buf„r
, 0x80000, &(h264_sync_fûe->
f_pos
));

7295 if(
Àn
 > 0) {

7296 
h264_fûe
->
f_›
->
	`wrôe
(h264_fûe, 
buf„r
, 
Àn
, &(h264_fûe->
f_pos
));

7298 
	`scheduÀ
();

7299 i‡(
	`sig«l_≥ndög
(
cuºít
)) {

7303 
	`£t_fs
(
fs
);

7304 
	`k‰ì
(
buf„r
);

7305 
	`tw_kî√l_fûe_˛o£
(
h264_sync_fûe
);

7306 
	`tw_kî√l_fûe_˛o£
(
h264_fûe
);

7313 
	}
}

7317 
	$tw_h264_to_fûe
(
fûe
 *
h264_fûe
, 
tw_video_‰ame_tcb_t
 *
‰ame
)

7319 
mm_£gmít_t
 
fs
;

7320 
tw_video_∑ckë_tcb_t
 *
∑ckë
;

7321 
tw_video_∑ckë_tcb_queue_t
 *
∑ckë_queue
;

7322 
Àn
;

7323 
h264_«l_t
 *
«l
;

7326 if(!
h264_fûe
 || !
‰ame
)

7328  -
EINVAL
;

7331 
fs
=
	`gë_fs
();

7332 
«l
 = &
‰ame
->nal;

7333 
	`£t_fs
(
KERNEL_DS
);

7334 
∑ckë_queue
 = &
‰ame
->
video_∑ckë_queue
;

7335 
∑ckë_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(packet_queue)){

7336 
∑ckë_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(packet_queue);

7337 
∑ckë
 = 
∑ckë_queue
->
cuº_c⁄sumî
;

7342 
Àn
 = 
h264_fûe
->
f_›
->
	`wrôe
(h264_fûe, 
∑ckë
->
d©a
,Öackë->
∑ylﬂd_Àn
, &(h264_fûe->
f_pos
));

7344 
∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
’ackë_queue, 
‰ame
->
video_ch™_buf_poﬁ
);

7346 
	`£t_fs
(
fs
);

7349 
	}
}

7351 
	$tw_mv_to_fûe
(
fûe
 *
mv_fûe
, 
tw_video_mv_‰ame_tcb_t
 *
‰ame
)

7353 
mm_£gmít_t
 
fs
;

7354 
tw_video_mv_∑ckë_tcb_t
 *
∑ckë
;

7355 
tw_video_mv_∑ckë_tcb_queue_t
 *
∑ckë_queue
;

7356 
Àn
;

7358 if(!
mv_fûe
 || !
‰ame
)

7360  -
EINVAL
;

7363 
fs
=
	`gë_fs
();

7364 
	`£t_fs
(
KERNEL_DS
);

7366 
∑ckë_queue
 = &
‰ame
->
mv_queue
;

7367 
∑ckë_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(packet_queue)){

7368 
∑ckë_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(packet_queue);

7369 
∑ckë
 = 
∑ckë_queue
->
cuº_c⁄sumî
;

7370 if(
∑ckë
){

7371 
Àn
 = 
mv_fûe
->
f_›
->
	`wrôe
(mv_fûe, 
∑ckë
->
d©a
,Öackë->
mvVe˘‹_Àn
, &(mv_fûe->
f_pos
));

7372 
∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
’ackë_queue, 
‰ame
->
video_ch™_buf_poﬁ
);

7376 
	`£t_fs
(
fs
);

7379 
	}
}

	@../../tw5864/tw5864/tw_h264_video_buf.c

1 
	~<tw5864/dvm_comm⁄.h
>

4 
	$tw_video_∑ckë_tcb_öô
(
tw_video_∑ckë_tcb_t
 *
video_∑ckë_tcb
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
id
)

6 if((
video_∑ckë_tcb
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

7 
tcb_node_t
 *
node
 = &
video_∑ckë_tcb
->
∑ckë_node
;

8 
	`•ö_lock_öô
(&
video_∑ckë_tcb
->
lock
);

9 
	`©omic_£t
(&
video_∑ckë_tcb
->
ªf_cou¡
, 0);

10 
node
->
›
 = &
tcb_node_›
;

11 
node
->
›
->
	`öô
(node);

12 
node
->
›
->
	`£t_¥iv
“ode, 
video_∑ckë_tcb
);

13 
video_∑ckë_tcb
->
∑ckë_id
 = 
id
;

14 
video_∑ckë_tcb
->
∑ckë_size
 = 
video_ch™_buf_poﬁ
->
video_∑ckë_buf„r_size
;

15 
video_∑ckë_tcb
->
∑ylﬂd_Àn
 = 0;

16 
video_∑ckë_tcb
->
c⁄sumî_Àn
 = 0;

17 
video_∑ckë_tcb
->
d©a
 = &
video_ch™_buf_poﬁ
->
ˇche_buf„r
[video_ch™_buf_poﬁ->
video_∑ckë_buf„r_size
*
id
];

18 
video_∑ckë_tcb
->
dma_addr
 = 0;

19 
video_∑ckë_tcb
->
id_of_∑ckë_queue
 = 0;

21 
	}
}

23 
	$tw_video_∑ckë_tcb_ª£t
(
tw_video_∑ckë_tcb_t
 *
video_∑ckë_tcb
)

25 if(
video_∑ckë_tcb
!=
NULL
){

26 
	`©omic_£t
(&
video_∑ckë_tcb
->
ªf_cou¡
, 0);

27 
video_∑ckë_tcb
->
∑ylﬂd_Àn
 = 0;

28 
video_∑ckë_tcb
->
c⁄sumî_Àn
 = 0;

29 
video_∑ckë_tcb
->
dma_addr
 = 0;

30 
video_∑ckë_tcb
->
id_of_∑ckë_queue
 = 0;

32 
	}
}

34 
	$tw_video_∑ckë_tcb_ªÀa£
(
tw_video_∑ckë_tcb_t
 **
±r_video_∑ckë_tcb
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

36 if((*
±r_video_∑ckë_tcb
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

37 
tw_video_∑ckë_tcb_t
 *
video_∑ckë_tcb
 = *
±r_video_∑ckë_tcb
;

38 
Êags
;

40 
	`•ö_lock_úqßve
(&
video_∑ckë_tcb
->
lock
, 
Êags
);

41 if(
	`©omic_ªad
(&
video_∑ckë_tcb
->
ªf_cou¡
) > 1){

42 
	`©omic_dec
(&
video_∑ckë_tcb
->
ªf_cou¡
);

44 
tcb_node_t
 *
node
;

45 if(
video_∑ckë_tcb
->
›
 !
NULL
){

46 
video_∑ckë_tcb
->
›
->
	`ª£t
(video_packet_tcb);

48 
node
 = &
video_∑ckë_tcb
->
∑ckë_node
;

49 if(
node
->
›
 !
NULL
){

50 
node
->
›
->
	`ªÀa£
“ode, &
video_ch™_buf_poﬁ
->
video_∑ckë_poﬁ_tcb
);

53 *
±r_video_∑ckë_tcb
 = 
NULL
;

54 
	`•ö_u∆ock_úqª°‹e
(&
video_∑ckë_tcb
->
lock
, 
Êags
);

56 
	}
}

58 
	$tw_video_∑ckë_tcb_ª„ªn˚
(
tw_video_∑ckë_tcb_t
 *
§c_video_∑ckë_tcb
,Åw_video_∑ckë_tcb_à**
±r_de°_video_∑ckë_tcb
)

60 if((
§c_video_∑ckë_tcb
!=
NULL
Ë&& (
±r_de°_video_∑ckë_tcb
!=NULL)){

61 
Êags
;

62 
	`•ö_lock_úqßve
(&
§c_video_∑ckë_tcb
->
lock
, 
Êags
);

63 
	`©omic_öc
(&
§c_video_∑ckë_tcb
->
ªf_cou¡
);

64 *
±r_de°_video_∑ckë_tcb
 = 
§c_video_∑ckë_tcb
;

65 
	`•ö_u∆ock_úqª°‹e
(&
§c_video_∑ckë_tcb
->
lock
, 
Êags
);

67 
	}
}

69 
	$tw_video_∑ckë_tcb_dma_m≠
(
tw_video_∑ckë_tcb_t
 *
video_∑ckë_tcb
, 
dma_d©a_dúe˘i⁄
 
dúe˘i⁄
)

71 if(
video_∑ckë_tcb
 !
NULL
) {

72 if(
video_∑ckë_tcb
->
d©a
 !
NULL
) {

73 
video_∑ckë_tcb
->
dma_addr
 = 
	`dma_m≠_sögÀ
(
NULL
, video_∑ckë_tcb->
d©a
, video_∑ckë_tcb->
∑ckë_size
, 
dúe˘i⁄
);

74 i‡(
video_∑ckë_tcb
->
dma_addr
 == 0){

75 
	`¥ötk
("%s.%dÉº\n", 
__FUNCTION__
, 
__LINE__
);

79 
	}
}

81 
	$tw_video_∑ckë_tcb_dma_unm≠
(
tw_video_∑ckë_tcb_t
 *
video_∑ckë_tcb
, 
dma_d©a_dúe˘i⁄
 
dúe˘i⁄
)

83 if(
video_∑ckë_tcb
 !
NULL
) {

84 i‡(
video_∑ckë_tcb
->
dma_addr
 != 0) {

85 
	`dma_unm≠_sögÀ
(
NULL
, 
video_∑ckë_tcb
->
dma_addr
, video_∑ckë_tcb->
∑ckë_size
, 
dúe˘i⁄
);

86 
video_∑ckë_tcb
->
dma_addr
 = 0;

89 
	}
}

91 
size_t
 
	$tw_video_∑ckë_tcb_submô
(
tw_video_∑ckë_tcb_t
 *
∑ckë
, 
__u£r
 *
d©a
, 
size_t
 
cou¡
, 
loff_t
 *
µos
, 
h264_«l_t
 *
«l
)

93 
loff_t
 
buf_off£t
 = 0;

94 if((
∑ckë
 !
NULL
Ë&& (
cou¡
>ıackë->
∑ylﬂd_Àn
)){

95 
	`c›y_to_u£r
(
d©a
, 
∑ckë
->d©a,Öackë->
∑ylﬂd_Àn
);

96 
buf_off£t
 = 
∑ckë
->
∑ylﬂd_Àn
;

98 
	`¥ötk
("\n\n%s.%d\n\n", 
__FUNCTION__
, 
__LINE__
);

100 *
µos
 +
buf_off£t
;

101  (
size_t
)
buf_off£t
;

102 
	}
}

104 
tw_video_∑ckë_›î©i⁄
 
	gtw_video_∑ckë_tcb_›
 = {

105 .
öô
 = 
tw_video_∑ckë_tcb_öô
,

106 .
	gª£t
 = 
tw_video_∑ckë_tcb_ª£t
,

107 .
	gªÀa£
 = 
tw_video_∑ckë_tcb_ªÀa£
,

108 .
	gª„ªn˚
 = 
tw_video_∑ckë_tcb_ª„ªn˚
,

110 .
	gdma_m≠
 = 
tw_video_∑ckë_tcb_dma_m≠
,

111 .
	gdma_unm≠
 = 
tw_video_∑ckë_tcb_dma_unm≠
,

113 .
	gsubmô
 = 
tw_video_∑ckë_tcb_submô
,

116 
	$tw_video_∑ckë_queue_gë
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
, 
tw_video_∑ckë_tcb_t
 **
±r_video_∑ckë_tcb
)

118 if((
video_∑ckë_queue
!=
NULL
Ë&& (
±r_video_∑ckë_tcb
!=NULL)){

119 
tcb_node_queue_t
 *
queue
;

120 *
±r_video_∑ckë_tcb
 = 
NULL
;

121 
queue
 = &
video_∑ckë_queue
->
queue_node
;

122 if(
queue
->
›
 !
NULL
){

123 
tcb_node_t
 *
ãmp_node
;

124 
queue
->
›
->
	`gë
(queue, &
ãmp_node
);

125 if(
ãmp_node
 !
NULL
){

126 *
±r_video_∑ckë_tcb
 = 
	`to_video_∑ckë_buf_tcb
(
ãmp_node
);

130 
	}
}

132 
	$tw_video_∑ckë_queue_åy_gë
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
, 
tw_video_∑ckë_tcb_t
 **
±r_video_∑ckë_tcb
)

134 if((
video_∑ckë_queue
!=
NULL
Ë&& (
±r_video_∑ckë_tcb
!=NULL)){

135 
tcb_node_queue_t
 *
queue
;

136 *
±r_video_∑ckë_tcb
 = 
NULL
;

137 
queue
 = &
video_∑ckë_queue
->
queue_node
;

138 if(
queue
->
›
 !
NULL
){

139 
tcb_node_t
 *
ãmp_node
;

140 
queue
->
›
->
	`åy_gë
(queue, &
ãmp_node
);

141 if(
ãmp_node
 !
NULL
){

142 *
±r_video_∑ckë_tcb
 = 
	`to_video_∑ckë_buf_tcb
(
ãmp_node
);

146 
	}
}

148 
	$tw_video_∑ckë_queue_gë_èûî
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
, 
tw_video_∑ckë_tcb_t
 **
±r_video_∑ckë_tcb
)

150 if((
video_∑ckë_queue
!=
NULL
Ë&& (
±r_video_∑ckë_tcb
!=NULL)){

151 
tcb_node_queue_t
 *
queue
;

152 *
±r_video_∑ckë_tcb
 = 
NULL
;

153 
queue
 = &
video_∑ckë_queue
->
queue_node
;

154 if(
queue
->
›
 !
NULL
){

155 
tcb_node_t
 *
ãmp_node
;

156 
queue
->
›
->
	`gë_èûî
(queue, &
ãmp_node
);

157 if(
ãmp_node
 !
NULL
){

158 *
±r_video_∑ckë_tcb
 = 
	`to_video_∑ckë_buf_tcb
(
ãmp_node
);

162 
	}
}

164 
	$tw_video_∑ckë_queue_åy_gë_èûî
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
, 
tw_video_∑ckë_tcb_t
 **
±r_video_∑ckë_tcb
)

166 if((
video_∑ckë_queue
!=
NULL
Ë&& (
±r_video_∑ckë_tcb
!=NULL)){

167 
tcb_node_queue_t
 *
queue
;

168 *
±r_video_∑ckë_tcb
 = 
NULL
;

169 
queue
 = &
video_∑ckë_queue
->
queue_node
;

170 if(
queue
->
›
 !
NULL
){

171 
tcb_node_t
 *
ãmp_node
;

172 
queue
->
›
->
	`åy_gë_èûî
(queue, &
ãmp_node
);

173 if(
ãmp_node
 !
NULL
){

174 *
±r_video_∑ckë_tcb
 = 
	`to_video_∑ckë_buf_tcb
(
ãmp_node
);

178 
	}
}

180 
	$tw_video_∑ckë_queue_put
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
, 
tw_video_∑ckë_tcb_t
 *
video_∑ckë_tcb
)

182 if((
video_∑ckë_queue
!=
NULL
Ë&& (
video_∑ckë_tcb
!=NULL)){

183 
tcb_node_queue_t
 *
queue
;

184 
queue
 = &
video_∑ckë_queue
->
queue_node
;

185 if(
queue
->
›
 !
NULL
){

186 
queue
->
›
->
	`put
(queue, &
video_∑ckë_tcb
->
∑ckë_node
);

187 
video_∑ckë_tcb
->
id_of_∑ckë_queue
 = 
queue
->
›
->
	`gë_queue_cuº_íåy_numbî
(queue);

190 
	}
}

192 
	$tw_video_∑ckë_queue_put_hódî
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
, 
tw_video_∑ckë_tcb_t
 *
video_∑ckë_tcb
)

194 if((
video_∑ckë_queue
!=
NULL
Ë&& (
video_∑ckë_tcb
!=NULL)){

195 
tcb_node_queue_t
 *
queue
;

196 
queue
 = &
video_∑ckë_queue
->
queue_node
;

197 if(
queue
->
›
 !
NULL
){

198 
queue
->
›
->
	`put_hódî
(queue, &
video_∑ckë_tcb
->
∑ckë_node
);

201 
	}
}

203 
	$tw_video_∑ckë_queue_gë_cuº_¥odu˚r_‰om_poﬁ
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

205 if((
video_∑ckë_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

206 
Êags
;

207 
	`•ö_lock_úqßve
(&
video_∑ckë_queue
->
lock
, 
Êags
);

208 if(
video_∑ckë_queue
->
cuº_¥odu˚r
 =
NULL
){

209 
	`•ö_u∆ock_úqª°‹e
(&
video_∑ckë_queue
->
lock
, 
Êags
);

210 if(
video_ch™_buf_poﬁ
->
›
 !
NULL
){

211 
video_ch™_buf_poﬁ
->
›
->
	`gë_video_∑ckë_tcb
(video_ch™_buf_poﬁ, &
video_∑ckë_queue
->
cuº_¥odu˚r
);

216 
	`•ö_lock_úqßve
(&
video_∑ckë_queue
->
lock
, 
Êags
);

218 
	`•ö_u∆ock_úqª°‹e
(&
video_∑ckë_queue
->
lock
, 
Êags
);

220 
	}
}

222 
	$tw_video_∑ckë_queue_åy_gë_cuº_¥odu˚r_‰om_poﬁ
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

224 if((
video_∑ckë_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

225 
Êags
;

226 
	`•ö_lock_úqßve
(&
video_∑ckë_queue
->
lock
, 
Êags
);

227 if(
video_∑ckë_queue
->
cuº_¥odu˚r
 =
NULL
) {

228 if(
video_ch™_buf_poﬁ
->
›
 !
NULL
){

229 
video_ch™_buf_poﬁ
->
›
->
	`åy_gë_video_∑ckë_tcb
(video_ch™_buf_poﬁ, &
video_∑ckë_queue
->
cuº_¥odu˚r
);

235 
	`•ö_u∆ock_úqª°‹e
(&
video_∑ckë_queue
->
lock
, 
Êags
);

237 
	}
}

239 
	$tw_video_∑ckë_queue_put_cuº_¥odu˚r_öto_queue
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
)

241 if(
video_∑ckë_queue
 !
NULL
){

242 
Êags
;

243 
	`•ö_lock_úqßve
(&
video_∑ckë_queue
->
lock
, 
Êags
);

244 if(
video_∑ckë_queue
->
cuº_¥odu˚r
 !
NULL
){

246 if(
video_∑ckë_queue
->
›
 !
NULL
){

247 
video_∑ckë_queue
->
›
->
	`put
(video_∑ckë_queue, video_∑ckë_queue->
cuº_¥odu˚r
);

249 
	`tw_video_∑ckë_queue_put
(
video_∑ckë_queue
, video_∑ckë_queue->
cuº_¥odu˚r
);

251 
video_∑ckë_queue
->
cuº_¥odu˚r
 = 
NULL
;

253 
	`•ö_u∆ock_úqª°‹e
(&
video_∑ckë_queue
->
lock
, 
Êags
);

255 
	}
}

257 
	$tw_video_∑ckë_queue_ªÀa£_cuº_¥odu˚r
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

259 if((
video_∑ckë_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

260 
Êags
;

261 
	`•ö_lock_úqßve
(&
video_∑ckë_queue
->
lock
, 
Êags
);

262 if(
video_∑ckë_queue
->
cuº_¥odu˚r
 !
NULL
){

263 if(
video_∑ckë_queue
->
cuº_¥odu˚r
->
›
 !
NULL
){

264 
video_∑ckë_queue
->
cuº_¥odu˚r
->
›
->
	`ªÀa£
(&video_∑ckë_queue->cuº_¥odu˚r, 
video_ch™_buf_poﬁ
);

266 
	`tw_video_∑ckë_tcb_ªÀa£
(&
video_∑ckë_queue
->
cuº_¥odu˚r
, 
video_ch™_buf_poﬁ
);

269 
	`•ö_u∆ock_úqª°‹e
(&
video_∑ckë_queue
->
lock
, 
Êags
);

271 
	}
}

273 
	$tw_video_∑ckë_queue_gë_cuº_c⁄sumî_‰om_queue
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
)

275 if(
video_∑ckë_queue
 !
NULL
){

276 
Êags
;

277 
	`•ö_lock_úqßve
(&
video_∑ckë_queue
->
lock
, 
Êags
);

278 if(
video_∑ckë_queue
->
cuº_c⁄sumî
 =
NULL
){

279 
	`•ö_u∆ock_úqª°‹e
(&
video_∑ckë_queue
->
lock
, 
Êags
);

280 if(
video_∑ckë_queue
->
›
 !
NULL
){

281 
video_∑ckë_queue
->
›
->
	`gë
(video_∑ckë_queue, &video_∑ckë_queue->
cuº_c⁄sumî
);

283 
	`tw_video_∑ckë_queue_gë
(
video_∑ckë_queue
, &video_∑ckë_queue->
cuº_c⁄sumî
);

285 
	`•ö_lock_úqßve
(&
video_∑ckë_queue
->
lock
, 
Êags
);

287 
	`•ö_u∆ock_úqª°‹e
(&
video_∑ckë_queue
->
lock
, 
Êags
);

289 
	}
}

291 
	$tw_video_∑ckë_queue_åy_gë_cuº_c⁄sumî_‰om_queue
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
)

293 if(
video_∑ckë_queue
 !
NULL
){

294 
Êags
;

295 
	`•ö_lock_úqßve
(&
video_∑ckë_queue
->
lock
, 
Êags
);

296 if(
video_∑ckë_queue
->
cuº_c⁄sumî
 =
NULL
){

297 if(
video_∑ckë_queue
->
›
 !
NULL
){

298 
video_∑ckë_queue
->
›
->
	`åy_gë
(video_∑ckë_queue, &video_∑ckë_queue->
cuº_c⁄sumî
);

300 
	`tw_video_∑ckë_queue_åy_gë
(
video_∑ckë_queue
, &video_∑ckë_queue->
cuº_c⁄sumî
);

303 
	`•ö_u∆ock_úqª°‹e
(&
video_∑ckë_queue
->
lock
, 
Êags
);

305 
	}
}

307 
	$tw_video_∑ckë_queue_ªÀa£_cuº_c⁄sumî
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

309 if((
video_∑ckë_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

310 
Êags
;

311 
	`•ö_lock_úqßve
(&
video_∑ckë_queue
->
lock
, 
Êags
);

312 if(
video_∑ckë_queue
->
cuº_c⁄sumî
 !
NULL
){

313 if(
video_∑ckë_queue
->
cuº_c⁄sumî
->
›
 !
NULL
){

314 
video_∑ckë_queue
->
cuº_c⁄sumî
->
›
->
	`ªÀa£
(&video_∑ckë_queue->cuº_c⁄sumî, 
video_ch™_buf_poﬁ
);

316 
	`tw_video_∑ckë_tcb_ªÀa£
(&
video_∑ckë_queue
->
cuº_c⁄sumî
, 
video_ch™_buf_poﬁ
);

319 
	`•ö_u∆ock_úqª°‹e
(&
video_∑ckë_queue
->
lock
, 
Êags
);

321 
	}
}

323 
	$tw_video_∑ckë_queue_gë_cuº_queue_íåy_numbî
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
)

325 
íåy_numbî
 = 0;

326 if(
video_∑ckë_queue
!=
NULL
){

327 
tcb_node_queue_t
 *
queue
;

328 
queue
 = &
video_∑ckë_queue
->
queue_node
;

329 if(
queue
->
›
 !
NULL
){

330 
íåy_numbî
 = 
queue
->
›
->
	`gë_queue_cuº_íåy_numbî
(queue);

333  
íåy_numbî
;

334 
	}
}

336 
	$tw_video_∑ckë_queue_ªÀa£
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

338 if((
video_∑ckë_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

339 
	`ªmove_tw_video_∑ckë_tcb_queue
(
video_∑ckë_queue
, 
video_ch™_buf_poﬁ
);

341 
	}
}

343 
	$tw_video_∑ckë_queue_öô
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
)

345 if(
video_∑ckë_queue
 !
NULL
){

346 
tcb_node_queue_t
 *
queue
;

347 
queue
 = &
video_∑ckë_queue
->
queue_node
;

348 
queue
->
›
 = &
tcb_node_queue_›
;

349 
queue
->
›
->
	`öô
(queue);

350 
video_∑ckë_queue
->
cuº_c⁄sumî
 = 
NULL
;

351 
video_∑ckë_queue
->
cuº_¥odu˚r
 = 
NULL
;

352 
video_∑ckë_queue
->
°¨t_time°amp
 = 0;

353 
video_∑ckë_queue
->
tŸÆ_duøti⁄
 = 0;

354 
	`•ö_lock_öô
(&
video_∑ckë_queue
->
lock
);

356 
	}
}

358 
tw_video_∑ckë_queue_›î©i⁄
 
	gtw_video_∑ckë_queue_›
 = {

359 .
gë
 = 
tw_video_∑ckë_queue_gë
,

360 .
	gåy_gë
 = 
tw_video_∑ckë_queue_åy_gë
,

361 .
	ggë_èûî
 = 
tw_video_∑ckë_queue_gë_èûî
,

362 .
	gåy_gë_èûî
 = 
tw_video_∑ckë_queue_åy_gë_èûî
,

363 .
	gput
 = 
tw_video_∑ckë_queue_put
,

364 .
	gput_hódî
 = 
tw_video_∑ckë_queue_put_hódî
,

366 .
	ggë_cuº_¥odu˚r_‰om_poﬁ
 = 
tw_video_∑ckë_queue_gë_cuº_¥odu˚r_‰om_poﬁ
,

367 .
	gåy_gë_cuº_¥odu˚r_‰om_poﬁ
 = 
tw_video_∑ckë_queue_åy_gë_cuº_¥odu˚r_‰om_poﬁ
,

368 .
	gput_cuº_¥odu˚r_öto_queue
 = 
tw_video_∑ckë_queue_put_cuº_¥odu˚r_öto_queue
,

369 .
	gªÀa£_cuº_¥odu˚r
 = 
tw_video_∑ckë_queue_ªÀa£_cuº_¥odu˚r
,

370 .
	ggë_cuº_c⁄sumî_‰om_queue
 = 
tw_video_∑ckë_queue_gë_cuº_c⁄sumî_‰om_queue
,

371 .
	gåy_gë_cuº_c⁄sumî_‰om_queue
 = 
tw_video_∑ckë_queue_åy_gë_cuº_c⁄sumî_‰om_queue
,

372 .
	gªÀa£_cuº_c⁄sumî
 = 
tw_video_∑ckë_queue_ªÀa£_cuº_c⁄sumî
,

374 .
	ggë_cuº_queue_íåy_numbî
 = 
tw_video_∑ckë_queue_gë_cuº_queue_íåy_numbî
,

375 .
	gªÀa£
 = 
tw_video_∑ckë_queue_ªÀa£
,

376 .
	göô
 = 
tw_video_∑ckë_queue_öô
,

379 
	$öô_tw_video_∑ckë_tcb_queue
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
)

381 if(
video_∑ckë_queue
 !
NULL
){

382 
video_∑ckë_queue
->
›
 = &
tw_video_∑ckë_queue_›
;

383 
video_∑ckë_queue
->
›
->
	`öô
(video_packet_queue);

385 
	}
}

387 
	$ªmove_tw_video_∑ckë_tcb_queue
(
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

389 if((
video_∑ckë_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

390 if(
video_∑ckë_queue
->
›
 !
NULL
){

391 
video_∑ckë_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(video_packet_queue);

392 
video_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(video_∑ckë_queue, 
video_ch™_buf_poﬁ
);

393 
video_∑ckë_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(video_packet_queue)){

394 
video_∑ckë_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(video_packet_queue);

395 if(
video_∑ckë_queue
->
cuº_c⁄sumî
 =
NULL
){

398 
video_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(video_∑ckë_queue, 
video_ch™_buf_poﬁ
);

401 
	`tw_video_∑ckë_queue_put_cuº_¥odu˚r_öto_queue
(
video_∑ckë_queue
);

402 
	`tw_video_∑ckë_queue_ªÀa£_cuº_c⁄sumî
(
video_∑ckë_queue
, 
video_ch™_buf_poﬁ
);

403 
	`tw_video_∑ckë_queue_gë_cuº_queue_íåy_numbî
(
video_∑ckë_queue
)){

404 
	`tw_video_∑ckë_queue_gë_cuº_c⁄sumî_‰om_queue
(
video_∑ckë_queue
);

405 if(
video_∑ckë_queue
->
cuº_c⁄sumî
 =
NULL
){

408 
	`tw_video_∑ckë_queue_ªÀa£_cuº_c⁄sumî
(
video_∑ckë_queue
, 
video_ch™_buf_poﬁ
);

412 
	}
}

414 
	$tw_video_‰ame_tcb_«l_öô
(
h264_«l_t
 *
«l
)

416 if(
«l
 !
NULL
){

417 
«l
->
i_ªf_idc
 = 0;

418 
«l
->
i_ty≥
 = 0;

419 
«l
->
i_ãmp_bôÆign_numbî
 = 0;

420 
«l
->
i_ãmp_bôÆign_c⁄ã¡
 = 0;

421 
	`mem£t
(
«l
, 0, (
h264_«l_t
));

422 
«l
->
•s_∑ylﬂd
 =ÇÆ->
µs_∑ylﬂd
 =ÇÆ->
¶i˚_∑ylﬂd
 =ÇÆ->
¶i˚_hód_buf
 = 
NULL
;

423 
«l
->
•s_∑ysize
 =ÇÆ->
µs_∑ysize
 =ÇÆ->
¶i˚_∑ysize
 = 0;

425 
	}
}

427 
	$tw_video_‰ame_tcb_öô
(
tw_video_‰ame_tcb_t
 *
‰ame
)

429 if(
‰ame
!=
NULL
){

430 
tcb_node_t
 *
node
 = &
‰ame
->
‰ame_node
;

431 
node
->
›
 = &
tcb_node_›
;

432 
node
->
›
->
	`öô
(node);

433 
node
->
›
->
	`£t_¥iv
“ode, 
‰ame
);

435 
	`•ö_lock_öô
(&
‰ame
->
lock
);

436 
	`©omic_£t
(&
‰ame
->
ªf_cou¡
, 0);

437 
‰ame
->
‰ame_ty≥
 = 
H264_FRAME_TYPE_IDR
;

438 
	`tw_video_‰ame_tcb_«l_öô
(&
‰ame
->
«l
);

439 
‰ame
->
‰ame_Àn
 = 0;

440 
‰ame
->
c⁄sumî_‰ame_off£t
 = 0;

441 
‰ame
->
time°amp
 = 0;

442 
‰ame
->
i_öô_qp
 = 
DEFAULT_QP
;

443 
‰ame
->
i_cuº_qp
 = 0;

444 
‰ame
->
i_mb_x
 = 0;

445 
‰ame
->
i_mb_y
 = 0;

446 
‰ame
->
i_log_g›_vÆue
 = 0;

447 
‰ame
->
Âs
 = 0;

448 
‰ame
->
‰ame_numbî
 = 0;

449 
‰ame
->
‰ame_is_îr
 = 0;

450 
	`öô_tw_video_∑ckë_tcb_queue
(&
‰ame
->
video_∑ckë_queue
);

452 
	}
}

454 
	$tw_video_‰ame_tcb_ª£t
(
tw_video_‰ame_tcb_t
 *
‰ame
)

456 if(
‰ame
 !
NULL
){

457 
	`©omic_£t
(&
‰ame
->
ªf_cou¡
, 0);

458 
‰ame
->
‰ame_ty≥
 = 
H264_FRAME_TYPE_IDR
;

459 
	`tw_video_‰ame_tcb_«l_öô
(&
‰ame
->
«l
);

460 
‰ame
->
‰ame_Àn
 = 0;

461 
‰ame
->
c⁄sumî_‰ame_off£t
 = 0;

462 
‰ame
->
time°amp
 = 0;

463 
‰ame
->
i_öô_qp
 = 
DEFAULT_QP
;

464 
‰ame
->
i_cuº_qp
 = 0;

465 
‰ame
->
i_mb_x
 = 0;

466 
‰ame
->
i_mb_y
 = 0;

467 
‰ame
->
i_log_g›_vÆue
 = 0;

468 
‰ame
->
Âs
 = 0;

469 
‰ame
->
‰ame_numbî
 = 0;

470 
‰ame
->
‰ame_is_îr
 = 0;

472 
	}
}

474 
	$tw_video_‰ame_tcb_ªÀa£
(
tw_video_‰ame_tcb_t
 **
±r_‰ame
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

476 if(
±r_‰ame
 !
NULL
){

477 
tw_video_‰ame_tcb_t
 *
‰ame
 = *
±r_‰ame
;

478 
Êags
;

479 if(
video_ch™_buf_poﬁ
 =
NULL
){

480 
video_ch™_buf_poﬁ
 = 
‰ame
->video_chan_buf_pool;

482 
	`•ö_lock_úqßve
(&
‰ame
->
lock
, 
Êags
);

483 if(
	`©omic_ªad
(&
‰ame
->
ªf_cou¡
) > 1){

484 
	`©omic_dec
(&
‰ame
->
ªf_cou¡
);

486 
tcb_node_t
 *
node
;

487 if(
‰ame
->
›
 !
NULL
){

488 
‰ame
->
›
->
	`ª£t
(frame);

490 if(
‰ame
->
video_∑ckë_queue
.
›
 !
NULL
){

491 
‰ame
->
video_∑ckë_queue
.
›
->
	`ªÀa£
(&‰ame->video_∑ckë_queue, 
video_ch™_buf_poﬁ
);

493 
	`tw_video_∑ckë_queue_ªÀa£
(&
‰ame
->
video_∑ckë_queue
, 
video_ch™_buf_poﬁ
);

495 
node
 = &
‰ame
->
‰ame_node
;

496 if(
node
->
›
 !
NULL
){

497 
node
->
›
->
	`ªÀa£
“ode, &
video_ch™_buf_poﬁ
->
video_‰ame_poﬁ_tcb
);

500 *
±r_‰ame
 = 
NULL
;

501 
	`•ö_u∆ock_úqª°‹e
(&
‰ame
->
lock
, 
Êags
);

503 
	}
}

505 
	$tw_video_‰ame_tcb_ª„ªn˚
(
tw_video_‰ame_tcb_t
 *
§c_‰ame
,Åw_video_‰ame_tcb_à**
±r_de°_‰ame
)

507 if((
§c_‰ame
!=
NULL
Ë&& (
±r_de°_‰ame
!=NULL)){

508 
Êags
;

509 
	`•ö_lock_úqßve
(&
§c_‰ame
->
lock
, 
Êags
);

510 
	`©omic_öc
(&
§c_‰ame
->
ªf_cou¡
);

511 *
±r_de°_‰ame
 = 
§c_‰ame
;

512 
	`•ö_u∆ock_úqª°‹e
(&
§c_‰ame
->
lock
, 
Êags
);

514 
	}
}

516 
size_t
 
	$tw_video_‰ame_tcb_submô
(
tw_video_‰ame_tcb_t
 *
‰ame
, 
__u£r
 *
d©a
, 
size_t
 
cou¡
, 
loff_t
 *
µos
, 
ma°îOrSubFœg
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

518 
tw_‰ame_hódî_t
 
__u£r
 *
‰ame_hódî_±r
;

519 
tw_‰ame_hódî_t
 
tw_‰ame_hód
;

520 
tw_h264_idr_‰ame_∑d_t
 
__u£r
 *
idr_∑d_±r
;

521 
tw_h264_idr_‰ame_∑d_t
 
idr_‰ame_∑d
;

522 
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
;

523 
h264_«l_t
 *
«l
;

524 
size_t
 
buf_size
, 
∑ckë_size
;

525 
loff_t
 
buf_off£t
, 
∑ckë_off£t
;

527 
buf_size
 = 
cou¡
;

528 
buf_off£t
 = 0;

529 if(
‰ame
 !
NULL
){

530 
«l
 = &
‰ame
->nal;

531 
‰ame_hódî_±r
 = (
tw_‰ame_hódî_t
*)
d©a
;

532 
buf_size
 -(
tw_‰ame_hódî_t
);

533 
buf_off£t
 +(
tw_‰ame_hódî_t
);

534 
	`mem£t
(&
tw_‰ame_hód
, 0, (
tw_‰ame_hódî_t
));

535 
tw_‰ame_hód
.
codecTy≥
 = 
TW_VIDEO_H264_CODEC_TYPE
;

536 
tw_‰ame_hód
.
°ªamTy≥
 = 
ma°îOrSubFœg
;

537 
tw_‰ame_hód
.
‰ameSîül
 = 
‰ame
->
‰ame_numbî
;

538 
tw_‰ame_hód
.
‰ameTy≥
 = 
‰ame
->
‰ame_ty≥
;

539 
tw_‰ame_hód
.
timeSèmp
 = 
‰ame
->
time°amp
;

540 
tw_‰ame_hód
.
∑ylﬂd_off£t
 = (
tw_‰ame_hódî_t
);

541 
tw_‰ame_hód
.
∑ylﬂdLí
 = 0;

542 
‰ame
->
‰ame_ty≥
) {

543 
H264_FRAME_TYPE_IDR
:

544 if(
cou¡
 >((
tw_‰ame_hódî_t
)+(
tw_h264_idr_‰ame_∑d_t
)+
‰ame
->
‰ame_Àn
)){

545 
idr_∑d_±r
 = (
tw_h264_idr_‰ame_∑d_t
*)
‰ame_hódî_±r
->
∑d
;

546 
buf_size
 -(
tw_h264_idr_‰ame_∑d_t
);

547 
buf_off£t
 +(
tw_h264_idr_‰ame_∑d_t
);

548 
tw_‰ame_hód
.
∑ylﬂdLí
 +(
tw_h264_idr_‰ame_∑d_t
);

550 
	`mem£t
(&
idr_‰ame_∑d
, 0, (
tw_h264_idr_‰ame_∑d_t
));

551 
idr_‰ame_∑d
.
Âs
 = 
‰ame
->fps;

552 
idr_‰ame_∑d
.
öô_qp
 = 
‰ame
->
i_öô_qp
;

553 
idr_‰ame_∑d
.
log2MaxFømeNumNöus4
 = 
‰ame
->
i_log_g›_vÆue
;

554 
idr_‰ame_∑d
.
mb_width_möus1
 = 
‰ame
->
i_mb_x
;

555 
idr_‰ame_∑d
.
mb_height_möus1
 = 
‰ame
->
i_mb_y
;

556 
idr_‰ame_∑d
.
i_cuº_qp
 = 
‰ame
->i_curr_qp;

558 
idr_‰ame_∑d
.
•s_‰ame_off£t
 = (
tw_h264_idr_‰ame_∑d_t
);

559 
idr_‰ame_∑d
.
•s_‰ame_size
 = 
«l
->
•s_∑ysize
;

560 
idr_‰ame_∑d
.
µs_‰ame_off£t
 = idr_‰ame_∑d.
•s_‰ame_off£t
 + 
«l
->
•s_∑ysize
;

561 
idr_‰ame_∑d
.
µs_‰ame_size
 = 
«l
->
µs_∑ysize
;

562 
idr_‰ame_∑d
.
idr_‰ame_off£t
 = idr_‰ame_∑d.
µs_‰ame_off£t
 + 
«l
->
µs_∑ysize
;

563 
idr_‰ame_∑d
.
idr_‰ame_size
 = 0;

565 
video_∑ckë_queue
 = &
‰ame
->video_packet_queue;

566 
video_∑ckë_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(video_packet_queue)){

567 
video_∑ckë_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(video_packet_queue);

568 
∑ckë_size
 = 
video_∑ckë_queue
->
cuº_c⁄sumî
->
›
->
	`submô
(video_∑ckë_queue->cuº_c⁄sumî, &
d©a
[
buf_off£t
], 
buf_size
, &
∑ckë_off£t
, 
«l
);

569 
video_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(video_∑ckë_queue, 
video_ch™_buf_poﬁ
);

570 
buf_size
 -
∑ckë_size
;

571 
buf_off£t
 +
∑ckë_size
;

572 
tw_‰ame_hód
.
∑ylﬂdLí
 +
∑ckë_size
;

574 
buf_off£t
 & 3){

575 
	`__put_u£r
(0, &
d©a
[
buf_off£t
]);

576 
buf_size
--;

577 
buf_off£t
++;

578 
idr_‰ame_∑d
.
idr_‰ame_size
++;

579 
tw_‰ame_hód
.
∑ylﬂdLí
++;

581 
idr_‰ame_∑d
.
idr_‰ame_size
 +
‰ame
->
‰ame_Àn
;

582 
	`c›y_to_u£r
(
‰ame_hódî_±r
->
∑d
, (*)&
idr_‰ame_∑d
, (
tw_h264_idr_‰ame_∑d_t
));

584 
buf_off£t
 = 0;

587 
H264_FRAME_TYPE_I
:

588 
H264_FRAME_TYPE_P
:

589 if(
cou¡
 >((
tw_‰ame_hódî_t
)+(
tw_h264_idr_‰ame_∑d_t
)+
‰ame
->
‰ame_Àn
)){

590 
video_∑ckë_queue
 = &
‰ame
->video_packet_queue;

591 
video_∑ckë_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(video_packet_queue)){

592 
video_∑ckë_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(video_packet_queue);

593 
∑ckë_size
 = 
video_∑ckë_queue
->
cuº_c⁄sumî
->
›
->
	`submô
(video_∑ckë_queue->cuº_c⁄sumî, &
d©a
[
buf_off£t
], 
buf_size
, &
∑ckë_off£t
, 
«l
);

594 
video_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(video_∑ckë_queue, 
video_ch™_buf_poﬁ
);

595 
buf_size
 -
∑ckë_size
;

596 
buf_off£t
 +
∑ckë_size
;

597 
tw_‰ame_hód
.
∑ylﬂdLí
 +
∑ckë_size
;

599 
buf_off£t
 & 3){

600 
	`__put_u£r
(0, &
d©a
[
buf_off£t
]);

601 
buf_size
--;

602 
buf_off£t
++;

603 
tw_‰ame_hód
.
∑ylﬂdLí
++;

606 
buf_off£t
 = 0;

610 
	`¥ötk
("%s.%d:Éº 264 såómÅy≥\n", 
__FUNCTION__
, 
__LINE__
);

613 if(
buf_off£t
){

614 
	`c›y_to_u£r
(
‰ame_hódî_±r
, &
tw_‰ame_hód
, (
tw_‰ame_hódî_t
));

617 *
µos
 +
buf_off£t
;

618  (
size_t
)
buf_off£t
;

619 
	}
}

621 
tw_video_‰ame_tcb_›î©i⁄
 
	gtw_video_‰ame_tcb_›
 = {

622 .
öô
 = 
tw_video_‰ame_tcb_öô
,

623 .
	gª£t
 = 
tw_video_‰ame_tcb_ª£t
,

624 .
	gªÀa£
 = 
tw_video_‰ame_tcb_ªÀa£
,

625 .
	gª„ªn˚
 = 
tw_video_‰ame_tcb_ª„ªn˚
,

626 .
	gsubmô
 = 
tw_video_‰ame_tcb_submô
,

629 
	$tw_video_‰ame_queue_gë
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
, 
tw_video_‰ame_tcb_t
 **
±r_‰ame
)

631 if((
video_‰ame_tcb_queue
!=
NULL
Ë&& (
±r_‰ame
!=NULL)){

632 
tcb_node_queue_t
 *
queue
;

633 *
±r_‰ame
 = 
NULL
;

634 
queue
 = &
video_‰ame_tcb_queue
->
queue_node
;

635 if(
queue
->
›
 !
NULL
){

636 
tcb_node_t
 *
ãmp_node
;

637 
queue
->
›
->
	`gë
(queue, &
ãmp_node
);

638 if(
ãmp_node
 !
NULL
){

639 *
±r_‰ame
 = 
	`to_video_‰ame_tcb
(
ãmp_node
);

643 
	`¥ötk
("\n%s.%d**©ã¡i⁄**\n", 
__FUNCTION__
, 
__LINE__
);

645 
	}
}

647 
	$tw_video_‰ame_queue_åy_gë
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
, 
tw_video_‰ame_tcb_t
 **
±r_‰ame
)

649 if((
video_‰ame_tcb_queue
!=
NULL
Ë&& (
±r_‰ame
!=NULL)){

650 
tcb_node_queue_t
 *
queue
;

651 *
±r_‰ame
 = 
NULL
;

652 
queue
 = &
video_‰ame_tcb_queue
->
queue_node
;

653 if(
queue
->
›
 !
NULL
){

654 
tcb_node_t
 *
ãmp_node
;

655 
queue
->
›
->
	`åy_gë
(queue, &
ãmp_node
);

656 if(
ãmp_node
 !
NULL
){

657 *
±r_‰ame
 = 
	`to_video_‰ame_tcb
(
ãmp_node
);

661 
	}
}

663 
	$tw_video_‰ame_queue_gë_èûî
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
, 
tw_video_‰ame_tcb_t
 **
±r_‰ame
)

665 if((
video_‰ame_tcb_queue
!=
NULL
Ë&& (
±r_‰ame
!=NULL)){

666 
tcb_node_queue_t
 *
queue
;

667 *
±r_‰ame
 = 
NULL
;

668 
queue
 = &
video_‰ame_tcb_queue
->
queue_node
;

669 if(
queue
->
›
 !
NULL
){

670 
tcb_node_t
 *
ãmp_node
;

671 
queue
->
›
->
	`gë_èûî
(queue, &
ãmp_node
);

672 if(
ãmp_node
 !
NULL
){

673 *
±r_‰ame
 = 
	`to_video_‰ame_tcb
(
ãmp_node
);

677 
	}
}

679 
	$tw_video_‰ame_queue_åy_gë_èûî
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
, 
tw_video_‰ame_tcb_t
 **
±r_‰ame
)

681 if((
video_‰ame_tcb_queue
!=
NULL
Ë&& (
±r_‰ame
!=NULL)){

682 
tcb_node_queue_t
 *
queue
;

683 *
±r_‰ame
 = 
NULL
;

684 
queue
 = &
video_‰ame_tcb_queue
->
queue_node
;

685 if(
queue
->
›
 !
NULL
){

686 
tcb_node_t
 *
ãmp_node
;

687 
queue
->
›
->
	`åy_gë_èûî
(queue, &
ãmp_node
);

688 if(
ãmp_node
 !
NULL
){

689 *
±r_‰ame
 = 
	`to_video_‰ame_tcb
(
ãmp_node
);

693 
	}
}

695 
	$tw_video_‰ame_queue_put
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
, 
tw_video_‰ame_tcb_t
 *
‰ame
)

697 if((
video_‰ame_tcb_queue
!=
NULL
Ë&& (
‰ame
!=NULL)){

698 
tcb_node_queue_t
 *
queue
;

699 
queue
 = &
video_‰ame_tcb_queue
->
queue_node
;

700 if(
queue
->
›
 !
NULL
){

701 
queue
->
›
->
	`put
(queue, &
‰ame
->
‰ame_node
);

704 
	}
}

706 
	$tw_video_‰ame_queue_put_hódî
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
, 
tw_video_‰ame_tcb_t
 *
‰ame
)

708 if((
video_‰ame_tcb_queue
!=
NULL
Ë&& (
‰ame
!=NULL)){

709 
tcb_node_queue_t
 *
queue
;

710 
queue
 = &
video_‰ame_tcb_queue
->
queue_node
;

711 if(
queue
->
›
 !
NULL
){

712 
queue
->
›
->
	`put_hódî
(queue, &
‰ame
->
‰ame_node
);

715 
	}
}

717 
	$tw_video_‰ame_queue_gë_cuº_¥odu˚r_‰om_poﬁ
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

719 if((
video_‰ame_tcb_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

720 
Êags
;

721 
	`•ö_lock_úqßve
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

722 if(
video_‰ame_tcb_queue
->
cuº_¥odu˚r
 =
NULL
){

723 
	`•ö_u∆ock_úqª°‹e
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

724 if(
video_ch™_buf_poﬁ
->
›
 !
NULL
){

725 
video_ch™_buf_poﬁ
->
›
->
	`gë_video_‰ame_tcb
(video_ch™_buf_poﬁ, &
video_‰ame_tcb_queue
->
cuº_¥odu˚r
);

727 
	`•ö_lock_úqßve
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

729 
	`•ö_u∆ock_úqª°‹e
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

731 
	}
}

733 
	$tw_video_‰ame_queue_åy_gë_cuº_¥odu˚r_‰om_poﬁ
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

735 if((
video_‰ame_tcb_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

736 
Êags
;

737 
	`•ö_lock_úqßve
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

738 if(
video_‰ame_tcb_queue
->
cuº_¥odu˚r
 =
NULL
){

739 if(
video_ch™_buf_poﬁ
->
›
 !
NULL
){

740 
video_ch™_buf_poﬁ
->
›
->
	`åy_gë_video_‰ame_tcb
(video_ch™_buf_poﬁ, &
video_‰ame_tcb_queue
->
cuº_¥odu˚r
);

743 
	`•ö_u∆ock_úqª°‹e
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

745 
	}
}

747 
	$tw_video_‰ame_queue_put_cuº_¥odu˚r_öto_queue
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
)

749 if(
video_‰ame_tcb_queue
 !
NULL
){

750 
Êags
;

751 
	`•ö_lock_úqßve
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

752 if(
video_‰ame_tcb_queue
->
cuº_¥odu˚r
 !
NULL
){

753 if(
video_‰ame_tcb_queue
->
›
 !
NULL
){

754 
video_‰ame_tcb_queue
->
›
->
	`put
(video_‰ame_tcb_queue, video_‰ame_tcb_queue->
cuº_¥odu˚r
);

756 
	`tw_video_‰ame_queue_put
(
video_‰ame_tcb_queue
, video_‰ame_tcb_queue->
cuº_¥odu˚r
);

758 
video_‰ame_tcb_queue
->
cuº_¥odu˚r
 = 
NULL
;

760 
	`•ö_u∆ock_úqª°‹e
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

762 
	}
}

764 
	$tw_video_‰ame_queue_ªÀa£_cuº_¥odu˚r
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

766 if((
video_‰ame_tcb_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

767 
Êags
;

768 
	`•ö_lock_úqßve
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

769 if(
video_‰ame_tcb_queue
->
cuº_¥odu˚r
 !
NULL
){

770 if(
video_‰ame_tcb_queue
->
cuº_¥odu˚r
->
›
 !
NULL
){

771 
video_‰ame_tcb_queue
->
cuº_¥odu˚r
->
›
->
	`ªÀa£
(&video_‰ame_tcb_queue->cuº_¥odu˚r, 
video_ch™_buf_poﬁ
);

773 
	`tw_video_‰ame_tcb_ªÀa£
(&
video_‰ame_tcb_queue
->
cuº_¥odu˚r
, 
video_ch™_buf_poﬁ
);

776 
	`•ö_u∆ock_úqª°‹e
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

778 
	}
}

780 
	$tw_video_‰ame_queue_gë_cuº_c⁄sumî_‰om_queue
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
)

782 if(
video_‰ame_tcb_queue
 !
NULL
){

783 
Êags
;

785 
	`•ö_lock_úqßve
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

786 if(
video_‰ame_tcb_queue
->
cuº_c⁄sumî
 =
NULL
){

787 
	`•ö_u∆ock_úqª°‹e
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

788 if(
video_‰ame_tcb_queue
->
›
 !
NULL
){

789 
video_‰ame_tcb_queue
->
›
->
	`gë
(video_‰ame_tcb_queue, &video_‰ame_tcb_queue->
cuº_c⁄sumî
);

791 
	`tw_video_‰ame_queue_gë
(
video_‰ame_tcb_queue
, &video_‰ame_tcb_queue->
cuº_c⁄sumî
);

793 
	`•ö_lock_úqßve
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

795 
	`•ö_u∆ock_úqª°‹e
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

798 
	`¥ötk
("\n%s.%d**©ã¡i⁄**\n", 
__FUNCTION__
, 
__LINE__
);

800 
	}
}

802 
	$tw_video_‰ame_queue_åy_gë_cuº_c⁄sumî_‰om_queue
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
)

804 if(
video_‰ame_tcb_queue
 !
NULL
){

805 
Êags
;

806 
	`•ö_lock_úqßve
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

807 if(
video_‰ame_tcb_queue
->
cuº_c⁄sumî
 =
NULL
){

808 if(
video_‰ame_tcb_queue
->
›
 !
NULL
){

809 
video_‰ame_tcb_queue
->
›
->
	`åy_gë
(video_‰ame_tcb_queue, &video_‰ame_tcb_queue->
cuº_c⁄sumî
);

811 
	`tw_video_‰ame_queue_åy_gë
(
video_‰ame_tcb_queue
, &video_‰ame_tcb_queue->
cuº_c⁄sumî
);

814 
	`•ö_u∆ock_úqª°‹e
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

816 
	}
}

818 
	$tw_video_‰ame_queue_ªÀa£_cuº_c⁄sumî
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

820 if((
video_‰ame_tcb_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

821 
Êags
;

822 
	`•ö_lock_úqßve
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

823 if(
video_‰ame_tcb_queue
->
cuº_c⁄sumî
 !
NULL
){

824 if(
video_‰ame_tcb_queue
->
cuº_c⁄sumî
->
›
 !
NULL
){

825 
video_‰ame_tcb_queue
->
cuº_c⁄sumî
->
›
->
	`ªÀa£
(&video_‰ame_tcb_queue->cuº_c⁄sumî, 
video_ch™_buf_poﬁ
);

827 
	`tw_video_‰ame_tcb_ªÀa£
(&
video_‰ame_tcb_queue
->
cuº_c⁄sumî
, 
video_ch™_buf_poﬁ
);

830 
	`•ö_u∆ock_úqª°‹e
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

832 
	}
}

834 
	$tw_video_‰ame_queue_put_cuº_c⁄sumî_öto_queue_hódî
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
)

836 if(
video_‰ame_tcb_queue
 !
NULL
){

837 
Êags
;

838 
	`•ö_lock_úqßve
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

839 if(
video_‰ame_tcb_queue
->
cuº_c⁄sumî
 !
NULL
){

840 if(
video_‰ame_tcb_queue
->
›
 !
NULL
){

841 
video_‰ame_tcb_queue
->
›
->
	`put_hódî
(video_‰ame_tcb_queue, video_‰ame_tcb_queue->
cuº_c⁄sumî
);

843 
	`tw_video_‰ame_queue_put_hódî
(
video_‰ame_tcb_queue
, video_‰ame_tcb_queue->
cuº_c⁄sumî
);

845 
video_‰ame_tcb_queue
->
cuº_c⁄sumî
 = 
NULL
;

847 
	`•ö_u∆ock_úqª°‹e
(&
video_‰ame_tcb_queue
->
lock
, 
Êags
);

849 
	}
}

851 
	$tw_video_‰ame_queue_gë_cuº_queue_íåy_numbî
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
)

853 
íåy_numbî
 = 0;

854 if(
video_‰ame_tcb_queue
!=
NULL
){

855 
tcb_node_queue_t
 *
queue
;

856 
queue
 = &
video_‰ame_tcb_queue
->
queue_node
;

857 if(
queue
->
›
 !
NULL
){

858 
íåy_numbî
 = 
queue
->
›
->
	`gë_queue_cuº_íåy_numbî
(queue);

861  
íåy_numbî
;

862 
	}
}

864 
	$tw_video_‰ame_queue_ªÀa£
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

866 if((
video_‰ame_tcb_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

867 
	`ªmove_tw_video_‰ame_tcb_queue
(
video_‰ame_tcb_queue
, 
video_ch™_buf_poﬁ
);

869 
	}
}

871 
	$tw_video_‰ame_queue_öô
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
)

873 if(
video_‰ame_tcb_queue
 !
NULL
){

874 
tcb_node_queue_t
 *
queue
;

875 
queue
 = &
video_‰ame_tcb_queue
->
queue_node
;

876 
queue
->
›
 = &
tcb_node_queue_›
;

877 
queue
->
›
->
	`öô
(queue);

878 
video_‰ame_tcb_queue
->
cuº_c⁄sumî
 = 
NULL
;

879 
video_‰ame_tcb_queue
->
cuº_¥odu˚r
 = 
NULL
;

880 
video_‰ame_tcb_queue
->
°¨t_time°amp
 = 0;

881 
video_‰ame_tcb_queue
->
tŸÆ_duøti⁄
 = 0;

882 
	`•ö_lock_öô
(&
video_‰ame_tcb_queue
->
lock
);

884 
	}
}

886 
tw_video_‰ame_queue_›î©i⁄
 
	gtw_video_‰ame_queue_›
 = {

887 .
gë
 = 
tw_video_‰ame_queue_gë
,

888 .
	gåy_gë
 = 
tw_video_‰ame_queue_åy_gë
,

889 .
	ggë_èûî
 = 
tw_video_‰ame_queue_gë_èûî
,

890 .
	gåy_gë_èûî
 = 
tw_video_‰ame_queue_åy_gë_èûî
,

891 .
	gput
 = 
tw_video_‰ame_queue_put
,

892 .
	gput_hódî
 = 
tw_video_‰ame_queue_put_hódî
,

894 .
	ggë_cuº_¥odu˚r_‰om_poﬁ
 = 
tw_video_‰ame_queue_gë_cuº_¥odu˚r_‰om_poﬁ
,

895 .
	gåy_gë_cuº_¥odu˚r_‰om_poﬁ
 = 
tw_video_‰ame_queue_åy_gë_cuº_¥odu˚r_‰om_poﬁ
,

896 .
	gput_cuº_¥odu˚r_öto_queue
 = 
tw_video_‰ame_queue_put_cuº_¥odu˚r_öto_queue
,

897 .
	gªÀa£_cuº_¥odu˚r
 = 
tw_video_‰ame_queue_ªÀa£_cuº_¥odu˚r
,

898 .
	ggë_cuº_c⁄sumî_‰om_queue
 = 
tw_video_‰ame_queue_gë_cuº_c⁄sumî_‰om_queue
,

899 .
	gåy_gë_cuº_c⁄sumî_‰om_queue
 = 
tw_video_‰ame_queue_åy_gë_cuº_c⁄sumî_‰om_queue
,

900 .
	gªÀa£_cuº_c⁄sumî
 = 
tw_video_‰ame_queue_ªÀa£_cuº_c⁄sumî
,

901 .
	gput_cuº_c⁄sumî_öto_queue_hódî
 = 
tw_video_‰ame_queue_put_cuº_c⁄sumî_öto_queue_hódî
,

903 .
	ggë_cuº_queue_íåy_numbî
 = 
tw_video_‰ame_queue_gë_cuº_queue_íåy_numbî
,

904 .
	gªÀa£
 = 
tw_video_‰ame_queue_ªÀa£
,

905 .
	göô
 = 
tw_video_‰ame_queue_öô
,

908 
	$öô_tw_video_‰ame_tcb_queue
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
)

910 if(
video_‰ame_tcb_queue
 !
NULL
){

911 
video_‰ame_tcb_queue
->
›
 = &
tw_video_‰ame_queue_›
;

912 
video_‰ame_tcb_queue
->
›
->
	`öô
(video_frame_tcb_queue);

914 
	}
}

916 
	$ªmove_tw_video_‰ame_tcb_queue
(
tw_video_‰ame_tcb_queue_t
 *
video_‰ame_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

918 if((
video_‰ame_tcb_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

919 if(
video_‰ame_tcb_queue
->
›
 !
NULL
){

920 
video_‰ame_tcb_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(video_frame_tcb_queue);

921 
video_‰ame_tcb_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(video_‰ame_tcb_queue, 
video_ch™_buf_poﬁ
);

922 
video_‰ame_tcb_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(video_frame_tcb_queue)){

923 
video_‰ame_tcb_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(video_frame_tcb_queue);

924 if(
video_‰ame_tcb_queue
->
cuº_c⁄sumî
 =
NULL
){

927 
video_‰ame_tcb_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(video_‰ame_tcb_queue, 
video_ch™_buf_poﬁ
);

930 
	`tw_video_‰ame_queue_put_cuº_¥odu˚r_öto_queue
(
video_‰ame_tcb_queue
);

931 
	`tw_video_‰ame_queue_ªÀa£_cuº_c⁄sumî
(
video_‰ame_tcb_queue
, 
video_ch™_buf_poﬁ
);

932 
	`tw_video_‰ame_queue_gë_cuº_queue_íåy_numbî
(
video_‰ame_tcb_queue
)){

933 
	`tw_video_‰ame_queue_gë_cuº_c⁄sumî_‰om_queue
(
video_‰ame_tcb_queue
);

934 if(
video_‰ame_tcb_queue
->
cuº_c⁄sumî
 =
NULL
){

937 
	`tw_video_‰ame_queue_ªÀa£_cuº_c⁄sumî
(
video_‰ame_tcb_queue
, 
video_ch™_buf_poﬁ
);

941 
	}
}

943 #ifde‡ 
MV_MODULE


944 
	$tw_video_mv_∑ckë_tcb_öô
(
tw_video_mv_∑ckë_tcb_t
 *
∑ckë
, 
tw_video_ch™_buf_poﬁ_t
 *
poﬁ
, 
id
)

946 if((
∑ckë
!=
NULL
Ë&& (
poﬁ
!=NULL)){

947 
tcb_node_t
 *
node
 = &
∑ckë
->
mv_∑ckë_node
;

948 
	`•ö_lock_öô
(&
∑ckë
->
lock
);

949 
	`©omic_£t
(&
∑ckë
->
ªf_cou¡
, 0);

950 
node
->
›
 = &
tcb_node_›
;

951 
node
->
›
->
	`öô
(node);

952 
node
->
›
->
	`£t_¥iv
“ode, 
∑ckë
);

953 
∑ckë
->
d©a_size
 = 
poﬁ
->
mv_∑ckë_buf„r_size
;

954 
∑ckë
->
d©a
 = &
poﬁ
->
mv_ˇche_buf„r
[poﬁ->
mv_∑ckë_buf„r_size
*
id
];

955 
∑ckë
->
mvVe˘‹_buf
 =Öackë->
d©a
;

956 
∑ckë
->
mvVe˘‹_Àn
 = 0;

957 
∑ckë
->
dma_addr
 = 0;

959 
	}
}

961 
	$tw_video_mv_∑ckë_tcb_ª£t
(
tw_video_mv_∑ckë_tcb_t
 *
∑ckë
)

963 if(
∑ckë
!=
NULL
){

964 
∑ckë
->
mvVe˘‹_buf
 =Öackë->
d©a
;

965 
∑ckë
->
mvVe˘‹_Àn
 = 0;

966 
∑ckë
->
dma_addr
 = 0;

968 
	}
}

970 
	$tw_video_mv_∑ckë_tcb_ªÀa£
(
tw_video_mv_∑ckë_tcb_t
 **
±r_∑ckë
, 
tw_video_ch™_buf_poﬁ_t
 *
poﬁ
)

972 if((*
±r_∑ckë
!=
NULL
Ë&& (
poﬁ
!=NULL)){

973 
tw_video_mv_∑ckë_tcb_t
 *
∑ckë
 = *
±r_∑ckë
;

974 
Êags
;

976 
	`•ö_lock_úqßve
(&
∑ckë
->
lock
, 
Êags
);

977 if(
	`©omic_ªad
(&
∑ckë
->
ªf_cou¡
) > 1){

978 
	`©omic_dec
(&
∑ckë
->
ªf_cou¡
);

980 
tcb_node_t
 *
node
;

981 if(
∑ckë
->
›
 !
NULL
){

982 
∑ckë
->
›
->
	`ª£t
(packet);

984 
node
 = &
∑ckë
->
mv_∑ckë_node
;

985 if(
node
->
›
 !
NULL
){

986 
node
->
›
->
	`ªÀa£
“ode, &
poﬁ
->
mv_∑ckë_poﬁ_tcb
);

988 *
±r_∑ckë
 = 
NULL
;

990 
	`•ö_u∆ock_úqª°‹e
(&
∑ckë
->
lock
, 
Êags
);

992 
	}
}

994 
	$tw_video_mv_∑ckë_tcb_ª„ªn˚
(
tw_video_mv_∑ckë_tcb_t
 *
§c_∑ckë
,Åw_video_mv_∑ckë_tcb_à**
±r_de°_∑ckë
)

996 if((
§c_∑ckë
!=
NULL
Ë&& (
±r_de°_∑ckë
!=NULL)){

997 
Êags
;

999 
	`•ö_lock_úqßve
(&
§c_∑ckë
->
lock
, 
Êags
);

1000 
	`©omic_öc
(&
§c_∑ckë
->
ªf_cou¡
);

1001 *
±r_de°_∑ckë
 = 
§c_∑ckë
;

1002 
	`•ö_u∆ock_úqª°‹e
(&
§c_∑ckë
->
lock
, 
Êags
);

1004 
	}
}

1006 
	$tw_video_mv_∑ckë_tcb_dma_m≠
(
tw_video_mv_∑ckë_tcb_t
 *
∑ckë
, 
dma_d©a_dúe˘i⁄
 
dúe˘i⁄
)

1008 if(
∑ckë
 !
NULL
) {

1009 if(
∑ckë
->
d©a
 !
NULL
) {

1010 
∑ckë
->
dma_addr
 = 
	`dma_m≠_sögÀ
(
NULL
,Öackë->
d©a
,Öackë->
d©a_size
, 
dúe˘i⁄
);

1011 i‡(
∑ckë
->
dma_addr
 == 0){

1012 
	`¥ötk
("dma_map_singleÉrr\n");

1016 
	}
}

1018 
	$tw_video_mv_∑ckë_tcb_dma_unm≠
(
tw_video_mv_∑ckë_tcb_t
 *
∑ckë
, 
dma_d©a_dúe˘i⁄
 
dúe˘i⁄
)

1020 if(
∑ckë
 !
NULL
) {

1021 i‡(
∑ckë
->
dma_addr
 != 0) {

1022 
	`dma_unm≠_sögÀ
(
NULL
, 
∑ckë
->
dma_addr
,Öackë->
d©a_size
, 
dúe˘i⁄
);

1023 
∑ckë
->
dma_addr
 = 0;

1026 
	}
}

1028 
size_t
 
	$tw_video_mv_∑ckë_tcb_submô
(
tw_video_mv_∑ckë_tcb_t
 *
∑ckë
, 
__u£r
 *
d©a
, 
size_t
 
cou¡
, 
loff_t
 *
µos
)

1030 
loff_t
 
buf_off£t
 = 0;

1031 if(
∑ckë
 !
NULL
){

1032 
	`c›y_to_u£r
(
d©a
, 
∑ckë
->
mvVe˘‹_buf
,Öackë->
mvVe˘‹_Àn
);

1033 
buf_off£t
 = 
∑ckë
->
mvVe˘‹_Àn
;

1035 *
µos
 +
buf_off£t
;

1036  (
size_t
)
buf_off£t
;

1037 
	}
}

1039 
tw_video_mv_∑ckë_tcb_›î©i⁄
 
	gtw_video_mv_∑ckë_tcb_›
 = {

1040 .
öô
 = 
tw_video_mv_∑ckë_tcb_öô
,

1041 .
	gª£t
 = 
tw_video_mv_∑ckë_tcb_ª£t
,

1042 .
	gªÀa£
 = 
tw_video_mv_∑ckë_tcb_ªÀa£
,

1043 .
	gª„ªn˚
 = 
tw_video_mv_∑ckë_tcb_ª„ªn˚
,

1045 .
	gdma_m≠
 = 
tw_video_mv_∑ckë_tcb_dma_m≠
,

1046 .
	gdma_unm≠
 = 
tw_video_mv_∑ckë_tcb_dma_unm≠
,

1048 .
	gsubmô
 = 
tw_video_mv_∑ckë_tcb_submô
,

1051 
	$tw_video_mv_∑ckë_tcb_queue_gë
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_tcb_queue
, 
tw_video_mv_∑ckë_tcb_t
 **
±r_video_mv_∑ckë_tcb
)

1053 if((
video_mv_∑ckë_tcb_queue
!=
NULL
Ë&& (
±r_video_mv_∑ckë_tcb
!=NULL)){

1054 
tcb_node_queue_t
 *
queue
;

1055 *
±r_video_mv_∑ckë_tcb
 = 
NULL
;

1056 
queue
 = &
video_mv_∑ckë_tcb_queue
->
queue_node
;

1057 if(
queue
->
›
 !
NULL
){

1058 
tcb_node_t
 *
ãmp_node
;

1059 
queue
->
›
->
	`gë
(queue, &
ãmp_node
);

1060 if(
ãmp_node
 !
NULL
){

1061 *
±r_video_mv_∑ckë_tcb
 = 
	`to_gë_tw_video_mv_∑ckë_tcb
(
ãmp_node
);

1065 
	}
}

1067 
	$tw_video_mv_∑ckë_tcb_queue_åy_gë
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_tcb_queue
, 
tw_video_mv_∑ckë_tcb_t
 **
±r_video_mv_∑ckë_tcb
)

1069 if((
video_mv_∑ckë_tcb_queue
!=
NULL
Ë&& (
±r_video_mv_∑ckë_tcb
!=NULL)){

1070 
tcb_node_queue_t
 *
queue
;

1071 *
±r_video_mv_∑ckë_tcb
 = 
NULL
;

1072 
queue
 = &
video_mv_∑ckë_tcb_queue
->
queue_node
;

1073 if(
queue
->
›
 !
NULL
){

1074 
tcb_node_t
 *
ãmp_node
;

1075 
queue
->
›
->
	`åy_gë
(queue, &
ãmp_node
);

1076 if(
ãmp_node
 !
NULL
){

1077 *
±r_video_mv_∑ckë_tcb
 = 
	`to_gë_tw_video_mv_∑ckë_tcb
(
ãmp_node
);

1081 
	}
}

1083 
	$tw_video_mv_∑ckë_tcb_queue_gë_èûî
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_tcb_queue
, 
tw_video_mv_∑ckë_tcb_t
 **
±r_video_mv_∑ckë_tcb
)

1085 if((
video_mv_∑ckë_tcb_queue
!=
NULL
Ë&& (
±r_video_mv_∑ckë_tcb
!=NULL)){

1086 
tcb_node_queue_t
 *
queue
;

1087 *
±r_video_mv_∑ckë_tcb
 = 
NULL
;

1088 
queue
 = &
video_mv_∑ckë_tcb_queue
->
queue_node
;

1089 if(
queue
->
›
 !
NULL
){

1090 
tcb_node_t
 *
ãmp_node
;

1091 
queue
->
›
->
	`gë_èûî
(queue, &
ãmp_node
);

1092 if(
ãmp_node
 !
NULL
){

1093 *
±r_video_mv_∑ckë_tcb
 = 
	`to_gë_tw_video_mv_∑ckë_tcb
(
ãmp_node
);

1097 
	}
}

1099 
	$tw_video_mv_∑ckë_tcb_queue_åy_gë_èûî
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_tcb_queue
, 
tw_video_mv_∑ckë_tcb_t
 **
±r_video_mv_∑ckë_tcb
)

1101 if((
video_mv_∑ckë_tcb_queue
!=
NULL
Ë&& (
±r_video_mv_∑ckë_tcb
!=NULL)){

1102 
tcb_node_queue_t
 *
queue
;

1103 *
±r_video_mv_∑ckë_tcb
 = 
NULL
;

1104 
queue
 = &
video_mv_∑ckë_tcb_queue
->
queue_node
;

1105 if(
queue
->
›
 !
NULL
){

1106 
tcb_node_t
 *
ãmp_node
;

1107 
queue
->
›
->
	`åy_gë_èûî
(queue, &
ãmp_node
);

1108 if(
ãmp_node
 !
NULL
){

1109 *
±r_video_mv_∑ckë_tcb
 = 
	`to_gë_tw_video_mv_∑ckë_tcb
(
ãmp_node
);

1113 
	}
}

1115 
	$tw_video_mv_∑ckë_tcb_queue_put
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_tcb_queue
, 
tw_video_mv_∑ckë_tcb_t
 *
video_mv_∑ckë_tcb
)

1117 if((
video_mv_∑ckë_tcb_queue
!=
NULL
Ë&& (
video_mv_∑ckë_tcb
!=NULL)){

1118 
tcb_node_queue_t
 *
queue
;

1119 
queue
 = &
video_mv_∑ckë_tcb_queue
->
queue_node
;

1120 if(
queue
->
›
 !
NULL
){

1121 
queue
->
›
->
	`put
(queue, &
video_mv_∑ckë_tcb
->
mv_∑ckë_node
);

1124 
	}
}

1126 
	$tw_video_mv_∑ckë_tcb_queue_put_hódî
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_tcb_queue
, 
tw_video_mv_∑ckë_tcb_t
 *
video_mv_∑ckë_tcb
)

1128 if((
video_mv_∑ckë_tcb_queue
!=
NULL
Ë&& (
video_mv_∑ckë_tcb
!=NULL)){

1129 
tcb_node_queue_t
 *
queue
;

1130 
queue
 = &
video_mv_∑ckë_tcb_queue
->
queue_node
;

1131 if(
queue
->
›
 !
NULL
){

1132 
queue
->
›
->
	`put_hódî
(queue, &
video_mv_∑ckë_tcb
->
mv_∑ckë_node
);

1135 
	}
}

1137 
	$tw_video_mv_∑ckë_tcb_queue_gë_cuº_¥odu˚r_‰om_poﬁ
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

1139 if((
video_mv_∑ckë_tcb_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

1140 
Êags
;

1141 
	`•ö_lock_úqßve
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1142 if(
video_mv_∑ckë_tcb_queue
->
cuº_¥odu˚r
 =
NULL
){

1143 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1144 if(
video_ch™_buf_poﬁ
->
›
 !
NULL
){

1145 
video_ch™_buf_poﬁ
->
›
->
	`gë_video_mv_∑ckë_tcb
(video_ch™_buf_poﬁ, &
video_mv_∑ckë_tcb_queue
->
cuº_¥odu˚r
);

1147 
	`•ö_lock_úqßve
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1149 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1151 
	}
}

1153 
	$tw_video_mv_∑ckë_tcb_queue_åy_gë_cuº_¥odu˚r_‰om_poﬁ
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

1155 if((
video_mv_∑ckë_tcb_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

1156 
Êags
;

1157 
	`•ö_lock_úqßve
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1158 if(
video_mv_∑ckë_tcb_queue
->
cuº_¥odu˚r
 =
NULL
){

1159 if(
video_ch™_buf_poﬁ
->
›
 !
NULL
){

1160 
video_ch™_buf_poﬁ
->
›
->
	`åy_gë_video_mv_∑ckë_tcb
(video_ch™_buf_poﬁ, &
video_mv_∑ckë_tcb_queue
->
cuº_¥odu˚r
);

1163 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1165 
	}
}

1167 
	$tw_video_mv_∑ckë_tcb_queue_put_cuº_¥odu˚r_öto_queue
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_tcb_queue
)

1169 if(
video_mv_∑ckë_tcb_queue
 !
NULL
){

1170 
Êags
;

1171 
	`•ö_lock_úqßve
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1172 if(
video_mv_∑ckë_tcb_queue
->
cuº_¥odu˚r
 !
NULL
){

1173 if(
video_mv_∑ckë_tcb_queue
->
›
 !
NULL
){

1174 
video_mv_∑ckë_tcb_queue
->
›
->
	`put
(video_mv_∑ckë_tcb_queue, video_mv_∑ckë_tcb_queue->
cuº_¥odu˚r
);

1176 
	`tw_video_mv_∑ckë_tcb_queue_put
(
video_mv_∑ckë_tcb_queue
, video_mv_∑ckë_tcb_queue->
cuº_¥odu˚r
);

1178 
video_mv_∑ckë_tcb_queue
->
cuº_¥odu˚r
 = 
NULL
;

1180 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1182 
	}
}

1184 
	$tw_video_mv_∑ckë_tcb_queue_ªÀa£_cuº_¥odu˚r
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

1186 if((
video_mv_∑ckë_tcb_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

1187 
Êags
;

1188 
	`•ö_lock_úqßve
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1189 if(
video_mv_∑ckë_tcb_queue
->
cuº_¥odu˚r
 !
NULL
){

1190 if(
video_mv_∑ckë_tcb_queue
->
cuº_¥odu˚r
->
›
 !
NULL
){

1191 
video_mv_∑ckë_tcb_queue
->
cuº_¥odu˚r
->
›
->
	`ªÀa£
(&video_mv_∑ckë_tcb_queue->cuº_¥odu˚r, 
video_ch™_buf_poﬁ
);

1193 
	`tw_video_mv_∑ckë_tcb_ªÀa£
(&
video_mv_∑ckë_tcb_queue
->
cuº_¥odu˚r
, 
video_ch™_buf_poﬁ
);

1196 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1198 
	}
}

1200 
	$tw_video_mv_∑ckë_tcb_queue_gë_cuº_c⁄sumî_‰om_queue
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_tcb_queue
)

1202 if(
video_mv_∑ckë_tcb_queue
 !
NULL
){

1203 
Êags
;

1204 
	`•ö_lock_úqßve
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1205 if(
video_mv_∑ckë_tcb_queue
->
cuº_c⁄sumî
 =
NULL
){

1206 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1207 if(
video_mv_∑ckë_tcb_queue
->
›
 !
NULL
){

1208 
video_mv_∑ckë_tcb_queue
->
›
->
	`gë
(video_mv_∑ckë_tcb_queue, &video_mv_∑ckë_tcb_queue->
cuº_c⁄sumî
);

1210 
	`tw_video_mv_∑ckë_tcb_queue_gë
(
video_mv_∑ckë_tcb_queue
, &video_mv_∑ckë_tcb_queue->
cuº_c⁄sumî
);

1212 
	`•ö_lock_úqßve
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1214 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1216 
	}
}

1218 
	$tw_video_mv_∑ckë_tcb_queue_åy_gë_cuº_c⁄sumî_‰om_queue
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_tcb_queue
)

1220 if(
video_mv_∑ckë_tcb_queue
 !
NULL
){

1221 
Êags
;

1222 
	`•ö_lock_úqßve
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1223 if(
video_mv_∑ckë_tcb_queue
->
cuº_c⁄sumî
 =
NULL
){

1224 if(
video_mv_∑ckë_tcb_queue
->
›
 !
NULL
){

1225 
video_mv_∑ckë_tcb_queue
->
›
->
	`åy_gë
(video_mv_∑ckë_tcb_queue, &video_mv_∑ckë_tcb_queue->
cuº_c⁄sumî
);

1227 
	`tw_video_mv_∑ckë_tcb_queue_åy_gë
(
video_mv_∑ckë_tcb_queue
, &video_mv_∑ckë_tcb_queue->
cuº_c⁄sumî
);

1230 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1232 
	}
}

1234 
	$tw_video_mv_∑ckë_tcb_queue_ªÀa£_cuº_c⁄sumî
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

1236 if((
video_mv_∑ckë_tcb_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

1237 
Êags
;

1238 
	`•ö_lock_úqßve
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1239 if(
video_mv_∑ckë_tcb_queue
->
cuº_c⁄sumî
 !
NULL
){

1240 if(
video_mv_∑ckë_tcb_queue
->
cuº_c⁄sumî
->
›
 !
NULL
){

1241 
video_mv_∑ckë_tcb_queue
->
cuº_c⁄sumî
->
›
->
	`ªÀa£
(&video_mv_∑ckë_tcb_queue->cuº_c⁄sumî, 
video_ch™_buf_poﬁ
);

1243 
	`tw_video_mv_∑ckë_tcb_ªÀa£
(&
video_mv_∑ckë_tcb_queue
->
cuº_c⁄sumî
, 
video_ch™_buf_poﬁ
);

1246 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_∑ckë_tcb_queue
->
lock
, 
Êags
);

1248 
	}
}

1250 
	$tw_video_mv_∑ckë_tcb_queue_gë_cuº_queue_íåy_numbî
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_tcb_queue
)

1252 
íåy_numbî
 = 0;

1253 if(
video_mv_∑ckë_tcb_queue
!=
NULL
){

1254 
tcb_node_queue_t
 *
queue
;

1255 
queue
 = &
video_mv_∑ckë_tcb_queue
->
queue_node
;

1256 if(
queue
->
›
 !
NULL
){

1257 
íåy_numbî
 = 
queue
->
›
->
	`gë_queue_cuº_íåy_numbî
(queue);

1260  
íåy_numbî
;

1261 
	}
}

1263 
	$tw_video_mv_∑ckë_tcb_queue_ªÀa£
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

1265 if((
video_mv_∑ckë_tcb_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

1266 
	`ªmove_tw_video_mv_∑ckë_tcb_queue
(
video_mv_∑ckë_tcb_queue
, 
video_ch™_buf_poﬁ
);

1268 
	}
}

1270 
	$tw_video_mv_∑ckë_tcb_queue_öô
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_tcb_queue
)

1272 if(
video_mv_∑ckë_tcb_queue
 !
NULL
){

1273 
tcb_node_queue_t
 *
queue
;

1274 
queue
 = &
video_mv_∑ckë_tcb_queue
->
queue_node
;

1275 
queue
->
›
 = &
tcb_node_queue_›
;

1276 
queue
->
›
->
	`öô
(queue);

1277 
video_mv_∑ckë_tcb_queue
->
cuº_c⁄sumî
 = 
NULL
;

1278 
video_mv_∑ckë_tcb_queue
->
cuº_¥odu˚r
 = 
NULL
;

1279 
video_mv_∑ckë_tcb_queue
->
°¨t_time°amp
 = 0;

1280 
video_mv_∑ckë_tcb_queue
->
tŸÆ_duøti⁄
 = 0;

1281 
	`•ö_lock_öô
(&
video_mv_∑ckë_tcb_queue
->
lock
);

1283 
	}
}

1285 
tw_video_mv_∑ckë_tcb_queue_›î©i⁄
 
	gtw_video_mv_∑ckë_tcb_queue_›
 = {

1286 .
gë
 = 
tw_video_mv_∑ckë_tcb_queue_gë
,

1287 .
	gåy_gë
 = 
tw_video_mv_∑ckë_tcb_queue_åy_gë
,

1288 .
	ggë_èûî
 = 
tw_video_mv_∑ckë_tcb_queue_gë_èûî
,

1289 .
	gåy_gë_èûî
 = 
tw_video_mv_∑ckë_tcb_queue_åy_gë_èûî
,

1290 .
	gput
 = 
tw_video_mv_∑ckë_tcb_queue_put
,

1291 .
	gput_hódî
 = 
tw_video_mv_∑ckë_tcb_queue_put_hódî
,

1293 .
	ggë_cuº_¥odu˚r_‰om_poﬁ
 = 
tw_video_mv_∑ckë_tcb_queue_gë_cuº_¥odu˚r_‰om_poﬁ
,

1294 .
	gåy_gë_cuº_¥odu˚r_‰om_poﬁ
 = 
tw_video_mv_∑ckë_tcb_queue_åy_gë_cuº_¥odu˚r_‰om_poﬁ
,

1295 .
	gput_cuº_¥odu˚r_öto_queue
 = 
tw_video_mv_∑ckë_tcb_queue_put_cuº_¥odu˚r_öto_queue
,

1296 .
	gªÀa£_cuº_¥odu˚r
 = 
tw_video_mv_∑ckë_tcb_queue_ªÀa£_cuº_¥odu˚r
,

1297 .
	ggë_cuº_c⁄sumî_‰om_queue
 = 
tw_video_mv_∑ckë_tcb_queue_gë_cuº_c⁄sumî_‰om_queue
,

1298 .
	gåy_gë_cuº_c⁄sumî_‰om_queue
 = 
tw_video_mv_∑ckë_tcb_queue_åy_gë_cuº_c⁄sumî_‰om_queue
,

1299 .
	gªÀa£_cuº_c⁄sumî
 = 
tw_video_mv_∑ckë_tcb_queue_ªÀa£_cuº_c⁄sumî
,

1301 .
	ggë_cuº_queue_íåy_numbî
 = 
tw_video_mv_∑ckë_tcb_queue_gë_cuº_queue_íåy_numbî
,

1302 .
	gªÀa£
 = 
tw_video_mv_∑ckë_tcb_queue_ªÀa£
,

1303 .
	göô
 = 
tw_video_mv_∑ckë_tcb_queue_öô
,

1306 
	$öô_tw_video_mv_∑ckë_tcb_queue
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_queue
)

1308 if(
video_mv_∑ckë_queue
 !
NULL
){

1309 
video_mv_∑ckë_queue
->
›
 = &
tw_video_mv_∑ckë_tcb_queue_›
;

1310 
video_mv_∑ckë_queue
->
›
->
	`öô
(video_mv_packet_queue);

1312 
	}
}

1314 
	$ªmove_tw_video_mv_∑ckë_tcb_queue
(
tw_video_mv_∑ckë_tcb_queue_t
 *
video_mv_∑ckë_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

1316 if((
video_mv_∑ckë_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

1317 if(
video_mv_∑ckë_queue
->
›
 !
NULL
){

1318 
video_mv_∑ckë_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(video_mv_packet_queue);

1319 
video_mv_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(video_mv_∑ckë_queue, 
video_ch™_buf_poﬁ
);

1320 
video_mv_∑ckë_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(video_mv_packet_queue)){

1321 
video_mv_∑ckë_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(video_mv_packet_queue);

1322 if(
video_mv_∑ckë_queue
->
cuº_c⁄sumî
 =
NULL
){

1325 
video_mv_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(video_mv_∑ckë_queue, 
video_ch™_buf_poﬁ
);

1328 
	`tw_video_mv_∑ckë_tcb_queue_put_cuº_¥odu˚r_öto_queue
(
video_mv_∑ckë_queue
);

1329 
	`tw_video_mv_∑ckë_tcb_queue_ªÀa£_cuº_c⁄sumî
(
video_mv_∑ckë_queue
, 
video_ch™_buf_poﬁ
);

1330 
	`tw_video_mv_∑ckë_tcb_queue_gë_cuº_queue_íåy_numbî
(
video_mv_∑ckë_queue
)){

1331 
	`tw_video_mv_∑ckë_tcb_queue_gë_cuº_c⁄sumî_‰om_queue
(
video_mv_∑ckë_queue
);

1332 if(
video_mv_∑ckë_queue
->
cuº_c⁄sumî
 =
NULL
){

1335 
	`tw_video_mv_∑ckë_tcb_queue_ªÀa£_cuº_c⁄sumî
(
video_mv_∑ckë_queue
, 
video_ch™_buf_poﬁ
);

1339 
	}
}

1341 
	$tw_video_mv_‰ame_tcb_öô
(
tw_video_mv_‰ame_tcb_t
 *
‰ame
)

1343 if(
‰ame
!=
NULL
){

1344 
tcb_node_t
 *
node
 = &
‰ame
->
mv_‰ame_node
;

1345 
node
->
›
 = &
tcb_node_›
;

1346 
node
->
›
->
	`öô
(node);

1347 
node
->
›
->
	`£t_¥iv
“ode, 
‰ame
);

1349 
	`•ö_lock_öô
(&
‰ame
->
lock
);

1350 
	`©omic_£t
(&
‰ame
->
ªf_cou¡
, 0);

1351 
	`mem£t
(
‰ame
->
mvFœg_buf
, 0, 
MŸi⁄Ve˘‹BôFœg_BUF_LEN
);

1352 
‰ame
->
mvFœg_Àn
 = 0;

1353 
‰ame
->
mvBuf_∑yLﬂdLí
 = 0;

1354 
‰ame
->
time°amp
 = 0;

1355 
‰ame
->
‰ame_numbî
 = 0;

1356 
	`öô_tw_video_mv_∑ckë_tcb_queue
(&
‰ame
->
mv_queue
);

1358 
	}
}

1360 
	$tw_video_mv_‰ame_tcb_ª£t
(
tw_video_mv_‰ame_tcb_t
 *
‰ame
)

1362 if(
‰ame
 !
NULL
){

1363 
	`©omic_£t
(&
‰ame
->
ªf_cou¡
, 0);

1364 
	`mem£t
(
‰ame
->
mvFœg_buf
, 0, 
MŸi⁄Ve˘‹BôFœg_BUF_LEN
);

1365 
‰ame
->
mvFœg_Àn
 = 0;

1366 
‰ame
->
mvBuf_∑yLﬂdLí
 = 0;

1367 
‰ame
->
time°amp
 = 0;

1368 
‰ame
->
‰ame_numbî
 = 0;

1370 
	}
}

1372 
	$tw_video_mv_‰ame_tcb_ªÀa£
(
tw_video_mv_‰ame_tcb_t
 **
±r_‰ame
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

1374 if((
±r_‰ame
!=
NULL
)){

1375 
tw_video_mv_‰ame_tcb_t
 *
‰ame
 = *
±r_‰ame
;

1376 
Êags
;

1377 if(
video_ch™_buf_poﬁ
 =
NULL
){

1378 
video_ch™_buf_poﬁ
 = 
‰ame
->video_chan_buf_pool;

1380 
	`•ö_lock_úqßve
(&
‰ame
->
lock
, 
Êags
);

1381 if(
	`©omic_ªad
(&
‰ame
->
ªf_cou¡
) > 1){

1382 
	`©omic_dec
(&
‰ame
->
ªf_cou¡
);

1384 
tcb_node_t
 *
node
;

1385 if(
‰ame
->
›
 !
NULL
){

1386 
‰ame
->
›
->
	`ª£t
(frame);

1388 if(
‰ame
->
mv_queue
.
›
 !
NULL
){

1389 
‰ame
->
mv_queue
.
›
->
	`ªÀa£
(&‰ame->mv_queue, 
video_ch™_buf_poﬁ
);

1391 
	`tw_video_mv_∑ckë_tcb_queue_ªÀa£
(&
‰ame
->
mv_queue
, 
video_ch™_buf_poﬁ
);

1393 
node
 = &
‰ame
->
mv_‰ame_node
;

1394 if(
node
->
›
 !
NULL
){

1395 
node
->
›
->
	`ªÀa£
“ode, &
video_ch™_buf_poﬁ
->
mv_‰ame_poﬁ_tcb
);

1397 *
±r_‰ame
 = 
NULL
;

1399 
	`•ö_u∆ock_úqª°‹e
(&
‰ame
->
lock
, 
Êags
);

1401 
	}
}

1403 
	$tw_video_mv_‰ame_tcb_ª„ªn˚
(
tw_video_mv_‰ame_tcb_t
 *
§c_‰ame
,Åw_video_mv_‰ame_tcb_à**
±r_de°_‰ame
)

1405 if((
§c_‰ame
!=
NULL
Ë&& (
±r_de°_‰ame
!=NULL)){

1406 
Êags
;

1407 
	`•ö_lock_úqßve
(&
§c_‰ame
->
lock
, 
Êags
);

1408 
	`©omic_öc
(&
§c_‰ame
->
ªf_cou¡
);

1409 *
±r_de°_‰ame
 = 
§c_‰ame
;

1410 
	`•ö_u∆ock_úqª°‹e
(&
§c_‰ame
->
lock
, 
Êags
);

1412 
	}
}

1414 
size_t
 
	$tw_video_mv_‰ame_tcb_submô
(
tw_video_mv_‰ame_tcb_t
 *
‰ame
, 
__u£r
 *
d©a
, 
size_t
 
cou¡
, 
loff_t
 *
µos
, 
ma°îOrSubFœg
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

1417 
	}
}

1419 
tw_video_mv_‰ame_tcb_›î©i⁄
 
	gtw_video_mv_‰ame_tcb_›
 = {

1420 .
öô
 = 
tw_video_mv_‰ame_tcb_öô
,

1421 .
	gª£t
 = 
tw_video_mv_‰ame_tcb_ª£t
,

1422 .
	gªÀa£
 = 
tw_video_mv_‰ame_tcb_ªÀa£
,

1423 .
	gª„ªn˚
 = 
tw_video_mv_‰ame_tcb_ª„ªn˚
,

1424 .
	gsubmô
 = 
tw_video_mv_‰ame_tcb_submô
,

1427 
	$tw_video_mv_‰ame_tcb_queue_gë
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
, 
tw_video_mv_‰ame_tcb_t
 **
±r_video_mv_‰ame_tcb
)

1429 if((
video_mv_‰ame_tcb_queue
!=
NULL
Ë&& (
±r_video_mv_‰ame_tcb
!=NULL)){

1430 
tcb_node_queue_t
 *
queue
;

1431 *
±r_video_mv_‰ame_tcb
 = 
NULL
;

1432 
queue
 = &
video_mv_‰ame_tcb_queue
->
queue_node
;

1433 if(
queue
->
›
 !
NULL
){

1434 
tcb_node_t
 *
ãmp_node
;

1435 
queue
->
›
->
	`gë
(queue, &
ãmp_node
);

1436 if(
ãmp_node
 !
NULL
){

1437 *
±r_video_mv_‰ame_tcb
 = 
	`to_gë_tw_video_mv_‰ame_tcb
(
ãmp_node
);

1441 
	}
}

1443 
	$tw_video_mv_‰ame_tcb_queue_åy_gë
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
, 
tw_video_mv_‰ame_tcb_t
 **
±r_video_mv_‰ame_tcb
)

1445 if((
video_mv_‰ame_tcb_queue
!=
NULL
Ë&& (
±r_video_mv_‰ame_tcb
!=NULL)){

1446 
tcb_node_queue_t
 *
queue
;

1447 *
±r_video_mv_‰ame_tcb
 = 
NULL
;

1448 
queue
 = &
video_mv_‰ame_tcb_queue
->
queue_node
;

1449 if(
queue
->
›
 !
NULL
){

1450 
tcb_node_t
 *
ãmp_node
;

1451 
queue
->
›
->
	`åy_gë
(queue, &
ãmp_node
);

1452 if(
ãmp_node
 !
NULL
){

1453 *
±r_video_mv_‰ame_tcb
 = 
	`to_gë_tw_video_mv_‰ame_tcb
(
ãmp_node
);

1457 
	}
}

1459 
	$tw_video_mv_‰ame_tcb_queue_gë_èûî
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
, 
tw_video_mv_‰ame_tcb_t
 **
±r_video_mv_‰ame_tcb
)

1461 if((
video_mv_‰ame_tcb_queue
!=
NULL
Ë&& (
±r_video_mv_‰ame_tcb
!=NULL)){

1462 
tcb_node_queue_t
 *
queue
;

1463 *
±r_video_mv_‰ame_tcb
 = 
NULL
;

1464 
queue
 = &
video_mv_‰ame_tcb_queue
->
queue_node
;

1465 if(
queue
->
›
 !
NULL
){

1466 
tcb_node_t
 *
ãmp_node
;

1467 
queue
->
›
->
	`gë_èûî
(queue, &
ãmp_node
);

1468 if(
ãmp_node
 !
NULL
){

1469 *
±r_video_mv_‰ame_tcb
 = 
	`to_gë_tw_video_mv_‰ame_tcb
(
ãmp_node
);

1473 
	}
}

1475 
	$tw_video_mv_‰ame_tcb_queue_åy_gë_èûî
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
, 
tw_video_mv_‰ame_tcb_t
 **
±r_video_mv_‰ame_tcb
)

1477 if((
video_mv_‰ame_tcb_queue
!=
NULL
Ë&& (
±r_video_mv_‰ame_tcb
!=NULL)){

1478 
tcb_node_queue_t
 *
queue
;

1479 *
±r_video_mv_‰ame_tcb
 = 
NULL
;

1480 
queue
 = &
video_mv_‰ame_tcb_queue
->
queue_node
;

1481 if(
queue
->
›
 !
NULL
){

1482 
tcb_node_t
 *
ãmp_node
;

1483 
queue
->
›
->
	`åy_gë_èûî
(queue, &
ãmp_node
);

1484 if(
ãmp_node
 !
NULL
){

1485 *
±r_video_mv_‰ame_tcb
 = 
	`to_gë_tw_video_mv_‰ame_tcb
(
ãmp_node
);

1489 
	}
}

1491 
	$tw_video_mv_‰ame_tcb_queue_put
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
, 
tw_video_mv_‰ame_tcb_t
 *
video_mv_‰ame_tcb
)

1493 if((
video_mv_‰ame_tcb_queue
!=
NULL
Ë&& (
video_mv_‰ame_tcb
!=NULL)){

1494 
tcb_node_queue_t
 *
queue
;

1495 
queue
 = &
video_mv_‰ame_tcb_queue
->
queue_node
;

1496 if(
queue
->
›
 !
NULL
){

1497 
queue
->
›
->
	`put
(queue, &
video_mv_‰ame_tcb
->
mv_‰ame_node
);

1500 
	}
}

1502 
	$tw_video_mv_‰ame_tcb_queue_put_hódî
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
, 
tw_video_mv_‰ame_tcb_t
 *
video_mv_‰ame_tcb
)

1504 if((
video_mv_‰ame_tcb_queue
!=
NULL
Ë&& (
video_mv_‰ame_tcb
!=NULL)){

1505 
tcb_node_queue_t
 *
queue
;

1506 
queue
 = &
video_mv_‰ame_tcb_queue
->
queue_node
;

1507 if(
queue
->
›
 !
NULL
){

1508 
queue
->
›
->
	`put_hódî
(queue, &
video_mv_‰ame_tcb
->
mv_‰ame_node
);

1511 
	}
}

1513 
	$tw_video_mv_‰ame_tcb_queue_gë_cuº_¥odu˚r_‰om_poﬁ
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

1515 if((
video_mv_‰ame_tcb_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

1516 
Êags
;

1517 
	`•ö_lock_úqßve
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1518 if(
video_mv_‰ame_tcb_queue
->
cuº_¥odu˚r
 =
NULL
){

1519 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1520 if(
video_ch™_buf_poﬁ
->
›
 !
NULL
){

1521 
video_ch™_buf_poﬁ
->
›
->
	`gë_video_mv_‰ame_tcb
(video_ch™_buf_poﬁ, &
video_mv_‰ame_tcb_queue
->
cuº_¥odu˚r
);

1523 
	`•ö_lock_úqßve
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1525 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1527 
	}
}

1529 
	$tw_video_mv_‰ame_tcb_queue_åy_gë_cuº_¥odu˚r_‰om_poﬁ
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

1531 if((
video_mv_‰ame_tcb_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

1532 
Êags
;

1533 
	`•ö_lock_úqßve
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1534 if(
video_mv_‰ame_tcb_queue
->
cuº_¥odu˚r
 =
NULL
){

1535 if(
video_ch™_buf_poﬁ
->
›
 !
NULL
){

1536 
video_ch™_buf_poﬁ
->
›
->
	`åy_gë_video_mv_‰ame_tcb
(video_ch™_buf_poﬁ, &
video_mv_‰ame_tcb_queue
->
cuº_¥odu˚r
);

1539 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1541 
	}
}

1543 
	$tw_video_mv_‰ame_tcb_queue_put_cuº_¥odu˚r_öto_queue
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
)

1545 if(
video_mv_‰ame_tcb_queue
 !
NULL
){

1546 
Êags
;

1547 
	`•ö_lock_úqßve
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1548 if(
video_mv_‰ame_tcb_queue
->
cuº_¥odu˚r
 !
NULL
){

1549 if(
video_mv_‰ame_tcb_queue
->
›
 !
NULL
){

1550 
video_mv_‰ame_tcb_queue
->
›
->
	`put
(video_mv_‰ame_tcb_queue, video_mv_‰ame_tcb_queue->
cuº_¥odu˚r
);

1552 
	`tw_video_mv_‰ame_tcb_queue_put
(
video_mv_‰ame_tcb_queue
, video_mv_‰ame_tcb_queue->
cuº_¥odu˚r
);

1554 
video_mv_‰ame_tcb_queue
->
cuº_¥odu˚r
 = 
NULL
;

1556 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1558 
	}
}

1560 
	$tw_video_mv_‰ame_tcb_queue_ªÀa£_cuº_¥odu˚r
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

1562 if((
video_mv_‰ame_tcb_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

1563 
Êags
;

1564 
	`•ö_lock_úqßve
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1565 if(
video_mv_‰ame_tcb_queue
->
cuº_¥odu˚r
 !
NULL
){

1566 if(
video_mv_‰ame_tcb_queue
->
cuº_¥odu˚r
->
›
 !
NULL
){

1567 
video_mv_‰ame_tcb_queue
->
cuº_¥odu˚r
->
›
->
	`ªÀa£
(&video_mv_‰ame_tcb_queue->cuº_¥odu˚r, 
video_ch™_buf_poﬁ
);

1569 
	`tw_video_mv_‰ame_tcb_ªÀa£
(&
video_mv_‰ame_tcb_queue
->
cuº_¥odu˚r
, 
video_ch™_buf_poﬁ
);

1572 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1574 
	}
}

1576 
	$tw_video_mv_‰ame_tcb_queue_gë_cuº_c⁄sumî_‰om_queue
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
)

1578 if(
video_mv_‰ame_tcb_queue
 !
NULL
){

1579 
Êags
;

1580 
	`•ö_lock_úqßve
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1581 if(
video_mv_‰ame_tcb_queue
->
cuº_c⁄sumî
 =
NULL
){

1582 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1583 if(
video_mv_‰ame_tcb_queue
->
›
 !
NULL
){

1584 
video_mv_‰ame_tcb_queue
->
›
->
	`gë
(video_mv_‰ame_tcb_queue, &video_mv_‰ame_tcb_queue->
cuº_c⁄sumî
);

1586 
	`tw_video_mv_‰ame_tcb_queue_gë
(
video_mv_‰ame_tcb_queue
, &video_mv_‰ame_tcb_queue->
cuº_c⁄sumî
);

1588 
	`•ö_lock_úqßve
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1590 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1592 
	}
}

1594 
	$tw_video_mv_‰ame_tcb_queue_åy_gë_cuº_c⁄sumî_‰om_queue
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
)

1596 if(
video_mv_‰ame_tcb_queue
 !
NULL
){

1597 
Êags
;

1598 
	`•ö_lock_úqßve
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1599 if(
video_mv_‰ame_tcb_queue
->
cuº_c⁄sumî
 =
NULL
){

1600 if(
video_mv_‰ame_tcb_queue
->
›
 !
NULL
){

1601 
video_mv_‰ame_tcb_queue
->
›
->
	`åy_gë
(video_mv_‰ame_tcb_queue, &video_mv_‰ame_tcb_queue->
cuº_c⁄sumî
);

1603 
	`tw_video_mv_‰ame_tcb_queue_åy_gë
(
video_mv_‰ame_tcb_queue
, &video_mv_‰ame_tcb_queue->
cuº_c⁄sumî
);

1606 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1608 
	}
}

1610 
	$tw_video_mv_‰ame_tcb_queue_ªÀa£_cuº_c⁄sumî
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

1612 if((
video_mv_‰ame_tcb_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

1613 
Êags
;

1614 
	`•ö_lock_úqßve
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1615 if(
video_mv_‰ame_tcb_queue
->
cuº_c⁄sumî
 !
NULL
){

1616 if(
video_mv_‰ame_tcb_queue
->
cuº_c⁄sumî
->
›
 !
NULL
){

1617 
video_mv_‰ame_tcb_queue
->
cuº_c⁄sumî
->
›
->
	`ªÀa£
(&video_mv_‰ame_tcb_queue->cuº_c⁄sumî, 
video_ch™_buf_poﬁ
);

1619 
	`tw_video_mv_‰ame_tcb_ªÀa£
(&
video_mv_‰ame_tcb_queue
->
cuº_c⁄sumî
, 
video_ch™_buf_poﬁ
);

1622 
	`•ö_u∆ock_úqª°‹e
(&
video_mv_‰ame_tcb_queue
->
lock
, 
Êags
);

1624 
	}
}

1626 
	$tw_video_mv_‰ame_tcb_queue_gë_cuº_queue_íåy_numbî
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
)

1628 
íåy_numbî
 = 0;

1629 if(
video_mv_‰ame_tcb_queue
!=
NULL
){

1630 
tcb_node_queue_t
 *
queue
;

1631 
queue
 = &
video_mv_‰ame_tcb_queue
->
queue_node
;

1632 if(
queue
->
›
 !
NULL
){

1633 
íåy_numbî
 = 
queue
->
›
->
	`gë_queue_cuº_íåy_numbî
(queue);

1636  
íåy_numbî
;

1637 
	}
}

1639 
	$tw_video_mv_‰ame_tcb_queue_ªÀa£
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

1641 if((
video_mv_‰ame_tcb_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

1642 
	`ªmove_tw_video_mv_‰ame_tcb_queue
(
video_mv_‰ame_tcb_queue
, 
video_ch™_buf_poﬁ
);

1644 
	}
}

1646 
	$tw_video_mv_‰ame_tcb_queue_öô
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
)

1648 if(
video_mv_‰ame_tcb_queue
 !
NULL
){

1649 
tcb_node_queue_t
 *
queue
;

1650 
queue
 = &
video_mv_‰ame_tcb_queue
->
queue_node
;

1651 
queue
->
›
 = &
tcb_node_queue_›
;

1652 
queue
->
›
->
	`öô
(queue);

1653 
video_mv_‰ame_tcb_queue
->
cuº_c⁄sumî
 = 
NULL
;

1654 
video_mv_‰ame_tcb_queue
->
cuº_¥odu˚r
 = 
NULL
;

1655 
video_mv_‰ame_tcb_queue
->
°¨t_time°amp
 = 0;

1656 
video_mv_‰ame_tcb_queue
->
tŸÆ_duøti⁄
 = 0;

1657 
	`•ö_lock_öô
(&
video_mv_‰ame_tcb_queue
->
lock
);

1659 
	}
}

1661 
tw_video_mv_‰ame_tcb_queue_›î©i⁄
 
	gtw_video_mv_‰ame_tcb_queue_›
 = {

1662 .
gë
 = 
tw_video_mv_‰ame_tcb_queue_gë
,

1663 .
	gåy_gë
 = 
tw_video_mv_‰ame_tcb_queue_åy_gë
,

1664 .
	ggë_èûî
 = 
tw_video_mv_‰ame_tcb_queue_gë_èûî
,

1665 .
	gåy_gë_èûî
 = 
tw_video_mv_‰ame_tcb_queue_åy_gë_èûî
,

1666 .
	gput
 = 
tw_video_mv_‰ame_tcb_queue_put
,

1667 .
	gput_hódî
 = 
tw_video_mv_‰ame_tcb_queue_put_hódî
,

1669 .
	ggë_cuº_¥odu˚r_‰om_poﬁ
 = 
tw_video_mv_‰ame_tcb_queue_gë_cuº_¥odu˚r_‰om_poﬁ
,

1670 .
	gåy_gë_cuº_¥odu˚r_‰om_poﬁ
 = 
tw_video_mv_‰ame_tcb_queue_åy_gë_cuº_¥odu˚r_‰om_poﬁ
,

1671 .
	gput_cuº_¥odu˚r_öto_queue
 = 
tw_video_mv_‰ame_tcb_queue_put_cuº_¥odu˚r_öto_queue
,

1672 .
	gªÀa£_cuº_¥odu˚r
 = 
tw_video_mv_‰ame_tcb_queue_ªÀa£_cuº_¥odu˚r
,

1673 .
	ggë_cuº_c⁄sumî_‰om_queue
 = 
tw_video_mv_‰ame_tcb_queue_gë_cuº_c⁄sumî_‰om_queue
,

1674 .
	gåy_gë_cuº_c⁄sumî_‰om_queue
 = 
tw_video_mv_‰ame_tcb_queue_åy_gë_cuº_c⁄sumî_‰om_queue
,

1675 .
	gªÀa£_cuº_c⁄sumî
 = 
tw_video_mv_‰ame_tcb_queue_ªÀa£_cuº_c⁄sumî
,

1677 .
	ggë_cuº_queue_íåy_numbî
 = 
tw_video_mv_‰ame_tcb_queue_gë_cuº_queue_íåy_numbî
,

1678 .
	gªÀa£
 = 
tw_video_mv_‰ame_tcb_queue_ªÀa£
,

1679 .
	göô
 = 
tw_video_mv_‰ame_tcb_queue_öô
,

1682 
	$öô_tw_video_mv_‰ame_tcb_queue
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
)

1684 if(
video_mv_‰ame_tcb_queue
 !
NULL
){

1685 
video_mv_‰ame_tcb_queue
->
›
 = &
tw_video_mv_‰ame_tcb_queue_›
;

1686 
video_mv_‰ame_tcb_queue
->
›
->
	`öô
(video_mv_frame_tcb_queue);

1688 
	}
}

1690 
	$ªmove_tw_video_mv_‰ame_tcb_queue
(
tw_video_mv_‰ame_tcb_queue_t
 *
video_mv_‰ame_tcb_queue
, 
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

1692 if((
video_mv_‰ame_tcb_queue
!=
NULL
Ë&& (
video_ch™_buf_poﬁ
!=NULL)){

1693 if(
video_mv_‰ame_tcb_queue
->
›
 !
NULL
){

1694 
video_mv_‰ame_tcb_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(video_mv_frame_tcb_queue);

1695 
video_mv_‰ame_tcb_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(video_mv_‰ame_tcb_queue, 
video_ch™_buf_poﬁ
);

1696 
video_mv_‰ame_tcb_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(video_mv_frame_tcb_queue)){

1697 
video_mv_‰ame_tcb_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(video_mv_frame_tcb_queue);

1698 if(
video_mv_‰ame_tcb_queue
->
cuº_c⁄sumî
 =
NULL
){

1701 
video_mv_‰ame_tcb_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(video_mv_‰ame_tcb_queue, 
video_ch™_buf_poﬁ
);

1704 
	`tw_video_mv_‰ame_tcb_queue_put_cuº_¥odu˚r_öto_queue
(
video_mv_‰ame_tcb_queue
);

1705 
	`tw_video_mv_‰ame_tcb_queue_ªÀa£_cuº_c⁄sumî
(
video_mv_‰ame_tcb_queue
, 
video_ch™_buf_poﬁ
);

1706 
	`tw_video_mv_‰ame_tcb_queue_gë_cuº_queue_íåy_numbî
(
video_mv_‰ame_tcb_queue
)){

1707 
	`tw_video_mv_‰ame_tcb_queue_gë_cuº_c⁄sumî_‰om_queue
(
video_mv_‰ame_tcb_queue
);

1708 if(
video_mv_‰ame_tcb_queue
->
cuº_c⁄sumî
 =
NULL
){

1711 
	`tw_video_mv_‰ame_tcb_queue_ªÀa£_cuº_c⁄sumî
(
video_mv_‰ame_tcb_queue
, 
video_ch™_buf_poﬁ
);

1714 
	`¥ötk
("mv_∑ckë_poﬁ_tcb = %d\n", 
video_ch™_buf_poﬁ
->
mv_∑ckë_poﬁ_tcb
.
›
->
	`gë_cuº_poﬁ_íåy_numbî
(&video_chan_buf_pool->mv_packet_pool_tcb));

1715 
	`¥ötk
("mv_‰ame_poﬁ_tcb = %d\n", 
video_ch™_buf_poﬁ
->
mv_‰ame_poﬁ_tcb
.
›
->
	`gë_cuº_poﬁ_íåy_numbî
(&video_chan_buf_pool->mv_frame_pool_tcb));

1717 
	}
}

1720 
	$tw_video_ch™_buf_poﬁ_¸óã
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
buf_Àn
)

1722 
ªt
 = 
TW_ERR
;

1724 if(
video_ch™_buf_poﬁ
 !
NULL
){

1725 
tcb_node_poﬁ_t
 *
node_poﬁ
;

1726 
tw_video_∑ckë_tcb_t
 *
±r_video_∑ckë_tcb
;

1727 
tw_video_‰ame_tcb_t
 *
±r_video_‰ame_tcb
;

1728 #ifde‡ 
MV_MODULE


1729 
tw_video_mv_∑ckë_tcb_t
 *
±r_mv_∑ckë_tcb
;

1730 
tw_video_mv_‰ame_tcb_t
 *
±r_mv_‰ame_tcb
;

1732 
i
;

1734 
video_ch™_buf_poﬁ
->
ˇche_‹dî
 = 
	`gë_‹dî
(
buf_Àn
);

1735 
video_ch™_buf_poﬁ
->
ˇche_buf„r
 = (
u8
*)
	`__gë_‰ì_∑ges
(
GFP_KERNEL
, video_ch™_buf_poﬁ->
ˇche_‹dî
);

1736 if(
video_ch™_buf_poﬁ
->
ˇche_buf„r
 =
NULL
) {

1737 
video_ch™_buf_poﬁ
->
ˇche_‹dî
 = 0;

1738 
	`¥ötk
("ˇn'àÆlo¯%dÖage†f‹ videÿbu‡poﬁ\n", 
video_ch™_buf_poﬁ
->
ˇche_‹dî
);

1739  -
ENOMEM
;

1742 
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_numbî
 = 1;

1743 
i
=0; i<
video_ch™_buf_poﬁ
->
ˇche_‹dî
; i++){

1744 
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_numbî
 <<= 1;

1746 
video_ch™_buf_poﬁ
->
video_∑ckë_buf„r_size
 = 
PAGE_SIZE
;

1747 
node_poﬁ
 = &
video_ch™_buf_poﬁ
->
video_∑ckë_poﬁ_tcb
;

1748 
node_poﬁ
->
›
 = &
tcb_node_poﬁ_›
;

1749 
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_poﬁ
 = (
tw_video_∑ckë_tcb_t
*)
	`kmÆloc
(—w_video_∑ckë_tcb_t)*video_ch™_buf_poﬁ->
video_∑ckë_íåy_numbî
, 
GFP_KERNEL
);

1750 if(
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_poﬁ
 =
NULL
){

1751 
	`‰ì_∑ges
(()
video_ch™_buf_poﬁ
->
ˇche_buf„r
, video_ch™_buf_poﬁ->
ˇche_‹dî
);

1752 
video_ch™_buf_poﬁ
->
ˇche_buf„r
 = 
NULL
;

1753 
video_ch™_buf_poﬁ
->
ˇche_‹dî
 = 0;

1754 
	`¥ötk
("can'tálloc videoÖacketÅcb\n");

1755  -
ENOMEM
;

1757 
node_poﬁ
->
›
->
	`öô
“ode_poﬁ, 
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_numbî
);

1758 
i
=0; i<
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_numbî
; i++){

1759 
±r_video_∑ckë_tcb
 = &
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_poﬁ
[
i
];

1760 
±r_video_∑ckë_tcb
->
›
 = &
tw_video_∑ckë_tcb_›
;

1761 
±r_video_∑ckë_tcb
->
›
->
	`öô
’å_video_∑ckë_tcb, 
video_ch™_buf_poﬁ
, 
i
);

1762 
±r_video_∑ckë_tcb
->
›
->
	`ªÀa£
(&±r_video_∑ckë_tcb, 
video_ch™_buf_poﬁ
);

1765 
video_ch™_buf_poﬁ
->
video_‰ame_íåy_numbî
 = video_ch™_buf_poﬁ->
video_∑ckë_íåy_numbî
;

1766 
node_poﬁ
 = &
video_ch™_buf_poﬁ
->
video_‰ame_poﬁ_tcb
;

1767 
node_poﬁ
->
›
 = &
tcb_node_poﬁ_›
;

1768 
video_ch™_buf_poﬁ
->
video_‰ame_íåy_poﬁ
 = (
tw_video_‰ame_tcb_t
*)
	`kmÆloc
(—w_video_‰ame_tcb_t)*video_ch™_buf_poﬁ->
video_‰ame_íåy_numbî
, 
GFP_KERNEL
);

1769 if(
video_ch™_buf_poﬁ
->
video_‰ame_íåy_poﬁ
 =
NULL
){

1770 
node_poﬁ
 = &
video_ch™_buf_poﬁ
->
video_∑ckë_poﬁ_tcb
;

1771 
node_poﬁ
->
›
->
	`ªÀa£
(node_pool);

1772 
	`k‰ì
(
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_poﬁ
);

1773 
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_poﬁ
 = 
NULL
;

1774 
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_numbî
 = 0;

1775 
	`‰ì_∑ges
(()
video_ch™_buf_poﬁ
->
ˇche_buf„r
, video_ch™_buf_poﬁ->
ˇche_‹dî
);

1776 
video_ch™_buf_poﬁ
->
ˇche_buf„r
 = 
NULL
;

1777 
video_ch™_buf_poﬁ
->
ˇche_‹dî
 = 0;

1778 
	`¥ötk
("can'tálloc video frameÅcb\n");

1779  -
ENOMEM
;

1781 
node_poﬁ
->
›
->
	`öô
“ode_poﬁ, 
video_ch™_buf_poﬁ
->
video_‰ame_íåy_numbî
);

1782 
i
=0; i<
video_ch™_buf_poﬁ
->
video_‰ame_íåy_numbî
; i++){

1783 
±r_video_‰ame_tcb
 = &
video_ch™_buf_poﬁ
->
video_‰ame_íåy_poﬁ
[
i
];

1784 
±r_video_‰ame_tcb
->
›
 = &
tw_video_‰ame_tcb_›
;

1785 
±r_video_‰ame_tcb
->
video_ch™_buf_poﬁ
 = video_chan_buf_pool;

1786 
±r_video_‰ame_tcb
->
›
->
	`öô
(ptr_video_frame_tcb);

1787 
±r_video_‰ame_tcb
->
›
->
	`ªÀa£
(&±r_video_‰ame_tcb, 
video_ch™_buf_poﬁ
);

1790 #ifde‡ 
MV_MODULE


1791 
video_ch™_buf_poﬁ
->
mv_ˇche_‹dî
 = video_ch™_buf_poﬁ->
ˇche_‹dî
;

1792 
video_ch™_buf_poﬁ
->
mv_ˇche_buf„r
 = (
u8
*)
	`__gë_‰ì_∑ges
(
GFP_KERNEL
, video_ch™_buf_poﬁ->
mv_ˇche_‹dî
);

1793 if(
video_ch™_buf_poﬁ
->
mv_ˇche_buf„r
 =
NULL
){

1794 
node_poﬁ
 = &
video_ch™_buf_poﬁ
->
video_‰ame_poﬁ_tcb
;

1795 
node_poﬁ
->
›
->
	`ªÀa£
(node_pool);

1796 
	`k‰ì
(
video_ch™_buf_poﬁ
->
video_‰ame_íåy_poﬁ
);

1797 
video_ch™_buf_poﬁ
->
video_‰ame_íåy_poﬁ
 = 
NULL
;

1798 
video_ch™_buf_poﬁ
->
video_‰ame_íåy_numbî
 = 0;

1799 
node_poﬁ
 = &
video_ch™_buf_poﬁ
->
video_∑ckë_poﬁ_tcb
;

1800 
node_poﬁ
->
›
->
	`ªÀa£
(node_pool);

1801 
	`k‰ì
(
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_poﬁ
);

1802 
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_poﬁ
 = 
NULL
;

1803 
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_numbî
 = 0;

1804 
	`‰ì_∑ges
(()
video_ch™_buf_poﬁ
->
ˇche_buf„r
, video_ch™_buf_poﬁ->
ˇche_‹dî
);

1805 
video_ch™_buf_poﬁ
->
ˇche_buf„r
 = 
NULL
;

1806 
video_ch™_buf_poﬁ
->
ˇche_‹dî
 = 0;

1807 
	`¥ötk
("can'tállocÖage for mv\n");

1808  -
ENOMEM
;

1811 
video_ch™_buf_poﬁ
->
mv_∑ckë_íåy_numbî
 = 1;

1812 
i
=0; i<
video_ch™_buf_poﬁ
->
mv_ˇche_‹dî
; i++){

1813 
video_ch™_buf_poﬁ
->
mv_∑ckë_íåy_numbî
 <<= 1;

1815 
video_ch™_buf_poﬁ
->
mv_∑ckë_buf„r_size
 = 
PAGE_SIZE
;

1816 
node_poﬁ
 = &
video_ch™_buf_poﬁ
->
mv_∑ckë_poﬁ_tcb
;

1817 
node_poﬁ
->
›
 = &
tcb_node_poﬁ_›
;

1818 
video_ch™_buf_poﬁ
->
mv_∑ckë_íåy_poﬁ
 = (
tw_video_mv_∑ckë_tcb_t
*)
	`kmÆloc
(—w_video_mv_∑ckë_tcb_t)*video_ch™_buf_poﬁ->
mv_∑ckë_íåy_numbî
, 
GFP_KERNEL
);

1819 if(
video_ch™_buf_poﬁ
->
mv_∑ckë_íåy_poﬁ
 =
NULL
){

1820 
node_poﬁ
 = &
video_ch™_buf_poﬁ
->
video_‰ame_poﬁ_tcb
;

1821 
node_poﬁ
->
›
->
	`ªÀa£
(node_pool);

1822 
	`k‰ì
(
video_ch™_buf_poﬁ
->
video_‰ame_íåy_poﬁ
);

1823 
video_ch™_buf_poﬁ
->
video_‰ame_íåy_poﬁ
 = 
NULL
;

1824 
video_ch™_buf_poﬁ
->
video_‰ame_íåy_numbî
 = 0;

1825 
node_poﬁ
 = &
video_ch™_buf_poﬁ
->
video_∑ckë_poﬁ_tcb
;

1826 
node_poﬁ
->
›
->
	`ªÀa£
(node_pool);

1827 
	`k‰ì
(
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_poﬁ
);

1828 
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_poﬁ
 = 
NULL
;

1829 
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_numbî
 = 0;

1830 
	`‰ì_∑ges
(()
video_ch™_buf_poﬁ
->
ˇche_buf„r
, video_ch™_buf_poﬁ->
ˇche_‹dî
);

1831 
video_ch™_buf_poﬁ
->
ˇche_buf„r
 = 
NULL
;

1832 
video_ch™_buf_poﬁ
->
ˇche_‹dî
 = 0;

1833 
	`‰ì_∑ges
(()
video_ch™_buf_poﬁ
->
mv_ˇche_buf„r
, video_ch™_buf_poﬁ->
mv_ˇche_‹dî
);

1834 
video_ch™_buf_poﬁ
->
mv_ˇche_buf„r
 = 
NULL
;

1835 
video_ch™_buf_poﬁ
->
mv_ˇche_‹dî
 = 0;

1836 
	`¥ötk
("can'tálloc mvÖacketÅcb\n");

1837  -
ENOMEM
;

1839 
node_poﬁ
->
›
->
	`öô
“ode_poﬁ, 
video_ch™_buf_poﬁ
->
mv_∑ckë_íåy_numbî
);

1840 
i
=0; i<
video_ch™_buf_poﬁ
->
mv_∑ckë_íåy_numbî
; i++){

1841 
±r_mv_∑ckë_tcb
 = &
video_ch™_buf_poﬁ
->
mv_∑ckë_íåy_poﬁ
[
i
];

1842 
±r_mv_∑ckë_tcb
->
›
 = &
tw_video_mv_∑ckë_tcb_›
;

1843 
±r_mv_∑ckë_tcb
->
›
->
	`öô
’å_mv_∑ckë_tcb, 
video_ch™_buf_poﬁ
, 
i
);

1844 
±r_mv_∑ckë_tcb
->
›
->
	`ªÀa£
(&±r_mv_∑ckë_tcb, 
video_ch™_buf_poﬁ
);

1847 
video_ch™_buf_poﬁ
->
mv_‰ame_íåy_numbî
 = video_ch™_buf_poﬁ->
mv_∑ckë_íåy_numbî
;

1848 
node_poﬁ
 = &
video_ch™_buf_poﬁ
->
mv_‰ame_poﬁ_tcb
;

1849 
node_poﬁ
->
›
 = &
tcb_node_poﬁ_›
;

1850 
video_ch™_buf_poﬁ
->
mv_‰ame_íåy_poﬁ
 = (
tw_video_mv_‰ame_tcb_t
*)
	`kmÆloc
(—w_video_mv_‰ame_tcb_t)*video_ch™_buf_poﬁ->
mv_‰ame_íåy_numbî
, 
GFP_KERNEL
);

1851 if(
video_ch™_buf_poﬁ
->
mv_‰ame_íåy_poﬁ
 =
NULL
){

1852 
node_poﬁ
 = &
video_ch™_buf_poﬁ
->
video_‰ame_poﬁ_tcb
;

1853 
node_poﬁ
->
›
->
	`ªÀa£
(node_pool);

1854 
	`k‰ì
(
video_ch™_buf_poﬁ
->
video_‰ame_íåy_poﬁ
);

1855 
video_ch™_buf_poﬁ
->
video_‰ame_íåy_poﬁ
 = 
NULL
;

1856 
video_ch™_buf_poﬁ
->
video_‰ame_íåy_numbî
 = 0;

1857 
node_poﬁ
 = &
video_ch™_buf_poﬁ
->
video_∑ckë_poﬁ_tcb
;

1858 
node_poﬁ
->
›
->
	`ªÀa£
(node_pool);

1859 
	`k‰ì
(
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_poﬁ
);

1860 
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_poﬁ
 = 
NULL
;

1861 
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_numbî
 = 0;

1862 
	`‰ì_∑ges
(()
video_ch™_buf_poﬁ
->
ˇche_buf„r
, video_ch™_buf_poﬁ->
ˇche_‹dî
);

1863 
video_ch™_buf_poﬁ
->
ˇche_buf„r
 = 
NULL
;

1864 
video_ch™_buf_poﬁ
->
ˇche_‹dî
 = 0;

1865 
node_poﬁ
 = &
video_ch™_buf_poﬁ
->
mv_∑ckë_poﬁ_tcb
;

1866 
node_poﬁ
->
›
->
	`ªÀa£
(node_pool);

1867 
	`k‰ì
(
video_ch™_buf_poﬁ
->
mv_∑ckë_íåy_poﬁ
);

1868 
video_ch™_buf_poﬁ
->
mv_∑ckë_íåy_poﬁ
 = 
NULL
;

1869 
video_ch™_buf_poﬁ
->
mv_∑ckë_íåy_numbî
 = 0;

1870 
	`‰ì_∑ges
(()
video_ch™_buf_poﬁ
->
mv_ˇche_buf„r
, video_ch™_buf_poﬁ->
mv_ˇche_‹dî
);

1871 
video_ch™_buf_poﬁ
->
mv_ˇche_buf„r
 = 
NULL
;

1872 
video_ch™_buf_poﬁ
->
mv_ˇche_‹dî
 = 0;

1873 
	`¥ötk
("can'tálloc mv frameÅcb\n");

1874  -
ENOMEM
;

1876 
node_poﬁ
->
›
->
	`öô
“ode_poﬁ, 
video_ch™_buf_poﬁ
->
mv_‰ame_íåy_numbî
);

1877 
i
=0; i<
video_ch™_buf_poﬁ
->
mv_‰ame_íåy_numbî
; i++){

1878 
±r_mv_‰ame_tcb
 = &
video_ch™_buf_poﬁ
->
mv_‰ame_íåy_poﬁ
[
i
];

1879 
±r_mv_‰ame_tcb
->
›
 = &
tw_video_mv_‰ame_tcb_›
;

1880 
±r_mv_‰ame_tcb
->
video_ch™_buf_poﬁ
 = video_chan_buf_pool;

1881 
±r_mv_‰ame_tcb
->
›
->
	`öô
(ptr_mv_frame_tcb);

1882 
±r_mv_‰ame_tcb
->
›
->
	`ªÀa£
(&±r_mv_‰ame_tcb, 
video_ch™_buf_poﬁ
);

1885 
ªt
 = 
TW_OK
;

1887  
ªt
;

1888 
	}
}

1890 
	$tw_video_ch™_buf_poﬁ_ªÀa£
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

1892 if(
video_ch™_buf_poﬁ
 !
NULL
){

1893 
tcb_node_poﬁ_t
 *
node_poﬁ
;

1895 
node_poﬁ
 = &
video_ch™_buf_poﬁ
->
video_‰ame_poﬁ_tcb
;

1896 if(
node_poﬁ
->
›
 !
NULL
){

1897 
node_poﬁ
->
›
->
	`ªÀa£
(node_pool);

1899 if(
video_ch™_buf_poﬁ
->
video_‰ame_íåy_poﬁ
 !
NULL
){

1900 
	`k‰ì
(
video_ch™_buf_poﬁ
->
video_‰ame_íåy_poﬁ
);

1901 
video_ch™_buf_poﬁ
->
video_‰ame_íåy_poﬁ
 = 
NULL
;

1903 
video_ch™_buf_poﬁ
->
video_‰ame_íåy_numbî
 = 0;

1905 
node_poﬁ
 = &
video_ch™_buf_poﬁ
->
video_∑ckë_poﬁ_tcb
;

1906 if(
node_poﬁ
->
›
 !
NULL
){

1907 
node_poﬁ
->
›
->
	`ªÀa£
(node_pool);

1909 if(
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_poﬁ
 !
NULL
){

1910 
	`k‰ì
(
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_poﬁ
);

1911 
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_poﬁ
 = 
NULL
;

1913 
video_ch™_buf_poﬁ
->
video_∑ckë_íåy_numbî
 = 0;

1915 if(
video_ch™_buf_poﬁ
->
ˇche_buf„r
 !
NULL
){

1916 
	`‰ì_∑ges
(()
video_ch™_buf_poﬁ
->
ˇche_buf„r
, video_ch™_buf_poﬁ->
ˇche_‹dî
);

1917 
video_ch™_buf_poﬁ
->
ˇche_buf„r
 = 
NULL
;

1919 
video_ch™_buf_poﬁ
->
ˇche_‹dî
 = 0;

1921 #ifde‡ 
MV_MODULE


1922 
node_poﬁ
 = &
video_ch™_buf_poﬁ
->
mv_‰ame_poﬁ_tcb
;

1923 if(
node_poﬁ
->
›
 !
NULL
){

1924 
node_poﬁ
->
›
->
	`ªÀa£
(node_pool);

1926 if(
video_ch™_buf_poﬁ
->
mv_‰ame_íåy_poﬁ
 !
NULL
){

1927 
	`k‰ì
(
video_ch™_buf_poﬁ
->
mv_‰ame_íåy_poﬁ
);

1928 
video_ch™_buf_poﬁ
->
mv_‰ame_íåy_poﬁ
 = 
NULL
;

1930 
video_ch™_buf_poﬁ
->
mv_‰ame_íåy_numbî
 = 0;

1932 
node_poﬁ
 = &
video_ch™_buf_poﬁ
->
mv_∑ckë_poﬁ_tcb
;

1933 if(
node_poﬁ
->
›
 !
NULL
){

1934 
node_poﬁ
->
›
->
	`ªÀa£
(node_pool);

1936 if(
video_ch™_buf_poﬁ
->
mv_∑ckë_íåy_poﬁ
 !
NULL
){

1937 
	`k‰ì
(
video_ch™_buf_poﬁ
->
mv_∑ckë_íåy_poﬁ
);

1938 
video_ch™_buf_poﬁ
->
mv_∑ckë_íåy_poﬁ
 = 
NULL
;

1940 
video_ch™_buf_poﬁ
->
mv_∑ckë_íåy_numbî
 = 0;

1942 if(
video_ch™_buf_poﬁ
->
mv_ˇche_buf„r
 !
NULL
){

1943 
	`‰ì_∑ges
(()
video_ch™_buf_poﬁ
->
mv_ˇche_buf„r
, video_ch™_buf_poﬁ->
mv_ˇche_‹dî
);

1944 
video_ch™_buf_poﬁ
->
mv_ˇche_buf„r
 = 
NULL
;

1946 
video_ch™_buf_poﬁ
->
mv_ˇche_‹dî
 = 0;

1949 
	}
}

1951 
	$tw_video_ch™_buf_poﬁ_gë_video_∑ckë_tcb
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_∑ckë_tcb_t
 **
∑ckë
)

1953 if((
video_ch™_buf_poﬁ
!=
NULL
Ë&& (
∑ckë
!=NULL)){

1954 
tcb_node_poﬁ_t
 *
video_∑ckë_poﬁ_tcb
 = &
video_ch™_buf_poﬁ
->video_packet_pool_tcb;

1955 *
∑ckë
 = 
NULL
;

1956 if(
video_∑ckë_poﬁ_tcb
->
›
 !
NULL
){

1957 
tcb_node_t
 *
ãmp_node
;

1958 
video_∑ckë_poﬁ_tcb
->
›
->
	`gë
(video_∑ckë_poﬁ_tcb, &
ãmp_node
);

1959 if(
ãmp_node
 !
NULL
){

1960 *
∑ckë
 = 
	`to_video_∑ckë_buf_tcb
(
ãmp_node
);

1961 
	`©omic_öc
(&((*
∑ckë
)->
ªf_cou¡
));

1965 
	}
}

1967 
	$tw_video_ch™_buf_poﬁ_åy_gë_video_∑ckë_tcb
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_∑ckë_tcb_t
 **
∑ckë
)

1969 if((
video_ch™_buf_poﬁ
!=
NULL
Ë&& (
∑ckë
!=NULL)){

1970 
tcb_node_poﬁ_t
 *
video_∑ckë_poﬁ_tcb
 = &
video_ch™_buf_poﬁ
->video_packet_pool_tcb;

1971 *
∑ckë
 = 
NULL
;

1972 if(
video_∑ckë_poﬁ_tcb
->
›
 !
NULL
){

1973 
tcb_node_t
 *
ãmp_node
;

1974 
video_∑ckë_poﬁ_tcb
->
›
->
	`åy_gë
(video_∑ckë_poﬁ_tcb, &
ãmp_node
);

1975 if(
ãmp_node
 !
NULL
){

1976 *
∑ckë
 = 
	`to_video_∑ckë_buf_tcb
(
ãmp_node
);

1977 
	`©omic_öc
(&((*
∑ckë
)->
ªf_cou¡
));

1981 
	}
}

1983 
	$tw_video_ch™_buf_poﬁ_put_video_∑ckë_tcb
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_∑ckë_tcb_t
 *
∑ckë
)

1985 if((
video_ch™_buf_poﬁ
!=
NULL
Ë&& (
∑ckë
!=NULL)){

1986 
tcb_node_poﬁ_t
 *
video_∑ckë_poﬁ_tcb
 = &
video_ch™_buf_poﬁ
->video_packet_pool_tcb;

1987 if(
video_∑ckë_poﬁ_tcb
->
›
 !
NULL
){

1988 
video_∑ckë_poﬁ_tcb
->
›
->
	`put
(video_∑ckë_poﬁ_tcb, &
∑ckë
->
∑ckë_node
);

1991 
	}
}

1993 
	$tw_video_ch™_buf_poﬁ_gë_video_∑ckë_tcb_poﬁ_íåy_numbî
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

1995 
íåy_numbî
 = 0;

1996 if(
video_ch™_buf_poﬁ
 !
NULL
){

1997 
tcb_node_poﬁ_t
 *
video_∑ckë_poﬁ_tcb
 = &
video_ch™_buf_poﬁ
->video_packet_pool_tcb;

1998 if(
video_∑ckë_poﬁ_tcb
->
›
 !
NULL
){

1999 
íåy_numbî
 = 
video_∑ckë_poﬁ_tcb
->
›
->
	`gë_cuº_poﬁ_íåy_numbî
(video_packet_pool_tcb);

2002  
íåy_numbî
;

2003 
	}
}

2005 
	$tw_video_ch™_buf_poﬁ_gë_video_‰ame_tcb
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_‰ame_tcb_t
 **
‰ame
)

2007 if((
video_ch™_buf_poﬁ
!=
NULL
Ë&& (
‰ame
!=NULL)){

2008 
tcb_node_poﬁ_t
 *
video_‰ame_poﬁ_tcb
 = &
video_ch™_buf_poﬁ
->video_frame_pool_tcb;

2009 *
‰ame
 = 
NULL
;

2010 if(
video_‰ame_poﬁ_tcb
->
›
 !
NULL
){

2011 
tcb_node_t
 *
ãmp_node
;

2012 
video_‰ame_poﬁ_tcb
->
›
->
	`gë
(video_‰ame_poﬁ_tcb, &
ãmp_node
);

2013 if(
ãmp_node
 !
NULL
){

2014 *
‰ame
 = 
	`to_video_‰ame_tcb
(
ãmp_node
);

2015 
	`©omic_öc
(&((*
‰ame
)->
ªf_cou¡
));

2019 
	}
}

2021 
	$tw_video_ch™_buf_poﬁ_åy_gë_video_‰ame_tcb
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_‰ame_tcb_t
 **
‰ame
)

2023 if((
video_ch™_buf_poﬁ
!=
NULL
Ë&& (
‰ame
!=NULL)){

2024 
tcb_node_poﬁ_t
 *
video_‰ame_poﬁ_tcb
 = &
video_ch™_buf_poﬁ
->video_frame_pool_tcb;

2025 *
‰ame
 = 
NULL
;

2026 if(
video_‰ame_poﬁ_tcb
->
›
 !
NULL
){

2027 
tcb_node_t
 *
ãmp_node
;

2028 
video_‰ame_poﬁ_tcb
->
›
->
	`åy_gë
(video_‰ame_poﬁ_tcb, &
ãmp_node
);

2029 if(
ãmp_node
 !
NULL
){

2030 *
‰ame
 = 
	`to_video_‰ame_tcb
(
ãmp_node
);

2031 
	`©omic_öc
(&((*
‰ame
)->
ªf_cou¡
));

2035 
	}
}

2037 
	$tw_video_ch™_buf_poﬁ_put_video_‰ame_tcb
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_‰ame_tcb_t
 *
‰ame
)

2039 if((
video_ch™_buf_poﬁ
!=
NULL
Ë&& (
‰ame
!=NULL)){

2040 
tcb_node_poﬁ_t
 *
video_‰ame_poﬁ_tcb
 = &
video_ch™_buf_poﬁ
->video_frame_pool_tcb;

2041 if(
video_‰ame_poﬁ_tcb
->
›
 !
NULL
){

2042 
video_‰ame_poﬁ_tcb
->
›
->
	`put
(video_‰ame_poﬁ_tcb, &
‰ame
->
‰ame_node
);

2045 
	}
}

2047 
	$tw_video_ch™_buf_poﬁ_gë_video_‰ame_tcb_poﬁ_íåy_numbî
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

2049 
íåy_numbî
 = 0;

2050 if(
video_ch™_buf_poﬁ
 !
NULL
){

2051 
tcb_node_poﬁ_t
 *
video_‰ame_poﬁ_tcb
 = &
video_ch™_buf_poﬁ
->video_frame_pool_tcb;

2052 if(
video_‰ame_poﬁ_tcb
->
›
 !
NULL
){

2053 
íåy_numbî
 = 
video_‰ame_poﬁ_tcb
->
›
->
	`gë_cuº_poﬁ_íåy_numbî
(video_frame_pool_tcb);

2056  
íåy_numbî
;

2057 
	}
}

2058 #ifde‡ 
MV_MODULE


2059 
	$tw_video_ch™_buf_poﬁ_gë_video_mv_∑ckë_tcb
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_mv_∑ckë_tcb_t
 **
∑ckë
)

2061 if((
video_ch™_buf_poﬁ
!=
NULL
Ë&& (
∑ckë
!=NULL)){

2062 
tcb_node_poﬁ_t
 *
video_mv_∑ckë_poﬁ_tcb
 = &
video_ch™_buf_poﬁ
->
mv_∑ckë_poﬁ_tcb
;

2063 *
∑ckë
 = 
NULL
;

2064 if(
video_mv_∑ckë_poﬁ_tcb
->
›
 !
NULL
){

2065 
tcb_node_t
 *
ãmp_node
;

2066 
video_mv_∑ckë_poﬁ_tcb
->
›
->
	`gë
(video_mv_∑ckë_poﬁ_tcb, &
ãmp_node
);

2067 if(
ãmp_node
 !
NULL
){

2068 *
∑ckë
 = 
	`to_gë_tw_video_mv_∑ckë_tcb
(
ãmp_node
);

2069 
	`©omic_öc
(&((*
∑ckë
)->
ªf_cou¡
));

2073 
	}
}

2075 
	$tw_video_ch™_buf_poﬁ_åy_gë_video_mv_∑ckë_tcb
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_mv_∑ckë_tcb_t
 **
∑ckë
)

2077 if((
video_ch™_buf_poﬁ
!=
NULL
Ë&& (
∑ckë
!=NULL)){

2078 
tcb_node_poﬁ_t
 *
video_mv_∑ckë_poﬁ_tcb
 = &
video_ch™_buf_poﬁ
->
mv_∑ckë_poﬁ_tcb
;

2079 *
∑ckë
 = 
NULL
;

2080 if(
video_mv_∑ckë_poﬁ_tcb
->
›
 !
NULL
){

2081 
tcb_node_t
 *
ãmp_node
;

2082 
video_mv_∑ckë_poﬁ_tcb
->
›
->
	`åy_gë
(video_mv_∑ckë_poﬁ_tcb, &
ãmp_node
);

2083 if(
ãmp_node
 !
NULL
){

2084 *
∑ckë
 = 
	`to_gë_tw_video_mv_∑ckë_tcb
(
ãmp_node
);

2085 
	`©omic_öc
(&((*
∑ckë
)->
ªf_cou¡
));

2089 
	}
}

2091 
	$tw_video_ch™_buf_poﬁ_put_video_mv_∑ckë_tcb
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_mv_∑ckë_tcb_t
 *
∑ckë
)

2093 if((
video_ch™_buf_poﬁ
!=
NULL
Ë&& (
∑ckë
!=NULL)){

2094 
tcb_node_poﬁ_t
 *
video_mv_∑ckë_poﬁ_tcb
 = &
video_ch™_buf_poﬁ
->
mv_∑ckë_poﬁ_tcb
;

2095 if(
video_mv_∑ckë_poﬁ_tcb
->
›
 !
NULL
){

2096 
video_mv_∑ckë_poﬁ_tcb
->
›
->
	`put
(video_mv_∑ckë_poﬁ_tcb, &
∑ckë
->
mv_∑ckë_node
);

2099 
	}
}

2101 
	$tw_video_ch™_buf_poﬁ_gë_video_mv_∑ckë_tcb_poﬁ_íåy_numbî
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

2103 
íåy_numbî
 = 0;

2104 if(
video_ch™_buf_poﬁ
 !
NULL
){

2105 
tcb_node_poﬁ_t
 *
video_mv_∑ckë_poﬁ_tcb
 = &
video_ch™_buf_poﬁ
->
mv_∑ckë_poﬁ_tcb
;

2106 if(
video_mv_∑ckë_poﬁ_tcb
->
›
 !
NULL
){

2107 
íåy_numbî
 = 
video_mv_∑ckë_poﬁ_tcb
->
›
->
	`gë_cuº_poﬁ_íåy_numbî
(video_mv_packet_pool_tcb);

2110  
íåy_numbî
;

2111 
	}
}

2113 
	$tw_video_ch™_buf_poﬁ_gë_video_mv_‰ame_tcb
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_mv_‰ame_tcb_t
 **
‰ame
)

2115 if((
video_ch™_buf_poﬁ
!=
NULL
Ë&& (
‰ame
!=NULL)){

2116 
tcb_node_poﬁ_t
 *
video_mv_‰ame_poﬁ_tcb
 = &
video_ch™_buf_poﬁ
->
mv_‰ame_poﬁ_tcb
;

2117 *
‰ame
 = 
NULL
;

2118 if(
video_mv_‰ame_poﬁ_tcb
->
›
 !
NULL
){

2119 
tcb_node_t
 *
ãmp_node
;

2120 
video_mv_‰ame_poﬁ_tcb
->
›
->
	`gë
(video_mv_‰ame_poﬁ_tcb, &
ãmp_node
);

2121 if(
ãmp_node
 !
NULL
){

2122 *
‰ame
 = 
	`to_gë_tw_video_mv_‰ame_tcb
(
ãmp_node
);

2123 
	`©omic_öc
(&((*
‰ame
)->
ªf_cou¡
));

2127 
	}
}

2129 
	$tw_video_ch™_buf_poﬁ_åy_gë_video_mv_‰ame_tcb
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_mv_‰ame_tcb_t
 **
‰ame
)

2131 if((
video_ch™_buf_poﬁ
!=
NULL
Ë&& (
‰ame
!=NULL)){

2132 
tcb_node_poﬁ_t
 *
video_mv_‰ame_poﬁ_tcb
 = &
video_ch™_buf_poﬁ
->
mv_‰ame_poﬁ_tcb
;

2133 *
‰ame
 = 
NULL
;

2134 if(
video_mv_‰ame_poﬁ_tcb
->
›
 !
NULL
){

2135 
tcb_node_t
 *
ãmp_node
;

2136 
video_mv_‰ame_poﬁ_tcb
->
›
->
	`åy_gë
(video_mv_‰ame_poﬁ_tcb, &
ãmp_node
);

2137 if(
ãmp_node
 !
NULL
){

2138 *
‰ame
 = 
	`to_gë_tw_video_mv_‰ame_tcb
(
ãmp_node
);

2139 
	`©omic_öc
(&((*
‰ame
)->
ªf_cou¡
));

2143 
	}
}

2145 
	$tw_video_ch™_buf_poﬁ_put_video_mv_‰ame_tcb
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
tw_video_mv_‰ame_tcb_t
 *
‰ame
)

2147 if((
video_ch™_buf_poﬁ
!=
NULL
Ë&& (
‰ame
!=NULL)){

2148 
tcb_node_poﬁ_t
 *
video_mv_‰ame_poﬁ_tcb
 = &
video_ch™_buf_poﬁ
->
mv_‰ame_poﬁ_tcb
;

2149 if(
video_mv_‰ame_poﬁ_tcb
->
›
 !
NULL
){

2150 
video_mv_‰ame_poﬁ_tcb
->
›
->
	`put
(video_mv_‰ame_poﬁ_tcb, &
‰ame
->
mv_‰ame_node
);

2153 
	}
}

2155 
	$tw_video_ch™_buf_poﬁ_gë_video_mv_‰ame_tcb_poﬁ_íåy_numbî
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

2157 
íåy_numbî
 = 0;

2158 if(
video_ch™_buf_poﬁ
 !
NULL
){

2159 
tcb_node_poﬁ_t
 *
video_mv_‰ame_poﬁ_tcb
 = &
video_ch™_buf_poﬁ
->
mv_‰ame_poﬁ_tcb
;

2160 if(
video_mv_‰ame_poﬁ_tcb
->
›
 !
NULL
){

2161 
íåy_numbî
 = 
video_mv_‰ame_poﬁ_tcb
->
›
->
	`gë_cuº_poﬁ_íåy_numbî
(video_mv_frame_pool_tcb);

2164  
íåy_numbî
;

2165 
	}
}

2168 
tw_video_ch™_buf_poﬁ_›î©i⁄
 
	gtw_video_ch™_buf_poﬁ_›
 = {

2169 .
¸óã
 = 
tw_video_ch™_buf_poﬁ_¸óã
,

2170 .
	gªÀa£
 = 
tw_video_ch™_buf_poﬁ_ªÀa£
,

2172 .
	ggë_video_∑ckë_tcb
 = 
tw_video_ch™_buf_poﬁ_gë_video_∑ckë_tcb
,

2173 .
	gåy_gë_video_∑ckë_tcb
 = 
tw_video_ch™_buf_poﬁ_åy_gë_video_∑ckë_tcb
,

2174 .
	gput_video_∑ckë_tcb
 = 
tw_video_ch™_buf_poﬁ_put_video_∑ckë_tcb
,

2175 .
	ggë_video_∑ckë_tcb_poﬁ_íåy_numbî
 = 
tw_video_ch™_buf_poﬁ_gë_video_∑ckë_tcb_poﬁ_íåy_numbî
,

2177 .
	ggë_video_‰ame_tcb
 = 
tw_video_ch™_buf_poﬁ_gë_video_‰ame_tcb
,

2178 .
	gåy_gë_video_‰ame_tcb
 = 
tw_video_ch™_buf_poﬁ_åy_gë_video_‰ame_tcb
,

2179 .
	gput_video_‰ame_tcb
 = 
tw_video_ch™_buf_poﬁ_put_video_‰ame_tcb
,

2180 .
	ggë_video_‰ame_tcb_poﬁ_íåy_numbî
 = 
tw_video_ch™_buf_poﬁ_gë_video_‰ame_tcb_poﬁ_íåy_numbî
,

2181 #ifde‡ 
MV_MODULE


2182 .
	ggë_video_mv_∑ckë_tcb
 = 
tw_video_ch™_buf_poﬁ_gë_video_mv_∑ckë_tcb
,

2183 .
	gåy_gë_video_mv_∑ckë_tcb
 = 
tw_video_ch™_buf_poﬁ_åy_gë_video_mv_∑ckë_tcb
,

2184 .
	gput_video_mv_∑ckë_tcb
 = 
tw_video_ch™_buf_poﬁ_put_video_mv_∑ckë_tcb
,

2185 .
	ggë_video_mv_∑ckë_tcb_poﬁ_íåy_numbî
 = 
tw_video_ch™_buf_poﬁ_gë_video_mv_∑ckë_tcb_poﬁ_íåy_numbî
,

2187 .
	ggë_video_mv_‰ame_tcb
 = 
tw_video_ch™_buf_poﬁ_gë_video_mv_‰ame_tcb
,

2188 .
	gåy_gë_video_mv_‰ame_tcb
 = 
tw_video_ch™_buf_poﬁ_åy_gë_video_mv_‰ame_tcb
,

2189 .
	gput_video_mv_‰ame_tcb
 = 
tw_video_ch™_buf_poﬁ_put_video_mv_‰ame_tcb
,

2190 .
	ggë_video_mv_‰ame_tcb_poﬁ_íåy_numbî
 = 
tw_video_ch™_buf_poﬁ_gë_video_mv_‰ame_tcb_poﬁ_íåy_numbî
,

2194 
	$öô_tw_video_ch™_buf_poﬁ
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
, 
buf_Àn
)

2196 
ªt
 = 
TW_ERR
;

2197 if(
video_ch™_buf_poﬁ
 !
NULL
){

2198 
video_ch™_buf_poﬁ
->
›
 = &
tw_video_ch™_buf_poﬁ_›
;

2199 
ªt
 = 
video_ch™_buf_poﬁ
->
›
->
	`¸óã
(video_ch™_buf_poﬁ, 
buf_Àn
);

2201  
ªt
;

2202 
	}
}

2204 
	$ªmove_tw_video_ch™_buf_poﬁ
(
tw_video_ch™_buf_poﬁ_t
 *
video_ch™_buf_poﬁ
)

2206 if(
video_ch™_buf_poﬁ
 !
NULL
){

2207 if(
video_ch™_buf_poﬁ
->
›
 !
NULL
){

2208 
video_ch™_buf_poﬁ
->
›
->
	`ªÀa£
(video_chan_buf_pool);

2211 
	}
}

	@../../tw5864/tw5864/tw_jpeg_codec.c

6 
	~<tw5864/dvm_comm⁄.h
>

8 
tw_mj≥g_ícode_∑øm_t
 
	gdeÁu…_j≥g_ícode_¥›îty
 = {

9 .
i_image_width_mb_size
 = 
MJPEG_WIDTH_FRAME_D1_PAL
,

10 .
	gi_image_height_mb_size
 = 
MJPEG_HEIGHT_FRAME_D1_PAL
,

11 .
	ge_image_Àvñ
 = 
MJPEG_IMAGE_LEVEL_0
,

12 .
	gi_ˇ±uª_‰ame_°ride
 = 
TW5864_MJPEG_MIN_INTERVAL
,

13 .
	gi_ˇ±uª_‰ame_numbî
 = 0xffffffff,

14 .
	gi_ˇ±uª_ty≥
 = 
TW_MJPEG_ENCODE_PARAM_CAPTURE_TYPE_TIMER
,

15 .
	gch™ge_mask_Êag
 = 0xff,

18 c⁄° 
	gba£_q_tbl_y
[64] =

30 c⁄° 
	gba£_q_tbl_uv
[64] =

43 c⁄° 
	ghuffm™_DC0_tbl
[] = {

52 c⁄° 
	ghuffm™_DC1_tbl
[] = {

61 c⁄° 
	ghuffm™_AC0_tbl
[] = {

87 c⁄° 
	ghuffm™_AC1_tbl
[] = {

113 c⁄° 
	gsos_èbÀ_deÁu…
[] = {

118 
tw_j≥g_to_fûe
(
fûe
 *
j≥g_fûe
, 
tw_vb_‰ame_tcb_t
 *
‰ame
);

119 
tw_j≥g_ßve_chn
(
tw_j≥g_logic_ícode_ch™_t
 *
logic_ch∆
, *
∑th
, 
˙t
);

121 
öô_j≥g_£rvi˚_queue
(
j≥g_£rvi˚_queue_t
 * 
j≥g_£rvi˚_queue
);

122 
öô_j≥g_£rvi˚_tcb_wôh_nuŒ
(
j≥g_£rvi˚_tcb_t
 *
ícode_ªque°_tcb
);

123 
ªmove_j≥g_£rvi˚_queue
(
j≥g_£rvi˚_queue_t
 * 
j≥g_£rvi˚_queue
);

124 
öô_submô_ªcv_j≥g_d⁄e_£rvi˚
(
d¥am_ªque°_t
 *
d¥am_ªq
, 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ícode_ch™
);

126 
	$ªgi°î_logic_ícode_ch™_öto_phy_¶Ÿ
(
tw_j≥g_logic_ícode_ch™_t
 *
logic_ch™
, 
tw_j≥g_phy_video_¶Ÿ_t
 *
phy_¶Ÿ
)

128 
tw_ªgi°î_èbÀ_t
 *
logic_ch™_èbÀ
;

129 
ed_tcb_t
 *
logic_ch™_ed
;

130 
tw_ªgi°î_node_t
 *
ªgi°î_node
;

132 if(
logic_ch™
 && 
phy_¶Ÿ
){

133 
logic_ch™_èbÀ
 = &
phy_¶Ÿ
->logic_chan_table;

134 
logic_ch™_ed
 = &
logic_ch™
->logic_chan_ed;

135 
ªgi°î_node
 = &
logic_ch™_ed
->
ed
;

137 if(
logic_ch™_èbÀ
->
›
 !
NULL
){

138 
logic_ch™_èbÀ
->
›
->
	`ªgi°î_node_öto_èbÀ
÷ogic_ch™_èbÀ, 
ªgi°î_node
);

140 
	`©omic_£t
(&
logic_ch™_ed
->
°©e
, 
TW_ED_IDLE
);

142 
	}
}

144 
	$föd_ªgi°î_logic_ícode_ch™_ö_phy_¶Ÿ
(
tw_j≥g_phy_video_¶Ÿ_t
 *
phy_¶Ÿ
, 
logic_ch™_id
, 
tw_j≥g_logic_ícode_ch™_t
 **
±r_j≥g_logic_ícode_ch™
Ë
	`__©åibuã__
((
u£d
));

145 
	$föd_ªgi°î_logic_ícode_ch™_ö_phy_¶Ÿ
(
tw_j≥g_phy_video_¶Ÿ_t
 *
phy_¶Ÿ
, 
logic_ch™_id
, 
tw_j≥g_logic_ícode_ch™_t
 **
±r_j≥g_logic_ícode_ch™
)

147 
tw_ªgi°î_èbÀ_t
 *
logic_ch™_èbÀ
;

148 
tw_ªgi°î_node_t
 *
ªgi°î_node
;

149 
ed_tcb_t
 *
logic_ch™_ed
;

150 if(
phy_¶Ÿ
 && 
±r_j≥g_logic_ícode_ch™
){

151 
logic_ch™_èbÀ
 = &
phy_¶Ÿ
->logic_chan_table;

152 *
±r_j≥g_logic_ícode_ch™
 = 
NULL
;

153 if(
logic_ch™_èbÀ
->
›
 !
NULL
){

154 
logic_ch™_èbÀ
->
›
->
	`föd_ªgi°î_node_ö_èbÀ
÷ogic_ch™_èbÀ, &
ªgi°î_node
, 
logic_ch™_id
);

155 if(
ªgi°î_node
){

156 
logic_ch™_ed
 = 
	`to_gë_ídpoöt_tcb_wôh_ªgi°î_node
(
ªgi°î_node
);

157 *
±r_j≥g_logic_ícode_ch™
 = 
	`to_gë_tw_j≥g_ícode_ch™_wôh_logic_ch™_ed
(
logic_ch™_ed
);

161 
	}
}

164 
	$uƒegi°î_logic_ícode_ch™_öto_phy_¶Ÿ
(
tw_j≥g_logic_ícode_ch™_t
 *
logic_ch™
, 
tw_j≥g_phy_video_¶Ÿ_t
 *
phy_¶Ÿ
)

166 
tw_ªgi°î_èbÀ_t
 *
logic_ch™_èbÀ
;

167 
ed_tcb_t
 *
logic_ch™_ed
;

168 
tw_ªgi°î_node_t
 *
ªgi°î_node
;

170 if(
logic_ch™
 && 
phy_¶Ÿ
){

171 
logic_ch™_èbÀ
 = &
phy_¶Ÿ
->logic_chan_table;

172 
logic_ch™_ed
 = &
logic_ch™
->logic_chan_ed;

173 
ªgi°î_node
 = &
logic_ch™_ed
->
ed
;

175 
	`©omic_£t
(&
logic_ch™_ed
->
°©e
, 
TW_ED_CLOSED
);

176 if(
ªgi°î_node
->
›
 !
NULL
){

177 
ªgi°î_node
->
›
->
	`com∂ëe_d⁄e
(register_node);

179 if(
logic_ch™_èbÀ
->
›
 !
NULL
){

180 
logic_ch™_èbÀ
->
›
->
	`uƒegi°î_node_‰om_èbÀ
÷ogic_ch™_èbÀ, 
ªgi°î_node
);

182 
	`©omic_£t
(&
logic_ch™_ed
->
°©e
, 
TW_ED_UNREGISTER
);

184 
	}
}

186 
	$ªgi°î_›íed_logic_ícode_ch™_öto_phy_¶Ÿ
(
tw_j≥g_logic_ícode_ch™_t
 *
logic_chn
, 
tw_j≥g_phy_video_¶Ÿ_t
 *
phy_¶Ÿ
)

188 
tw_ªgi°î_èbÀ_t
 *
›íed_logic_ch™_èbÀ
;

189 
tw_ªgi°î_node_t
 *
ªgi°î_node
;

190 
ed_tcb_t
 *
›íed_logic_ch™_ed
;

192 if(
logic_chn
 && 
phy_¶Ÿ
){

193 
›íed_logic_ch™_èbÀ
 = &
phy_¶Ÿ
->opened_logic_chan_table;

194 
›íed_logic_ch™_ed
 = &
logic_chn
->opened_logic_chan_ed;

195 
ªgi°î_node
 = &
›íed_logic_ch™_ed
->
ed
;

197 if(
›íed_logic_ch™_èbÀ
->
›
 !
NULL
){

198 
›íed_logic_ch™_èbÀ
->
›
->
	`ªgi°î_node_öto_èbÀ
(›íed_logic_ch™_èbÀ, 
ªgi°î_node
);

200 
	`©omic_£t
(&
›íed_logic_ch™_ed
->
°©e
, 
TW_ED_IDLE
);

202 
	}
}

204 
	$föd_ªgi°î_›íed_logic_ícode_ch™_ö_phy_¶Ÿ
(
tw_j≥g_phy_video_¶Ÿ_t
 *
phy_¶Ÿ
, 
logic_ch™_id
, 
tw_j≥g_logic_ícode_ch™_t
 **
±r_j≥g_logic_ícode_ch™
Ë
	`__©åibuã__
((
u£d
));

205 
	$föd_ªgi°î_›íed_logic_ícode_ch™_ö_phy_¶Ÿ
(
tw_j≥g_phy_video_¶Ÿ_t
 *
phy_¶Ÿ
, 
logic_ch™_id
, 
tw_j≥g_logic_ícode_ch™_t
 **
±r_j≥g_logic_ícode_ch™
)

207 
tw_ªgi°î_èbÀ_t
 *
›íed_logic_ch™_èbÀ
;

208 
tw_ªgi°î_node_t
 *
ªgi°î_node
;

209 
ed_tcb_t
 *
›íed_logic_ch™_ed
;

211 if(
phy_¶Ÿ
 && 
±r_j≥g_logic_ícode_ch™
){

212 
›íed_logic_ch™_èbÀ
 = &
phy_¶Ÿ
->opened_logic_chan_table;

213 *
±r_j≥g_logic_ícode_ch™
 = 
NULL
;

214 if(
›íed_logic_ch™_èbÀ
->
›
 !
NULL
){

215 
›íed_logic_ch™_èbÀ
->
›
->
	`föd_ªgi°î_node_ö_èbÀ
(›íed_logic_ch™_èbÀ, &
ªgi°î_node
, 
logic_ch™_id
);

216 if(
ªgi°î_node
){

217 
›íed_logic_ch™_ed
 = 
	`to_gë_ídpoöt_tcb_wôh_ªgi°î_node
(
ªgi°î_node
);

218 *
±r_j≥g_logic_ícode_ch™
 = 
	`to_gë_tw_j≥g_ícode_ch™_wôh_›íed_logic_ch™_ed
(
›íed_logic_ch™_ed
);

222 
	}
}

224 
	$uƒegi°î_›íed_logic_ícode_ch™_öto_phy_¶Ÿ
(
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ícode_ch™
, 
tw_j≥g_phy_video_¶Ÿ_t
 *
phy_¶Ÿ
)

226 
tw_ªgi°î_èbÀ_t
 *
›íed_logic_ch™_èbÀ
;

227 
ed_tcb_t
 *
›íed_logic_ch™_ed
;

228 
tw_ªgi°î_node_t
 *
ªgi°î_node
;

230 if(
j≥g_logic_ícode_ch™
 && 
phy_¶Ÿ
){

231 
›íed_logic_ch™_èbÀ
 = &
phy_¶Ÿ
->opened_logic_chan_table;

232 
›íed_logic_ch™_ed
 = &
j≥g_logic_ícode_ch™
->opened_logic_chan_ed;

233 
ªgi°î_node
 = &
›íed_logic_ch™_ed
->
ed
;

235 
	`©omic_£t
(&
›íed_logic_ch™_ed
->
°©e
, 
TW_ED_CLOSED
);

236 if(
›íed_logic_ch™_èbÀ
->
›
 !
NULL
){

237 
›íed_logic_ch™_èbÀ
->
›
->
	`uƒegi°î_node_‰om_èbÀ
(›íed_logic_ch™_èbÀ, 
ªgi°î_node
);

239 
	`©omic_£t
(&
›íed_logic_ch™_ed
->
°©e
, 
TW_ED_UNREGISTER
);

241 
	}
}

243 
	$j≥g_ícode_drivî_ö_uƒegi°î_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

245 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

246 
ed_tcb_t
 *
ed_tcb
;

247 
dvm_chù_t
 *
chù
;

248 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
;

250 
	`¥ötk
("%s.%d\n", 
__FUNCTION__
, 
__LINE__
);

251 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

252 
j≥g_logic_ch™
 = (
tw_j≥g_logic_ícode_ch™_t
*)
c⁄ãxt
;

253 
ed_fsm
->
›
->
	`ª£t
(ed_fsm);

254 if(
	`©omic_ªad
(&
j≥g_logic_ch™
->
›íed_Êag
)){

255 
	`©omic_£t
(&
j≥g_logic_ch™
->
›íed_Êag
, 0);

256 
ed_tcb
->
ed
.
›
->
	`com∂ëe_d⁄e
(&ed_tcb->ed);

257 
chù
 = 
j≥g_logic_ch™
->chip;

258 
chù
->
	`chù_˛o£
(chip);

259 
	`uƒegi°î_›íed_logic_ícode_ch™_öto_phy_¶Ÿ
(
j≥g_logic_ch™
, j≥g_logic_ch™->
phy_video_¶Ÿ
);

262  
TW_OK
;

263 
	}
}

265 
	$j≥g_ícode_drivî_ö_uƒegi°î_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

268  
TW_OK
;

269 
	}
}

271 
	$j≥g_ícode_drivî_ö_uƒegi°î_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

274  
TW_OK
;

275 
	}
}

277 
	$j≥g_ícode_drivî_ö_uƒegi°î_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

279  
TW_OK
;

280 
	}
}

282 
	$j≥g_ícode_drivî_ö_uƒegi°î_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

286 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

287 
ed_tcb_t
 *
ed_tcb
;

288 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
;

289 
dvm_chù_t
 *
chù
;

291 
j≥g_logic_ch™
 = (
tw_j≥g_logic_ícode_ch™_t
*)
c⁄ãxt
;

292 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

293 
chù
 = 
j≥g_logic_ch™
->chip;

294 if(
	`©omic_ªad
(&
j≥g_logic_ch™
->
›íed_Êag
) == 0){

295 
ed_tcb
->
ed
.
›
->
	`öô_com∂ëe
(&ed_tcb->ed);

296 
chù
->
	`chù_›í
(chip);

297 
	`ªgi°î_›íed_logic_ícode_ch™_öto_phy_¶Ÿ
(
j≥g_logic_ch™
, j≥g_logic_ch™->
phy_video_¶Ÿ
);

298 
j≥g_logic_ch™
->
i_‰ame_£rül
 = 0;

299 
	`öô_tw5864_ícode_time°amp
(&
j≥g_logic_ch™
->
time°amp
);

300 
	`©omic_£t
(&
j≥g_logic_ch™
->
›íed_Êag
, 1);

301 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_CLOSED
);

303 
	`drivî_gí_›í_evít
(
ed_tcb
, 1);

305  
TW_OK
;

306 
	}
}

308 
	$j≥g_ícode_drivî_ö_uƒegi°î_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

312 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

313 
ed_tcb_t
 *
ed_tcb
;

314 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

315 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

317  
TW_OK
;

318 
	}
}

320 
	$j≥g_ícode_drivî_ö_˛o£d_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

322 
	`¥ötk
("%s.%d\n", 
__FUNCTION__
, 
__LINE__
);

324 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

325 
ed_tcb_t
 *
ed_tcb
;

326 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

327 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_UNREGISTER
);

328 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

330  
TW_OK
;

331 
	}
}

333 
	$j≥g_ícode_drivî_ö_˛o£d_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

336  
TW_OK
;

337 
	}
}

339 
	$j≥g_ícode_drivî_ö_˛o£d_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

342  
TW_OK
;

343 
	}
}

345 
	$j≥g_ícode_drivî_ö_˛o£d_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

348  
TW_OK
;

349 
	}
}

351 
	$j≥g_ícode_drivî_ö_˛o£d_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

353 if(
ed_fsm
 && 
c⁄ãxt
) {

354 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
;

356 
j≥g_logic_ch™
 = (
tw_j≥g_logic_ícode_ch™_t
*)
c⁄ãxt
;

358 
	`¥ötk
("%s.%d\n", 
__FUNCTION__
, 
__LINE__
);

359 if(
ed_fsm
->
èbÀ
 !
NULL
){

360 if(
ed_fsm
->
èbÀ
->
sync_hook
 !
NULL
){

361 
ed_fsm
->
èbÀ
->
	`sync_hook
”d_fsm,Éd_fsm->
c⁄ãxt
);

363 
	`¥ötk
("%s.%d, %dÇÿªgi°î j≥g fsm sync_hook\n", 
__FUNCTION__
, 
__LINE__
, 
j≥g_logic_ch™
->
logic_ch™_id
);

366 
	`¥ötk
("%s.%d, %d j≥g fsmÅabÀ i†nuŒ\n", 
__FUNCTION__
, 
__LINE__
, 
j≥g_logic_ch™
->
logic_ch™_id
);

368 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_SUSPEND
);

369  
TW_OK
;

372  
TW_ERR
;

373 
	}
}

375 
	$j≥g_ícode_drivî_ö_˛o£d_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

378 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

379 
ed_tcb_t
 *
ed_tcb
;

380 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

381 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

383  
TW_OK
;

384 
	}
}

386 
	$j≥g_ícode_drivî_ö_idÀ_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

388 
	`¥ötk
("%s.%d\n", 
__FUNCTION__
, 
__LINE__
);

389 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

390 
ed_tcb_t
 *
ed_tcb
;

391 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

392 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_CLOSED
);

393 
ed_tcb
->
ed
.
›
->
	`com∂ëe_d⁄e
(&ed_tcb->ed);

394 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

396  
TW_OK
;

397 
	}
}

399 
	$j≥g_ícode_drivî_ö_idÀ_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

402  
TW_OK
;

403 
	}
}

405 
	$j≥g_ícode_drivî_ö_idÀ_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

408 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

409 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
;

410 
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

412 
j≥g_logic_ch™
 = (
tw_j≥g_logic_ícode_ch™_t
*)
c⁄ãxt
;

413 
ícode_c⁄åﬁ
 = &
j≥g_logic_ch™
->encode_control;

415 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_SUSPEND
);

417 if(
ícode_c⁄åﬁ
->
timî_id
 !
INVALIDTIMERID
){

419 
	`DñëeSögÀFúeTimîJob
(
ícode_c⁄åﬁ
->
timî_id
);

420 
ícode_c⁄åﬁ
->
timî_id
 = 
INVALIDTIMERID
;

424  
TW_OK
;

425 
	}
}

427 
	$j≥g_ícode_drivî_ö_idÀ_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

430 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

431 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
;

432 
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

434 
j≥g_logic_ch™
 = (
tw_j≥g_logic_ícode_ch™_t
*)
c⁄ãxt
;

435 
ícode_c⁄åﬁ
 = &
j≥g_logic_ch™
->encode_control;

437 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_IDLE
);

438 
ícode_c⁄åﬁ
->
	`timî_hook
(
c⁄ãxt
);

441  
TW_OK
;

442 
	}
}

444 
	$j≥g_ícode_drivî_ö_idÀ_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

447  
TW_OK
;

448 
	}
}

450 
	$j≥g_ícode_drivî_ö_idÀ_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

453 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

454 
tw5864_vj_bus_t
 *
vj_bus
;

455 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
;

456 
j≥g_£rvi˚_queue_t
 *
£rvi˚_queue
;

458 
j≥g_logic_ch™
 = (
tw_j≥g_logic_ícode_ch™_t
*)
c⁄ãxt
;

460 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_STANDBY
);

462 
vj_bus
 = &
j≥g_logic_ch™
->
chù
->
chù_vj_bus
;

463 
£rvi˚_queue
 = &
vj_bus
->
j≥g_£rvi˚_queue
;

464 
£rvi˚_queue
->
›
->
	`put_£rvi˚_ªque°_öto_queue
(£rvi˚_queue, &
j≥g_logic_ch™
->
ícode_ªque°_tcb
);

467  
TW_OK
;

468 
	}
}

470 
	$j≥g_ícode_drivî_ö_°™dby_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

472 
	`¥ötk
("%s.%d\n", 
__FUNCTION__
, 
__LINE__
);

473 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

474 
ed_tcb_t
 *
ed_tcb
;

475 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

476 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 0);

478  
TW_OK
;

479 
	}
}

481 
	$j≥g_ícode_drivî_ö_°™dby_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

484  
TW_OK
;

485 
	}
}

487 
	$j≥g_ícode_drivî_ö_°™dby_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

490 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

491 
ed_tcb_t
 *
ed_tcb
;

492 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

493 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 0);

495  
TW_OK
;

496 
	}
}

498 
	$j≥g_ícode_drivî_ö_°™dby_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

501 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

502 
ed_tcb_t
 *
ed_tcb
;

503 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

504 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 0);

506  
TW_OK
;

507 
	}
}

509 
	$j≥g_ícode_drivî_ö_°™dby_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

512  
TW_OK
;

513 
	}
}

515 
	$j≥g_ícode_drivî_ö_°™dby_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

518 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

519 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_RUNNING
);

521  
TW_OK
;

522 
	}
}

524 
	$j≥g_ícode_drivî_ö_su•íd_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

526 
	`¥ötk
("%s.%d\n", 
__FUNCTION__
, 
__LINE__
);

527 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

528 
ed_tcb_t
 *
ed_tcb
;

529 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

530 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_CLOSED
);

531 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

533  
TW_OK
;

534 
	}
}

536 
	$j≥g_ícode_drivî_ö_su•íd_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

539  
TW_OK
;

540 
	}
}

542 
	$j≥g_ícode_drivî_ö_su•íd_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

545  
TW_OK
;

546 
	}
}

548 
	$j≥g_ícode_drivî_ö_su•íd_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

550 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

551 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
;

552 
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

554 
j≥g_logic_ch™
 = (
tw_j≥g_logic_ícode_ch™_t
*)
c⁄ãxt
;

555 
ícode_c⁄åﬁ
 = &
j≥g_logic_ch™
->encode_control;

557 
	`¥ötk
("%s.%d\n", 
__FUNCTION__
, 
__LINE__
);

558 if(
ed_fsm
->
èbÀ
 !
NULL
){

559 if(
ed_fsm
->
èbÀ
->
sync_hook
 !
NULL
){

560 
ed_fsm
->
èbÀ
->
	`sync_hook
”d_fsm, 
c⁄ãxt
);

563 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_IDLE
);

565 
ícode_c⁄åﬁ
->
	`timî_hook
(
c⁄ãxt
);

567  
TW_OK
;

568 
	}
}

570 
	$j≥g_ícode_drivî_ö_su•íd_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

573  
TW_OK
;

574 
	}
}

576 
	$j≥g_ícode_drivî_ö_su•íd_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

579  
TW_OK
;

580 
	}
}

582 
	$j≥g_ícode_drivî_ö_ru¬ög_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

584 
	`¥ötk
("%s.%d\n", 
__FUNCTION__
, 
__LINE__
);

585 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

586 
ed_tcb_t
 *
ed_tcb
;

587 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

588 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 0);

590  
TW_OK
;

591 
	}
}

593 
	$j≥g_ícode_drivî_ö_ru¬ög_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

596 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

597 
tw_vb_‰ame_tcb_queue_t
 *
‰ame_queue
;

598 
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

599 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
 = (tw_j≥g_logic_ícode_ch™_à*)
c⁄ãxt
;

601 
ícode_c⁄åﬁ
 = &
j≥g_logic_ch™
->encode_control;

602 
‰ame_queue
 = &
j≥g_logic_ch™
->
j≥g_‰ame_queue
;

603 
‰ame_queue
->
›
->
	`ªÀa£_cuº_¥odu˚r
(‰ame_queue, &
j≥g_logic_ch™
->
poﬁ
);

604 
ícode_c⁄åﬁ
->
lo°_‰ame
++;

606 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_TRANSFERING
);

607 
	`drivî_gí_dñivî_evít
(&
j≥g_logic_ch™
->
›íed_logic_ch™_ed
, 1);

610  
TW_OK
;

611 
	}
}

613 
	$j≥g_ícode_drivî_ö_ru¬ög_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

616 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

617 
ed_tcb_t
 *
ed_tcb
;

618 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

619 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 0);

621  
TW_OK
;

622 
	}
}

624 
	$j≥g_ícode_drivî_ö_ru¬ög_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

627 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

628 
ed_tcb_t
 *
ed_tcb
;

629 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

630 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 0);

632  
TW_OK
;

633 
	}
}

635 
	$j≥g_ícode_drivî_ö_ru¬ög_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

638  
TW_OK
;

639 
	}
}

641 
	$j≥g_ícode_drivî_ö_ru¬ög_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

644 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

645 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
;

646 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
;

647 
d¥am_ªque°_t
 *
ªad_video_bô°ªam_ªq
;

649 
j≥g_logic_ch™
 = (
tw_j≥g_logic_ícode_ch™_t
*)
c⁄ãxt
;

650 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_TRANSFERING
);

652 
chù_d¥am_c⁄åﬁÀr
 = &
j≥g_logic_ch™
->
chù
->chip_dpram_controller;

653 
ªad_video_bô°ªam_ªq
 = &
j≥g_logic_ch™
->read_video_bitstream_req;

654 
	`öô_submô_ªcv_j≥g_d⁄e_£rvi˚
(
ªad_video_bô°ªam_ªq
, 
j≥g_logic_ch™
);

655 
chù_d¥am_c⁄åﬁÀr
->
›
->
	`submô_ªad_mj≥g_ªq
(chù_d¥am_c⁄åﬁÀr, 
j≥g_logic_ch™
);

657  
TW_OK
;

658 
	}
}

660 
	$j≥g_ícode_drivî_ö_å™s„rög_°©e_ªcv_˛o£_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

662 
	`¥ötk
("%s.%d\n", 
__FUNCTION__
, 
__LINE__
);

663 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

664 
ed_tcb_t
 *
ed_tcb
;

665 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

666 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 0);

668  
TW_OK
;

669 
	}
}

671 
	$j≥g_ícode_drivî_ö_å™s„rög_°©e_ªcv_timeout_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

674  
TW_OK
;

675 
	}
}

677 
	$j≥g_ícode_drivî_ö_å™s„rög_°©e_ªcv_su•íd_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

680 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

681 
ed_tcb_t
 *
ed_tcb
;

682 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

683 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 0);

685  
TW_OK
;

686 
	}
}

688 
	$j≥g_ícode_drivî_ö_å™s„rög_°©e_ªcv_ªsume_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

691 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

692 
ed_tcb_t
 *
ed_tcb
;

693 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

694 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 0);

696  
TW_OK
;

697 
	}
}

699 
	$j≥g_ícode_drivî_ö_å™s„rög_°©e_ªcv_›í_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

702  
TW_OK
;

703 
	}
}

705 
	$j≥g_ícode_drivî_ö_å™s„rög_°©e_ªcv_dñivî_evít
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

708 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

709 
u32
 
cuºít_time_tick
, 
öãrvÆ
;

710 
ed_tcb_t
 *
ed_tcb
;

711 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
;

712 
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

714 
j≥g_logic_ch™
 = (
tw_j≥g_logic_ícode_ch™_t
*)
c⁄ãxt
;

715 
ícode_c⁄åﬁ
 = &
j≥g_logic_ch™
->encode_control;

717 
ícode_c⁄åﬁ
->
	`upd©e_ru¬ög_c⁄fig
”ncode_c⁄åﬁ, &
j≥g_logic_ch™
->
ícode_¥›îty
.encode_property);

718 if((
ícode_c⁄åﬁ
->
ˇ±uª_À·_cou¡
 <0Ë&& (ícode_c⁄åﬁ->
ˇ±uª_Êags
 & 
TW_MJPEG_ENCODE_PARAM_CAPTURE_TYPE_USER
)){

719 
	`TW_DBG
(
TW_DBG_DEBUG
, "ch™√»%d USER c≠tuª com∂ëe\n", 
j≥g_logic_ch™
->
logic_ch™_id
);

720 
ícode_c⁄åﬁ
->
ˇ±uª_Êags
 &~
TW_MJPEG_ENCODE_PARAM_CAPTURE_TYPE_USER
;

721 
ícode_c⁄åﬁ
->
ˇ±uª_À·_cou¡
 = 0;

724 if(
ícode_c⁄åﬁ
->
ˇ±uª_Êags
 & (
TW_MJPEG_ENCODE_PARAM_CAPTURE_TYPE_USER
 | 
TW_MJPEG_ENCODE_PARAM_CAPTURE_TYPE_TIMER
)) {

725 
cuºít_time_tick
 = 
	`gë_tw_sy°em_tick
();

726 
öãrvÆ
 = (
	`H264_MAX
(
cuºít_time_tick
, 
ícode_c⁄åﬁ
->
œ°_time_tick
Ë- 
	`H264_MIN
(current_time_tick,Éncode_control->last_time_tick));

727 if(
öãrvÆ
 > 
ícode_c⁄åﬁ
->
cuº_öãrvÆ
) {

728 if((
ícode_c⁄åﬁ
->
cuº_öãrvÆ
 << 1Ë>
öãrvÆ
) {

729 
öãrvÆ
 = (
ícode_c⁄åﬁ
->
cuº_öãrvÆ
 << 1) - interval;

731 
öãrvÆ
 = 
ícode_c⁄åﬁ
->
cuº_öãrvÆ
;

733 
öãrvÆ
 = i¡îvÆ < (
TW5864_MJPEG_MIN_INTERVAL
/
MS_PER_TICK
)? (TW5864_MJPEG_MIN_INTERVAL/MS_PER_TICK):interval;

735 
öãrvÆ
 = 
ícode_c⁄åﬁ
->
cuº_öãrvÆ
;

740 
ícode_c⁄åﬁ
->
timî_id
 = 
	`AddSögÀFúeTimîJob
(
öãrvÆ
,Éncode_c⁄åﬁ->
timî_hook
, 
j≥g_logic_ch™
);

741 if(
ícode_c⁄åﬁ
->
timî_id
 =
ADDJOBERROR
) {

742 
	`TW_DBG
(
TW_DBG_ERR
, "addÅimerÉrror!\n");

744 
ícode_c⁄åﬁ
->
œ°_time_tick
 = 
cuºít_time_tick
;

746 
	`TW_DBG
(
TW_DBG_DEBUG
, "ch™√»%d ALL c≠tuª com∂ëe\n", 
j≥g_logic_ch™
->
logic_ch™_id
);

749 
ícode_c⁄åﬁ
->
‰ame_öãrvÆ
 = 
	`jiffõs_to_m£cs
(
jiffõs
Ë- jiffõs_to_m£cs”ncode_c⁄åﬁ->
œ°_jiffõs
);

750 
ícode_c⁄åﬁ
->
œ°_jiffõs
 = 
jiffõs
;

751 
j≥g_logic_ch™
->
i_‰ame_£rül
++;

753 
ed_tcb
 = 
	`to_gë_ídpoöt_tcb_wôh_tw_ed_fsm
(
ed_fsm
);

754 
ed_tcb
->
ed
.
›
->
	`com∂ëe_d⁄e
(&ed_tcb->ed);

755 
ed_fsm
->
›
->
	`ch™ge_°©e
”d_fsm, 
TW_ED_IDLE
);

756 
ed_fsm
->
›
->
	`upd©e_íabÀ_°©e_å™s„r
(ed_fsm, 1);

759  
TW_OK
;

760 
	}
}

762 
	$j≥g_ícode_drivî_sync_hook
(
tw_ed_fsm_t
 *
ed_fsm
, *
c⁄ãxt
)

765 if((
ed_fsm
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

768  
TW_OK
;

769 
	}
}

771 
fsm_°©e_å™s„r_m©rix_èbÀ_t
 
	gj≥g_ícode_drivî_fsm_°©e_å™s„r_m©rix_èbÀ
 = {

772 .
a˘i⁄
 = {

774 
j≥g_ícode_drivî_ö_uƒegi°î_°©e_ªcv_˛o£_evít
,

775 
j≥g_ícode_drivî_ö_uƒegi°î_°©e_ªcv_timeout_evít
,

776 
j≥g_ícode_drivî_ö_uƒegi°î_°©e_ªcv_su•íd_evít
,

777 
j≥g_ícode_drivî_ö_uƒegi°î_°©e_ªcv_ªsume_evít
,

778 
j≥g_ícode_drivî_ö_uƒegi°î_°©e_ªcv_›í_evít
,

779 
j≥g_ícode_drivî_ö_uƒegi°î_°©e_ªcv_dñivî_evít


782 
j≥g_ícode_drivî_ö_˛o£d_°©e_ªcv_˛o£_evít
,

783 
j≥g_ícode_drivî_ö_˛o£d_°©e_ªcv_timeout_evít
,

784 
j≥g_ícode_drivî_ö_˛o£d_°©e_ªcv_su•íd_evít
,

785 
j≥g_ícode_drivî_ö_˛o£d_°©e_ªcv_ªsume_evít
,

786 
j≥g_ícode_drivî_ö_˛o£d_°©e_ªcv_›í_evít
,

787 
j≥g_ícode_drivî_ö_˛o£d_°©e_ªcv_dñivî_evít


790 
j≥g_ícode_drivî_ö_idÀ_°©e_ªcv_˛o£_evít
,

791 
j≥g_ícode_drivî_ö_idÀ_°©e_ªcv_timeout_evít
,

792 
j≥g_ícode_drivî_ö_idÀ_°©e_ªcv_su•íd_evít
,

793 
j≥g_ícode_drivî_ö_idÀ_°©e_ªcv_ªsume_evít
,

794 
j≥g_ícode_drivî_ö_idÀ_°©e_ªcv_›í_evít
,

795 
j≥g_ícode_drivî_ö_idÀ_°©e_ªcv_dñivî_evít


798 
j≥g_ícode_drivî_ö_°™dby_°©e_ªcv_˛o£_evít
,

799 
j≥g_ícode_drivî_ö_°™dby_°©e_ªcv_timeout_evít
,

800 
j≥g_ícode_drivî_ö_°™dby_°©e_ªcv_su•íd_evít
,

801 
j≥g_ícode_drivî_ö_°™dby_°©e_ªcv_ªsume_evít
,

802 
j≥g_ícode_drivî_ö_°™dby_°©e_ªcv_›í_evít
,

803 
j≥g_ícode_drivî_ö_°™dby_°©e_ªcv_dñivî_evít


806 
j≥g_ícode_drivî_ö_su•íd_°©e_ªcv_˛o£_evít
,

807 
j≥g_ícode_drivî_ö_su•íd_°©e_ªcv_timeout_evít
,

808 
j≥g_ícode_drivî_ö_su•íd_°©e_ªcv_su•íd_evít
,

809 
j≥g_ícode_drivî_ö_su•íd_°©e_ªcv_ªsume_evít
,

810 
j≥g_ícode_drivî_ö_su•íd_°©e_ªcv_›í_evít
,

811 
j≥g_ícode_drivî_ö_su•íd_°©e_ªcv_dñivî_evít


814 
j≥g_ícode_drivî_ö_ru¬ög_°©e_ªcv_˛o£_evít
,

815 
j≥g_ícode_drivî_ö_ru¬ög_°©e_ªcv_timeout_evít
,

816 
j≥g_ícode_drivî_ö_ru¬ög_°©e_ªcv_su•íd_evít
,

817 
j≥g_ícode_drivî_ö_ru¬ög_°©e_ªcv_ªsume_evít
,

818 
j≥g_ícode_drivî_ö_ru¬ög_°©e_ªcv_›í_evít
,

819 
j≥g_ícode_drivî_ö_ru¬ög_°©e_ªcv_dñivî_evít


822 
j≥g_ícode_drivî_ö_å™s„rög_°©e_ªcv_˛o£_evít
,

823 
j≥g_ícode_drivî_ö_å™s„rög_°©e_ªcv_timeout_evít
,

824 
j≥g_ícode_drivî_ö_å™s„rög_°©e_ªcv_su•íd_evít
,

825 
j≥g_ícode_drivî_ö_å™s„rög_°©e_ªcv_ªsume_evít
,

826 
j≥g_ícode_drivî_ö_å™s„rög_°©e_ªcv_›í_evít
,

827 
j≥g_ícode_drivî_ö_å™s„rög_°©e_ªcv_dñivî_evít


830 .
	gsync_hook
 = 
j≥g_ícode_drivî_sync_hook
,

833 
	$tw5864_jifi_hódî
(*
buf
, 
tw_j≥g_logic_ícode_ch™_t
 *
logic_j≥g_chn
)

835 *
ch¨_p
;

836 
APP_m¨k
 *
≠p0_m¨k
;

837 
DQT_èbÀ
 *
dqt_èbÀ
;

838 
SOF_èbÀ
 *
sof_èbÀ
;

839 
width
, 
height
;

840 
tw_j≥g_ícode_¥›îty_t
 *
j≥g_¥›îty
;

852 
j≥g_¥›îty
 = &
logic_j≥g_chn
->
ícode_¥›îty
;

854 
width
 = 
j≥g_¥›îty
->
›
->
	`gë_mb_width
(jpeg_property);

855 
height

j≥g_¥›îty
->
›
->
	`gë_mb_height
(jpeg_property);

857 
ch¨_p
 = 
buf
;

859 *(*)
ch¨_p
 = 
	`sw≠_sh‹t
(
SOI
);

860 
ch¨_p
 += 2;

862 *
ch¨_p
 = 0xff;

863 
ch¨_p
++;

865 
≠p0_m¨k
 = (
APP_m¨k
 *)
ch¨_p
;

866 
≠p0_m¨k
->
Êag
 = 
	`sw≠_sh‹t
(
	`APP
(0));

867 
≠p0_m¨k
->
£gmít_Àn
 = 
	`sw≠_sh‹t
(0x0010);

868 
	`°r˝y
(
≠p0_m¨k
->
°rög
, 
JFIF_ID
);

869 
≠p0_m¨k
->
vîsi⁄
 = 
	`sw≠_sh‹t
(0x0101);

870 
≠p0_m¨k
->
unô
 = 0x01;

871 
≠p0_m¨k
->
width
 = 
	`sw≠_sh‹t
(0x0001);

872 
≠p0_m¨k
->
height
 = 
	`sw≠_sh‹t
(0x0001);

874 
≠p0_m¨k
->
sˇÀ_width
 = 0x00;

875 
≠p0_m¨k
->
sˇÀ_height
= 0x00;

876 
ch¨_p
 +
	`sw≠_sh‹t
(
≠p0_m¨k
->
£gmít_Àn
) + 2;

879 
dqt_èbÀ
 = (
DQT_èbÀ
 *)
ch¨_p
;

880 
dqt_èbÀ
->
Êag
 = 
	`sw≠_sh‹t
(
DQT
);

881 
dqt_èbÀ
->
£gmít_Àn
 = 
	`sw≠_sh‹t
(0x43);

882 
dqt_èbÀ
->
èbÀ
.
bôs
 = 0x0;

883 
dqt_èbÀ
->
èbÀ
.
id
 = 0x0;

884 
	`mem˝y
(
dqt_èbÀ
->
èbÀ
.
DQT_TABLE
, 
ba£_q_tbl_y
, 0x40);

885 
ch¨_p
 +
	`sw≠_sh‹t
(
dqt_èbÀ
->
£gmít_Àn
) + 2;

888 
dqt_èbÀ
 = (
DQT_èbÀ
 *)
ch¨_p
;

889 
dqt_èbÀ
->
Êag
 = 
	`sw≠_sh‹t
(
DQT
);

890 
dqt_èbÀ
->
£gmít_Àn
 = 
	`sw≠_sh‹t
(0x43);

891 
dqt_èbÀ
->
èbÀ
.
bôs
 = 0x0;

892 
dqt_èbÀ
->
èbÀ
.
id
 = 0x1;

893 
	`mem˝y
(
dqt_èbÀ
->
èbÀ
.
DQT_TABLE
, 
ba£_q_tbl_uv
, 0x40);

894 
ch¨_p
 +
	`sw≠_sh‹t
(
dqt_èbÀ
->
£gmít_Àn
) + 2;

897 
sof_èbÀ
 = (
SOF_èbÀ
 *)
ch¨_p
;

898 
sof_èbÀ
->
Êag
 = 
	`sw≠_sh‹t
(
	`SOF
(0));

899 
sof_èbÀ
->
£gmít_Àn
 = 
	`sw≠_sh‹t
(0x11);

900 
sof_èbÀ
->
bôs
 = 0x08;

901 
sof_èbÀ
->
height
 = 
	`sw≠_sh‹t
(height);

902 
sof_èbÀ
->
width
 = 
	`sw≠_sh‹t
(width);

903 
sof_èbÀ
->
cﬁ‹
 = 0x03;

905 
sof_èbÀ
->
comp
[0].
cﬁ‹_id
 = 0x01;

906 
sof_èbÀ
->
comp
[0].
HV
 = 0x22;

907 
sof_èbÀ
->
comp
[0].
QDT_id
 = 0x00;

909 
sof_èbÀ
->
comp
[1].
cﬁ‹_id
 = 0x02;

910 
sof_èbÀ
->
comp
[1].
HV
 = 0x11;

911 
sof_èbÀ
->
comp
[1].
QDT_id
 = 0x01;

913 
sof_èbÀ
->
comp
[2].
cﬁ‹_id
 = 0x03;

914 
sof_èbÀ
->
comp
[2].
HV
 = 0x11;

915 
sof_èbÀ
->
comp
[2].
QDT_id
 = 0x01;

917 
ch¨_p
 +
	`sw≠_sh‹t
(
sof_èbÀ
->
£gmít_Àn
) + 2;

920 
	`mem˝y
(
ch¨_p
, 
huffm™_DC0_tbl
, (huffman_DC0_tbl));

921 
ch¨_p
 +(
huffm™_DC0_tbl
);

922 
	`mem˝y
(
ch¨_p
, 
huffm™_DC1_tbl
, (huffman_DC1_tbl));

923 
ch¨_p
 +(
huffm™_DC1_tbl
);

924 
	`mem˝y
(
ch¨_p
, 
huffm™_AC0_tbl
, (huffman_AC0_tbl));

925 
ch¨_p
 +(
huffm™_AC0_tbl
);

926 
	`mem˝y
(
ch¨_p
, 
huffm™_AC1_tbl
, (huffman_AC1_tbl));

927 
ch¨_p
 +(
huffm™_AC1_tbl
);

931 
sos_èbÀ
 = 
ch¨_p
;

932 
sos_èbÀ
->
Êag
 = 
	`sw≠_sh‹t
(
SOS
);

933 
sos_èbÀ
->
£gmít_Àn
 = 
	`sw≠_sh‹t
(0x0c);

934 
sos_èbÀ
->
cﬁ‹_comp_id
 = 0x03;

935 
sos_èbÀ
->
°¨t_öfo
[0].
DC_èbÀ
 = 0x01;

936 
sos_èbÀ
->
°¨t_öfo
[0].
AC_èbÀ
 = 0x00;

937 
sos_èbÀ
->
°¨t_öfo
[0].
d©a_°¨t
 = 0x00;

938 
sos_èbÀ
->
°¨t_öfo
[0].
d©a_íd
 = 0x02;

939 
sos_èbÀ
->
°¨t_öfo
[0].
d©a_£À˘
= 0x11;

941 
	`mem˝y
(
ch¨_p
, 
sos_èbÀ_deÁu…
, (sos_table_default));

943 
ch¨_p
 +(
sos_èbÀ_deÁu…
);

945  (
ch¨_p
 - 
buf
);

946 
	}
}

948 
	$j≥g_ícode_hcd_öãrÁ˚_›í
(
ed_tcb_t
 *
ed_tcb
)

950 if(
ed_tcb
){

951 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
;

953 
j≥g_logic_ch™
 = 
	`to_gë_tw_j≥g_ícode_ch™_wôh_›íed_logic_ch™_ed
(
ed_tcb
);

954 if(
	`©omic_ªad
(&
j≥g_logic_ch™
->
›íed_Êag
)){

955 
	`TW_DBG
(
TW_DBG_ERR
, "already opened\n");

956  -
EBUSY
;

959 
	`drivî_gí_›í_evít
(
ed_tcb
, 1);

962  
TW_OK
;

963 
	}
}

965 
	$j≥g_ícode_hcd_öãrÁ˚_˛o£
(
ed_tcb_t
 *
ed_tcb
)

967 if(
ed_tcb
){

968 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
;

969 
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

971 
j≥g_logic_ch™
 = 
	`to_gë_tw_j≥g_ícode_ch™_wôh_›íed_logic_ch™_ed
(
ed_tcb
);

972 
ícode_c⁄åﬁ
 = &
j≥g_logic_ch™
->encode_control;

974 if(
ícode_c⁄åﬁ
->
timî_id
 !
INVALIDTIMERID
){

975 
	`DñëeSögÀFúeTimîJob
(
ícode_c⁄åﬁ
->
timî_id
);

976 
ícode_c⁄åﬁ
->
timî_id
 = 
INVALIDTIMERID
;

979 
	`TW_DBG
(
TW_DBG_INFO
, "waô j≥g ch™√»%d clo£, cuºíà°©ê%d\n", 
j≥g_logic_ch™
->
logic_ch™_id
,

980 
j≥g_logic_ch™
->
›íed_logic_ch™_ed
.
ed_fsm
.
›
->
	`gë_cuº_°©e
(&jpeg_logic_chan->opened_logic_chan_ed.ed_fsm));

981 
	`drivî_gí_˛o£_evít
(
ed_tcb
, 1);

982 
ed_tcb
->
ed
.
›
->
	`waô_com∂ëe
(&ed_tcb->ed);

983 
	`tw_de°roy_‰ame_tcb_queue
(&
j≥g_logic_ch™
->
j≥g_‰ame_queue
, &j≥g_logic_ch™->
poﬁ
);

984 
	`TW_DBG
(
TW_DBG_INFO
, "j≥g ch™√»%d clo£d\n", 
j≥g_logic_ch™
->
logic_ch™_id
);

987  
TW_OK
;

988 
	}
}

990 
	$j≥g_ícode_hcd_öãrÁ˚_su•íd
(
ed_tcb_t
 *
ed_tcb
)

992 if(
ed_tcb
) {

993 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 0);

995 
	}
}

997 
	$j≥g_ícode_hcd_öãrÁ˚_ªsume
(
ed_tcb_t
 *
ed_tcb
)

999 if(
ed_tcb
) {

1000 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 0);

1002 
	}
}

1004 
	$j≥g_ícode_hcd_öãrÁ˚_io˘l
(
ed_tcb_t
 *
ed_tcb
, 
cmd
, 
¨g
)

1006 
ªt
 = 
TW_OK
;

1007 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ícode_ch™
;

1008 
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_˘rﬁ
;

1009 
tw_j≥g_ícode_¥›îty_t
 *
ícode_¥›îty
;

1010 
tw_mj≥g_ícode_∑øm_t
 
ícode_∑øm
, *
c⁄fig_∑øm
 = &encode_param;

1011 
tw_video_bus_t
 *
video_bus
;

1012 
chù_drivî_t
 *
chù_drivî
;

1013 
tw_ed_fsm_t
 *
ed_fsm
;

1015 if(!
ed_tcb
) {

1016 
	`TW_DBG
(
TW_DBG_ERR
, "nullÖointer\n");

1017  -
EINVAL
;

1020 
	`TW_DBG
(
TW_DBG_INFO
, "%c, %d\n", 
	`_IOC_TYPE
(
cmd
), 
	`_IOC_NR
(cmd));

1021 
j≥g_logic_ícode_ch™
 = 
	`to_gë_tw_j≥g_ícode_ch™_wôh_›íed_logic_ch™_ed
(
ed_tcb
);

1022 
chù_drivî
 = 
j≥g_logic_ícode_ch™
->
chù
->chip_driver;

1023 
video_bus
 = &
chù_drivî
->video_bus;

1024 
ícode_¥›îty
 = &
j≥g_logic_ícode_ch™
->encode_property;

1025 
ícode_˘rﬁ
 = &
j≥g_logic_ícode_ch™
->
ícode_c⁄åﬁ
;

1026 
ed_fsm
 = &
ed_tcb
->ed_fsm;

1027 if(
	`©omic_ªad
(&
j≥g_logic_ícode_ch™
->
›íed_Êag
) == 0){

1028 
	`TW_DBG
(
TW_DBG_ERR
, "channel haveÇot be opend\n");

1029  -
ENODEV
;

1031 
cmd
) {

1032 
TW_MJPEG_ENCODE_PARAM_GET
:

1033 if(!
¨g
) {

1034 
	`TW_DBG
(
TW_DBG_ERR
, "invalidárg\n");

1035  -
EINVAL
;

1037 
	`c›y_‰om_u£r
(&
ícode_∑øm
, (*)
¨g
, (
tw_mj≥g_ícode_∑øm
));

1038 if(
c⁄fig_∑øm
->
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_IMAGE_LEVEL_MASK
) {

1039 
ícode_∑øm
.
e_image_Àvñ
 = 
ícode_¥›îty
->
›
->
	`gë_image_Àvñ
(encode_property);

1041 if(
c⁄fig_∑øm
->
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_IMAGE_WIDTH_MASK
) {

1042 
ícode_∑øm
.
i_image_width_mb_size
 = 
ícode_¥›îty
->
›
->
	`gë_mb_width
(encode_property)>>4;

1044 if(
c⁄fig_∑øm
->
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_IMAGE_HEIGHT_MASK
) {

1045 
c⁄fig_∑øm
->
i_image_height_mb_size
 = 
ícode_¥›îty
->
›
->
	`gë_mb_height
(encode_property)>>4;

1047 if(
ícode_∑øm
.
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_CAPTURE_FRAME_NUMBER_MASK
) {

1048 
c⁄fig_∑øm
->
i_ˇ±uª_‰ame_numbî
 = 
ícode_¥›îty
->
›
->
	`gë_ˇ±uª_numbî
(encode_property);

1050 if(
ícode_∑øm
.
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_CAPTURE_FRAME_STRIDE_MASK
) {

1051 
c⁄fig_∑øm
->
i_ˇ±uª_‰ame_°ride
 = 
ícode_¥›îty
->
›
->
	`gë_ˇ±uª_°ride
(encode_property);

1053 if(
ícode_∑øm
.
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_CAPTURE_TYPE_MASK
) {

1054 
c⁄fig_∑øm
->
i_ˇ±uª_ty≥
 = 
ícode_¥›îty
->
›
->
	`gë_ˇ±uª_ty≥
(encode_property);

1057 
	`c›y_to_u£r
((*)
¨g
, &
ícode_∑øm
, (
tw_mj≥g_ícode_∑øm_t
));

1059 
TW_MJPEG_ENCODE_PARAM_SET
:

1060 if(!
¨g
) {

1061 
	`TW_DBG
(
TW_DBG_ERR
, "invalidárg\n");

1062  -
EINVAL
;

1064 
	`c›y_‰om_u£r
(&
ícode_∑øm
, (*)
¨g
, (
tw_mj≥g_ícode_∑øm
));

1065 if(
ícode_∑øm
.
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_IMAGE_LEVEL_MASK
) {

1067 if(
ícode_∑øm
.
e_image_Àvñ
 !
MJPEG_IMAGE_LEVEL_0
){

1068 
	`TW_DBG
(
TW_DBG_ERR
, "imagêÀvñÉº‹, cuºíà⁄ly suµ‹à%d\n", 
MJPEG_IMAGE_LEVEL_0
);

1069 
ªt
 = -
EINVAL
;

1073 if(
ícode_∑øm
.
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_CAPTURE_FRAME_STRIDE_MASK
) {

1074 if(
ícode_∑øm
.
i_ˇ±uª_‰ame_°ride
 < 
TW5864_MJPEG_MIN_INTERVAL
){

1075 
	`TW_DBG
(
TW_DBG_ERR
, "j≥g i¡îvÆ %dÉº‹, >=%dms\n", 
ícode_∑øm
.
i_ˇ±uª_‰ame_°ride
, 
TW5864_MJPEG_MIN_INTERVAL
);

1076 
ªt
 = -
EINVAL
;

1079 if(
ícode_∑øm
.
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_IMAGE_WIDTH_MASK
) {

1080 if(
ícode_∑øm
.
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_IMAGE_HEIGHT_MASK
){

1081 if((
ícode_∑øm
.
i_image_width_mb_size
 =0Ë|| (ícode_∑øm.
i_image_height_mb_size
 == 0)

1082 || (
ícode_∑øm
.
i_image_width_mb_size
 > (
WIDTH_FRAME_D1_PAL
>>4))

1083 || (
ícode_∑øm
.
i_image_height_mb_size
 > (
HEIGHT_FRAME_D1_PAL
>>4))) {

1084 
	`TW_DBG
(
TW_DBG_ERR
, "width o∏highàîr‹(%d, %d)\n", 
ícode_∑øm
.
i_image_width_mb_size
,Éncode_∑øm.
i_image_height_mb_size
);

1085 
ªt
 = -
EINVAL
;

1088 
	`TW_DBG
(
TW_DBG_ERR
, "hight should be set\n");

1089 
ªt
 = -
EINVAL
;

1094 if(
ªt
 =
TW_OK
) {

1095 
ícode_¥›îty
->ícode_¥›îty.
ch™ge_mask_Êag
 = 
ícode_∑øm
.change_mask_flag;

1096 if(
ícode_∑øm
.
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_IMAGE_LEVEL_MASK
) {

1097 
ícode_¥›îty
->
›
->
	`£t_image_Àvñ
”ncode_¥›îty, 
ícode_∑øm
.
e_image_Àvñ
);

1099 if(
ícode_∑øm
.
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_IMAGE_WIDTH_MASK
) {

1100 if(
ícode_∑øm
.
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_IMAGE_HEIGHT_MASK
){

1101 
ícode_¥›îty
->
›
->
	`£t_mb_height
”ncode_¥›îty, 
ícode_∑øm
.
i_image_height_mb_size
<<4);

1102 
ícode_¥›îty
->
›
->
	`£t_mb_width
”ncode_¥›îty, 
ícode_∑øm
.
i_image_width_mb_size
<<4);

1105 if(
ícode_∑øm
.
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_CAPTURE_FRAME_STRIDE_MASK
) {

1106 
ícode_¥›îty
->
›
->
	`£t_ˇ±uª_°ride
”ncode_¥›îty, 
ícode_∑øm
.
i_ˇ±uª_‰ame_°ride
);

1108 if(
ícode_∑øm
.
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_CAPTURE_FRAME_NUMBER_MASK
) {

1109 
ícode_¥›îty
->
›
->
	`£t_ˇ±uª_numbî
”ncode_¥›îty, 
ícode_∑øm
.
i_ˇ±uª_‰ame_numbî
);

1111 if(
ícode_∑øm
.
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_CAPTURE_TYPE_MASK
) {

1112 
ícode_¥›îty
->
›
->
	`£t_ˇ±uª_ty≥
”ncode_¥›îty, 
ícode_∑øm
.
i_ˇ±uª_ty≥
);

1114 if(
ed_fsm
->
›
->
	`gë_cuº_°©e
”d_fsmË=
TW_ED_IDLE
) {

1115 if(
ícode_˘rﬁ
->
timî_id
 !
INVALIDTIMERID
){

1117 
	`DñëeSögÀFúeTimîJob
(
ícode_˘rﬁ
->
timî_id
);

1118 
ícode_˘rﬁ
->
timî_id
 = 
INVALIDTIMERID
;

1120 
ícode_˘rﬁ
->
	`timî_hook
(
j≥g_logic_ícode_ch™
);

1124 
TW_LOGIC_CHAN_ENABLE_SET
:

1125 
	`TW_DBG
(
TW_DBG_INFO
, "su•íd j≥g ch™√»%d\n", 
j≥g_logic_ícode_ch™
->
logic_ch™_id
);

1127 if(
	`©omic_ªad
(&
ícode_˘rﬁ
->
vÆid
)) {

1128 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 0);

1130 if(
ícode_˘rﬁ
->
timî_id
 !
INVALIDTIMERID
){

1132 
	`DñëeSögÀFúeTimîJob
(
ícode_˘rﬁ
->
timî_id
);

1133 
ícode_˘rﬁ
->
timî_id
 = 
INVALIDTIMERID
;

1135 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 1);

1138 if(
ícode_˘rﬁ
->
timî_id
 !
INVALIDTIMERID
){

1140 
	`DñëeSögÀFúeTimîJob
(
ícode_˘rﬁ
->
timî_id
);

1141 
ícode_˘rﬁ
->
timî_id
 = 
INVALIDTIMERID
;

1143 
	`drivî_gí_ªsume_evít
(
ed_tcb
, 1);

1145 
ªt
 = 
TW_OK
;

1147 
TW_LOGIC_CHAN_DISABLE_SET
:

1148 
	`TW_DBG
(
TW_DBG_INFO
, "ªsumêj≥g ch™√»%d\n", 
j≥g_logic_ícode_ch™
->
logic_ch™_id
);

1150 if(
	`©omic_ªad
(&
ícode_˘rﬁ
->
vÆid
)) {

1151 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 0);

1153 if(
ícode_˘rﬁ
->
timî_id
 !
INVALIDTIMERID
){

1154 
	`DñëeSögÀFúeTimîJob
(
ícode_˘rﬁ
->
timî_id
);

1155 
ícode_˘rﬁ
->
timî_id
 = 
INVALIDTIMERID
;

1157 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 1);

1160 if(
ícode_˘rﬁ
->
timî_id
 !
INVALIDTIMERID
){

1161 
	`DñëeSögÀFúeTimîJob
(
ícode_˘rﬁ
->
timî_id
);

1162 
ícode_˘rﬁ
->
timî_id
 = 
INVALIDTIMERID
;

1164 
	`drivî_gí_su•íd_evít
(
ed_tcb
, 1);

1166 
ªt
 = 
TW_OK
;

1169 
	`TW_DBG
(
TW_DBG_ERR
, "nÿsuch cmd %d\n", 
	`_IOC_NR
(
cmd
));

1170 
ªt
 = -
EBADRQC
;

1173  
ªt
;

1174 
	}
}

1176 
	$j≥g_ícode_hcd_öãrÁ˚_gë_°©e
(
ed_tcb_t
 *
ed_tcb
)

1178 
ªt
 = 
TW_ED_UNREGISTER
;

1180 if(
ed_tcb
 !
NULL
){

1181 
ªt
 = 
	`©omic_ªad
(&
ed_tcb
->
°©e
);

1184  
ªt
;

1185 
	}
}

1187 
hcd_öãrÁ˚_›î©i⁄
 
	gj≥g_ícode_hcd_öãrÁ˚_›
 = {

1188 .
›í
 = 
j≥g_ícode_hcd_öãrÁ˚_›í
,

1189 .
	g˛o£
 = 
j≥g_ícode_hcd_öãrÁ˚_˛o£
,

1190 .
	gsu•íd
 = 
j≥g_ícode_hcd_öãrÁ˚_su•íd
,

1191 .
	gªsume
 = 
j≥g_ícode_hcd_öãrÁ˚_ªsume
,

1192 .
	gio˘l
 = 
j≥g_ícode_hcd_öãrÁ˚_io˘l
,

1193 .
	ggë_°©e
 = 
j≥g_ícode_hcd_öãrÁ˚_gë_°©e
,

1196 
	$j≥g_logic_ícode_ch™_drivî_nŸify
(
tw_ªgi°î_node_t
 *
node
, *
¥iv
, 
tw_nŸify_msg
 *
msg
)

1198 if((
node
!=
NULL
Ë&& (
¥iv
!=NULL)){

1201 
	}
}

1203 
	$j≥g_logic_ícode_ch™_drivî_m©ch_id
(
tw_ªgi°î_node_t
 *
node
, *
¥iv
, 
logic_ch™_id
)

1205 
ªt
 = 
TW_ERR
;

1206 if((
node
!=
NULL
Ë&& (
¥iv
!=NULL)){

1207 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic
 = (tw_j≥g_logic_ícode_ch™_t*)
¥iv
;

1208 if(
j≥g_logic
->
logic_ch™_id
 ==Üogic_chan_id){

1209 
ªt
 = 
TW_OK
;

1213  
ªt
;

1214 
	}
}

1216 
	$tw_j≥g_ícode_¥›îty_öô
(
tw_j≥g_ícode_¥›îty_t
 *
ícode_¥›îty
)

1218 if(
ícode_¥›îty
) {

1219 
tw_mj≥g_ícode_∑øm_t
 *
ícode_∑øm
 = &
ícode_¥›îty
->encode_property;

1221 
ícode_∑øm
->
e_image_Àvñ
 = 
MJPEG_IMAGE_LEVEL_0
;

1222 
ícode_∑øm
->
i_ˇ±uª_‰ame_numbî
 = 0;

1223 
ícode_∑øm
->
i_ˇ±uª_‰ame_°ride
 = 0;

1224 
ícode_∑øm
->
i_ˇ±uª_ty≥
 = 0;

1225 
ícode_∑øm
->
i_image_width_mb_size
 = 0;

1226 
ícode_∑øm
->
i_image_height_mb_size
 = 0;

1227 
ícode_∑øm
->
ch™ge_mask_Êag
 = 0;

1231 
	}
}

1233 
	$tw_j≥g_ícode_¥›îty_ª£t
(
tw_j≥g_ícode_¥›îty_t
 *
ícode_¥›îty
)

1235 if(
ícode_¥›îty
) {

1236 
tw_mj≥g_ícode_∑øm_t
 *
ícode_∑øm
 = &
ícode_¥›îty
->encode_property;

1238 
ícode_∑øm
->
e_image_Àvñ
 = 
MJPEG_IMAGE_LEVEL_0
;

1239 
ícode_∑øm
->
i_ˇ±uª_‰ame_numbî
 = 0;

1240 
ícode_∑øm
->
i_ˇ±uª_‰ame_°ride
 = 0;

1241 
ícode_∑øm
->
i_ˇ±uª_ty≥
 = 0;

1242 
ícode_∑øm
->
i_image_width_mb_size
 = 0;

1243 
ícode_∑øm
->
i_image_height_mb_size
 = 0;

1244 
ícode_∑øm
->
ch™ge_mask_Êag
 = 0;

1248 
	}
}

1250 
u32
 
	$tw_j≥g_ícode_¥›îty_gë_image_Àvñ
(
tw_j≥g_ícode_¥›îty_t
 *
ícode_¥›îty
)

1252 if(
ícode_¥›îty
) {

1253 
tw_mj≥g_ícode_∑øm_t
 *
ícode_∑øm
 = &
ícode_¥›îty
->encode_property;

1255  
ícode_∑øm
->
e_image_Àvñ
;

1259 
	}
}

1260 
u32
 
	$tw_j≥g_ícode_¥›îty_gë_mb_width
(
tw_j≥g_ícode_¥›îty_t
 *
ícode_¥›îty
)

1262 if(
ícode_¥›îty
) {

1263 
tw_mj≥g_ícode_∑øm_t
 *
ícode_∑øm
 = &
ícode_¥›îty
->encode_property;

1265  
ícode_∑øm
->
i_image_width_mb_size
;

1269 
	}
}

1270 
u32
 
	$tw_j≥g_ícode_¥›îty_gë_mb_height
(
tw_j≥g_ícode_¥›îty_t
 *
ícode_¥›îty
)

1272 if(
ícode_¥›îty
) {

1273 
tw_mj≥g_ícode_∑øm_t
 *
ícode_∑øm
 = &
ícode_¥›îty
->encode_property;

1275  
ícode_∑øm
->
i_image_height_mb_size
;

1279 
	}
}

1280 
u32
 
	$tw_j≥g_ícode_¥›îty_gë_ˇ±uª_numbî
(
tw_j≥g_ícode_¥›îty_t
 *
ícode_¥›îty
)

1282 if(
ícode_¥›îty
) {

1283 
tw_mj≥g_ícode_∑øm_t
 *
ícode_∑øm
 = &
ícode_¥›îty
->encode_property;

1285  
ícode_∑øm
->
i_ˇ±uª_‰ame_numbî
;

1289 
	}
}

1290 
u32
 
	$tw_j≥g_ícode_¥›îty_gë_ˇ±uª_°ride
(
tw_j≥g_ícode_¥›îty_t
 *
ícode_¥›îty
)

1292 if(
ícode_¥›îty
) {

1293 
tw_mj≥g_ícode_∑øm_t
 *
ícode_∑øm
 = &
ícode_¥›îty
->encode_property;

1295  
ícode_∑øm
->
i_ˇ±uª_‰ame_°ride
;

1299 
	}
}

1300 
u32
 
	$tw_j≥g_ícode_¥›îty_gë_ˇ±uª_ty≥
(
tw_j≥g_ícode_¥›îty_t
 *
ícode_¥›îty
)

1302 if(
ícode_¥›îty
) {

1303 
tw_mj≥g_ícode_∑øm_t
 *
ícode_∑øm
 = &
ícode_¥›îty
->encode_property;

1305  
ícode_∑øm
->
i_ˇ±uª_ty≥
;

1309 
	}
}

1311 
	$tw_j≥g_ícode_¥›îty_£t_image_Àvñ
(
tw_j≥g_ícode_¥›îty_t
 *
ícode_¥›îty
, 
TW_MJPEG_IMAGE_LEVEL_E
 
Àvñ
)

1313 if(
ícode_¥›îty
) {

1314 
tw_mj≥g_ícode_∑øm_t
 *
ícode_∑øm
 = &
ícode_¥›îty
->encode_property;

1316 
ícode_∑øm
->
e_image_Àvñ
 = 
Àvñ
;

1320 
	}
}

1321 
	$tw_j≥g_ícode_¥›îty_£t_mb_width
(
tw_j≥g_ícode_¥›îty_t
 *
ícode_¥›îty
, 
u32
 
width
)

1323 if(
ícode_¥›îty
) {

1324 
tw_mj≥g_ícode_∑øm_t
 *
ícode_∑øm
 = &
ícode_¥›îty
->encode_property;

1326 
ícode_∑øm
->
i_image_width_mb_size
 = 
width
;

1330 
	}
}

1331 
	$tw_j≥g_ícode_¥›îty_£t_mb_height
(
tw_j≥g_ícode_¥›îty_t
 *
ícode_¥›îty
, 
u32
 
height
)

1333 if(
ícode_¥›îty
) {

1334 
tw_mj≥g_ícode_∑øm_t
 *
ícode_∑øm
 = &
ícode_¥›îty
->encode_property;

1336 
ícode_∑øm
->
i_image_height_mb_size
 = 
height
;

1340 
	}
}

1341 
	$tw_j≥g_ícode_¥›îty_£t_ˇ±uª_numbî
(
tw_j≥g_ícode_¥›îty_t
 *
ícode_¥›îty
, 
u32
 
numbî
)

1343 if(
ícode_¥›îty
) {

1344 
tw_mj≥g_ícode_∑øm_t
 *
ícode_∑øm
 = &
ícode_¥›îty
->encode_property;

1346 
ícode_∑øm
->
i_ˇ±uª_‰ame_numbî
 = 
numbî
;

1350 
	}
}

1351 
	$tw_j≥g_ícode_¥›îty_£t_ˇ±uª_°ride
(
tw_j≥g_ícode_¥›îty_t
 *
ícode_¥›îty
, 
u32
 
°ride
)

1353 if(
ícode_¥›îty
) {

1354 
tw_mj≥g_ícode_∑øm_t
 *
ícode_∑øm
 = &
ícode_¥›îty
->encode_property;

1356 
ícode_∑øm
->
i_ˇ±uª_‰ame_°ride
 = 
°ride
;

1360 
	}
}

1361 
	$tw_j≥g_ícode_¥›îty_£t_ˇ±uª_ty≥
(
tw_j≥g_ícode_¥›îty_t
 *
ícode_¥›îty
, 
u32
 
ty≥
)

1363 if(
ícode_¥›îty
) {

1364 
tw_mj≥g_ícode_∑øm_t
 *
ícode_∑øm
 = &
ícode_¥›îty
->encode_property;

1366 
ícode_∑øm
->
i_ˇ±uª_ty≥
 = 
ty≥
;

1370 
	}
}

1372 
tw_j≥g_ícode_¥›îty_›î©i⁄
 
	gj≥g_ícode_¥›îty_›
 = {

1373 .
öô
 = 
tw_j≥g_ícode_¥›îty_öô
,

1374 .
	gª£t
 = 
tw_j≥g_ícode_¥›îty_ª£t
,

1376 .
	ggë_ˇ±uª_numbî
 = 
tw_j≥g_ícode_¥›îty_gë_image_Àvñ
,

1377 .
	ggë_ˇ±uª_°ride
 = 
tw_j≥g_ícode_¥›îty_gë_ˇ±uª_°ride
,

1378 .
	ggë_ˇ±uª_ty≥
 = 
tw_j≥g_ícode_¥›îty_gë_ˇ±uª_ty≥
,

1379 .
	ggë_image_Àvñ
 = 
tw_j≥g_ícode_¥›îty_gë_image_Àvñ
,

1380 .
	ggë_mb_height
 = 
tw_j≥g_ícode_¥›îty_gë_mb_height
,

1381 .
	ggë_mb_width
 = 
tw_j≥g_ícode_¥›îty_gë_mb_width
,

1383 .
	g£t_ˇ±uª_numbî
 = 
tw_j≥g_ícode_¥›îty_£t_ˇ±uª_numbî
,

1384 .
	g£t_ˇ±uª_°ride
 = 
tw_j≥g_ícode_¥›îty_£t_ˇ±uª_°ride
,

1385 .
	g£t_ˇ±uª_ty≥
 = 
tw_j≥g_ícode_¥›îty_£t_ˇ±uª_ty≥
,

1386 .
	g£t_image_Àvñ
 = 
tw_j≥g_ícode_¥›îty_£t_image_Àvñ
,

1387 .
	g£t_mb_height
 = 
tw_j≥g_ícode_¥›îty_£t_mb_height
,

1388 .
	g£t_mb_width
 = 
tw_j≥g_ícode_¥›îty_£t_mb_width
,

1396 
	$öô_j≥g_ícode_¥›îty
(
tw_j≥g_ícode_¥›îty_t
 *
ícode_¥›îty
, 
tw_mj≥g_ícode_∑øm_t
 *
c⁄fig_∑øm
)

1398 if(
ícode_¥›îty
 && 
c⁄fig_∑øm
){

1399 
	`•ö_lock_öô
(&
ícode_¥›îty
->
lock
);

1400 
ícode_¥›îty
->
›
 = &
j≥g_ícode_¥›îty_›
;

1401 
ícode_¥›îty
->
›
->
	`öô
(encode_property);

1403 
ícode_¥›îty
->
›
->
	`£t_ˇ±uª_numbî
”ncode_¥›îty, 
c⁄fig_∑øm
->
i_ˇ±uª_‰ame_numbî
);

1404 
ícode_¥›îty
->
›
->
	`£t_ˇ±uª_°ride
”ncode_¥›îty, 
c⁄fig_∑øm
->
i_ˇ±uª_‰ame_°ride
);

1405 
ícode_¥›îty
->
›
->
	`£t_ˇ±uª_ty≥
”ncode_¥›îty, 
c⁄fig_∑øm
->
i_ˇ±uª_ty≥
);

1406 
ícode_¥›îty
->
›
->
	`£t_image_Àvñ
”ncode_¥›îty, 
c⁄fig_∑øm
->
e_image_Àvñ
);

1407 
ícode_¥›îty
->
›
->
	`£t_mb_width
”ncode_¥›îty, 
c⁄fig_∑øm
->
i_image_width_mb_size
);

1408 
ícode_¥›îty
->
›
->
	`£t_mb_height
”ncode_¥›îty, 
c⁄fig_∑øm
->
i_image_height_mb_size
);

1409 
ícode_¥›îty
->ícode_¥›îty.
ch™ge_mask_Êag
 = 
c⁄fig_∑øm
->change_mask_flag;

1413 
	}
}

1417 
	$vj_gë_chn_id
(
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
)

1419 
addr
;

1420 
u32
 
vÆ
;

1421 
dvm_chù_t
 *
chù
;

1423 if(!
buf_öfo
)

1425  -
EINVAL
;

1428 
chù
 = 
buf_öfo
->chip;

1429 if(
buf_öfo
->
∑th_id
 =
VIDEO_JPEG_PATH0
)

1431 
addr
 = 
JPEG_FRAME_VLD_0
;

1435 
addr
 = 
JPEG_FRAME_VLD_1
;

1437 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
addr
);

1438 
vÆ
 >>16 + 
buf_öfo
->
buf_id
 * 4;

1439 
vÆ
 &= 0xf;

1441  
vÆ
;

1442 
	}
}

1445 
	$vj_gë_chn_ªs
(
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
)

1447 
addr
;

1448 
u32
 
vÆ
;

1449 
dvm_chù_t
 *
chù
;

1451 if(!
buf_öfo
)

1453  -
EINVAL
;

1456 
chù
 = 
buf_öfo
->chip;

1457 if(
buf_öfo
->
∑th_id
 =
VIDEO_JPEG_PATH0
)

1459 
addr
 = 
JPEG_FRAME_VLD_0
;

1463 
addr
 = 
JPEG_FRAME_VLD_1
;

1465 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
addr
);

1466 
vÆ
 >>= 8;

1467 
vÆ
 &= 0xff;

1469  
vÆ
;

1470 
	}
}

1473 
	$vj_√w_‰ame_±r
(
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
)

1475 
addr
;

1476 
u32
 
vÆ
;

1477 
dvm_chù_t
 *
chù
;

1479 if(!
buf_öfo
)

1481  -
EINVAL
;

1484 
chù
 = 
buf_öfo
->chip;

1485 if(
buf_öfo
->
∑th_id
 =
VIDEO_JPEG_PATH0
)

1487 
addr
 = 
JPEG_FRAME_VLD_0
;

1491 
addr
 = 
JPEG_FRAME_VLD_1
;

1493 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
addr
);

1494 
vÆ
 >>= 4;

1495 
vÆ
 &= 0x3;

1497  
vÆ
;

1498 
	}
}

1500 
	$vj_‰ame_vÆid
(
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
)

1502 
addr
;

1503 
u32
 
vÆ
;

1504 
dvm_chù_t
 *
chù
;

1506 if(!
buf_öfo
)

1508  -
EINVAL
;

1511 
chù
 = 
buf_öfo
->chip;

1512 if(
buf_öfo
->
∑th_id
 =
VIDEO_JPEG_PATH0
)

1514 
addr
 = 
JPEG_FRAME_VLD_0
;

1518 
addr
 = 
JPEG_FRAME_VLD_1
;

1520 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
addr
);

1522  ((
vÆ
>>
buf_öfo
->
buf_id
) & 0x1);

1523 
	}
}

1525 
	$vj_ícode_íabÀ
(
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
)

1527 
addr
;

1528 
u32
 
vÆ
;

1529 
dvm_chù_t
 *
chù
;

1531 if(!
buf_öfo
)

1533  -
EINVAL
;

1537 
chù
 = 
buf_öfo
->chip;

1538 
addr
 = 
JPEG_ENABLE_JPEG
;

1540 
vÆ
 = (
buf_öfo
->
∑th_id
 * 
VIDEO_JPEG_PATH_BUF
 + buf_öfo->
buf_id
)<<1 | 0x01;

1541 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
addr
, 
vÆ
);

1544 
	}
}

1546 
	$vj_ícode_dißbÀ
(
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
)

1549 
	}
}

1552 
	$vj_gë_Àngth
(
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
)

1554 
addr
;

1555 
u32
 
vÆ
;

1556 
dvm_chù_t
 *
chù
;

1558 if(!
buf_öfo
)

1560  -
EINVAL
;

1563 
chù
 = 
buf_öfo
->chip;

1564 
addr
 = 
	`JPEG_LENGTH
(
buf_öfo
->
buf_id
 + buf_öfo->
∑th_id
 * 
VIDEO_JPEG_PATH_BUF
);

1565 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
addr
);

1567  
vÆ
;

1568 
	}
}

1570 
	$vj_gë_time°amp
(
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
)

1572 
addr
;

1573 
u32
 
vÆ
;

1574 
dvm_chù_t
 *
chù
;

1576 if(!
buf_öfo
)

1578  -
EINVAL
;

1581 
chù
 = 
buf_öfo
->chip;

1582 
addr
 = 
	`JPEG_TIMESTAMP
(
buf_öfo
->
buf_id
 + buf_öfo->
∑th_id
 * 
VIDEO_JPEG_PATH_BUF
);

1583 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
addr
);

1584 if((
buf_öfo
->
buf_id
 % 2)== 0)

1586 
vÆ
 &= 0xffff;

1590 
vÆ
 >>= 16;

1591 
vÆ
 &= 0xffff;

1594  
vÆ
;

1595 
	}
}

1597 
	$vj_j≥g_com∂©e
(
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
)

1599 
addr
;

1600 
u32
 
vÆ
;

1601 
dvm_chù_t
 *
chù
;

1603 if(!
buf_öfo
)

1605  -
EINVAL
;

1608 
chù
 = 
buf_öfo
->chip;

1609 
addr
 = 
JPEG_IRQ
;

1610 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
addr
);

1612  
vÆ
 & (1 <<(
buf_öfo
->
∑th_id
 * 
VIDEO_JPEG_PATH_BUF
 + buf_öfo->
buf_id
));

1613 
	}
}

1615 
	$vj_m¨k_ußbÀ
(
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
)

1617 
addr
;

1618 
u32
 
vÆ
;

1619 
dvm_chù_t
 *
chù
;

1621 if(!
buf_öfo
)

1623  -
EINVAL
;

1626 
chù
 = 
buf_öfo
->chip;

1627 
addr
 = 
JPEG_IRQ
;

1629 
vÆ
 = 1 <<(
buf_öfo
->
∑th_id
 * 
VIDEO_JPEG_PATH_BUF
 + buf_öfo->
buf_id
);

1631 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
addr
, 
vÆ
);

1634 
	}
}

1636 
	$vj_£t_qsˇÀ
(
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
, 
qsˇÀ
)

1638 
addr
;

1639 
dvm_chù_t
 *
chù
;

1641 if(!
buf_öfo
)

1643  -
EINVAL
;

1646 
chù
 = 
buf_öfo
->chip;

1647 
addr
 = 
JPEG_ENCODE_QSCALE
;

1648 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
addr
, 
qsˇÀ
);

1651 
	}
}

1654 
	$vj_£t_f‹m©
(
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
, 
f‹m©
)

1656 
addr
;

1657 
dvm_chù_t
 *
chù
;

1659 if(!
buf_öfo
)

1661  -
EINVAL
;

1664 
chù
 = 
buf_öfo
->chip;

1665 
addr
 = 
JPEG_VIDEO_FORMAT
;

1666 if(
f‹m©
 =
TW_VIDEO_STANDARD_PAL
)

1668 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
addr
, 0);

1672 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
addr
, 1);

1676 
	}
}

1678 
	$vj_gë_ﬁd_buf
(
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
)

1680 
addr
;

1681 
u32
 
vÆ
 = 0;

1682 
i
 = 0;

1683 
dvm_chù_t
 *
chù
;

1685 if(!
buf_öfo
)

1687  -
EINVAL
;

1690 
chù
 = 
buf_öfo
->chip;

1692 if(
buf_öfo
->
∑th_id
 =
VIDEO_JPEG_PATH0
)

1694 
addr
 = 
JPEG_FRAME_VLD_0
;

1698 
addr
 = 
JPEG_FRAME_VLD_1
;

1700 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
addr
);

1701 if((
vÆ
 & 0xf) != 0xf)

1703 
i
 = 0; i < 
VIDEO_JPEG_PATH_BUF
; i++)

1710 
vÆ
 = (val >> 4) & 0x3;

1711 
vÆ
 = ++val > 3 ? 0:val;

1714  
vÆ
;

1715 
	}
}

1717 
tw_vj_‹ig_buf_öfo_›î©i⁄
 
	gvj_buf_öfo_›
 = {

1718 .
gë_chn_id
 = 
vj_gë_chn_id
,

1719 .
	ggë_chn_ªs
 = 
vj_gë_chn_ªs
,

1720 .
	g√w_‰ame_±r
 = 
vj_√w_‰ame_±r
,

1721 .
	g‰ame_vÆid
 = 
vj_‰ame_vÆid
,

1722 .
	gíabÀ_ícode
 = 
vj_ícode_íabÀ
,

1723 .
	gdißbÀ_ícode
 = 
vj_ícode_dißbÀ
,

1724 .
	gcom∂©e
 = 
vj_j≥g_com∂©e
,

1725 .
	ggë_Àngth
 = 
vj_gë_Àngth
,

1726 .
	ggë_time°amp
 = 
vj_gë_time°amp
,

1727 .
	gm¨k_ußbÀ
 = 
vj_m¨k_ußbÀ
,

1728 .
	g£t_qsˇÀ
 = 
vj_£t_qsˇÀ
,

1729 .
	g£t_f‹m©
 = 
vj_£t_f‹m©
,

1730 .
	ggë_ﬁd_buf
 = 
vj_gë_ﬁd_buf
,

1733 
	$öô_tw5864_vj_¶Ÿ_‹ig_buf_öfo
(
dvm_chù_t
 *
chù
, 
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
, 
buf_id
)

1735 if(
buf_öfo
)

1737 
buf_öfo
->
›
 = &
vj_buf_öfo_›
;

1739 
	`©omic_£t
(&
buf_öfo
->
ª„ªn˚
, 0);

1740 
buf_öfo
->
buf_id
 = buf_id % 
VIDEO_JPEG_PATH_BUF
;

1741 if(
buf_id
 >
VIDEO_JPEG_PATH_BUF
)

1743 
buf_öfo
->
∑th_id
 = 1;

1747 
buf_öfo
->
∑th_id
 = 0;

1749 
buf_öfo
->
chù
 = chip;

1750 
buf_id
)

1753 0:
buf_öfo
->
∑ge_id
 = 0x09;;

1754 1:
buf_öfo
->
∑ge_id
 = 0x0b;;

1755 2:
buf_öfo
->
∑ge_id
 = 0x19;;

1756 3:
buf_öfo
->
∑ge_id
 = 0x1b;;

1757 4:
buf_öfo
->
∑ge_id
 = 0x29;;

1758 5:
buf_öfo
->
∑ge_id
 = 0x2b;;

1759 6:
buf_öfo
->
∑ge_id
 = 0x39;;

1760 7:
buf_öfo
->
∑ge_id
 = 0x3b;;

1762 
buf_öfo
->
ddr_phy_ba£
 = (buf_öfo->
∑ge_id
<<19Ë+ (
VIDEO_JPEG_DDR_BASE
<<2) - 0x80000;

1763 
buf_öfo
->
vÆid_time
 = 0;

1764 
buf_öfo
->
œ°_tick
 = 0;

1768 
	}
}

1770 
	$tw_5864_vj_°¨t_j≥g
(
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
)

1772 
ªt
 = 
TW_ERR
;

1775 if(
j≥g_logic_ch™
)

1777 
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

1778 
tw_vb_‰ame_tcb_queue_t
 *
‰ame_queue
;

1780 
ícode_c⁄åﬁ
 = &
j≥g_logic_ch™
->encode_control;

1781 
ícode_c⁄åﬁ
->
œ°_time_tick
 = 
	`gë_tw_sy°em_tick
();

1782 
‰ame_queue
 = &
j≥g_logic_ch™
->
j≥g_‰ame_queue
;

1783 if(
ícode_c⁄åﬁ
->
ˇ±uª_Êags
 & (
TW_MJPEG_ENCODE_PARAM_CAPTURE_TYPE_TIMER
 | 
TW_MJPEG_ENCODE_PARAM_CAPTURE_TYPE_USER
)) {

1784 
‰ame_queue
->
›
->
	`åy_gë_cuº_¥odu˚r_‰om_poﬁ
(‰ame_queue, &
j≥g_logic_ch™
->
poﬁ
);

1785 if(!
‰ame_queue
->
cuº_¥odu˚r
){

1786 
	`TW_DBG
(
TW_DBG_ERR
, "no bufferÖool for jpeg!\n");

1787  -
ENOMEM
;

1790 
‰ame_queue
->
cuº_¥odu˚r
->
‰ame_Êags
 = 
ícode_c⁄åﬁ
->
ˇ±uª_Êags
;

1793 
	`TW_DBG
(
TW_DBG_DEBUG
, "set valid flags,Öut serviceÑequestÅo queue!\n");

1794 
	`drivî_gí_dñivî_evít
(&
j≥g_logic_ch™
->
›íed_logic_ch™_ed
, 1);

1796 
ªt
 = 
TW_OK
;

1799  
ªt
;

1800 
	}
}

1802 
	$tw5864_vj_move_j≥g
(
tw_j≥g_logic_ícode_ch™_t
 *
logic_j≥g_chn
)

1804 
tw_vb_‰ame_tcb_t
 *
‰ame
;

1805 
tw_vb_‰ame_tcb_queue_t
 *
‰ame_queue
;

1806 
tw_vb_∑ckë_tcb_t
 *
∑ckë
;

1807 
tw_vb_∑ckë_tcb_queue_t
 *
∑ckë_queue
;

1808 
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
;

1809 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
;

1810 
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

1811 
dma_addr_t
 
ãmp_dma_addr
;

1812 
d¥am_∑ge_node_t
 *
d¥am_∑ge
;

1815 
ícode_c⁄åﬁ
 = &
logic_j≥g_chn
->encode_control;

1816 
chù_d¥am_c⁄åﬁÀr
 = &
logic_j≥g_chn
->
chù
->chip_dpram_controller;

1817 
bur°_öãrÁ˚
 = &
chù_d¥am_c⁄åﬁÀr
->burst_interface;

1818 
bur°_öãrÁ˚
->
›
->
	`˛ór_bur°_d⁄e
(burst_interface);

1819 
d¥am_∑ge
 = 
logic_j≥g_chn
->dpram_page;

1821 
‰ame_queue
 = &
logic_j≥g_chn
->
j≥g_‰ame_queue
;

1822 
‰ame
 = 
‰ame_queue
->
cuº_¥odu˚r
;

1823 if(
‰ame
->
‰ame_is_îr
) {

1824  -
ENOMEM
;

1827 
∑ckë_queue
 = &
‰ame
->
vb_∑ckë_queue
;

1828 
∑ckë
 = 
∑ckë_queue
->
cuº_¥odu˚r
;

1829 i‡(
∑ckë
 =
NULL
) {

1830 
∑ckë_queue
->
›
->
	`åy_gë_cuº_¥odu˚r_‰om_poﬁ
’ackë_queue, 
‰ame
->
poﬁ
);

1831 
∑ckë
 = 
∑ckë_queue
->
cuº_¥odu˚r
;

1832 i‡(
∑ckë
 =
NULL
) {

1834 
‰ame
->
‰ame_is_îr
 = 1;

1835  -
ENOMEM
;

1837 
∑ckë
->
›
->
	`dma_m≠
’ackë, 
DMA_FROM_DEVICE
);

1838 
∑ckë
->
∑ylﬂd_Àn
 = 0;

1840 
ãmp_dma_addr
 = 
∑ckë
->
dma_addr
 +Öackë->
∑ylﬂd_Àn
;

1848 if(
ícode_c⁄åﬁ
->
£˘i⁄_numbî
 > 1){

1849 if(
	`©omic_ªad
(&
ícode_c⁄åﬁ
->
fú°_∑ckë
)){

1851 
bur°_öãrÁ˚
->
›
->
	`dma_ho°_to_§am_ªad
(bur°_öãrÁ˚, 
d¥am_∑ge
, 
ãmp_dma_addr
, 
ícode_c⁄åﬁ
->
£˘i⁄_Àn
 - 
∑ckë
->
∑ylﬂd_Àn
);

1852 
∑ckë
->
∑ylﬂd_Àn
 +
ícode_c⁄åﬁ
->
£˘i⁄_Àn
 -Öacket->payload_len;

1854 
bur°_öãrÁ˚
->
›
->
	`dma_ho°_to_§am_ªad
(bur°_öãrÁ˚, 
d¥am_∑ge
, 
ãmp_dma_addr
, 
ícode_c⁄åﬁ
->
£˘i⁄_Àn
);

1855 
∑ckë
->
∑ylﬂd_Àn
 +
ícode_c⁄åﬁ
->
£˘i⁄_Àn
;

1859 
bur°_öãrÁ˚
->
›
->
	`dma_ho°_to_§am_ªad
(bur°_öãrÁ˚, 
d¥am_∑ge
, 
ãmp_dma_addr
, 
ícode_c⁄åﬁ
->
èûî_Àn
);

1860 
∑ckë
->
∑ylﬂd_Àn
 +
ícode_c⁄åﬁ
->
èûî_Àn
;

1865 
	}
}

1867 
	$tw_5864_vj_ªad_∑øm
(
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
)

1869 
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

1870 
tw_vb_‰ame_tcb_queue_t
 *
‰ame_queue
;

1871 
tw_vb_‰ame_tcb_t
 *
‰ame
;

1872 
tw_vb_∑ckë_tcb_t
 *
∑ckë
;

1873 
tw_vb_∑ckë_tcb_queue_t
 *
∑ckë_queue
;

1874 
tw_vj_‹ig_buf_öfo_t
 *
‹ig_buf_öfo
;

1875 
d¥am_∑ge_node_t
 *
d¥am_∑ge
;

1876 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
;

1877 
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
;

1878 
tw_time°amp_t
 *
time°amp
;

1879 
dvm_chù_t
 *
chù
;

1880 
tw5864_vj_bus_t
 *
vj_bus
;

1881 
u32
 
hódî_Àn
 = 0, 
Æign
 = (Ë- ((
ext_h264_«l_bô°ªam_t
) % 4);

1883 if(!
j≥g_logic_ch™
)

1885 
	`TW_DBG
(
TW_DBG_ERR
, "nullÖointer\n");

1887  -
EINVAL
;

1891 
chù
 = 
j≥g_logic_ch™
->chip;

1892 
vj_bus
 = &
chù
->
chù_vj_bus
;

1893 
time°amp
 = &
j≥g_logic_ch™
->timestamp;

1894 
‹ig_buf_öfo
 = 
j≥g_logic_ch™
->
phy_video_¶Ÿ
->orig_buf_info;

1895 
ícode_c⁄åﬁ
 = &
j≥g_logic_ch™
->encode_control;

1896 
‰ame_queue
 = &
j≥g_logic_ch™
->
j≥g_‰ame_queue
;

1897 
‰ame
 = 
‰ame_queue
->
cuº_¥odu˚r
;

1898 if(!
‰ame
){

1899 
	`¥ötk
("%s,%d: fømêi†nuŒ\n", 
__FUNCTION__
, 
__LINE__
);

1900  -
EINVAL
;

1902 
time°amp
->
›
->
	`£t_time°amp
—ime°amp, 
‹ig_buf_öfo
->›->
	`gë_time°amp
(‹ig_buf_öfo), 
__FILE__
);

1903 
‰ame
->
‰ame_Àn
 = 0;

1904 
‰ame
->
‰ame_ty≥
 = 
MJPEG_FRAME_TYPE
;

1905 
‰ame
->
‰ame_numbî
 = 
j≥g_logic_ch™
->
i_‰ame_£rül
;

1906 
‰ame
->
time°amp
 =Åime°amp->
›
->
	`gë_time°amp
(timestamp);

1909 
chù_d¥am_c⁄åﬁÀr
 = &
j≥g_logic_ch™
->
chù
->chip_dpram_controller;

1910 if(!
chù_d¥am_c⁄åﬁÀr
->
›
->
	`is_ˇn_submô_move_d©a_‰om_ddr_to_d¥am_£rvi˚_ªq
(chù_d¥am_c⁄åﬁÀr, &
j≥g_logic_ch™
->
d¥am_∑ge
)){

1911 
	`¥ötk
("%s,%d:nÿd¥am_∑ge!\n", 
__FILE__
, 
__LINE__
);

1912  -
ENOMEM
;

1914 
bur°_öãrÁ˚
 = &
chù_d¥am_c⁄åﬁÀr
->burst_interface;

1916 
d¥am_∑ge
 = 
j≥g_logic_ch™
->dpram_page;

1917 
∑ckë_queue
 = &
‰ame
->
vb_∑ckë_queue
;

1918 
∑ckë
 = 
∑ckë_queue
->
cuº_¥odu˚r
;

1919 i‡(
∑ckë
 =
NULL
) {

1920 
∑ckë_queue
->
›
->
	`åy_gë_cuº_¥odu˚r_‰om_poﬁ
’ackë_queue, &
j≥g_logic_ch™
->
poﬁ
);

1921 
∑ckë
 = 
∑ckë_queue
->
cuº_¥odu˚r
;

1922 i‡(
∑ckë
 =
NULL
) {

1924 
‰ame
->
‰ame_is_îr
 = 1;

1927 
∑ckë
->
c⁄sumî_Àn
 = 
Æign
;

1928 
hódî_Àn
 = 
	`tw5864_jifi_hódî
(
∑ckë
->
d©a
 + (
ext_h264_«l_bô°ªam_t
Ë+ 
Æign
, 
j≥g_logic_ch™
);

1929 
	`gí_ext_mj≥g_hódî
(
∑ckë
->
d©a
 + 
Æign
, 
‹ig_buf_öfo
->
›
->
	`gë_Àngth
(‹ig_buf_öfoË+ 
hódî_Àn
);

1930 
∑ckë
->
∑ylﬂd_Àn
 = 
hódî_Àn
 + (
ext_h264_«l_bô°ªam_t
Ë+ 
Æign
;

1934 
ícode_c⁄åﬁ
->
tŸÆ_‰ame_Àn
 = 
‹ig_buf_öfo
->
›
->
	`gë_Àngth
(‹ig_buf_öfoË+ 
hódî_Àn
 + (
ext_h264_«l_bô°ªam_t
Ë+ 
Æign
;

1935 
ícode_c⁄åﬁ
->
‰ame_ba£_addr
 = 
hódî_Àn
 + (
ext_h264_«l_bô°ªam_t
Ë+ 
Æign
;

1936 
ícode_c⁄åﬁ
->
have_ªcv_£˘i⁄_numbî
 = 0;

1937 
ícode_c⁄åﬁ
->
£˘i⁄_Àn
 = 
d¥am_∑ge
->
›
->
	`gë_∑ge_size
(dpram_page);

1938 
ícode_c⁄åﬁ
->
£˘i⁄_numbî
 = (ícode_c⁄åﬁ->
tŸÆ_‰ame_Àn
Ë/Éncode_c⁄åﬁ->
£˘i⁄_Àn
;

1939 
ícode_c⁄åﬁ
->
èûî_Àn
 = (ícode_c⁄åﬁ->
tŸÆ_‰ame_Àn
Ë%Éncode_c⁄åﬁ->
£˘i⁄_Àn
;

1941 
‰ame
->
‰ame_Àn
 = 
ícode_c⁄åﬁ
->
tŸÆ_‰ame_Àn
;

1943 if(
ícode_c⁄åﬁ
->
èûî_Àn
){

1944 
ícode_c⁄åﬁ
->
£˘i⁄_numbî
++;

1946 
ícode_c⁄åﬁ
->
èûî_Àn
 =Éncode_c⁄åﬁ->
£˘i⁄_Àn
;

1949 
	`¥ötk
("%d: dd∏o‡0x%08x,Üí 0x%08x, se˘i⁄ %d,Åaûî %d,Öagê%d\n", 
__LINE__
,

1950 
‹ig_buf_öfo
->
ddr_phy_ba£
,

1951 
‹ig_buf_öfo
->
›
->
	`gë_Àngth
(orig_buf_info),

1952 
ícode_c⁄åﬁ
->
£˘i⁄_numbî
,

1953 
ícode_c⁄åﬁ
->
èûî_Àn
,

1954 
‹ig_buf_öfo
->
∑ge_id
);

1956 if(
∑ckë
) {

1957 
∑ckë
->
›
->
	`dma_m≠
’ackë, 
DMA_TO_DEVICE
);

1959 
	`©omic_£t
(&
ícode_c⁄åﬁ
->
fú°_∑ckë
, 1);

1960 
bur°_öãrÁ˚
->
›
->
	`°¨t_n⁄block_å™s„r_‰om_ddr_to_§am
(bur°_öãrÁ˚, 
d¥am_∑ge
,

1961 (
‹ig_buf_öfo
->
ddr_phy_ba£
),

1962 
‹ig_buf_öfo
->
∑ge_id
, (
ícode_c⁄åﬁ
->
£˘i⁄_Àn
 - 
hódî_Àn
 - (
ext_h264_«l_bô°ªam_t
Ë- 
Æign
), 
DDR_CHIP_B
);

1964 
	}
}

1966 
	$tw5864_vj_com∂ëe_nŸify
(
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
)

1968 
	`drivî_gí_dñivî_evít
(&
j≥g_logic_ch™
->
›íed_logic_ch™_ed
, 1);

1971 
	}
}

1973 
	$tw5864_vj_timeout_hook
(*
c⁄ãxt
)

1975 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
 = (tw_j≥g_logic_ícode_ch™_à*)
c⁄ãxt
;

1976 
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

1977 
tw_vb_‰ame_tcb_queue_t
 *
‰ame_queue
;

1979 
	`TW_DBG
(
TW_DBG_ERR
, "encodingÅimeout!\n");

1980 
ícode_c⁄åﬁ
 = &
j≥g_logic_ch™
->encode_control;

1981 
ícode_c⁄åﬁ
->
timeout_id
 = 
INVALIDTIMERID
;

1982 
‰ame_queue
 = &
j≥g_logic_ch™
->
j≥g_‰ame_queue
;

1983 if(
‰ame_queue
->
cuº_¥odu˚r
){

1984 
‰ame_queue
->
cuº_¥odu˚r
->
‰ame_is_îr
 = 1;

1986 
	`drivî_gí_timeout_evít
(&
j≥g_logic_ch™
->
›íed_logic_ch™_ed
, 1);

1988  
TW_OK
;

1989 
	}
}

1991 
	$tw5864_vj_timî_hook
(*
c⁄ãxt
)

1993 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
 = (tw_j≥g_logic_ícode_ch™_à*)
c⁄ãxt
;

1994 
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

1995 
tw5864_vj_bus_t
 *
vj_bus
;

1996 
tw_vb_‰ame_tcb_queue_t
 *
‰ame_queue
;

1997 
tw_vb_‰ame_tcb_t
 *
‰ame
;

1999 
ícode_c⁄åﬁ
 = &
j≥g_logic_ch™
->encode_control;

2000 
vj_bus
 = &
j≥g_logic_ch™
->
chù
->
chù_vj_bus
;

2001 
ícode_c⁄åﬁ
->
timî_id
 = 
INVALIDTIMERID
;

2003 
‰ame_queue
 = &
j≥g_logic_ch™
->
j≥g_‰ame_queue
;

2004 
‰ame_queue
->
›
->
	`åy_gë_cuº_¥odu˚r_‰om_poﬁ
(‰ame_queue, &
j≥g_logic_ch™
->
poﬁ
);

2005 
‰ame
 = 
‰ame_queue
->
cuº_¥odu˚r
;

2006 if(
‰ame
){

2007 if(
ícode_c⁄åﬁ
->
ˇ±uª_Êags
 & (
TW_MJPEG_ENCODE_PARAM_CAPTURE_TYPE_TIMER
 | 
TW_MJPEG_ENCODE_PARAM_CAPTURE_TYPE_USER
)) {

2008 
‰ame
->
‰ame_Êags
 = 
ícode_c⁄åﬁ
->
ˇ±uª_Êags
;

2010 
‰ame
->
‰ame_Êags
 = 0;

2011 
‰ame
->
‰ame_is_îr
 = 1;

2014 
ícode_c⁄åﬁ
->
timî_id
 = 
	`AddSögÀFúeTimîJob
(1,Éncode_c⁄åﬁ->
timî_hook
, 
j≥g_logic_ch™
);

2015 if(
ícode_c⁄åﬁ
->
timî_id
 =
ADDJOBERROR
) {

2016 
	`TW_DBG
(
TW_DBG_ERR
, "addÅimerÉrror!\n");

2022 
	`drivî_gí_dñivî_evít
(&
j≥g_logic_ch™
->
›íed_logic_ch™_ed
, 1);

2026 
	}
}

2028 
	$tw5864_vj_upd©e_ru¬ög_c⁄fig
(
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
, 
tw_mj≥g_ícode_∑øm_t
 *
ícode_c⁄fig
)

2030 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
;

2031 
tw_video_bus_t
 *
video_bus
;

2032 
chù_drivî_t
 *
chù_drivî
;

2033 
n‹m
;

2035 if(!
ícode_c⁄åﬁ
 || !
ícode_c⁄fig
) {

2036 
	`TW_DBG
(
TW_DBG_DEBUG
, "nullÖointer\n");

2037  -
EINVAL
;

2040 
j≥g_logic_ch™
 = 
	`to_gë_tw_j≥g_ícode_ch™_wôh_ícode_c⁄åﬁ
(
ícode_c⁄åﬁ
);

2042 
chù_drivî
 = 
j≥g_logic_ch™
->
chù
->chip_driver;

2043 
video_bus
 = &
chù_drivî
->video_bus;

2045 if(!
ícode_c⁄fig
->
ch™ge_mask_Êag
) {

2048 
	`TW_DBG
(
TW_DBG_INFO
, "jpeg configure changed\n");

2051 
n‹m
 = 
video_bus
->
›
->
	`gë_video_°™d¨d
(video_bus);

2052 if(
ícode_c⁄fig
->
ch™ge_mask_Êag
 & (
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_IMAGE_WIDTH_MASK
 | 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_IMAGE_HEIGHT_MASK
)) {

2053 
ícode_c⁄åﬁ
->
cuº_size
 = 
	`VIDEO_SIZE_FROM_WIDTH_HEIGHT
(
ícode_c⁄fig
->
i_image_width_mb_size
,

2054 
ícode_c⁄fig
->
i_image_height_mb_size
,

2055 
n‹m
);

2056 
ícode_c⁄fig
->
i_image_width_mb_size
 = 
	`VIDEO_SIZE_TO_WIDTH
(
VIDEO_SIZE_FROM_VJ
, 
ícode_c⁄åﬁ
->
cuº_size
, 
n‹m
);

2057 
ícode_c⁄fig
->
i_image_height_mb_size
 = 
	`VIDEO_SIZE_TO_HEIGHT
(
VIDEO_SIZE_FROM_VJ
, 
ícode_c⁄åﬁ
->
cuº_size
, 
n‹m
);

2058 
j≥g_logic_ch™
->
phy_video_¶Ÿ
->
video_size
 = 
ícode_c⁄åﬁ
->
cuº_size
;

2059 
	`TW_DBG
(
TW_DBG_INFO
, "upd©êj≥g videÿsizêtÿ%d, (%d, %d)\n", 
ícode_c⁄åﬁ
->
cuº_size
,

2060 
ícode_c⁄fig
->
i_image_width_mb_size
,Éncode_c⁄fig->
i_image_height_mb_size
);

2062 if(
ícode_c⁄fig
->
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_CAPTURE_FRAME_STRIDE_MASK
) {

2063 if(
ícode_c⁄fig
->
i_ˇ±uª_‰ame_°ride
 < 
TW5864_MJPEG_MIN_INTERVAL
) {

2064 
ícode_c⁄fig
->
i_ˇ±uª_‰ame_°ride
 = 
TW5864_MJPEG_MIN_INTERVAL
;

2066 
ícode_c⁄åﬁ
->
cuº_öãrvÆ
 = 
ícode_c⁄fig
->
i_ˇ±uª_‰ame_°ride
 / 
MS_PER_TICK
;

2068 if(
ícode_c⁄fig
->
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_IMAGE_LEVEL_MASK
) {

2069 
ícode_c⁄fig
->
e_image_Àvñ
) {

2071 
MJPEG_IMAGE_LEVEL_0
:

2072 
ícode_c⁄åﬁ
->
cuº_qsˇÀ
 = 0x10;

2074 
MJPEG_IMAGE_LEVEL_1
:

2075 
ícode_c⁄åﬁ
->
cuº_qsˇÀ
 = 0x20;

2077 
MJPEG_IMAGE_LEVEL_2
:

2078 
ícode_c⁄åﬁ
->
cuº_qsˇÀ
 = 0x30;

2080 
MJPEG_IMAGE_LEVEL_3
:

2081 
ícode_c⁄åﬁ
->
cuº_qsˇÀ
 = 0x40;

2083 
MJPEG_IMAGE_LEVEL_4
:

2084 
ícode_c⁄åﬁ
->
cuº_qsˇÀ
 = 0x50;

2088 if(
ícode_c⁄fig
->
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_CAPTURE_FRAME_NUMBER_MASK
) {

2090 
ícode_c⁄åﬁ
->
ˇ±uª_À·_cou¡
 = 
ícode_c⁄fig
->
i_ˇ±uª_‰ame_numbî
;

2094 if(
ícode_c⁄fig
->
ch™ge_mask_Êag
 & 
TW_MJPEG_ENCODE_PARAM_ENABLE_CHANGE_CAPTURE_TYPE_MASK
) {

2095 
ícode_c⁄åﬁ
->
ˇ±uª_Êags
 = 
ícode_c⁄fig
->
i_ˇ±uª_ty≥
;

2096 if(!(
ícode_c⁄åﬁ
->
ˇ±uª_Êags
 & 
TW_MJPEG_ENCODE_PARAM_CAPTURE_TYPE_USER
)) {

2097 
ícode_c⁄åﬁ
->
ˇ±uª_À·_cou¡
 = 0;

2101 
ícode_c⁄fig
->
ch™ge_mask_Êag
 = 0x0;

2103  
TW_OK
;

2104 
	}
}

2106 
	$öô_j≥g_ícode_c⁄åﬁ
(
tw_j≥g_ícode_c⁄åﬁ_t
 *
j≥g_c⁄åﬁ
)

2108 if(
j≥g_c⁄åﬁ
)

2110 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
;

2111 
tw_video_bus_t
 *
video_bus
;

2112 
chù_drivî_t
 *
chù_drivî
;

2114 
j≥g_logic_ch™
 = 
	`to_gë_tw_j≥g_ícode_ch™_wôh_ícode_c⁄åﬁ
(
j≥g_c⁄åﬁ
);

2115 
chù_drivî
 = 
j≥g_logic_ch™
->
chù
->chip_driver;

2116 
video_bus
 = &
chù_drivî
->video_bus;

2118 
j≥g_c⁄åﬁ
->
œ°_jiffõs
 = 
jiffõs
;

2119 
j≥g_c⁄åﬁ
->
‰ame_öãrvÆ
 = 0;

2120 
j≥g_c⁄åﬁ
->
lo°_‰ame
 = 0;

2122 
j≥g_c⁄åﬁ
->
cuº_öãrvÆ
 = (
deÁu…_j≥g_ícode_¥›îty
.
i_ˇ±uª_‰ame_°ride
 / 
MS_PER_TICK
);

2123 
j≥g_c⁄åﬁ
->
ˇ±uª_Êags
 = 
deÁu…_j≥g_ícode_¥›îty
.
i_ˇ±uª_ty≥
;

2125 
deÁu…_j≥g_ícode_¥›îty
.
e_image_Àvñ
) {

2127 
MJPEG_IMAGE_LEVEL_0
:

2128 
j≥g_c⁄åﬁ
->
cuº_qsˇÀ
 = 0x10;

2130 
MJPEG_IMAGE_LEVEL_1
:

2131 
j≥g_c⁄åﬁ
->
cuº_qsˇÀ
 = 0x20;

2133 
MJPEG_IMAGE_LEVEL_2
:

2134 
j≥g_c⁄åﬁ
->
cuº_qsˇÀ
 = 0x30;

2136 
MJPEG_IMAGE_LEVEL_3
:

2137 
j≥g_c⁄åﬁ
->
cuº_qsˇÀ
 = 0x40;

2139 
MJPEG_IMAGE_LEVEL_4
:

2140 
j≥g_c⁄åﬁ
->
cuº_qsˇÀ
 = 0x50;

2144 
j≥g_c⁄åﬁ
->
cuº_size
 = 
TW_VIDEO_SIZE_D1
;

2146 
j≥g_c⁄åﬁ
->
tŸÆ_‰ame_Àn
 = 0;

2147 
j≥g_c⁄åﬁ
->
timeout_id
 = 
INVALIDTIMERID
;

2148 
j≥g_c⁄åﬁ
->
timî_id
 = 
INVALIDTIMERID
;

2149 
	`©omic_£t
(&
j≥g_c⁄åﬁ
->
fú°_∑ckë
, 0);

2150 
j≥g_c⁄åﬁ
->
‰ame_ba£_addr
 = 0;

2151 
j≥g_c⁄åﬁ
->
£˘i⁄_numbî
 = 0;

2152 
j≥g_c⁄åﬁ
->
have_ªcv_£˘i⁄_numbî
 = 0;

2153 
j≥g_c⁄åﬁ
->
£˘i⁄_Àn
 = 0;

2154 
j≥g_c⁄åﬁ
->
èûî_Àn
 = 0;

2156 
j≥g_c⁄åﬁ
->
œ°_time_tick
 = 0;

2157 
j≥g_c⁄åﬁ
->
ˇ±uª_À·_cou¡
 = 1;

2159 
j≥g_c⁄åﬁ
->
°¨t_j≥g
 = 
tw_5864_vj_°¨t_j≥g
;

2160 
j≥g_c⁄åﬁ
->
move_j≥g
 = 
tw5864_vj_move_j≥g
;

2161 
j≥g_c⁄åﬁ
->
ªad_∑øm
 = 
tw_5864_vj_ªad_∑øm
;

2162 
j≥g_c⁄åﬁ
->
nŸify
 = 
tw5864_vj_com∂ëe_nŸify
;

2163 
j≥g_c⁄åﬁ
->
timeout_hook
 = 
tw5864_vj_timeout_hook
;

2164 
j≥g_c⁄åﬁ
->
timî_hook
 = 
tw5864_vj_timî_hook
;

2165 
j≥g_c⁄åﬁ
->
upd©e_ru¬ög_c⁄fig
 = 
tw5864_vj_upd©e_ru¬ög_c⁄fig
;

2167  -
EINVAL
;

2171 
	}
}

2174 
	$tw5864_j≥g_phy_video_¶Ÿ_öô
(
tw_j≥g_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
phy_¶Ÿ_id
)

2176 if(
phy_video_¶Ÿ
 !
NULL
){

2177 
	`©omic_£t
(&
phy_video_¶Ÿ
->
°¨t_Êag
, 0);

2178 
phy_video_¶Ÿ
->
phy_¶Ÿ_id
 =Öhy_slot_id;

2179 
phy_video_¶Ÿ
->
video_size
 = 
TW_VIDEO_SIZE_D1
;

2180 
phy_video_¶Ÿ
->
‹ig_buf_öfo
 = 
NULL
;

2181 
	`öô_ªgi°î_èbÀ_node
(&
phy_video_¶Ÿ
->
logic_ch™_èbÀ
);

2182 
	`öô_ªgi°î_èbÀ_node
(&
phy_video_¶Ÿ
->
›íed_logic_ch™_èbÀ
);

2184 
	}
}

2186 
tw_j≥g_phy_video_¶Ÿ_›î©i⁄
 
	gtw5864_j≥g_phy_video_¶Ÿ_›
 = {

2187 .
öô
 = 
tw5864_j≥g_phy_video_¶Ÿ_öô
,

2190 
	$öô_tw5864_j≥g_phy_video_¶Ÿ
(
tw_j≥g_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
, 
¶Ÿ_id
)

2192 if(
phy_video_¶Ÿ
 !
NULL
){

2193 
phy_video_¶Ÿ
->
›
 = &
tw5864_j≥g_phy_video_¶Ÿ_›
;

2194 
phy_video_¶Ÿ
->
›
->
	`öô
’hy_video_¶Ÿ, 
¶Ÿ_id
);

2196 
	}
}

2198 
	$tw5864_mj≥g_∑th_is_busy
(
tw5864_mj≥g_∑th_t
 *
mj≥g_∑th
)

2200 
dvm_chù_t
 *
chù
;

2201 
u32
 
vÆ
 = 0;

2202 
chù
 = 
	`to_gë_chù_wôh_chù_vj_bus
(
mj≥g_∑th
->
vj_bus
);

2204 if(
mj≥g_∑th
->
∑th_id
 =
VIDEO_JPEG_PATH0
){

2205 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
VIDEO_JPEG_CMD_PATH0
);

2206  (
vÆ
 &(
JPEG_CMD_SINGLE
 | 
JPEG_CMD_BURST
));

2209 
vÆ
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
VIDEO_JPEG_CMD_PATH1
);

2210  (
vÆ
 &(
JPEG_CMD_SINGLE
 | 
JPEG_CMD_BURST
));

2214 
	}
}

2216 
	$tw5864_mj≥g_∑th_sögÀ_ˇp
(
tw5864_mj≥g_∑th_t
 *
mj≥g_∑th
, 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
)

2218 
dvm_chù_t
 *
chù
;

2219 
tw_j≥g_phy_video_¶Ÿ_t
 *
phy_¶Ÿ
;

2220 
u32
 
f‹m©
 = 0x0;

2221 
downsˇÀ
 = 0;

2224 
chù
 = 
j≥g_logic_ch™
->chip;

2225 
phy_¶Ÿ
 = 
j≥g_logic_ch™
->
phy_video_¶Ÿ
;

2226 
phy_¶Ÿ
->
video_size
) {

2228 
	`TW_DBG
(
TW_DBG_ERR
, "videÿsizê%d unsuµ‹t, ch™gêtÿD1\n", 
phy_¶Ÿ
->
video_size
);

2229 
TW_VIDEO_SIZE_D1
:

2230 
f‹m©
 = 0x0;

2232 
TW_VIDEO_SIZE_HALF_D1
:

2233 
f‹m©
 = 0x0;

2234 
downsˇÀ
 = 1;

2236 
TW_VIDEO_SIZE_CIF
:

2237 
f‹m©
 = 0x3;

2238 
downsˇÀ
 = 1;

2240 
TW_VIDEO_SIZE_QCIF
:

2241 
f‹m©
 = 0x1;

2242 
downsˇÀ
 = 1;

2246 if(
mj≥g_∑th
->
∑th_id
 =
VIDEO_JPEG_PATH0
){

2247 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
VIDEO_JPEG_CMD_PATH0
, 
JPEG_CMD_SINGLE


2248 | 
	`JPEG_CMD_CHANNEL
(
phy_¶Ÿ
->
phy_¶Ÿ_id
)

2249 | 
	`JPEG_CMD_FORMAT
(
f‹m©
Ë| (
downsˇÀ
 ?
JPEG_CMD_DSAMPLE
:0));

2250 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
JPEG_CAP_PATH0_ENABLE
, 0x1);

2253 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
VIDEO_JPEG_CMD_PATH1
, 
JPEG_CMD_SINGLE


2254 | 
	`JPEG_CMD_CHANNEL
(
phy_¶Ÿ
->
phy_¶Ÿ_id
)

2255 | 
	`JPEG_CMD_FORMAT
(
f‹m©
Ë| (
downsˇÀ
 ?
JPEG_CMD_DSAMPLE
:0));

2256 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
JPEG_CAP_PATH1_ENABLE
, 0x1);

2259 
mj≥g_∑th
->
time_id
 = 
	`AddSögÀFúeTimîJob
(
TIMER_200MS
, mj≥g_∑th->
›
->
timeout_hook
, mjpeg_path);

2260 if(
mj≥g_∑th
->
time_id
 =
ADDJOBERROR
) {

2261 
	`TW_DBG
(
TW_DBG_ERR
, "addÅimerÉrror!\n");

2263 
	}
}

2265 
	$tw5864_mj≥g_∑th_bur°_ˇp
(
tw5864_mj≥g_∑th_t
 *
mj≥g_∑th
, 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ch™
)

2267 
dvm_chù_t
 *
chù
;

2268 
tw_j≥g_phy_video_¶Ÿ_t
 *
phy_¶Ÿ
;

2269 
u32
 
f‹m©
 = 0x0;

2271 
chù
 = 
j≥g_logic_ch™
->chip;

2272 
phy_¶Ÿ
 = 
j≥g_logic_ch™
->
phy_video_¶Ÿ
;

2273 
phy_¶Ÿ
->
video_size
) {

2275 
TW_VIDEO_SIZE_D1
:

2276 
f‹m©
 = 0x0;

2277 
TW_VIDEO_SIZE_HALF_D1
:

2278 
TW_VIDEO_SIZE_CIF
:

2279 
f‹m©
 = 0x11;

2281 if(
mj≥g_∑th
->
∑th_id
 =
VIDEO_JPEG_PATH0
){

2282 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
VIDEO_JPEG_CMD_PATH0
, 
JPEG_CMD_BURST


2283 | 
	`JPEG_CMD_CHANNEL
(
phy_¶Ÿ
->
phy_¶Ÿ_id
)

2284 | 
	`JPEG_CMD_FORMAT
(
f‹m©
Ë| ((
phy_¶Ÿ
->
video_size
 =
TW_VIDEO_SIZE_CIF
Ë?
JPEG_CMD_DSAMPLE
:0));

2287 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
VIDEO_JPEG_CMD_PATH1
, 
JPEG_CMD_BURST


2288 | 
	`JPEG_CMD_CHANNEL
(
phy_¶Ÿ
->
phy_¶Ÿ_id
)

2289 | 
	`JPEG_CMD_FORMAT
(
f‹m©
Ë| ((
phy_¶Ÿ
->
video_size
 =
TW_VIDEO_SIZE_CIF
Ë?
JPEG_CMD_DSAMPLE
:0));

2291 
	}
}

2293 
	$tw5864_mj≥g_∑th_vÆid_nŸify
(
tw5864_mj≥g_∑th_t
 *
mj≥g_∑th
)

2295 
tw_j≥g_logic_ícode_ch™_t
 *
logic_j≥g_chn
;

2296 
j≥g_£rvi˚_queue_t
 *
£rvi˚_queue
;

2297 
j≥g_£rvi˚_tcb_t
 *
£rvi˚_tcb
;

2298 
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
;

2299 
tw5864_vj_bus_t
 *
vj_bus
;

2300 
u32
 
‹ig_buf_id
 = 0;

2302 if(
mj≥g_∑th
){

2303 if(((
mj≥g_∑th
->
cuºít_ícodög_±r
 =mj≥g_∑th->
cuºít_‰ame_±r
)

2304 || ((
mj≥g_∑th
->
cuºít_‰ame_±r
 + 1 - mj≥g_∑th->
cuºít_ícodög_±r
Ë< 
VIDEO_JPEG_PATH_BUF
))){

2305 
vj_bus
 = 
mj≥g_∑th
->vj_bus;

2306 
£rvi˚_queue
 = &
vj_bus
->
j≥g_£rvi˚_queue
;

2307 
£rvi˚_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(service_queue);

2308 
£rvi˚_tcb
 = 
£rvi˚_queue
->
cuº_c⁄sumî
;

2309 if(
£rvi˚_tcb
){

2310 
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

2312 
logic_j≥g_chn
 = 
	`to_gë_tw_j≥g_ícode_ch™_wôh_ícode_ªque°_tcb
(
£rvi˚_tcb
);

2313 
	`drivî_gí_dñivî_evít
(&
logic_j≥g_chn
->
›íed_logic_ch™_ed
, 1);

2314 
mj≥g_∑th
->
logic_ícodög_èbÀ
[mj≥g_∑th->
cuºít_‰ame_±r
] = 
logic_j≥g_chn
;

2315 
mj≥g_∑th
->
›
->
	`sögÀ_ˇp
(mj≥g_∑th, 
logic_j≥g_chn
);

2316 
‹ig_buf_id
 = 
mj≥g_∑th
->
cuºít_‰ame_±r
 + mj≥g_∑th->
∑th_id
 * 
VIDEO_JPEG_PATH_BUF
;

2317 
buf_öfo
 = 
vj_bus
->
vj_‹ig_buf
 + 
‹ig_buf_id
;

2318 
buf_öfo
->
œ°_tick
 = 
	`gë_tw_sy°em_tick
();

2321 
ícode_c⁄åﬁ
 = &
logic_j≥g_chn
->encode_control;

2322 if(
ícode_c⁄åﬁ
->
ˇ±uª_Êags
 & 
TW_MJPEG_ENCODE_PARAM_CAPTURE_TYPE_USER
) {

2323 
ícode_c⁄åﬁ
->
ˇ±uª_À·_cou¡
--;

2324 if(
ícode_c⁄åﬁ
->
ˇ±uª_À·_cou¡
 < 0) {

2325 
ícode_c⁄åﬁ
->
ˇ±uª_À·_cou¡
 = 0;

2329 
mj≥g_∑th
->
cuºít_‰ame_±r
++;

2330 if(
mj≥g_∑th
->
cuºít_‰ame_±r
 >
VIDEO_JPEG_PATH_BUF
) {

2331 
mj≥g_∑th
->
cuºít_‰ame_±r
 = 0;

2333 
£rvi˚_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(service_queue);

2337 
	}
}

2339 
	$tw5864_mj≥g_∑th_°¨t_ícodög
(*
c⁄ãxt
)

2341 
tw5864_mj≥g_∑th_t
 *
mj≥g_∑th
 = (tw5864_mj≥g_∑th_à*)
c⁄ãxt
;

2343 if(
mj≥g_∑th
) {

2344 
u32
 
‹ig_buf_id
;

2345 
tw5864_vj_bus_t
 *
vj_bus
;

2346 
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
;

2347 
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

2348 
tw_video_bus_t
 *
video_bus
;

2349 
chù_drivî_t
 *
chù_drivî
;

2350 
tw_j≥g_logic_ícode_ch™_t
 *
logic_j≥g_chn
 = 
mj≥g_∑th
->
logic_ícodög_èbÀ
[mj≥g_∑th->
cuºít_ícodög_±r
];

2352 
vj_bus
 = 
mj≥g_∑th
->vj_bus;

2353 
‹ig_buf_id
 = 
mj≥g_∑th
->
cuºít_ícodög_±r
 + mj≥g_∑th->
∑th_id
 * 
VIDEO_JPEG_PATH_BUF
;

2354 
buf_öfo
 = 
vj_bus
->
vj_‹ig_buf
 + 
‹ig_buf_id
;

2356 if(
logic_j≥g_chn
) {

2357 
	`©omic_£t
(&
vj_bus
->
busy
, 1);

2358 
ícode_c⁄åﬁ
 = &
logic_j≥g_chn
->encode_control;

2360 
buf_öfo
->
›
->
	`£t_qsˇÀ
(buf_öfo, 
ícode_c⁄åﬁ
->
cuº_qsˇÀ
);

2361 
chù_drivî
 = 
logic_j≥g_chn
->
chù
->chip_driver;

2362 
video_bus
 = &
chù_drivî
->video_bus;

2364 if(
video_bus
->
›
->
	`gë_video_°™d¨d
(video_busË=
TW_VIDEO_STANDARD_PAL
) {

2365 
buf_öfo
->
›
->
	`£t_f‹m©
(buf_info, 0);

2367 
buf_öfo
->
›
->
	`£t_f‹m©
(buf_info, 1);

2369 
buf_öfo
->
vÆid_time
 = 
	`gë_tw_sy°em_tick
(Ë- buf_öfo->
œ°_tick
;

2370 
buf_öfo
->
œ°_tick
 = 
	`gë_tw_sy°em_tick
();

2371 
ícode_c⁄åﬁ
->
timeout_id
 = 
	`AddSögÀFúeTimîJob
(
TIMER_200MS
,Éncode_c⁄åﬁ->
timeout_hook
, 
logic_j≥g_chn
);

2372 if(
ícode_c⁄åﬁ
->
timeout_id
 =
ADDJOBERROR
) {

2373 
	`¥ötk
("%s,%d:áddÅimîÉº‹!\n", 
__FUNCTION__
, 
__LINE__
);

2374 
ícode_c⁄åﬁ
->
timeout_id
 = 
INVALIDTIMERID
;

2376 
	`chù_ªque°_úq
(
logic_j≥g_chn
->
chù
, 
IRQ_JPEG_TYPE_INTR
, 
vj_bus
->
›
->
úq
, "JPEG", (*)
mj≥g_∑th
);

2378 
buf_öfo
->
›
->
	`íabÀ_ícode
(buf_info);

2380 
mj≥g_∑th
->
cuºít_ícodög_±r
++;

2381 if(
mj≥g_∑th
->
cuºít_ícodög_±r
 >
VIDEO_JPEG_PATH_BUF
) {

2382 
mj≥g_∑th
->
cuºít_ícodög_±r
 = 0;

2389 
	}
}

2391 
	$tw5864_mj≥g_∑th_sync_∑th
(
tw5864_mj≥g_∑th_t
 *
mj≥g_∑th
)

2393 if(
mj≥g_∑th
) {

2395 
	}
}

2397 
	$tw5864_mj≥g_∑th_ˇp_timeout_hook
(*
c⁄ãxt
)

2399 
tw5864_mj≥g_∑th_t
 *
mj≥g_∑th
 = (tw5864_mj≥g_∑th_à*)
c⁄ãxt
;

2401 if(
mj≥g_∑th
) {

2402 
	`TW_DBG
(
TW_DBG_ERR
, "j≥gÖ©h %dÅimeout\n", 
mj≥g_∑th
->
∑th_id
);

2403 
mj≥g_∑th
->
time_id
 = 
INVALIDTIMERID
;

2405  
TW_OK
;

2408  -
EINVAL
;

2409 
	}
}

2411 
tw5864_mj≥g_∑th_›î©i⁄_t
 
	gtw5864_mj≥g_∑th_›
 = {

2412 .
is_busy
 = 
tw5864_mj≥g_∑th_is_busy
,

2413 .
	gsögÀ_ˇp
 = 
tw5864_mj≥g_∑th_sögÀ_ˇp
,

2414 .
	gbur°_ˇp
 = 
tw5864_mj≥g_∑th_bur°_ˇp
,

2415 .
	gvÆid_nŸify
 = 
tw5864_mj≥g_∑th_vÆid_nŸify
,

2416 .
	g°¨t_ícodög
 = 
tw5864_mj≥g_∑th_°¨t_ícodög
,

2417 .
	gsync_∑th
 = 
tw5864_mj≥g_∑th_sync_∑th
,

2418 .
	gtimeout_hook
 = 
tw5864_mj≥g_∑th_ˇp_timeout_hook
,

2421 
	$tw5864_vj_bus_öô
(
tw5864_vj_bus_t
 *
vj_bus
)

2423 
i
, 
j
;

2424 
tw_j≥g_phy_video_¶Ÿ_t
 *
phy_¶Ÿ
;

2425 
tw5864_mj≥g_∑th_t
 *
mj≥g_∑th
;

2426 
dvm_chù_t
 *
chù
;

2427 
tw_vj_‹ig_buf_öfo_t
 *
‹ig_buf
;

2428 
pos
;

2430 if(
vj_bus
)

2432 
vj_bus
->
time_id
 = 
INVALIDTIMERID
;

2433 
vj_bus
->
cuºít_Âs
 = 0;

2434 
vj_bus
->
i_°©ic_£c⁄d_cou¡î
 = 0;

2435 
vj_bus
->
i_ãmp_Âs_cou¡î
 = 0;

2437 
chù
 = 
	`to_gë_chù_wôh_chù_vj_bus
(
vj_bus
);

2438 
	`•ö_lock_öô
(&
vj_bus
->
lock
);

2439 
vj_bus
->
›
->
	`ª£t
(vj_bus);

2440 
	`öô_j≥g_£rvi˚_queue
(&
vj_bus
->
j≥g_£rvi˚_queue
);

2442 
	`©omic_£t
(&
vj_bus
->
busy
, 0);

2443 
vj_bus
->
∑th_swôch
 = 0;

2445 
i
 = 0; i < (
VIDEO_JPEG_PATH_BUF
 * 2); i++){

2446 
	`öô_tw5864_vj_¶Ÿ_‹ig_buf_öfo
(
chù
, &
vj_bus
->
vj_‹ig_buf
[
i
], i);

2448 
i
 = 0; i < 
VIDEO_JPEG_PATH_CNT
; i++){

2449 
‹ig_buf
 = &
vj_bus
->
vj_‹ig_buf
[
i
 * 
VIDEO_JPEG_PATH_BUF
];

2450 
pos
 = 
‹ig_buf
->
›
->
	`√w_‰ame_±r
(orig_buf);

2451 
mj≥g_∑th
 = &
vj_bus
->mj≥g_∑th[
i
];

2452 
mj≥g_∑th
->
∑th_id
 = 
i
;

2453 
mj≥g_∑th
->
time_id
 = 
INVALIDTIMERID
;

2454 
mj≥g_∑th
->
dñay_time_id
 = 
INVALIDTIMERID
;

2455 
mj≥g_∑th
->
vj_bus
 = vj_bus;

2456 
mj≥g_∑th
->
cuºít_‰ame_±r
 = 
pos
;

2457 
mj≥g_∑th
->
cuºít_ícodög_±r
 = 
pos
;

2458 
mj≥g_∑th
->
cuºít_c⁄sumî_±r
 = 
pos
;

2459 
j
 = 0; j < 
VIDEO_JPEG_PATH_BUF
; j++) {

2460 
mj≥g_∑th
->
logic_ícodög_èbÀ
[
j
] = 
NULL
;

2462 
mj≥g_∑th
->
›
 = &
tw5864_mj≥g_∑th_›
;

2465 if(
vj_bus
->
›
) {

2466 
vj_bus
->
time_id
 = 
	`AddF‹FúeTimîJob
(1, vj_bus->
›
->
°¨t_m⁄ô‹_èsk
, vj_bus);

2467 if(
vj_bus
->
time_id
 =
ADDJOBERROR
)

2469 
	`¥ötk
("%s.%d:áddÅimî hookÉº\n", 
__FUNCTION__
, 
__LINE__
);

2474 
phy_¶Ÿ
 = 
vj_bus
->
phy_video_¶Ÿ
;

2475 
i
 = 0; i < 
TW5864_PHY_VD_CHAN_NUMBER
; i++){

2476 
	`öô_tw5864_j≥g_phy_video_¶Ÿ
(
phy_¶Ÿ
, 
i
);

2477 
phy_¶Ÿ
++;

2479 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
JPEG_MODULE_REST
, 0xe0000000);

2480 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
JPEG_CAP_TIMEOUT
, 0x01000000);

2484 
	}
}

2486 
	$tw5864_vj_bus_ªÀa£
(
tw5864_vj_bus_t
 *
vj_bus
)

2488 if(!
vj_bus
) {

2492 if(
vj_bus
->
›
) {

2493 
vj_bus
->
›
->
	`°›_m⁄ô‹_èsk
(vj_bus);

2495 
	`ªmove_j≥g_£rvi˚_queue
(&
vj_bus
->
j≥g_£rvi˚_queue
);

2496 
	}
}

2498 
	$öô_j≥g_£rvi˚_tcb_wôh_nuŒ
(
j≥g_£rvi˚_tcb_t
 *
ícode_ªque°_tcb
)

2500 
tw5864_vj_bus_t
 *
vj_bus
;

2501 
j≥g_£rvi˚_queue_t
 *
£rvi˚_queue
;

2503 if(
ícode_ªque°_tcb
){

2504 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic
 = 
	`to_gë_tw_j≥g_ícode_ch™_wôh_ícode_ªque°_tcb
(
ícode_ªque°_tcb
);

2505 
tcb_node_t
 *
£rvi˚_tcb
 = &
ícode_ªque°_tcb
->service_tcb;

2506 
£rvi˚_tcb
->
›
 = &
tcb_node_›
;

2507 
£rvi˚_tcb
->
›
->
	`öô
(service_tcb);

2508 
£rvi˚_tcb
->
›
->
	`£t_¥iv
(£rvi˚_tcb, 
ícode_ªque°_tcb
);

2509 
ícode_ªque°_tcb
->
c⁄ãxt
 = 
j≥g_logic
;

2510 
ícode_ªque°_tcb
->
ty≥
 = 
DVM_CHIP_REQ_SINGLE
;

2511 
ícode_ªque°_tcb
->
ªq_ˇŒback
 = 
NULL
;

2513 
vj_bus
 = &
j≥g_logic
->
chù
->
chù_vj_bus
;

2514 
£rvi˚_queue
 = &
vj_bus
->
j≥g_£rvi˚_queue
;

2517 
	}
}

2519 
	$j≥g_£rvi˚_queue_öô
(
j≥g_£rvi˚_queue_t
 *
j≥g_£rvi˚_queue
)

2521 if(
j≥g_£rvi˚_queue
 !
NULL
){

2522 
tcb_node_queue_t
 *
£rvi˚_queue
 = &
j≥g_£rvi˚_queue
->service_queue;

2523 
	`•ö_lock_öô
(&
j≥g_£rvi˚_queue
->
lock
);

2524 
	`©omic_£t
(&
j≥g_£rvi˚_queue
->
j≥g_ªsour˚
, 8);

2525 
£rvi˚_queue
->
›
 = &
tcb_node_queue_›
;

2526 
£rvi˚_queue
->
›
->
	`öô
(service_queue);

2527 
j≥g_£rvi˚_queue
->
cuº_c⁄sumî
 = 
NULL
;

2529 
	}
}

2531 
	$j≥g_£rvi˚_queue_gë_queue_cuº_íåy_numbî
(
j≥g_£rvi˚_queue_t
 *
j≥g_£rvi˚_queue
)

2533 
ªt
 = 0;

2534 if(
j≥g_£rvi˚_queue
 !
NULL
){

2535 
tcb_node_queue_t
 *
£rvi˚_queue
 = &
j≥g_£rvi˚_queue
->service_queue;

2536 
ªt
 = 
£rvi˚_queue
->
›
->
	`gë_queue_cuº_íåy_numbî
(service_queue);

2538  
ªt
;

2539 
	}
}

2541 
	$j≥g_£rvi˚_queue_put_£rvi˚_ªque°_öto_queue
(
j≥g_£rvi˚_queue_t
 *
j≥g_£rvi˚_queue
, 
j≥g_£rvi˚_tcb
 *
£rvi˚_tcb
)

2543 if((
j≥g_£rvi˚_queue
!=
NULL
Ë&& (
£rvi˚_tcb
!=NULL)){

2544 
tcb_node_queue_t
 *
£rvi˚_queue
 = &
j≥g_£rvi˚_queue
->service_queue;

2545 
Êags
;

2546 
cuº_íåy_numbî
;

2548 
	`•ö_lock_úqßve
(&
j≥g_£rvi˚_queue
->
lock
, 
Êags
);

2549 
cuº_íåy_numbî
 = 
j≥g_£rvi˚_queue
->
›
->
	`gë_queue_cuº_íåy_numbî
(jpeg_service_queue);

2550 if((
cuº_íåy_numbî
==0Ë&& (
j≥g_£rvi˚_queue
->
cuº_c⁄sumî
==
NULL
)){

2551 if(
£rvi˚_tcb
->
ªq_ˇŒback
) {

2552 
£rvi˚_tcb
->
	`ªq_ˇŒback
(£rvi˚_tcb->
c⁄ãxt
);

2554 
j≥g_£rvi˚_queue
->
cuº_c⁄sumî
 = 
£rvi˚_tcb
;

2556 
£rvi˚_queue
->
›
->
	`put
(£rvi˚_queue, &
£rvi˚_tcb
->service_tcb);

2559 
	`•ö_u∆ock_úqª°‹e
(&
j≥g_£rvi˚_queue
->
lock
, 
Êags
);

2561 
	}
}

2563 
	$j≥g_£rvi˚_queue_put_£rvi˚_ªque°_öto_queue_hódî
(
j≥g_£rvi˚_queue_t
 *
j≥g_£rvi˚_queue
, 
j≥g_£rvi˚_tcb_t
 *
£rvi˚_tcb
)

2565 if((
j≥g_£rvi˚_queue
!=
NULL
Ë&& (
£rvi˚_tcb
!=NULL)){

2566 
tcb_node_queue_t
 *
£rvi˚_queue
 = &
j≥g_£rvi˚_queue
->service_queue;

2567 
Êags
;

2568 
cuº_íåy_numbî
;

2570 
	`•ö_lock_úqßve
(&
j≥g_£rvi˚_queue
->
lock
, 
Êags
);

2571 
cuº_íåy_numbî
 = 
j≥g_£rvi˚_queue
->
›
->
	`gë_queue_cuº_íåy_numbî
(jpeg_service_queue);

2572 if((
cuº_íåy_numbî
==0Ë&& (
j≥g_£rvi˚_queue
->
cuº_c⁄sumî
==
NULL
)){

2573 if(
£rvi˚_tcb
->
ªq_ˇŒback
) {

2574 
£rvi˚_tcb
->
	`ªq_ˇŒback
(£rvi˚_tcb->
c⁄ãxt
);

2576 
j≥g_£rvi˚_queue
->
cuº_c⁄sumî
 = 
£rvi˚_tcb
;

2578 
£rvi˚_queue
->
›
->
	`put_hódî
(£rvi˚_queue, &
£rvi˚_tcb
->service_tcb);

2580 
	`•ö_u∆ock_úqª°‹e
(&
j≥g_£rvi˚_queue
->
lock
, 
Êags
);

2582 
	}
}

2584 
	$j≥g_£rvi˚_queue_åy_gë_cuº_c⁄sumî_‰om_queue
(
j≥g_£rvi˚_queue_t
 *
j≥g_£rvi˚_queue
)

2586 if(
j≥g_£rvi˚_queue
 !
NULL
){

2587 
tcb_node_queue_t
 *
£rvi˚_queue
 = &
j≥g_£rvi˚_queue
->service_queue;

2589 if(
j≥g_£rvi˚_queue
->
cuº_c⁄sumî
 =
NULL
){

2590 if(
£rvi˚_queue
->
›
 !
NULL
){

2591 
tcb_node_t
 *
ãmp_node
;

2592 
£rvi˚_queue
->
›
->
	`åy_gë
(£rvi˚_queue, &
ãmp_node
);

2593 if(
ãmp_node
 !
NULL
){

2594 
j≥g_£rvi˚_queue
->
cuº_c⁄sumî
 = 
	`to_gë_j≥g_£rvi˚_tcb_wôh_£rvi˚_tcb
(
ãmp_node
);

2599 
	}
}

2601 
	$j≥g_£rvi˚_queue_ªÀa£_cuº_c⁄sumî
(
j≥g_£rvi˚_queue_t
 *
j≥g_£rvi˚_queue
)

2603 if(
j≥g_£rvi˚_queue
 !
NULL
){

2604 
Êags
;

2605 
	`•ö_lock_úqßve
(&
j≥g_£rvi˚_queue
->
lock
, 
Êags
);

2606 
j≥g_£rvi˚_queue
->
cuº_c⁄sumî
 = 
NULL
;

2607 
	`•ö_u∆ock_úqª°‹e
(&
j≥g_£rvi˚_queue
->
lock
, 
Êags
);

2609 
	}
}

2611 
	$j≥g_åiggî_≥ndög_£rvi˚_ªque°
(
j≥g_£rvi˚_queue_t
 *
j≥g_£rvi˚_queue
)

2613 if(
j≥g_£rvi˚_queue
 !
NULL
){

2614 
j≥g_£rvi˚_tcb_t
 *
cuº_c⁄sumî
;

2615 
Êags
;

2617 
	`•ö_lock_úqßve
(&
j≥g_£rvi˚_queue
->
lock
, 
Êags
);

2618 
j≥g_£rvi˚_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(jpeg_service_queue);

2619 
cuº_c⁄sumî
 = 
j≥g_£rvi˚_queue
->curr_consumer;

2620 if(
cuº_c⁄sumî
 !
NULL
){

2621 if(
cuº_c⁄sumî
->
ªq_ˇŒback
) {

2622 
cuº_c⁄sumî
->
	`ªq_ˇŒback
(cuº_c⁄sumî->
c⁄ãxt
);

2625 
	`•ö_u∆ock_úqª°‹e
(&
j≥g_£rvi˚_queue
->
lock
, 
Êags
);

2627 
	}
}

2629 
j≥g_£rvi˚_queue_›î©i⁄
 
	gj≥g_£rvi˚_queue_›
 = {

2630 .
öô
 = 
j≥g_£rvi˚_queue_öô
,

2631 .
	ggë_queue_cuº_íåy_numbî
 = 
j≥g_£rvi˚_queue_gë_queue_cuº_íåy_numbî
,

2632 .
	gput_£rvi˚_ªque°_öto_queue
 = 
j≥g_£rvi˚_queue_put_£rvi˚_ªque°_öto_queue
,

2633 .
	gput_£rvi˚_ªque°_öto_queue_hódî
 = 
j≥g_£rvi˚_queue_put_£rvi˚_ªque°_öto_queue_hódî
,

2634 .
	gåy_gë_cuº_c⁄sumî_‰om_queue
 = 
j≥g_£rvi˚_queue_åy_gë_cuº_c⁄sumî_‰om_queue
,

2635 .
	gªÀa£_cuº_c⁄sumî
 = 
j≥g_£rvi˚_queue_ªÀa£_cuº_c⁄sumî
,

2636 .
	gåiggî_≥ndög_£rvi˚_ªque°
 = 
j≥g_åiggî_≥ndög_£rvi˚_ªque°
,

2639 
	$öô_j≥g_£rvi˚_queue
(
j≥g_£rvi˚_queue_t
 * 
j≥g_£rvi˚_queue
)

2641 if(
j≥g_£rvi˚_queue
 !
NULL
){

2642 
j≥g_£rvi˚_queue
->
›
 = &
j≥g_£rvi˚_queue_›
;

2643 
j≥g_£rvi˚_queue
->
›
->
	`öô
(jpeg_service_queue);

2645 
	}
}

2647 
	$ªmove_j≥g_£rvi˚_queue
(
j≥g_£rvi˚_queue_t
 * 
j≥g_£rvi˚_queue
)

2649 if(
j≥g_£rvi˚_queue
 !
NULL
){

2650 
j≥g_£rvi˚_queue
->
›
->
	`gë_queue_cuº_íåy_numbî
(jpeg_service_queue)){

2651 
j≥g_£rvi˚_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(jpeg_service_queue);

2652 if(
j≥g_£rvi˚_queue
->
cuº_c⁄sumî
 =
NULL
){

2655 
j≥g_£rvi˚_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(jpeg_service_queue);

2659 
	}
}

2661 
	$j≥g_logic_ch™_ª•⁄£_ddr_bur°_d⁄e_i§
(
úq
, *
c⁄ãxt
)

2663 
tw_vb_‰ame_tcb_queue_t
 *
‰ame_queue
;

2664 
tw_vb_‰ame_tcb_t
 *
‰ame
;

2665 
tw_vb_∑ckë_tcb_queue_t
 *
∑ckë_queue
;

2666 
d¥am_∑ge_node_t
 *
d¥am_∑ge
;

2667 
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
;

2668 
tw_vj_‹ig_buf_öfo_t
 *
‹ig_buf_öfo
;

2669 
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

2670 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
;

2671 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ícode_ch™
 = (tw_j≥g_logic_ícode_ch™_à*)
c⁄ãxt
;

2673 if(
j≥g_logic_ícode_ch™
 !
NULL
){

2674 
‹ig_buf_öfo
 = 
j≥g_logic_ícode_ch™
->
phy_video_¶Ÿ
->orig_buf_info;

2675 
chù_d¥am_c⁄åﬁÀr
 = &
j≥g_logic_ícode_ch™
->
chù
->chip_dpram_controller;

2676 
d¥am_∑ge
 = 
j≥g_logic_ícode_ch™
->dpram_page;

2677 
bur°_öãrÁ˚
 = &
chù_d¥am_c⁄åﬁÀr
->burst_interface;

2678 
ícode_c⁄åﬁ
 = &
j≥g_logic_ícode_ch™
->encode_control;

2680 
‰ame_queue
 = &
j≥g_logic_ícode_ch™
->
j≥g_‰ame_queue
;

2681 
‰ame
 = 
‰ame_queue
->
cuº_¥odu˚r
;

2682 
ícode_c⁄åﬁ
->
	`move_j≥g
(
j≥g_logic_ícode_ch™
);

2683 if(
‰ame
->
‰ame_is_îr
) {

2684 
	`TW_DBG
(
TW_DBG_ERR
, "frame isÉrror, discard\n");

2685 
‰ame_queue
->
›
->
	`ªÀa£_cuº_¥odu˚r
(‰ame_queue, &
j≥g_logic_ícode_ch™
->
poﬁ
);

2687 
ícode_c⁄åﬁ
->
lo°_‰ame
++;

2689 
ícode_c⁄åﬁ
->
	`nŸify
(
j≥g_logic_ícode_ch™
);

2690 
	`chù_‰ì_úq
(
j≥g_logic_ícode_ch™
->
chù
, 
IRQ_BURST_TYPE_INTR
, jpeg_logic_encode_chan);

2691 
chù_d¥am_c⁄åﬁÀr
 = &
j≥g_logic_ícode_ch™
->
chù
->chip_dpram_controller;

2692 
chù_d¥am_c⁄åﬁÀr
->
›
->
	`ack_ªad_mj≥g_ªq
(chù_d¥am_c⁄åﬁÀr, 
j≥g_logic_ícode_ch™
);

2693  
IRQ_HANDLED
;

2695 if(
	`©omic_ªad
(&
ícode_c⁄åﬁ
->
fú°_∑ckë
)){

2696 
	`©omic_£t
(&
ícode_c⁄åﬁ
->
fú°_∑ckë
, 0);

2698 
ícode_c⁄åﬁ
->
‰ame_ba£_addr
 =Éncode_c⁄åﬁ->
£˘i⁄_Àn
 -Éncode_control->frame_base_addr;

2700 
ícode_c⁄åﬁ
->
‰ame_ba£_addr
 +ícode_c⁄åﬁ->
£˘i⁄_Àn
;

2702 
ícode_c⁄åﬁ
->
have_ªcv_£˘i⁄_numbî
++;

2703 if(!(
ícode_c⁄åﬁ
->
have_ªcv_£˘i⁄_numbî
&0x1)){

2704 
∑ckë_queue
 = &
‰ame
->
vb_∑ckë_queue
;

2705 if(
∑ckë_queue
->
cuº_¥odu˚r
 !
NULL
){

2706 
∑ckë_queue
->
cuº_¥odu˚r
->
›
->
	`dma_unm≠
’ackë_queue->cuº_¥odu˚r, 
DMA_FROM_DEVICE
);

2708 
∑ckë_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(packet_queue);

2710 
ícode_c⁄åﬁ
->
£˘i⁄_numbî
--;

2713 if(
ícode_c⁄åﬁ
->
£˘i⁄_numbî
 > 1){

2714 
bur°_öãrÁ˚
->
›
->
	`°¨t_n⁄block_å™s„r_‰om_ddr_to_§am
(burst_interface,

2715 
d¥am_∑ge
, 
‹ig_buf_öfo
->
ddr_phy_ba£
 + 
ícode_c⁄åﬁ
->
‰ame_ba£_addr
,

2716 
‹ig_buf_öfo
->
∑ge_id
, 
ícode_c⁄åﬁ
->
£˘i⁄_Àn
, 
DDR_CHIP_B
);

2717 } if(
ícode_c⁄åﬁ
->
£˘i⁄_numbî
 == 1) {

2718 
bur°_öãrÁ˚
->
›
->
	`°¨t_n⁄block_å™s„r_‰om_ddr_to_§am
(burst_interface,

2719 
d¥am_∑ge
, 
‹ig_buf_öfo
->
ddr_phy_ba£
 + 
ícode_c⁄åﬁ
->
‰ame_ba£_addr
,

2720 
‹ig_buf_öfo
->
∑ge_id
, 
ícode_c⁄åﬁ
->
èûî_Àn
, 
DDR_CHIP_B
);

2722 if(
ícode_c⁄åﬁ
->
have_ªcv_£˘i⁄_numbî
&0x1){

2723 
∑ckë_queue
 = &
‰ame
->
vb_∑ckë_queue
;

2724 if(
∑ckë_queue
->
cuº_¥odu˚r
 !
NULL
){

2725 
∑ckë_queue
->
cuº_¥odu˚r
->
›
->
	`dma_unm≠
’ackë_queue->cuº_¥odu˚r, 
DMA_FROM_DEVICE
);

2727 
∑ckë_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(packet_queue);

2730 if(
ícode_c⁄åﬁ
->
£˘i⁄_numbî
 <= 0){

2731 if(
‰ame
->
‰ame_is_îr
 == 0){

2732 
‰ame_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(frame_queue);

2733 if(!(
‰ame
->
‰ame_Êags
 & (
TW_MJPEG_ENCODE_PARAM_CAPTURE_TYPE_USER
 | 
TW_MJPEG_ENCODE_PARAM_CAPTURE_TYPE_TIMER
))) {

2734 
	`TW_DBG
(
TW_DBG_INFO
, "invalid frame flags, discard\n");

2735 
‰ame_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(frame_queue);

2736 
‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(‰ame_queue, &
j≥g_logic_ícode_ch™
->
poﬁ
);

2739 
‰ame_queue
->
›
->
	`ªÀa£_cuº_¥odu˚r
(‰ame_queue, &
j≥g_logic_ícode_ch™
->
poﬁ
);

2740 
	`¥ötk
("%s,%d: j≥g disˇrd\n", 
__FUNCTION__
, 
__LINE__
);

2743 
ícode_c⁄åﬁ
->
	`nŸify
(
j≥g_logic_ícode_ch™
);

2744 
	`chù_‰ì_úq
(
j≥g_logic_ícode_ch™
->
chù
, 
IRQ_BURST_TYPE_INTR
, jpeg_logic_encode_chan);

2745 
chù_d¥am_c⁄åﬁÀr
 = &
j≥g_logic_ícode_ch™
->
chù
->chip_dpram_controller;

2746 
chù_d¥am_c⁄åﬁÀr
->
›
->
	`ack_ªad_mj≥g_ªq
(chù_d¥am_c⁄åﬁÀr, 
j≥g_logic_ícode_ch™
);

2750  
IRQ_HANDLED
;

2751 
	}
}

2753 
	$j≥g_logic_ch™_°¨t_ªad_bô°ªam
(
d¥am_ªque°_t
 *
d¥am_ªq
, *
c⁄ãxt
)

2755 
ªt
=1;

2756 
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

2757 
tw_j≥g_logic_ícode_ch™_t
 *
logic_ícode_ch™
;

2760 if((
d¥am_ªq
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

2761 
logic_ícode_ch™
 = (
tw_j≥g_logic_ícode_ch™_t
*)
c⁄ãxt
;

2763 
	`chù_ªque°_úq
(
logic_ícode_ch™
->
chù
, 
IRQ_BURST_TYPE_INTR
, 
j≥g_logic_ch™_ª•⁄£_ddr_bur°_d⁄e_i§
, "BURST",Üogic_encode_chan);

2765 
ícode_c⁄åﬁ
 = &
logic_ícode_ch™
->encode_control;

2766 
ªt
 = 
ícode_c⁄åﬁ
->
	`ªad_∑øm
(
logic_ícode_ch™
);

2768 
	`TW_DBG
(
TW_DBG_ERR
, "nullÖointer\n");

2771  
ªt
;

2772 
	}
}

2775 
	$öô_submô_ªcv_j≥g_d⁄e_£rvi˚
(
d¥am_ªque°_t
 *
d¥am_ªq
, 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic_ícode_ch™
)

2777 if((
d¥am_ªq
!=
NULL
Ë|| (
j≥g_logic_ícode_ch™
!=NULL)){

2778 
d¥am_ªq
->
ty≥
 = 
DPRAM_NONBLOCK_TRANSFER_REQUEST
;

2779 
d¥am_ªq
->
c⁄ãxt
 = (*)
j≥g_logic_ícode_ch™
;

2780 
d¥am_ªq
->
ªq_ˇŒback
 = 
j≥g_logic_ch™_°¨t_ªad_bô°ªam
;

2782 
	}
}

2784 
	$tw5864_vj_úq
(
úq
, *
c⁄ãx
)

2786 
tw5864_mj≥g_∑th_t
 *
mj≥g_∑th
;

2787 
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
;

2788 
tw_j≥g_logic_ícode_ch™_t
 *
logic_j≥g_chn
;

2789 
tw_j≥g_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

2790 
u32
 
isvÆid
 = 0;

2792 
mj≥g_∑th
 = (
tw5864_mj≥g_∑th_t
 *)
c⁄ãx
;

2793 if(!
mj≥g_∑th
){

2794 
	`¥ötk
("%s,%d:ÇuŒ\n", 
__FUNCTION__
, 
__LINE__
);

2795  
TW_ERR
;

2798 if(
mj≥g_∑th
->
cuºít_c⁄sumî_±r
 !mj≥g_∑th->
cuºít_ícodög_±r
) {

2799 
buf_öfo
 = 
mj≥g_∑th
->
vj_bus
->
vj_‹ig_buf
 + mj≥g_∑th->
cuºít_c⁄sumî_±r
 + mj≥g_∑th->
∑th_id
 * 
VIDEO_JPEG_PATH_BUF
;

2800 if(
buf_öfo
->
›
->
	`com∂©e
(buf_info)) {

2801 
ed_tcb_t
 *
›íed_logic_ch™_ed
;

2802 
logic_j≥g_chn
 = 
mj≥g_∑th
->
logic_ícodög_èbÀ
[mj≥g_∑th->
cuºít_c⁄sumî_±r
];

2803 
ícode_c⁄åﬁ
 = &
logic_j≥g_chn
->encode_control;

2804 
›íed_logic_ch™_ed
 = &
logic_j≥g_chn
->opened_logic_chan_ed;

2805 
logic_j≥g_chn
->
phy_video_¶Ÿ
->
‹ig_buf_öfo
 = 
buf_öfo
;

2807 
buf_öfo
->
›
->
	`m¨k_ußbÀ
(buf_info);

2808 if(
buf_öfo
->
›
->
	`gë_chn_id
(buf_öfoË!
logic_j≥g_chn
->
phy_video_¶Ÿ
->
phy_¶Ÿ_id
) {

2809 
	`TW_DBG
(
TW_DBG_ERR
, "BUG:ch™√»(%d, %dËwa†ch™ged\n", 
buf_öfo
->
›
->
	`gë_chn_id
(buf_öfo), 
logic_j≥g_chn
->
phy_video_¶Ÿ
->
phy_¶Ÿ_id
);

2811 if(
ícode_c⁄åﬁ
->
timeout_id
 !
INVALIDTIMERID
) {

2812 
	`DñëeSögÀFúeTimîJob
(
ícode_c⁄åﬁ
->
timeout_id
);

2813 
ícode_c⁄åﬁ
->
timeout_id
 = 
INVALIDTIMERID
;

2815 
	`drivî_gí_dñivî_evít
(&
logic_j≥g_chn
->
›íed_logic_ch™_ed
, 1);

2817 
mj≥g_∑th
->
cuºít_c⁄sumî_±r
++;

2818 if(
mj≥g_∑th
->
cuºít_c⁄sumî_±r
 >
VIDEO_JPEG_PATH_BUF
) {

2819 
mj≥g_∑th
->
cuºít_c⁄sumî_±r
 = 0;

2821 
isvÆid
 = 1;

2823 
	`TW_DBG
(
TW_DBG_ERR
, "∑th %d bu‡%d i†nŸ com∂©e\n", 
buf_öfo
->
∑th_id
, buf_öfo->
buf_id
);

2827 
	`TW_DBG
(
TW_DBG_ERR
, "producer == consumer\n");

2829 
mj≥g_∑th
->
vj_bus
->
i_ãmp_Âs_cou¡î
++;

2830 if(!
isvÆid
) {

2831 
j≥g_îr
;

2834 
	`©omic_£t
(&
mj≥g_∑th
->
vj_bus
->
busy
, 0);

2835  
IRQ_HANDLED
;

2836 
j≥g_îr
:

2837 
buf_öfo
 = 
mj≥g_∑th
->
vj_bus
->
vj_‹ig_buf
;

2838 
	`TW_DBG
(
TW_DBG_FATAL
, "bad status 0x%08x,Éncode %d, consumer %d\n",

2839 
buf_öfo
->
chù
->
io_›
->
	`chù_ªad32
(buf_öfo->chù, 
JPEG_IRQ
), 
mj≥g_∑th
->
cuºít_ícodög_±r
,

2840 
mj≥g_∑th
->
cuºít_c⁄sumî_±r
);

2842 
mj≥g_∑th
->
vj_bus
->
›
->
	`ª£t
(mjpeg_path->vj_bus);

2844  
TW_ERR
;

2845 
	}
}

2847 
	$vj_bus_°¨t_m⁄ô‹_èsk
(*
c⁄ãxt
)

2849 
j≥g_£rvi˚_queue_t
 *
£rvi˚_queue
;

2850 
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
;

2851 
tw5864_mj≥g_∑th_t
 *
mj≥g_∑th
;

2852 
tw5864_vj_bus_t
 *
vj_bus
 = (tw5864_vj_bus_à*)
c⁄ãxt
;

2853 
u32
 
‹ig_buf_id
 = 0;

2854 
Êags
;

2856 if(!
vj_bus
)

2858  -
EINVAL
;

2860 
	`•ö_lock_úqßve
(&
vj_bus
->
lock
, 
Êags
);

2861 
vj_bus
->
i_°©ic_£c⁄d_cou¡î
++;

2862 if(
vj_bus
->
i_°©ic_£c⁄d_cou¡î
 >
TIMER_1_SECOND
) {

2863 
vj_bus
->
cuºít_Âs
 = vj_bus->
i_ãmp_Âs_cou¡î
;

2864 
vj_bus
->
i_ãmp_Âs_cou¡î
 = 0;

2865 
vj_bus
->
i_°©ic_£c⁄d_cou¡î
 = 0;

2868 if(
vj_bus
->
∑th_swôch
) {

2869 
mj≥g_∑th
 = &
vj_bus
->mjpeg_path[1];

2871 
mj≥g_∑th
 = &
vj_bus
->mjpeg_path[0];

2873 
vj_bus
->
∑th_swôch
 = !vj_bus->path_switch;

2875 
£rvi˚_queue
 = &
vj_bus
->
j≥g_£rvi˚_queue
;

2876 
‹ig_buf_id
 = 
mj≥g_∑th
->
cuºít_‰ame_±r
 + mj≥g_∑th->
∑th_id
 * 
VIDEO_JPEG_PATH_BUF
;

2877 if(
mj≥g_∑th
->
cuºít_‰ame_±r
 == 0) {

2878 
‹ig_buf_id
 = 
mj≥g_∑th
->
∑th_id
 * 
VIDEO_JPEG_PATH_BUF
 + VIDEO_JPEG_PATH_BUF - 1;

2880 
‹ig_buf_id
 -= 1;

2882 
buf_öfo
 = 
vj_bus
->
vj_‹ig_buf
 + 
‹ig_buf_id
;

2884 if((
buf_öfo
->
›
->
	`‰ame_vÆid
(buf_öfoË|| (
mj≥g_∑th
->
cuºít_ícodög_±r
 =mj≥g_∑th->
cuºít_‰ame_±r
))

2885 &&(
mj≥g_∑th
->
›
->
	`is_busy
(mjpeg_path) == 0)) {

2886 if(
buf_öfo
->
›
->
	`‰ame_vÆid
(buf_info)) {

2888 if(
mj≥g_∑th
->
time_id
 !
INVALIDTIMERID
) {

2889 
	`DñëeSögÀFúeTimîJob
(
mj≥g_∑th
->
time_id
);

2890 
mj≥g_∑th
->
time_id
 = 
INVALIDTIMERID
;

2893 
mj≥g_∑th
->
›
->
	`vÆid_nŸify
(mjpeg_path);

2897 if((
mj≥g_∑th
->
cuºít_ícodög_±r
 !mj≥g_∑th->
cuºít_‰ame_±r
)){

2898 
‹ig_buf_id
 = 
mj≥g_∑th
->
cuºít_ícodög_±r
 + mj≥g_∑th->
∑th_id
 * 
VIDEO_JPEG_PATH_BUF
;

2899 
buf_öfo
 = 
vj_bus
->
vj_‹ig_buf
 + 
‹ig_buf_id
;

2900 if(
buf_öfo
->
›
->
	`‰ame_vÆid
(buf_öfoË&& (
	`©omic_ªad
(&
vj_bus
->
busy
) == 0)) {

2902 
mj≥g_∑th
->
›
->
	`°¨t_ícodög
(mjpeg_path);

2906 
	`•ö_u∆ock_úqª°‹e
(&
vj_bus
->
lock
, 
Êags
);

2909 
	}
}

2911 
	$vj_bus_°›_m⁄ô‹_èsk
(*
c⁄ãxt
)

2913 
tw5864_vj_bus_t
 *
vj_bus
 = (tw5864_vj_bus_à*)
c⁄ãxt
;

2915 if(!
vj_bus
)

2917  -
EINVAL
;

2920 
	`DñëeF‹FúeTimîJob
(
vj_bus
->
time_id
);

2921 
vj_bus
->
time_id
 = 
INVALIDTIMERID
;

2924 
	}
}

2926 
	$tw_5864_vj_bus_ª£t
(
tw5864_vj_bus_t
 *
vj_bus
)

2928 
dvm_chù_t
 *
chù
;

2929 
tw5864_mj≥g_∑th_t
 *
∑th
;

2930 
Êags
;

2931 
i
;

2932 
tw_vj_‹ig_buf_öfo_t
 *
‹ig_öfo
;

2934 if(!
vj_bus
){

2938 
	`TW_DBG
(
TW_DBG_INFO
, "reset vj bus\n");

2939 
chù
 = 
	`to_gë_chù_wôh_chù_vj_bus
(
vj_bus
);

2941 
vj_bus
->
›
->
	`°›_m⁄ô‹_èsk
(vj_bus);

2943 
	`•ö_lock_úqßve
(&
vj_bus
->
lock
, 
Êags
);

2944 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
JPEG_MODULE_REST
, 0xe0000001);

2945 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
JPEG_MODULE_REST
, 0xe0000000);

2947 
i
 = 0; i < 
VIDEO_JPEG_PATH_CNT
; i++) {

2948 
∑th
 = &
vj_bus
->
mj≥g_∑th
[
i
];

2950 if(
∑th
->
dñay_time_id
 !
INVALIDTIMERID
) {

2951 
	`DñëeSögÀFúeTimîJob
(
∑th
->
dñay_time_id
);

2952 
∑th
->
dñay_time_id
 = 
INVALIDTIMERID
;

2955 if(
∑th
->
time_id
 !
INVALIDTIMERID
) {

2956 
	`DñëeSögÀFúeTimîJob
(
∑th
->
time_id
);

2957 
∑th
->
time_id
 = 
INVALIDTIMERID
;

2960 
‹ig_öfo
 = &
vj_bus
->
vj_‹ig_buf
[
i
 * 
VIDEO_JPEG_PATH_BUF
];

2961 if(
‹ig_öfo
->
›
) {

2962 
∑th
->
cuºít_c⁄sumî_±r
 = 
‹ig_öfo
->
›
->
	`√w_‰ame_±r
(orig_info);

2963 
∑th
->
cuºít_ícodög_±r
 = 
‹ig_öfo
->
›
->
	`√w_‰ame_±r
(orig_info);

2964 
∑th
->
cuºít_‰ame_±r
 = 
‹ig_öfo
->
›
->
	`√w_‰ame_±r
(orig_info);

2966 
∑th
->
cuºít_c⁄sumî_±r
 = 0;

2967 
∑th
->
cuºít_ícodög_±r
 = 0;

2968 
∑th
->
cuºít_‰ame_±r
 = 0;

2971 
	`©omic_£t
(&
vj_bus
->
busy
, 0);

2972 
	`•ö_u∆ock_úqª°‹e
(&
vj_bus
->
lock
, 
Êags
);

2973 
vj_bus
->
time_id
 = 
	`AddF‹FúeTimîJob
(1, vj_bus->
›
->
°¨t_m⁄ô‹_èsk
, vj_bus);

2974 if(
vj_bus
->
time_id
 =
ADDJOBERROR
)

2976 
	`TW_DBG
(
TW_DBG_ERR
, "addÅimer hookÉrr\n");

2981 
	}
}

2983 
tw5864_vj_bus_›î©i⁄
 
	gtw5864_vj_bus_›
 = {

2984 .
öô
 = 
tw5864_vj_bus_öô
,

2985 .
	gªÀa£
 = 
tw5864_vj_bus_ªÀa£
,

2986 .
	gúq
 = 
tw5864_vj_úq
,

2987 .
	g°¨t_m⁄ô‹_èsk
 = 
vj_bus_°¨t_m⁄ô‹_èsk
,

2988 .
	g°›_m⁄ô‹_èsk
 = 
vj_bus_°›_m⁄ô‹_èsk
,

2989 .
	gª£t
 = 
tw_5864_vj_bus_ª£t
,

2992 
size_t
 
	$tw_j≥g_‰ame_submô
(
tw_vb_‰ame_tcb_t
 *
‰ame
, 
__u£r
 *
d©a
, 
size_t
 
cou¡
, 
loff_t
 *
µos
, 
ma°îOrSubFœg
, 
tw_vb_poﬁ_t
 *
poﬁ
)

2994 
tw_‰ame_hódî_t
 
__u£r
 *
‰ame_hódî_±r
;

2995 
tw_‰ame_hódî_t
 
tw_‰ame_hód
;

2996 
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
;

2997 
size_t
 
buf_size
, 
∑ckë_size
;

2998 
loff_t
 
buf_off£t
, 
∑ckë_off£t
;

2999 
ö£π_03_°©e_machöe_t
 
°©e_machöe
;

3001 
buf_size
 = 
cou¡
;

3002 
buf_off£t
 = 0;

3003 
	`mem£t
(&
°©e_machöe
, 0, (
ö£π_03_°©e_machöe_t
));

3004 if(
‰ame
 !
NULL
){

3005 
‰ame_hódî_±r
 = (
tw_‰ame_hódî_t
*)
d©a
;

3006 
buf_size
 -(
tw_‰ame_hódî_t
);

3007 
buf_off£t
 +(
tw_‰ame_hódî_t
);

3008 
	`mem£t
(&
tw_‰ame_hód
, 0, (
tw_‰ame_hódî_t
));

3009 
tw_‰ame_hód
.
codecTy≥
 = 
TW_VIDEO_MJPEG_CODEC_TYPE
;

3010 
tw_‰ame_hód
.
°ªamTy≥
 = 
‰ame
->
‰ame_Êags
;

3011 
tw_‰ame_hód
.
‰ameSîül
 = 
‰ame
->
‰ame_numbî
;

3012 
tw_‰ame_hód
.
‰ameTy≥
 = 
‰ame
->
‰ame_ty≥
;

3013 
tw_‰ame_hód
.
timeSèmp
 = 
‰ame
->
time°amp
;

3014 
tw_‰ame_hód
.
∑ylﬂd_off£t
 = (
tw_‰ame_hódî_t
);

3015 
tw_‰ame_hód
.
∑ylﬂdLí
 = 0;

3017 
vb_∑ckë_queue
 = &
‰ame
->vb_packet_queue;

3018 
vb_∑ckë_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(vb_packet_queue))

3020 
vb_∑ckë_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(vb_packet_queue);

3021 
∑ckë_size
 = 
vb_∑ckë_queue
->
cuº_c⁄sumî
->
›
->
	`submô
(vb_∑ckë_queue->cuº_c⁄sumî, &
d©a
[
buf_off£t
], 
buf_size
, &
∑ckë_off£t
, &
°©e_machöe
);

3023 
vb_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(vb_∑ckë_queue, 
poﬁ
);

3024 
buf_size
 -
∑ckë_size
;

3025 
buf_off£t
 +
∑ckë_size
;

3026 
tw_‰ame_hód
.
∑ylﬂdLí
 +
∑ckë_size
;

3028 
buf_off£t
 & 3){

3029 
	`__put_u£r
(0, &
d©a
[
buf_off£t
]);

3030 
buf_size
--;

3031 
buf_off£t
++;

3032 
tw_‰ame_hód
.
∑ylﬂdLí
++;

3034 
	`c›y_to_u£r
(
‰ame_hódî_±r
, &
tw_‰ame_hód
, (
tw_‰ame_hódî_t
));

3036 *
µos
 +
buf_off£t
;

3038  (
size_t
)
buf_off£t
;

3039 
	}
}

3041 
	$j≥g_¥oc_ªad
(*
∑ge
, **
°¨t
, 
off_t
 
off
,

3042 
cou¡
, *
eof
, *
d©a
)

3044 
Àn
 = 0, 
i
 = 0, 
j
 = 0;

3045 
tw_mj≥g_ícode_∑øm_t
 *
j≥g_c⁄fig
;

3046 
tw_vb_‰ame_tcb_queue_t
 *
‰ame_queue
;

3047 
tw_vb_poﬁ_t
 *
poﬁ
;

3048 
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
;

3049 
tw5864_mj≥g_∑th_t
 *
mj≥g_∑th
;

3050 
tw5864_vj_bus_t
 *
vj_bus
;

3051 
u32
 
‹ig_buf_id
 = 0;

3052 
tw_j≥g_logic_ícode_ch™_t
 *
ba£
, *
j≥g
;

3054 
ba£
 = 
j≥g
 = (
tw_j≥g_logic_ícode_ch™_t
 *)
d©a
;

3055 
vj_bus
 = &
j≥g
->
chù
->
chù_vj_bus
;

3056 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s %8s %8s %8s %8s\n", "ID", "frame", "encoding", "consumer", "valid");

3057 
i
 = 0; i < 
VIDEO_JPEG_PATH_CNT
; i++) {

3058 
mj≥g_∑th
 = &
vj_bus
->mj≥g_∑th[
i
];

3059 
‹ig_buf_id
 = 
mj≥g_∑th
->
cuºít_ícodög_±r
 + mj≥g_∑th->
∑th_id
 * 
VIDEO_JPEG_PATH_BUF
;

3060 
buf_öfo
 = 
vj_bus
->
vj_‹ig_buf
 + 
‹ig_buf_id
;

3061 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8d %8d %8d %8d %8d\n",

3062 
mj≥g_∑th
->
∑th_id
, mj≥g_∑th->
cuºít_‰ame_±r
,

3063 
mj≥g_∑th
->
cuºít_ícodög_±r
, mj≥g_∑th->
cuºít_c⁄sumî_±r
,

3064 
buf_öfo
->
›
->
	`‰ame_vÆid
(buf_info));

3065 
j
 = 0; j < 
VIDEO_JPEG_PATH_BUF
; j++) {

3066 
tw_j≥g_logic_ícode_ch™_t
 *
logic_ch∆
 = 
mj≥g_∑th
->
logic_ícodög_èbÀ
[
j
];

3067 
Àn
 +
	`•rötf
(
∑ge
 +Üí, "%8x ", 
logic_ch∆
?logic_ch∆->
logic_ch™_id
:0xff);

3069 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "\n");

3071 
Àn
 +
	`•rötf
(
∑ge
 +Üí, "cuºíàícodög fps: %8d\n", 
vj_bus
->
cuºít_Âs
);

3072 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "orig buffer validÅime:\n");

3073 
i
 = 0; i < 
VIDEO_JPEG_PATH_CNT
 * 
VIDEO_JPEG_PATH_BUF
; i++) {

3074 
buf_öfo
 = 
vj_bus
->
vj_‹ig_buf
 + 
i
;

3075 
Àn
 +
	`•rötf
(
∑ge
 +Üí, "%8d", 
buf_öfo
->
vÆid_time
);

3077 
Àn
 +
	`•rötf
(
∑ge
 +Üí, "\n£rvi˚É¡ryÇumbî %d\n", 
vj_bus
->
j≥g_£rvi˚_queue
.
›
->
	`gë_queue_cuº_íåy_numbî
(&vj_bus->jpeg_service_queue));

3078 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s %8s %8s %8s %8s %8s %8s %8s", "ch", "phy", "logic", "size", "width", "height", "Level", "interval\n");

3079 
j≥g
 = 
ba£
; (j≥g - ba£Ë< 
TW5864_PHY_VJ_CHAN_NUMBER
; jpeg++)

3081 
j≥g_c⁄fig
 = &
j≥g
->
ícode_¥›îty
.encode_property;

3082 if(!
	`©omic_ªad
(&
j≥g
->
›íed_Êag
))

3087 
Àn
 +
	`•rötf
(
∑ge
 +Üí, "%8d %8d %8d %8d %8d %8d %8d %8d\n",
j≥g
->
phy_¶Ÿ_id
,

3088 
j≥g
->
phy_¶Ÿ_id
,

3089 
j≥g
->
logic_ch™_id
,

3090 
j≥g
->
ícode_c⁄åﬁ
.
cuº_size
,

3091 
j≥g_c⁄fig
->
i_image_width_mb_size
,

3092 
j≥g_c⁄fig
->
i_image_height_mb_size
,

3093 
j≥g_c⁄fig
->
e_image_Àvñ
,

3094 
j≥g_c⁄fig
->
i_ˇ±uª_‰ame_°ride
);

3097 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "encoder status:\n");

3098 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8s %8s %8s %8s %8s %8s %8s %8s", "valid", "BlkCnt", "FrmCnt", "Seq", "int(ms)", "lost", "state", "flags\n");

3099 
j≥g
 = 
ba£
; (j≥g - ba£Ë< 
TW5864_PHY_VJ_CHAN_NUMBER
; jpeg++) {

3100 if(!
	`©omic_ªad
(&
j≥g
->
›íed_Êag
))

3105 if(
j≥g
->
phy_video_¶Ÿ
) {

3106 
‰ame_queue
 = &
j≥g
->
j≥g_‰ame_queue
;

3107 
poﬁ
 = &
j≥g
->pool;

3108 
buf_öfo
 = 
j≥g
->
phy_video_¶Ÿ
->
‹ig_buf_öfo
;

3109 
Àn
 +
	`•rötf
(
∑ge
 +Üen, "%8d %8d %8d %8d %8d %8d %8d %08x\n",

3110 
j≥g
->
phy_video_¶Ÿ
->
‹ig_buf_öfo
 ? 
buf_öfo
->
›
->
	`‰ame_vÆid
(buf_info):0,

3111 
poﬁ
->
›
->
	`gë_∑ckë_tcb_poﬁ_íåy_numbî
(pool),

3112 
‰ame_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(frame_queue),

3113 
j≥g
->
i_‰ame_£rül
,

3114 
j≥g
->
ícode_c⁄åﬁ
.
‰ame_öãrvÆ
,

3115 
j≥g
->
ícode_c⁄åﬁ
.
lo°_‰ame
,

3116 
	`©omic_ªad
(&
j≥g
->
›íed_logic_ch™_ed
.
°©e
),

3117 
j≥g
->
ícode_c⁄åﬁ
.
ˇ±uª_Êags
);

3121  
Àn
;

3122 
	}
}

3124 
tw5864_ªad_j≥g_yuv
(
dvm_chù_t
 *
chù
, 
∑ge
, 
f‹m©
, *
buf
, 
isB
);

3125 
tw5864_wrôe_j≥g_yuv
(
dvm_chù_t
 *
chù
, 
∑ge
, 
f‹m©
, *
buf
, 
isB
);

3126 
	$j≥g_¥oc_wrôe
(
fûe
 *fûe, c⁄° 
__u£r
 *
buf„r
,

3127 
cou¡
, *
d©a
)

3129 
dvm_chù_t
 *
chù
;

3130 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g
 = (tw_j≥g_logic_ícode_ch™_à*)
d©a
;

3131 
cmdbuf
[1024];

3132 **
¨gv
;

3133 
¨gc
, 
i
;

3135 
chù
 = 
j≥g
->chip;

3136 if(
cou¡
 > 1024){

3137 
	`c›y_‰om_u£r
(
cmdbuf
, 
buf„r
, 1024);

3140 
	`c›y_‰om_u£r
(
cmdbuf
, 
buf„r
, 
cou¡
);

3142 
¨gv
 = 
	`¨gv_•lô
(
GFP_KERNEL
, 
cmdbuf
, &
¨gc
);

3143 
i
 = 0; i < (
¨gc
 - 1); i++)

3145 
	`TW_DBG
(
TW_DBG_INFO
, "cmd %d: %s\n", 
i
, 
¨gv
[i]);

3147 if(!
j≥g
){

3148 
wrôe_ªÀa£
;

3151 if((
¨gv
[0] !
NULL
Ë&& (
¨gc
 >4Ë&& (
	`°rcmp
(argv[0], "cap") == 0))

3153 
j≥g
 +
	`©oi
(
¨gv
[2]);

3154 
	`tw_j≥g_ßve_chn
(
j≥g
, 
¨gv
[1], 
	`©oi
(argv[3]));

3156 if((
¨gv
[0] !
NULL
Ë&& (
	`°rcmp
(argv[0], "close") == 0)) {

3157 
tw_j≥g_logic_ícode_ch™_t
 *
ba£
;

3159 
ba£
 = 
j≥g
; (ba£ - j≥gË< 
TW5864_PHY_VD_CHAN_NUMBER
; base++) {

3160 if(
	`©omic_ªad
(&
ba£
->
›íed_Êag
) == 0) {

3163 
	`¥ötk
("˛o£ j≥g %d\n", 
ba£
->
logic_ch™_id
);

3164 
ba£
->
›íed_logic_ch™_ed
.
›
->
	`˛o£
(&base->opened_logic_chan_ed);

3167 if((
¨gv
[0] !
NULL
Ë&& (
	`°rcmp
(argv[0], "read") == 0)) {

3168 
fûe
 *
yuv_fûe
;

3169 
mm_£gmít_t
 
fs
;

3170 *
buff
;

3171 
size
;

3173 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MODE
, 0x5f);

3174 
size
 = 0x97e00;

3175 
buff
 = (*)
	`__gë_‰ì_∑ges
(
GFP_KERNEL
, 
	`gë_‹dî
(
size
));

3176 
	`mem£t
(
buff
, 0, 
size
);

3177 
yuv_fûe
 = 
	`tw_kî√l_fûe_›í
(
¨gv
[2]);

3178 
fs
=
	`gë_fs
();

3179 
	`£t_fs
(
KERNEL_DS
);

3180 
	`tw5864_ªad_j≥g_yuv
(
chù
, 
	`©oi
(
¨gv
[1]), 0, 
buff
, 1);

3181 
yuv_fûe
->
f_›
->
	`wrôe
(yuv_fûe, 
buff
, 
size
, &(yuv_fûe->
f_pos
));

3182 
	`£t_fs
(
fs
);

3183 
	`tw_kî√l_fûe_˛o£
(
yuv_fûe
);

3184 
	`‰ì_∑ges
((
u32
 )
buff
, 
	`gë_‹dî
(
size
));

3187 if((
¨gv
[0] !
NULL
Ë&& (
	`°rcmp
(argv[0], "write") == 0)) {

3188 
fûe
 *
yuv_fûe
;

3189 
mm_£gmít_t
 
fs
;

3190 *
buff
;

3191 
size
;

3193 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MODE
, 0x5f);

3194 
size
 = 0x97e00;

3195 
buff
 = (*)
	`__gë_‰ì_∑ges
(
GFP_KERNEL
, 
	`gë_‹dî
(
size
));

3196 
	`mem£t
(
buff
, 0, 
size
);

3197 
yuv_fûe
 = 
	`tw_kî√l_fûe_›í
(
¨gv
[2]);

3198 
fs
=
	`gë_fs
();

3199 
	`£t_fs
(
KERNEL_DS
);

3200 
yuv_fûe
->
f_›
->
	`ªad
(yuv_fûe, 
buff
, 
size
, &(yuv_fûe->
f_pos
));

3201 
	`tw5864_wrôe_j≥g_yuv
(
chù
, 
	`©oi
(
¨gv
[1]), 0, 
buff
, 1);

3202 
	`£t_fs
(
fs
);

3203 
	`tw_kî√l_fûe_˛o£
(
yuv_fûe
);

3204 
	`‰ì_∑ges
((
u32
 )
buff
, 
	`gë_‹dî
(
size
));

3206 if((
¨gv
[0] !
NULL
Ë&& (
	`°rcmp
◊rgv[0], "dump"Ë=0Ë&& (
¨gc
 > 3)) {

3207 
fûe
 *
j≥g_fûe
;

3208 
mm_£gmít_t
 
fs
;

3209 *
buff
;

3210 
u32
 
hódî_Àn
;

3211 
size
;

3212 
tw_vj_‹ig_buf_öfo_t
 *
buf_öfo
;

3214 if(
	`©oi
(
¨gv
[1]) > 7) {

3215 
buf_öfo
 = 
chù
->
chù_vj_bus
.
vj_‹ig_buf
;

3217 
buf_öfo
 = 
chù
->
chù_vj_bus
.
vj_‹ig_buf
 + 
	`©oi
(
¨gv
[1]);

3220 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
MODE
, 0x5f);

3221 
size
 = 0x97e00;

3222 
buff
 = (*)
	`__gë_‰ì_∑ges
(
GFP_KERNEL
, 
	`gë_‹dî
(
size
));

3223 
	`mem£t
(
buff
, 0, 
size
);

3224 
j≥g_fûe
 = 
	`tw_kî√l_fûe_›í
(
¨gv
[2]);

3225 
fs
=
	`gë_fs
();

3226 
	`£t_fs
(
KERNEL_DS
);

3227 
hódî_Àn
 = 
	`tw5864_jifi_hódî
(
buff
, 
j≥g
);

3228 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
buf_öfo
->
∑ge_id
 | (1 << 14));

3229 
	`mem˝y
(
buff
 + 
hódî_Àn
, 
chù
->
ªgs
 + 0xa2000, 
buf_öfo
->
›
->
	`gë_Àngth
(buf_info));

3230 
j≥g_fûe
->
f_›
->
	`wrôe
(j≥g_fûe, 
buff
, 
hódî_Àn
 + 
buf_öfo
->
›
->
	`gë_Àngth
(buf_öfo), &(j≥g_fûe->
f_pos
));

3231 
	`£t_fs
(
fs
);

3232 
	`tw_kî√l_fûe_˛o£
(
j≥g_fûe
);

3233 
	`‰ì_∑ges
((
u32
 )
buff
, 
	`gë_‹dî
(
size
));

3236 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
VIDEO_JPEG_CMD_PATH0
, 0x1);

3237 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
JPEG_CAP_PATH0_ENABLE
, 0x1);

3240 
wrôe_ªÀa£
:

3241 
	`¨gv_‰ì
(
¨gv
);

3243  
cou¡
;

3244 
	}
}

3246 
	$öô_tw5864_j≥g_ícode_ch™
(
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_logic
, 
bus_id
, 
chù_id
, 
phy_¶Ÿ_id
, 
dvm_chù_t
 *
chù
)

3248 
tw5864_vj_bus_t
 *
chù_vj_bus
;

3250 if(
j≥g_logic
 && 
chù
 && (
phy_¶Ÿ_id
 < 
TW5864_PHY_VJ_CHAN_NUMBER
))

3252 
ed_tcb_t
 *
ed
;

3253 
tw_¥oc_ªgi°î_s
 *
j≥g_¥oc
;

3255 
chù_vj_bus
 = &
chù
->chip_vj_bus;

3256 
j≥g_logic
->
phy_¶Ÿ_id
 =Öhy_slot_id;

3257 
j≥g_logic
->
logic_ch™_id
 = 
phy_¶Ÿ_id
;

3258 
j≥g_logic
->
chù
 = chip;

3260 
ed
 = &
j≥g_logic
->
›íed_logic_ch™_ed
;

3262 
j≥g_logic
->
phy_video_¶Ÿ
 = &
chù_vj_bus
->phy_video_¶Ÿ[
phy_¶Ÿ_id
];

3264 
	`öô_j≥g_ícode_¥›îty
(&
j≥g_logic
->
ícode_¥›îty
, &
deÁu…_j≥g_ícode_¥›îty
);

3265 
	`öô_j≥g_ícode_c⁄åﬁ
(&
j≥g_logic
->
ícode_c⁄åﬁ
);

3267 
	`öô_j≥g_£rvi˚_tcb_wôh_nuŒ
(&
j≥g_logic
->
ícode_ªque°_tcb
);

3269 
	`öô_ídpoöt_tcb
(&
j≥g_logic
->
logic_ch™_ed
, 
bus_id
, 
chù_id
,

3270 
TW_ED_VIDEO_ENCODE_IN
, 
j≥g_logic
->
phy_¶Ÿ_id
,

3271 
j≥g_logic
->
logic_ch™_id
, j≥g_logic, 
j≥g_logic_ícode_ch™_drivî_nŸify
,

3272 
j≥g_logic_ícode_ch™_drivî_m©ch_id
, 
NULL
);

3273 
	`öô_ídpoöt_tcb
(&
j≥g_logic
->
›íed_logic_ch™_ed
, 
bus_id
, 
chù_id
,

3274 
TW_ED_VIDEO_ENCODE_IN
, 
j≥g_logic
->
phy_¶Ÿ_id
,

3275 
j≥g_logic
->
logic_ch™_id
, j≥g_logic, 
j≥g_logic_ícode_ch™_drivî_nŸify
,

3276 
j≥g_logic_ícode_ch™_drivî_m©ch_id
, &
j≥g_ícode_drivî_fsm_°©e_å™s„r_m©rix_èbÀ
);

3278 
	`tw_¸óã_poﬁ
(&
j≥g_logic
->
poﬁ
, 
tw_j≥g_‰ame_submô
, 
VIDEO_JPEG_BUF_POOL_LEN
);

3279 
	`tw_¸óã_‰ame_tcb_queue
(&
j≥g_logic
->
j≥g_‰ame_queue
);

3280 
	`ªgi°î_logic_ícode_ch™_öto_phy_¶Ÿ
(
j≥g_logic
, j≥g_logic->
phy_video_¶Ÿ
);

3282 
ed
->
›
 = &
j≥g_ícode_hcd_öãrÁ˚_›
;

3283 
j≥g_¥oc
 = &
chù
->jpeg_proc;

3284 if(!
j≥g_¥oc
->
íåy
) {

3285 
	`°r˝y
(
j≥g_¥oc
->
«me
, "jpeg");

3286 
j≥g_¥oc
->
ªad
 = 
j≥g_¥oc_ªad
;

3287 
j≥g_¥oc
->
wrôe
 = 
j≥g_¥oc_wrôe
;

3288 
j≥g_¥oc
->
¥iv©e
 = 
chù
->
j≥g_ícode_ch™
;

3289 
	`tw_moduÀ_ªgi°î
(
chù
, 
j≥g_¥oc
);

3295  -
EINVAL
;

3296 
	}
}

3298 
	$öô_tw5864_vj_bus
(
tw5864_vj_bus_t
 *
vj_bus
)

3300 if(
vj_bus
 !
NULL
){

3301 
vj_bus
->
›
 = &
tw5864_vj_bus_›
;

3302 
vj_bus
->
›
->
	`öô
(vj_bus);

3304  
TW_OK
;

3307  
TW_ERR
;

3308 
	}
}

3310 
	$ªmove_tw5864_vj_bus
(
tw5864_vj_bus_t
 *
vj_bus
)

3312 if(
vj_bus
 !
NULL
){

3313 
vj_bus
->
›
->
	`ªÀa£
(vj_bus);

3317 
	}
}

3318 
	$ªmove_tw5864_j≥g_ícode_ch™
(
tw_j≥g_logic_ícode_ch™_t
 *
logic_ch™
)

3320 
dvm_chù_t
 *
chù
;

3322 if(
logic_ch™
){

3323 
ed_tcb_t
 *
ed
;

3324 
ed
 = &
logic_ch™
->
›íed_logic_ch™_ed
;

3325 
chù
 = 
logic_ch™
->chip;

3326 if(
logic_ch™
->
ícode_c⁄åﬁ
.
timî_id
 !
INVALIDTIMERID
) {

3327 
	`DñëeSögÀFúeTimîJob
(
logic_ch™
->
ícode_c⁄åﬁ
.
timî_id
);

3329 if(
ed
->
›
 !
NULL
){

3330 
ed
->
›
->
	`˛o£
(&
logic_ch™
->
›íed_logic_ch™_ed
);

3332 
	`tw_de°roy_poﬁ
(&
logic_ch™
->
poﬁ
);

3333 
	`uƒegi°î_logic_ícode_ch™_öto_phy_¶Ÿ
(
logic_ch™
,Üogic_ch™->
phy_video_¶Ÿ
);

3334 
	`tw_moduÀ_uƒegi°î
(
chù
, &chù->
j≥g_¥oc
);

3336 
	}
}

3339 
	$vj_pﬁlög_èsk
(
dvm_chù_t
 *
chù
)

3341 
u32
 
°©us
 = 0;

3342 
com∂©e
;

3344 
com∂©e
 = 
JPEG_IRQ
;

3345 
°©us
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
com∂©e
);

3346 if(
°©us
)

3348 
	`¥ötk
("any channelÉncode complate!\n");

3351 
	}
}

3353 
	$tw_j≥g_ßve_chn
(
tw_j≥g_logic_ícode_ch™_t
 *
logic_ch∆
, *
∑th
, 
˙t
)

3355 
fûe
 *
j≥g_fûe
 = 
NULL
;

3356 
tw_vb_‰ame_tcb_t
 *
‰ame
;

3357 
tw_vb_‰ame_tcb_queue_t
 *
‰ame_queue
;

3358 
«me
[128];

3359 
i
 = 0;

3360 if(
˙t
 == 0){

3361 
˙t
 = 0x0fffffff;

3364 (
i
++Ë< 
˙t
) {

3366 
‰ame_queue
 = &
logic_ch∆
->
j≥g_‰ame_queue
;

3368 !
‰ame_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(frame_queue)){

3369 
	`scheduÀ
();

3370 i‡(
	`sig«l_≥ndög
(
cuºít
)) {

3371 
	`TW_DBG
(
TW_DBG_DEBUG
, "receive signal\n");

3372 
j≥g_out
;

3376 
	`mem£t
(
«me
, 0, 128);

3377 
	`•rötf
(
«me
, "%s/video_chn_%02d_%02d_£q%d.jpg", 
∑th
, 
logic_ch∆
->
logic_ch™_id
, 
i
,Üogic_ch∆->
i_‰ame_£rül
);

3378 
j≥g_fûe
 = 
	`tw_kî√l_fûe_›í
(
«me
);

3379 if(
	`IS_ERR
(
j≥g_fûe
) || !jpeg_file){

3380 
	`TW_DBG
(
TW_DBG_ERR
, "¸óã fûê%s, faûed\n", 
«me
);

3381  -
EINVAL
;

3383 
‰ame_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(frame_queue);

3384 
‰ame
 = 
‰ame_queue
->
cuº_c⁄sumî
;

3385 
	`TW_DBG
(
TW_DBG_DEBUG
, "ª˚ivê(%d/%dËj≥g såóm, seq %d!\n", (
i
+1), 
˙t
, 
‰ame
->
‰ame_numbî
);

3386 if(!
‰ame
->
‰ame_is_îr
){

3387 
	`tw_j≥g_to_fûe
(
j≥g_fûe
, 
‰ame
);

3389 
‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(‰ame_queue, &
logic_ch∆
->
poﬁ
);

3390 
j≥g_out
:

3391 if(
j≥g_fûe
) {

3392 
	`tw_kî√l_fûe_˛o£
(
j≥g_fûe
);

3394 
j≥g_fûe
 = 
NULL
;

3398 
	}
}

3400 
	$tw_j≥g_to_fûe
(
fûe
 *
j≥g_fûe
, 
tw_vb_‰ame_tcb_t
 *
‰ame
)

3402 
mm_£gmít_t
 
fs
;

3403 
tw_vb_∑ckë_tcb_t
 *
∑ckë
;

3404 
tw_vb_∑ckë_tcb_queue_t
 *
∑ckë_queue
;

3405 
Àn
, 
fú°
 = 0;

3407 if(!
j≥g_fûe
 || !
‰ame
)

3409  -
EINVAL
;

3412 
fs
=
	`gë_fs
();

3413 
	`£t_fs
(
KERNEL_DS
);

3415 
∑ckë_queue
 = &
‰ame
->
vb_∑ckë_queue
;

3416 
fú°
 = 0;

3417 
∑ckë_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(packet_queue)){

3418 
∑ckë_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(packet_queue);

3419 
∑ckë
 = 
∑ckë_queue
->
cuº_c⁄sumî
;

3420 if(
fú°
 == 0) {

3421 
Àn
 = 
j≥g_fûe
->
f_›
->
	`wrôe
(j≥g_fûe, 
∑ckë
->
d©a
 + (
ext_h264_«l_bô°ªam_t
Ë+Öackë->
c⁄sumî_Àn
,Öackë->
∑ylﬂd_Àn
 -Öackë->c⁄sumî_À¿- ”xt_h264_«l_bô°ªam_t), &(j≥g_fûe->
f_pos
));

3422 
fú°
 = 1;

3425 
Àn
 = 
j≥g_fûe
->
f_›
->
	`wrôe
(j≥g_fûe, 
∑ckë
->
d©a
,Öackë->
∑ylﬂd_Àn
, &(j≥g_fûe->
f_pos
));

3427 
∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
’ackë_queue, 
‰ame
->
poﬁ
);

3430 
	`£t_fs
(
fs
);

3433 
	}
}

	@../../tw5864/tw5864/tw_kthread.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
èsk_°ru˘
 *
	gÆgo_kthªad
=
NULL
;

4 
©omic_t
 
	gÆgo_ru¬ög_Êag
;

6 
	$¥o˚ss_¶i˚_hódî_ªq
(
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
)

8 
dvm_chù_t
 *
chù
;

9 
tw_h264_ícode_¥›îty_t
 *
ícode_¥›îty
;

10 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

11 
tw_video_ch™_buf_poﬁ_t
 *
ícode_ch™_buf_poﬁ
;

12 
tw_video_‰ame_tcb_queue_t
 *
ícode_‰ame_queue
;

13 
tw_video_‰ame_tcb_t
 *
video_‰ame
;

14 
tw_video_∑ckë_tcb_queue_t
 *
video_∑ckë_queue
;

15 
tw_video_∑ckë_tcb_t
 *
∑ckë
;

16 
√ed_öô_rc_Êag
 = 0;

18 if(
ícode_ch™
 =
NULL
){

19 
	`TW_DBG
(
TW_DBG_FATAL
, "nullÖointer\n");

24 
chù
 = 
ícode_ch™
->chip;

25 
ícode_c⁄åﬁ
 = &
ícode_ch™
->encode_control;

26 
ícode_¥›îty
 = &
ícode_ch™
->encode_property;

27 if(
ícode_¥›îty
->
›
->
	`is_videoSènd¨d_ch™ged
”ncode_¥›îtyË=
TW_ENCODE_PROPERTY_CHANGED
){

28 
ícode_c⁄åﬁ
->
›
->
	`upd©e_image_ªsﬁuti⁄
(encode_control);

29 
ícode_c⁄åﬁ
->
i_g›_°ride
 = 0;

31 if(
ícode_¥›îty
->
›
->
	`is_ícodeSize_ch™ged
”ncode_¥›îtyË=
TW_ENCODE_PROPERTY_CHANGED
){

32 
ícode_c⁄åﬁ
->
›
->
	`upd©e_image_ªsﬁuti⁄
(encode_control);

33 
ícode_c⁄åﬁ
->
i_g›_°ride
 = 0;

35 if(
ícode_¥›îty
->
›
->
	`is_g›I¡îvÆs_ch™ged
”ncode_¥›îtyË=
TW_ENCODE_PROPERTY_CHANGED
){

36 
ícode_c⁄åﬁ
->
i_g›_°ride
 = 0;

38 if(
ícode_¥›îty
->
›
->
	`is_qpi_ch™ged
”ncode_¥›îtyË=
TW_ENCODE_PROPERTY_CHANGED
){

39 
ícode_c⁄åﬁ
->
i_g›_°ride
 = 0;

41 if(
ícode_¥›îty
->
›
->
	`is_èrgë_bôøã_ch™ged
”ncode_¥›îtyË=
TW_ENCODE_PROPERTY_CHANGED
){

42 
√ed_öô_rc_Êag
 = 1;

44 if(
ícode_¥›îty
->
›
->
	`is_èrgë_Âs_ch™ged
”ncode_¥›îtyË=
TW_ENCODE_PROPERTY_CHANGED
){

45 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
 = 
ícode_ch™
->
ma°î_¶Ÿ
;

46 
tw_h264_logic_video_¶Ÿ_t
 *
logic_video_¶Ÿ
 = 
phy_video_¶Ÿ
->
¸oss_bus_logic_video_¶Ÿ
;

47 
u32
 
èrgë
 = 
ícode_¥›îty
->
›
->
	`gë_èrgë_Âs
(encode_property);

48 
u32
 
phy_Âs
 = 
logic_video_¶Ÿ
->
›
->
	`gë_Âs
(logic_video_slot);

50 
ícode_c⁄åﬁ
->
›
->
	`upd©e_Âs_disˇrd_èbÀ
”ncode_c⁄åﬁ, 
phy_Âs
, 
èrgë
);

51 
√ed_öô_rc_Êag
 = 1;

53 if(
ícode_¥›îty
->
›
->
	`is_rcTy≥_ch™ged
”ncode_¥›îtyË=
TW_ENCODE_PROPERTY_CHANGED
){

54 
√ed_öô_rc_Êag
 = 1;

56 if(
ícode_¥›îty
->
›
->
	`is_ümgeLevñ_ch™ged
”ncode_¥›îtyË=
TW_ENCODE_PROPERTY_CHANGED
){

57 
√ed_öô_rc_Êag
 = 1;

59 if(
√ed_öô_rc_Êag
){

60 
ícode_c⁄åﬁ
->
i_g›_°ride
 = 0;

61 
ícode_ch™
->
rc_drivî
.
rc_›
->
	`öô_rc
(encode_chan);

63 if(
	`©omic_ªad
(&
ícode_ch™
->
›íed_Êag
)){

64 
ícode_ch™_buf_poﬁ
 = &
ícode_ch™
->encode_chan_buf_pool;

65 
ícode_‰ame_queue
 = &
ícode_ch™
->encode_frame_queue;

66 
ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_¥odu˚r_‰om_poﬁ
”ncode_‰ame_queue, 
ícode_ch™_buf_poﬁ
);

67 
video_‰ame
 = (
tw_video_‰ame_tcb_t
*)
ícode_‰ame_queue
->
cuº_¥odu˚r
;

68 if(
video_‰ame
 !
NULL
){

69 
video_∑ckë_queue
 = &
video_‰ame
->video_packet_queue;

70 
∑ckë
 = 
video_∑ckë_queue
->
cuº_¥odu˚r
;

71 i‡(
∑ckë
 =
NULL
) {

72 
video_∑ckë_queue
->
›
->
	`åy_gë_cuº_¥odu˚r_‰om_poﬁ
(video_∑ckë_queue, &
ícode_ch™
->
ícode_ch™_buf_poﬁ
);

73 
∑ckë
 = 
video_∑ckë_queue
->
cuº_¥odu˚r
;

75 if(
∑ckë
 =
NULL
){

76 
ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_¥odu˚r
”ncode_‰ame_queue, 
ícode_ch™_buf_poﬁ
);

77 
	`ícode_ch™_gí_ªq_msg
(
ícode_ch™
, 
REQ_ALGO_SLICE_HEAD
, 
DELAY_OP
);

78 
	`TW_DBG
(
TW_DBG_ERR
, "delay genálgo_slice_headÑeq, can't getÖacket\n");

80 
ícode_c⁄åﬁ
->
›
->
	`ˇlcuœã_‰ame_ty≥
(encode_control);

81 
video_‰ame
->
‰ame_ty≥
 = 
ícode_c⁄åﬁ
->
›
->
	`gë_‰ame_ty≥
(encode_control);

82 if(
video_‰ame
->
‰ame_ty≥
 =
H264_FRAME_TYPE_IDR
){

83 
ícode_c⁄åﬁ
->
›
->
	`£t_•s
(encode_control);

84 
ícode_c⁄åﬁ
->
›
->
	`£t_µs
(encode_control);

86 
ícode_ch™
->
rc_drivî
.
rc_›
->
	`£t_qp
”ncode_ch™, 
video_‰ame
);

87 
ícode_c⁄åﬁ
->
›
->
	`£t_¶i˚_hód
(encode_control);

88 
ícode_c⁄åﬁ
->
›
->
	`gíî©‹_hód
”ncode_c⁄åﬁ, 
video_‰ame
);

89 
ícode_c⁄åﬁ
->
›
->
	`upd©e_¶i˚_hód_ªady
(encode_control);

90 if(
ícode_c⁄åﬁ
->
›
->
	`gë_¶i˚_hód_™d_ad_°©us
(encode_control)){

91 
	`drivî_gí_dñivî_evít
(&
ícode_ch™
->
›íed_logic_ch™_ed
, 1);

95 
	`ícode_ch™_gí_ªq_msg
(
ícode_ch™
, 
REQ_ALGO_SLICE_HEAD
, 
DELAY_OP
);

96 
	`TW_DBG
(
TW_DBG_ERR
, "delay genálgo_slice_headÑeq, can't get frame\n");

99 
	`TW_DBG
(
TW_DBG_INFO
, "ch™√»%d i†˛o£d, skù REQ_ALGO_SLICE_HEAD\n", 
ícode_ch™
->
logic_ch™_id
);

100 
ícode_c⁄åﬁ
->
›
->
	`upd©e_¶i˚_hód_ªady
(encode_control);

102 
	}
}

104 
	$¥o˚ss_ch™_avSync
(
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
)

106 
tw5864_avSync_dev_t
 *
tw_devi˚_ch™
 = 
ícode_ch™
->tw_device_chan;

107 if(
tw_devi˚_ch™
 !
NULL
){

108 
avSync_‰ame_queue_t
 *
avSync_‰ame_queue
 = &
tw_devi˚_ch™
->avSync_frame_queue;

109 
avSync_‰ame_buf_poﬁ_t
 *
devi˚_buf_poﬁ
 = &
tw_devi˚_ch™
->device_buf_pool;

110 
tw_h264_logic_ícode_ch™_t
 *
h264_ma°î_ícode_drivî
 = 
tw_devi˚_ch™
->h264_master_encode_driver;

111 
tw_h264_logic_ícode_ch™_t
 *
h264_sub_ícode_drivî
 = 
tw_devi˚_ch™
->h264_sub_encode_driver;

112 
tw_j≥g_logic_ícode_ch™_t
 *
j≥g_ícode_drivî
 = 
tw_devi˚_ch™
->jpeg_encode_driver;

113 
tw_audio_drivî_t
 *
audio_ícode_drivî
 = 
tw_devi˚_ch™
->audio_encode_driver;

114 
tw_video_‰ame_tcb_queue_t
 *
h264_ma°î_ícode_‰ame_queue
=
NULL
;

115 #ifde‡ 
MV_MODULE


116 
tw_video_mv_‰ame_tcb_queue_t
 *
h264_ma°î_ícode_mv_‰ame_queue
=
NULL
;

118 
tw_video_‰ame_tcb_queue_t
 *
h264_sub_ícode_‰ame_queue
=
NULL
;

119 #ifde‡ 
MV_MODULE


120 
tw_video_mv_‰ame_tcb_queue_t
 *
h264_sub_ícode_mv_‰ame_queue
=
NULL
;

122 
tw_vb_‰ame_tcb_queue_t
 *
j≥g_ícode_‰ame_queue
 = 
NULL
;

123 
tw_audio_∑ckë_queue_t
 *
audio_∑ckë_queue
 = 
NULL
;

124 
ma°î_video_‰ame_numbî
, 
sub_video_‰ame_numbî
, 
audio_‰ame_numbî
, 
j≥g_‰ame_numbî
;

125 
u32
 
swôchSèãW‹d
 = 0, 
syncRu¬ögFœg
 = 0;

127 if(
h264_ma°î_ícode_drivî
 !
NULL
){

128 
h264_ma°î_ícode_‰ame_queue
 = &
h264_ma°î_ícode_drivî
->
ícode_‰ame_queue
;

129 #ifde‡ 
MV_MODULE


130 
h264_ma°î_ícode_mv_‰ame_queue
 = &
h264_ma°î_ícode_drivî
->
ícode_mv_‰ame_queue
;

132 
	`©omic_£t
(&
h264_ma°î_ícode_drivî
->
have_dñivî_sync_Êag
, 0);

134 if(
h264_sub_ícode_drivî
 !
NULL
){

135 
h264_sub_ícode_‰ame_queue
 = &
h264_sub_ícode_drivî
->
ícode_‰ame_queue
;

136 #ifde‡ 
MV_MODULE


137 
h264_sub_ícode_mv_‰ame_queue
 = &
h264_sub_ícode_drivî
->
ícode_mv_‰ame_queue
;

139 
	`©omic_£t
(&
h264_sub_ícode_drivî
->
have_dñivî_sync_Êag
, 0);

141 if(
j≥g_ícode_drivî
 !
NULL
) {

142 
j≥g_ícode_‰ame_queue
 = &
j≥g_ícode_drivî
->
j≥g_‰ame_queue
;

144 if(
audio_ícode_drivî
 !
NULL
){

145 
audio_∑ckë_queue
 = &
audio_ícode_drivî
->audio_packet_queue;

148 
syncRu¬ögFœg
 = 0x7;

149 
syncRu¬ögFœg
){

150 
ma°î_video_‰ame_numbî
 = 
h264_ma°î_ícode_‰ame_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(h264_master_encode_frame_queue);

151 
sub_video_‰ame_numbî
 = 
h264_sub_ícode_‰ame_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(h264_sub_encode_frame_queue);

152 
j≥g_‰ame_numbî
 = 
j≥g_ícode_‰ame_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(jpeg_encode_frame_queue);

153 
audio_‰ame_numbî
 = 
audio_∑ckë_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(audio_packet_queue);

154 if(
ma°î_video_‰ame_numbî
==0){

155 
swôchSèãW‹d
 &= 0xfffffffe;

157 
swôchSèãW‹d
 |= 0x1;

159 if(
sub_video_‰ame_numbî
==0){

160 
swôchSèãW‹d
 &= 0xfffffffd;

162 
swôchSèãW‹d
 |= 0x2;

164 if(
audio_‰ame_numbî
==0){

165 
swôchSèãW‹d
 &= 0xfffffffb;

167 
swôchSèãW‹d
 |= 0x4;

169 if(
j≥g_‰ame_numbî
) {

170 
swôchSèãW‹d
 |= 0x8;

172 
swôchSèãW‹d
 &= 0xfffffff7;

174 if(
swôchSèãW‹d
 == 0){

178 
avSync_‰ame_queue
->
›
->
	`åy_gë_cuº_¥odu˚r_‰om_poﬁ
◊vSync_‰ame_queue, 
devi˚_buf_poﬁ
);

179 if(
avSync_‰ame_queue
->
cuº_¥odu˚r
 !
NULL
){

180 
swôchSèãW‹d
){

182 
h264_ma°î_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(h264_master_encode_frame_queue);

183 if(
h264_ma°î_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

184 
h264_ma°î_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(h264_ma°î_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
h264_ma°î_‰ame
);

185 
h264_ma°î_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(h264_ma°î_ícode_‰ame_queue, &
h264_ma°î_ícode_drivî
->
ícode_ch™_buf_poﬁ
);

189 
h264_sub_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(h264_sub_encode_frame_queue);

190 if(
h264_sub_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

191 
h264_sub_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(h264_sub_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
h264_sub_‰ame
);

192 
h264_sub_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(h264_sub_ícode_‰ame_queue, &
h264_sub_ícode_drivî
->
ícode_ch™_buf_poﬁ
);

196 
audio_∑ckë_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(audio_packet_queue);

197 if(
audio_∑ckë_queue
->
cuº_c⁄sumî
 !
NULL
){

198 
audio_∑ckë_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
◊udio_∑ckë_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
audio_ícode_‰ame
);

199 
audio_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊udio_∑ckë_queue, &
audio_ícode_drivî
->
audio_buf_poﬁ
);

203 
j≥g_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(jpeg_encode_frame_queue);

204 if(
j≥g_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

205 
j≥g_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(j≥g_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
j≥g_‰ame
);

206 
j≥g_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(j≥g_ícode_‰ame_queue, &
j≥g_ícode_drivî
->
poﬁ
);

210 
h264_ma°î_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(h264_master_encode_frame_queue);

211 if(
h264_ma°î_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

212 
h264_ma°î_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(h264_ma°î_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
h264_ma°î_‰ame
);

213 
h264_ma°î_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(h264_ma°î_ícode_‰ame_queue, &
h264_ma°î_ícode_drivî
->
ícode_ch™_buf_poﬁ
);

215 
h264_sub_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(h264_sub_encode_frame_queue);

216 if(
h264_sub_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

217 
h264_sub_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(h264_sub_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
h264_sub_‰ame
);

218 
h264_sub_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(h264_sub_ícode_‰ame_queue, &
h264_sub_ícode_drivî
->
ícode_ch™_buf_poﬁ
);

222 
h264_ma°î_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(h264_master_encode_frame_queue);

223 if(
h264_ma°î_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

224 
h264_ma°î_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(h264_ma°î_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
h264_ma°î_‰ame
);

225 
h264_ma°î_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(h264_ma°î_ícode_‰ame_queue, &
h264_ma°î_ícode_drivî
->
ícode_ch™_buf_poﬁ
);

227 
audio_∑ckë_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(audio_packet_queue);

228 if(
audio_∑ckë_queue
->
cuº_c⁄sumî
 !
NULL
){

229 
audio_∑ckë_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
◊udio_∑ckë_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
audio_ícode_‰ame
);

230 
audio_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊udio_∑ckë_queue, &
audio_ícode_drivî
->
audio_buf_poﬁ
);

234 
h264_sub_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(h264_sub_encode_frame_queue);

235 if(
h264_sub_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

236 
h264_sub_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(h264_sub_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
h264_sub_‰ame
);

237 
h264_sub_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(h264_sub_ícode_‰ame_queue, &
h264_sub_ícode_drivî
->
ícode_ch™_buf_poﬁ
);

239 
audio_∑ckë_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(audio_packet_queue);

240 if(
audio_∑ckë_queue
->
cuº_c⁄sumî
 !
NULL
){

241 
audio_∑ckë_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
◊udio_∑ckë_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
audio_ícode_‰ame
);

242 
audio_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊udio_∑ckë_queue, &
audio_ícode_drivî
->
audio_buf_poﬁ
);

246 
h264_ma°î_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(h264_master_encode_frame_queue);

247 if(
h264_ma°î_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

248 
h264_ma°î_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(h264_ma°î_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
h264_ma°î_‰ame
);

249 
h264_ma°î_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(h264_ma°î_ícode_‰ame_queue, &
h264_ma°î_ícode_drivî
->
ícode_ch™_buf_poﬁ
);

251 
j≥g_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(jpeg_encode_frame_queue);

252 if(
j≥g_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

253 
j≥g_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(j≥g_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
j≥g_‰ame
);

254 
j≥g_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(j≥g_ícode_‰ame_queue, &
j≥g_ícode_drivî
->
poﬁ
);

258 
h264_sub_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(h264_sub_encode_frame_queue);

259 if(
h264_sub_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

260 
h264_sub_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(h264_sub_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
h264_sub_‰ame
);

261 
h264_sub_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(h264_sub_ícode_‰ame_queue, &
h264_sub_ícode_drivî
->
ícode_ch™_buf_poﬁ
);

263 
j≥g_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(jpeg_encode_frame_queue);

264 if(
j≥g_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

265 
j≥g_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(j≥g_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
j≥g_‰ame
);

266 
j≥g_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(j≥g_ícode_‰ame_queue, &
j≥g_ícode_drivî
->
poﬁ
);

270 
audio_∑ckë_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(audio_packet_queue);

271 if(
audio_∑ckë_queue
->
cuº_c⁄sumî
 !
NULL
){

272 
audio_∑ckë_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
◊udio_∑ckë_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
audio_ícode_‰ame
);

273 
audio_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊udio_∑ckë_queue, &
audio_ícode_drivî
->
audio_buf_poﬁ
);

275 
j≥g_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(jpeg_encode_frame_queue);

276 if(
j≥g_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

277 
j≥g_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(j≥g_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
j≥g_‰ame
);

278 
j≥g_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(j≥g_ícode_‰ame_queue, &
j≥g_ícode_drivî
->
poﬁ
);

282 
h264_ma°î_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(h264_master_encode_frame_queue);

283 if(
h264_ma°î_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

284 
h264_ma°î_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(h264_ma°î_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
h264_ma°î_‰ame
);

285 
h264_ma°î_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(h264_ma°î_ícode_‰ame_queue, &
h264_ma°î_ícode_drivî
->
ícode_ch™_buf_poﬁ
);

287 
h264_sub_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(h264_sub_encode_frame_queue);

288 if(
h264_sub_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

289 
h264_sub_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(h264_sub_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
h264_sub_‰ame
);

290 
h264_sub_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(h264_sub_ícode_‰ame_queue, &
h264_sub_ícode_drivî
->
ícode_ch™_buf_poﬁ
);

292 
audio_∑ckë_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(audio_packet_queue);

293 if(
audio_∑ckë_queue
->
cuº_c⁄sumî
 !
NULL
){

294 
audio_∑ckë_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
◊udio_∑ckë_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
audio_ícode_‰ame
);

295 
audio_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊udio_∑ckë_queue, &
audio_ícode_drivî
->
audio_buf_poﬁ
);

299 
h264_ma°î_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(h264_master_encode_frame_queue);

300 if(
h264_ma°î_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

301 
h264_ma°î_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(h264_ma°î_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
h264_ma°î_‰ame
);

302 
h264_ma°î_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(h264_ma°î_ícode_‰ame_queue, &
h264_ma°î_ícode_drivî
->
ícode_ch™_buf_poﬁ
);

304 
h264_sub_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(h264_sub_encode_frame_queue);

305 if(
h264_sub_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

306 
h264_sub_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(h264_sub_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
h264_sub_‰ame
);

307 
h264_sub_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(h264_sub_ícode_‰ame_queue, &
h264_sub_ícode_drivî
->
ícode_ch™_buf_poﬁ
);

309 
j≥g_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(jpeg_encode_frame_queue);

310 if(
j≥g_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

311 
j≥g_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(j≥g_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
j≥g_‰ame
);

312 
j≥g_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(j≥g_ícode_‰ame_queue, &
j≥g_ícode_drivî
->
poﬁ
);

316 
h264_ma°î_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(h264_master_encode_frame_queue);

317 if(
h264_ma°î_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

318 
h264_ma°î_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(h264_ma°î_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
h264_ma°î_‰ame
);

319 
h264_ma°î_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(h264_ma°î_ícode_‰ame_queue, &
h264_ma°î_ícode_drivî
->
ícode_ch™_buf_poﬁ
);

321 
audio_∑ckë_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(audio_packet_queue);

322 if(
audio_∑ckë_queue
->
cuº_c⁄sumî
 !
NULL
){

323 
audio_∑ckë_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
◊udio_∑ckë_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
audio_ícode_‰ame
);

324 
audio_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊udio_∑ckë_queue, &
audio_ícode_drivî
->
audio_buf_poﬁ
);

326 
j≥g_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(jpeg_encode_frame_queue);

327 if(
j≥g_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

328 
j≥g_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(j≥g_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
j≥g_‰ame
);

329 
j≥g_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(j≥g_ícode_‰ame_queue, &
j≥g_ícode_drivî
->
poﬁ
);

333 
h264_sub_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(h264_sub_encode_frame_queue);

334 if(
h264_sub_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

335 
h264_sub_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(h264_sub_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
h264_sub_‰ame
);

336 
h264_sub_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(h264_sub_ícode_‰ame_queue, &
h264_sub_ícode_drivî
->
ícode_ch™_buf_poﬁ
);

338 
audio_∑ckë_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(audio_packet_queue);

339 if(
audio_∑ckë_queue
->
cuº_c⁄sumî
 !
NULL
){

340 
audio_∑ckë_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
◊udio_∑ckë_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
audio_ícode_‰ame
);

341 
audio_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊udio_∑ckë_queue, &
audio_ícode_drivî
->
audio_buf_poﬁ
);

343 
j≥g_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(jpeg_encode_frame_queue);

344 if(
j≥g_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

345 
j≥g_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(j≥g_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
j≥g_‰ame
);

346 
j≥g_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(j≥g_ícode_‰ame_queue, &
j≥g_ícode_drivî
->
poﬁ
);

350 
h264_ma°î_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(h264_master_encode_frame_queue);

351 if(
h264_ma°î_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

352 
h264_ma°î_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(h264_ma°î_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
h264_ma°î_‰ame
);

353 
h264_ma°î_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(h264_ma°î_ícode_‰ame_queue, &
h264_ma°î_ícode_drivî
->
ícode_ch™_buf_poﬁ
);

355 
h264_sub_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(h264_sub_encode_frame_queue);

356 if(
h264_sub_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

357 
h264_sub_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(h264_sub_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
h264_sub_‰ame
);

358 
h264_sub_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(h264_sub_ícode_‰ame_queue, &
h264_sub_ícode_drivî
->
ícode_ch™_buf_poﬁ
);

360 
audio_∑ckë_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(audio_packet_queue);

361 if(
audio_∑ckë_queue
->
cuº_c⁄sumî
 !
NULL
){

362 
audio_∑ckë_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
◊udio_∑ckë_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
audio_ícode_‰ame
);

363 
audio_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
◊udio_∑ckë_queue, &
audio_ícode_drivî
->
audio_buf_poﬁ
);

365 
j≥g_ícode_‰ame_queue
->
›
->
	`åy_gë_cuº_c⁄sumî_‰om_queue
(jpeg_encode_frame_queue);

366 if(
j≥g_ícode_‰ame_queue
->
cuº_c⁄sumî
 !
NULL
){

367 
j≥g_ícode_‰ame_queue
->
cuº_c⁄sumî
->
›
->
	`ª„ªn˚
(j≥g_ícode_‰ame_queue->cuº_c⁄sumî, &
avSync_‰ame_queue
->
cuº_¥odu˚r
->
j≥g_‰ame
);

368 
j≥g_ícode_‰ame_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(j≥g_ícode_‰ame_queue, &
j≥g_ícode_drivî
->
poﬁ
);

372 
syncRu¬ögFœg
 = 0;

375 
avSync_‰ame_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(avSync_frame_queue);

386 
	`wake_up
(&
tw_devi˚_ch™
->
waô_pﬁl
);

389 
	}
}

391 
	$¥o˚ss_chù_ª£t_ªq
(
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
)

393 
	`¥ötk
("%s.%d:%d-%d\n", 
__FUNCTION__
, 
__LINE__
, 
ícode_ch™
->
phy_¶Ÿ_id
,Éncode_ch™->
logic_ch™_id
);

394 
	}
}

398 
	$kthªad_Ægo_agít
(*
d©a
)

400 
tw_kthªad_msg_poﬁ_t
 *
tw_msg_poﬁ
;

401 
tw_kthªad_msg_queue_t
 *
tw_msg_queue
;

402 
esˇ≥
 = 0;

404 
	`gë_msg_poﬁ_hódî
(&
tw_msg_poﬁ
);

405 if(
	`öô_tw_kthªad_msg_poﬁ
(
tw_msg_poﬁ
) != 0){

406 
	`¥ötk
("createálgo msgÖoolÉrr\n");

409 
	`gë_msg_queue_hódî
(&
tw_msg_queue
);

410 
	`öô_tw_kthªad_msg_queue
(
tw_msg_queue
);

411 
	`©omic_£t
(&
Ægo_ru¬ög_Êag
, 1);

413 
tw_msg_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(tw_msg_queue);

414 if(
tw_msg_queue
->
cuº_c⁄sumî
 !
NULL
) {

415 
tw_msg_queue
->
cuº_c⁄sumî
->
msg_ty≥
){

416 
REQ_ALGO_SLICE_HEAD
:

417 
	`¥o˚ss_¶i˚_hódî_ªq
((
tw_h264_logic_ícode_ch™_t
*)
tw_msg_queue
->
cuº_c⁄sumî
->
msg_c⁄ãxt
);

419 
REQ_AV_SYNC
:

420 
	`¥o˚ss_ch™_avSync
((
tw_h264_logic_ícode_ch™_t
*)
tw_msg_queue
->
cuº_c⁄sumî
->
msg_c⁄ãxt
);

422 
REQ_ALGO_CHIP_RESET
:

423 
	`¥o˚ss_chù_ª£t_ªq
((
tw_h264_logic_ícode_ch™_t
*)
tw_msg_queue
->
cuº_c⁄sumî
->
msg_c⁄ãxt
);

425 
SYSTEM_ESCAPE_MSG
:

426 
esˇ≥
 = 1;

429 
	`¥ötk
("I d⁄'àknow'†msgÅy≥ = %d\n", 
tw_msg_queue
->
cuº_c⁄sumî
->
msg_ty≥
);

433 
tw_msg_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(tw_msg_queue);

434 if(
esˇ≥
){

438 
	`ªmove_tw_kthªad_msg_queue
(
tw_msg_queue
);

439 
	`ªmove_tw_kthªad_msg_poﬁ
(
tw_msg_poﬁ
);

440 
	`¥ötk
("suc˚s†esˇ≥ %s\n", 
__FUNCTION__
);

441 
	`©omic_£t
(&
Ægo_ru¬ög_Êag
, 0);

443 
	}
}

449 
	$öô_dvm_kthªad_m™age
()

451 
Ægo_kthªad
=
NULL
;

452 
	`©omic_£t
(&
Ægo_ru¬ög_Êag
, 0);

453 
	}
}

455 
	$nŸify_Ægo_kthªad_kûl_my£lf
()

457 
tw_kthªad_msg_poﬁ_t
 *
tw_msg_poﬁ
;

458 
tw_kthªad_msg_queue_t
 *
tw_msg_queue
;

459 
tw_kthªad_msg_t
 *
tw_msg
;

461 
	`¥ötk
("%s\n", 
__FUNCTION__
);

462 
	`gë_msg_poﬁ_hódî
(&
tw_msg_poﬁ
);

463 
	`gë_msg_queue_hódî
(&
tw_msg_queue
);

464 
tw_msg_poﬁ
->
›
->
	`gë
—w_msg_poﬁ, &
tw_msg
);

465 if(
tw_msg
 !
NULL
){

466 
tw_msg
->
msg_ty≥
 = 
SYSTEM_ESCAPE_MSG
;

467 
tw_msg_queue
->
›
->
	`put
—w_msg_queue, 
tw_msg
);

469 
	}
}

471 
	$waô_10_£c⁄d_f‹_Ægo_kthªad
()

473 
cou¡
=0;

474 
	`©omic_ªad
(&
Ægo_ru¬ög_Êag
)){

475 
	`¥ötk
("%s, %d, %d\n", 
__FUNCTION__
, 
__LINE__
, 
cou¡
);

476 
	`m¶ìp
(100);

477 
cou¡
++;

478 if(
cou¡
 > 100){

482 
	}
}

484 
	$f‹˚_˛o£_kthªad
(
èsk_°ru˘
 **
èsk
)

486 
	`kthªad_°›
(*
èsk
);

487 *
èsk
 = 
NULL
;

488 
	}
}

490 
	$°¨t_dvm_kthªad
()

492 
«me
[64];

493 
	`öô_dvm_kthªad_m™age
();

494 
	`mem£t
(
«me
, 0, 64);

495 
	`•rötf
(
«me
, "tw_agend");

496 
Ægo_kthªad
 = 
	`kthªad_run
(
kthªad_Ægo_agít
, 
NULL
, 
«me
);

497 if(
	`IS_ERR
(
Ægo_kthªad
)) {

498 
	`¥ötk
("start dvm_algo_kthreadÉrr\n");

499 
	`©omic_£t
(&
Ægo_ru¬ög_Êag
, 0);

500 
Ægo_kthªad
 = 
NULL
;

502 
	}
}

504 
	$°›_dvm_kthªad
()

506 if(
Ægo_kthªad
 !
NULL
) {

507 
	`nŸify_Ægo_kthªad_kûl_my£lf
();

508 
	`waô_10_£c⁄d_f‹_Ægo_kthªad
();

509 
	`¥ötk
("%s,%d,ok\n", 
__FUNCTION__
, 
__LINE__
);

510 if(
	`©omic_ªad
(&
Ægo_ru¬ög_Êag
)) {

511 
	`¥ötk
("algo_kthread myself killÉrr, so force kill it\n");

512 
	`f‹˚_˛o£_kthªad
(&
Ægo_kthªad
);

513 
	`©omic_£t
(&
Ægo_ru¬ög_Êag
, 0);

515 
Ægo_kthªad
 = 
NULL
;

517 
	`¥ötk
("%s,%d,ok\n", 
__FUNCTION__
, 
__LINE__
);

518 
	}
}

	@../../tw5864/tw5864/tw_osd_engine.c

1 
	~<tw5864/dvm_comm⁄.h
>

2 
	~<löux/πc.h
>

4 
gë_ascii_lib12_addr
(**
addr_±r
, * 
ch¨_id
);

5 
gë_lib12_addr
(**
addr_±r
, * 
lib16_id
);

6 
gë_ascii_lib24_addr
(**
addr_±r
, * 
ch¨_id
);

7 
gë_lib24_addr
(**
addr_±r
, * 
lib16_id
);

9 
	#YEAR_STRING_LEN
 (11)

	)

10 
	#TIME_STRING_LEN
 (9)

	)

11 
	#CHANNEL_STRING_LEN
 (10)

	)

12 
	#YEAR_TIME_STRING_LEN
 (
YEAR_STRING_LEN
+
TIME_STRING_LEN
+
CHANNEL_STRING_LEN
+4+40)

	)

13 
	#UPDATE_OSD_DATA_SECTION
 (1)

	)

14 
	#UPDATE_OSD_ATTR_SECTION
 (2)

	)

16 #ifde‡ 
USED_STATIC_OSD_CHAR_BUF


17 
osd_mb_ch¨_íåy_t
 
	gosd_md_ˇche
[
MAX_CHIP_NUM_IN_BOARD
][
OSD_MB_ENTRY_NUMBER
];

20 
osd_sy°em_timî_t
 
	gosd_timî
 = {

21 .
yór
 = 1970,

22 .
	gm⁄th
 = 1,

23 .
	gday
 = 1,

24 .
	ghour
 = 0,

25 .
	gmöuã
 = 0,

26 .
	g£c⁄d
 = 0,

27 .
	g√ed_upd©e_m≠_èbÀ
[0] = 0xffffffff,

30 
	$ch™ge_ícode_osd_time
(
πc_time
 *
timî
)

32 
Êag
=0;

33 if(
osd_timî
.
yór
 !
timî
->
tm_yór
){

34 
osd_timî
.
yór
 = 
timî
->
tm_yór
;

35 
Êag
 = 1;

37 if(
osd_timî
.
m⁄th
 !
timî
->
tm_m⁄
){

38 
osd_timî
.
m⁄th
 = 
timî
->
tm_m⁄
;

39 
Êag
 = 1;

41 if(
osd_timî
.
day
 !
timî
->
tm_mday
){

42 
osd_timî
.
day
 = 
timî
->
tm_mday
;

43 
Êag
 = 1;

45 if(
osd_timî
.
hour
 !
timî
->
tm_hour
){

46 
osd_timî
.
hour
 = 
timî
->
tm_hour
;

47 
Êag
 = 1;

49 if(
osd_timî
.
möuã
 !
timî
->
tm_mö
){

50 
osd_timî
.
möuã
 = 
timî
->
tm_mö
;

51 
Êag
 = 1;

53 if(
osd_timî
.
£c⁄d
 !
timî
->
tm_£c
){

54 
osd_timî
.
£c⁄d
 = 
timî
->
tm_£c
;

55 
Êag
 = 1;

57 if(
Êag
){

58 
i
;

59 
i
=0; i<
MAX_CHIP_NUM_IN_BOARD
; i++){

60 
osd_timî
.
√ed_upd©e_m≠_èbÀ
[
i
] = 0xffffffff;

63 
	}
}

65 c⁄° 
	g£c_of_1day
 = 86400;

66 c⁄° 
	g£c_of_366day
 = 31622400;

67 c⁄° 
	g£c_of_365day
 = 31536000;

68 c⁄° 
	g£c_of_31day
 = 2678400;

69 c⁄° 
	g£c_of_30day
 = 2592000;

70 c⁄° 
	g£c_of_29day
 = 2505600;

71 c⁄° 
	g£c_of_28day
 = 2419200;

72 c⁄° 
	g£c_of_2000_to_2007
 = 252460800;

73 c⁄° 
	g£c_of_1970_to_1999
 = 946684800;

74 c⁄° 
	g£c_of_1970_to_2007
 = 1199145600;

75 
	gcur_wÆ…ime_£c
 = 0;

76 
πc_time
 
	gsy°em_time
;

77 
	gmpc8313_timî
;

79 
ölöe
 
	$is_run_yór
(
yór
)

81 if((
yór
 % 4 == 0 && year % 100 != 0) || year % 400 == 0)

84 
	}
}

86 
ölöe
 
	$gë_day_of_m⁄th
(
yór
, 
m⁄th
)

88 
m⁄th
) {

103 i‡(1 =
	`is_run_yór
(
yór
))

111 
	}
}

113 
	$å™s_£c_to_time
(
öput_£c
)

115 
yór
 = 0, 
m⁄th
 = 0, 
day
 = 0, 
hour
 = 0, 
mö
 = 0, 
£c
 = 0;

116 
ö_£c
 = 
öput_£c
;

118 i‡(
ö_£c
 < 0)

120 i‡(
öput_£c
 > 
£c_of_1970_to_2007
) {

121 
yór
 = 2008;

122 
ö_£c
 -
£c_of_1970_to_2007
;

123 } i‡(
öput_£c
 > 
£c_of_1970_to_1999
) {

124 
yór
 = 2000;

125 
ö_£c
 -
£c_of_1970_to_1999
;

127 
yór
 = 1970;

128 ;;
yór
++) {

129 i‡(1 =
	`is_run_yór
(
yór
)) {

130 i‡(
ö_£c
 >
£c_of_366day
) {

131 
ö_£c
 -
£c_of_366day
;

135 i‡(
ö_£c
 >
£c_of_365day
) {

136 
ö_£c
 -
£c_of_365day
;

141 
m⁄th
 = 1;

142 ;;
m⁄th
++) {

143 i‡(31 =
	`gë_day_of_m⁄th
(
yór
, 
m⁄th
)) {

144 i‡(
ö_£c
 >
£c_of_31day
) {

145 
ö_£c
 -
£c_of_31day
;

148 } i‡(30 =
	`gë_day_of_m⁄th
(
yór
, 
m⁄th
)) {

149 i‡(
ö_£c
 >
£c_of_30day
) {

150 
ö_£c
 -
£c_of_30day
;

153 } i‡(28 =
	`gë_day_of_m⁄th
(
yór
, 
m⁄th
)) {

154 i‡(
ö_£c
 >
£c_of_28day
) {

155 
ö_£c
 -
£c_of_28day
;

158 } i‡(29 =
	`gë_day_of_m⁄th
(
yór
, 
m⁄th
)) {

159 i‡(
ö_£c
 >
£c_of_29day
) {

160 
ö_£c
 -
£c_of_29day
;

165 
day
 = 1;

166 ;;
day
++) {

167 i‡(
ö_£c
 >
£c_of_1day
) {

168 
ö_£c
 -
£c_of_1day
;

172 
hour
 = 0;

173 ;;
hour
++) {

174 i‡(
ö_£c
 >= 3600) {

175 
ö_£c
 -= 3600;

179 
mö
 = 0;

180 ;;
mö
++) {

181 i‡(
ö_£c
 >= 60) {

182 
ö_£c
 -= 60;

186 
£c
 = 
ö_£c
;

188 
sy°em_time
.
tm_yór
 = 
yór
;

189 
sy°em_time
.
tm_m⁄
 = 
m⁄th
;

190 
sy°em_time
.
tm_mday
 = 
day
;

191 
sy°em_time
.
tm_hour
 = 
hour
;

192 
sy°em_time
.
tm_mö
 = 
mö
;

193 
sy°em_time
.
tm_£c
 = 
£c
;

194 
	}
}

196 
	$ª‰esh_wÆ…ime_of_£c
(
timevÆ
 *
tv1
)

198 
√w_wÆ…ime_£c
;

200 
	`do_gëtimeofday
(
tv1
);

201 
mpc8313_timî
 = 
tv1
->
tv_£c
*1000 + (tv1->
tv_u£c
)/1000;

202 
√w_wÆ…ime_£c
 = ()
tv1
->
tv_£c
;

203 i‡(
cur_wÆ…ime_£c
 =
√w_wÆ…ime_£c
)

205 
cur_wÆ…ime_£c
 = 
√w_wÆ…ime_£c
;

206 i‡(
√w_wÆ…ime_£c
 - 
cur_wÆ…ime_£c
 =1 && (
sy°em_time
.
tm_hour
 < 23 || sy°em_time.
tm_mö
 < 59 || sy°em_time.
tm_£c
 < 59)) {

207 
sy°em_time
.
tm_£c
++;

208 i‡(
sy°em_time
.
tm_£c
 == 60) {

209 
sy°em_time
.
tm_£c
 = 0;

210 
sy°em_time
.
tm_mö
++;

211 i‡(
sy°em_time
.
tm_mö
 == 60) {

212 
sy°em_time
.
tm_mö
 = 0;

213 
sy°em_time
.
tm_hour
++;

217 
	`å™s_£c_to_time
(
cur_wÆ…ime_£c
);

219 
	}
}

221 
	$check_πc_time
(
timevÆ
 *
tv1
)

223 
	`ª‰esh_wÆ…ime_of_£c
(
tv1
);

224 
	`ch™ge_ícode_osd_time
(&
sy°em_time
);

225 
	}
}

227 
u32
 
	$gë_osd_ch™_ba£
(
phy_¶Ÿ_id
)

229 
u32
 
ch™_ba£
;

230 
ch™_ba£
 = (((
phy_¶Ÿ_id
>>2)<<3)+(phy_slot_id&0x3));

231 
ch™_ba£
 <<= 20;

232  
ch™_ba£
;

233 
	}
}

235 
u32
 
	$gë_phy_¶Ÿ_id_by_osd_ch™_ba£
(
tw5864_vd_¸oss_bus_t
 *
vd_bus
, 
u32
 
ch™_ba£_addr
, 
osd_¶Ÿ_id
, 
IsDdrCom¥essMode
)

237 
phy_¶Ÿ_id
, 
ddr_∑ge_id
, 
logic_íc_ch_id
;

238 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

239 
i
 = 0, 
ch_ba£
 = 0;;

241 
ddr_∑ge_id
 = 
ch™_ba£_addr
>>19;

242 
logic_íc_ch_id
 = 
ddr_∑ge_id
>>4;

243 
ch_ba£
 = 0;

244 if(
IsDdrCom¥essMode
 =
DDR_MAP_COMPRESS_ENABLE
){

245 
i
 = 0; i < 
logic_íc_ch_id
; i++) {

246 
vd_bus
->
›
->
	`gë_phy_video_¶Ÿ_by_phy_id
(vd_bus, 
ch_ba£
, &
phy_video_¶Ÿ
);

247 
phy_video_¶Ÿ
->
›
->
	`gë_video_size
(phy_video_slot)) {

249 
TW_VIDEO_SIZE_D1
:

250 
ch_ba£
 += 1;

252 
TW_VIDEO_SIZE_HALF_D1
:

253 
ch_ba£
 += 2;

255 
TW_VIDEO_SIZE_CIF
:

256 
ch_ba£
 += 4;

260 
logic_íc_ch_id
 = 
ch_ba£
;

262 
logic_íc_ch_id
 = (
osd_¶Ÿ_id
 >> 2);

263 
logic_íc_ch_id
 <<= 0;

265 
phy_¶Ÿ_id
 = 
logic_íc_ch_id
;

267  
phy_¶Ÿ_id
;

268 
	}
}

270 
u32
 
	$gë_osd_ª˘™gñ_d©a_ba£
(
ª˘_id
, 
videoSizeMode
, 
Ma°îOrSub
, 
u32
 
ch™_ba£
)

272 
u32
 
osd_ª˘™gÀ_d©a_ba£
;

273 
videoSizeMode
){

275 
TW_VIDEO_SIZE_D1
:

276 if(
ª˘_id
 <=2){

277 
osd_ª˘™gÀ_d©a_ba£
 = (
ª˘_id
<<18) + 0x30000;

279 
osd_ª˘™gÀ_d©a_ba£
 = 0xc0000 + ((
ª˘_id
-3)<<16);

281 if(
Ma°îOrSub
 =
TW_SUB_BITSTREAM
){

282 
osd_ª˘™gÀ_d©a_ba£
 += 0x8000;

285 
TW_VIDEO_SIZE_HALF_D1
:

286 
TW_VIDEO_SIZE_CIF
:

287 
osd_ª˘™gÀ_d©a_ba£
 = (
ª˘_id
<<17) + 0x10000;

288 if(
Ma°îOrSub
 =
TW_SUB_BITSTREAM
){

289 
osd_ª˘™gÀ_d©a_ba£
 += 0xa000;

291 
osd_ª˘™gÀ_d©a_ba£
 += 0x2000;

295 
osd_ª˘™gÀ_d©a_ba£
 +
ch™_ba£
;

296  
osd_ª˘™gÀ_d©a_ba£
;

297 
	}
}

299 
	$gë_osd_ª˘™gñ_d©a_ba£_™d_off£t
(
u32
 
ª˘™gÀ_ba£_addr
, 
osd_mode
, 
osd_m≠_mode
, *
osd_d©a_0_8_ba£_addr
, *
osd_d©a_addr_off£t_0_2
)

301 
u32
 
ª˘™gÀ_ba£_dw‹d_addr
 = 
ª˘™gÀ_ba£_addr
>>2;

302 
osd_mode
){

303 
ENCODE_OSD_MODE0
:

304 
ENCODE_OSD_MODE1
:

305 
osd_m≠_mode
){

306 
Y8MB_X128MB_OSDMODE013
:

307 *
osd_d©a_addr_off£t_0_2
 = ((
ª˘™gÀ_ba£_dw‹d_addr
>>11)&0x7);

308 *
osd_d©a_0_8_ba£_addr
 = ((
ª˘™gÀ_ba£_dw‹d_addr
>>14)&0x1ff);

310 
Y16MB_X64MB_OSDMODE013
:

311 *
osd_d©a_addr_off£t_0_2
 = ((
ª˘™gÀ_ba£_dw‹d_addr
>>11)&0x7);

312 *
osd_d©a_0_8_ba£_addr
 = ((
ª˘™gÀ_ba£_dw‹d_addr
>>14)&0x1ff);

314 
Y32MB_X32MB_OSDMODE013
:

315 *
osd_d©a_addr_off£t_0_2
 = ((
ª˘™gÀ_ba£_dw‹d_addr
>>11)&0x7);

316 *
osd_d©a_0_8_ba£_addr
 = ((
ª˘™gÀ_ba£_dw‹d_addr
>>14)&0x1ff);

319 
Y64MB_X16MB_OSDMODE013
:

320 *
osd_d©a_addr_off£t_0_2
 = ((
ª˘™gÀ_ba£_dw‹d_addr
>>11)&0x7);

321 *
osd_d©a_0_8_ba£_addr
 = ((
ª˘™gÀ_ba£_dw‹d_addr
>>14)&0x1ff);

325 
ENCODE_OSD_MODE2
:

326 
osd_m≠_mode
){

327 
Y8MB_X128MB_OSDMODE013
:

328 *
osd_d©a_0_8_ba£_addr
 = ((
ª˘™gÀ_ba£_dw‹d_addr
>>14)&0x1ff);

330 
Y16MB_X64MB_OSDMODE013
:

331 *
osd_d©a_0_8_ba£_addr
 = ((
ª˘™gÀ_ba£_dw‹d_addr
>>14)&0x1ff);

333 
Y32MB_X32MB_OSDMODE013
:

334 *
osd_d©a_0_8_ba£_addr
 = ((
ª˘™gÀ_ba£_dw‹d_addr
>>15)&0xff);

337 
Y64MB_X16MB_OSDMODE013
:

338 *
osd_d©a_0_8_ba£_addr
 = ((
ª˘™gÀ_ba£_dw‹d_addr
>>15)&0xff);

341 *
osd_d©a_addr_off£t_0_2
 = 0;

344 
ENCODE_OSD_MODE3
:

345 *
osd_d©a_0_8_ba£_addr
 = 0;

346 *
osd_d©a_addr_off£t_0_2
 = 0;

349 
	}
}

351 
u32
 
	$gë_osd_ª˘™gÀ_mb_d©a_ba£
(
osd_mode
, 
osd_m≠_mode
, 
mb_x
, 
mb_y
, 
ª˘™gÀ_d©a_ba£
)

353 
u32
 
osd_md_d©a_ba£
, 
mb_büs
;

354 
osd_md_d©a_ba£
 = (
ª˘™gÀ_d©a_ba£
>>2);

355 
osd_mode
){

356 
ENCODE_OSD_MODE0
:

357 
ENCODE_OSD_MODE1
:

358 
osd_m≠_mode
){

359 
Y8MB_X128MB_OSDMODE013
:

360 
mb_büs
 = (((
mb_y
&0x7)<<11)|((
mb_x
&0x7f)<<4));

362 
Y16MB_X64MB_OSDMODE013
:

363 
mb_büs
 = (((
mb_y
&0xf)<<10)|((
mb_x
&0x3f)<<4));

365 
Y32MB_X32MB_OSDMODE013
:

366 
mb_büs
 = (((
mb_y
&0x1f)<<9)|((
mb_x
&0x1f)<<4));

369 
Y64MB_X16MB_OSDMODE013
:

370 
mb_büs
 = (((
mb_y
&0x3f)<<8)|((
mb_x
&0xf)<<4));

374 
ENCODE_OSD_MODE2
:

375 
osd_m≠_mode
){

376 
Y8MB_X128MB_OSDMODE013
:

377 
mb_büs
 = (((
mb_y
&0x7)<<11)|((
mb_x
&0xf)<<7));

379 
Y16MB_X64MB_OSDMODE013
:

380 
mb_büs
 = (((
mb_y
&0xf)<<10)|((
mb_x
&0x7)<<7));

382 
Y32MB_X32MB_OSDMODE013
:

383 
mb_büs
 = (((
mb_y
&0xf)<<11)|((
mb_x
&0xf)<<7));

386 
Y64MB_X16MB_OSDMODE013
:

387 
mb_büs
 = (((
mb_y
&0xf)<<11)|((
mb_x
&0xf)<<7));

392 
ENCODE_OSD_MODE3
:

393 
mb_büs
 = 0;

396 
osd_md_d©a_ba£
 +
mb_büs
;

397 
osd_md_d©a_ba£
 <<= 2;

398  
osd_md_d©a_ba£
;

399 
	}
}

401 
	$gë_ddr_∑ge_id_™d_∑ge_off£t_by_md_d©a_ba£
(
u32
 
osd_md_d©a_ba£
, *
ddr_∑ge_id
, *
ddr_∑ge_off£t
)

403 *
ddr_∑ge_id
 = (
osd_md_d©a_ba£
>>19);

404 *
ddr_∑ge_off£t
 = (
osd_md_d©a_ba£
&0x7ffff);

405 
	}
}

407 
	$osd_timî_©å_ª£t
(
ícode_osd_timî_©å_t
 *
timî_©å
, 
chù_id
, 
ch™_id
)

409 
timî_©å
->
timî
->
√ed_upd©e_m≠_èbÀ
[
chù_id
] |(1<<
ch™_id
);

410 
	}
}

412 
ícode_osd_timî_©å_›î©i⁄
 
	gosd_timî_©å_›
 = {

413 .
ª£t
 = 
osd_timî_©å_ª£t
,

416 
	$osd_°rög_©å_ª£t
(
ícode_osd_°rög_©å_t
 *
°rög_©å
)

418 
°rög_©å
->
mb_x
 = 0;

419 
°rög_©å
->
mb_y
 = 0;

420 
°rög_©å
->
mb_height
 = 0;

421 
°rög_©å
->
mb_width
 = 0;

422 
°rög_©å
->
√ed_upd©e_Êag
 = 0;

423 
°rög_©å
->
d©a_addr_m≠_mode
 = 
Y8MB_X128MB_OSDMODE013
;

424 if(
°rög_©å
->
°rög
 !
NULL
){

425 
°rög_©å
->
°rög
 = 
NULL
;

427 
	}
}

429 
ícode_osd_°rög_©å_›î©i⁄
 
	gosd_°rög_©å_›
 = {

430 .
ª£t
 = 
osd_°rög_©å_ª£t
,

433 
	$osd_mask_©å_ª£t
(
ícode_osd_mask_©å_t
 *
mask_©å
)

435 
mask_©å
->
mask_height
 = 0;

436 
mask_©å
->
mask_width
 = 0;

437 
mask_©å
->
mb_x
 = 0;

438 
mask_©å
->
mb_y
 = 0;

439 
mask_©å
->
y_vÆue
 = 0;

440 
mask_©å
->
u_vÆue
 = 0;

441 
mask_©å
->
v_vÆue
 = 0;

442 
mask_©å
->
√ed_upd©e_Êag
 = 0;

443 
mask_©å
->
is_di•œy
 = 0;

444 
	}
}

446 
ícode_osd_mask_©å_›î©i⁄
 
	gosd_mask_©å_›
 = {

447 .
ª£t
 = 
osd_mask_©å_ª£t
,

450 
	$osd_©åibuã_ªgs_£t
(
osd_©åibuã_ªgs_t
 *
©å_ªgs
)

452 if(
©å_ªgs
 !
NULL
){

453 
©å_ªgs
->
ªg1_vÆue
.
ªg1
.
íabÀ
 = 1;

455 
	}
}

457 
	$osd_©åibuã_ªgs_£t_no_di•œy
(
osd_©åibuã_ªgs_t
 *
©å_ªgs
)

459 if(
©å_ªgs
 !
NULL
){

460 
©å_ªgs
->
ªg1_vÆue
.
ªg1
.
íabÀ
 = 0;

462 
	}
}

464 
	$osd_©åibuã_ªgs_ª£t
(
osd_©åibuã_ªgs_t
 *
©å_ªgs
)

466 if(
©å_ªgs
 !
NULL
){

467 
©å_ªgs
->
ªg1_vÆue
.
vÆue
 = 0;

468 
©å_ªgs
->
ªg2_vÆue
.
vÆue
 = 0;

469 
©å_ªgs
->
ªg3_vÆue
.
vÆue
 = 0;

471 
	}
}

473 
osd_©åibuã_ªgs_›î©i⁄
 
	gosd_©åibuã_ªgs_›
 = {

474 .
£t
 = 
osd_©åibuã_ªgs_£t
,

475 .
	g£t_no_di•œy
 = 
osd_©åibuã_ªgs_£t_no_di•œy
,

476 .
	gª£t
 = 
osd_©åibuã_ªgs_ª£t
,

479 
	$osd_ícode_ch™_°¨t_£nd_©å_ªg_vÆue
(
d¥am_ªque°_t
 *
d¥am_ªq
, *
c⁄ãxt
)

481 if((
d¥am_ªq
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

482 
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
 = (osd_ª˘™gÀ_d¥am_tcb_t*)
c⁄ãxt
;

483 
osd_©åibuã_ªgs_group_t
 *
©å_ªgs_group
 = 
	`to_osd_©åibuã_ªgs_group_wôh_osd_d¥am_ªq
(
osd_d¥am_ªq
);

484 
osd_ch™_ígöe_t
 *
osd_ch™_ígöe
 = 
	`to_osd_ch™_ígöe_wôh_osd_©åibuã_ªgs_group
(
©å_ªgs_group
);

485 
dvm_chù_t
 *
chù
 = 
osd_ch™_ígöe
->
ícode_ch™
->chip;

486 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

489 if(
chù_d¥am_c⁄åﬁÀr
->
›
->
	`is_ˇn_submô_move_d©a_‰om_ho°_to_d¥am_£rvi˚_ªq
(chù_d¥am_c⁄åﬁÀr, &
osd_d¥am_ªq
->
d¥am_∑ge
)){

490 
osd_d¥am_ªq
->
›
->
	`ª•⁄£_wrôe_osd_ª˘™gÀ
(osd_d¥am_ªq, 
chù
);

491 if(
	`©omic_ªad
(&
osd_ch™_ígöe
->
osd_is_w‹kög
) > 0){

492 
	`©omic_dec
(&
osd_ch™_ígöe
->
osd_is_w‹kög
);

494 if(
	`©omic_ªad
(&
osd_ch™_ígöe
->
osd_is_w‹kög
) == 0){

495 
	`com∂ëe_Æl
(&
osd_ch™_ígöe
->
waô_d⁄e
);

498 
	`¥ötk
("%s.%d:Ñëriggî\n", 
__FUNCTION__
, 
__LINE__
);

502 
	}
}

504 
	$osd_ª˘™gÀ_©å_ªgs_group_d¥am_tcb_öô
(
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
)

506 if(
osd_d¥am_ªq
 !
NULL
){

507 
d¥am_ªque°_t
 *
d¥am_ªq
;

508 
d¥am_ªq
 = &
osd_d¥am_ªq
->
osd_d©a_ªq
;

509 
d¥am_ªq
->
ty≥
 = 
DPRAM_BLOCK_TRANSFER_REQUEST
;

510 
d¥am_ªq
->
c⁄ãxt
 = (*)
osd_d¥am_ªq
;

511 
d¥am_ªq
->
ªq_ˇŒback
 = 
osd_ícode_ch™_°¨t_£nd_©å_ªg_vÆue
;

513 
	}
}

515 
	$osd_ª˘™gÀ_©å_ªgs_group_d¥am_tcb_submô_wrôe_osd_ª˘™gÀ_d©a_ªq
(
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
, 
dvm_chù_t
 *
chù
)

517 if((
osd_d¥am_ªq
!=
NULL
Ë&& (
chù
!=NULL)){

518 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

519 
osd_©åibuã_ªgs_group_t
 *
©å_ªgs_group
 = 
	`to_osd_©åibuã_ªgs_group_wôh_osd_d¥am_ªq
(
osd_d¥am_ªq
);

520 
osd_d¥am_ªq
->
›
->
	`öô
(osd_dpram_req);

521 
chù_d¥am_c⁄åﬁÀr
->
›
->
	`submô_wrôe_video_ícode_osd_©å_ªq
(chù_d¥am_c⁄åﬁÀr, 
©å_ªgs_group
);

523 
	}
}

525 
	$osd_ª˘™gÀ_©å_ªgs_group_d¥am_tcb_submô_wrôe_osd_ª˘™gÀ_©å
(
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
, 
dvm_chù_t
 *
chù
)

527 if((
osd_d¥am_ªq
!=
NULL
Ë&& (
chù
!=NULL)){

528 
osd_©åibuã_ªgs_group_t
 *
©å_ªgs_group
;

529 
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
;

530 
u32
 *
ªg_vÆue_buf
, 
ªg_vÆue_buf_Àn
;

532 
©å_ªgs_group
 = 
	`to_osd_©åibuã_ªgs_group_wôh_osd_d¥am_ªq
(
osd_d¥am_ªq
);

533 
bur°_öãrÁ˚
 = &
chù
->
chù_d¥am_c⁄åﬁÀr
.burst_interface;

534 
ªg_vÆue_buf
 = (
u32
 *)(
©å_ªgs_group
->
©åibuã_ªgs_group
);

535 
ªg_vÆue_buf_Àn
 = (
osd_©åibuã_ªgs_t
)*
OSD_CHAN_RECTANGLE_NUMBER
;

536 
bur°_öãrÁ˚
->
›
->
	`pio_ho°_to_§am_wrôe
(bur°_öãrÁ˚, 
osd_d¥am_ªq
->
d¥am_∑ge
, 
ªg_vÆue_buf
, 
ªg_vÆue_buf_Àn
);

537 
bur°_öãrÁ˚
->
›
->
	`°¨t_block_å™s„r_‰om_§am_to_ddr
(bur°_öãrÁ˚, 
osd_d¥am_ªq
->
d¥am_∑ge
, 
©å_ªgs_group
->
osd_ch™_©å_ªg_ba£
,áâr_ªgs_group->
osd_ch™_©å_ªg_∑ge_id
, 
ªg_vÆue_buf_Àn
, 
DDR_CHIP_A
);

539 
	}
}

541 
	$osd_ª˘™gÀ_©å_ªgs_group_d¥am_tcb_ª•⁄£_wrôe_osd_ª˘™gÀ
(
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
, 
dvm_chù_t
 *
chù
)

543 if((
osd_d¥am_ªq
!=
NULL
Ë&& (
chù
!=NULL)){

544 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

545 
osd_©åibuã_ªgs_group_t
 *
©å_ªgs_group
 = 
	`to_osd_©åibuã_ªgs_group_wôh_osd_d¥am_ªq
(
osd_d¥am_ªq
);

546 
osd_d¥am_ªq
->
›
->
	`submô_wrôe_osd_ª˘™gÀ_©å
(osd_d¥am_ªq, 
chù
);

547 
chù_d¥am_c⁄åﬁÀr
->
›
->
	`ack_wrôe_video_ícode_osd_©å_ªq
(chù_d¥am_c⁄åﬁÀr, 
©å_ªgs_group
);

549 
	}
}

551 
osd_ª˘™gÀ_d¥am_tcb_›î©i⁄
 
	gosd_ª˘™gÀ_©å_ªgs_group_d¥am_tcb_›
 = {

552 .
öô
 = 
osd_ª˘™gÀ_©å_ªgs_group_d¥am_tcb_öô
,

553 .
	gsubmô_wrôe_osd_ª˘™gÀ_d©a_ªq
 = 
osd_ª˘™gÀ_©å_ªgs_group_d¥am_tcb_submô_wrôe_osd_ª˘™gÀ_d©a_ªq
,

554 .
	gsubmô_wrôe_osd_ª˘™gÀ_©å
 = 
osd_ª˘™gÀ_©å_ªgs_group_d¥am_tcb_submô_wrôe_osd_ª˘™gÀ_©å
,

555 .
	gª•⁄£_wrôe_osd_ª˘™gÀ
 = 
osd_ª˘™gÀ_©å_ªgs_group_d¥am_tcb_ª•⁄£_wrôe_osd_ª˘™gÀ
,

558 
	$osd_©åibuã_ªgs_group_öô_osd_ch™_ª˘™gÀ_©å_ªgs_group
(
osd_©åibuã_ªgs_group_t
 *
©å_ªgs_group
)

560 if(
©å_ªgs_group
 !
NULL
){

561 
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
;

562 
osd_ch™_ígöe_t
 *
osd_ch™_ígöe
;

563 
osd_©åibuã_ªgs_t
 *
©å_ªgs
;

564 
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
;

565 
i
, 
ch™_id
;

567 
©å_ªgs_group
->
ª˘_©å_ªgs_›
 = &
osd_©åibuã_ªgs_›
;

568 
i
=0; i<
OSD_CHAN_RECTANGLE_NUMBER
; i++){

569 
©å_ªgs
 = &
©å_ªgs_group
->
©åibuã_ªgs_group
[
i
];

570 
©å_ªgs_group
->
ª˘_©å_ªgs_›
->
	`ª£t
(
©å_ªgs
);

573 
osd_ch™_ígöe
 = 
	`to_osd_ch™_ígöe_wôh_osd_©åibuã_ªgs_group
(
©å_ªgs_group
);

574 
ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_osd_ígöe
(
osd_ch™_ígöe
);

575 
ch™_id
 = 
ícode_ch™
->
phy_¶Ÿ_id
;

576 if(
osd_ch™_ígöe
->
ma°îOrSub
 =
TW_MASTER_BITSTREAM
){

577 
©å_ªgs_group
->
osd_ch™_©å_ªg_ba£
 = ((
OSD_ATTR_REG_BASE_ADDR
<<
OSD_ATTR_REG_SHIFT
)|(
ch™_id
<<5))<<2;

579 
©å_ªgs_group
->
osd_ch™_©å_ªg_ba£
 = ((
OSD_ATTR_REG_BASE_ADDR
<<
OSD_ATTR_REG_SHIFT
)|(0x1<<9)|(
ch™_id
<<5))<<2;

581 
©å_ªgs_group
->
osd_ch™_©å_ªg_∑ge_id
 =áâr_ªgs_group->
osd_ch™_©å_ªg_ba£
>>19;

583 
osd_d¥am_ªq
 = &
©å_ªgs_group
->osd_dpram_req;

584 
osd_d¥am_ªq
->
›
 = &
osd_ª˘™gÀ_©å_ªgs_group_d¥am_tcb_›
;

586 
	}
}

588 
	$osd_©åibuã_ªgs_group_ch™_ª˘™gÀ_©å_ªgs_£t
(
osd_©åibuã_ªgs_group_t
 *
©å_ªgs_group
, 
ª˘_id
)

590 if((
©å_ªgs_group
!=
NULL
Ë&& (
ª˘_id
<
OSD_CHAN_RECTANGLE_NUMBER
)){

591 
osd_©åibuã_ªgs_t
 *
©å_ªgs
 = &
©å_ªgs_group
->
©åibuã_ªgs_group
[
ª˘_id
];

592 
©å_ªgs_group
->
ª˘_©å_ªgs_›
->
	`£t
(
©å_ªgs
);

594 
	}
}

596 
	$osd_©åibuã_ªgs_group_ch™_ª˘™gÀ_©å_ªgs_£t_no_di•œy
(
osd_©åibuã_ªgs_group_t
 *
©å_ªgs_group
, 
ª˘_id
)

598 if((
©å_ªgs_group
!=
NULL
Ë&& (
ª˘_id
<
OSD_CHAN_RECTANGLE_NUMBER
)){

599 
osd_©åibuã_ªgs_t
 *
©å_ªgs
 = &
©å_ªgs_group
->
©åibuã_ªgs_group
[
ª˘_id
];

600 
©å_ªgs_group
->
ª˘_©å_ªgs_›
->
	`£t_no_di•œy
(
©å_ªgs
);

602 
	}
}

604 
	$osd_©åibuã_ªgs_group_ch™_ª˘™gÀ_©å_ªgs_ª£t
(
osd_©åibuã_ªgs_group_t
 *
©å_ªgs_group
, 
ª˘_id
)

606 if((
©å_ªgs_group
!=
NULL
Ë&& (
ª˘_id
<
OSD_CHAN_RECTANGLE_NUMBER
)){

607 
osd_©åibuã_ªgs_t
 *
©å_ªgs
 = &
©å_ªgs_group
->
©åibuã_ªgs_group
[
ª˘_id
];

608 
©å_ªgs_group
->
ª˘_©å_ªgs_›
->
	`ª£t
(
©å_ªgs
);

610 
	}
}

612 
	$osd_©åibuã_ªgs_group_upd©e_ch™_ª˘™gÀ_©å_ªgs
(
osd_©åibuã_ªgs_group_t
 *
©å_ªgs_group
, 
dvm_chù_t
 *
chù
)

614 if((
©å_ªgs_group
!=
NULL
Ë&& (
chù
!=NULL)){

615 
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
 = &
©å_ªgs_group
->osd_dpram_req;

616 
osd_d¥am_ªq
->
›
->
	`submô_wrôe_osd_ª˘™gÀ_d©a_ªq
(osd_d¥am_ªq, 
chù
);

618 
	}
}

620 
osd_©åibuã_ªgs_group_›î©i⁄
 
	gosd_©åibuã_ªgs_group_›
 = {

621 .
öô_osd_ch™_ª˘™gÀ_©å_ªgs_group
 = 
osd_©åibuã_ªgs_group_öô_osd_ch™_ª˘™gÀ_©å_ªgs_group
,

622 .
	gch™_ª˘™gÀ_©å_ªgs_£t
 = 
osd_©åibuã_ªgs_group_ch™_ª˘™gÀ_©å_ªgs_£t
,

623 .
	gch™_ª˘™gÀ_©å_ªgs_£t_no_di•œy
 = 
osd_©åibuã_ªgs_group_ch™_ª˘™gÀ_©å_ªgs_£t_no_di•œy
,

624 .
	gch™_ª˘™gÀ_©å_ªgs_ª£t
 = 
osd_©åibuã_ªgs_group_ch™_ª˘™gÀ_©å_ªgs_ª£t
,

625 .
	gupd©e_ch™_ª˘™gÀ_©å_ªgs
 = 
osd_©åibuã_ªgs_group_upd©e_ch™_ª˘™gÀ_©å_ªgs
,

628 
	$osd_mb_tcb_ª£t
(
osd_mb_ch¨_íåy_t
 *
mb
)

630 
mb
->
ª˘™gÀ
 = 
NULL
;

631 
mb
->
osd_mb_node
.
›
 = &
tcb_node_›
;

632 
mb
->
osd_mb_node
.
›
->
	`öô
(&mb->osd_mb_node);

633 
mb
->
osd_mb_node
.
›
->
	`£t_¥iv
(&mb->osd_mb_node, mb);

635 
mb
->
ddr_∑ge
 = 
INVALID_OSD_VALUE_ID
;

636 
mb
->
ddr_∑ge_off£t
 = 
INVALID_OSD_VALUE_ID
;

638 
mb
->
∑ylﬂd
 = (
u32
*)mb->
mb_ch¨_buf
;

639 
mb
->
∑ylﬂd_Àn
 = 0;

640 
	`mem£t
(
mb
->
mb_ch¨_buf
, 0, (
OSD_MB_BUF_CHAR_BITMAP_LEN
<<2));

641 
mb
->
ªf_mb_x
 = 0;

642 
mb
->
ªf_mb_y
 = 0;

643 
	}
}

645 
	$osd_mb_tcb_ªÀa£
(
osd_mb_ch¨_íåy_t
 *
mb
)

647 if(
mb
 !
NULL
){

648 
osd_mb_poﬁ_t
 *
poﬁ
 = 
mb
->pool;

649 
mb
->
›
->
	`ª£t
(mb);

650 
poﬁ
->
›
->
	`put
’oﬁ, 
mb
);

652 
	}
}

654 
	$osd_mb_tcb_upd©e_mb_vútuÆ_d©a
(
osd_mb_ch¨_íåy_t
 *
mb
, 
ªf_mb_x
, 
ªf_mb_y
)

656 
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
;

657 
osd_©åibuã_ªgs1
 *
±r_ªgs1
;

658 
osd_©åibuã_ªgs3
 *
±r_ªgs3
;

660 
ª˘™gÀ
 = 
mb
->rectangle;

661 if(
ª˘™gÀ
 !
NULL
){

662 
±r_ªgs1
 = &
ª˘™gÀ
->
©å_ªgs
->
ªg1_vÆue
.
ªg1
;

663 
±r_ªgs3
 = &
ª˘™gÀ
->
©å_ªgs
->
ªg3_vÆue
.
ªg3
;

664 
mb
->
osd_d©a_addr_ba£
 = 
	`gë_osd_ª˘™gÀ_mb_d©a_ba£
(
±r_ªgs1
->
mode
, 
±r_ªgs3
->
d©a_ba£_m≠_mode
, 
ªf_mb_x
, 
ªf_mb_y
, 
ª˘™gÀ
->osd_data_addr_base);

665 
	`gë_ddr_∑ge_id_™d_∑ge_off£t_by_md_d©a_ba£
(
mb
->
osd_d©a_addr_ba£
, &mb->
ddr_∑ge
, &mb->
ddr_∑ge_off£t
);

667 
mb
->
ddr_∑ge
 = 
INVALID_OSD_VALUE_ID
;

668 
mb
->
ddr_∑ge_off£t
 = 
INVALID_OSD_VALUE_ID
;

670 
	}
}

672 
	$osd_mb_tcb_upd©e_Âga_osd_d©a
(
osd_mb_ch¨_íåy_t
 *
mb
)

674 if((
mb
->
ddr_∑ge
!=
INVALID_OSD_VALUE_ID
Ë&& (mb->
ddr_∑ge_off£t
!=INVALID_OSD_VALUE_ID)){

675 
dvm_chù_t
 *
chù
;

676 
u32
 
ddr_∑ge_off£t
, 
ddr_∑ge
, 
ﬁd_ddr_∑ge
, 
i
;

677 
Êags
;

679 
chù
 = 
mb
->
poﬁ
->chip;

680 
	`loˇl_úq_ßve
(
Êags
);

681 
ddr_∑ge_off£t
 = 
mb
->ddr_page_offset;

682 
ddr_∑ge_off£t
 +
DDRBASE
;

683 
ddr_∑ge
 = 
mb
->ddr_page;

684 
ﬁd_ddr_∑ge
 = 
chù
->
io_›
->
	`chù_ªad32
(chù, 
DDRPAGE
);

685 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
ddr_∑ge
);

686 
i
=0; i<
mb
->
∑ylﬂd_Àn
; i++){

687 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
ddr_∑ge_off£t
, 
mb
->
∑ylﬂd
[
i
]);

688 
ddr_∑ge_off£t
 += 4;

689 if(
ddr_∑ge_off£t
 >(
DDRBASE
<<1)){

690 
ddr_∑ge_off£t
 = 
DDRBASE
;

691 
ddr_∑ge
++;

692 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
ddr_∑ge
);

695 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
DDRPAGE
, 
ﬁd_ddr_∑ge
);

696 
	`loˇl_úq_ª°‹e
(
Êags
);

698 
	}
}

700 
osd_mb_ch¨_›î©i⁄
 
	gosd_mb_ch¨_tcb_›
 =

702 .
ª£t
 = 
osd_mb_tcb_ª£t
,

703 .
	gªÀa£
 = 
osd_mb_tcb_ªÀa£
,

704 .
	gupd©e_mb_vútuÆ_d©a
 = 
osd_mb_tcb_upd©e_mb_vútuÆ_d©a
,

705 .
	gupd©e_Âga_osd_d©a
 = 
osd_mb_tcb_upd©e_Âga_osd_d©a
,

708 
	$osd_ícode_mb_poﬁ_¸óã
(
osd_mb_poﬁ_t
 *
ch™_osd_mb_buf_poﬁ
, 
chù_id
)

710 if(
ch™_osd_mb_buf_poﬁ
 !
NULL
){

711 
tcb_node_poﬁ_t
 *
node_poﬁ
;

712 
osd_mb_ch¨_íåy_t
 *
±r_osd_mb_ch¨_tcb
;

713 
buf_size
, 
i
;

714 #ifde‡ 
USED_STATIC_OSD_CHAR_BUF


715 
ch™_osd_mb_buf_poﬁ
->
mb_ch¨_íåy_ˇche
 = 
osd_md_ˇche
[0];

717 
buf_size
 = (
osd_mb_ch¨_íåy_t
)*
OSD_MB_ENTRY_NUMBER
;

718 
ch™_osd_mb_buf_poﬁ
->
mb_ch¨_ˇche_‹dî
 = 
	`gë_‹dî
(
buf_size
);

719 
ch™_osd_mb_buf_poﬁ
->
mb_ch¨_íåy_ˇche
 = (
osd_mb_ch¨_íåy_t
*)
	`__gë_‰ì_∑ges
(
GFP_KERNEL
, ch™_osd_mb_buf_poﬁ->
mb_ch¨_ˇche_‹dî
);

720 if(
ch™_osd_mb_buf_poﬁ
->
mb_ch¨_íåy_ˇche
 =
NULL
){

721 
	`¥ötk
("ˇn'àÆlo¯%dÖage†f‹ videÿbu‡poﬁ\n", 
ch™_osd_mb_buf_poﬁ
->
mb_ch¨_ˇche_‹dî
);

722 
ch™_osd_mb_buf_poﬁ
->
mb_ch¨_ˇche_‹dî
 = 0;

723  -
ENOMEM
;

726 
node_poﬁ
 = &
ch™_osd_mb_buf_poﬁ
->
osd_mb_ch¨_poﬁ_tcb
;

727 
node_poﬁ
->
›
 = &
tcb_node_poﬁ_›
;

728 
node_poﬁ
->
›
->
	`öô
“ode_poﬁ, 
OSD_MB_ENTRY_NUMBER
);

729 
i
=0; i<
OSD_MB_ENTRY_NUMBER
; i++){

730 
±r_osd_mb_ch¨_tcb
 = &
ch™_osd_mb_buf_poﬁ
->
mb_ch¨_íåy_ˇche
[
i
];

731 
±r_osd_mb_ch¨_tcb
->
poﬁ
 = 
ch™_osd_mb_buf_poﬁ
;

732 
±r_osd_mb_ch¨_tcb
->
›
 = &
osd_mb_ch¨_tcb_›
;

733 
±r_osd_mb_ch¨_tcb
->
›
->
	`ªÀa£
(ptr_osd_mb_char_tcb);

737  -
ENOMEM
;

738 
	}
}

740 
	$osd_ícode_mb_poﬁ_ªÀa£
(
osd_mb_poﬁ_t
 *
ch™_osd_mb_buf_poﬁ
)

742 if(
ch™_osd_mb_buf_poﬁ
 !
NULL
){

743 
tcb_node_poﬁ_t
 *
node_poﬁ
;

744 
node_poﬁ
 = &
ch™_osd_mb_buf_poﬁ
->
osd_mb_ch¨_poﬁ_tcb
;

745 if(
node_poﬁ
->
›
 !
NULL
){

746 
node_poﬁ
->
›
->
	`ªÀa£
(node_pool);

748 #ifde‡ 
USED_STATIC_OSD_CHAR_BUF


749 
ch™_osd_mb_buf_poﬁ
->
mb_ch¨_íåy_ˇche
 = 
NULL
;

751 if(
ch™_osd_mb_buf_poﬁ
->
mb_ch¨_íåy_ˇche
 !
NULL
){

752 
	`‰ì_∑ges
(()
ch™_osd_mb_buf_poﬁ
->
mb_ch¨_íåy_ˇche
, ch™_osd_mb_buf_poﬁ->
mb_ch¨_ˇche_‹dî
);

753 
ch™_osd_mb_buf_poﬁ
->
mb_ch¨_íåy_ˇche
 = 
NULL
;

756 
ch™_osd_mb_buf_poﬁ
->
mb_ch¨_ˇche_‹dî
 = 0;

758 
	}
}

760 
	$osd_ícode_mb_poﬁ_gë
(
osd_mb_poﬁ_t
 *
poﬁ
, 
osd_mb_ch¨_íåy_t
 **
mb
, 
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
)

762 if((
poﬁ
!=
NULL
Ë&& (
mb
!=NULL)){

763 
tcb_node_poﬁ_t
 *
node_poﬁ
 = &
poﬁ
->
osd_mb_ch¨_poﬁ_tcb
;

764 *
mb
 = 
NULL
;

765 if(
node_poﬁ
->
›
 !
NULL
){

766 
tcb_node_t
 *
ãmp_node
;

767 
node_poﬁ
->
›
->
	`gë
“ode_poﬁ, &
ãmp_node
);

768 if(
ãmp_node
 !
NULL
){

769 *
mb
 = 
	`to_gë_osd_mb_ch¨_íåy_wôh_node
(
ãmp_node
);

770 (*
mb
)->
ª˘™gÀ
 =Ñectangle;

774 
	}
}

776 
	$osd_ícode_mb_poﬁ_åy_gë
(
osd_mb_poﬁ_t
 *
poﬁ
, 
osd_mb_ch¨_íåy_t
 **
mb
, 
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
)

778 if((
poﬁ
!=
NULL
Ë&& (
mb
!=NULL)){

779 
tcb_node_poﬁ_t
 *
node_poﬁ
 = &
poﬁ
->
osd_mb_ch¨_poﬁ_tcb
;

780 *
mb
 = 
NULL
;

781 if(
node_poﬁ
->
›
 !
NULL
){

782 
tcb_node_t
 *
ãmp_node
;

783 
node_poﬁ
->
›
->
	`åy_gë
“ode_poﬁ, &
ãmp_node
);

784 if(
ãmp_node
 !
NULL
){

785 *
mb
 = 
	`to_gë_osd_mb_ch¨_íåy_wôh_node
(
ãmp_node
);

786 (*
mb
)->
ª˘™gÀ
 =Ñectangle;

790 
	}
}

792 
	$osd_ícode_mb_poﬁ_put
(
osd_mb_poﬁ_t
 *
poﬁ
, 
osd_mb_ch¨_íåy_t
 *
mb
)

794 if((
poﬁ
!=
NULL
Ë&& (
mb
!=NULL)){

795 
tcb_node_poﬁ_t
 *
node_poﬁ
 = &
poﬁ
->
osd_mb_ch¨_poﬁ_tcb
;

796 if(
node_poﬁ
->
›
 !
NULL
){

797 
node_poﬁ
->
›
->
	`put
“ode_poﬁ, &
mb
->
osd_mb_node
);

800 
	}
}

802 
	$osd_ícode_mb_poﬁ_íåy_numbî
(
osd_mb_poﬁ_t
 *
poﬁ
)

804 
íåy_numbî
 = 0;

805 if(
poﬁ
 !
NULL
){

806 
tcb_node_poﬁ_t
 *
node_poﬁ
 = &
poﬁ
->
osd_mb_ch¨_poﬁ_tcb
;

807 if(
node_poﬁ
->
›
 !
NULL
){

808 
íåy_numbî
 = 
node_poﬁ
->
›
->
	`gë_cuº_poﬁ_íåy_numbî
(node_pool);

811  
íåy_numbî
;

812 
	}
}

814 
osd_mb_poﬁ_›î©i⁄
 
	gosd_ícode_mb_poﬁ_›
 =

816 .
¸óã
 = 
osd_ícode_mb_poﬁ_¸óã
,

817 .
	gªÀa£
 = 
osd_ícode_mb_poﬁ_ªÀa£
,

818 .
	ggë
 = 
osd_ícode_mb_poﬁ_gë
,

819 .
	gåy_gë
 = 
osd_ícode_mb_poﬁ_åy_gë
,

820 .
	gput
 = 
osd_ícode_mb_poﬁ_put
,

821 .
	ggë_osd_mb_tcb_poﬁ_íåy_numbî
 = 
osd_ícode_mb_poﬁ_íåy_numbî
,

824 
	$ªmove_osd_ícode_mb_poﬁ
(
osd_mb_poﬁ_t
 *
mb_poﬁ
)

826 if(
mb_poﬁ
->
›
 !
NULL
){

827 
mb_poﬁ
->
›
->
	`ªÀa£
(mb_pool);

829 
	}
}

831 
	$öô_osd_ícode_mb_poﬁ
(
osd_ch™_ígöe_t
 *
osd_ígöe
, 
chù_id
)

833 
ªt
 = -1;

834 if(
osd_ígöe
 !
NULL
){

835 
osd_mb_poﬁ_t
 *
mb_poﬁ
;

836 
mb_poﬁ
 = &
osd_ígöe
->
osd_ch™_poﬁ
;

837 
mb_poﬁ
->
chù
 = 
osd_ígöe
->
ícode_ch™
->chip;

838 
mb_poﬁ
->
›
 = &
osd_ícode_mb_poﬁ_›
;

839 
ªt
 = 
mb_poﬁ
->
›
->
	`¸óã
(mb_poﬁ, 
chù_id
);

841  
ªt
;

842 
	}
}

844 
	$osd_ícode_ch™_°¨t_£nd_bô°ªam
(
d¥am_ªque°_t
 *
d¥am_ªq
, *
c⁄ãxt
)

846 
ªt
 = 1;

847 if((
d¥am_ªq
!=
NULL
Ë&& (
c⁄ãxt
!=NULL)){

848 
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
 = (osd_ª˘™gÀ_d¥am_tcb_t*)
c⁄ãxt
;

849 
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
 = 
	`to_osd_ª˘™gÀ_íåy_wôh_osd_ª˘™gÀ_d¥am_tcb
(
osd_d¥am_ªq
);

850 
dvm_chù_t
 *
chù
 = 
ª˘™gÀ
->chip;

851 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

852 
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
 = &
chù_d¥am_c⁄åﬁÀr
->burst_interface;

853 
osd_mb_ch¨_íåy_t
 *
mb
;

856 if(
chù_d¥am_c⁄åﬁÀr
->
›
->
	`is_ˇn_submô_move_d©a_‰om_ho°_to_d¥am_£rvi˚_ªq
(chù_d¥am_c⁄åﬁÀr, &
osd_d¥am_ªq
->
d¥am_∑ge
)){

857 if(
ª˘™gÀ
->
osd_íabÀ
){

858 if(
ª˘™gÀ
->
√ed_upd©e_d©a
){

859 
ª˘™gÀ
->
√ed_upd©e_d©a
 = 0;

861 
ª˘™gÀ
->
›
->
	`åy_gë_mb_‰om_ª˘™gÀ
‘e˘™gÀ, &
mb
);

862 if(
mb
 !
NULL
){

863 
mb
->
›
->
	`upd©e_mb_vútuÆ_d©a
(mb, mb->
ªf_mb_x
, mb->
ªf_mb_y
);

864 
bur°_öãrÁ˚
->
›
->
	`pio_ho°_to_§am_wrôe
(bur°_öãrÁ˚, 
osd_d¥am_ªq
->
d¥am_∑ge
, 
mb
->
∑ylﬂd
, (mb->
∑ylﬂd_Àn
<<2));

865 
bur°_öãrÁ˚
->
›
->
	`°¨t_block_å™s„r_‰om_§am_to_ddr
(bur°_öãrÁ˚, 
osd_d¥am_ªq
->
d¥am_∑ge
, 
mb
->
osd_d©a_addr_ba£
, mb->
ddr_∑ge
, (mb->
∑ylﬂd_Àn
<<2), 
DDR_CHIP_A
);

866 
mb
->
›
->
	`ªÀa£
(mb);

874 if(
ª˘™gÀ
->
osd_íabÀ
){

875 if(
ª˘™gÀ
->
√ed_upd©e_d©a
){

876 
ª˘™gÀ
->
√ed_upd©e_d©a
 = 0;

878 
ª˘™gÀ
->
›
->
	`åy_gë_mb_‰om_ª˘™gÀ
‘e˘™gÀ, &
mb
);

879 if(
mb
 !
NULL
){

880 
mb
->
›
->
	`ªÀa£
(mb);

887 
	`¥ötk
("%s.%d:Ñëriggî\n", 
__FUNCTION__
, 
__LINE__
);

889 
osd_d¥am_ªq
->
›
->
	`ª•⁄£_wrôe_osd_ª˘™gÀ
(osd_d¥am_ªq, 
ª˘™gÀ
->
chù
);

891  
ªt
;

892 
	}
}

894 
	$osd_ª˘™gÀ_d¥am_tcb_öô
(
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
)

896 if(
osd_d¥am_ªq
 !
NULL
){

897 
d¥am_ªque°_t
 *
d¥am_ªq
;

898 
d¥am_ªq
 = &
osd_d¥am_ªq
->
osd_d©a_ªq
;

899 
d¥am_ªq
->
ty≥
 = 
DPRAM_BLOCK_TRANSFER_REQUEST
;

900 
d¥am_ªq
->
c⁄ãxt
 = (*)
osd_d¥am_ªq
;

901 
d¥am_ªq
->
ªq_ˇŒback
 = 
osd_ícode_ch™_°¨t_£nd_bô°ªam
;

903 
	}
}

905 
	$osd_ª˘™gÀ_d¥am_tcb_submô_wrôe_osd_ª˘™gÀ_d©a_ªq
(
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
, 
dvm_chù_t
 *
chù
)

907 if((
osd_d¥am_ªq
!=
NULL
Ë&& (
chù
!=NULL)){

908 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

909 
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
;

911 
ª˘™gÀ
 = 
	`to_osd_ª˘™gÀ_íåy_wôh_osd_ª˘™gÀ_d¥am_tcb
(
osd_d¥am_ªq
);

912 
osd_d¥am_ªq
->
›
->
	`öô
(osd_dpram_req);

913 
chù_d¥am_c⁄åﬁÀr
->
›
->
	`submô_wrôe_video_ícode_osd_d©a_ªq
(chù_d¥am_c⁄åﬁÀr, 
ª˘™gÀ
);

915 
	}
}

917 
	$osd_ª˘™gÀ_d¥am_tcb_submô_wrôe_osd_ª˘™gÀ_©å
(
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
, 
dvm_chù_t
 *
chù
)

920 if((
osd_d¥am_ªq
!=
NULL
Ë&& (
chù
!=NULL)){

921 
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
;

922 
dvm_chù_t
 *
chù
;

923 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
;

924 
ddr_bur°_öãrÁ˚_t
 *
bur°_öãrÁ˚
;

925 
osd_ch™_ígöe_t
 *
osd_ch™_ígöe
;

926 
osd_©åibuã_ªgs_t
 *
©å_ªgs
;

927 
ª˘™gÀ_id
, 
ch™_id
;

928 
u32
 
ªg_vÆue_buf
[3];

931 
ª˘™gÀ
 = 
	`to_osd_ª˘™gÀ_íåy_wôh_osd_ª˘™gÀ_d¥am_tcb
(
osd_d¥am_ªq
);

932 
chù
 = 
ª˘™gÀ
->chip;

933 
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

934 
bur°_öãrÁ˚
 = &
chù_d¥am_c⁄åﬁÀr
->burst_interface;

935 
osd_ch™_ígöe
 = 
ª˘™gÀ
->osd_chan_engine;

936 
©å_ªgs
 = 
ª˘™gÀ
->attr_regs;

937 
ª˘™gÀ_id
 = 
ª˘™gÀ
->rectangle_id;

938 
ch™_id
 = 
ª˘™gÀ
->chan_id;

939 if(
osd_ch™_ígöe
->
ma°îOrSub
 =
TW_MASTER_BITSTREAM
){

940 
©å_ªgs
->
©å_ªg_ba£
 = ((
OSD_ATTR_REG_BASE_ADDR
<<
OSD_ATTR_REG_SHIFT
)|(
ch™_id
<<5)|(
ª˘™gÀ_id
*3))<<2;

942 
©å_ªgs
->
©å_ªg_ba£
 = ((
OSD_ATTR_REG_BASE_ADDR
<<
OSD_ATTR_REG_SHIFT
)|(0x1<<9)|(
ch™_id
<<5)|(
ª˘™gÀ_id
*3))<<2;

944 
©å_ªgs
->
ªg_∑ge_id
 =áâr_ªgs->
©å_ªg_ba£
>>19;

945 
©å_ªgs
->
ªg1_vÆue
.
ªg1
.
íabÀ
 = 1;

946 
ªg_vÆue_buf
[0] = 
©å_ªgs
->
ªg1_vÆue
.
vÆue
;

947 
ªg_vÆue_buf
[1] = 
©å_ªgs
->
ªg2_vÆue
.
vÆue
;

948 
ªg_vÆue_buf
[2] = 
©å_ªgs
->
ªg3_vÆue
.
vÆue
;

949 
bur°_öãrÁ˚
->
›
->
	`pio_ho°_to_§am_wrôe
(bur°_öãrÁ˚, 
osd_d¥am_ªq
->
d¥am_∑ge
, 
ªg_vÆue_buf
, 12);

950 
bur°_öãrÁ˚
->
›
->
	`°¨t_block_å™s„r_‰om_§am_to_ddr
(bur°_öãrÁ˚, 
osd_d¥am_ªq
->
d¥am_∑ge
, 
©å_ªgs
->
©å_ªg_ba£
,áâr_ªgs->
ªg_∑ge_id
, 12, 
DDR_CHIP_A
);

953 
	}
}

955 
	$osd_ª˘™gÀ_d¥am_tcb_ª•⁄£_wrôe_osd_ª˘™gÀ
(
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
, 
dvm_chù_t
 *
chù
)

957 if((
osd_d¥am_ªq
!=
NULL
Ë&& (
chù
!=NULL)){

958 
d¥am_c⁄åﬁ_t
 *
chù_d¥am_c⁄åﬁÀr
 = &
chù
->chip_dpram_controller;

959 
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
;

960 
osd_ch™_ígöe_t
 *
osd_ch™_ígöe
;

962 
ª˘™gÀ
 = 
	`to_osd_ª˘™gÀ_íåy_wôh_osd_ª˘™gÀ_d¥am_tcb
(
osd_d¥am_ªq
);

963 
osd_ch™_ígöe
 = 
ª˘™gÀ
->osd_chan_engine;

964 
chù_d¥am_c⁄åﬁÀr
->
›
->
	`ack_wrôe_video_ícode_osd_d©a_ªq
(chù_d¥am_c⁄åﬁÀr, 
ª˘™gÀ
);

965 if(
	`©omic_ªad
(&
osd_ch™_ígöe
->
osd_is_w‹kög
) > 0){

966 
	`©omic_dec
(&
osd_ch™_ígöe
->
osd_is_w‹kög
);

968 if(
	`©omic_ªad
(&
osd_ch™_ígöe
->
osd_is_w‹kög
) == 0){

969 
	`com∂ëe_Æl
(&
osd_ch™_ígöe
->
waô_d⁄e
);

972 
	}
}

974 
osd_ª˘™gÀ_d¥am_tcb_›î©i⁄
 
	gosd_ª˘™gÀ_d¥am_tcb_›
 = {

975 .
öô
 = 
osd_ª˘™gÀ_d¥am_tcb_öô
,

976 .
	gsubmô_wrôe_osd_ª˘™gÀ_d©a_ªq
 = 
osd_ª˘™gÀ_d¥am_tcb_submô_wrôe_osd_ª˘™gÀ_d©a_ªq
,

977 .
	gsubmô_wrôe_osd_ª˘™gÀ_©å
 = 
osd_ª˘™gÀ_d¥am_tcb_submô_wrôe_osd_ª˘™gÀ_©å
,

978 .
	gª•⁄£_wrôe_osd_ª˘™gÀ
 = 
osd_ª˘™gÀ_d¥am_tcb_ª•⁄£_wrôe_osd_ª˘™gÀ
,

981 
	$osd_ª˘™gÀ_ª£t
(
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
)

983 
ª˘™gÀ
->
osd_íabÀ
 = 0;

984 
ª˘™gÀ
->
√ed_upd©e_©å
 = 0;

985 
ª˘™gÀ
->
√ed_upd©e_d©a
 = 0;

986 
ª˘™gÀ
->
ª˘™gÀ_mode
 = 
EMPTY_RECTANGLE_ENCODE_OSD
;

987 
ª˘™gÀ
->
ª˘™gÀ_À·_x
 =Ñe˘™gÀ->
ª˘™gÀ_À·_y
 = 0;

988 
ª˘™gÀ
->
ª˘™gÀ_right_x
 =Ñe˘™gÀ->
ª˘™gÀ_right_y
 = 0;

989 
ª˘™gÀ
->
¥iv©e_©åi
.
em±y_ª˘™gÀ_©åibuã
 = 
NULL
;

990 
	}
}

992 
	$osd_ª˘™gÀ_˛o£_ª˘™gÀ
(
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
)

994 
osd_mb_ch¨_íåy_t
 *
mb
;

995 
osd_ch™_ígöe_t
 *
osd_ch™_ígöe
;

996 
osd_©åibuã_ªgs_group_t
 *
©åibuã_ªgs
;

998 
osd_ch™_ígöe
 = 
ª˘™gÀ
->osd_chan_engine;

999 
©åibuã_ªgs
 = &
osd_ch™_ígöe
->attribute_regs;

1000 
©åibuã_ªgs
->
ch™_ª˘_©å_ªgs_group_›
->
	`ch™_ª˘™gÀ_©å_ªgs_ª£t
◊âribuã_ªgs, 
ª˘™gÀ
->
ª˘™gÀ_id
);

1002 
ª˘™gÀ
->
›
->
	`åy_gë_mb_‰om_ª˘™gÀ
‘e˘™gÀ, &
mb
);

1003 if(
mb
 !
NULL
){

1004 
mb
->
›
->
	`ªÀa£
(mb);

1009 
ª˘™gÀ
->
›
->
	`ª£t
(rectangle);

1010 
ª˘™gÀ
->
osd_ch™_ígöe
->
›
->
	`put_ª˘™gÀ
(rectangle->osd_chan_engine,Ñectangle);

1011 
	}
}

1013 
	$osd_ª˘™gÀ_put_mb_öto_ª˘™gÀ
(
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
, 
osd_mb_ch¨_íåy_t
 *
mb
)

1015 if(
mb
 !
NULL
){

1016 
tcb_node_queue_t
 *
mb_ch¨_queue
;

1017 
mb_ch¨_queue
 = &
ª˘™gÀ
->
mb_ch¨_queue_node
;

1018 
mb_ch¨_queue
->
›
->
	`put
(mb_ch¨_queue, &
mb
->
osd_mb_node
);

1020 
	}
}

1022 
	$osd_ª˘™gÀ_åy_gë_mb_‰om_ª˘™gÀ
(
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
, 
osd_mb_ch¨_íåy_t
 **
mb
)

1024 
tcb_node_queue_t
 *
mb_ch¨_queue
;

1025 
tcb_node_t
 *
ãmp_node
;

1027 
mb_ch¨_queue
 = &
ª˘™gÀ
->
mb_ch¨_queue_node
;

1028 
mb_ch¨_queue
->
›
->
	`åy_gë
(mb_ch¨_queue, &
ãmp_node
);

1029 if(
ãmp_node
 !
NULL
){

1030 *
mb
 = 
	`to_gë_osd_mb_ch¨_íåy_wôh_node
(
ãmp_node
);

1032 *
mb
 = 
NULL
;

1034 
	}
}

1036 
	$osd_ª˘™gÀ_upd©e_ª˘™gÀ_Âga_buf
(
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
)

1038 
ªt
 = 0;

1040 if(
ª˘™gÀ
->
osd_íabÀ
){

1041 if(
ª˘™gÀ
->
√ed_upd©e_d©a
){

1042 
osd_mb_ch¨_íåy_t
 *
mb
;

1044 
ª˘™gÀ
->
›
->
	`åy_gë_mb_‰om_ª˘™gÀ
‘e˘™gÀ, &
mb
);

1045 if(
mb
 !
NULL
){

1046 
mb
->
›
->
	`upd©e_mb_vútuÆ_d©a
(mb, mb->
ªf_mb_x
, mb->
ªf_mb_y
);

1047 
mb
->
›
->
	`upd©e_Âga_osd_d©a
(mb);

1048 
mb
->
›
->
	`ªÀa£
(mb);

1053 
ª˘™gÀ
->
√ed_upd©e_d©a
 = 0;

1054 
ªt
 |
UPDATE_OSD_DATA_SECTION
;

1057  
ªt
;

1058 
	}
}

1060 
	$osd_ª˘™gÀ_upd©e_ª˘™gÀ_©å_ªgs
(
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
)

1062 
ªt
 = 0;

1064 if(
ª˘™gÀ
->
osd_íabÀ
){

1065 if(
ª˘™gÀ
->
√ed_upd©e_©å
){

1066 
osd_ch™_ígöe_t
 *
osd_ch™_ígöe
;

1067 
osd_©åibuã_ªgs_group_t
 *
©åibuã_ªgs
;

1069 
osd_ch™_ígöe
 = 
ª˘™gÀ
->osd_chan_engine;

1070 
©åibuã_ªgs
 = &
osd_ch™_ígöe
->attribute_regs;

1071 
©åibuã_ªgs
->
ch™_ª˘_©å_ªgs_group_›
->
	`ch™_ª˘™gÀ_©å_ªgs_£t
◊âribuã_ªgs, 
ª˘™gÀ
->
ª˘™gÀ_id
);

1072 
ª˘™gÀ
->
√ed_upd©e_©å
 = 0;

1073 
ªt
 |
UPDATE_OSD_ATTR_SECTION
;

1076  
ªt
;

1077 
	}
}

1079 
	$osd_ª˘™gÀ_decide_ª˘™gÀ_d©a_addr_m≠
(
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
, 
video_sour˚_size
)

1081 
osd_ch™_ígöe_t
 *
osd_ch™_ígöe
 = 
ª˘™gÀ
->osd_chan_engine;

1082 
osd_©åibuã_ªgs_group_t
 *
©åibuã_ªgs
;

1083 
ícode_osd_°rög_©å_t
 *
°rög_©å
;

1084 
ícode_osd_mask_©å_t
 *
mask_©å
;

1085 
osd_©åibuã_ªgs1
 *
±r_ªgs1
;

1086 
osd_©åibuã_ªgs2
 *
±r_ªgs2
;

1087 
osd_©åibuã_ªgs3
 *
±r_ªgs3
;

1088 
osd_d©a_0_8_ba£_addr
, 
osd_d©a_addr_off£t_0_2
;

1090 
©åibuã_ªgs
 = &
osd_ch™_ígöe
->attribute_regs;

1091 
±r_ªgs1
 = &
ª˘™gÀ
->
©å_ªgs
->
ªg1_vÆue
.
ªg1
;

1092 
±r_ªgs1
->
íabÀ
 = 0;

1093 
±r_ªgs1
->
ª˘™gÀ_mb_x_width
 = 
ª˘™gÀ
->
ª˘™gÀ_right_x
 -Ñe˘™gÀ->
ª˘™gÀ_À·_x
;

1094 
±r_ªgs1
->
ª˘™gÀ_mb_y_height
 = 
ª˘™gÀ
->
ª˘™gÀ_right_y
 -Ñe˘™gÀ->
ª˘™gÀ_À·_y
;

1095 
±r_ªgs1
->
ª˘™gÀ_mb_x
 = 
ª˘™gÀ
->
ª˘™gÀ_À·_x
;

1096 
±r_ªgs1
->
ª˘™gÀ_mb_y
 = 
ª˘™gÀ
->
ª˘™gÀ_À·_y
;

1097 
±r_ªgs2
 = &
ª˘™gÀ
->
©å_ªgs
->
ªg2_vÆue
.
ªg2
;

1098 
±r_ªgs2
->
mode1_‰⁄t_y
 = 0;

1099 
±r_ªgs2
->
mode1_‰⁄t_u
 = 0;

1100 
±r_ªgs2
->
mode1_‰⁄t_v
 = 0;

1101 
±r_ªgs3
 = &
ª˘™gÀ
->
©å_ªgs
->
ªg3_vÆue
.
ªg3
;

1102 
±r_ªgs3
->
mode1_background_y
 = 0;

1103 
±r_ªgs3
->
mode1_background_u
 = 0;

1104 
±r_ªgs3
->
mode1_background_v
 = 0;

1105 
±r_ªgs3
->
ª£rved
 = 0;

1106 
ª˘™gÀ
->
ª˘™gÀ_mode
){

1107 
TIMER_RECTANGLE_ENCODE_OSD
:

1108 if(
ª˘™gÀ
->
¥iv©e_©åi
.
time_ª˘™gÀ_©åibuã
==
NULL
){

1109 
©åibuã_ªgs
->
ch™_ª˘_©å_ªgs_group_›
->
	`ch™_ª˘™gÀ_©å_ªgs_ª£t
◊âribuã_ªgs, 
ª˘™gÀ
->
ª˘™gÀ_id
);

1112 if(
ª˘™gÀ
->
¥iv©e_©åi
.
time_ª˘™gÀ_©åibuã
->
timî_di•œy_mode
 >
DONT_DISPLAY_TIMER
){

1113 
©åibuã_ªgs
->
ch™_ª˘_©å_ªgs_group_›
->
	`ch™_ª˘™gÀ_©å_ªgs_ª£t
◊âribuã_ªgs, 
ª˘™gÀ
->
ª˘™gÀ_id
);

1116 
±r_ªgs1
->
mode
 = 
ENCODE_OSD_MODE0
;

1117 
±r_ªgs3
->
d©a_ba£_m≠_mode
 = 
Y8MB_X128MB_OSDMODE013
;

1119 
CHAR_RECTANGLE_ENCODE_OSD
:

1120 
°rög_©å
 = 
ª˘™gÀ
->
¥iv©e_©åi
.
°rög_ª˘™gÀ_©åibuã
;

1121 if(
°rög_©å
 =
NULL
){

1122 
©åibuã_ªgs
->
ch™_ª˘_©å_ªgs_group_›
->
	`ch™_ª˘™gÀ_©å_ªgs_ª£t
◊âribuã_ªgs, 
ª˘™gÀ
->
ª˘™gÀ_id
);

1125 
±r_ªgs1
->
mode
 = 
ENCODE_OSD_MODE0
;

1126 
±r_ªgs3
->
d©a_ba£_m≠_mode
 = 
°rög_©å
->
d©a_addr_m≠_mode
;

1128 
MASK_RECTANGLE_ENCODE_OSD
:

1129 
mask_©å
 = 
ª˘™gÀ
->
¥iv©e_©åi
.
mask_ª˘™gÀ_©åibuã
;

1130 if(
mask_©å
 =
NULL
){

1131 
©åibuã_ªgs
->
ch™_ª˘_©å_ªgs_group_›
->
	`ch™_ª˘™gÀ_©å_ªgs_ª£t
◊âribuã_ªgs, 
ª˘™gÀ
->
ª˘™gÀ_id
);

1134 
±r_ªgs1
->
mode
 = 
ENCODE_OSD_MODE3
;

1135 
±r_ªgs3
->
d©a_ba£_m≠_mode
 = 
mask_©å
->
d©a_addr_m≠_mode
;

1136 
±r_ªgs2
->
mode1_‰⁄t_u
 = 
±r_ªgs3
->
mode1_background_u
 = 
mask_©å
->
u_vÆue
;

1137 
±r_ªgs2
->
mode1_‰⁄t_v
 = 
±r_ªgs3
->
mode1_background_v
 = 
mask_©å
->
v_vÆue
;

1138 
±r_ªgs2
->
mode1_‰⁄t_y
 = 
±r_ªgs3
->
mode1_background_y
 = 
mask_©å
->
y_vÆue
;

1141 
©åibuã_ªgs
->
ch™_ª˘_©å_ªgs_group_›
->
	`ch™_ª˘™gÀ_©å_ªgs_ª£t
◊âribuã_ªgs, 
ª˘™gÀ
->
ª˘™gÀ_id
);

1144 
ª˘™gÀ
->
osd_d©a_addr_ba£
 = 
	`gë_osd_ª˘™gñ_d©a_ba£
‘e˘™gÀ->
ª˘™gÀ_id
, 
video_sour˚_size
, 
osd_ch™_ígöe
->
ma°îOrSub
, osd_ch™_ígöe->
ch™_d©a_ba£
);

1145 
	`gë_osd_ª˘™gñ_d©a_ba£_™d_off£t
(
ª˘™gÀ
->
osd_d©a_addr_ba£
, 
±r_ªgs1
->
mode
, 
±r_ªgs3
->
d©a_ba£_m≠_mode
, &
osd_d©a_0_8_ba£_addr
, &
osd_d©a_addr_off£t_0_2
);

1146 
±r_ªgs1
->
d©a_ba£_addr8
 = ((
osd_d©a_0_8_ba£_addr
>>8)&0x1);

1147 
±r_ªgs2
->
d©a_ba£_addr_7_0
 = (
osd_d©a_0_8_ba£_addr
&0xff);

1148 
±r_ªgs3
->
osd_d©a_addªss_off£t
 = 
osd_d©a_addr_off£t_0_2
;

1149 
©åibuã_ªgs
->
ch™_ª˘_©å_ªgs_group_›
->
	`ch™_ª˘™gÀ_©å_ªgs_£t
◊âribuã_ªgs, 
ª˘™gÀ
->
ª˘™gÀ_id
);

1150 
	}
}

1152 
	$osd_ª˘™gÀ_£t_ª˘™gÀ_m≠_mode
(
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
, 
mode
)

1154 
osd_©åibuã_ªgs3
 *
±r_ªgs3
;

1155 
±r_ªgs3
 = &
ª˘™gÀ
->
©å_ªgs
->
ªg3_vÆue
.
ªg3
;

1156 
±r_ªgs3
->
d©a_ba£_m≠_mode
 = 
mode
;

1157 
	}
}

1159 
osd_ª˘™gÀ_›î©i⁄
 
	gosd_ª˘™gÀ_›
 =

1161 .
ª£t
 = 
osd_ª˘™gÀ_ª£t
,

1162 .
	g˛o£_ª˘™gÀ
 = 
osd_ª˘™gÀ_˛o£_ª˘™gÀ
,

1163 .
	gput_mb_öto_ª˘™gÀ
 = 
osd_ª˘™gÀ_put_mb_öto_ª˘™gÀ
,

1164 .
	gåy_gë_mb_‰om_ª˘™gÀ
 = 
osd_ª˘™gÀ_åy_gë_mb_‰om_ª˘™gÀ
,

1165 .
	gupd©e_ª˘™gÀ_Âga_buf
 = 
osd_ª˘™gÀ_upd©e_ª˘™gÀ_Âga_buf
,

1166 .
	gupd©e_ª˘™gÀ_©å_ªgs
 = 
osd_ª˘™gÀ_upd©e_ª˘™gÀ_©å_ªgs
,

1167 .
	gdecide_ª˘™gÀ_d©a_addr_m≠
 = 
osd_ª˘™gÀ_decide_ª˘™gÀ_d©a_addr_m≠
,

1168 .
	g£t_ª˘™gÀ_m≠_mode
 = 
osd_ª˘™gÀ_£t_ª˘™gÀ_m≠_mode
,

1171 #ifdef 
TESTING_TIMESTAMP


1172 
	$osd_ch™_ígöe_¸óã_timî_ª˘™gÀ_ã°ög_time°amp
(
osd_ch™_ígöe_t
 *
ígöe
, 
time°amp
, 
ícode_±r
, 
ªf_±r
, 
Âs
, 
Âm
)

1174 
	$osd_ch™_ígöe_¸óã_timî_ª˘™gÀ
(
osd_ch™_ígöe_t
 *
ígöe
)

1177 
osd_©åibuã_ªgs_group_t
 *
©åibuã_ªgs
;

1178 
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
;

1179 
tw_h264_ícode_dñè_t
 *
dñè
;

1180 
dvm_chù_t
 *
chù
;

1181 
chù_drivî_t
 *
chù_drivî
;

1182 
tw_video_bus_t
 *
video_bus
;

1183 
tw5864_vd_¸oss_bus_t
 *
vd_bus
;

1184 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

1185 
DVMNVS_CHIP_VIDEO_ENCODE_CAPABILITY
 *
video_ícode_ˇp
;

1186 
ícode_osd_timî_©å_t
 *
timî_©å
;

1187 
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
;

1188 
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
;

1189 
osd_mb_poﬁ_t
 *
mb_poﬁ
;

1190 
osd_mb_ch¨_íåy_t
 *
mb
;

1191 
osd_sy°em_timî_t
 *
timî
;

1192 
u8
 *
ch¨_lib_addr
, *
§c_buf
, *
mîge_buf
, *
°rög_±r
[2], 
°rög_Àn
[2], 
mb_löe_width
[2], 
mb_löe_height
;

1193 
u8
 
ãmp_buf
[
YEAR_TIME_STRING_LEN
];

1194 
mb_À·_x
, 
mb_À·_y
, 
mb_löe_numbî
, 
mîge_buf_off£t
;

1195 
i
, 
pixñ_x
, 
dñè_x
, 
f⁄t_right_pixñ
, 
f⁄t_pixñ_width
, 
mb_right_pixñ
;

1196 
mb_cou¡
, 
ch¨_Àn
;

1197 
phy_¶Ÿ_id
, 
osd_¶Ÿ_id
;

1199 
©åibuã_ªgs
 = &
ígöe
->attribute_regs;

1200 
ícode_ch™
 = 
ígöe
->encode_chan;

1201 
phy_¶Ÿ_id
 = 
ícode_ch™
->phy_slot_id;

1202 
dñè
 = &
ícode_ch™
->
ícode_c⁄åﬁ
.
ícode_dñè
;

1203 
ígöe
->
›
->
	`gë_ª˘™gÀ
”ngöe, &
ª˘™gÀ
, 
TIMER_RECTANGLE_ENCODE_OSD
, 
TIMER_RECTANGLE_ID
);

1204 if(
ª˘™gÀ
 =
NULL
){

1207 
timî_©å
 = 
ª˘™gÀ
->
¥iv©e_©åi
.
time_ª˘™gÀ_©åibuã
;

1208 
timî
 = 
timî_©å
->timer;

1209 
chù
 = 
ª˘™gÀ
->chip;

1210 
chù_drivî
 = 
chù
->chip_driver;

1211 
video_bus
 = &
chù_drivî
->video_bus;

1212 
vd_bus
 = 
video_bus
->
vd_bus_drivî
;

1213 
video_ícode_ˇp
 = 
chù
->video_encode_cap;

1214 
mb_poﬁ
 = &
ígöe
->
osd_ch™_poﬁ
;

1216 if(
timî_©å
->
timî_di•œy_mode
 >
DONT_DISPLAY_TIMER
){

1217 
©åibuã_ªgs
->
ch™_ª˘_©å_ªgs_group_›
->
	`ch™_ª˘™gÀ_©å_ªgs_ª£t
◊âribuã_ªgs, 
ª˘™gÀ
->
ª˘™gÀ_id
);

1218 
timî_©å
->
√ed_upd©e_Êag
 = 0;

1220 if(
timî_©å
->
√ed_upd©e_Êag
){

1221 if(
timî
->
√ed_upd©e_m≠_èbÀ
[
chù
->
chù_id
]&(1<<
ícode_ch™
->
logic_ch™_id
)){

1222 #ifde‡ 
TESTING_TIMESTAMP


1225 
timî
->
√ed_upd©e_m≠_èbÀ
[
chù
->
chù_id
] &~(1<<
ícode_ch™
->
logic_ch™_id
);

1227 
mb_À·_x
 = 
timî_©å
->
mb_x
;

1228 
mb_À·_y
 = 
timî_©å
->
mb_y
;

1229 
°rög_±r
[0] = såög_±r[1] = 
ãmp_buf
;

1230 
°rög_Àn
[0] = string_len[1] = 0;

1231 
mb_löe_width
[0] = mb_line_width[1] = 0;

1232 
mb_löe_numbî
 = 1;

1233 
timî_©å
->
timî_di•œy_mode
){

1235 
YEAR_MONTH_DAY_HOUR_MINUTE_SECOND
:

1236 #ifdef 
TESTING_TIMESTAMP


1239 
°rög_Àn
[0] = 
	`¢¥ötf
(
°rög_±r
[0], 
YEAR_TIME_STRING_LEN
, "[ch™_%d_%c] %2.2d:%2.2d:%2.2d-%u-%d-%d %d-%d", 
ª˘™gÀ
->
ch™_id
, ((
ígöe
->
ma°îOrSub
 =
TW_SUB_BITSTREAM
Ë? 'S' : 'M'), 
timî
->
hour
,Åimî->
möuã
,Åimî->
£c⁄d
, 
time°amp
, 
ícode_±r
, 
ªf_±r
, 
Âs
, 
Âm
);

1241 
°rög_Àn
[0] = 
	`¢¥ötf
(
°rög_±r
[0], 
YEAR_TIME_STRING_LEN
, "%4.4d-%2.2d-%2.2d %2.2d:%2.2d:%2.2d", 
timî
->
yór
,Åimî->
m⁄th
,Åimî->
day
,Åimî->
hour
,Åimî->
möuã
,Åimî->
£c⁄d
);

1244 
YEAR_NONTH_DAY_NEWLINE_HOUR_MINUTE_SECOND_LEFT_ALIGN
:

1245 
YEAR_MONTH_DAY_NEWLINE_HOUR_MINUTE_SECOND_RIGHT_ALIGN
:

1246 
°rög_Àn
[0] = 
	`¢¥ötf
(
°rög_±r
[0], 
YEAR_TIME_STRING_LEN
, " %2.2d:%2.2d:%2.2d", 
timî
->
hour
,Åimî->
möuã
,Åimî->
£c⁄d
);

1247 
°rög_±r
[1] = såög_±r[0] + 
°rög_Àn
[0] + 1;

1248 
°rög_Àn
[1] = 
	`¢¥ötf
(
°rög_±r
[1], 
YEAR_STRING_LEN
, "%4.4d-%2.2d-%2.2d", 
timî
->
yór
,Åimî->
m⁄th
,Åimî->
day
);

1249 
mb_löe_numbî
++;

1252 
ª˘™gÀ
->
ª˘™gÀ_À·_x
 = 
mb_À·_x
;

1253 
ª˘™gÀ
->
ª˘™gÀ_À·_y
 = 
mb_À·_y
;

1254 
mb_löe_height
 = 0;

1255 
i
=0; i<
mb_löe_numbî
; i++){

1256 
§c_buf
 = 
°rög_±r
[
i
];

1257 
pixñ_x
 = 
dñè_x
 = 0;

1258 
f⁄t_right_pixñ
 = 
f⁄t_pixñ_width
 = 
mb_right_pixñ
 = 0;

1259 
ch¨_lib_addr
 = 
mîge_buf
 = 
NULL
;

1260 
mb_cou¡
 = 0;

1261 
ch¨_Àn
 = 0;

1262 if(
timî_©å
->
f⁄t_ty≥
 =
FONT_TYPE_12X12
){

1264 if(
mb_right_pixñ
 == 0){

1265 
mb_poﬁ
->
›
->
	`åy_gë
(mb_poﬁ, &
mb
, 
ª˘™gÀ
);

1266 
mb_right_pixñ
 = 
MB_PIXEL_WIDTH
;

1267 
mîge_buf
 = (
u8
*)
mb
->
∑ylﬂd
;

1268 
mb
->
∑ylﬂd_Àn
 = 
OSD_MB_BUF_CHAR_BITMAP_LEN
;

1270 if((
f⁄t_right_pixñ
==0Ë&& (
ch¨_Àn
<
°rög_Àn
[
i
])){

1271 
	`gë_lib12_addr
(&
ch¨_lib_addr
, 
§c_buf
);

1272 if(
ch¨_lib_addr
 !
NULL
){

1273 
f⁄t_right_pixñ
 = 
f⁄t_pixñ_width
 = 
FONT12_PIXEL_WIDTH
;

1274 
ch¨_Àn
 += 2;

1275 
§c_buf
 += 2;

1277 
	`gë_ascii_lib12_addr
(&
ch¨_lib_addr
, 
§c_buf
);

1278 
f⁄t_right_pixñ
 = 
f⁄t_pixñ_width
 = 
ASCII12_PIXEL_WIDTH
;

1279 
ch¨_Àn
 += 1;

1280 
§c_buf
 += 1;

1283 
mîge_buf_off£t
 = 
pixñ_x
%
MB_PIXEL_WIDTH
;

1284 if(
f⁄t_right_pixñ
 != 0){

1285 
dñè_x
 = 
	`H264_MIN
(
mb_right_pixñ
, 
f⁄t_right_pixñ
);

1287 
dñè_x
 = 
mb_right_pixñ
;

1289 if(
mîge_buf
!=
NULL
 && 
ch¨_lib_addr
!=NULL){

1290 
	`mem˝y
(&
mîge_buf
[
mîge_buf_off£t
], &
ch¨_lib_addr
[
f⁄t_pixñ_width
-
f⁄t_right_pixñ
], 
dñè_x
);

1291 
	`mem˝y
(&
mîge_buf
[
mîge_buf_off£t
+
MB_PIXEL_WIDTH
], &
ch¨_lib_addr
[
f⁄t_pixñ_width
-
f⁄t_right_pixñ
+f⁄t_pixñ_width], 
dñè_x
);

1293 
pixñ_x
 +
dñè_x
;

1294 
f⁄t_right_pixñ
 -
dñè_x
;

1295 if(
f⁄t_right_pixñ
 <= 0){

1296 
ch¨_lib_addr
 = 
NULL
;

1297 
f⁄t_right_pixñ
 = 0;

1299 
mb_right_pixñ
 -
dñè_x
;

1300 if(
mb_right_pixñ
 <= 0){

1301 
mîge_buf
 = 
NULL
;

1302 
mb_right_pixñ
 = 0;

1303 
mb
->
ªf_mb_x
 = 
mb_cou¡
++;

1304 
mb
->
ªf_mb_y
 = 0;

1305 
ª˘™gÀ
->
›
->
	`put_mb_öto_ª˘™gÀ
‘e˘™gÀ, 
mb
);

1307 }((
f⁄t_right_pixñ
!=0Ë|| (
mb_right_pixñ
!=0Ë|| (
ch¨_Àn
 < 
°rög_Àn
[
i
])Ë&& (
pixñ_x
<
WIDTH_FRAME_D1_PAL
));

1308 
mb_löe_height
++;

1310 
osd_mb_ch¨_íåy_t
 *
mb_24
;

1311 
u8
 *
mîge_buf_24
=
NULL
;

1313 if(
mb_right_pixñ
 == 0){

1314 
mb_poﬁ
->
›
->
	`åy_gë
(mb_poﬁ, &
mb
, 
ª˘™gÀ
);

1315 
mb_right_pixñ
 = 
MB_PIXEL_WIDTH
;

1316 
mîge_buf
 = (
u8
*)
mb
->
∑ylﬂd
;

1317 
mb
->
∑ylﬂd_Àn
 = 
OSD_MB_BUF_CHAR_BITMAP_LEN
;

1318 
mb_poﬁ
->
›
->
	`åy_gë
(mb_poﬁ, &
mb_24
, 
ª˘™gÀ
);

1319 
mîge_buf_24
 = (
u8
*)
mb_24
->
∑ylﬂd
;

1320 
mb_24
->
∑ylﬂd_Àn
 = 
OSD_MB_BUF_CHAR_BITMAP_LEN
;

1322 if((
f⁄t_right_pixñ
==0Ë&& (
ch¨_Àn
<
°rög_Àn
[
i
])){

1323 
	`gë_lib24_addr
(&
ch¨_lib_addr
, 
§c_buf
);

1324 if(
ch¨_lib_addr
 !
NULL
){

1325 
f⁄t_right_pixñ
 = 
f⁄t_pixñ_width
 = 
FONT24_PIXEL_WIDTH
;

1326 
ch¨_Àn
 += 2;

1327 
§c_buf
 += 2;

1329 
	`gë_ascii_lib24_addr
(&
ch¨_lib_addr
, 
§c_buf
);

1330 
f⁄t_right_pixñ
 = 
f⁄t_pixñ_width
 = 
ASCII24_PIXEL_WIDTH
;

1331 
ch¨_Àn
 += 1;

1332 
§c_buf
 += 1;

1335 
mîge_buf_off£t
 = 
pixñ_x
%
MB_PIXEL_WIDTH
;

1336 if(
f⁄t_right_pixñ
 != 0){

1337 
dñè_x
 = 
	`H264_MIN
(
mb_right_pixñ
, 
f⁄t_right_pixñ
);

1339 
dñè_x
 = 
mb_right_pixñ
;

1341 if(
mîge_buf
!=
NULL
 && 
ch¨_lib_addr
!=NULL){

1342 
	`mem˝y
(&
mîge_buf
[
mîge_buf_off£t
], &
ch¨_lib_addr
[
f⁄t_pixñ_width
-
f⁄t_right_pixñ
], 
dñè_x
);

1343 
	`mem˝y
(&
mîge_buf
[
mîge_buf_off£t
+
MB_PIXEL_WIDTH
], &
ch¨_lib_addr
[
f⁄t_pixñ_width
-
f⁄t_right_pixñ
+f⁄t_pixñ_width], 
dñè_x
);

1345 if(
mîge_buf_24
!=
NULL
 && 
ch¨_lib_addr
!=NULL){

1346 
	`mem˝y
(&
mîge_buf_24
[
mîge_buf_off£t
], &
ch¨_lib_addr
[
f⁄t_pixñ_width
-
f⁄t_right_pixñ
+f⁄t_pixñ_width+f⁄t_pixñ_width], 
dñè_x
);

1347 
	`mem˝y
(&
mîge_buf_24
[
mîge_buf_off£t
+
MB_PIXEL_WIDTH
], &
ch¨_lib_addr
[
f⁄t_pixñ_width
-
f⁄t_right_pixñ
+f⁄t_pixñ_width+f⁄t_pixñ_width+f⁄t_pixñ_width], 
dñè_x
);

1349 
pixñ_x
 +
dñè_x
;

1350 
f⁄t_right_pixñ
 -
dñè_x
;

1351 if(
f⁄t_right_pixñ
 <= 0){

1352 
ch¨_lib_addr
 = 
NULL
;

1353 
f⁄t_right_pixñ
 = 0;

1355 
mb_right_pixñ
 -
dñè_x
;

1356 if(
mb_right_pixñ
 <= 0){

1357 
mîge_buf
 = 
NULL
;

1358 
mb_right_pixñ
 = 0;

1359 
mb
->
ªf_mb_x
 = 
mb_cou¡
;

1360 
mb
->
ªf_mb_y
 = 0;

1361 
ª˘™gÀ
->
›
->
	`put_mb_öto_ª˘™gÀ
‘e˘™gÀ, 
mb
);

1362 
mb_24
->
ªf_mb_x
 = 
mb_cou¡
++;

1363 
mb_24
->
ªf_mb_y
 = 1;

1364 
ª˘™gÀ
->
›
->
	`put_mb_öto_ª˘™gÀ
‘e˘™gÀ, 
mb_24
);

1366 }((
f⁄t_right_pixñ
!=0Ë|| (
mb_right_pixñ
!=0Ë|| (
ch¨_Àn
 < 
°rög_Àn
[
i
])Ë&& (
pixñ_x
<
WIDTH_FRAME_D1_PAL
));

1367 
mb_löe_height
 += 2;

1369 
mb_löe_width
[
i
] = 
mb_cou¡
;

1371 
mb_cou¡
 = 
	`H264_MAX
(
mb_löe_width
[0], mb_line_width[1]);

1372 
ª˘™gÀ
->
ª˘™gÀ_right_x
 = 
timî_©å
->
mb_x
 + 
mb_cou¡
 - 1;

1373 
ª˘™gÀ
->
ª˘™gÀ_right_y
 = 
timî_©å
->
mb_y
 + 
mb_löe_height
 - 1;

1374 
vd_bus
->
›
->
	`gë_phy_video_¶Ÿ_by_phy_id
(vd_bus, 
phy_¶Ÿ_id
, &
phy_video_¶Ÿ
);

1375 
osd_¶Ÿ_id
 = 
	`gë_phy_¶Ÿ_id_by_osd_ch™_ba£
(
vd_bus
, 
ígöe
->
ch™_d©a_ba£
, 
phy_¶Ÿ_id
, 
video_ícode_ˇp
->
ddr_m≠_mode
);

1376 
vd_bus
->
›
->
	`gë_phy_video_¶Ÿ_by_phy_id
(vd_bus, 
osd_¶Ÿ_id
, &
phy_video_¶Ÿ
);

1377 
ígöe
->
videoSizeMode
 = 
phy_video_¶Ÿ
->
video_size
;

1378 
ª˘™gÀ
->
›
->
	`decide_ª˘™gÀ_d©a_addr_m≠
‘e˘™gÀ, 
ígöe
->
videoSizeMode
);

1379 
ª˘™gÀ
->
√ed_upd©e_©å
 = 1;

1380 
ª˘™gÀ
->
√ed_upd©e_d©a
 = 1;

1381 
ª˘™gÀ
->
osd_íabÀ
 = 1;

1382 
osd_d¥am_ªq
 = &
ª˘™gÀ
->osd_dpram_req;

1383 
	`©omic_öc
(&
ígöe
->
osd_is_w‹kög
);

1384 
	`öô_com∂ëi⁄
(&
ígöe
->
waô_d⁄e
);

1385 
osd_d¥am_ªq
->
›
->
	`submô_wrôe_osd_ª˘™gÀ_d©a_ªq
(osd_d¥am_ªq, 
chù
);

1390 
	}
}

1392 
	$osd_ch™_ígöe_¸óã_ch¨_ª˘™gÀ
(
osd_ch™_ígöe_t
 *
ígöe
, 
ty≥_id
)

1394 
osd_©åibuã_ªgs_group_t
 *
©åibuã_ªgs
;

1395 
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
;

1396 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

1397 
dvm_chù_t
 *
chù
;

1398 
chù_drivî_t
 *
chù_drivî
;

1399 
tw_video_bus_t
 *
video_bus
;

1400 
tw5864_vd_¸oss_bus_t
 *
vd_bus
;

1401 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

1402 
DVMNVS_CHIP_VIDEO_ENCODE_CAPABILITY
 *
video_ícode_ˇp
;

1403 
osd_mb_poﬁ_t
 *
mb_poﬁ
;

1404 
osd_mb_ch¨_íåy_t
 *
mb
;

1405 
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
;

1406 
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
;

1407 
ícode_osd_°rög_©å_t
 *
°rög_©å
;

1408 
u8
 *
ch¨_lib_addr
, *
mîge_buf
, *
§c_buf
;

1409 
mb_numbî
, 
ch¨_Àn
;

1410 
pixñ_x
, 
dñè_x
, 
f⁄t_pixñ_width
, 
mîge_buf_off£t
, 
mb_right_pixñ
, 
f⁄t_right_pixñ
, 
mb_cou¡
;

1411 
phy_¶Ÿ_id
, 
osd_¶Ÿ_id
;

1413 
©åibuã_ªgs
 = &
ígöe
->attribute_regs;

1414 
ícode_ch™
 = 
ígöe
->encode_chan;

1415 
phy_¶Ÿ_id
 = 
ícode_ch™
->phy_slot_id;

1416 
ícode_c⁄åﬁ
 = &
ícode_ch™
->encode_control;

1417 
ígöe
->
›
->
	`gë_ª˘™gÀ
”ngöe, &
ª˘™gÀ
, 
CHAR_RECTANGLE_ENCODE_OSD
, 
ty≥_id
);

1418 if(
ª˘™gÀ
 =
NULL
){

1421 
°rög_©å
 = 
ª˘™gÀ
->
¥iv©e_©åi
.
°rög_ª˘™gÀ_©åibuã
;

1422 
chù
 = 
ª˘™gÀ
->chip;

1423 
chù_drivî
 = 
chù
->chip_driver;

1424 
video_bus
 = &
chù_drivî
->video_bus;

1425 
vd_bus
 = 
video_bus
->
vd_bus_drivî
;

1426 
video_ícode_ˇp
 = 
chù
->video_encode_cap;

1427 
mb_poﬁ
 = &
ígöe
->
osd_ch™_poﬁ
;

1429 if(
°rög_©å
->
°rög_Àn
 <= 0){

1430 
©åibuã_ªgs
->
ch™_ª˘_©å_ªgs_group_›
->
	`ch™_ª˘™gÀ_©å_ªgs_ª£t
◊âribuã_ªgs, 
ª˘™gÀ
->
ª˘™gÀ_id
);

1432 if(
°rög_©å
->
√ed_upd©e_Êag
){

1433 
°rög_©å
->
√ed_upd©e_Êag
 = 0;

1434 
mb_numbî
 = (
°rög_©å
->
°rög_Àn
+1)>>1;

1435 if(
°rög_©å
->
f⁄t_ty≥
 =
FONT_TYPE_12X12
){

1436 
mb_numbî
 *= 12;

1437 
mb_numbî
 += 15;

1438 
mb_numbî
 >>= 4;

1440 
mb_numbî
 *= 24;

1441 
mb_numbî
 += 15;

1442 
mb_numbî
 >>= 4;

1444 if((
mb_numbî
+
°rög_©å
->
mb_x
Ë< 
ícode_c⁄åﬁ
->
i_mb_x
){

1445 
°rög_©å
->
mb_width
 = 
mb_numbî
 - 1;

1446 
°rög_©å
->
mb_height
 = 0;

1448 
°rög_©å
->
mb_width
 = 
ícode_c⁄åﬁ
->
i_mb_x
 - 1 - såög_©å->
mb_x
;

1449 
°rög_©å
->
mb_height
 = 
mb_numbî
/°rög_©å->
mb_width
;

1450 
°rög_©å
->
mb_height
 = 
	`H264_MIN
(°rög_©å->mb_height, (
ícode_c⁄åﬁ
->
i_mb_y
 - 1 - såög_©å->
mb_y
));

1452 if(
°rög_©å
->
mb_width
 < 16){

1453 
°rög_©å
->
d©a_addr_m≠_mode
 = 
Y64MB_X16MB_OSDMODE013
;

1454 
°rög_©å
->
mb_height
 = 
	`H264_MIN
(63, string_attr->mb_height);

1455 } if(
°rög_©å
->
mb_width
 < 32){

1456 
°rög_©å
->
d©a_addr_m≠_mode
 = 
Y32MB_X32MB_OSDMODE013
;

1457 
°rög_©å
->
mb_height
 = 
	`H264_MIN
(31, string_attr->mb_height);

1458 } if(
°rög_©å
->
mb_width
 < 64){

1459 
°rög_©å
->
d©a_addr_m≠_mode
 = 
Y16MB_X64MB_OSDMODE013
;

1460 
°rög_©å
->
mb_height
 = 
	`H264_MIN
(15, string_attr->mb_height);

1461 } if(
°rög_©å
->
mb_width
 < 128){

1462 
°rög_©å
->
d©a_addr_m≠_mode
 = 
Y8MB_X128MB_OSDMODE013
;

1463 
°rög_©å
->
mb_height
 = 
	`H264_MIN
(7, string_attr->mb_height);

1465 
°rög_©å
->
mb_width
 = 127;

1466 
°rög_©å
->
d©a_addr_m≠_mode
 = 
Y8MB_X128MB_OSDMODE013
;

1467 
°rög_©å
->
mb_height
 = 
	`H264_MIN
(7, string_attr->mb_height);

1469 
ª˘™gÀ
->
ª˘™gÀ_À·_x
 = 
°rög_©å
->
mb_x
;

1470 
ª˘™gÀ
->
ª˘™gÀ_À·_y
 = 
°rög_©å
->
mb_y
;

1471 
ª˘™gÀ
->
ª˘™gÀ_right_y
 = 
°rög_©å
->
mb_y
;

1473 
§c_buf
 = 
°rög_©å
->
°rög
;

1474 
pixñ_x
 = 
dñè_x
 = 0;

1475 
f⁄t_right_pixñ
 = 
f⁄t_pixñ_width
 = 
mb_right_pixñ
 = 0;

1476 
ch¨_lib_addr
 = 
mîge_buf
 = 
NULL
;

1477 
mb_cou¡
 = 0;

1478 
ch¨_Àn
 = 0;

1479 if(
°rög_©å
->
f⁄t_ty≥
 =
FONT_TYPE_12X12
){

1481 if(
mb_right_pixñ
 == 0){

1482 
mb_poﬁ
->
›
->
	`åy_gë
(mb_poﬁ, &
mb
, 
ª˘™gÀ
);

1483 
mb_right_pixñ
 = 
MB_PIXEL_WIDTH
;

1484 
mîge_buf
 = (
u8
*)
mb
->
∑ylﬂd
;

1485 
mb
->
∑ylﬂd_Àn
 = 
OSD_MB_BUF_CHAR_BITMAP_LEN
;

1487 if((
f⁄t_right_pixñ
==0Ë&& (
ch¨_Àn
<
°rög_©å
->
°rög_Àn
)){

1488 
	`gë_lib12_addr
(&
ch¨_lib_addr
, 
§c_buf
);

1489 if(
ch¨_lib_addr
 !
NULL
){

1490 
f⁄t_right_pixñ
 = 
f⁄t_pixñ_width
 = 
FONT12_PIXEL_WIDTH
;

1491 
ch¨_Àn
 += 2;

1492 
§c_buf
 += 2;

1494 
	`gë_ascii_lib12_addr
(&
ch¨_lib_addr
, 
§c_buf
);

1495 
f⁄t_right_pixñ
 = 
f⁄t_pixñ_width
 = 
ASCII12_PIXEL_WIDTH
;

1496 
ch¨_Àn
 += 1;

1497 
§c_buf
 += 1;

1500 
mîge_buf_off£t
 = 
pixñ_x
%
MB_PIXEL_WIDTH
;

1501 if(
f⁄t_right_pixñ
 != 0){

1502 
dñè_x
 = 
	`H264_MIN
(
mb_right_pixñ
, 
f⁄t_right_pixñ
);

1504 
dñè_x
 = 
mb_right_pixñ
;

1506 if(
mîge_buf
!=
NULL
 && 
ch¨_lib_addr
!=NULL){

1507 
	`mem˝y
(&
mîge_buf
[
mîge_buf_off£t
], &
ch¨_lib_addr
[
f⁄t_pixñ_width
-
f⁄t_right_pixñ
], 
dñè_x
);

1508 
	`mem˝y
(&
mîge_buf
[
mîge_buf_off£t
+
MB_PIXEL_WIDTH
], &
ch¨_lib_addr
[
f⁄t_pixñ_width
-
f⁄t_right_pixñ
+f⁄t_pixñ_width], 
dñè_x
);

1510 
pixñ_x
 +
dñè_x
;

1511 
f⁄t_right_pixñ
 -
dñè_x
;

1512 if(
f⁄t_right_pixñ
 <= 0){

1513 
ch¨_lib_addr
 = 
NULL
;

1514 
f⁄t_right_pixñ
 = 0;

1516 
mb_right_pixñ
 -
dñè_x
;

1517 if(
mb_right_pixñ
 <= 0){

1518 
mîge_buf
 = 
NULL
;

1519 
mb_right_pixñ
 = 0;

1520 
mb
->
ªf_mb_x
 = 
mb_cou¡
++;

1521 
mb
->
ªf_mb_y
 = 0;

1522 
ª˘™gÀ
->
›
->
	`put_mb_öto_ª˘™gÀ
‘e˘™gÀ, 
mb
);

1524 }((
f⁄t_right_pixñ
!=0Ë|| (
mb_right_pixñ
!=0Ë|| (
ch¨_Àn
 < 
°rög_©å
->
°rög_Àn
)Ë&& (
pixñ_x
 < 
WIDTH_FRAME_D1_PAL
));

1526 
osd_mb_ch¨_íåy_t
 *
mb_24
;

1527 
u8
 *
mîge_buf_24
=
NULL
;

1529 if(
mb_right_pixñ
 == 0){

1530 
mb_poﬁ
->
›
->
	`åy_gë
(mb_poﬁ, &
mb
, 
ª˘™gÀ
);

1531 
mb_right_pixñ
 = 
MB_PIXEL_WIDTH
;

1532 
mîge_buf
 = (
u8
*)
mb
->
∑ylﬂd
;

1533 
mb
->
∑ylﬂd_Àn
 = 
OSD_MB_BUF_CHAR_BITMAP_LEN
;

1534 
mb_poﬁ
->
›
->
	`åy_gë
(mb_poﬁ, &
mb_24
, 
ª˘™gÀ
);

1535 
mîge_buf_24
 = (
u8
*)
mb_24
->
∑ylﬂd
;

1536 
mb_24
->
∑ylﬂd_Àn
 = 
OSD_MB_BUF_CHAR_BITMAP_LEN
;

1538 if((
f⁄t_right_pixñ
==0Ë&& (
ch¨_Àn
<
°rög_©å
->
°rög_Àn
)){

1539 
	`gë_lib24_addr
(&
ch¨_lib_addr
, 
§c_buf
);

1540 if(
ch¨_lib_addr
 !
NULL
){

1541 
f⁄t_right_pixñ
 = 
f⁄t_pixñ_width
 = 
FONT24_PIXEL_WIDTH
;

1542 
ch¨_Àn
 += 2;

1543 
§c_buf
 += 2;

1545 
	`gë_ascii_lib24_addr
(&
ch¨_lib_addr
, 
§c_buf
);

1546 
f⁄t_right_pixñ
 = 
f⁄t_pixñ_width
 = 
ASCII24_PIXEL_WIDTH
;

1547 
ch¨_Àn
 += 1;

1548 
§c_buf
 += 1;

1551 
mîge_buf_off£t
 = 
pixñ_x
%
MB_PIXEL_WIDTH
;

1552 if(
f⁄t_right_pixñ
 != 0){

1553 
dñè_x
 = 
	`H264_MIN
(
mb_right_pixñ
, 
f⁄t_right_pixñ
);

1555 
dñè_x
 = 
mb_right_pixñ
;

1557 if(
mîge_buf
!=
NULL
 && 
ch¨_lib_addr
!=NULL){

1558 
	`mem˝y
(&
mîge_buf
[
mîge_buf_off£t
], &
ch¨_lib_addr
[
f⁄t_pixñ_width
-
f⁄t_right_pixñ
], 
dñè_x
);

1559 
	`mem˝y
(&
mîge_buf
[
mîge_buf_off£t
+
MB_PIXEL_WIDTH
], &
ch¨_lib_addr
[
f⁄t_pixñ_width
-
f⁄t_right_pixñ
+f⁄t_pixñ_width], 
dñè_x
);

1561 if(
mîge_buf_24
!=
NULL
 && 
ch¨_lib_addr
!=NULL){

1562 
	`mem˝y
(&
mîge_buf_24
[
mîge_buf_off£t
], &
ch¨_lib_addr
[
f⁄t_pixñ_width
-
f⁄t_right_pixñ
+f⁄t_pixñ_width+f⁄t_pixñ_width], 
dñè_x
);

1563 
	`mem˝y
(&
mîge_buf_24
[
mîge_buf_off£t
+
MB_PIXEL_WIDTH
], &
ch¨_lib_addr
[
f⁄t_pixñ_width
-
f⁄t_right_pixñ
+f⁄t_pixñ_width+f⁄t_pixñ_width+f⁄t_pixñ_width], 
dñè_x
);

1565 
pixñ_x
 +
dñè_x
;

1566 
f⁄t_right_pixñ
 -
dñè_x
;

1567 if(
f⁄t_right_pixñ
 <= 0){

1568 
ch¨_lib_addr
 = 
NULL
;

1569 
f⁄t_right_pixñ
 = 0;

1571 
mb_right_pixñ
 -
dñè_x
;

1572 if(
mb_right_pixñ
 <= 0){

1573 
mîge_buf
 = 
NULL
;

1574 
mb_right_pixñ
 = 0;

1575 
mb
->
ªf_mb_x
 = 
mb_cou¡
;

1576 
mb
->
ªf_mb_y
 = 0;

1577 
ª˘™gÀ
->
›
->
	`put_mb_öto_ª˘™gÀ
‘e˘™gÀ, 
mb
);

1578 
mb_24
->
ªf_mb_x
 = 
mb_cou¡
++;

1579 
mb_24
->
ªf_mb_y
 = 1;

1580 
ª˘™gÀ
->
›
->
	`put_mb_öto_ª˘™gÀ
‘e˘™gÀ, 
mb_24
);

1582 }((
f⁄t_right_pixñ
!=0Ë|| (
mb_right_pixñ
!=0Ë|| (
ch¨_Àn
 < 
°rög_©å
->
°rög_Àn
)Ë&& (
pixñ_x
 < 
WIDTH_FRAME_D1_PAL
));

1583 
ª˘™gÀ
->
ª˘™gÀ_right_y
++;

1585 
ª˘™gÀ
->
ª˘™gÀ_right_x
 = 
°rög_©å
->
mb_x
 + 
mb_cou¡
 - 1;

1586 
vd_bus
->
›
->
	`gë_phy_video_¶Ÿ_by_phy_id
(vd_bus, 
phy_¶Ÿ_id
, &
phy_video_¶Ÿ
);

1587 
osd_¶Ÿ_id
 = 
	`gë_phy_¶Ÿ_id_by_osd_ch™_ba£
(
vd_bus
, 
ígöe
->
ch™_d©a_ba£
, 
phy_¶Ÿ_id
, 
video_ícode_ˇp
->
ddr_m≠_mode
);

1588 
vd_bus
->
›
->
	`gë_phy_video_¶Ÿ_by_phy_id
(vd_bus, 
osd_¶Ÿ_id
, &
phy_video_¶Ÿ
);

1589 
ígöe
->
videoSizeMode
 = 
phy_video_¶Ÿ
->
video_size
;

1590 
ª˘™gÀ
->
›
->
	`decide_ª˘™gÀ_d©a_addr_m≠
‘e˘™gÀ, 
ígöe
->
videoSizeMode
);

1591 
ª˘™gÀ
->
√ed_upd©e_©å
 = 1;

1592 
ª˘™gÀ
->
√ed_upd©e_d©a
 = 1;

1593 
ª˘™gÀ
->
osd_íabÀ
 = 1;

1594 
osd_d¥am_ªq
 = &
ª˘™gÀ
->osd_dpram_req;

1595 
	`©omic_öc
(&
ígöe
->
osd_is_w‹kög
);

1596 
	`öô_com∂ëi⁄
(&
ígöe
->
waô_d⁄e
);

1597 
osd_d¥am_ªq
->
›
->
	`submô_wrôe_osd_ª˘™gÀ_d©a_ªq
(osd_d¥am_ªq, 
chù
);

1601 
	}
}

1603 
	$osd_ch™_ígöe_¸óã_mask_ª˘™gÀ
(
osd_ch™_ígöe_t
 *
ígöe
, 
ty≥_id
)

1605 
dvm_chù_t
 *
chù
;

1606 
chù_drivî_t
 *
chù_drivî
;

1607 
tw_video_bus_t
 *
video_bus
;

1608 
tw5864_vd_¸oss_bus_t
 *
vd_bus
;

1609 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

1610 
DVMNVS_CHIP_VIDEO_ENCODE_CAPABILITY
 *
video_ícode_ˇp
;

1611 
osd_©åibuã_ªgs_group_t
 *
©åibuã_ªgs
;

1612 
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
;

1613 
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
;

1614 
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
;

1615 
ícode_osd_mask_©å_t
 *
mask_©å
;

1616 
phy_¶Ÿ_id
, 
osd_¶Ÿ_id
;

1618 
©åibuã_ªgs
 = &
ígöe
->attribute_regs;

1619 
ícode_ch™
 = 
ígöe
->encode_chan;

1620 
chù
 = 
ícode_ch™
->chip;

1621 
chù_drivî
 = 
chù
->chip_driver;

1622 
video_bus
 = &
chù_drivî
->video_bus;

1623 
vd_bus
 = 
video_bus
->
vd_bus_drivî
;

1624 
video_ícode_ˇp
 = 
chù
->video_encode_cap;

1625 
phy_¶Ÿ_id
 = 
ícode_ch™
->phy_slot_id;

1626 
ígöe
->
›
->
	`gë_ª˘™gÀ
”ngöe, &
ª˘™gÀ
, 
MASK_RECTANGLE_ENCODE_OSD
, 
ty≥_id
);

1627 if(
ª˘™gÀ
 =
NULL
){

1630 
mask_©å
 = 
ª˘™gÀ
->
¥iv©e_©åi
.
mask_ª˘™gÀ_©åibuã
;

1631 if(
mask_©å
->
is_di•œy
 == 0){

1632 
©åibuã_ªgs
->
ch™_ª˘_©å_ªgs_group_›
->
	`ch™_ª˘™gÀ_©å_ªgs_ª£t
◊âribuã_ªgs, 
ª˘™gÀ
->
ª˘™gÀ_id
);

1634 if(
mask_©å
->
√ed_upd©e_Êag
){

1635 
mask_©å
->
√ed_upd©e_Êag
 = 0;

1636 
mask_©å
->
d©a_addr_m≠_mode
 = 
Y32MB_X32MB_OSDMODE013
;

1637 
ª˘™gÀ
->
ª˘™gÀ_À·_x
 = 
mask_©å
->
mb_x
;

1638 
ª˘™gÀ
->
ª˘™gÀ_À·_y
 = 
mask_©å
->
mb_y
;

1639 
ª˘™gÀ
->
ª˘™gÀ_right_x
 = 
mask_©å
->
mb_x
 + mask_©å->
mask_width
;

1640 
ª˘™gÀ
->
ª˘™gÀ_right_y
 = 
mask_©å
->
mb_y
 + mask_©å->
mask_height
;

1641 
vd_bus
->
›
->
	`gë_phy_video_¶Ÿ_by_phy_id
(vd_bus, 
phy_¶Ÿ_id
, &
phy_video_¶Ÿ
);

1642 
osd_¶Ÿ_id
 = 
	`gë_phy_¶Ÿ_id_by_osd_ch™_ba£
(
vd_bus
, 
ígöe
->
ch™_d©a_ba£
, 
phy_¶Ÿ_id
, 
video_ícode_ˇp
->
ddr_m≠_mode
);

1643 
vd_bus
->
›
->
	`gë_phy_video_¶Ÿ_by_phy_id
(vd_bus, 
osd_¶Ÿ_id
, &
phy_video_¶Ÿ
);

1644 
ígöe
->
videoSizeMode
 = 
phy_video_¶Ÿ
->
video_size
;

1645 
ª˘™gÀ
->
›
->
	`decide_ª˘™gÀ_d©a_addr_m≠
‘e˘™gÀ, 
ígöe
->
videoSizeMode
);

1646 
ª˘™gÀ
->
osd_íabÀ
 = 1;

1647 
ª˘™gÀ
->
√ed_upd©e_©å
 = 1;

1648 
ª˘™gÀ
->
√ed_upd©e_d©a
 = 1;

1649 
osd_d¥am_ªq
 = &
ª˘™gÀ
->osd_dpram_req;

1650 
	`©omic_öc
(&
ígöe
->
osd_is_w‹kög
);

1651 
	`öô_com∂ëi⁄
(&
ígöe
->
waô_d⁄e
);

1652 
osd_d¥am_ªq
->
›
->
	`submô_wrôe_osd_ª˘™gÀ_d©a_ªq
(osd_d¥am_ªq, 
ª˘™gÀ
->
chù
);

1656 
	}
}

1659 #ifdef 
TESTING_TIMESTAMP


1660 
	$osd_ch™_ígöe_¸óã_ª˘™gÀ_ã°ög_time°amp
(
osd_ch™_ígöe_t
 *
ígöe
, 
TW_OSD_PARAM
 *
osd_ru¬ög_∑øm
, 
time°amp
, 
ícode_±r
, 
ªf_±r
, 
Âs
, 
Âm
)

1662 
	$osd_ch™_ígöe_¸óã_ª˘™gÀ
(
osd_ch™_ígöe_t
 *
ígöe
, 
TW_OSD_PARAM
 *
osd_ru¬ög_∑øm
)

1665 
ícode_osd_°rög_©å_t
 *
°rög_©å
;

1666 
ícode_osd_timî_©å_t
 *
timî_©å
;

1667 
ícode_osd_mask_©å_t
 *
mask_©å
;

1668 
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
;

1669 
tw_h264_phy_video_¶Ÿ_t
 *
ma°î_¶Ÿ
;

1670 
tw_h264_ícode_c⁄åﬁ_t
 *
ícode_c⁄åﬁ
;

1671 
Êags
;

1673 if(
	`©omic_ªad
(&
ígöe
->
osd_is_w‹kög
)){

1676 
	`•ö_lock_úqßve
(&
ígöe
->
osd_lock
, 
Êags
);

1677 if(
	`©omic_ªad
(&
ígöe
->
sync_osd_∑øm
)){

1678 
	`TW_DBG
(
TW_DBG_INFO
, "sync channel osdÅo hardware\n");

1679 
	`©omic_£t
(&
ígöe
->
sync_osd_∑øm
, 0);

1680 
ícode_ch™
 = 
ígöe
->encode_chan;

1681 
ícode_c⁄åﬁ
 = &
ícode_ch™
->encode_control;

1682 
ma°î_¶Ÿ
 = 
ícode_ch™
->master_slot;

1683 
timî_©å
 = &
ígöe
->timer_attr;

1684 if((
osd_ru¬ög_∑øm
->
time_©åib
&
OSD_ATTR_DISPLAY_ON
) == OSD_ATTR_DISPLAY_ON){

1685 
timî_©å
->
√ed_upd©e_Êag
 = 1;

1686 
timî_©å
->
mb_x
 = 
osd_ru¬ög_∑øm
->
time_pos_x
>>4;

1687 
timî_©å
->
mb_y
 = 
osd_ru¬ög_∑øm
->
time_pos_y
>>4;

1688 
timî_©å
->
mb_x
 = 
	`H264_MIN
—imî_©å->mb_x, 
ícode_c⁄åﬁ
->
i_mb_x
-1-
CHAR_RECTANGLE_X_LEFT
);

1689 
timî_©å
->
mb_y
 = 
	`H264_MIN
—imî_©å->mb_y, 
ícode_c⁄åﬁ
->
i_mb_y
-1-
CHAR_RECTANGLE_Y_LEFT
);

1690 
timî_©å
->
timî_di•œy_mode
 = 
YEAR_MONTH_DAY_HOUR_MINUTE_SECOND
;

1691 if(
ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

1692 
timî_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_24X24
;

1694 
timî_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_12X12
;

1696 if(
ma°î_¶Ÿ
) {

1697 
ícode_ch™
->
ícode_¥›îty
.ícode_¥›îty.
ícodeSize
){

1698 
TW_VIDEO_SIZE_D1
:

1699 
TW_VIDEO_SIZE_HALF_D1
:

1700 
TW_VIDEO_SIZE_USER
:

1701 
timî_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_24X24
;

1704 
TW_VIDEO_SIZE_CIF
:

1705 
timî_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_12X12
;

1709 
timî_©å
->
mb_x
 = 0;

1710 
timî_©å
->
mb_y
 = 0;

1711 
timî_©å
->
timî_di•œy_mode
 = 
DONT_DISPLAY_TIMER
;

1713 
timî_©å
->
›
->
	`ª£t
—imî_©å, 
ígöe
->
ícode_ch™
->
chù
->
chù_id
,Éngöe->ícode_ch™->
logic_ch™_id
);

1715 
timî_©å
->
mb_x
 = 0;

1716 
timî_©å
->
mb_y
 = 0;

1717 
timî_©å
->
timî_di•œy_mode
 = 
DONT_DISPLAY_TIMER
;

1720 
°rög_©å
 = &
ígöe
->°rög_©å[
CHAN_NAME_RECTANGLE_ID
-1];

1721 if((
osd_ru¬ög_∑øm
->
«me_©åib
&
OSD_ATTR_DISPLAY_ON
) == OSD_ATTR_DISPLAY_ON){

1722 
°rög_©å
->
√ed_upd©e_Êag
 = 1;

1723 if(
ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

1724 
°rög_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_24X24
;

1726 
°rög_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_12X12
;

1728 if(
ma°î_¶Ÿ
) {

1729 
ícode_ch™
->
ícode_¥›îty
.ícode_¥›îty.
ícodeSize
){

1730 
TW_VIDEO_SIZE_D1
:

1731 
TW_VIDEO_SIZE_HALF_D1
:

1732 
TW_VIDEO_SIZE_USER
:

1733 
timî_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_24X24
;

1736 
TW_VIDEO_SIZE_CIF
:

1737 
timî_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_12X12
;

1741 
timî_©å
->
mb_x
 = 0;

1742 
timî_©å
->
mb_y
 = 0;

1743 
timî_©å
->
timî_di•œy_mode
 = 
DONT_DISPLAY_TIMER
;

1745 
°rög_©å
->
mb_x
 = 
osd_ru¬ög_∑øm
->
«me_pos_x
>>4;

1746 
°rög_©å
->
mb_y
 = 
osd_ru¬ög_∑øm
->
«me_pos_y
>>4;

1747 
°rög_©å
->
mb_x
 = 
	`H264_MIN
(°rög_©å->mb_x, 
ícode_c⁄åﬁ
->
i_mb_x
-1-
CHAR_RECTANGLE_X_LEFT
);

1748 
°rög_©å
->
mb_y
 = 
	`H264_MIN
(°rög_©å->mb_y, 
ícode_c⁄åﬁ
->
i_mb_y
-1-
CHAR_RECTANGLE_Y_LEFT
);

1749 
°rög_©å
->
mb_height
 = 0;

1750 
°rög_©å
->
°rög_Àn
 = 
	`°æí
(
osd_ru¬ög_∑øm
->
«me
);

1751 if(
°rög_©å
->
°rög_Àn
>0){

1752 
°rög_©å
->
°rög_Àn
 = 
	`H264_MIN
(°rög_©å->°rög_Àn, 
NAME_LEN
);

1753 
°rög_©å
->
°rög
 = 
osd_ru¬ög_∑øm
->
«me
;

1754 
°rög_©å
->
mb_width
 = ((°rög_©å->
°rög_Àn
+1)>>1) - 1;

1756 
°rög_©å
->
°rög_Àn
 = 0;

1759 if(
°rög_©å
->
°rög
 !
NULL
){

1760 
°rög_©å
->
°rög
 = 
NULL
;

1762 
°rög_©å
->
°rög_Àn
 = 0;

1765 
mask_©å
 = &
ígöe
->mask_©å[
SHELTER1_RECTANGLE_ID
-1];

1766 if((
osd_ru¬ög_∑øm
->
shñãr1_©åib
&
OSD_ATTR_DISPLAY_ON
) == OSD_ATTR_DISPLAY_ON){

1767 
mask_©å
->
√ed_upd©e_Êag
 = 1;

1768 
mask_©å
->
mb_x
 = 
osd_ru¬ög_∑øm
->
shñãr1_pos_x
>>4;

1769 
mask_©å
->
mb_y
 = 
osd_ru¬ög_∑øm
->
shñãr1_pos_y
>>4;

1770 
mask_©å
->
mb_x
 = 
	`H264_MIN
(mask_©å->mb_x, 
ícode_c⁄åﬁ
->
i_mb_x
-1);

1771 
mask_©å
->
mb_y
 = 
	`H264_MIN
(mask_©å->mb_y, 
ícode_c⁄åﬁ
->
i_mb_y
-1);

1772 
mask_©å
->
mask_width
 = 
osd_ru¬ög_∑øm
->
shñãr1_width
>>4;

1773 
mask_©å
->
mask_height
 = 
osd_ru¬ög_∑øm
->
shñãr1_height
>>4;

1774 
mask_©å
->
mask_width
 = 
	`H264_MIN
(mask_©å->mask_width, 
ícode_c⁄åﬁ
->
i_mb_x
-mask_©å->
mb_x
);

1775 
mask_©å
->
mask_height
 = 
	`H264_MIN
(mask_©å->mask_height, 
ícode_c⁄åﬁ
->
i_mb_y
-mask_©å->
mb_y
);

1776 
mask_©å
->
u_vÆue
 = 0x80;

1777 
mask_©å
->
v_vÆue
 = 0x80;

1778 
mask_©å
->
y_vÆue
 = 0x10;

1779 
mask_©å
->
is_di•œy
 = 1;

1781 
mask_©å
->
is_di•œy
 = 0;

1784 
mask_©å
 = &
ígöe
->mask_©å[
SHELTER2_RECTANGLE_ID
-1];

1785 if((
osd_ru¬ög_∑øm
->
shñãr2_©åib
&
OSD_ATTR_DISPLAY_ON
) == OSD_ATTR_DISPLAY_ON){

1786 
mask_©å
->
√ed_upd©e_Êag
 = 1;

1787 
mask_©å
->
mb_x
 = 
osd_ru¬ög_∑øm
->
shñãr2_pos_x
>>4;

1788 
mask_©å
->
mb_y
 = 
osd_ru¬ög_∑øm
->
shñãr2_pos_y
>>4;

1789 
mask_©å
->
mb_x
 = 
	`H264_MIN
(mask_©å->mb_x, 
ícode_c⁄åﬁ
->
i_mb_x
-1);

1790 
mask_©å
->
mb_y
 = 
	`H264_MIN
(mask_©å->mb_y, 
ícode_c⁄åﬁ
->
i_mb_y
-1);

1791 
mask_©å
->
mask_width
 = 
osd_ru¬ög_∑øm
->
shñãr2_width
>>4;

1792 
mask_©å
->
mask_height
 = 
osd_ru¬ög_∑øm
->
shñãr2_height
>>4;

1793 
mask_©å
->
mask_width
 = 
	`H264_MIN
(mask_©å->mask_width, 
ícode_c⁄åﬁ
->
i_mb_x
-mask_©å->
mb_x
);

1794 
mask_©å
->
mask_height
 = 
	`H264_MIN
(mask_©å->mask_height, 
ícode_c⁄åﬁ
->
i_mb_y
-mask_©å->
mb_y
);

1795 
mask_©å
->
u_vÆue
 = 0x80;

1796 
mask_©å
->
v_vÆue
 = 0x80;

1797 
mask_©å
->
y_vÆue
 = 0x10;

1798 
mask_©å
->
is_di•œy
 = 1;

1800 
mask_©å
->
is_di•œy
 = 0;

1803 
°rög_©å
 = &
ígöe
->°rög_©å[
SUBTILTE1_RECTANGLE_ID
-1];

1804 if((
osd_ru¬ög_∑øm
->
subtôÀ1_©åib
&
OSD_ATTR_DISPLAY_ON
) == OSD_ATTR_DISPLAY_ON){

1805 
°rög_©å
->
√ed_upd©e_Êag
 = 1;

1806 if(
ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

1807 
°rög_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_24X24
;

1809 
°rög_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_12X12
;

1811 if(
ma°î_¶Ÿ
) {

1812 
ícode_ch™
->
ícode_¥›îty
.ícode_¥›îty.
ícodeSize
){

1813 
TW_VIDEO_SIZE_D1
:

1814 
TW_VIDEO_SIZE_HALF_D1
:

1815 
TW_VIDEO_SIZE_USER
:

1816 
timî_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_24X24
;

1819 
TW_VIDEO_SIZE_CIF
:

1820 
timî_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_12X12
;

1824 
timî_©å
->
mb_x
 = 0;

1825 
timî_©å
->
mb_y
 = 0;

1826 
timî_©å
->
timî_di•œy_mode
 = 
DONT_DISPLAY_TIMER
;

1828 
°rög_©å
->
mb_x
 = 
osd_ru¬ög_∑øm
->
subtôÀ1_pos_x
>>4;

1829 
°rög_©å
->
mb_y
 = 
osd_ru¬ög_∑øm
->
subtôÀ1_pos_y
>>4;

1830 
°rög_©å
->
mb_x
 = 
	`H264_MIN
(°rög_©å->mb_x, 
ícode_c⁄åﬁ
->
i_mb_x
-1-
CHAR_RECTANGLE_X_LEFT
);

1831 
°rög_©å
->
mb_y
 = 
	`H264_MIN
(°rög_©å->mb_y, 
ícode_c⁄åﬁ
->
i_mb_y
-1-
CHAR_RECTANGLE_Y_LEFT
);

1832 
°rög_©å
->
mb_height
 = 0;

1833 
°rög_©å
->
°rög_Àn
 = 
	`°æí
(
osd_ru¬ög_∑øm
->
subtôÀ1
);

1834 if(
°rög_©å
->
°rög_Àn
 > 0){

1835 
°rög_©å
->
°rög_Àn
 = 
	`H264_MIN
(°rög_©å->°rög_Àn, 
SUB_LEN
);

1836 
°rög_©å
->
°rög
 = 
osd_ru¬ög_∑øm
->
subtôÀ1
;

1837 
°rög_©å
->
mb_width
 = ((°rög_©å->
°rög_Àn
+1)>>1) - 1;

1839 
°rög_©å
->
°rög_Àn
 = 0;

1842 if(
°rög_©å
->
°rög
 !
NULL
){

1843 
°rög_©å
->
°rög
 = 
NULL
;

1845 
°rög_©å
->
°rög_Àn
 = 0;

1848 
°rög_©å
 = &
ígöe
->°rög_©å[
SUBTILTE2_RECTANGLE_ID
-1];

1849 if((
osd_ru¬ög_∑øm
->
subtôÀ2_©åib
&
OSD_ATTR_DISPLAY_ON
) == OSD_ATTR_DISPLAY_ON){

1850 
°rög_©å
->
√ed_upd©e_Êag
 = 1;

1851 if(
ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

1852 
°rög_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_24X24
;

1854 
°rög_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_12X12
;

1856 if(
ma°î_¶Ÿ
) {

1857 
ícode_ch™
->
ícode_¥›îty
.ícode_¥›îty.
ícodeSize
){

1858 
TW_VIDEO_SIZE_D1
:

1859 
TW_VIDEO_SIZE_HALF_D1
:

1860 
TW_VIDEO_SIZE_USER
:

1861 
timî_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_24X24
;

1864 
TW_VIDEO_SIZE_CIF
:

1865 
timî_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_12X12
;

1869 
timî_©å
->
mb_x
 = 0;

1870 
timî_©å
->
mb_y
 = 0;

1871 
timî_©å
->
timî_di•œy_mode
 = 
DONT_DISPLAY_TIMER
;

1873 
°rög_©å
->
mb_x
 = 
osd_ru¬ög_∑øm
->
subtôÀ2_pos_x
>>4;

1874 
°rög_©å
->
mb_y
 = 
osd_ru¬ög_∑øm
->
subtôÀ2_pos_y
>>4;

1875 
°rög_©å
->
mb_x
 = 
	`H264_MIN
(°rög_©å->mb_x, 
ícode_c⁄åﬁ
->
i_mb_x
-1-
CHAR_RECTANGLE_X_LEFT
);

1876 
°rög_©å
->
mb_y
 = 
	`H264_MIN
(°rög_©å->mb_y, 
ícode_c⁄åﬁ
->
i_mb_y
-1-
CHAR_RECTANGLE_Y_LEFT
);

1877 
°rög_©å
->
mb_height
 = 0;

1878 
°rög_©å
->
°rög_Àn
 = 
	`°æí
(
osd_ru¬ög_∑øm
->
subtôÀ2
);

1879 if(
°rög_©å
->
°rög_Àn
 > 0){

1880 
°rög_©å
->
°rög_Àn
 = 
	`H264_MIN
(°rög_©å->°rög_Àn, 
SUB_LEN
);

1881 
°rög_©å
->
°rög
 = 
osd_ru¬ög_∑øm
->
subtôÀ2
;

1882 
°rög_©å
->
mb_width
 = ((°rög_©å->
°rög_Àn
+1)>>1) - 1;

1884 
°rög_©å
->
°rög_Àn
 = 0;

1887 
°rög_©å
->
°rög_Àn
 = 0;

1888 if(
°rög_©å
->
°rög
 !
NULL
){

1889 
°rög_©å
->
°rög
 = 
NULL
;

1891 
°rög_©å
->
°rög_Àn
 = 0;

1894 
°rög_©å
 = &
ígöe
->°rög_©å[
SUBTILTE3_RECTANGLE_ID
-1];

1895 if((
osd_ru¬ög_∑øm
->
subtôÀ3_©åib
&
OSD_ATTR_DISPLAY_ON
) == OSD_ATTR_DISPLAY_ON){

1896 
°rög_©å
->
√ed_upd©e_Êag
 = 1;

1897 if(
ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

1898 
°rög_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_24X24
;

1900 
°rög_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_12X12
;

1902 if(
ma°î_¶Ÿ
) {

1903 
ícode_ch™
->
ícode_¥›îty
.ícode_¥›îty.
ícodeSize
){

1904 
TW_VIDEO_SIZE_D1
:

1905 
TW_VIDEO_SIZE_HALF_D1
:

1906 
TW_VIDEO_SIZE_USER
:

1907 
timî_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_24X24
;

1910 
TW_VIDEO_SIZE_CIF
:

1911 
timî_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_12X12
;

1915 
timî_©å
->
mb_x
 = 0;

1916 
timî_©å
->
mb_y
 = 0;

1917 
timî_©å
->
timî_di•œy_mode
 = 
DONT_DISPLAY_TIMER
;

1919 
°rög_©å
->
mb_x
 = 
osd_ru¬ög_∑øm
->
subtôÀ3_pos_x
>>4;

1920 
°rög_©å
->
mb_y
 = 
osd_ru¬ög_∑øm
->
subtôÀ3_pos_y
>>4;

1921 
°rög_©å
->
mb_x
 = 
	`H264_MIN
(°rög_©å->mb_x, 
ícode_c⁄åﬁ
->
i_mb_x
-1-
CHAR_RECTANGLE_X_LEFT
);

1922 
°rög_©å
->
mb_y
 = 
	`H264_MIN
(°rög_©å->mb_y, 
ícode_c⁄åﬁ
->
i_mb_y
-1-
CHAR_RECTANGLE_Y_LEFT
);

1923 
°rög_©å
->
mb_height
 = 0;

1924 
°rög_©å
->
°rög_Àn
 = 
	`°æí
(
osd_ru¬ög_∑øm
->
subtôÀ3
);

1925 if(
°rög_©å
->
°rög_Àn
 > 0){

1926 
°rög_©å
->
°rög_Àn
 = 
	`H264_MIN
(°rög_©å->°rög_Àn, 
SUB_LEN
);

1927 
°rög_©å
->
°rög
 = 
osd_ru¬ög_∑øm
->
subtôÀ3
;

1928 
°rög_©å
->
mb_width
 = ((°rög_©å->
°rög_Àn
+1)>>1) - 1;

1930 
°rög_©å
->
°rög_Àn
 = 0;

1933 
°rög_©å
->
°rög_Àn
 = 0;

1934 if(
°rög_©å
->
°rög
 !
NULL
){

1935 
°rög_©å
->
°rög
 = 
NULL
;

1937 
°rög_©å
->
°rög_Àn
 = 0;

1940 
°rög_©å
 = &
ígöe
->°rög_©å[
SUBTILTE4_RECTANGLE_ID
-1];

1941 if((
osd_ru¬ög_∑øm
->
subtôÀ4_©åib
&
OSD_ATTR_DISPLAY_ON
) == OSD_ATTR_DISPLAY_ON){

1942 
°rög_©å
->
√ed_upd©e_Êag
 = 1;

1943 if(
ícode_ch™
->
ty≥
 =
TW_MASTER_BITSTREAM
){

1944 
°rög_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_24X24
;

1946 
°rög_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_12X12
;

1948 if(
ma°î_¶Ÿ
) {

1949 
ícode_ch™
->
ícode_¥›îty
.ícode_¥›îty.
ícodeSize
){

1950 
TW_VIDEO_SIZE_D1
:

1951 
TW_VIDEO_SIZE_HALF_D1
:

1952 
TW_VIDEO_SIZE_USER
:

1953 
timî_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_24X24
;

1956 
TW_VIDEO_SIZE_CIF
:

1957 
timî_©å
->
f⁄t_ty≥
 = 
FONT_TYPE_12X12
;

1961 
timî_©å
->
mb_x
 = 0;

1962 
timî_©å
->
mb_y
 = 0;

1963 
timî_©å
->
timî_di•œy_mode
 = 
DONT_DISPLAY_TIMER
;

1965 
°rög_©å
->
mb_x
 = 
osd_ru¬ög_∑øm
->
subtôÀ4_pos_x
>>4;

1966 
°rög_©å
->
mb_y
 = 
osd_ru¬ög_∑øm
->
subtôÀ4_pos_y
>>4;

1967 
°rög_©å
->
mb_x
 = 
	`H264_MIN
(°rög_©å->mb_x, 
ícode_c⁄åﬁ
->
i_mb_x
-1-
CHAR_RECTANGLE_X_LEFT
);

1968 
°rög_©å
->
mb_y
 = 
	`H264_MIN
(°rög_©å->mb_y, 
ícode_c⁄åﬁ
->
i_mb_y
-1-
CHAR_RECTANGLE_Y_LEFT
);

1969 
°rög_©å
->
mb_height
 = 0;

1970 
°rög_©å
->
°rög_Àn
 = 
	`°æí
(
osd_ru¬ög_∑øm
->
subtôÀ4
);

1971 if(
°rög_©å
->
°rög_Àn
 > 0){

1972 
°rög_©å
->
°rög_Àn
 = 
	`H264_MIN
(°rög_©å->°rög_Àn, 
SUB_LEN
);

1973 
°rög_©å
->
°rög
 = 
osd_ru¬ög_∑øm
->
subtôÀ4
;

1974 
°rög_©å
->
mb_width
 = ((°rög_©å->
°rög_Àn
+1)>>1) - 1;

1976 
°rög_©å
->
°rög_Àn
 = 0;

1979 
°rög_©å
->
°rög_Àn
 = 0;

1980 if(
°rög_©å
->
°rög
 !
NULL
){

1981 
°rög_©å
->
°rög
 = 
NULL
;

1983 
°rög_©å
->
°rög_Àn
 = 0;

1986 
	`•ö_u∆ock_úqª°‹e
(&
ígöe
->
osd_lock
, 
Êags
);

1987 #ifdef 
TESTING_TIMESTAMP


1988 
ígöe
->
›
->
	`¸óã_timî_ª˘™gÀ
”ngöe, 
time°amp
, 
ícode_±r
, 
ªf_±r
, 
Âs
, 
Âm
);

1990 
ígöe
->
›
->
	`¸óã_timî_ª˘™gÀ
(engine);

1992 
ígöe
->
›
->
	`¸óã_ch¨_ª˘™gÀ
”ngöe, 
CHAN_NAME_RECTANGLE_ID
);

1993 
ígöe
->
›
->
	`¸óã_mask_ª˘™gÀ
”ngöe, 
SHELTER1_RECTANGLE_ID
);

1994 
ígöe
->
›
->
	`¸óã_mask_ª˘™gÀ
”ngöe, 
SHELTER2_RECTANGLE_ID
);

1995 
ígöe
->
›
->
	`¸óã_ch¨_ª˘™gÀ
”ngöe, 
SUBTILTE1_RECTANGLE_ID
);

1996 
ígöe
->
›
->
	`¸óã_ch¨_ª˘™gÀ
”ngöe, 
SUBTILTE2_RECTANGLE_ID
);

1997 
ígöe
->
›
->
	`¸óã_ch¨_ª˘™gÀ
”ngöe, 
SUBTILTE3_RECTANGLE_ID
);

1998 
ígöe
->
›
->
	`¸óã_ch¨_ª˘™gÀ
”ngöe, 
SUBTILTE4_RECTANGLE_ID
);

1999 
ígöe
->
›
->
	`upd©e_Âga_osd_ícode
(engine);

2001 
	}
}

2003 
	$osd_ch™_ígöe_˛o£_ª˘™gÀs
(
osd_ch™_ígöe_t
 *
ígöe
)

2005 
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
;

2006 
i
;

2008 
ª˘™gÀ
 = 
ígöe
->rectangle;

2009 
i
=0; i<
OSD_CHAN_RECTANGLE_NUMBER
; i++){

2010 
ª˘™gÀ
->
›
->
	`˛o£_ª˘™gÀ
(rectangle);

2011 
ª˘™gÀ
++;

2014 
	}
}

2016 
	$osd_ch™_ígöe_upd©e_ícode_osd_¥›îty
(
osd_ch™_ígöe_t
 *
ígöe
, 
TW_OSD_PARAM
 *
osd_c⁄fig_∑øm
)

2018 
TW_OSD_PARAM
 *
osd_ru¬ög_∑øm
 = &
ígöe
->osd_running_param;

2019 if(
osd_c⁄fig_∑øm
 !
NULL
){

2020 
Êags
;

2021 
	`•ö_lock_úqßve
(&
ígöe
->
osd_lock
, 
Êags
);

2022 
	`mem˝y
((*)
osd_ru¬ög_∑øm
, (*)
osd_c⁄fig_∑øm
, (
TW_OSD_PARAM
));

2023 
	`©omic_£t
(&
ígöe
->
sync_osd_∑øm
, 1);

2024 
	`•ö_u∆ock_úqª°‹e
(&
ígöe
->
osd_lock
, 
Êags
);

2026 
	}
}

2028 
	$osd_ch™_ígöe_upd©e_Âga_osd_ícode
(
osd_ch™_ígöe_t
 *
ígöe
)

2030 
dvm_chù_t
 *
chù
;

2032 if(
	`©omic_ªad
(&
ígöe
->
osd_is_w‹kög
)){

2035 
chù
 = 
ígöe
->
ícode_ch™
->chip;

2036 
	`©omic_öc
(&
ígöe
->
osd_is_w‹kög
);

2037 
	`öô_com∂ëi⁄
(&
ígöe
->
waô_d⁄e
);

2038 
ígöe
->
©åibuã_ªgs
.
ch™_ª˘_©å_ªgs_group_›
->
	`upd©e_ch™_ª˘™gÀ_©å_ªgs
(&ígöe->©åibuã_ªgs, 
chù
);

2039 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
OSD_ATTRI_BASE_REG
, 
OSD_ATTR_REG_BASE_ADDR
);

2040 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
OSD_RECTANGLE_EN_REG
, 0xff);

2041 
chù
->
io_›
->
	`chù_wrôe32
(chù, 
OSD_ATTRI_UPDATE_REG
, 
ígöe
->
ícode_ch™
->
phy_¶Ÿ_id
);

2042 
	}
}

2044 
	$osd_ch™_ígöe_gë_ª˘™gÀ
(
osd_ch™_ígöe_t
 *
ígöe
, 
osd_ª˘™gÀ_íåy_t
 **
ª˘™gÀ
, 
ty≥
, 
ty≥_id
)

2046 *
ª˘™gÀ
 = 
NULL
;

2047 if(
ty≥_id
>
SHELTER2_RECTANGLE_ID
 ||Åype_id<0){

2050 
ígöe
->
ch™_ª˘™gÀ_u£d_m≠_èbÀ
 |1<<
ty≥_id
;

2051 *
ª˘™gÀ
 = &
ígöe
->ª˘™gÀ[
ty≥_id
];

2052 (*
ª˘™gÀ
)->
ª˘™gÀ_mode
 = 
ty≥
;

2053 
ty≥
){

2054 
TIMER_RECTANGLE_ENCODE_OSD
:

2055 (*
ª˘™gÀ
)->
¥iv©e_©åi
.
time_ª˘™gÀ_©åibuã
 = &
ígöe
->
timî_©å
;

2057 
CHAR_RECTANGLE_ENCODE_OSD
:

2058 (*
ª˘™gÀ
)->
¥iv©e_©åi
.
°rög_ª˘™gÀ_©åibuã
 = &
ígöe
->
°rög_©å
[
ty≥_id
-1];

2060 
MASK_RECTANGLE_ENCODE_OSD
:

2061 (*
ª˘™gÀ
)->
¥iv©e_©åi
.
mask_ª˘™gÀ_©åibuã
 = &
ígöe
->
mask_©å
[
ty≥_id
-1];

2064 
ígöe
->
ch™_ª˘™gÀ_u£d_m≠_èbÀ
 &~(1<<
ty≥_id
);

2065 (*
ª˘™gÀ
)->
¥iv©e_©åi
.
em±y_ª˘™gÀ_©åibuã
 = 
NULL
;

2066 
	`¥ötk
("rectangle'sÅype isn't know\n");

2069 
	}
}

2071 
	$osd_ch™_ígöe_put_ª˘™gÀ
(
osd_ch™_ígöe_t
 *
ígöe
, 
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
)

2073 
ícode_osd_timî_©å_t
 *
timî_©å
;

2074 
ícode_osd_°rög_©å_t
 *
°rög_©å
;

2075 
ícode_osd_mask_©å_t
 *
mask_©å
;

2077 if(
ª˘™gÀ
->
ª˘™gÀ_id
 !
INVALID_OSD_VALUE_ID
){

2078 
ª˘™gÀ
->
ª˘™gÀ_mode
){

2079 
TIMER_RECTANGLE_ENCODE_OSD
:

2080 
timî_©å
 = 
ª˘™gÀ
->
¥iv©e_©åi
.
time_ª˘™gÀ_©åibuã
;

2081 if(
timî_©å
 !
NULL
){

2082 
timî_©å
->
›
->
	`ª£t
—imî_©å, 
ígöe
->
ícode_ch™
->
chù
->
chù_id
,Éngöe->ícode_ch™->
logic_ch™_id
);

2085 
CHAR_RECTANGLE_ENCODE_OSD
:

2086 
°rög_©å
 = 
ª˘™gÀ
->
¥iv©e_©åi
.
°rög_ª˘™gÀ_©åibuã
;

2087 if(
°rög_©å
 !
NULL
){

2088 
°rög_©å
->
›
->
	`ª£t
(string_attr);

2091 
MASK_RECTANGLE_ENCODE_OSD
:

2092 
mask_©å
 = 
ª˘™gÀ
->
¥iv©e_©åi
.
mask_ª˘™gÀ_©åibuã
;

2093 if(
mask_©å
 !
NULL
){

2094 
mask_©å
->
›
->
	`ª£t
(mask_attr);

2098 
	`¥ötk
("%s.%d:Çÿsuµ‹àmodê%d\n", 
__FUNCTION__
, 
__LINE__
, 
ª˘™gÀ
->
ª˘™gÀ_mode
);

2101 
ígöe
->
ch™_ª˘™gÀ_u£d_m≠_èbÀ
 &~(1<<
ª˘™gÀ
->
ª˘™gÀ_id
);

2103 
	}
}

2105 
osd_ch™_ígöe_›î©i⁄
 
	gosd_ch™_ígöe_›
 =

2107 .
¸óã_ch¨_ª˘™gÀ
 = 
osd_ch™_ígöe_¸óã_ch¨_ª˘™gÀ
,

2108 .
	g¸óã_mask_ª˘™gÀ
 = 
osd_ch™_ígöe_¸óã_mask_ª˘™gÀ
,

2109 #ifdef 
TESTING_TIMESTAMP


2110 .
	g¸óã_timî_ª˘™gÀ
 = 
osd_ch™_ígöe_¸óã_timî_ª˘™gÀ_ã°ög_time°amp
,

2111 .
	g¸óã_ª˘™gÀ
 = 
osd_ch™_ígöe_¸óã_ª˘™gÀ_ã°ög_time°amp
,

2113 .
	g¸óã_timî_ª˘™gÀ
 = 
osd_ch™_ígöe_¸óã_timî_ª˘™gÀ
,

2114 .
	g¸óã_ª˘™gÀ
 = 
osd_ch™_ígöe_¸óã_ª˘™gÀ
,

2116 .
	g˛o£_ch™_ígöe_ª˘™gÀs
 = 
osd_ch™_ígöe_˛o£_ª˘™gÀs
,

2117 .
	gupd©e_ícode_osd_¥›îty
 = 
osd_ch™_ígöe_upd©e_ícode_osd_¥›îty
,

2119 .
	gupd©e_Âga_osd_ícode
 = 
osd_ch™_ígöe_upd©e_Âga_osd_ícode
,

2120 .
	ggë_ª˘™gÀ
 = 
osd_ch™_ígöe_gë_ª˘™gÀ
,

2121 .
	gput_ª˘™gÀ
 = 
osd_ch™_ígöe_put_ª˘™gÀ
,

2125 
	$˛o£_ícode_osd_ch™_ígöe
(
osd_ch™_ígöe_t
 *
ígöe
)

2127 if(
	`©omic_ªad
(&
ígöe
->
osd_is_w‹kög
) == 0){

2128 
	`com∂ëe_Æl
(&
ígöe
->
waô_d⁄e
);

2130 
	`waô_f‹_com∂ëi⁄
(&
ígöe
->
waô_d⁄e
);

2131 
ígöe
->
›
->
	`˛o£_ch™_ígöe_ª˘™gÀs
(engine);

2132 
	}
}

2134 
	$ªmove_ícode_osd_ch™_ígöe
(
osd_ch™_ígöe_t
 *
ígöe
)

2136 
	`˛o£_ícode_osd_ch™_ígöe
(
ígöe
);

2137 
	`ªmove_osd_ícode_mb_poﬁ
(&
ígöe
->
osd_ch™_poﬁ
);

2138 
	}
}

2140 
	$osd_ã°ög_öô
(
osd_ch™_ígöe_t
 *
ígöe
)

2142 
TW_OSD_PARAM
 *
osd_c⁄fig_∑øm
, 
c⁄fig_∑øm
;

2144 
osd_c⁄fig_∑øm
 = &
c⁄fig_∑øm
;

2145 
	`mem£t
((*)
osd_c⁄fig_∑øm
, 0, (
TW_OSD_PARAM
));

2148 
	`•rötf
(
osd_c⁄fig_∑øm
->
«me
, "Video chanÇame");

2149 
	`¥ötk
("%s,Üí=%d\n", 
osd_c⁄fig_∑øm
->
«me
, 
	`°æí
(osd_config_param->name));

2150 
osd_c⁄fig_∑øm
->
«me_©åib
 = 
OSD_ATTR_DISPLAY_ON
;

2151 
osd_c⁄fig_∑øm
->
«me_pos_x
 = 50;

2152 
osd_c⁄fig_∑øm
->
«me_pos_y
 = 50;

2154 
osd_c⁄fig_∑øm
->
time_©åib
 = 
OSD_ATTR_DISPLAY_ON
;

2155 
osd_c⁄fig_∑øm
->
time_pos_x
 = 0;

2156 
osd_c⁄fig_∑øm
->
time_pos_y
 = 0;

2158 
osd_c⁄fig_∑øm
->
shñãr1_©åib
 = 
OSD_ATTR_DISPLAY_ON
;

2159 
osd_c⁄fig_∑øm
->
shñãr1_pos_x
 = 0;

2160 
osd_c⁄fig_∑øm
->
shñãr1_pos_y
 = 50;

2161 
osd_c⁄fig_∑øm
->
shñãr1_width
 = 20;

2162 
osd_c⁄fig_∑øm
->
shñãr1_height
 = 20;

2163 
osd_c⁄fig_∑øm
->
shñãr2_©åib
 = 
OSD_ATTR_DISPLAY_ON
;

2164 
osd_c⁄fig_∑øm
->
shñãr2_pos_x
 = 0;

2165 
osd_c⁄fig_∑øm
->
shñãr2_pos_y
 = 100;

2166 
osd_c⁄fig_∑øm
->
shñãr2_width
 = 50;

2167 
osd_c⁄fig_∑øm
->
shñãr2_height
 = 50;

2168 
	`•rötf
(
osd_c⁄fig_∑øm
->
subtôÀ1
, "subtitle1 windowÅest");

2169 
	`¥ötk
("%s,Üí=%d\n", 
osd_c⁄fig_∑øm
->
subtôÀ1
, 
	`°æí
(osd_config_param->subtitle1));

2170 
osd_c⁄fig_∑øm
->
subtôÀ1_©åib
 = 
OSD_ATTR_DISPLAY_ON
;

2171 
osd_c⁄fig_∑øm
->
subtôÀ1_pos_x
 = 100;

2172 
osd_c⁄fig_∑øm
->
subtôÀ1_pos_y
 = 100;

2173 
	`•rötf
(
osd_c⁄fig_∑øm
->
subtôÀ2
, "subtitle2 windowÅest");

2174 
	`¥ötk
("%s,Üí=%d\n", 
osd_c⁄fig_∑øm
->
subtôÀ2
, 
	`°æí
(osd_config_param->subtitle2));

2175 
osd_c⁄fig_∑øm
->
subtôÀ2_©åib
 = 
OSD_ATTR_DISPLAY_ON
;

2176 
osd_c⁄fig_∑øm
->
subtôÀ2_pos_x
 = 150;

2177 
osd_c⁄fig_∑øm
->
subtôÀ2_pos_y
 = 150;

2178 
	`•rötf
(
osd_c⁄fig_∑øm
->
subtôÀ3
, "subtitle3 windowÅest");

2179 
	`¥ötk
("%s,Üí=%d\n", 
osd_c⁄fig_∑øm
->
subtôÀ3
, 
	`°æí
(osd_config_param->subtitle3));

2180 
osd_c⁄fig_∑øm
->
subtôÀ3_©åib
 = 
OSD_ATTR_DISPLAY_ON
;

2181 
osd_c⁄fig_∑øm
->
subtôÀ3_pos_x
 = 200;

2182 
osd_c⁄fig_∑øm
->
subtôÀ3_pos_y
 = 200;

2183 
	`•rötf
(
osd_c⁄fig_∑øm
->
subtôÀ4
, "subtitle4 windowÅest");

2184 
	`¥ötk
("%s,Üí=%d\n", 
osd_c⁄fig_∑øm
->
subtôÀ4
, 
	`°æí
(osd_config_param->subtitle4));

2185 
osd_c⁄fig_∑øm
->
subtôÀ4_©åib
 = 
OSD_ATTR_DISPLAY_ON
;

2186 
osd_c⁄fig_∑øm
->
subtôÀ4_pos_x
 = 0;

2187 
osd_c⁄fig_∑øm
->
subtôÀ4_pos_y
 = 240;

2189 
ígöe
->
›
->
	`upd©e_ícode_osd_¥›îty
”ngöe, 
osd_c⁄fig_∑øm
);

2190 
	}
}

2192 
	$öô_ícode_osd_ch™_ígöe
(
osd_ch™_ígöe_t
 *
ígöe
, 
ma°îOrSub
)

2194 
tw_h264_logic_ícode_ch™_t
 *
ícode_ch™
;

2195 
TW_OSD_PARAM
 *
osd_ru¬ög_∑øm
;

2196 
dvm_chù_t
 *
chù
;

2197 
chù_drivî_t
 *
chù_drivî
;

2198 
tw_video_bus_t
 *
video_bus
;

2199 
tw5864_vd_¸oss_bus_t
 *
vd_bus
;

2200 
tw_h264_phy_video_¶Ÿ_t
 *
phy_video_¶Ÿ
;

2201 
DVMNVS_CHIP_VIDEO_ENCODE_CAPABILITY
 *
video_ícode_ˇp
;

2202 
osd_©åibuã_ªgs_t
 *
©å_ªgs
;

2203 
osd_ª˘™gÀ_íåy_t
 *
ª˘™gÀ
;

2204 
osd_ª˘™gÀ_d¥am_tcb_t
 *
osd_d¥am_ªq
;

2205 
ícode_osd_°rög_©å_t
 *
°rög_©å
;

2206 
ícode_osd_mask_©å_t
 *
mask_©å
;

2207 
i
, 
phy_¶Ÿ_id
, 
osd_¶Ÿ_id
, 
ªt
 = -1;

2209 
ícode_ch™
 = 
	`to_gë_tw_h264_ícode_ch™_wôh_osd_ígöe
(
ígöe
);

2210 
phy_¶Ÿ_id
 = 
ícode_ch™
->phy_slot_id;

2211 
chù
 = 
ícode_ch™
->chip;

2212 
osd_ru¬ög_∑øm
 = &
ígöe
->osd_running_param;

2214 
chù_drivî
 = 
chù
->chip_driver;

2215 
video_bus
 = &
chù_drivî
->video_bus;

2216 
vd_bus
 = 
video_bus
->
vd_bus_drivî
;

2217 
video_ícode_ˇp
 = 
chù
->video_encode_cap;

2218 
	`•ö_lock_öô
(&
ígöe
->
osd_lock
);

2219 
	`©omic_£t
(&
ígöe
->
osd_is_w‹kög
, 0);

2220 
	`öô_com∂ëi⁄
(&
ígöe
->
waô_d⁄e
);

2221 
ígöe
->
ícode_ch™
 =Éncode_chan;

2222 
	`mem£t
((*)
osd_ru¬ög_∑øm
, 0, (
TW_OSD_PARAM
));

2223 
	`©omic_£t
(&
ígöe
->
sync_osd_∑øm
, 1);

2224 
ígöe
->
ch™_ª˘™gÀ_u£d_m≠_èbÀ
 = 0;

2225 
ígöe
->
ch™_d©a_ba£
 = 
	`gë_osd_ch™_ba£
(
phy_¶Ÿ_id
);

2226 
ígöe
->
ma°îOrSub
 = masterOrSub;

2228 
vd_bus
->
›
->
	`gë_phy_video_¶Ÿ_by_phy_id
(vd_bus, 
phy_¶Ÿ_id
, &
phy_video_¶Ÿ
);

2229 
osd_¶Ÿ_id
 = 
	`gë_phy_¶Ÿ_id_by_osd_ch™_ba£
(
vd_bus
, 
ígöe
->
ch™_d©a_ba£
, 
phy_¶Ÿ_id
, 
video_ícode_ˇp
->
ddr_m≠_mode
);

2230 
vd_bus
->
›
->
	`gë_phy_video_¶Ÿ_by_phy_id
(vd_bus, 
osd_¶Ÿ_id
, &
phy_video_¶Ÿ
);

2231 
ígöe
->
videoSizeMode
 = 
phy_video_¶Ÿ
->
video_size
;

2232 
ªt
 = 
	`öô_osd_ícode_mb_poﬁ
(
ígöe
, 
chù
->
chù_id
);

2233 if(
ªt
 < 0){

2234  
ªt
;

2237 
ígöe
->
›
 = &
osd_ch™_ígöe_›
;

2238 
ígöe
->
©åibuã_ªgs
.
ch™_ª˘_©å_ªgs_group_›
 = &
osd_©åibuã_ªgs_group_›
;

2239 
ígöe
->
©åibuã_ªgs
.
ch™_ª˘_©å_ªgs_group_›
->
	`öô_osd_ch™_ª˘™gÀ_©å_ªgs_group
(&engine->attribute_regs);

2240 
i
=0; i<
OSD_CHAN_RECTANGLE_NUMBER
; i++){

2241 
©å_ªgs
 = &
ígöe
->
©åibuã_ªgs
.
©åibuã_ªgs_group
[
i
];

2243 
ª˘™gÀ
 = &
ígöe
->ª˘™gÀ[
i
];

2244 
ª˘™gÀ
->
chù
 = chip;

2245 
ª˘™gÀ
->
osd_ch™_ígöe
 = 
ígöe
;

2246 
ª˘™gÀ
->
mb_ch¨_queue_node
.
›
 = &
tcb_node_queue_›
;

2247 
ª˘™gÀ
->
mb_ch¨_queue_node
.
›
->
	`öô
(&rectangle->mb_char_queue_node);

2248 
ª˘™gÀ
->
ª˘™gÀ_id
 = 
i
;

2249 
ª˘™gÀ
->
ch™_id
 = 
phy_¶Ÿ_id
;

2250 
ª˘™gÀ
->
©å_ªgs
 =áttr_regs;

2251 
ª˘™gÀ
->
›
 = &
osd_ª˘™gÀ_›
;

2252 
osd_d¥am_ªq
 = &
ª˘™gÀ
->osd_dpram_req;

2253 
osd_d¥am_ªq
->
›
 = &
osd_ª˘™gÀ_d¥am_tcb_›
;

2254 
ª˘™gÀ
->
›
->
	`ª£t
(rectangle);

2257 
ígöe
->
timî_©å
.
timî
 = &
osd_timî
;

2258 
ígöe
->
timî_©å
.
›
 = &
osd_timî_©å_›
;

2259 
ígöe
->
timî_©å
.
mb_x
 = 0;

2260 
ígöe
->
timî_©å
.
mb_y
 = 0;

2261 
ígöe
->
timî_©å
.
timî_di•œy_mode
 = 
YEAR_MONTH_DAY_HOUR_MINUTE_SECOND
;

2262 
ígöe
->
timî_©å
.
›
->
	`ª£t
(&ígöe->timî_©å, 
chù
->
chù_id
, 
ícode_ch™
->
logic_ch™_id
);

2263 
°rög_©å
 = 
ígöe
->string_attr;

2264 
mask_©å
 = 
ígöe
->mask_attr;

2265 
i
=0; i<
OSD_CHAN_MAX_STRING_RECTANGLE_NUMBER
; i++){

2266 
°rög_©å
->
›
 = &
osd_°rög_©å_›
;

2267 
mask_©å
->
›
 = &
osd_mask_©å_›
;

2269 
°rög_©å
->
›
->
	`ª£t
(string_attr);

2270 
mask_©å
->
›
->
	`ª£t
(mask_attr);

2271 
°rög_©å
++;

2272 
mask_©å
++;

2275 
	`osd_ã°ög_öô
(
ígöe
);

2276  
ªt
;

2277 
	}
}

	@../../tw5864/tw5864/tw_porting_arm.c

1 
	~<tw5864/dvm_comm⁄.h
>

2 
	~<asm/¨ch/ªgs-timî.h
>

4 
	#TIMER_INVALIDE
 (-1)

	)

5 
	#TIMER_VALIDE
 (1)

	)

9 
__s32
 
	mÊag
;

10 
__u32
 
	mcou¡
;

11 
__u32
 
	m≥rcou¡
;

12 * 
	mc⁄ãxt
;

13 
timîHook
 
	mhook
;

14 }
	tFORTMCB
;

18 
__s32
 
	mÊag
;

19 
__u32
 
	mcou¡
;

20 * 
	mc⁄ãxt
;

21 
timîHook
 
	mhook
;

22 }
	tTMCB
;

24 
Sig«lTimeInô
();

25 
F‹TimeInô
();

26 
GëFªeSögÀFúeTmcb
();

27 
PutFªeSögÀFúeTmcb
(
s32
 
ödex
);

28 
GëFªeF‹FúeF‹Tmcb
();

29 
PutFªeF‹FúeTmcb
(
s32
 
ödex
);

30 
So·TimîInô
();

32 
TMCB
 
	gSögÀFúeQueue
[
MAXSINGLEFIREQUEUENUM
];

33 
FORTMCB
 
	gF‹FúeQueue
[
MAXFORFIREQUEUENUM
];

34 
•ölock_t
 
	gso·timî_lock
;

35 
	gtw_sy°em_tickî
 = 0;

37 
u32
 
	$gë_tw_sy°em_tick
()

39 
timevÆ
 
tv1
;

41 
	`do_gëtimeofday
(&
tv1
);

42 
tw_sy°em_tickî
 = ()
tv1
.
tv_£c
;

43 
tw_sy°em_tickî
 *= 1000;

44 
tw_sy°em_tickî
 +((()
tv1
.
tv_u£c
)/1000);

45  (
u32
)
tw_sy°em_tickî
;

46 
	}
}

49 
	$Sig«lTimeInô
()

51 
i
;

52 
Êags
;

54 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

55 
i
=0; i<
MAXSINGLEFIREQUEUENUM
; i++)

56 
	`PutFªeSögÀFúeTmcb
(
i
);

57 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

58 
	}
}

60 
	$F‹TimeInô
()

62 
i
;

63 
Êags
;

65 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

66 
i
=0; i<
MAXFORFIREQUEUENUM
; i++)

67 
	`PutFªeF‹FúeTmcb
(
i
);

68 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

69 
	}
}

71 
	$GëFªeSögÀFúeTmcb
()

73 
TMCB
 *
±r
;

74 
i
;

76 
±r
 = 
SögÀFúeQueue
;

77 
i
=0; i<
MAXSINGLEFIREQUEUENUM
; i++)

79 if(
±r
->
Êag
 =
TIMER_INVALIDE
)

80  
i
;

81 
±r
++;

83  
GETFREETMCBERROR
;

84 
	}
}

86 
	$PutFªeSögÀFúeTmcb
(
ödex
)

88 
TMCB
 *
±r
;

90 if((
ödex
 >
MAXSINGLEFIREQUEUENUM
) || (index < 0))

92 
±r
 = &
SögÀFúeQueue
[
ödex
];

93 
±r
->
hook
 = (*)0;

94 
±r
->
Êag
 = 
TIMER_INVALIDE
;

95 
±r
->
cou¡
 = 0;

96 
	}
}

98 
	$GëFªeF‹FúeF‹Tmcb
()

100 
FORTMCB
 *
±r
;

101 
i
;

103 
±r
 = 
F‹FúeQueue
;

104 
i
=0; i<
MAXFORFIREQUEUENUM
; i++)

106 if(
±r
->
Êag
 =
TIMER_INVALIDE
)

107  
i
;

108 
±r
++;

110  
GETFREETMCBERROR
;

111 
	}
}

113 
	$PutFªeF‹FúeTmcb
(
ödex
)

115 
FORTMCB
 *
±r
;

117 if((
ödex
 >
MAXSINGLEFIREQUEUENUM
) || (index < 0))

119 
±r
 = &
F‹FúeQueue
[
ödex
];

120 
±r
->
hook
 = (*)0;

121 
±r
->
Êag
 = 
TIMER_INVALIDE
;

122 
±r
->
cou¡
 = 0;

123 
±r
->
≥rcou¡
 = 0;

124 
	}
}

126 
	$TigîSögÀFúeTimî
()

128 
TMCB
 *
±r
;

129 
i
;

131 
±r
 = 
SögÀFúeQueue
;

132 
i
=0; i<
MAXSINGLEFIREQUEUENUM
; i++)

134 if(
±r
->
Êag
 =
TIMER_VALIDE
)

136 if(
±r
->
hook
 != (*)0)

138 if(
±r
->
cou¡
 > 0)

139 
±r
->
cou¡
--;

140 if(
±r
->
cou¡
 == 0)

142 
±r
->
	`hook
’å->
c⁄ãxt
);

143 
	`PutFªeSögÀFúeTmcb
(
i
);

147 
	`PutFªeSögÀFúeTmcb
(
i
);

149 
±r
++;

151 
	}
}

153 
	$TigîF‹FúeTimî
()

155 
FORTMCB
 *
±r
;

156 
i
;

158 
±r
 = 
F‹FúeQueue
;

159 
i
=0; i<
MAXFORFIREQUEUENUM
; i++)

161 if(
±r
->
Êag
 =
TIMER_VALIDE
)

163 if(
±r
->
hook
 != (*)0)

165 if(
±r
->
cou¡
 > 0)

166 
±r
->
cou¡
--;

167 if(
±r
->
cou¡
 == 0)

169 
±r
->
	`hook
’å->
c⁄ãxt
);

170 
±r
->
cou¡
 =Öå->
≥rcou¡
;

174 
	`PutFªeF‹FúeTmcb
(
i
);

176 
±r
++;

178 
	}
}

180 
	$So·TimîInô
()

182 
	`•ö_lock_öô
(&
so·timî_lock
);

183 
	`Sig«lTimeInô
();

184 
	`F‹TimeInô
();

185 
	}
}

187 
	$Re£tSig«lTimî
()

189 
	`Sig«lTimeInô
();

190 
	}
}

192 
	$Re£tF‹Timî
()

194 
	`F‹TimeInô
();

195 
	}
}

197 
	$AddSögÀFúeTimîJob
(
u32
 
tick
, 
timîHook
 
fun
, * 
c⁄ãxt
)

199 
TMCB
 *
±r
;

200 
Êags
;

201 
ödex
;

203 if((
fun
 =(*)0Ë|| (
tick
 == 0))

204  
ADDJOBERROR
;

205 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

206 
ödex
 = 
	`GëFªeSögÀFúeTmcb
();

207 if(
ödex
 =
GETFREETMCBERROR
)

209 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

210  
ADDJOBERROR
;

212 
±r
 = &
SögÀFúeQueue
[
ödex
];

213 
±r
->
Êag
 = 
TIMER_VALIDE
;

214 
±r
->
cou¡
 = 
tick
;

215 
±r
->
c⁄ãxt
 = context;

216 
±r
->
hook
 = 
fun
;

217 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

218  
ödex
;

219 
	}
}

221 
	$DñëeSögÀFúeTimîJob
(
ödex
)

223 
Êags
;

225 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

226 
	`PutFªeSögÀFúeTmcb
(
ödex
);

227 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

228 
	}
}

230 
	$AddF‹FúeTimîJob
(
u32
 
tick
, 
timîHook
 
fun
, * 
c⁄ãxt
)

232 
FORTMCB
 *
±r
;

233 
ödex
;

234 
Êags
;

236 if((
fun
 =(*)0Ë|| (
tick
 == 0))

237  
ADDJOBERROR
;

238 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

239 
ödex
 = 
	`GëFªeF‹FúeF‹Tmcb
();

240 if(
ödex
 =
GETFREETMCBERROR
)

242 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

243  
ADDJOBERROR
;

245 
±r
 = &
F‹FúeQueue
[
ödex
];

246 
±r
->
Êag
 = 
TIMER_VALIDE
;

247 
±r
->
≥rcou¡
 =Öå->
cou¡
 = 
tick
;

248 
±r
->
c⁄ãxt
 = context;

249 
±r
->
hook
 = 
fun
;

250 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

251  
ödex
;

252 
	}
}

254 
	$DñëeF‹FúeTimîJob
(
ödex
)

256 
Êags
;

258 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

259 
	`PutFªeF‹FúeTmcb
(
ödex
);

260 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

261 
	}
}

263 
	gosd_upd©e_timî
=0;

264 #ifde‡ 
OSD_MODULE


265 
timevÆ
 
	gtv1
;

267 
úqªtu∫_t
 
	$s3c2410_timî3_i§
(
úq
, *
id
)

269 
Êags
;

271 
	`loˇl_úq_ßve
(
Êags
);

273 
	`TigîSögÀFúeTimî
();

274 
	`TigîF‹FúeTimî
();

276 if(!
osd_upd©e_timî
){

277 #ifde‡ 
OSD_MODULE


278 
	`check_πc_time
(&
tv1
);

281 
osd_upd©e_timî
++;

282 
osd_upd©e_timî
 &= 0x1f;

283 
	`loˇl_úq_ª°‹e
(
Êags
);

285  
IRQ_HANDLED
;

286 
	}
}

288 
	$˛o£S3c2410Timî3
()

290 
tc⁄
;

291 
tcfg1
;

293 
	`dißbÀ_úq
(
IRQ_TIMER3
);

294 
tcfg1
 = 
	`__øw_ªadl
(
S3C2410_TCFG1
);

295 
tcfg1
 &~
S3C2410_TCFG1_MUX3_MASK
;

296 
tcfg1
 |
S3C2410_TCFG1_MUX3_DIV2
;

297 
	`__øw_wrôñ
(
tcfg1
, 
S3C2410_TCFG1
);

298 
	`__øw_wrôñ
(0xa509, 
	`S3C2410_TCNTB
(3));

299 
	`__øw_wrôñ
(0, 
	`S3C2410_TCMPB
(3));

301 
tc⁄
 = 
	`__øw_ªadl
(
S3C2410_TCON
);

302 
tc⁄
 &= ~(0xf<<16);

303 
tc⁄
 |
S3C2410_TCON_T3MANUALUPD
;

304 
	`__øw_wrôñ
(
tc⁄
, 
S3C2410_TCON
);

306 
	`¥ötk
("%†ok\n", 
__FUNCTION__
);

307 
	}
}

309 
	$íabÀS3c2410Timî3
()

311 
tc⁄
;

312 
tcfg1
;

315 
tcfg1
 = 
	`__øw_ªadl
(
S3C2410_TCFG1
);

316 
tcfg1
 &~
S3C2410_TCFG1_MUX3_MASK
;

317 
tcfg1
 |
S3C2410_TCFG1_MUX3_DIV2
;

318 
	`__øw_wrôñ
(0x0700, 
S3C2410_TCFG0
);

319 
	`__øw_wrôñ
(
tcfg1
, 
S3C2410_TCFG1
);

320 
	`__øw_wrôñ
(0x3938, 
	`S3C2410_TCNTB
(3));

321 
	`__øw_wrôñ
(0, 
	`S3C2410_TCMPB
(3));

323 
tc⁄
 = 
	`__øw_ªadl
(
S3C2410_TCON
);

324 
tc⁄
 &= ~(0xf<<16);

325 
tc⁄
 |
S3C2410_TCON_T3MANUALUPD
;

326 
	`__øw_wrôñ
(
tc⁄
, 
S3C2410_TCON
);

327 
tc⁄
 = 
	`__øw_ªadl
(
S3C2410_TCON
);

328 
tc⁄
 &= ~(0xf<<16);

329 
tc⁄
 |
S3C2410_TCON_T3RELOAD
;

330 
tc⁄
 |
S3C2410_TCON_T3START
;

331 
	`__øw_wrôñ
(
tc⁄
, 
S3C2410_TCON
);

332 
	}
}

334 
	gövÆid
;

335 
	$öôTimî3Pîiod5ms
()

337 if(
	`ªque°_úq
(
IRQ_TIMER3
, 
s3c2410_timî3_i§
, 
IRQF_SHARED
, "s3c2410_timî3", &
övÆid
)) {

338 
	`˛o£S3c2410Timî3
();

339 
	`¥ötk
("\n\ns3c2410'sÅimer3 have been used\n\n");

341 
	`íabÀS3c2410Timî3
();

343 
	}
}

345 
	$öô_¨m_timî
()

347 
tw_sy°em_tickî
 = 0;

348 
	`So·TimîInô
();

349 #i‚de‡
USE_ON_CHIP_TIMER


350 
	`öôTimî3Pîiod5ms
();

352 
	}
}

354 
	$˛o£_¨m_timî
()

356 
	`˛o£S3c2410Timî3
();

357 
	`‰ì_úq
(
IRQ_TIMER3
, &
övÆid
);

358 
	}
}

360 
	$dißbÀ_timî_öt
()

362 
	`dißbÀ_úq
(
IRQ_TIMER3
);

363 
	}
}

365 
	$íabÀ_timî_öt
()

367 
	`íabÀ_úq
(
IRQ_TIMER3
);

368 
	}
}

	@../../tw5864/tw5864/tw_ppc_porting.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
__iomem
 *
	gdvm_va_8313ªgba£
 = 
NULL
;

6 
	#DMAGSR
 (
dvm_va_8313ªgba£
+0x82A8)

	)

7 
	#DMASR0
 (
dvm_va_8313ªgba£
+0x8104)

	)

8 
	#DMASAR0
 (
dvm_va_8313ªgba£
+0x8110)

	)

9 
	#DMADAR0
 (
dvm_va_8313ªgba£
+0x8118)

	)

10 
	#DMABCR0
 (
dvm_va_8313ªgba£
+0x8120)

	)

11 
	#DMAMR0
 (
dvm_va_8313ªgba£
+0x8100)

	)

12 
	#DMACDAR0
 (
dvm_va_8313ªgba£
+0x8108)

	)

14 
	#PTLDR
 (
dvm_va_8313ªgba£
+0x0404)

	)

15 
	#PTCNR
 (
dvm_va_8313ªgba£
+0x0400)

	)

16 
	#PTEVR
 (
dvm_va_8313ªgba£
+0x0410)

	)

18 
	#GPCFG
 (
dvm_va_8313ªgba£
+0xc00)

	)

19 
	#GPDAT
 (
dvm_va_8313ªgba£
+0xc08)

	)

21 
	#SICFR
 (
dvm_va_8313ªgba£
+0x0700)

	)

22 
	#SIVCR
 (
dvm_va_8313ªgba£
+0x0704)

	)

23 
	#SIPNR_H
 (
dvm_va_8313ªgba£
+0x0708)

	)

24 
	#SIPNR_L
 (
dvm_va_8313ªgba£
+0x070c)

	)

25 
	#SIPRR_A
 (
dvm_va_8313ªgba£
+0x0710)

	)

26 
	#SIPRR_D
 (
dvm_va_8313ªgba£
+0x071c)

	)

27 
	#SIMSR_H
 (
dvm_va_8313ªgba£
+0x0720)

	)

28 
	#SIMSR_L
 (
dvm_va_8313ªgba£
+0x0724)

	)

29 
	#SICNR
 (
dvm_va_8313ªgba£
+0x0728)

	)

30 
	#SEPNR
 (
dvm_va_8313ªgba£
+0x072c)

	)

31 
	#SMPRR_A
 (
dvm_va_8313ªgba£
+0x0730)

	)

32 
	#SMPRR_B
 (
dvm_va_8313ªgba£
+0x0734)

	)

33 
	#SEMSR
 (
dvm_va_8313ªgba£
+0x0738)

	)

34 
	#SECNR
 (
dvm_va_8313ªgba£
+0x073c)

	)

35 
	#SERSR
 (
dvm_va_8313ªgba£
+0x0740)

	)

36 
	#SERMR
 (
dvm_va_8313ªgba£
+0x0744)

	)

37 
	#SERCR
 (
dvm_va_8313ªgba£
+0x0748)

	)

38 
	#SIFCR_H
 (
dvm_va_8313ªgba£
+0x0750)

	)

39 
	#SIFCR_L
 (
dvm_va_8313ªgba£
+0x0754)

	)

40 
	#SEFCR
 (
dvm_va_8313ªgba£
+0x0758)

	)

41 
	#SERFR
 (
dvm_va_8313ªgba£
+0x075c)

	)

42 
	#SCVCR
 (
dvm_va_8313ªgba£
+0x0760)

	)

43 
	#SMVCR
 (
dvm_va_8313ªgba£
+0x0764)

	)

46 
	#OR0
 ((
__iomem
 *)(()
dvm_va_8313ªgba£
+0x5004))

	)

47 
	#OR1
 ((
__iomem
 *)(()
dvm_va_8313ªgba£
+0x500C))

	)

48 
	#OR2
 ((
__iomem
 *)(()
dvm_va_8313ªgba£
+0x5014))

	)

49 
	#OR3
 ((
__iomem
 *)(()
dvm_va_8313ªgba£
+0x501C))

	)

51 
	#TIMER_INVALIDE
 (-1)

	)

52 
	#TIMER_VALIDE
 (1)

	)

54 
	#GPIO_PIN_29
 (29)

	)

55 
	#WATCHDOG_BASE
 (
dvm_va_8313ªgba£
 + 0x0200)

	)

56 
	#WATCHDOG_CTROL
 (
WATCHDOG_BASE
 + 0x04)

	)

57 
	#WATCHDOG_CNT
 (
WATCHDOG_BASE
 + 0x08)

	)

58 
	#WATCHDOG_SERV
 (
WATCHDOG_BASE
 + 0x0e)

	)

63 
__s32
 
	mÊag
;

64 
__u32
 
	mcou¡
;

65 
__u32
 
	m≥rcou¡
;

66 * 
	mc⁄ãxt
;

67 
timîHook
 
	mhook
;

68 }
	tFORTMCB
;

72 
__s32
 
	mÊag
;

73 
__u32
 
	mcou¡
;

74 * 
	mc⁄ãxt
;

75 
timîHook
 
	mhook
;

76 }
	tTMCB
;

78 
Sig«lTimeInô
();

79 
F‹TimeInô
();

80 
GëFªeSögÀFúeTmcb
();

81 
PutFªeSögÀFúeTmcb
(
s32
 
ödex
);

82 
GëFªeF‹FúeF‹Tmcb
();

83 
PutFªeF‹FúeTmcb
(
s32
 
ödex
);

84 
So·TimîInô
();

85 
gpio_pö_£t
(
gpio
, 
boﬁ
);

87 
TMCB
 
	gSögÀFúeQueue
[
MAXSINGLEFIREQUEUENUM
];

88 
FORTMCB
 
	gF‹FúeQueue
[
MAXFORFIREQUEUENUM
];

89 
•ölock_t
 
	gso·timî_lock
;

90 
	gtw_sy°em_tickî
 = 0;

92 
	$w©chdog_ª£t
()

96 
	`out_be16
(
WATCHDOG_SERV
, 0x556c);

97 
	`out_be16
(
WATCHDOG_SERV
, 0xaa39);

98 
	}
}

100 
	$w©chdog_ªÀa£
()

102 
	`__øw_wrôñ
((0xfff‡<< 16), 
WATCHDOG_CTROL
);

103 
	}
}

105 
	$w©chdog_öô
(
u32
 
timeout
)

110 
	}
}

112 
u32
 
	$gë_tw_sy°em_tick
()

114 
timevÆ
 
tv1
;

116 
	`do_gëtimeofday
(&
tv1
);

117 
tw_sy°em_tickî
 = ()
tv1
.
tv_£c
;

118 
tw_sy°em_tickî
 *= 1000;

119 
tw_sy°em_tickî
 +((()
tv1
.
tv_u£c
)/1000);

121  (
u32
)
tw_sy°em_tickî
;

122 
	}
}

124 
	$Sig«lTimeInô
()

126 
i
;

127 
Êags
;

129 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

130 
i
=0; i<
MAXSINGLEFIREQUEUENUM
; i++)

131 
	`PutFªeSögÀFúeTmcb
(
i
);

132 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

133 
	}
}

135 
	$F‹TimeInô
()

137 
i
;

138 
Êags
;

140 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

141 
i
=0; i<
MAXFORFIREQUEUENUM
; i++)

142 
	`PutFªeF‹FúeTmcb
(
i
);

143 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

144 
	}
}

146 
	$GëFªeSögÀFúeTmcb
()

148 
TMCB
 *
±r
;

149 
i
;

151 
±r
 = 
SögÀFúeQueue
;

152 
i
=0; i<
MAXSINGLEFIREQUEUENUM
; i++)

154 if(
±r
->
Êag
 =
TIMER_INVALIDE
)

155  
i
;

156 
±r
++;

158  
GETFREETMCBERROR
;

159 
	}
}

161 
	$PutFªeSögÀFúeTmcb
(
ödex
)

163 
TMCB
 *
±r
;

165 if((
ödex
 >
MAXSINGLEFIREQUEUENUM
) || (index < 0))

167 
±r
 = &
SögÀFúeQueue
[
ödex
];

168 
±r
->
hook
 = (*)0;

169 
±r
->
Êag
 = 
TIMER_INVALIDE
;

170 
±r
->
cou¡
 = 0;

171 
	}
}

173 
	$GëFªeF‹FúeF‹Tmcb
()

175 
FORTMCB
 *
±r
;

176 
i
;

178 
±r
 = 
F‹FúeQueue
;

179 
i
=0; i<
MAXFORFIREQUEUENUM
; i++)

181 if(
±r
->
Êag
 =
TIMER_INVALIDE
)

182  
i
;

183 
±r
++;

185  
GETFREETMCBERROR
;

186 
	}
}

188 
	$PutFªeF‹FúeTmcb
(
ödex
)

190 
FORTMCB
 *
±r
;

192 if((
ödex
 >
MAXSINGLEFIREQUEUENUM
) || (index < 0))

194 
±r
 = &
F‹FúeQueue
[
ödex
];

195 
±r
->
hook
 = (*)0;

196 
±r
->
Êag
 = 
TIMER_INVALIDE
;

197 
±r
->
cou¡
 = 0;

198 
±r
->
≥rcou¡
 = 0;

199 
	}
}

201 
	$TigîSögÀFúeTimî
()

203 
TMCB
 *
±r
;

204 
i
;

206 
±r
 = 
SögÀFúeQueue
;

207 
i
=0; i<
MAXSINGLEFIREQUEUENUM
; i++)

209 if(
±r
->
Êag
 =
TIMER_VALIDE
)

211 if(
±r
->
hook
 != (*)0)

213 if(
±r
->
cou¡
 > 0)

214 
±r
->
cou¡
--;

215 if(
±r
->
cou¡
 == 0)

217 
±r
->
	`hook
’å->
c⁄ãxt
);

218 
	`PutFªeSögÀFúeTmcb
(
i
);

222 
	`PutFªeSögÀFúeTmcb
(
i
);

224 
±r
++;

226 
	}
}

228 
	$TigîF‹FúeTimî
()

230 
FORTMCB
 *
±r
;

231 
i
;

233 
±r
 = 
F‹FúeQueue
;

234 
i
=0; i<
MAXFORFIREQUEUENUM
; i++)

236 if(
±r
->
Êag
 =
TIMER_VALIDE
)

238 if(
±r
->
hook
 != (*)0)

240 if(
±r
->
cou¡
 > 0)

241 
±r
->
cou¡
--;

242 if(
±r
->
cou¡
 == 0)

244 
±r
->
	`hook
’å->
c⁄ãxt
);

245 
±r
->
cou¡
 =Öå->
≥rcou¡
;

249 
	`PutFªeF‹FúeTmcb
(
i
);

251 
±r
++;

253 
	}
}

255 
	$So·TimîInô
()

257 
	`•ö_lock_öô
(&
so·timî_lock
);

258 
	`Sig«lTimeInô
();

259 
	`F‹TimeInô
();

260 
	}
}

262 
	$Re£tSig«lTimî
()

264 
	`Sig«lTimeInô
();

265 
	}
}

267 
	$Re£tF‹Timî
()

269 
	`F‹TimeInô
();

270 
	}
}

272 
	$AddSögÀFúeTimîJob
(
u32
 
tick
, 
timîHook
 
fun
, * 
c⁄ãxt
)

274 
TMCB
 *
±r
;

275 
Êags
;

276 
ödex
;

278 if((
fun
 =(*)0Ë|| (
tick
 == 0))

279  
ADDJOBERROR
;

280 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

281 
ödex
 = 
	`GëFªeSögÀFúeTmcb
();

282 if(
ödex
 =
GETFREETMCBERROR
)

284 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

285  
ADDJOBERROR
;

287 
±r
 = &
SögÀFúeQueue
[
ödex
];

288 
±r
->
Êag
 = 
TIMER_VALIDE
;

289 
±r
->
cou¡
 = 
tick
;

290 
±r
->
c⁄ãxt
 = context;

291 
±r
->
hook
 = 
fun
;

292 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

293  
ödex
;

294 
	}
}

296 
	$DñëeSögÀFúeTimîJob
(
ödex
)

298 
Êags
;

300 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

301 
	`PutFªeSögÀFúeTmcb
(
ödex
);

302 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

303 
	}
}

305 
	$AddF‹FúeTimîJob
(
u32
 
tick
, 
timîHook
 
fun
, * 
c⁄ãxt
)

307 
FORTMCB
 *
±r
;

308 
ödex
;

309 
Êags
;

311 if((
fun
 =(*)0Ë|| (
tick
 == 0))

312  
ADDJOBERROR
;

313 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

314 
ödex
 = 
	`GëFªeF‹FúeF‹Tmcb
();

315 if(
ödex
 =
GETFREETMCBERROR
)

317 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

318  
ADDJOBERROR
;

320 
±r
 = &
F‹FúeQueue
[
ödex
];

321 
±r
->
Êag
 = 
TIMER_VALIDE
;

322 
±r
->
≥rcou¡
 =Öå->
cou¡
 = 
tick
;

323 
±r
->
c⁄ãxt
 = context;

324 
±r
->
hook
 = 
fun
;

325 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

326  
ödex
;

327 
	}
}

329 
	$DñëeF‹FúeTimîJob
(
ödex
)

331 
Êags
;

333 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

334 
	`PutFªeF‹FúeTmcb
(
ödex
);

335 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

336 
	}
}

338 #ifde‡ 
OSD_MODULE


339 
timevÆ
 
	gtv1
;

341 
	gosd_upd©e_timî
=0;

343 
úqªtu∫_t
 
	$dvm4000i_timî_öãºu±
(
úq
, *
dev_id
)

345 
Êags
;

347 
	`loˇl_úq_ßve
(
Êags
);

348 
	`w©chdog_ª£t
();

350 
	`__øw_wrôñ
(0xffffffff, 
PTEVR
);

351 
	`__øw_wrôñ
(0xffffffff, 
SIPNR_L
);

352 
	`__øw_wrôñ
(0xffffffff, 
SIPNR_H
);

353 
	`TigîSögÀFúeTimî
();

354 
	`TigîF‹FúeTimî
();

356 if(!
osd_upd©e_timî
){

357 #ifde‡ 
OSD_MODULE


358 
	`check_πc_time
(&
tv1
);

361 
osd_upd©e_timî
++;

362 
osd_upd©e_timî
 &= 0x1f;

363 
	`loˇl_úq_ª°‹e
(
Êags
);

365  
IRQ_HANDLED
;

366 
	}
}

368 
	$ªad_siv¸
()

370 
	`¥ötk
("SEPNR = 0x%x\n", 
	`__øw_ªadl
(
SEPNR
));

371 
	}
}

373 
	$ªad_ùic_ªgs
()

375 
	`¥ötk
("\n\nSICFR = 0x%x\n", 
	`__øw_ªadl
(
SICFR
));

376 
	`¥ötk
("SIVCR = 0x%x\n", 
	`__øw_ªadl
(
SIVCR
));

377 
	`¥ötk
("SIPNR_H = 0x%x\n", 
	`__øw_ªadl
(
SIPNR_H
));

378 
	`¥ötk
("SIPNR_L = 0x%x\n", 
	`__øw_ªadl
(
SIPNR_L
));

379 
	`¥ötk
("SIPRR_A = 0x%x\n", 
	`__øw_ªadl
(
SIPRR_A
));

380 
	`¥ötk
("SIPRR_D = 0x%x\n", 
	`__øw_ªadl
(
SIPRR_D
));

381 
	`¥ötk
("SIPRR_A = 0x%x\n", 
	`__øw_ªadl
(
SIMSR_H
));

382 
	`¥ötk
("SIPRR_D = 0x%x\n", 
	`__øw_ªadl
(
SIMSR_L
));

383 
	`¥ötk
("SICNR = 0x%x\n", 
	`__øw_ªadl
(
SICNR
));

384 
	`¥ötk
("SEPNR = 0x%x\n", 
	`__øw_ªadl
(
SEPNR
));

385 
	`¥ötk
("SMPRR_A = 0x%x\n", 
	`__øw_ªadl
(
SMPRR_A
));

386 
	`¥ötk
("SMPRR_B = 0x%x\n", 
	`__øw_ªadl
(
SMPRR_B
));

387 
	`¥ötk
("SEMSR = 0x%x\n", 
	`__øw_ªadl
(
SEMSR
));

388 
	`¥ötk
("SECNR = 0x%x\n", 
	`__øw_ªadl
(
SECNR
));

389 
	`¥ötk
("SERSR = 0x%x\n", 
	`__øw_ªadl
(
SERSR
));

390 
	`¥ötk
("SERMR = 0x%x\n", 
	`__øw_ªadl
(
SERMR
));

391 
	`¥ötk
("SERCR = 0x%x\n", 
	`__øw_ªadl
(
SERCR
));

392 
	`¥ötk
("SIFCR_H = 0x%x\n", 
	`__øw_ªadl
(
SIFCR_H
));

393 
	`¥ötk
("SIFCR_L = 0x%x\n", 
	`__øw_ªadl
(
SIFCR_L
));

394 
	`¥ötk
("SEFCR = 0x%x\n", 
	`__øw_ªadl
(
SEFCR
));

395 
	`¥ötk
("SERFR = 0x%x\n", 
	`__øw_ªadl
(
SERFR
));

396 
	`¥ötk
("SCVCR = 0x%x\n", 
	`__øw_ªadl
(
SCVCR
));

397 
	`¥ötk
("SMVCR = 0x%x\n\n", 
	`__øw_ªadl
(
SMVCR
));

398 
	}
}

400 
	$˛ór_úq0_≥ndög
()

402 
u32
 
úq_Êags
;

404 
úq_Êags
 = 
	`__øw_ªadl
(
SEPNR
);

405 
úq_Êags
 |= 0x80000000;

406 
	`__øw_wrôñ
(
úq_Êags
, 
SEPNR
);

407 
	}
}

409 
	$£t_gpio13_high
()

411 
u32
 
gpio
;

412 
gpio
 = 
	`__øw_ªadl
(
GPDAT
);

413 
gpio
 |= 0x40000;

414 
	`__øw_wrôñ
(
gpio
, 
GPDAT
);

415 
	}
}

417 
	$£t_gpio13_low
()

419 
u32
 
gpio
;

420 
gpio
 = 
	`ªadl
(
GPDAT
);

421 
gpio
 &= (~0x40000);

422 
	`wrôñ
(
gpio
, 
GPDAT
);

423 
	}
}

425 
	gs_vúq
 = -1;

426 #ifde‡
OSD_MODULE


427 
mpc8313_timî
;

430 
timî_li°
 
	gdvm_timî
;

432 #ifde‡
USE_SYSTEM_TIMER


433 
	$dvm_kî√l_timî
(){

435 
dvm_timî
.
fun˘i⁄
 = 
dvm_kî√l_timî
;

436 
dvm_timî
.
d©a
 = 0;

437 
dvm_timî
.
expúes
 = 
jiffõs
 + 1;

438 
	`add_timî
(&
dvm_timî
);

440 
	`TigîSögÀFúeTimî
();

441 
	`TigîF‹FúeTimî
();

442 
	}
}

445 
	$µc_timî_öô
()

447 
u32
 
ªg_vÆue
;

448 
u32
 
gpio
;

449 
u32
 
ªt
 = 0;

451 
tw_sy°em_tickî
 = 0;

452 
gpio
 = 
	`__øw_ªadl
(
GPCFG
);

453 
gpio
 |= 0x40000;

454 
	`__øw_wrôñ
(
gpio
, 
GPCFG
);

455 #ifde‡
OSD_MODULE


456 
mpc8313_timî
 = 0;

458 
osd_upd©e_timî
 = 0;

460 
ªg_vÆue
 = 0xcb800;

461 
s_vúq
 = 
	`úq_¸óã_m≠pög
(
NULL
, 
IRQ_SYS_INTERNAL
);

462 if(
s_vúq
 =
NO_IRQ
)

464 
	`¥ötk
("map irq failed !\n");

467 #ifde‡
USE_SYSTEM_TIMER


468 
dvm_timî
.
fun˘i⁄
 = 
dvm_kî√l_timî
;

469 
dvm_timî
.
d©a
 = 0;

470 
dvm_timî
.
expúes
 = 
jiffõs
 + 1;

471 
	`öô_timî
(&
dvm_timî
);

473 
ªt
 = 
	`ªque°_úq
(
s_vúq
, (*)
dvm4000i_timî_öãºu±
, 
IRQF_DISABLED
, "dvm_timî", 
NULL
);

474 if(
ªt
) {

475 
	`¥ötk
("ªque°_úq i†î∏%d, (hw %2d --> vú %2d).\n", 
ªt
, 
IRQ_SYS_INTERNAL
, 
s_vúq
);

480 
	`__øw_wrôñ
(
ªg_vÆue
, 
PTLDR
);

481 
	`__øw_wrôñ
(0x81, 
PTCNR
);

483 
	}
}

486 
	$µc_timî_exô
()

488 #ifde‡
USE_SYSTEM_TIMER


489 
	`dñ_timî
(&
dvm_timî
);

491 
	`dißbÀ_úq
(
s_vúq
);

492 
	`‰ì_úq
(
s_vúq
, 
NULL
);

494 #ifde‡
OSD_MODULE


495 
mpc8313_timî
 = 0;

497 
osd_upd©e_timî
 = 0;

498 
	}
}

500 
	$dißbÀ_timî_öt
()

502 #ifde‡
USE_SYSTEM_TIMER


503 
	`dñ_timî
(&
dvm_timî
);

505 
	`dißbÀ_úq
(
s_vúq
);

507 
	}
}

509 
	$íabÀ_timî_öt
()

511 #ifde‡
USE_SYSTEM_TIMER


512 
	`add_timî
(&
dvm_timî
);

514 
	`íabÀ_úq
(
s_vúq
);

516 
	}
}

519 
	$µc_dma_m2m
(
u32
 
§c
, u32 
de°
, u32 
Àn
)

521 
u32
 
ªg_vÆue
;

522 
u32
 
timeout
 = 1000000;

525 
ªg_vÆue
 = 
	`ªadl
(
DMASR0
);

526 } 
	`likñy
(
ªg_vÆue
 & 0x4Ë&& (--
timeout
));

527 if(!
timeout
){

528 
	`¥ötk
("DMAÅime out\n");

530 
	`wrôñ
(
§c
, 
DMASAR0
);

531 
	`wrôñ
(
de°
, 
DMADAR0
);

532 
	`wrôñ
(
Àn
, 
DMABCR0
);

533 
ªg_vÆue
 = (0<<26)|(0<<25)|(0<<24)|(0<<22)|(1<<20)|(0<<19)|(0<<16)|(0<<14)|(0<<7)|(0<<3)|(1<<2);

534 
	`wrôñ
(
ªg_vÆue
, 
DMAMR0
);

535 
ªg_vÆue
 = (0<<26)|(0<<25)|(0<<24)|(0<<22)|(1<<20)|(0<<19)|(0<<16)|(0<<14)|(0<<7)|(0<<3)|(1<<2)|1;

536 
	`wrôñ
(
ªg_vÆue
, 
DMAMR0
);

537 
timeout
 = 1000000;

539 
ªg_vÆue
 = 
	`ªadl
(
DMASR0
);

540 } 
	`likñy
(
ªg_vÆue
 & 0x4Ë&& (--
timeout
));

541 if(
	`ªadl
(
DMASR0
) & (1 << 7)){

542 
	`¥ötk
("DMA TxÉrr!\n");

544 if(!
timeout
){

545 
	`¥ötk
("DMAÅime out\n");

547 
	}
}

549 
	$upm_ã°_Âga
()

551 
èbÀ1
[64]= {

570 
ãmp
;

571 
i
;

572 *
mxmø
, *
mdr
, *
dummy
;

573 *
pÂgaupmcs0
;

582 *((*)(()
dvm_va_8313ªgba£
+0x30)) = 0x70000000;

583 *((*)(()
dvm_va_8313ªgba£
+0x34) )= 0x80000018;

584 *((*)(()
dvm_va_8313ªgba£
+0x5010)) = 0x70001081;

585 *((*)(()
dvm_va_8313ªgba£
+0x5014)) = 0xfe000000;

591 
mxmø
 = (*)(()
dvm_va_8313ªgba£
+0x5070);

592 
mdr
 = (*)(()
dvm_va_8313ªgba£
+0x5088);

596 
pÂgaupmcs0
 = 
	`i‹em≠
(0x70000000, 0x80000);

603 
dummy
 = (*)
pÂgaupmcs0
;

606 *
mxmø
 = (*mxmra & 0xCFFFFFC0) | 0x10000000;

608 
i
 = 0; i < 64; i++)

610 *
mdr
 = 
èbÀ1
[
i
];

612 
__asm__
 
	`__vﬁ©ûe__
 ("sync");

614 *
dummy
=1;

616 
__asm__
 
	`__vﬁ©ûe__
 ("sync");

620 *
mxmø
 = (*mxmra & 0xCFFFFFC0) | 0x0000000;

621 *
mxmø
 = 0x0819c400;

622 
ãmp
 = *
mxmø
;

625 
	`iounm≠
(
pÂgaupmcs0
);

632 
	}
}

634 
	$gpcm_öô
()

636 
u32
 
ªg_vÆue
;

638 
ªg_vÆue
 = 
	`__øw_ªadl
(
OR0
);

639 
ªg_vÆue
 = 
	`__øw_ªadl
(
OR1
);

641 
ªg_vÆue
 = 0xfe000df5;

643 
	`__øw_wrôñ
(
ªg_vÆue
, 
OR1
);

644 
	}
}

646 
	$dvm_£t_video_time°amp_ba£
(
¨g
)

648 
ªt
 = 0;;

649 
	`dißbÀ_timî_öt
();

650 #ifde‡
OSD_MODULE


651 
ªt
 = 
	`c›y_‰om_u£r
((*)&
mpc8313_timî
, (*)
¨g
, ());

653 
	`íabÀ_timî_öt
();

654  
ªt
;

655 
	}
}

657 
	$dvm_gë_video_time°amp_ba£
(
¨g
)

659 
ªt
 = 0;;

660 
	`dißbÀ_timî_öt
();

661 #ifde‡
OSD_MODULE


662 
ªt
 = 
	`c›y_to_u£r
((*)
¨g
, (*)&
mpc8313_timî
, ());

664 
	`íabÀ_timî_öt
();

665  
ªt
;

666 
	}
}

668 
	$dvm_˛ór_úq_≥ndög
(
úq
)

670 
u32
 
vÆ
;

672 
vÆ
 = 
	`__øw_ªadl
(
dvm_va_8313ªgba£
 + 0x72c);

673 
	`¥ötk
("-------->úqÖídög: 0x%08x\n", 
vÆ
);

674 if(
vÆ
 & (0x80000000 >> 1))

676 
	`¥ötk
("irq1 isÖending,Çow clear it!\n");

677 
	`__øw_wrôñ
(
vÆ
 | (0x80000000 >> 1), 
dvm_va_8313ªgba£
 + 0x72c);

679 
	}
}

681 
	$gpio_pö_£t
(
gpio
, 
boﬁ
)

683 
u32
 
vÆ
;

685 
boﬁ
 = !!bool;

686 
vÆ
 = 
	`__øw_ªadl
(
dvm_va_8313ªgba£
 + 0xc08);

687 if(
boﬁ
)

689 
vÆ
 |(0x80000000 >> 
gpio
);

691 
vÆ
 &~(0x80000000 >> 
gpio
);

693 
	`__øw_wrôñ
(
vÆ
, 
dvm_va_8313ªgba£
 + 0xc08);

696 
	}
}

698 
	$gpio_pö_öô
(
gpio
)

700 
u32
 
vÆ
;

702 
vÆ
 = 
	`__øw_ªadl
(
dvm_va_8313ªgba£
 + 0x114);

703 
vÆ
 |= (0xc0000000 >> 8);

704 
	`__øw_wrôñ
(
vÆ
, 
dvm_va_8313ªgba£
 + 0x114);

706 
vÆ
 = 
	`__øw_ªadl
(
dvm_va_8313ªgba£
 + 0xc00);

707 
vÆ
 |(0x80000000 >> 
gpio
);

708 
	`__øw_wrôñ
(
vÆ
, 
dvm_va_8313ªgba£
 + 0xc00);

711 
	}
}

713 
	$dvm_m≠_öô
()

715 
dvm_va_8313ªgba£
 = 
	`i‹em≠
(0xe0000000, 0x10000);

716 if(
dvm_va_8313ªgba£
 =
NULL
) {

717 
	`¥ötk
("8313Ñegs baseÉrr\n");

718  -
ENOMEM
;

720 
	`w©chdog_öô
(2000);

721 
	`So·TimîInô
();

722 #i‚de‡
USE_ON_CHIP_TIMER


723 
	`µc_timî_öô
();

725 
	`gpcm_öô
();

726 #ifde‡
UPM_SYNC_MODE


727 
	`upm_ã°_Âga
();

729 
	`gpio_pö_öô
(
GPIO_PIN_29
);

732 
	}
}

734 
	$dvm_m≠_exô
()

736 
	`w©chdog_ªÀa£
();

737 if(
NULL
 !
dvm_va_8313ªgba£
) {

738 
	`iounm≠
(
dvm_va_8313ªgba£
);

739 
dvm_va_8313ªgba£
 = 
NULL
;

741 
	`µc_timî_exô
();

742 
	}
}

	@../../tw5864/tw5864/tw_timer.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
	#TIMER_INVALIDE
 (-1)

	)

4 
	#TIMER_VALIDE
 (1)

	)

7 
__s32
 
	mÊag
;

8 
__u32
 
	mcou¡
;

9 
__u32
 
	m≥rcou¡
;

10 * 
	mc⁄ãxt
;

11 
timîHook
 
	mhook
;

12 }
	tFORTMCB
;

15 
__s32
 
	mÊag
;

16 
__u32
 
	mcou¡
;

17 * 
	mc⁄ãxt
;

18 
timîHook
 
	mhook
;

19 }
	tTMCB
;

21 
Sig«lTimeInô
();

22 
F‹TimeInô
();

23 
GëFªeSögÀFúeTmcb
();

24 
PutFªeSögÀFúeTmcb
(
s32
 
ödex
);

25 
GëFªeF‹FúeF‹Tmcb
();

26 
PutFªeF‹FúeTmcb
(
s32
 
ödex
);

27 
TigîSögÀFúeTimî
();

28 
TigîF‹FúeTimî
();

29 
So·TimîInô
();

31 
TMCB
 
	gSögÀFúeQueue
[
MAXSINGLEFIREQUEUENUM
];

32 
FORTMCB
 
	gF‹FúeQueue
[
MAXFORFIREQUEUENUM
];

33 
•ölock_t
 
	gso·timî_lock
;

34 
u32
 
	gtw_sy°em_tickî
=0;

36 
u32
 
	$gë_tw_sy°em_tick
()

38  
tw_sy°em_tickî
;

39 
	}
}

41 
	$Sig«lTimeInô
()

43 
i
;

44 
Êags
;

46 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

47 
i
=0; i<
MAXSINGLEFIREQUEUENUM
; i++)

48 
	`PutFªeSögÀFúeTmcb
(
i
);

49 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

50 
	}
}

52 
	$F‹TimeInô
()

54 
i
;

55 
Êags
;

57 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

58 
i
=0; i<
MAXFORFIREQUEUENUM
; i++)

59 
	`PutFªeF‹FúeTmcb
(
i
);

60 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

61 
	}
}

63 
	$GëFªeSögÀFúeTmcb
()

65 
TMCB
 *
±r
;

66 
i
;

68 
±r
 = 
SögÀFúeQueue
;

69 
i
=0; i<
MAXSINGLEFIREQUEUENUM
; i++)

71 if(
±r
->
Êag
 =
TIMER_INVALIDE
)

72  
i
;

73 
±r
++;

75  
GETFREETMCBERROR
;

76 
	}
}

78 
	$PutFªeSögÀFúeTmcb
(
ödex
)

80 
TMCB
 *
±r
;

82 if((
ödex
 >
MAXSINGLEFIREQUEUENUM
) || (index < 0))

84 
±r
 = &
SögÀFúeQueue
[
ödex
];

85 
±r
->
hook
 = (*)0;

86 
±r
->
Êag
 = 
TIMER_INVALIDE
;

87 
±r
->
cou¡
 = 0;

88 
	}
}

90 
	$GëFªeF‹FúeF‹Tmcb
()

92 
FORTMCB
 *
±r
;

93 
i
;

95 
±r
 = 
F‹FúeQueue
;

96 
i
=0; i<
MAXFORFIREQUEUENUM
; i++)

98 if(
±r
->
Êag
 =
TIMER_INVALIDE
)

99  
i
;

100 
±r
++;

102  
GETFREETMCBERROR
;

103 
	}
}

105 
	$PutFªeF‹FúeTmcb
(
ödex
)

107 
FORTMCB
 *
±r
;

109 if((
ödex
 >
MAXSINGLEFIREQUEUENUM
) || (index < 0))

111 
±r
 = &
F‹FúeQueue
[
ödex
];

112 
±r
->
hook
 = (*)0;

113 
±r
->
Êag
 = 
TIMER_INVALIDE
;

114 
±r
->
cou¡
 = 0;

115 
±r
->
≥rcou¡
 = 0;

116 
	}
}

118 
	$TigîSögÀFúeTimî
()

120 
TMCB
 *
±r
;

121 
i
;

123 
±r
 = 
SögÀFúeQueue
;

124 
i
=0; i<
MAXSINGLEFIREQUEUENUM
; i++)

126 if(
±r
->
Êag
 =
TIMER_VALIDE
)

128 if(
±r
->
hook
 != (*)0)

130 if(
±r
->
cou¡
 > 0)

131 
±r
->
cou¡
--;

134 
±r
->
	`hook
’å->
c⁄ãxt
);

135 
	`PutFªeSögÀFúeTmcb
(
i
);

139 
	`PutFªeSögÀFúeTmcb
(
i
);

141 
±r
++;

143 
	}
}

145 
	$TigîF‹FúeTimî
()

147 
FORTMCB
 *
±r
;

148 
i
;

150 
±r
 = 
F‹FúeQueue
;

151 
i
=0; i<
MAXFORFIREQUEUENUM
; i++)

153 if(
±r
->
Êag
 =
TIMER_VALIDE
)

155 if(
±r
->
hook
 != (*)0)

157 if(
±r
->
cou¡
 > 0)

158 
±r
->
cou¡
--;

161 
±r
->
	`hook
’å->
c⁄ãxt
);

162 
±r
->
cou¡
 =Öå->
≥rcou¡
;

166 
	`PutFªeF‹FúeTmcb
(
i
);

168 
±r
++;

170 
	}
}

172 
	$So·TimîInô
()

174 
	`•ö_lock_öô
(&
so·timî_lock
);

175 
	`Sig«lTimeInô
();

176 
	`F‹TimeInô
();

177 
	}
}

179 
	$Re£tSig«lTimî
()

181 
	`Sig«lTimeInô
();

182 
	}
}

184 
	$Re£tF‹Timî
()

186 
	`F‹TimeInô
();

187 
	}
}

189 
	$AddSögÀFúeTimîJob
(
u32
 
tick
, 
timîHook
 
fun
, * 
c⁄ãxt
)

191 
TMCB
 *
±r
;

192 
Êags
;

193 
ödex
;

195 if((
fun
 =(*)0Ë|| (
tick
 == 0))

196  
ADDJOBERROR
;

197 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

198 
ödex
 = 
	`GëFªeSögÀFúeTmcb
();

199 if(
ödex
 =
GETFREETMCBERROR
)

201 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

202  
ADDJOBERROR
;

204 
±r
 = &
SögÀFúeQueue
[
ödex
];

205 
±r
->
Êag
 = 
TIMER_VALIDE
;

206 
±r
->
cou¡
 = 
tick
;

207 
±r
->
c⁄ãxt
 = context;

208 
±r
->
hook
 = 
fun
;

209 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

210  
ödex
;

211 
	}
}

213 
	$DñëeSögÀFúeTimîJob
(
ödex
)

215 
Êags
;

217 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

218 
	`PutFªeSögÀFúeTmcb
(
ödex
);

219 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

220 
	}
}

222 
	$AddF‹FúeTimîJob
(
u32
 
tick
, 
timîHook
 
fun
, * 
c⁄ãxt
)

224 
FORTMCB
 *
±r
;

225 
ödex
;

226 
Êags
;

228 if((
fun
 =(*)0Ë|| (
tick
 == 0))

229  
ADDJOBERROR
;

230 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

231 
ödex
 = 
	`GëFªeF‹FúeF‹Tmcb
();

232 if(
ödex
 =
GETFREETMCBERROR
)

234 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

235  
ADDJOBERROR
;

237 
±r
 = &
F‹FúeQueue
[
ödex
];

238 
±r
->
Êag
 = 
TIMER_VALIDE
;

239 
±r
->
≥rcou¡
 =Öå->
cou¡
 = 
tick
;

240 
±r
->
c⁄ãxt
 = context;

241 
±r
->
hook
 = 
fun
;

242 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

243  
ödex
;

244 
	}
}

246 
	$DñëeF‹FúeTimîJob
(
ödex
)

248 
Êags
;

250 
	`•ö_lock_úqßve
(&
so·timî_lock
, 
Êags
);

251 
	`PutFªeF‹FúeTmcb
(
ödex
);

252 
	`•ö_u∆ock_úqª°‹e
(&
so·timî_lock
, 
Êags
);

253 
	}
}

	@../../tw5864/tw5864/tw_vb_common.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
	$tw_vb_∑ckë_tcb_öô
(
tw_vb_∑ckë_tcb_t
 *
vb_∑ckë_tcb
, 
tw_vb_poﬁ_t
 *
poﬁ
, 
id
)

5 if((
vb_∑ckë_tcb
!=
NULL
Ë&& (
poﬁ
!=NULL)){

6 
tcb_node_t
 *
node
 = &
vb_∑ckë_tcb
->
∑ckë_node
;

7 
	`•ö_lock_öô
(&
vb_∑ckë_tcb
->
lock
);

8 
	`©omic_£t
(&
vb_∑ckë_tcb
->
ªf_cou¡
, 0);

9 
node
->
›
 = &
tcb_node_›
;

10 
node
->
›
->
	`öô
(node);

11 
node
->
›
->
	`£t_¥iv
“ode, 
vb_∑ckë_tcb
);

12 
vb_∑ckë_tcb
->
∑ckë_id
 = 
id
;

13 
vb_∑ckë_tcb
->
∑ckë_size
 = 
poﬁ
->
vb_∑ckë_buf„r_size
;

14 
vb_∑ckë_tcb
->
∑ylﬂd_Àn
 = 0;

15 
vb_∑ckë_tcb
->
c⁄sumî_Àn
 = 0;

16 
vb_∑ckë_tcb
->
d©a
 = &
poﬁ
->
ˇche_buf„r
[poﬁ->
vb_∑ckë_buf„r_size
*
id
];

17 
vb_∑ckë_tcb
->
dma_addr
 = 0;

18 
vb_∑ckë_tcb
->
id_of_∑ckë_queue
 = 0;

20 
	}
}

22 
	$tw_vb_∑ckë_tcb_ª£t
(
tw_vb_∑ckë_tcb_t
 *
vb_∑ckë_tcb
)

24 if(
vb_∑ckë_tcb
!=
NULL
){

25 
	`©omic_£t
(&
vb_∑ckë_tcb
->
ªf_cou¡
, 0);

26 
vb_∑ckë_tcb
->
∑ylﬂd_Àn
 = 0;

27 
vb_∑ckë_tcb
->
c⁄sumî_Àn
 = 0;

28 
vb_∑ckë_tcb
->
dma_addr
 = 0;

29 
vb_∑ckë_tcb
->
id_of_∑ckë_queue
 = 0;

31 
	}
}

33 
	$tw_vb_∑ckë_tcb_ªÀa£
(
tw_vb_∑ckë_tcb_t
 **
±r_vb_∑ckë_tcb
, 
tw_vb_poﬁ_t
 *
poﬁ
)

35 if((*
±r_vb_∑ckë_tcb
!=
NULL
Ë&& (
poﬁ
!=NULL)){

36 
tw_vb_∑ckë_tcb_t
 *
vb_∑ckë_tcb
 = *
±r_vb_∑ckë_tcb
;

37 
Êags
;

39 
	`•ö_lock_úqßve
(&
vb_∑ckë_tcb
->
lock
, 
Êags
);

40 if(
	`©omic_ªad
(&
vb_∑ckë_tcb
->
ªf_cou¡
) > 1){

41 
	`©omic_dec
(&
vb_∑ckë_tcb
->
ªf_cou¡
);

43 
tcb_node_t
 *
node
;

44 if(
vb_∑ckë_tcb
->
›
 !
NULL
){

45 
vb_∑ckë_tcb
->
›
->
	`ª£t
(vb_packet_tcb);

47 
node
 = &
vb_∑ckë_tcb
->
∑ckë_node
;

48 if(
node
->
›
 !
NULL
){

49 
node
->
›
->
	`ªÀa£
“ode, &
poﬁ
->
vb_∑ckë_poﬁ_tcb
);

52 *
±r_vb_∑ckë_tcb
 = 
NULL
;

53 
	`•ö_u∆ock_úqª°‹e
(&
vb_∑ckë_tcb
->
lock
, 
Êags
);

55 
	}
}

57 
	$tw_vb_∑ckë_tcb_ª„ªn˚
(
tw_vb_∑ckë_tcb_t
 *
§c_vb_∑ckë_tcb
,Åw_vb_∑ckë_tcb_à**
±r_de°_vb_∑ckë_tcb
)

59 if((
§c_vb_∑ckë_tcb
!=
NULL
Ë&& (
±r_de°_vb_∑ckë_tcb
!=NULL)){

60 
Êags
;

62 
	`•ö_lock_úqßve
(&
§c_vb_∑ckë_tcb
->
lock
, 
Êags
);

63 
	`©omic_öc
(&
§c_vb_∑ckë_tcb
->
ªf_cou¡
);

64 *
±r_de°_vb_∑ckë_tcb
 = 
§c_vb_∑ckë_tcb
;

65 
	`•ö_u∆ock_úqª°‹e
(&
§c_vb_∑ckë_tcb
->
lock
, 
Êags
);

67 
	}
}

69 
	$tw_vb_∑ckë_tcb_dma_m≠
(
tw_vb_∑ckë_tcb_t
 *
vb_∑ckë_tcb
, 
dma_d©a_dúe˘i⁄
 
dúe˘i⁄
)

71 if(
vb_∑ckë_tcb
 !
NULL
) {

72 if(
vb_∑ckë_tcb
->
d©a
 !
NULL
) {

73 
vb_∑ckë_tcb
->
dma_addr
 = 
	`dma_m≠_sögÀ
(
NULL
, vb_∑ckë_tcb->
d©a
, vb_∑ckë_tcb->
∑ckë_size
, 
dúe˘i⁄
);

74 i‡(
vb_∑ckë_tcb
->
dma_addr
 == 0){

75 
	`¥ötk
("%s.%dÉº\n", 
__FUNCTION__
, 
__LINE__
);

79 
	}
}

81 
	$tw_vb_∑ckë_tcb_dma_unm≠
(
tw_vb_∑ckë_tcb_t
 *
vb_∑ckë_tcb
, 
dma_d©a_dúe˘i⁄
 
dúe˘i⁄
)

83 if(
vb_∑ckë_tcb
 !
NULL
) {

84 i‡(
vb_∑ckë_tcb
->
dma_addr
 != 0) {

85 
	`dma_unm≠_sögÀ
(
NULL
, 
vb_∑ckë_tcb
->
dma_addr
, vb_∑ckë_tcb->
∑ckë_size
, 
dúe˘i⁄
);

86 
vb_∑ckë_tcb
->
dma_addr
 = 0;

89 
	}
}

91 
size_t
 
	$tw_vb_∑ckë_tcb_submô
(
tw_vb_∑ckë_tcb_t
 *
∑ckë
, 
__u£r
 *
d©a
, 
size_t
 
cou¡
, 
loff_t
 *
µos
, 
ö£π_03_°©e_machöe_t
 *
machöe
)

93 
loff_t
 
buf_off£t
 = 0;

94 
__u£r
 *
de°_d©a_±r
;

95 *
§c_d©a_±r
;

96 if(
∑ckë
 !
NULL
){

97 
machöe
->
å™s„r
 = 
∑ckë
->
∑ylﬂd_Àn
 -Öackë->
c⁄sumî_Àn
;

98 
§c_d©a_±r
 = 
∑ckë
->
d©a
 +Öackë->
c⁄sumî_Àn
;

99 
de°_d©a_±r
 = 
d©a
;

101 
	`c›y_to_u£r
(
de°_d©a_±r
, 
§c_d©a_±r
, 
machöe
->
å™s„r
);

102 
buf_off£t
 = 
machöe
->
å™s„r
;

104 *
µos
 +
buf_off£t
;

105  (
size_t
)
buf_off£t
;

106 
	}
}

108 
tw_vb_∑ckë_›î©i⁄
 
	gtw_vb_∑ckë_tcb_›
 = {

109 .
öô
 = 
tw_vb_∑ckë_tcb_öô
,

110 .
	gª£t
 = 
tw_vb_∑ckë_tcb_ª£t
,

111 .
	gªÀa£
 = 
tw_vb_∑ckë_tcb_ªÀa£
,

112 .
	gª„ªn˚
 = 
tw_vb_∑ckë_tcb_ª„ªn˚
,

114 .
	gdma_m≠
 = 
tw_vb_∑ckë_tcb_dma_m≠
,

115 .
	gdma_unm≠
 = 
tw_vb_∑ckë_tcb_dma_unm≠
,

117 .
	gsubmô
 = 
tw_vb_∑ckë_tcb_submô
,

120 
	$tw_vb_∑ckë_queue_gë
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
, 
tw_vb_∑ckë_tcb_t
 **
±r_vb_∑ckë_tcb
)

122 if((
vb_∑ckë_queue
!=
NULL
Ë&& (
±r_vb_∑ckë_tcb
!=NULL)){

123 
tcb_node_queue_t
 *
queue
;

124 *
±r_vb_∑ckë_tcb
 = 
NULL
;

125 
queue
 = &
vb_∑ckë_queue
->
queue_node
;

126 if(
queue
->
›
 !
NULL
){

127 
tcb_node_t
 *
ãmp_node
;

128 
queue
->
›
->
	`gë
(queue, &
ãmp_node
);

129 if(
ãmp_node
 !
NULL
){

130 *
±r_vb_∑ckë_tcb
 = 
	`to_vb_∑ckë_tcb
(
ãmp_node
);

134 
	}
}

136 
	$tw_vb_∑ckë_queue_åy_gë
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
, 
tw_vb_∑ckë_tcb_t
 **
±r_vb_∑ckë_tcb
)

138 if((
vb_∑ckë_queue
!=
NULL
Ë&& (
±r_vb_∑ckë_tcb
!=NULL)){

139 
tcb_node_queue_t
 *
queue
;

140 *
±r_vb_∑ckë_tcb
 = 
NULL
;

141 
queue
 = &
vb_∑ckë_queue
->
queue_node
;

142 if(
queue
->
›
 !
NULL
){

143 
tcb_node_t
 *
ãmp_node
;

144 
queue
->
›
->
	`åy_gë
(queue, &
ãmp_node
);

145 if(
ãmp_node
 !
NULL
){

146 *
±r_vb_∑ckë_tcb
 = 
	`to_vb_∑ckë_tcb
(
ãmp_node
);

150 
	}
}

152 
	$tw_vb_∑ckë_queue_gë_èûî
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
, 
tw_vb_∑ckë_tcb_t
 **
±r_vb_∑ckë_tcb
)

154 if((
vb_∑ckë_queue
!=
NULL
Ë&& (
±r_vb_∑ckë_tcb
!=NULL)){

155 
tcb_node_queue_t
 *
queue
;

156 *
±r_vb_∑ckë_tcb
 = 
NULL
;

157 
queue
 = &
vb_∑ckë_queue
->
queue_node
;

158 if(
queue
->
›
 !
NULL
){

159 
tcb_node_t
 *
ãmp_node
;

160 
queue
->
›
->
	`gë_èûî
(queue, &
ãmp_node
);

161 if(
ãmp_node
 !
NULL
){

162 *
±r_vb_∑ckë_tcb
 = 
	`to_vb_∑ckë_tcb
(
ãmp_node
);

166 
	}
}

168 
	$tw_vb_∑ckë_queue_åy_gë_èûî
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
, 
tw_vb_∑ckë_tcb_t
 **
±r_vb_∑ckë_tcb
)

170 if((
vb_∑ckë_queue
!=
NULL
Ë&& (
±r_vb_∑ckë_tcb
!=NULL)){

171 
tcb_node_queue_t
 *
queue
;

172 *
±r_vb_∑ckë_tcb
 = 
NULL
;

173 
queue
 = &
vb_∑ckë_queue
->
queue_node
;

174 if(
queue
->
›
 !
NULL
){

175 
tcb_node_t
 *
ãmp_node
;

176 
queue
->
›
->
	`åy_gë_èûî
(queue, &
ãmp_node
);

177 if(
ãmp_node
 !
NULL
){

178 *
±r_vb_∑ckë_tcb
 = 
	`to_vb_∑ckë_tcb
(
ãmp_node
);

182 
	}
}

184 
	$tw_vb_∑ckë_queue_put
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
, 
tw_vb_∑ckë_tcb_t
 *
vb_∑ckë_tcb
)

186 if((
vb_∑ckë_queue
!=
NULL
Ë&& (
vb_∑ckë_tcb
!=NULL)){

187 
tcb_node_queue_t
 *
queue
;

188 
queue
 = &
vb_∑ckë_queue
->
queue_node
;

189 if(
queue
->
›
 !
NULL
){

190 
queue
->
›
->
	`put
(queue, &
vb_∑ckë_tcb
->
∑ckë_node
);

191 
vb_∑ckë_tcb
->
id_of_∑ckë_queue
 = 
queue
->
›
->
	`gë_queue_cuº_íåy_numbî
(queue);

194 
	}
}

196 
	$tw_vb_∑ckë_queue_put_hódî
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
, 
tw_vb_∑ckë_tcb_t
 *
vb_∑ckë_tcb
)

198 if((
vb_∑ckë_queue
!=
NULL
Ë&& (
vb_∑ckë_tcb
!=NULL)){

199 
tcb_node_queue_t
 *
queue
;

200 
queue
 = &
vb_∑ckë_queue
->
queue_node
;

201 if(
queue
->
›
 !
NULL
){

202 
queue
->
›
->
	`put_hódî
(queue, &
vb_∑ckë_tcb
->
∑ckë_node
);

205 
	}
}

207 
	$tw_vb_∑ckë_queue_gë_cuº_¥odu˚r_‰om_poﬁ
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
, 
tw_vb_poﬁ_t
 *
poﬁ
)

209 if((
vb_∑ckë_queue
!=
NULL
Ë&& (
poﬁ
!=NULL)){

210 
Êags
;

211 
	`•ö_lock_úqßve
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

212 if(
vb_∑ckë_queue
->
cuº_¥odu˚r
 =
NULL
){

213 
	`•ö_u∆ock_úqª°‹e
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

214 if(
poﬁ
->
›
 !
NULL
){

215 
poﬁ
->
›
->
	`gë_∑ckë_tcb
’oﬁ, &
vb_∑ckë_queue
->
cuº_¥odu˚r
);

220 
	`•ö_lock_úqßve
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

222 
	`•ö_u∆ock_úqª°‹e
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

224 
	}
}

226 
	$tw_vb_∑ckë_queue_åy_gë_cuº_¥odu˚r_‰om_poﬁ
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
, 
tw_vb_poﬁ_t
 *
poﬁ
)

228 if((
vb_∑ckë_queue
!=
NULL
Ë&& (
poﬁ
!=NULL)){

229 
Êags
;

230 
	`•ö_lock_úqßve
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

231 if(
vb_∑ckë_queue
->
cuº_¥odu˚r
 =
NULL
){

232 if(
poﬁ
->
›
 !
NULL
){

233 
poﬁ
->
›
->
	`åy_gë_∑ckë_tcb
’oﬁ, &
vb_∑ckë_queue
->
cuº_¥odu˚r
);

239 
	`•ö_u∆ock_úqª°‹e
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

242 
	}
}

244 
	$tw_vb_∑ckë_queue_put_cuº_¥odu˚r_öto_queue
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
)

246 if(
vb_∑ckë_queue
 !
NULL
){

247 
Êags
;

248 
	`•ö_lock_úqßve
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

249 if(
vb_∑ckë_queue
->
cuº_¥odu˚r
 !
NULL
){

251 if(
vb_∑ckë_queue
->
›
 !
NULL
){

252 
vb_∑ckë_queue
->
›
->
	`put
(vb_∑ckë_queue, vb_∑ckë_queue->
cuº_¥odu˚r
);

254 
	`tw_vb_∑ckë_queue_put
(
vb_∑ckë_queue
, vb_∑ckë_queue->
cuº_¥odu˚r
);

256 
vb_∑ckë_queue
->
cuº_¥odu˚r
 = 
NULL
;

258 
	`•ö_u∆ock_úqª°‹e
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

260 
	}
}

262 
	$tw_vb_∑ckë_queue_ªÀa£_cuº_¥odu˚r
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
, 
tw_vb_poﬁ_t
 *
poﬁ
)

264 if((
vb_∑ckë_queue
!=
NULL
Ë&& (
poﬁ
!=NULL)){

265 
Êags
;

266 
	`•ö_lock_úqßve
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

267 if(
vb_∑ckë_queue
->
cuº_¥odu˚r
 !
NULL
){

268 if(
vb_∑ckë_queue
->
cuº_¥odu˚r
->
›
 !
NULL
){

269 
vb_∑ckë_queue
->
cuº_¥odu˚r
->
›
->
	`ªÀa£
(&vb_∑ckë_queue->cuº_¥odu˚r, 
poﬁ
);

271 
	`tw_vb_∑ckë_tcb_ªÀa£
(&
vb_∑ckë_queue
->
cuº_¥odu˚r
, 
poﬁ
);

274 
	`•ö_u∆ock_úqª°‹e
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

276 
	}
}

278 
	$tw_vb_∑ckë_queue_gë_cuº_c⁄sumî_‰om_queue
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
)

280 if(
vb_∑ckë_queue
 !
NULL
){

281 
Êags
;

282 
	`•ö_lock_úqßve
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

283 if(
vb_∑ckë_queue
->
cuº_c⁄sumî
 =
NULL
){

284 
	`•ö_u∆ock_úqª°‹e
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

285 if(
vb_∑ckë_queue
->
›
 !
NULL
){

286 
vb_∑ckë_queue
->
›
->
	`gë
(vb_∑ckë_queue, &vb_∑ckë_queue->
cuº_c⁄sumî
);

288 
	`tw_vb_∑ckë_queue_gë
(
vb_∑ckë_queue
, &vb_∑ckë_queue->
cuº_c⁄sumî
);

290 
	`•ö_lock_úqßve
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

292 
	`•ö_u∆ock_úqª°‹e
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

294 
	}
}

296 
	$tw_vb_∑ckë_queue_åy_gë_cuº_c⁄sumî_‰om_queue
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
)

298 if(
vb_∑ckë_queue
 !
NULL
){

299 
Êags
;

300 
	`•ö_lock_úqßve
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

301 if(
vb_∑ckë_queue
->
cuº_c⁄sumî
 =
NULL
){

302 if(
vb_∑ckë_queue
->
›
 !
NULL
){

303 
vb_∑ckë_queue
->
›
->
	`åy_gë
(vb_∑ckë_queue, &vb_∑ckë_queue->
cuº_c⁄sumî
);

305 
	`tw_vb_∑ckë_queue_åy_gë
(
vb_∑ckë_queue
, &vb_∑ckë_queue->
cuº_c⁄sumî
);

308 
	`•ö_u∆ock_úqª°‹e
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

310 
	}
}

312 
	$tw_vb_∑ckë_queue_ªÀa£_cuº_c⁄sumî
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
, 
tw_vb_poﬁ_t
 *
poﬁ
)

314 if((
vb_∑ckë_queue
!=
NULL
Ë&& (
poﬁ
!=NULL)){

315 
Êags
;

318 
	`•ö_lock_úqßve
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

319 if(
vb_∑ckë_queue
->
cuº_c⁄sumî
 !
NULL
){

320 if(
vb_∑ckë_queue
->
cuº_c⁄sumî
->
›
 !
NULL
){

321 
vb_∑ckë_queue
->
cuº_c⁄sumî
->
›
->
	`ªÀa£
(&vb_∑ckë_queue->cuº_c⁄sumî, 
poﬁ
);

323 
	`tw_vb_∑ckë_tcb_ªÀa£
(&
vb_∑ckë_queue
->
cuº_c⁄sumî
, 
poﬁ
);

326 
	`•ö_u∆ock_úqª°‹e
(&
vb_∑ckë_queue
->
lock
, 
Êags
);

330 
	}
}

332 
	$tw_vb_∑ckë_queue_gë_cuº_queue_íåy_numbî
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
)

334 
íåy_numbî
 = 0;

335 if(
vb_∑ckë_queue
!=
NULL
){

336 
tcb_node_queue_t
 *
queue
;

337 
queue
 = &
vb_∑ckë_queue
->
queue_node
;

338 if(
queue
->
›
 !
NULL
){

339 
íåy_numbî
 = 
queue
->
›
->
	`gë_queue_cuº_íåy_numbî
(queue);

342  
íåy_numbî
;

343 
	}
}

345 
	$tw_vb_∑ckë_queue_ªÀa£
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
, 
tw_vb_poﬁ_t
 *
poﬁ
)

347 if((
vb_∑ckë_queue
!=
NULL
Ë&& (
poﬁ
!=NULL)){

348 
	`tw_de°roy_∑ckë_tcb_queue
(
vb_∑ckë_queue
, 
poﬁ
);

350 
	}
}

352 
	$tw_vb_∑ckë_queue_öô
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
)

354 if(
vb_∑ckë_queue
 !
NULL
){

355 
tcb_node_queue_t
 *
queue
;

356 
queue
 = &
vb_∑ckë_queue
->
queue_node
;

357 
queue
->
›
 = &
tcb_node_queue_›
;

358 
queue
->
›
->
	`öô
(queue);

359 
vb_∑ckë_queue
->
cuº_c⁄sumî
 = 
NULL
;

360 
vb_∑ckë_queue
->
cuº_¥odu˚r
 = 
NULL
;

361 
vb_∑ckë_queue
->
°¨t_time°amp
 = 0;

362 
vb_∑ckë_queue
->
tŸÆ_duøti⁄
 = 0;

363 
	`•ö_lock_öô
(&
vb_∑ckë_queue
->
lock
);

365 
	}
}

367 
tw_vb_∑ckë_queue_›î©i⁄
 
	gtw_vb_∑ckë_queue_›
 = {

368 .
gë
 = 
tw_vb_∑ckë_queue_gë
,

369 .
	gåy_gë
 = 
tw_vb_∑ckë_queue_åy_gë
,

370 .
	ggë_èûî
 = 
tw_vb_∑ckë_queue_gë_èûî
,

371 .
	gåy_gë_èûî
 = 
tw_vb_∑ckë_queue_åy_gë_èûî
,

372 .
	gput
 = 
tw_vb_∑ckë_queue_put
,

373 .
	gput_hódî
 = 
tw_vb_∑ckë_queue_put_hódî
,

375 .
	ggë_cuº_¥odu˚r_‰om_poﬁ
 = 
tw_vb_∑ckë_queue_gë_cuº_¥odu˚r_‰om_poﬁ
,

376 .
	gåy_gë_cuº_¥odu˚r_‰om_poﬁ
 = 
tw_vb_∑ckë_queue_åy_gë_cuº_¥odu˚r_‰om_poﬁ
,

377 .
	gput_cuº_¥odu˚r_öto_queue
 = 
tw_vb_∑ckë_queue_put_cuº_¥odu˚r_öto_queue
,

378 .
	gªÀa£_cuº_¥odu˚r
 = 
tw_vb_∑ckë_queue_ªÀa£_cuº_¥odu˚r
,

379 .
	ggë_cuº_c⁄sumî_‰om_queue
 = 
tw_vb_∑ckë_queue_gë_cuº_c⁄sumî_‰om_queue
,

380 .
	gåy_gë_cuº_c⁄sumî_‰om_queue
 = 
tw_vb_∑ckë_queue_åy_gë_cuº_c⁄sumî_‰om_queue
,

381 .
	gªÀa£_cuº_c⁄sumî
 = 
tw_vb_∑ckë_queue_ªÀa£_cuº_c⁄sumî
,

383 .
	ggë_cuº_queue_íåy_numbî
 = 
tw_vb_∑ckë_queue_gë_cuº_queue_íåy_numbî
,

384 .
	gªÀa£
 = 
tw_vb_∑ckë_queue_ªÀa£
,

385 .
	göô
 = 
tw_vb_∑ckë_queue_öô
,

388 
	$tw_¸óã_∑ckë_tcb_queue
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
)

390 if(
vb_∑ckë_queue
 !
NULL
){

391 
vb_∑ckë_queue
->
›
 = &
tw_vb_∑ckë_queue_›
;

392 
vb_∑ckë_queue
->
›
->
	`öô
(vb_packet_queue);

394 
	}
}

396 
	$tw_de°roy_∑ckë_tcb_queue
(
tw_vb_∑ckë_tcb_queue_t
 *
vb_∑ckë_queue
, 
tw_vb_poﬁ_t
 *
poﬁ
)

398 if((
vb_∑ckë_queue
!=
NULL
Ë&& (
poﬁ
!=NULL)){

399 if(
vb_∑ckë_queue
->
›
 !
NULL
){

400 
vb_∑ckë_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(vb_packet_queue);

401 
vb_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(vb_∑ckë_queue, 
poﬁ
);

402 
vb_∑ckë_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(vb_packet_queue)){

403 
vb_∑ckë_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(vb_packet_queue);

404 if(
vb_∑ckë_queue
->
cuº_c⁄sumî
 =
NULL
){

407 
vb_∑ckë_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(vb_∑ckë_queue, 
poﬁ
);

410 
	`tw_vb_∑ckë_queue_put_cuº_¥odu˚r_öto_queue
(
vb_∑ckë_queue
);

411 
	`tw_vb_∑ckë_queue_ªÀa£_cuº_c⁄sumî
(
vb_∑ckë_queue
, 
poﬁ
);

412 
	`tw_vb_∑ckë_queue_gë_cuº_queue_íåy_numbî
(
vb_∑ckë_queue
)){

413 
	`tw_vb_∑ckë_queue_gë_cuº_c⁄sumî_‰om_queue
(
vb_∑ckë_queue
);

414 if(
vb_∑ckë_queue
->
cuº_c⁄sumî
 =
NULL
){

417 
	`tw_vb_∑ckë_queue_ªÀa£_cuº_c⁄sumî
(
vb_∑ckë_queue
, 
poﬁ
);

421 
	}
}

423 
	$tw_vb_‰ame_tcb_«l_öô
(
h264_«l_t
 *
«l
)

425 if(
«l
 !
NULL
){

426 
	`mem£t
(
«l
, 0, (
h264_«l_t
));

427 
«l
->
•s_∑ylﬂd
 =ÇÆ->
µs_∑ylﬂd
 =ÇÆ->
¶i˚_∑ylﬂd
 =ÇÆ->
¶i˚_hód_buf
;

428 
«l
->
•s_∑ysize
 =ÇÆ->
µs_∑ysize
 =ÇÆ->
¶i˚_∑ysize
 = 0;

430 
	}
}

432 
	$tw_vb_‰ame_tcb_öô
(
tw_vb_‰ame_tcb_t
 *
‰ame
)

434 if(
‰ame
!=
NULL
){

435 
tcb_node_t
 *
node
 = &
‰ame
->
‰ame_node
;

436 
node
->
›
 = &
tcb_node_›
;

437 
node
->
›
->
	`öô
(node);

438 
node
->
›
->
	`£t_¥iv
“ode, 
‰ame
);

440 
	`•ö_lock_öô
(&
‰ame
->
lock
);

441 
	`©omic_£t
(&
‰ame
->
ªf_cou¡
, 0);

442 
‰ame
->
‰ame_ty≥
 = 
H264_FRAME_TYPE_IDR
;

443 
	`tw_vb_‰ame_tcb_«l_öô
(&
‰ame
->
«l
);

444 
‰ame
->
‰ame_Àn
 = 0;

445 
‰ame
->
c⁄sumî_‰ame_off£t
 = 0;

446 
‰ame
->
time°amp
 = 0;

447 
‰ame
->
i_öô_qp
 = 
DEFAULT_QP
;

448 
‰ame
->
i_cuº_qp
 = 0;

449 
‰ame
->
i_mb_x
 = 0;

450 
‰ame
->
i_mb_y
 = 0;

451 
‰ame
->
‰ame_numbî
 = 0;

452 
‰ame
->
‰ame_is_îr
 = 0;

453 
‰ame
->
‰ame_Êags
 = 0;

454 
	`tw_¸óã_∑ckë_tcb_queue
(&
‰ame
->
vb_∑ckë_queue
);

456 
	}
}

458 
	$tw_vb_‰ame_tcb_ª£t
(
tw_vb_‰ame_tcb_t
 *
‰ame
)

460 if(
‰ame
 !
NULL
){

461 
	`©omic_£t
(&
‰ame
->
ªf_cou¡
, 0);

462 
‰ame
->
‰ame_ty≥
 = 
H264_FRAME_TYPE_IDR
;

463 
	`tw_vb_‰ame_tcb_«l_öô
(&
‰ame
->
«l
);

464 
‰ame
->
‰ame_Àn
 = 0;

465 
‰ame
->
c⁄sumî_‰ame_off£t
 = 0;

466 
‰ame
->
time°amp
 = 0;

467 
‰ame
->
i_öô_qp
 = 
DEFAULT_QP
;

468 
‰ame
->
i_cuº_qp
 = 0;

469 
‰ame
->
i_mb_x
 = 0;

470 
‰ame
->
i_mb_y
 = 0;

471 
‰ame
->
‰ame_numbî
 = 0;

472 
‰ame
->
‰ame_is_îr
 = 0;

473 
‰ame
->
‰ame_Êags
 = 0;

475 
	}
}

477 
	$tw_vb_‰ame_tcb_ªÀa£
(
tw_vb_‰ame_tcb_t
 **
±r_‰ame
, 
tw_vb_poﬁ_t
 *
poﬁ
)

479 if(
±r_‰ame
 !
NULL
){

480 
tw_vb_‰ame_tcb_t
 *
‰ame
 = *
±r_‰ame
;

481 
Êags
;

482 if(
poﬁ
 =
NULL
){

483 
poﬁ
 = 
‰ame
->pool;

485 
	`•ö_lock_úqßve
(&
‰ame
->
lock
, 
Êags
);

486 if(
	`©omic_ªad
(&
‰ame
->
ªf_cou¡
) > 1){

487 
	`©omic_dec
(&
‰ame
->
ªf_cou¡
);

489 
tcb_node_t
 *
node
;

490 if(
‰ame
->
›
 !
NULL
){

491 
‰ame
->
›
->
	`ª£t
(frame);

493 if(
‰ame
->
vb_∑ckë_queue
.
›
 !
NULL
){

494 
‰ame
->
vb_∑ckë_queue
.
›
->
	`ªÀa£
(&‰ame->vb_∑ckë_queue, 
poﬁ
);

496 
	`tw_vb_∑ckë_queue_ªÀa£
(&
‰ame
->
vb_∑ckë_queue
, 
poﬁ
);

498 
node
 = &
‰ame
->
‰ame_node
;

499 if(
node
->
›
 !
NULL
){

500 
node
->
›
->
	`ªÀa£
“ode, &
poﬁ
->
vb_‰ame_poﬁ_tcb
);

503 *
±r_‰ame
 = 
NULL
;

504 
	`•ö_u∆ock_úqª°‹e
(&
‰ame
->
lock
, 
Êags
);

506 
	}
}

508 
	$tw_vb_‰ame_tcb_ª„ªn˚
(
tw_vb_‰ame_tcb_t
 *
§c_‰ame
,Åw_vb_‰ame_tcb_à**
±r_de°_‰ame
)

510 if((
§c_‰ame
!=
NULL
Ë&& (
±r_de°_‰ame
!=NULL)){

511 
Êags
;

512 
	`•ö_lock_úqßve
(&
§c_‰ame
->
lock
, 
Êags
);

513 
	`©omic_öc
(&
§c_‰ame
->
ªf_cou¡
);

514 *
±r_de°_‰ame
 = 
§c_‰ame
;

515 
	`•ö_u∆ock_úqª°‹e
(&
§c_‰ame
->
lock
, 
Êags
);

517 
	}
}

519 
tw_vb_‰ame_tcb_›î©i⁄
 
	gtw_vb_‰ame_tcb_›
 = {

520 .
öô
 = 
tw_vb_‰ame_tcb_öô
,

521 .
	gª£t
 = 
tw_vb_‰ame_tcb_ª£t
,

522 .
	gªÀa£
 = 
tw_vb_‰ame_tcb_ªÀa£
,

523 .
	gª„ªn˚
 = 
tw_vb_‰ame_tcb_ª„ªn˚
,

525 .
	gsubmô
 = 
NULL
,

528 
	$tw_vb_‰ame_queue_gë
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
, 
tw_vb_‰ame_tcb_t
 **
±r_‰ame
)

530 if((
vb_‰ame_tcb_queue
!=
NULL
Ë&& (
±r_‰ame
!=NULL)){

531 
tcb_node_queue_t
 *
queue
;

532 *
±r_‰ame
 = 
NULL
;

533 
queue
 = &
vb_‰ame_tcb_queue
->
queue_node
;

534 if(
queue
->
›
 !
NULL
){

535 
tcb_node_t
 *
ãmp_node
;

536 
queue
->
›
->
	`gë
(queue, &
ãmp_node
);

537 if(
ãmp_node
 !
NULL
){

538 *
±r_‰ame
 = 
	`to_vb_‰ame_tcb
(
ãmp_node
);

542 
	`¥ötk
("\n%s.%d**©ã¡i⁄**\n", 
__FUNCTION__
, 
__LINE__
);

544 
	}
}

546 
	$tw_vb_‰ame_queue_åy_gë
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
, 
tw_vb_‰ame_tcb_t
 **
±r_‰ame
)

548 if((
vb_‰ame_tcb_queue
!=
NULL
Ë&& (
±r_‰ame
!=NULL)){

549 
tcb_node_queue_t
 *
queue
;

550 *
±r_‰ame
 = 
NULL
;

551 
queue
 = &
vb_‰ame_tcb_queue
->
queue_node
;

552 if(
queue
->
›
 !
NULL
){

553 
tcb_node_t
 *
ãmp_node
;

554 
queue
->
›
->
	`åy_gë
(queue, &
ãmp_node
);

555 if(
ãmp_node
 !
NULL
){

556 *
±r_‰ame
 = 
	`to_vb_‰ame_tcb
(
ãmp_node
);

560 
	}
}

562 
	$tw_vb_‰ame_queue_gë_èûî
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
, 
tw_vb_‰ame_tcb_t
 **
±r_‰ame
)

564 if((
vb_‰ame_tcb_queue
!=
NULL
Ë&& (
±r_‰ame
!=NULL)){

565 
tcb_node_queue_t
 *
queue
;

566 *
±r_‰ame
 = 
NULL
;

567 
queue
 = &
vb_‰ame_tcb_queue
->
queue_node
;

568 if(
queue
->
›
 !
NULL
){

569 
tcb_node_t
 *
ãmp_node
;

570 
queue
->
›
->
	`gë_èûî
(queue, &
ãmp_node
);

571 if(
ãmp_node
 !
NULL
){

572 *
±r_‰ame
 = 
	`to_vb_‰ame_tcb
(
ãmp_node
);

576 
	}
}

578 
	$tw_vb_‰ame_queue_åy_gë_èûî
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
, 
tw_vb_‰ame_tcb_t
 **
±r_‰ame
)

580 if((
vb_‰ame_tcb_queue
!=
NULL
Ë&& (
±r_‰ame
!=NULL)){

581 
tcb_node_queue_t
 *
queue
;

582 *
±r_‰ame
 = 
NULL
;

583 
queue
 = &
vb_‰ame_tcb_queue
->
queue_node
;

584 if(
queue
->
›
 !
NULL
){

585 
tcb_node_t
 *
ãmp_node
;

586 
queue
->
›
->
	`åy_gë_èûî
(queue, &
ãmp_node
);

587 if(
ãmp_node
 !
NULL
){

588 *
±r_‰ame
 = 
	`to_vb_‰ame_tcb
(
ãmp_node
);

592 
	}
}

594 
	$tw_vb_‰ame_queue_put
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
, 
tw_vb_‰ame_tcb_t
 *
‰ame
)

596 if((
vb_‰ame_tcb_queue
!=
NULL
Ë&& (
‰ame
!=NULL)){

597 
tcb_node_queue_t
 *
queue
;

598 
queue
 = &
vb_‰ame_tcb_queue
->
queue_node
;

599 if(
queue
->
›
 !
NULL
){

600 
queue
->
›
->
	`put
(queue, &
‰ame
->
‰ame_node
);

603 
	}
}

605 
	$tw_vb_‰ame_queue_put_hódî
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
, 
tw_vb_‰ame_tcb_t
 *
‰ame
)

607 if((
vb_‰ame_tcb_queue
!=
NULL
Ë&& (
‰ame
!=NULL)){

608 
tcb_node_queue_t
 *
queue
;

609 
queue
 = &
vb_‰ame_tcb_queue
->
queue_node
;

610 if(
queue
->
›
 !
NULL
){

611 
queue
->
›
->
	`put_hódî
(queue, &
‰ame
->
‰ame_node
);

614 
	}
}

616 
	$tw_vb_‰ame_queue_gë_cuº_¥odu˚r_‰om_poﬁ
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
, 
tw_vb_poﬁ_t
 *
poﬁ
)

618 if((
vb_‰ame_tcb_queue
!=
NULL
Ë&& (
poﬁ
!=NULL)){

619 
Êags
;

620 
	`•ö_lock_úqßve
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

621 if(
vb_‰ame_tcb_queue
->
cuº_¥odu˚r
 =
NULL
){

622 
	`¥ötk
("%s,%d: gëá j≥g føme!\n", 
__FUNCTION__
, 
__LINE__
);

623 
	`•ö_u∆ock_úqª°‹e
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

624 if(
poﬁ
->
›
 !
NULL
){

625 
poﬁ
->
›
->
	`gë_‰ame_tcb
’oﬁ, &
vb_‰ame_tcb_queue
->
cuº_¥odu˚r
);

627 
	`•ö_lock_úqßve
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

629 
	`•ö_u∆ock_úqª°‹e
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

631 
	}
}

633 
	$tw_vb_‰ame_queue_åy_gë_cuº_¥odu˚r_‰om_poﬁ
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
, 
tw_vb_poﬁ_t
 *
poﬁ
)

635 if((
vb_‰ame_tcb_queue
!=
NULL
Ë&& (
poﬁ
!=NULL)){

636 
Êags
;

637 
	`•ö_lock_úqßve
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

638 if(
vb_‰ame_tcb_queue
->
cuº_¥odu˚r
 =
NULL
){

639 if(
poﬁ
->
›
 !
NULL
){

641 
poﬁ
->
›
->
	`åy_gë_‰ame_tcb
’oﬁ, &
vb_‰ame_tcb_queue
->
cuº_¥odu˚r
);

644 
	`•ö_u∆ock_úqª°‹e
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

646 
	}
}

648 
	$tw_vb_‰ame_queue_put_cuº_¥odu˚r_öto_queue
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
)

650 if(
vb_‰ame_tcb_queue
 !
NULL
){

651 
Êags
;

652 
	`•ö_lock_úqßve
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

653 if(
vb_‰ame_tcb_queue
->
cuº_¥odu˚r
 !
NULL
){

654 if(
vb_‰ame_tcb_queue
->
›
 !
NULL
){

655 
vb_‰ame_tcb_queue
->
›
->
	`put
(vb_‰ame_tcb_queue, vb_‰ame_tcb_queue->
cuº_¥odu˚r
);

657 
	`tw_vb_‰ame_queue_put
(
vb_‰ame_tcb_queue
, vb_‰ame_tcb_queue->
cuº_¥odu˚r
);

659 
vb_‰ame_tcb_queue
->
cuº_¥odu˚r
 = 
NULL
;

661 
	`•ö_u∆ock_úqª°‹e
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

663 
	}
}

665 
	$tw_vb_‰ame_queue_ªÀa£_cuº_¥odu˚r
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
, 
tw_vb_poﬁ_t
 *
poﬁ
)

667 if((
vb_‰ame_tcb_queue
!=
NULL
Ë&& (
poﬁ
!=NULL)){

668 
Êags
;

669 
	`•ö_lock_úqßve
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

670 if(
vb_‰ame_tcb_queue
->
cuº_¥odu˚r
 !
NULL
){

671 if(
vb_‰ame_tcb_queue
->
cuº_¥odu˚r
->
›
 !
NULL
){

672 
vb_‰ame_tcb_queue
->
cuº_¥odu˚r
->
›
->
	`ªÀa£
(&vb_‰ame_tcb_queue->cuº_¥odu˚r, 
poﬁ
);

674 
	`tw_vb_‰ame_tcb_ªÀa£
(&
vb_‰ame_tcb_queue
->
cuº_¥odu˚r
, 
poﬁ
);

677 
	`•ö_u∆ock_úqª°‹e
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

679 
	}
}

681 
	$tw_vb_‰ame_queue_gë_cuº_c⁄sumî_‰om_queue
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
)

683 if(
vb_‰ame_tcb_queue
 !
NULL
){

684 
Êags
;

685 
	`•ö_lock_úqßve
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

686 if(
vb_‰ame_tcb_queue
->
cuº_c⁄sumî
 =
NULL
){

687 
	`•ö_u∆ock_úqª°‹e
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

688 if(
vb_‰ame_tcb_queue
->
›
 !
NULL
){

689 
vb_‰ame_tcb_queue
->
›
->
	`gë
(vb_‰ame_tcb_queue, &vb_‰ame_tcb_queue->
cuº_c⁄sumî
);

691 
	`tw_vb_‰ame_queue_gë
(
vb_‰ame_tcb_queue
, &vb_‰ame_tcb_queue->
cuº_c⁄sumî
);

693 
	`•ö_lock_úqßve
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

695 
	`•ö_u∆ock_úqª°‹e
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

697 
	`¥ötk
("\n%s.%d**©ã¡i⁄**\n", 
__FUNCTION__
, 
__LINE__
);

699 
	}
}

701 
	$tw_vb_‰ame_queue_åy_gë_cuº_c⁄sumî_‰om_queue
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
)

703 if(
vb_‰ame_tcb_queue
 !
NULL
){

704 
Êags
;

705 
	`•ö_lock_úqßve
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

706 if(
vb_‰ame_tcb_queue
->
cuº_c⁄sumî
 =
NULL
){

707 if(
vb_‰ame_tcb_queue
->
›
 !
NULL
){

708 
vb_‰ame_tcb_queue
->
›
->
	`åy_gë
(vb_‰ame_tcb_queue, &vb_‰ame_tcb_queue->
cuº_c⁄sumî
);

710 
	`tw_vb_‰ame_queue_åy_gë
(
vb_‰ame_tcb_queue
, &vb_‰ame_tcb_queue->
cuº_c⁄sumî
);

713 
	`•ö_u∆ock_úqª°‹e
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

715 
	}
}

717 
	$tw_vb_‰ame_queue_ªÀa£_cuº_c⁄sumî
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
, 
tw_vb_poﬁ_t
 *
poﬁ
)

719 if((
vb_‰ame_tcb_queue
!=
NULL
Ë&& (
poﬁ
!=NULL)){

720 
Êags
;

721 
	`•ö_lock_úqßve
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

722 if(
vb_‰ame_tcb_queue
->
cuº_c⁄sumî
 !
NULL
){

723 if(
vb_‰ame_tcb_queue
->
cuº_c⁄sumî
->
›
 !
NULL
){

725 
vb_‰ame_tcb_queue
->
cuº_c⁄sumî
->
›
->
	`ªÀa£
(&vb_‰ame_tcb_queue->cuº_c⁄sumî, 
poﬁ
);

727 
	`tw_vb_‰ame_tcb_ªÀa£
(&
vb_‰ame_tcb_queue
->
cuº_c⁄sumî
, 
poﬁ
);

730 
	`•ö_u∆ock_úqª°‹e
(&
vb_‰ame_tcb_queue
->
lock
, 
Êags
);

732 
	}
}

734 
	$tw_vb_‰ame_queue_gë_cuº_queue_íåy_numbî
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
)

736 
íåy_numbî
 = 0;

737 if(
vb_‰ame_tcb_queue
!=
NULL
){

738 
tcb_node_queue_t
 *
queue
;

739 
queue
 = &
vb_‰ame_tcb_queue
->
queue_node
;

740 if(
queue
->
›
 !
NULL
){

741 
íåy_numbî
 = 
queue
->
›
->
	`gë_queue_cuº_íåy_numbî
(queue);

744  
íåy_numbî
;

745 
	}
}

747 
	$tw_vb_‰ame_queue_ªÀa£
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
, 
tw_vb_poﬁ_t
 *
poﬁ
)

749 if((
vb_‰ame_tcb_queue
!=
NULL
Ë&& (
poﬁ
!=NULL)){

750 
	`tw_de°roy_‰ame_tcb_queue
(
vb_‰ame_tcb_queue
, 
poﬁ
);

752 
	}
}

754 
	$tw_vb_‰ame_queue_öô
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
)

756 if(
vb_‰ame_tcb_queue
 !
NULL
){

757 
tcb_node_queue_t
 *
queue
;

758 
queue
 = &
vb_‰ame_tcb_queue
->
queue_node
;

759 
queue
->
›
 = &
tcb_node_queue_›
;

760 
queue
->
›
->
	`öô
(queue);

761 
vb_‰ame_tcb_queue
->
cuº_c⁄sumî
 = 
NULL
;

762 
vb_‰ame_tcb_queue
->
cuº_¥odu˚r
 = 
NULL
;

763 
vb_‰ame_tcb_queue
->
°¨t_time°amp
 = 0;

764 
vb_‰ame_tcb_queue
->
tŸÆ_duøti⁄
 = 0;

765 
	`•ö_lock_öô
(&
vb_‰ame_tcb_queue
->
lock
);

767 
	}
}

769 
tw_vb_‰ame_queue_›î©i⁄
 
	gtw_vb_‰ame_queue_›
 = {

770 .
gë
 = 
tw_vb_‰ame_queue_gë
,

771 .
	gåy_gë
 = 
tw_vb_‰ame_queue_åy_gë
,

772 .
	ggë_èûî
 = 
tw_vb_‰ame_queue_gë_èûî
,

773 .
	gåy_gë_èûî
 = 
tw_vb_‰ame_queue_åy_gë_èûî
,

774 .
	gput
 = 
tw_vb_‰ame_queue_put
,

775 .
	gput_hódî
 = 
tw_vb_‰ame_queue_put_hódî
,

777 .
	ggë_cuº_¥odu˚r_‰om_poﬁ
 = 
tw_vb_‰ame_queue_gë_cuº_¥odu˚r_‰om_poﬁ
,

778 .
	gåy_gë_cuº_¥odu˚r_‰om_poﬁ
 = 
tw_vb_‰ame_queue_åy_gë_cuº_¥odu˚r_‰om_poﬁ
,

779 .
	gput_cuº_¥odu˚r_öto_queue
 = 
tw_vb_‰ame_queue_put_cuº_¥odu˚r_öto_queue
,

780 .
	gªÀa£_cuº_¥odu˚r
 = 
tw_vb_‰ame_queue_ªÀa£_cuº_¥odu˚r
,

781 .
	ggë_cuº_c⁄sumî_‰om_queue
 = 
tw_vb_‰ame_queue_gë_cuº_c⁄sumî_‰om_queue
,

782 .
	gåy_gë_cuº_c⁄sumî_‰om_queue
 = 
tw_vb_‰ame_queue_åy_gë_cuº_c⁄sumî_‰om_queue
,

783 .
	gªÀa£_cuº_c⁄sumî
 = 
tw_vb_‰ame_queue_ªÀa£_cuº_c⁄sumî
,

785 .
	ggë_cuº_queue_íåy_numbî
 = 
tw_vb_‰ame_queue_gë_cuº_queue_íåy_numbî
,

786 .
	gªÀa£
 = 
tw_vb_‰ame_queue_ªÀa£
,

787 .
	göô
 = 
tw_vb_‰ame_queue_öô
,

790 
	$tw_¸óã_‰ame_tcb_queue
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
)

792 if(
vb_‰ame_tcb_queue
 !
NULL
){

793 
vb_‰ame_tcb_queue
->
›
 = &
tw_vb_‰ame_queue_›
;

794 
vb_‰ame_tcb_queue
->
›
->
	`öô
(vb_frame_tcb_queue);

796 
	}
}

798 
	$tw_de°roy_‰ame_tcb_queue
(
tw_vb_‰ame_tcb_queue_t
 *
vb_‰ame_tcb_queue
, 
tw_vb_poﬁ_t
 *
poﬁ
)

800 if((
vb_‰ame_tcb_queue
!=
NULL
Ë&& (
poﬁ
!=NULL)){

801 if(
vb_‰ame_tcb_queue
->
›
 !
NULL
){

802 
vb_‰ame_tcb_queue
->
›
->
	`put_cuº_¥odu˚r_öto_queue
(vb_frame_tcb_queue);

803 
vb_‰ame_tcb_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(vb_‰ame_tcb_queue, 
poﬁ
);

804 
vb_‰ame_tcb_queue
->
›
->
	`gë_cuº_queue_íåy_numbî
(vb_frame_tcb_queue)){

805 
vb_‰ame_tcb_queue
->
›
->
	`gë_cuº_c⁄sumî_‰om_queue
(vb_frame_tcb_queue);

806 if(
vb_‰ame_tcb_queue
->
cuº_c⁄sumî
 =
NULL
){

809 
vb_‰ame_tcb_queue
->
›
->
	`ªÀa£_cuº_c⁄sumî
(vb_‰ame_tcb_queue, 
poﬁ
);

812 
	`tw_vb_‰ame_queue_put_cuº_¥odu˚r_öto_queue
(
vb_‰ame_tcb_queue
);

813 
	`tw_vb_‰ame_queue_ªÀa£_cuº_c⁄sumî
(
vb_‰ame_tcb_queue
, 
poﬁ
);

814 
	`tw_vb_‰ame_queue_gë_cuº_queue_íåy_numbî
(
vb_‰ame_tcb_queue
)){

815 
	`tw_vb_‰ame_queue_gë_cuº_c⁄sumî_‰om_queue
(
vb_‰ame_tcb_queue
);

816 if(
vb_‰ame_tcb_queue
->
cuº_c⁄sumî
 =
NULL
){

819 
	`tw_vb_‰ame_queue_ªÀa£_cuº_c⁄sumî
(
vb_‰ame_tcb_queue
, 
poﬁ
);

823 
	}
}

826 
	$tw_poﬁ_¸óã
(
tw_vb_poﬁ_t
 *
poﬁ
, *
submô
, 
buf_Àn
)

828 
ªt
 = 
TW_ERR
;

830 if(
poﬁ
 !
NULL
){

831 
tcb_node_poﬁ_t
 *
node_poﬁ
;

832 
tw_vb_∑ckë_tcb_t
 *
±r_vb_∑ckë_tcb
;

833 
tw_vb_‰ame_tcb_t
 *
±r_vb_‰ame_tcb
;

834 
i
;

836 
poﬁ
->
ˇche_‹dî
 = 
	`gë_‹dî
(
buf_Àn
);

837 
poﬁ
->
ˇche_buf„r
 = (
u8
*)
	`__gë_‰ì_∑ges
(
GFP_KERNEL
,Öoﬁ->
ˇche_‹dî
);

838 if(
poﬁ
->
ˇche_buf„r
 =
NULL
) {

839 
poﬁ
->
ˇche_‹dî
 = 0;

840 
	`¥ötk
("ˇn'àÆlo¯%dÖage†f‹ vb bu‡poﬁ\n", 
poﬁ
->
ˇche_‹dî
);

841  -
ENOMEM
;

844 
poﬁ
->
vb_∑ckë_íåy_numbî
 = 1;

845 
i
=0; i<
poﬁ
->
ˇche_‹dî
; i++){

846 
poﬁ
->
vb_∑ckë_íåy_numbî
 <<= 1;

848 
poﬁ
->
vb_∑ckë_buf„r_size
 = 
PAGE_SIZE
;

849 
node_poﬁ
 = &
poﬁ
->
vb_∑ckë_poﬁ_tcb
;

850 
node_poﬁ
->
›
 = &
tcb_node_poﬁ_›
;

851 
poﬁ
->
vb_∑ckë_íåy_poﬁ
 = (
tw_vb_∑ckë_tcb_t
*)
	`kmÆloc
(—w_vb_∑ckë_tcb_t)*poﬁ->
vb_∑ckë_íåy_numbî
, 
GFP_KERNEL
);

852 if(
poﬁ
->
vb_∑ckë_íåy_poﬁ
 =
NULL
){

853 
	`‰ì_∑ges
(()
poﬁ
->
ˇche_buf„r
,Öoﬁ->
ˇche_‹dî
);

854 
poﬁ
->
ˇche_buf„r
 = 
NULL
;

855 
poﬁ
->
ˇche_‹dî
 = 0;

856 
	`¥ötk
("can'tálloc vbÖacketÅcb\n");

857  -
ENOMEM
;

859 
node_poﬁ
->
›
->
	`öô
“ode_poﬁ, 
poﬁ
->
vb_∑ckë_íåy_numbî
);

860 
i
=0; i<
poﬁ
->
vb_∑ckë_íåy_numbî
; i++){

861 
±r_vb_∑ckë_tcb
 = &
poﬁ
->
vb_∑ckë_íåy_poﬁ
[
i
];

862 
±r_vb_∑ckë_tcb
->
›
 = &
tw_vb_∑ckë_tcb_›
;

863 
±r_vb_∑ckë_tcb
->
›
->
	`öô
’å_vb_∑ckë_tcb, 
poﬁ
, 
i
);

864 
±r_vb_∑ckë_tcb
->
›
->
	`ªÀa£
(&±r_vb_∑ckë_tcb, 
poﬁ
);

867 
poﬁ
->
vb_‰ame_íåy_numbî
 =Öoﬁ->
vb_∑ckë_íåy_numbî
;

868 
node_poﬁ
 = &
poﬁ
->
vb_‰ame_poﬁ_tcb
;

869 
node_poﬁ
->
›
 = &
tcb_node_poﬁ_›
;

870 
poﬁ
->
vb_‰ame_íåy_poﬁ
 = (
tw_vb_‰ame_tcb_t
*)
	`kmÆloc
(—w_vb_‰ame_tcb_t)*poﬁ->
vb_‰ame_íåy_numbî
, 
GFP_KERNEL
);

871 if(
poﬁ
->
vb_‰ame_íåy_poﬁ
 =
NULL
){

872 
node_poﬁ
 = &
poﬁ
->
vb_∑ckë_poﬁ_tcb
;

873 
node_poﬁ
->
›
->
	`ªÀa£
(node_pool);

874 
	`k‰ì
(
poﬁ
->
vb_∑ckë_íåy_poﬁ
);

875 
poﬁ
->
vb_∑ckë_íåy_poﬁ
 = 
NULL
;

876 
poﬁ
->
vb_∑ckë_íåy_numbî
 = 0;

877 
	`‰ì_∑ges
(()
poﬁ
->
ˇche_buf„r
,Öoﬁ->
ˇche_‹dî
);

878 
poﬁ
->
ˇche_buf„r
 = 
NULL
;

879 
poﬁ
->
ˇche_‹dî
 = 0;

880 
	`¥ötk
("can'tálloc vb frameÅcb\n");

881  -
ENOMEM
;

883 
node_poﬁ
->
›
->
	`öô
“ode_poﬁ, 
poﬁ
->
vb_‰ame_íåy_numbî
);

884 
i
=0; i<
poﬁ
->
vb_‰ame_íåy_numbî
; i++){

885 
±r_vb_‰ame_tcb
 = &
poﬁ
->
vb_‰ame_íåy_poﬁ
[
i
];

886 
±r_vb_‰ame_tcb
->
›
 = &
tw_vb_‰ame_tcb_›
;

887 if(!
±r_vb_‰ame_tcb
->
›
->
submô
)

889 
±r_vb_‰ame_tcb
->
›
->
submô
 = submit;

891 
±r_vb_‰ame_tcb
->
poﬁ
 =Öool;

892 
±r_vb_‰ame_tcb
->
›
->
	`öô
(ptr_vb_frame_tcb);

893 
±r_vb_‰ame_tcb
->
›
->
	`ªÀa£
(&±r_vb_‰ame_tcb, 
poﬁ
);

896  
ªt
;

897 
	}
}

899 
	$tw_poﬁ_ªÀa£
(
tw_vb_poﬁ_t
 *
poﬁ
)

901 if(
poﬁ
 !
NULL
){

902 
tcb_node_poﬁ_t
 *
node_poﬁ
;

904 
node_poﬁ
 = &
poﬁ
->
vb_‰ame_poﬁ_tcb
;

905 if(
node_poﬁ
->
›
 !
NULL
){

906 
node_poﬁ
->
›
->
	`ªÀa£
(node_pool);

908 if(
poﬁ
->
vb_‰ame_íåy_poﬁ
 !
NULL
){

909 
	`k‰ì
(
poﬁ
->
vb_‰ame_íåy_poﬁ
);

910 
poﬁ
->
vb_‰ame_íåy_poﬁ
 = 
NULL
;

912 
poﬁ
->
vb_‰ame_íåy_numbî
 = 0;

914 
node_poﬁ
 = &
poﬁ
->
vb_∑ckë_poﬁ_tcb
;

915 if(
node_poﬁ
->
›
 !
NULL
){

916 
node_poﬁ
->
›
->
	`ªÀa£
(node_pool);

918 if(
poﬁ
->
vb_∑ckë_íåy_poﬁ
 !
NULL
){

919 
	`k‰ì
(
poﬁ
->
vb_∑ckë_íåy_poﬁ
);

920 
poﬁ
->
vb_∑ckë_íåy_poﬁ
 = 
NULL
;

922 
poﬁ
->
vb_∑ckë_íåy_numbî
 = 0;

924 if(
poﬁ
->
ˇche_buf„r
 !
NULL
){

925 
	`‰ì_∑ges
(()
poﬁ
->
ˇche_buf„r
,Öoﬁ->
ˇche_‹dî
);

926 
poﬁ
->
ˇche_buf„r
 = 
NULL
;

928 
poﬁ
->
ˇche_‹dî
 = 0;

930 
	}
}

932 
	$tw_poﬁ_gë_vb_∑ckë_tcb
(
tw_vb_poﬁ_t
 *
poﬁ
, 
tw_vb_∑ckë_tcb_t
 **
∑ckë
)

934 if((
poﬁ
!=
NULL
Ë&& (
∑ckë
!=NULL)){

935 
tcb_node_poﬁ_t
 *
vb_∑ckë_poﬁ_tcb
 = &
poﬁ
->vb_packet_pool_tcb;

936 *
∑ckë
 = 
NULL
;

937 if(
vb_∑ckë_poﬁ_tcb
->
›
 !
NULL
){

938 
tcb_node_t
 *
ãmp_node
;

939 
vb_∑ckë_poﬁ_tcb
->
›
->
	`gë
(vb_∑ckë_poﬁ_tcb, &
ãmp_node
);

940 if(
ãmp_node
 !
NULL
){

941 *
∑ckë
 = 
	`to_vb_∑ckë_tcb
(
ãmp_node
);

942 
	`©omic_öc
(&((*
∑ckë
)->
ªf_cou¡
));

946 
	}
}

948 
	$tw_vb_poﬁ_åy_gë_vb_∑ckë_tcb
(
tw_vb_poﬁ_t
 *
poﬁ
, 
tw_vb_∑ckë_tcb_t
 **
∑ckë
)

950 if((
poﬁ
!=
NULL
Ë&& (
∑ckë
!=NULL)){

951 
tcb_node_poﬁ_t
 *
vb_∑ckë_poﬁ_tcb
 = &
poﬁ
->vb_packet_pool_tcb;

952 *
∑ckë
 = 
NULL
;

953 if(
vb_∑ckë_poﬁ_tcb
->
›
 !
NULL
){

954 
tcb_node_t
 *
ãmp_node
;

955 
vb_∑ckë_poﬁ_tcb
->
›
->
	`åy_gë
(vb_∑ckë_poﬁ_tcb, &
ãmp_node
);

956 if(
ãmp_node
 !
NULL
){

957 *
∑ckë
 = 
	`to_vb_∑ckë_tcb
(
ãmp_node
);

958 
	`©omic_öc
(&((*
∑ckë
)->
ªf_cou¡
));

962 
	}
}

964 
	$tw_poﬁ_put_vb_∑ckë_tcb
(
tw_vb_poﬁ_t
 *
poﬁ
, 
tw_vb_∑ckë_tcb_t
 *
∑ckë
)

966 if((
poﬁ
!=
NULL
Ë&& (
∑ckë
!=NULL)){

967 
tcb_node_poﬁ_t
 *
vb_∑ckë_poﬁ_tcb
 = &
poﬁ
->vb_packet_pool_tcb;

968 if(
vb_∑ckë_poﬁ_tcb
->
›
 !
NULL
){

969 
vb_∑ckë_poﬁ_tcb
->
›
->
	`put
(vb_∑ckë_poﬁ_tcb, &
∑ckë
->
∑ckë_node
);

972 
	}
}

974 
	$tw_poﬁ_gë_vb_∑ckë_tcb_poﬁ_íåy_numbî
(
tw_vb_poﬁ_t
 *
poﬁ
)

976 
íåy_numbî
 = 0;

977 if(
poﬁ
 !
NULL
){

978 
tcb_node_poﬁ_t
 *
vb_∑ckë_poﬁ_tcb
 = &
poﬁ
->vb_packet_pool_tcb;

979 if(
vb_∑ckë_poﬁ_tcb
->
›
 !
NULL
){

980 
íåy_numbî
 = 
vb_∑ckë_poﬁ_tcb
->
›
->
	`gë_cuº_poﬁ_íåy_numbî
(vb_packet_pool_tcb);

983  
íåy_numbî
;

984 
	}
}

986 
	$tw_poﬁ_gë_vb_‰ame_tcb
(
tw_vb_poﬁ_t
 *
poﬁ
, 
tw_vb_‰ame_tcb_t
 **
‰ame
)

988 if((
poﬁ
!=
NULL
Ë&& (
‰ame
!=NULL)){

989 
tcb_node_poﬁ_t
 *
vb_‰ame_poﬁ_tcb
 = &
poﬁ
->vb_frame_pool_tcb;

990 *
‰ame
 = 
NULL
;

991 if(
vb_‰ame_poﬁ_tcb
->
›
 !
NULL
){

992 
tcb_node_t
 *
ãmp_node
;

993 
vb_‰ame_poﬁ_tcb
->
›
->
	`gë
(vb_‰ame_poﬁ_tcb, &
ãmp_node
);

994 if(
ãmp_node
 !
NULL
){

995 *
‰ame
 = 
	`to_vb_‰ame_tcb
(
ãmp_node
);

996 
	`©omic_öc
(&((*
‰ame
)->
ªf_cou¡
));

1000 
	}
}

1002 
	$tw_vb_poﬁ_åy_gë_vb_‰ame_tcb
(
tw_vb_poﬁ_t
 *
poﬁ
, 
tw_vb_‰ame_tcb_t
 **
‰ame
)

1004 if((
poﬁ
!=
NULL
Ë&& (
‰ame
!=NULL)){

1005 
tcb_node_poﬁ_t
 *
vb_‰ame_poﬁ_tcb
 = &
poﬁ
->vb_frame_pool_tcb;

1006 *
‰ame
 = 
NULL
;

1007 if(
vb_‰ame_poﬁ_tcb
->
›
 !
NULL
){

1008 
tcb_node_t
 *
ãmp_node
;

1009 
vb_‰ame_poﬁ_tcb
->
›
->
	`åy_gë
(vb_‰ame_poﬁ_tcb, &
ãmp_node
);

1010 if(
ãmp_node
 !
NULL
){

1011 *
‰ame
 = 
	`to_vb_‰ame_tcb
(
ãmp_node
);

1012 
	`©omic_öc
(&((*
‰ame
)->
ªf_cou¡
));

1016 
	}
}

1018 
	$tw_poﬁ_put_vb_‰ame_tcb
(
tw_vb_poﬁ_t
 *
poﬁ
, 
tw_vb_‰ame_tcb_t
 *
‰ame
)

1020 if((
poﬁ
!=
NULL
Ë&& (
‰ame
!=NULL)){

1021 
tcb_node_poﬁ_t
 *
vb_‰ame_poﬁ_tcb
 = &
poﬁ
->vb_frame_pool_tcb;

1022 if(
vb_‰ame_poﬁ_tcb
->
›
 !
NULL
){

1023 
vb_‰ame_poﬁ_tcb
->
›
->
	`put
(vb_‰ame_poﬁ_tcb, &
‰ame
->
‰ame_node
);

1026 
	}
}

1028 
	$tw_poﬁ_gë_vb_‰ame_tcb_poﬁ_íåy_numbî
(
tw_vb_poﬁ_t
 *
poﬁ
)

1030 
íåy_numbî
 = 0;

1031 if(
poﬁ
 !
NULL
){

1032 
tcb_node_poﬁ_t
 *
vb_‰ame_poﬁ_tcb
 = &
poﬁ
->vb_frame_pool_tcb;

1033 if(
vb_‰ame_poﬁ_tcb
->
›
 !
NULL
){

1034 
íåy_numbî
 = 
vb_‰ame_poﬁ_tcb
->
›
->
	`gë_cuº_poﬁ_íåy_numbî
(vb_frame_pool_tcb);

1037  
íåy_numbî
;

1038 
	}
}

1041 
tw_vb_poﬁ_›î©i⁄
 
	gtw_poﬁ_›
 = {

1042 .
¸óã
 = 
tw_poﬁ_¸óã
,

1043 .
	gªÀa£
 = 
tw_poﬁ_ªÀa£
,

1045 .
	ggë_∑ckë_tcb
 = 
tw_poﬁ_gë_vb_∑ckë_tcb
,

1046 .
	gåy_gë_∑ckë_tcb
 = 
tw_vb_poﬁ_åy_gë_vb_∑ckë_tcb
,

1047 .
	gput_∑ckë_tcb
 = 
tw_poﬁ_put_vb_∑ckë_tcb
,

1048 .
	ggë_∑ckë_tcb_poﬁ_íåy_numbî
 = 
tw_poﬁ_gë_vb_∑ckë_tcb_poﬁ_íåy_numbî
,

1050 .
	ggë_‰ame_tcb
 = 
tw_poﬁ_gë_vb_‰ame_tcb
,

1051 .
	gåy_gë_‰ame_tcb
 = 
tw_vb_poﬁ_åy_gë_vb_‰ame_tcb
,

1052 .
	gput_‰ame_tcb
 = 
tw_poﬁ_put_vb_‰ame_tcb
,

1053 .
	ggë_‰ame_tcb_poﬁ_íåy_numbî
 = 
tw_poﬁ_gë_vb_‰ame_tcb_poﬁ_íåy_numbî
,

1057 
	$tw_¸óã_poﬁ
(
tw_vb_poﬁ_t
 *
poﬁ
, *
submô
, 
buf_Àn
)

1059 
ªt
 = 
TW_ERR
;

1060 if(
poﬁ
 !
NULL
){

1061 
poﬁ
->
›
 = &
tw_poﬁ_›
;

1062 
ªt
 = 
poﬁ
->
›
->
	`¸óã
’oﬁ, 
submô
, 
buf_Àn
);

1064  
ªt
;

1065 
	}
}

1067 
	$tw_de°roy_poﬁ
(
tw_vb_poﬁ_t
 *
poﬁ
)

1069 if(
poﬁ
 !
NULL
){

1070 if(
poﬁ
->
›
 !
NULL
){

1071 
poﬁ
->
›
->
	`ªÀa£
(pool);

1074 
	}
}

	@../../tw5864/tw5864/tw_video_display.c

1 
	~<tw5864/dvm_comm⁄.h
>

3 
	$tw_di•œy_posôi⁄_öô
(
tw_di•œy_posôi⁄_t
 *
posôi⁄
, 
tw_di•œy_pha£_t
 *
pha£
, 
u32
 
pos
)

5 if(
posôi⁄
 && 
pha£
) {

6 
dvm_chù_t
 *
chù
;

7 
tw_di•œy_drivî_t
 *
di•œy_drv
;

9 if(
pos
 >
MAX_DISPLAY_POSITION
) {

10 
	`TW_DBG
(
TW_DBG_ERR
, "posôi⁄ ovîÊow %d\n", 
pos
);

11  -
EINVAL
;

13 
	`•ö_lock_öô
(&
posôi⁄
->
lock
);

14 
posôi⁄
->posôi⁄ = 
pos
;

15 
posôi⁄
->
°©e
 = 
TW_DISPLAY_POSITION_STATE_UNUSED
;

16 
chù
 = 
pha£
->
öãrÁ˚
->chip;

17 
di•œy_drv
 = 
chù
->
di•œy_drivî
;

18 if(
di•œy_drv
->
›
->
	`gë_video_°™d¨d
(di•œy_drvË=
TW_VIDEO_STANDARD_PAL
) {

19 
posôi⁄
->
°¨tx
 = (
pos
 % 4Ë* 
WIDTH_FRAME_QCIF_PAL
;

20 
posôi⁄
->
°¨ty
 = (
pos
 / 4Ë* 
HEIGHT_FRAME_QCIF_PAL
;

21 
posôi⁄
->
width
 = 
WIDTH_FRAME_QCIF_PAL
;

22 
posôi⁄
->
height
 = 
HEIGHT_FRAME_QCIF_PAL
;

24 
posôi⁄
->
°¨tx
 = (
pos
 % 4Ë* 
WIDTH_FRAME_QCIF_NTSC
;

25 
posôi⁄
->
°¨ty
 = (
pos
 / 4Ë* 
HEIGHT_FRAME_QCIF_NTSC
;

26 
posôi⁄
->
width
 = 
WIDTH_FRAME_QCIF_NTSC
;

27 
posôi⁄
->
height
 = 
HEIGHT_FRAME_QCIF_NTSC
;

30 
posôi⁄
->
pha£
 =Öhase;

31 
posôi⁄
->
c⁄ãxt
 = 
NULL
;

33  
TW_OK
;

36  
TW_ERR
;

37 
	}
}

39 
	$tw_di•œy_posôi⁄_ª£t
(
tw_di•œy_posôi⁄_t
 *
posôi⁄
)

41 if(
posôi⁄
) {

42  
TW_OK
;

45  
TW_ERR
;

46 
	}
}

48 
	$tw_di•œy_posôi⁄_ªÀa£
(
tw_di•œy_posôi⁄_t
 *
posôi⁄
)

50 if(
posôi⁄
) {

51  
TW_OK
;

54  
TW_ERR
;

55 
	}
}

57 
	$tw_di•œy_posôi⁄_böd
(
tw_di•œy_posôi⁄_t
 *
posôi⁄
, *
c⁄ãxt
)

59 if(
posôi⁄
 && 
c⁄ãxt
) {

60 
Êags
;

62 if(
posôi⁄
->
c⁄ãxt
) {

63 
	`TW_DBG
(
TW_DBG_ERR
, "posôi⁄ %d i†busy\n", 
posôi⁄
->position);

64  -
EBUSY
;

66 
	`•ö_lock_úqßve
(&
posôi⁄
->
lock
, 
Êags
);

67 
posôi⁄
->
c⁄ãxt
 = context;

68 
	`•ö_u∆ock_úqª°‹e
(&
posôi⁄
->
lock
, 
Êags
);

69  
TW_OK
;

72  
TW_ERR
;

73 
	}
}

75 
	$tw_di•œy_posôi⁄_unböd
(
tw_di•œy_posôi⁄_t
 *
posôi⁄
, *
c⁄ãxt
)

77 if(
posôi⁄
 && 
c⁄ãxt
) {

78 
Êags
;

80 if(
posôi⁄
->
c⁄ãxt
) {

81 
	`•ö_lock_úqßve
(&
posôi⁄
->
lock
, 
Êags
);

82 
posôi⁄
->
c⁄ãxt
 = 
NULL
;

83 
	`•ö_u∆ock_úqª°‹e
(&
posôi⁄
->
lock
, 
Êags
);

86  
TW_OK
;

89  
TW_ERR
;

90 
	}
}

92 
	$tw_di•œy_posôi⁄_gë_°©e
(
tw_di•œy_posôi⁄_t
 *
posôi⁄
)

94 if(
posôi⁄
) {

95  
posôi⁄
->
°©e
;

98  
TW_ERR
;

99 
	}
}

101 
	$tw_di•œy_posôi⁄_gë_posôi⁄
(
tw_di•œy_posôi⁄_t
 *
posôi⁄
)

103 if(
posôi⁄
) {

104  
posôi⁄
->position;

107  
TW_ERR
;

108 
	}
}

110 
	$tw_di•œy_posôi⁄_ch™ge_pos_size
(
tw_di•œy_posôi⁄_t
 *
posôi⁄
, 
u32
 
°¨tx
, u32 
°¨ty
, u32 
width
, u32 
height
)

112 if(
posôi⁄
) {

113 
Êags
;

114 
tw_di•œy_posôi⁄_t
 
ãmp
, *
p
 = &temp;

116 
	`mem˝y
(&
p
, 
posôi⁄
, (
tw_di•œy_posôi⁄_t
));

117 
p
->
°¨tx
 = startx;

118 
p
->
°¨ty
 = starty;

119 
p
->
width
 = width;

120 
p
->
height
 = height;

122 if(
posôi⁄
->
pha£
->
›
->
	`check_bound¨y
’osôi⁄->pha£, 
p
)){

123 
	`TW_DBG
(
TW_DBG_ERR
, "ch™gêpo†™d sizê(%d, %d, %d, %dËÁûed\n", 
°¨tx
, 
°¨ty
, 
width
, 
height
);

124  -
EINVAL
;

126 
	`•ö_lock_úqßve
(&
posôi⁄
->
lock
, 
Êags
);

127 
posôi⁄
->
°¨tx
 = 
p
->startx;

128 
posôi⁄
->
°¨ty
 = 
p
->starty;

129 
posôi⁄
->
width
 = 
p
->width;

130 
posôi⁄
->
height
 = 
p
->height;

131 
	`•ö_u∆ock_úqª°‹e
(&
posôi⁄
->
lock
, 
Êags
);

135  
TW_ERR
;

136 
	}
}

138 
tw_di•œy_posôi⁄_›î©i⁄_t
 
	gtw_di•œy_posôi⁄_›î©i⁄_›
 = {

139 .
öô
 = 
tw_di•œy_posôi⁄_öô
,

140 .
	gª£t
 = 
tw_di•œy_posôi⁄_ª£t
,

141 .
	gªÀa£
 = 
tw_di•œy_posôi⁄_ªÀa£
,

143 .
	ggë_°©e
 = 
tw_di•œy_posôi⁄_gë_°©e
,

144 .
	ggë_posôi⁄
 = 
tw_di•œy_posôi⁄_gë_posôi⁄
,

145 .
	gch™ge_pos_size

tw_di•œy_posôi⁄_ch™ge_pos_size
,

147 .
	gböd
 = 
tw_di•œy_posôi⁄_böd
,

148 .
	gunböd
 = 
tw_di•œy_posôi⁄_unböd
,

151 
	$tw_di•œy_pha£_öô
(
tw_di•œy_pha£_t
 *
roŸ
)

153 
ªt
;

155 if(
roŸ
) {

156 
i
;

157 
tw_di•œy_posôi⁄_t
 *
posôi⁄
;

159 
i
 = 0; i < 
MAX_DISPLAY_POSITION
; i++) {

160 
posôi⁄
 = &
roŸ
->posôi⁄[
i
];

161 
posôi⁄
->
›
 = &
tw_di•œy_posôi⁄_›î©i⁄_›
;

162 
ªt
 = 
posôi⁄
->
›
->
	`öô
’osôi⁄, 
roŸ
, 
i
);

163 if(
ªt
) {

164 
	`TW_DBG
(
TW_DBG_ERR
, "öôÖosôi⁄ faûed %d\n", 
ªt
);

165  
ªt
;

168  
ªt
;

171  -
EINVAL
;

172 
	}
}

174 
	$tw_di•œy_pha£_ª£t
(
tw_di•œy_pha£_t
 *
roŸ
)

176 
ªt
 = 
TW_ERR
, 
i
;

178 if(
roŸ
) {

179 
tw_di•œy_posôi⁄_t
 *
posôi⁄
;

181 if(
roŸ
->
chûd
) {

182 
ªt
 = 
roŸ
->
chûd
->
›
->
	`ª£t
(root->child);

183 if(
ªt
) {

184 
	`TW_DBG
(
TW_DBG_ERR
, "ª£àpha£ %d faûed %d\n", 
roŸ
->
chûd
->
pha£
, 
ªt
);

185  
ªt
;

188 if(
roŸ
->
siblög
) {

189 
ªt
 = 
roŸ
->
siblög
->
›
->
	`ª£t
(root->sibling);

190 if(
ªt
) {

191 
	`TW_DBG
(
TW_DBG_ERR
, "ª£àpha£ %d faûed %d\n", 
roŸ
->
chûd
->
pha£
, 
ªt
);

192  
ªt
;

196 
i
 = 0; i < 
MAX_DISPLAY_POSITION
; i++) {

197 
posôi⁄
 = &
roŸ
->posôi⁄[
i
];

198 
ªt
 = 
posôi⁄
->
›
->
	`ª£t
(position);

199 if(
ªt
) {

200 
	`TW_DBG
(
TW_DBG_ERR
, "ª£àposôi⁄ faûed %d\n", 
ªt
);

201  
ªt
;

205 
ªt
 = 
TW_OK
;

208  
ªt
;

209 
	}
}

211 
	$tw_di•œy_pha£_ªÀa£
(
tw_di•œy_pha£_t
 *
roŸ
)

213 
ªt
 = 
TW_ERR
, 
i
;

215 if(
roŸ
) {

216 
tw_di•œy_posôi⁄_t
 *
posôi⁄
;

218 if(
roŸ
->
chûd
) {

219 
ªt
 = 
roŸ
->
chûd
->
›
->
	`ªÀa£
(root->child);

220 if(
ªt
) {

221 
	`TW_DBG
(
TW_DBG_ERR
, "ªÀa£Öha£ %d faûed %d\n", 
roŸ
->
chûd
->
pha£
, 
ªt
);

222  
ªt
;

224 
	`k‰ì
(
roŸ
->
chûd
);

226 if(
roŸ
->
siblög
) {

227 
ªt
 = 
roŸ
->
siblög
->
›
->
	`ªÀa£
(root->sibling);

228 if(
ªt
) {

229 
	`TW_DBG
(
TW_DBG_ERR
, "ªÀa£Öha£ %d faûed %d\n", 
roŸ
->
chûd
->
pha£
, 
ªt
);

230  
ªt
;

232 
	`k‰ì
(
roŸ
->
siblög
);

235 
i
 = 0; i < 
MAX_DISPLAY_POSITION
; i++) {

236 
posôi⁄
 = &
roŸ
->posôi⁄[
i
];

237 
ªt
 = 
posôi⁄
->
›
->
	`ªÀa£
(position);

238 if(
ªt
) {

239 
	`TW_DBG
(
TW_DBG_ERR
, "ªÀa£Öosôi⁄ faûed %d\n", 
ªt
);

240  
ªt
;

244 
ªt
 = 
TW_OK
;

247  
ªt
;

248 
	}
}

250 
	$tw_di•œy_pha£_check_bound¨y
(
tw_di•œy_pha£_t
 *
pha£
, 
tw_di•œy_posôi⁄_t
 *
posôi⁄
)

252 
i
 = 0;

254 
tw_di•œy_posôi⁄_t
 *
ãmp
;

255 
u32
 
x1
, 
y1
, 
x2
, 
y2
, 
w
, 
h
;

257 if(
pha£
 && 
posôi⁄
) {

259 
dvm_chù_t
 *
chù
;

260 
tw_di•œy_drivî_t
 *
di•œy_drivî
;

262 
chù
 = 
pha£
->
öãrÁ˚
->chip;

263 
di•œy_drivî
 = 
chù
->display_driver;

264 if(
di•œy_drivî
->
›
->
	`gë_video_°™d¨d
(di•œy_drivîË=
TW_VIDEO_STANDARD_PAL
) {

265 if((
posôi⁄
->
°¨tx
 > 
WIDTH_FRAME_D1_PAL
Ë|| (posôi⁄->
°¨ty
 > 
HEIGHT_FRAME_D1_PAL
)

266 || (
posôi⁄
->
width
 > 
WIDTH_FRAME_D1_PAL
Ë|| (posôi⁄->
height
 > 
HEIGHT_FRAME_D1_PAL
)) {

267 
	`TW_DBG
(
TW_DBG_ERR
, "position overflow\n");

268  -
EINVAL
;

271 if((
posôi⁄
->
°¨tx
 > 
WIDTH_FRAME_D1_NTSC
Ë|| (posôi⁄->
°¨ty
 > 
HEIGHT_FRAME_D1_NTSC
)

272 || (
posôi⁄
->
width
 > 
WIDTH_FRAME_D1_NTSC
Ë|| (posôi⁄->
height
 > 
HEIGHT_FRAME_D1_NTSC
)) {

273 
	`TW_DBG
(
TW_DBG_ERR
, "position overflow\n");

274  -
EINVAL
;

277 
x2
 = 
posôi⁄
->
°¨tx
 + (posôi⁄->
width
>>1);

278 
y2
 = 
posôi⁄
->
°¨ty
 + (posôi⁄->
height
>>1);

279 
i
 = 0; i < 
MAX_DISPLAY_POSITION
; i++) {

280 
ãmp
 = &
pha£
->
posôi⁄
[
i
];

281 
x1
 = 
ãmp
->
°¨tx
 + (ãmp->
width
>>1);

282 
y1
 = 
ãmp
->
°¨ty
 + (ãmp->
height
>>1);

283 
w
 = ((
ãmp
->
width
>>1Ë+ (
posôi⁄
->width>>1));

284 
h
 = ((
ãmp
->
height
>>1Ë+ (
posôi⁄
->height>>1));

285 if((
ãmp
->
›
->
	`gë_°©e
—empË=
TW_DISPLAY_POSITION_STATE_USED
)

286 && (
ãmp
->
›
->
	`gë_posôi⁄
—empË!
posôi⁄
->op->get_position(position))) {

287 if(((
	`H264_MAX
(
x1
, 
x2
Ë- 
	`H264_MIN
(x1, x2)Ë< 
w
)

288 || ((
	`H264_MAX
(
y1
, 
y2
Ë- 
	`H264_MIN
(y1, y2)Ë< 
h
)) {

289 
	`TW_DBG
(
TW_DBG_ERR
, "region (%d, %d, %d, %d) conflict withÖosition %d (%d, %d, %d, %d)\n",

290 
posôi⁄
->
°¨tx
,Öosôi⁄->
°¨ty
,Öosôi⁄->
width
,Öosôi⁄->
height
, 
ãmp
->
›
->
	`gë_posôi⁄
(temp),

291 
ãmp
->
°¨tx
,Åemp->
°¨ty
,Åemp->
width
,Åemp->
height
);

292  
TW_ERR
;

297  
TW_OK
;

300  
TW_ERR
;

301 
	}
}

303 
tw_di•œy_pha£_›î©i⁄
 
	gtw_di•œy_pha£_›î©i⁄_›
 = {

304 .
öô
 = 
tw_di•œy_pha£_öô
,

305 .
	gª£t
 = 
tw_di•œy_pha£_ª£t
,

306 .
	gªÀa£
 = 
tw_di•œy_pha£_ªÀa£
,

308 .
	gcheck_bound¨y
 = 
tw_di•œy_pha£_check_bound¨y
,

311 
	$öô_di•œy_pha£
(
tw_di•œy_öãrÁ˚_t
 *
öãrÁ˚
)

313 
i
, 
ªt
 = 
TW_ERR
;

315 if(
öãrÁ˚
) {

316 
tw_di•œy_pha£_t
 *
pha£
, **
ãmp_pha£
;

317 
tŸÆ_pha£
;

318 
öãrÁ˚
->
ˇ∑bûôy
) {

319 
TW_DISPLAY_INTERFACE_MODE_108M
:

320 
tŸÆ_pha£
 = 4;

322 
TW_DISPLAY_INTERFACE_MODE_54M
:

323 
tŸÆ_pha£
 = 2;

325 
TW_DISPLAY_INTERFACE_MODE_27M
:

326 
tŸÆ_pha£
 = 1;

329 
	`TW_DBG
(
TW_DBG_ERR
, "unknow¿di•œy i¡îÁ˚ modê%d\n", 
öãrÁ˚
->
ˇ∑bûôy
);

330  -
EINVAL
;

332 
ãmp_pha£
 = &
öãrÁ˚
->
roŸ
;

333 
i
 = 0; i < 
tŸÆ_pha£
; i++) {

334 
pha£
 = (
tw_di•œy_pha£_t
 *)
	`kzÆloc
(—w_di•œy_pha£_t), 
GFP_KERNEL
);

335 if(!
pha£
) {

336 
	`TW_DBG
(
TW_DBG_ERR
, "no memory for display\n");

337  -
ENOMEM
;

339 if(!(*
ãmp_pha£
)) {

340 *
ãmp_pha£
 = 
pha£
;

342 (*
ãmp_pha£
)->
siblög
 = 
pha£
;

344 
ãmp_pha£
 = &
pha£
;

346 
pha£
->
öãrÁ˚
 = interface;

347 
pha£
->pha£ = 
i
;

348 
pha£
->
∑ª¡
 =Öha£->
siblög
 =Öha£->
chûd
 = 
NULL
;

349 
pha£
->
›
 = &
tw_di•œy_pha£_›î©i⁄_›
;

350 
ªt
 = 
pha£
->
›
->
	`öô
(phase);

351 if(
ªt
) {

352 
	`TW_DBG
(
TW_DBG_ERR
, "öôÖha£ faûed, %d\n", 
ªt
);

353 
pha£
->
›
->
	`ªÀa£
(phase);

354 
	`k‰ì
(
pha£
);

355 
ªt
 = -
ENOMEM
;

356 
ªÀa£_pha£
;

360  
ªt
;

361 
ªÀa£_pha£
:

362 
ãmp_pha£
 = &
öãrÁ˚
->
roŸ
;

363 *
ãmp_pha£
) {

364 
pha£
 = *
ãmp_pha£
;

365 *
ãmp_pha£
 = 
pha£
->
siblög
;

366 if(
pha£
->
›
) {

367 
pha£
->
›
->
	`ªÀa£
(phase);

369 
	`k‰ì
(
pha£
);

373  
ªt
;

374 
	}
}

376 
	$tw_di•œy_öãrÁ˚_öô
(
tw_di•œy_öãrÁ˚_t
 *
öãrÁ˚
, 
u32
 
p‹t
, 
dvm_chù_t
 *
chù
)

378 
ªt
 = 
TW_ERR
;

380 if(
öãrÁ˚
) {

381 
öãrÁ˚
->
mode
 = 
TW_DISPLAY_INTERFACE_MODE_27M
;

382 if(
p‹t
 < 
MAX_DISPLAY_INTERFACE
) {

383 
öãrÁ˚
->
p‹t
 =Öort;

384 
öãrÁ˚
->
chù
 = chip;

385 
öãrÁ˚
->
roŸ
 = 
NULL
;

386 if(
öãrÁ˚
->
›
->
	`gë_p‹t
(interface) == 0) {

387 
öãrÁ˚
->
ˇ∑bûôy
 = 
TW_DISPLAY_INTERFACE_MODE_108M
;

390 
ªt
 = 
	`öô_di•œy_pha£
(
öãrÁ˚
);

392 
	`TW_DBG
(
TW_DBG_ERR
, "⁄ly suµ‹à%d di•œyÖ‹t\n", 
MAX_DISPLAY_INTERFACE
);

393 
ªt
 = -
EINVAL
;

397  
ªt
;

398 
	}
}

400 
	$tw_di•œy_öãrÁ˚_ª£t
(
tw_di•œy_öãrÁ˚_t
 *
öãrÁ˚
)

402 if(
öãrÁ˚
) {

403 
tw_di•œy_pha£_t
 *
roŸ
;

405 
roŸ
 = 
öãrÁ˚
->root;

406 if(
roŸ
) {

407 
roŸ
->
›
->
	`ª£t
(root);

410  
TW_OK
;

413  
TW_ERR
;

414 
	}
}

416 
	$tw_di•œy_öãrÁ˚_ªÀa£
(
tw_di•œy_öãrÁ˚_t
 *
öãrÁ˚
)

418 if(
öãrÁ˚
) {

419 
ªt
;

420 
tw_di•œy_pha£_t
 *
roŸ
;

422 
roŸ
 = 
öãrÁ˚
->root;

423 if(
roŸ
) {

424 
ªt
 = 
roŸ
->
›
->
	`ªÀa£
(root);

425 if(
ªt
) {

426 
	`TW_DBG
(
TW_DBG_ERR
, "ªÀa£Öha£ %d faûed %d\n", 
roŸ
->
pha£
, 
ªt
);

428 
	`k‰ì
(
roŸ
);

431  
TW_OK
;

434  
TW_ERR
;

435 
	}
}

437 
u32
 
	$tw_di•œy_öãrÁ˚_gë_p‹t
(
tw_di•œy_öãrÁ˚_t
 *
öãrÁ˚
)

439 if(
öãrÁ˚
) {

440  
öãrÁ˚
->
p‹t
;

443  
TW_ERR
;

444 
	}
}

446 
u32
 
	$tw_di•œy_öãrÁ˚_gë_ˇ∑bûôy
(
tw_di•œy_öãrÁ˚_t
 *
öãrÁ˚
)

448 if(
öãrÁ˚
) {

449  
öãrÁ˚
->
ˇ∑bûôy
;

452  
TW_ERR
;

453 
	}
}

455 
u32
 
	$tw_di•œy_öãrÁ˚_gë_mode
(
tw_di•œy_öãrÁ˚_t
 *
öãrÁ˚
)

457 if(
öãrÁ˚
) {

458  
öãrÁ˚
->
mode
;

461  
TW_ERR
;

462 
	}
}

464 
	$tw_di•œy_öãrÁ˚_£t_mode
(
tw_di•œy_öãrÁ˚_t
 *
öãrÁ˚
, 
TW_DISPLAY_INTERFACE_MODE
 
mode
)

466 if(
öãrÁ˚
) {

467 
tw_di•œy_pha£_t
 *
roŸ
;

469 if((
mode
 < 0Ë|| (modê>
TW_DISPLAY_INTERFACE_MODE_RESERVE
)) {

470 
	`TW_DBG
(
TW_DBG_ERR
, "unsuµ‹àmodê%d\n", 
mode
);

471  
mode
;

474 
roŸ
 = 
öãrÁ˚
->root;

475 if(
roŸ
) {

476 
roŸ
->
›
->
	`ªÀa£
(root);

477 
roŸ
->
›
->
	`öô
(root);

481  
TW_ERR
;

482 
	}
}

484 
tw_di•œy_öãrÁ˚_›î©i⁄
 
	gtw_di•œy_öãrÁ˚_›î©i⁄_›
 = {

485 .
öô
 = 
tw_di•œy_öãrÁ˚_öô
,

486 .
	gª£t
 = 
tw_di•œy_öãrÁ˚_ª£t
,

487 .
	gªÀa£
 = 
tw_di•œy_öãrÁ˚_ªÀa£
,

489 .
	ggë_p‹t
 = 
tw_di•œy_öãrÁ˚_gë_p‹t
,

490 .
	ggë_ˇ∑bûôy
 = 
tw_di•œy_öãrÁ˚_gë_ˇ∑bûôy
,

491 .
	ggë_mode
 = 
tw_di•œy_öãrÁ˚_gë_mode
,

492 .
	g£t_mode
 = 
tw_di•œy_öãrÁ˚_£t_mode
,

495 
	$di•œy_¥oc_ªad
(*
∑ge
, **
°¨t
, 
off_t
 
off
,

496 
cou¡
, *
eof
, *
d©a
)

498 
Àn
 = 0;

499 
tw_di•œy_drivî_t
 *
drivî
 = (tw_di•œy_drivî_à*)
d©a
;

500 
tw_di•œy_öãrÁ˚_t
 *
öãrÁ˚
;

501 
tw_di•œy_pha£_t
 *
pha£
;

502 
tw_di•œy_posôi⁄_t
 *
posôi⁄
;

504 if(
drivî
) {

505 
Àn
 +
	`•rötf
(
∑ge
 +Üí, "videÿ°™d¨d: %d\n", 
drivî
->
›
->
	`gë_video_°™d¨d
(driver));

507 
öãrÁ˚
 = 
drivî
->öãrÁ˚; (öãrÁ˚ - drivî->öãrÁ˚Ë< 
MAX_DISPLAY_INTERFACE
; interface++) {

508 
Àn
 +
	`•rötf
(
∑ge
 +Üí, "p‹à%d modê%d\n", 
öãrÁ˚
->
›
->
	`gë_p‹t
(öãrÁ˚), i¡îÁ˚->›->
	`gë_mode
(interface));

509 
pha£
 = 
öãrÁ˚
->
roŸ
;

510 
pha£
) {

511 
posôi⁄
 = 
pha£
->posôi⁄; (’osôi⁄ -Öha£->posôi⁄Ë< 
MAX_DISPLAY_POSITION
);Öosition++){

512 if(
posôi⁄
->
›
->
	`gë_°©e
’osôi⁄Ë=
TW_DISPLAY_POSITION_STATE_USED
) {

513 
Àn
 +
	`•rötf
(
∑ge
 +Üí, "%d --> (%d, %d, %d, %d)\n", 
posôi⁄
->
›
->
	`gë_posôi⁄
(position),

514 
posôi⁄
->
°¨tx
,Öosôi⁄->
°¨ty
,Öosôi⁄->
width
,Öosôi⁄->
height
);

518 
pha£
 =Öha£->
siblög
;

523  
Àn
;

524 
	}
}

526 
	$di•œy_¥oc_wrôe
(
fûe
 *fûe, c⁄° 
__u£r
 *
buf„r
,

527 
cou¡
, *
d©a
)

529 
tw_di•œy_drivî_t
 *
drivî
 = (tw_di•œy_drivî_à*)
d©a
;

531 if(!
drivî
) {

532 
	`TW_DBG
(
TW_DBG_ERR
, "vi driver uninitial\n");

535  
cou¡
;

536 
	}
}

538 
	$tw_di•œy_drivî_öô
(
tw_di•œy_drivî_t
 *
drivî
)

540 
ªt
 = 
TW_ERR
;

542 if(
drivî
) {

543 
dvm_chù_t
 *
chù
;

544 
tw_di•œy_öãrÁ˚_t
 *
öãrÁ˚
;

545 
tw_¥oc_ªgi°î_s
 *
¥oc_íåy
;

546 
i
;

548 
chù
 = 
drivî
->chip;

549 
	`©omic_£t
(&
drivî
->
›íed_Êag
, 0);

550 
drivî
->
›
->
	`£t_video_°™d¨d
(drivî, 
TW_VIDEO_STANDARD_PAL
);

551 
	`öô_ídpoöt_tcb
(&
drivî
->
›íed_di•œy_ed
, 
chù
->
bus_id
, chù->
chù_id
,

552 
INVALID_TW_ED_TYPE_ID
, 0,

553 0, 
drivî
, 
NULL
,

554 
NULL
, NULL);

555 
i
 = 0; i < 
MAX_DISPLAY_INTERFACE
; i++) {

556 
öãrÁ˚
 = &
drivî
->öãrÁ˚[
i
];

557 
öãrÁ˚
->
›
 = &
tw_di•œy_öãrÁ˚_›î©i⁄_›
;

558 
ªt
 = 
öãrÁ˚
->
›
->
	`öô
(öãrÁ˚, 
i
, 
chù
);

559 if(
ªt
) {

560 
	`TW_DBG
(
TW_DBG_ERR
, "öô di•œyÖ‹à%dÉº‹, %d\n", 
öãrÁ˚
->
›
->
	`gë_p‹t
(öãrÁ˚), 
ªt
);

561  
ªt
;

564 
¥oc_íåy
 = &
drivî
->
di•œy_¥oc
;

565 
	`°r˝y
(
¥oc_íåy
->
«me
, "display");

566 
¥oc_íåy
->
ªad
 = 
di•œy_¥oc_ªad
;

567 
¥oc_íåy
->
wrôe
 = 
di•œy_¥oc_wrôe
;

568 
¥oc_íåy
->
¥iv©e
 = 
drivî
;

569 
¥oc_íåy
->
íåy
 = 
NULL
;

570 
	`tw_moduÀ_ªgi°î
(
chù
, 
¥oc_íåy
);

573  
ªt
;

574 
	}
}

576 
	$tw_di•œy_drivî_ª£t
(
tw_di•œy_drivî_t
 *
drivî
)

578 
ªt
 = 
TW_ERR
;

580 if(
drivî
) {

581 
tw_di•œy_öãrÁ˚_t
 *
öãrÁ˚
;

582 
i
;

584 
i
 = 0; i < 
MAX_DISPLAY_INTERFACE
; i++) {

585 
öãrÁ˚
 = &
drivî
->öãrÁ˚[
i
];

586 
öãrÁ˚
->
›
->
	`ª£t
(interface);

587 if(
ªt
) {

588 
	`TW_DBG
(
TW_DBG_ERR
, "ª£àdi•œyÖ‹à%dÉº‹, %d\n", 
öãrÁ˚
->
›
->
	`gë_p‹t
(öãrÁ˚), 
ªt
);

589  
ªt
;

594  
ªt
;

595 
	}
}

597 
	$tw_di•œy_drivî_ªÀa£
(
tw_di•œy_drivî_t
 *
drivî
)

599 
ªt
 = 
TW_ERR
;

601 if(
drivî
) {

602 
dvm_chù_t
 *
chù
;

603 
tw_di•œy_öãrÁ˚_t
 *
öãrÁ˚
;

604 
tw_¥oc_ªgi°î_s
 *
¥oc_íåy
;

605 
i
;

607 
chù
 = 
drivî
->chip;

608 
i
 = 0; i < 
MAX_DISPLAY_INTERFACE
; i++) {

609 
öãrÁ˚
 = &
drivî
->öãrÁ˚[
i
];

610 
ªt
 = 
öãrÁ˚
->
›
->
	`ªÀa£
(interface);

611 if(
ªt
) {

612 
	`TW_DBG
(
TW_DBG_ERR
, "ªÀa£ di•œyÖ‹à%dÉº‹, %d\n", 
öãrÁ˚
->
›
->
	`gë_p‹t
(öãrÁ˚), 
ªt
);

613  
ªt
;

616 
¥oc_íåy
 = &
drivî
->
di•œy_¥oc
;

618 
	`tw_moduÀ_uƒegi°î
(
chù
, 
¥oc_íåy
);

621  
ªt
;

622 
	}
}

624 
	$tw_di•œy_drivî_gë_video_°™d¨d
(
tw_di•œy_drivî_t
 *
drivî
)

626 if(
drivî
) {

627  
drivî
->
video_°™d¨d
;

630  
TW_ERR
;

631 
	}
}

633 
	$tw_di•œy_drivî_£t_video_°™d¨d
(
tw_di•œy_drivî_t
 *
drivî
, 
TW_VIDEO_STANDARD
 
video_°™d¨d
)

635 
ªt
 = 
TW_ERR
;

637 if(
drivî
) {

638 
video_°™d¨d
) {

639 
TW_VIDEO_STANDARD_PAL
:

640 
TW_VIDEO_STANDARD_NTSC
:

641 
drivî
->
video_°™d¨d
 = video_standard;

642 
ªt
 = 
TW_OK
;

645 
	`TW_DBG
(
TW_DBG_ERR
, "unknow¿videÿ°™d¨d %d\n", 
video_°™d¨d
);

646 
ªt
 = -
EINVAL
;

650  
ªt
;

651 
	}
}

653 
tw_di•œy_›î©i⁄_t
 
	gdi•œy_›î©i⁄_›
 = {

654 .
öô
 = 
tw_di•œy_drivî_öô
,

655 .
	gª£t
 = 
tw_di•œy_drivî_ª£t
,

656 .
	gªÀa£
 = 
tw_di•œy_drivî_ªÀa£
,

658 .
	ggë_video_°™d¨d
 = 
tw_di•œy_drivî_gë_video_°™d¨d
,

659 .
	g£t_video_°™d¨d
 = 
tw_di•œy_drivî_£t_video_°™d¨d
,

662 
	$öô_di•œy_drivî
(
dvm_chù_t
 *
chù
)

664 
ªt
 = 
TW_ERR
;

666 if(
chù
) {

667 
tw_di•œy_drivî_t
 *
drivî
;

669 
drivî
 = 
	`kzÆloc
((
tw_di•œy_drivî_t
), 
GFP_KERNEL
);

670 if(
drivî
) {

671 
chù
->
di•œy_drivî
 = 
drivî
;

672 
drivî
->
chù
 = chip;

673 
drivî
->
›
 = &
di•œy_›î©i⁄_›
;

674 
ªt
 = 
drivî
->
›
->
	`öô
(driver);

676 
	`TW_DBG
(
TW_DBG_ERR
, "no memory for display driver\n");

677 
ªt
 = -
ENOMEM
;

680 
	`TW_DBG
(
TW_DBG_ERR
, "NULLÖointer\n");

681 
ªt
 = -
EPERM
;

684  
ªt
;

685 
	}
}

687 
	$ªmove_di•œy_drivî
(
tw_di•œy_drivî_t
 *
drivî
)

689 
ªt
 = 
TW_ERR
;

691 if(
drivî
) {

692 
ªt
 = 
drivî
->
›
->
	`ªÀa£
(driver);

693 
	`TW_DBG
(
TW_DBG_ERR
, "ªÀa£ di•œy dúvî faûed %d\n", 
ªt
);

696  
ªt
;

697 
	}
}

	@/usr/include/asm/types.h

1 #i‚de‡
_ASM_X86_TYPES_H


2 
	#_ASM_X86_TYPES_H


	)

4 
	~<asm-gíîic/öt-Œ64.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	tumode_t
;

	@/usr/include/asm/unistd.h

1 #ifde‡
__i386__


2 
	~"uni°d_32.h
"

4 
	~"uni°d_64.h
"

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/linux/fcntl.h

1 #i‚de‡
_LINUX_FCNTL_H


2 
	#_LINUX_FCNTL_H


	)

4 
	~<asm/f˙é.h
>

6 
	#F_SETLEASE
 (
F_LINUX_SPECIFIC_BASE
 + 0)

	)

7 
	#F_GETLEASE
 (
F_LINUX_SPECIFIC_BASE
 + 1)

	)

13 
	#F_CANCELLK
 (
F_LINUX_SPECIFIC_BASE
 + 5)

	)

16 
	#F_DUPFD_CLOEXEC
 (
F_LINUX_SPECIFIC_BASE
 + 6)

	)

22 
	#F_NOTIFY
 (
F_LINUX_SPECIFIC_BASE
+2)

	)

27 
	#DN_ACCESS
 0x00000001

	)

28 
	#DN_MODIFY
 0x00000002

	)

29 
	#DN_CREATE
 0x00000004

	)

30 
	#DN_DELETE
 0x00000008

	)

31 
	#DN_RENAME
 0x00000010

	)

32 
	#DN_ATTRIB
 0x00000020

	)

33 
	#DN_MULTISHOT
 0x80000000

	)

35 
	#AT_FDCWD
 -100

	)

38 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

39 
	#AT_REMOVEDIR
 0x200

	)

41 
	#AT_SYMLINK_FOLLOW
 0x400

	)

	@/usr/include/linux/fs.h

1 #i‚de‡
_LINUX_FS_H


2 
	#_LINUX_FS_H


	)

9 
	~<löux/limôs.h
>

10 
	~<löux/io˘l.h
>

23 #unde‡
NR_OPEN


24 
	#INR_OPEN
 1024

	)

26 
	#BLOCK_SIZE_BITS
 10

	)

27 
	#BLOCK_SIZE
 (1<<
BLOCK_SIZE_BITS
)

	)

29 
	#SEEK_SET
 0

	)

30 
	#SEEK_CUR
 1

	)

31 
	#SEEK_END
 2

	)

32 
	#SEEK_MAX
 
SEEK_END


	)

35 
	sfûes_°©_°ru˘
 {

36 
	mƒ_fûes
;

37 
	mƒ_‰ì_fûes
;

38 
	mmax_fûes
;

41 
	söodes_°©_t
 {

42 
	mƒ_öodes
;

43 
	mƒ_unu£d
;

44 
	mdummy
[5];

48 
	#NR_FILE
 8192

	)

50 
	#MAY_EXEC
 1

	)

51 
	#MAY_WRITE
 2

	)

52 
	#MAY_READ
 4

	)

53 
	#MAY_APPEND
 8

	)

54 
	#MAY_ACCESS
 16

	)

55 
	#MAY_OPEN
 32

	)

63 
	#FMODE_READ
 ((
fmode_t
)1)

	)

65 
	#FMODE_WRITE
 ((
fmode_t
)2)

	)

67 
	#FMODE_LSEEK
 ((
fmode_t
)4)

	)

69 
	#FMODE_PREAD
 ((
fmode_t
)8)

	)

71 
	#FMODE_PWRITE
 ((
fmode_t
)16)

	)

73 
	#FMODE_EXEC
 ((
fmode_t
)32)

	)

75 
	#FMODE_NDELAY
 ((
fmode_t
)64)

	)

77 
	#FMODE_EXCL
 ((
fmode_t
)128)

	)

80 
	#FMODE_WRITE_IOCTL
 ((
fmode_t
)256)

	)

88 
	#FMODE_NOCMTIME
 ((
fmode_t
)2048)

	)

144 
	#RW_MASK
 1

	)

145 
	#RWA_MASK
 2

	)

146 
	#READ
 0

	)

147 
	#WRITE
 1

	)

148 
	#READA
 2

	)

149 
	#SWRITE
 3

	)

150 
	#READ_SYNC
 (
READ
 | (1 << 
BIO_RW_SYNCIO
Ë| (1 << 
BIO_RW_UNPLUG
))

	)

151 
	#READ_META
 (
READ
 | (1 << 
BIO_RW_META
))

	)

152 
	#WRITE_SYNC_PLUG
 (
WRITE
 | (1 << 
BIO_RW_SYNCIO
Ë| (1 << 
BIO_RW_NOIDLE
))

	)

153 
	#WRITE_SYNC
 (
WRITE_SYNC_PLUG
 | (1 << 
BIO_RW_UNPLUG
))

	)

154 
	#WRITE_ODIRECT
 (
WRITE
 | (1 << 
BIO_RW_SYNCIO
Ë| (1 << 
BIO_RW_UNPLUG
))

	)

155 
	#SWRITE_SYNC_PLUG
 \

156 (
SWRITE
 | (1 << 
BIO_RW_SYNCIO
Ë| (1 << 
BIO_RW_NOIDLE
))

	)

157 
	#SWRITE_SYNC
 (
SWRITE_SYNC_PLUG
 | (1 << 
BIO_RW_UNPLUG
))

	)

158 
	#WRITE_BARRIER
 (
WRITE
 | (1 << 
BIO_RW_BARRIER
))

	)

164 
	#DISCARD_NOBARRIER
 (1 << 
BIO_RW_DISCARD
)

	)

165 
	#DISCARD_BARRIER
 ((1 << 
BIO_RW_DISCARD
Ë| (1 << 
BIO_RW_BARRIER
))

	)

167 
	#SEL_IN
 1

	)

168 
	#SEL_OUT
 2

	)

169 
	#SEL_EX
 4

	)

172 
	#FS_REQUIRES_DEV
 1

	)

173 
	#FS_BINARY_MOUNTDATA
 2

	)

174 
	#FS_HAS_SUBTYPE
 4

	)

175 
	#FS_REVAL_DOT
 16384

	)

176 
	#FS_RENAME_DOES_D_MOVE
 32768

	)

183 
	#MS_RDONLY
 1

	)

184 
	#MS_NOSUID
 2

	)

185 
	#MS_NODEV
 4

	)

186 
	#MS_NOEXEC
 8

	)

187 
	#MS_SYNCHRONOUS
 16

	)

188 
	#MS_REMOUNT
 32

	)

189 
	#MS_MANDLOCK
 64

	)

190 
	#MS_DIRSYNC
 128

	)

191 
	#MS_NOATIME
 1024

	)

192 
	#MS_NODIRATIME
 2048

	)

193 
	#MS_BIND
 4096

	)

194 
	#MS_MOVE
 8192

	)

195 
	#MS_REC
 16384

	)

196 
	#MS_VERBOSE
 32768

	)

198 
	#MS_SILENT
 32768

	)

199 
	#MS_POSIXACL
 (1<<16Ë

	)

200 
	#MS_UNBINDABLE
 (1<<17Ë

	)

201 
	#MS_PRIVATE
 (1<<18Ë

	)

202 
	#MS_SLAVE
 (1<<19Ë

	)

203 
	#MS_SHARED
 (1<<20Ë

	)

204 
	#MS_RELATIME
 (1<<21Ë

	)

205 
	#MS_KERNMOUNT
 (1<<22Ë

	)

206 
	#MS_I_VERSION
 (1<<23Ë

	)

207 
	#MS_STRICTATIME
 (1<<24Ë

	)

208 
	#MS_ACTIVE
 (1<<30)

	)

209 
	#MS_NOUSER
 (1<<31)

	)

214 
	#MS_RMT_MASK
 (
MS_RDONLY
|
MS_SYNCHRONOUS
|
MS_MANDLOCK
|
MS_I_VERSION
)

	)

219 
	#MS_MGC_VAL
 0xC0ED0000

	)

220 
	#MS_MGC_MSK
 0xffff0000

	)

224 
	#S_SYNC
 1

	)

225 
	#S_NOATIME
 2

	)

226 
	#S_APPEND
 4

	)

227 
	#S_IMMUTABLE
 8

	)

228 
	#S_DEAD
 16

	)

229 
	#S_NOQUOTA
 32

	)

230 
	#S_DIRSYNC
 64

	)

231 
	#S_NOCMTIME
 128

	)

232 
	#S_SWAPFILE
 256

	)

233 
	#S_PRIVATE
 512

	)

248 
	#__IS_FLG
(
öode
,
Êg
Ë((öode)->
i_sb
->
s_Êags
 & (Êg))

	)

250 
	#IS_RDONLY
(
öode
Ë((öode)->
i_sb
->
s_Êags
 & 
MS_RDONLY
)

	)

251 
	#IS_SYNC
(
öode
Ë(
	`__IS_FLG
(öode, 
MS_SYNCHRONOUS
) || \

252 ((
öode
)->
i_Êags
 & 
S_SYNC
))

	)

253 
	#IS_DIRSYNC
(
öode
Ë(
	`__IS_FLG
(öode, 
MS_SYNCHRONOUS
|
MS_DIRSYNC
) || \

254 ((
öode
)->
i_Êags
 & (
S_SYNC
|
S_DIRSYNC
)))

	)

255 
	#IS_MANDLOCK
(
öode
Ë
	`__IS_FLG
(öode, 
MS_MANDLOCK
)

	)

256 
	#IS_NOATIME
(
öode
Ë
	`__IS_FLG
(öode, 
MS_RDONLY
|
MS_NOATIME
)

	)

257 
	#IS_I_VERSION
(
öode
Ë
	`__IS_FLG
(öode, 
MS_I_VERSION
)

	)

259 
	#IS_NOQUOTA
(
öode
Ë((öode)->
i_Êags
 & 
S_NOQUOTA
)

	)

260 
	#IS_APPEND
(
öode
Ë((öode)->
i_Êags
 & 
S_APPEND
)

	)

261 
	#IS_IMMUTABLE
(
öode
Ë((öode)->
i_Êags
 & 
S_IMMUTABLE
)

	)

262 
	#IS_POSIXACL
(
öode
Ë
	`__IS_FLG
(öode, 
MS_POSIXACL
)

	)

264 
	#IS_DEADDIR
(
öode
Ë((öode)->
i_Êags
 & 
S_DEAD
)

	)

265 
	#IS_NOCMTIME
(
öode
Ë((öode)->
i_Êags
 & 
S_NOCMTIME
)

	)

266 
	#IS_SWAPFILE
(
öode
Ë((öode)->
i_Êags
 & 
S_SWAPFILE
)

	)

267 
	#IS_PRIVATE
(
öode
Ë((öode)->
i_Êags
 & 
S_PRIVATE
)

	)

272 
	#BLKROSET
 
	`_IO
(0x12,93Ë

	)

273 
	#BLKROGET
 
	`_IO
(0x12,94Ë

	)

274 
	#BLKRRPART
 
	`_IO
(0x12,95Ë

	)

275 
	#BLKGETSIZE
 
	`_IO
(0x12,96Ë

	)

276 
	#BLKFLSBUF
 
	`_IO
(0x12,97Ë

	)

277 
	#BLKRASET
 
	`_IO
(0x12,98Ë

	)

278 
	#BLKRAGET
 
	`_IO
(0x12,99Ë

	)

279 
	#BLKFRASET
 
	`_IO
(0x12,100)

	)

280 
	#BLKFRAGET
 
	`_IO
(0x12,101)

	)

281 
	#BLKSECTSET
 
	`_IO
(0x12,102)

	)

282 
	#BLKSECTGET
 
	`_IO
(0x12,103)

	)

283 
	#BLKSSZGET
 
	`_IO
(0x12,104)

	)

285 
	#BLKPG
 
	`_IO
(0x12,105)

	)

289 
	#BLKELVGET
 
	`_IOR
(0x12,106,
size_t
)

	)

290 
	#BLKELVSET
 
	`_IOW
(0x12,107,
size_t
)

	)

295 
	#BLKBSZGET
 
	`_IOR
(0x12,112,
size_t
)

	)

296 
	#BLKBSZSET
 
	`_IOW
(0x12,113,
size_t
)

	)

297 
	#BLKGETSIZE64
 
	`_IOR
(0x12,114,
size_t
Ë

	)

298 
	#BLKTRACESETUP
 
	`_IOWR
(0x12,115,
blk_u£r_åa˚_£tup
)

	)

299 
	#BLKTRACESTART
 
	`_IO
(0x12,116)

	)

300 
	#BLKTRACESTOP
 
	`_IO
(0x12,117)

	)

301 
	#BLKTRACETEARDOWN
 
	`_IO
(0x12,118)

	)

302 
	#BLKDISCARD
 
	`_IO
(0x12,119)

	)

304 
	#BMAP_IOCTL
 1

	)

305 
	#FIBMAP
 
	`_IO
(0x00,1Ë

	)

306 
	#FIGETBSZ
 
	`_IO
(0x00,2Ë

	)

307 
	#FIFREEZE
 
	`_IOWR
('X', 119, Ë

	)

308 
	#FITHAW
 
	`_IOWR
('X', 120, Ë

	)

310 
	#FS_IOC_GETFLAGS
 
	`_IOR
('f', 1, )

	)

311 
	#FS_IOC_SETFLAGS
 
	`_IOW
('f', 2, )

	)

312 
	#FS_IOC_GETVERSION
 
	`_IOR
('v', 1, )

	)

313 
	#FS_IOC_SETVERSION
 
	`_IOW
('v', 2, )

	)

314 
	#FS_IOC_FIEMAP
 
	`_IOWR
('f', 11, 
fõm≠
)

	)

315 
	#FS_IOC32_GETFLAGS
 
	`_IOR
('f', 1, )

	)

316 
	#FS_IOC32_SETFLAGS
 
	`_IOW
('f', 2, )

	)

317 
	#FS_IOC32_GETVERSION
 
	`_IOR
('v', 1, )

	)

318 
	#FS_IOC32_SETVERSION
 
	`_IOW
('v', 2, )

	)

323 
	#FS_SECRM_FL
 0x00000001

	)

324 
	#FS_UNRM_FL
 0x00000002

	)

325 
	#FS_COMPR_FL
 0x00000004

	)

326 
	#FS_SYNC_FL
 0x00000008

	)

327 
	#FS_IMMUTABLE_FL
 0x00000010

	)

328 
	#FS_APPEND_FL
 0x00000020

	)

329 
	#FS_NODUMP_FL
 0x00000040

	)

330 
	#FS_NOATIME_FL
 0x00000080

	)

332 
	#FS_DIRTY_FL
 0x00000100

	)

333 
	#FS_COMPRBLK_FL
 0x00000200

	)

334 
	#FS_NOCOMP_FL
 0x00000400

	)

335 
	#FS_ECOMPR_FL
 0x00000800

	)

337 
	#FS_BTREE_FL
 0x00001000

	)

338 
	#FS_INDEX_FL
 0x00001000

	)

339 
	#FS_IMAGIC_FL
 0x00002000

	)

340 
	#FS_JOURNAL_DATA_FL
 0x00004000

	)

341 
	#FS_NOTAIL_FL
 0x00008000

	)

342 
	#FS_DIRSYNC_FL
 0x00010000

	)

343 
	#FS_TOPDIR_FL
 0x00020000

	)

344 
	#FS_EXTENT_FL
 0x00080000

	)

345 
	#FS_DIRECTIO_FL
 0x00100000

	)

346 
	#FS_RESERVED_FL
 0x80000000

	)

348 
	#FS_FL_USER_VISIBLE
 0x0003DFFF

	)

349 
	#FS_FL_USER_MODIFIABLE
 0x000380FF

	)

352 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

353 
	#SYNC_FILE_RANGE_WRITE
 2

	)

354 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

	@/usr/include/linux/i2c.h

26 #i‚de‡
_LINUX_I2C_H


27 
	#_LINUX_I2C_H


	)

29 
	~<löux/ty≥s.h
>

67 
	si2c_msg
 {

68 
__u16
 
	maddr
;

69 
__u16
 
	mÊags
;

70 
	#I2C_M_TEN
 0x0010

	)

71 
	#I2C_M_RD
 0x0001

	)

72 
	#I2C_M_NOSTART
 0x4000

	)

73 
	#I2C_M_REV_DIR_ADDR
 0x2000

	)

74 
	#I2C_M_IGNORE_NAK
 0x1000

	)

75 
	#I2C_M_NO_RD_ACK
 0x0800

	)

76 
	#I2C_M_RECV_LEN
 0x0400

	)

77 
__u16
 
	mÀn
;

78 
__u8
 *
	mbuf
;

83 
	#I2C_FUNC_I2C
 0x00000001

	)

84 
	#I2C_FUNC_10BIT_ADDR
 0x00000002

	)

85 
	#I2C_FUNC_PROTOCOL_MANGLING
 0x00000004

	)

86 
	#I2C_FUNC_SMBUS_PEC
 0x00000008

	)

87 
	#I2C_FUNC_SMBUS_BLOCK_PROC_CALL
 0x00008000

	)

88 
	#I2C_FUNC_SMBUS_QUICK
 0x00010000

	)

89 
	#I2C_FUNC_SMBUS_READ_BYTE
 0x00020000

	)

90 
	#I2C_FUNC_SMBUS_WRITE_BYTE
 0x00040000

	)

91 
	#I2C_FUNC_SMBUS_READ_BYTE_DATA
 0x00080000

	)

92 
	#I2C_FUNC_SMBUS_WRITE_BYTE_DATA
 0x00100000

	)

93 
	#I2C_FUNC_SMBUS_READ_WORD_DATA
 0x00200000

	)

94 
	#I2C_FUNC_SMBUS_WRITE_WORD_DATA
 0x00400000

	)

95 
	#I2C_FUNC_SMBUS_PROC_CALL
 0x00800000

	)

96 
	#I2C_FUNC_SMBUS_READ_BLOCK_DATA
 0x01000000

	)

97 
	#I2C_FUNC_SMBUS_WRITE_BLOCK_DATA
 0x02000000

	)

98 
	#I2C_FUNC_SMBUS_READ_I2C_BLOCK
 0x04000000

	)

99 
	#I2C_FUNC_SMBUS_WRITE_I2C_BLOCK
 0x08000000

	)

101 
	#I2C_FUNC_SMBUS_BYTE
 (
I2C_FUNC_SMBUS_READ_BYTE
 | \

102 
I2C_FUNC_SMBUS_WRITE_BYTE
)

	)

103 
	#I2C_FUNC_SMBUS_BYTE_DATA
 (
I2C_FUNC_SMBUS_READ_BYTE_DATA
 | \

104 
I2C_FUNC_SMBUS_WRITE_BYTE_DATA
)

	)

105 
	#I2C_FUNC_SMBUS_WORD_DATA
 (
I2C_FUNC_SMBUS_READ_WORD_DATA
 | \

106 
I2C_FUNC_SMBUS_WRITE_WORD_DATA
)

	)

107 
	#I2C_FUNC_SMBUS_BLOCK_DATA
 (
I2C_FUNC_SMBUS_READ_BLOCK_DATA
 | \

108 
I2C_FUNC_SMBUS_WRITE_BLOCK_DATA
)

	)

109 
	#I2C_FUNC_SMBUS_I2C_BLOCK
 (
I2C_FUNC_SMBUS_READ_I2C_BLOCK
 | \

110 
I2C_FUNC_SMBUS_WRITE_I2C_BLOCK
)

	)

112 
	#I2C_FUNC_SMBUS_EMUL
 (
I2C_FUNC_SMBUS_QUICK
 | \

113 
I2C_FUNC_SMBUS_BYTE
 | \

114 
I2C_FUNC_SMBUS_BYTE_DATA
 | \

115 
I2C_FUNC_SMBUS_WORD_DATA
 | \

116 
I2C_FUNC_SMBUS_PROC_CALL
 | \

117 
I2C_FUNC_SMBUS_WRITE_BLOCK_DATA
 | \

118 
I2C_FUNC_SMBUS_I2C_BLOCK
 | \

119 
I2C_FUNC_SMBUS_PEC
)

	)

124 
	#I2C_SMBUS_BLOCK_MAX
 32

	)

125 
	ui2c_smbus_d©a
 {

126 
__u8
 
	mbyã
;

127 
__u16
 
	mw‹d
;

128 
__u8
 
	mblock
[
I2C_SMBUS_BLOCK_MAX
 + 2];

133 
	#I2C_SMBUS_READ
 1

	)

134 
	#I2C_SMBUS_WRITE
 0

	)

138 
	#I2C_SMBUS_QUICK
 0

	)

139 
	#I2C_SMBUS_BYTE
 1

	)

140 
	#I2C_SMBUS_BYTE_DATA
 2

	)

141 
	#I2C_SMBUS_WORD_DATA
 3

	)

142 
	#I2C_SMBUS_PROC_CALL
 4

	)

143 
	#I2C_SMBUS_BLOCK_DATA
 5

	)

144 
	#I2C_SMBUS_I2C_BLOCK_BROKEN
 6

	)

145 
	#I2C_SMBUS_BLOCK_PROC_CALL
 7

	)

146 
	#I2C_SMBUS_I2C_BLOCK_DATA
 8

	)

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/kdev_t.h

1 #i‚de‡
_LINUX_KDEV_T_H


2 
	#_LINUX_KDEV_T_H


	)

8 
	#MAJOR
(
dev
Ë((dev)>>8)

	)

9 
	#MINOR
(
dev
Ë((devË& 0xff)

	)

10 
	#MKDEV
(
ma
,
mi
Ë((ma)<<8 | (mi))

	)

	@/usr/include/linux/kernel.h

1 #i‚de‡
_LINUX_KERNEL_H


2 
	#_LINUX_KERNEL_H


	)

9 
	#SI_LOAD_SHIFT
 16

	)

10 
	ssysöfo
 {

11 
	mu±ime
;

12 
	mlﬂds
[3];

13 
	mtŸÆøm
;

14 
	m‰ìøm
;

15 
	msh¨edøm
;

16 
	mbuf„ºam
;

17 
	mtŸÆsw≠
;

18 
	m‰ìsw≠
;

19 
	m¥ocs
;

20 
	m∑d
;

21 
	mtŸÆhigh
;

22 
	m‰ìhigh
;

23 
	mmem_unô
;

24 
	m_f
[20-2*()-()];

28 
	#BUILD_BUG_ON
(
c⁄dôi⁄
Ë(()([1 - 2*!!(c⁄dôi⁄)]))

	)

34 
	#BUILD_BUG_ON_ZERO
(
e
Ë(([1 - 2 * !!”)]Ë- 1)

	)

37 
	#__FUNCTION__
 (
__func__
)

	)

40 #ifde‡
CONFIG_NUMA


41 
	#NUMA_BUILD
 1

	)

43 
	#NUMA_BUILD
 0

	)

47 #ifde‡
CONFIG_FTRACE_MCOUNT_RECORD


48 
	#REBUILD_DUE_TO_FTRACE_MCOUNT_RECORD


	)

	@/usr/include/linux/pci.h

17 #i‚de‡
LINUX_PCI_H


18 
	#LINUX_PCI_H


	)

20 
	~<löux/pci_ªgs.h
>

30 
	#PCI_DEVFN
(
¶Ÿ
, 
func
Ë((((¶ŸË& 0x1fË<< 3Ë| ((funcË& 0x07))

	)

31 
	#PCI_SLOT
(
dev‚
Ë(((dev‚Ë>> 3Ë& 0x1f)

	)

32 
	#PCI_FUNC
(
dev‚
Ë((dev‚Ë& 0x07)

	)

35 
	#PCIIOC_BASE
 ('P' << 24 | 'C' << 16 | 'I' << 8)

	)

36 
	#PCIIOC_CONTROLLER
 (
PCIIOC_BASE
 | 0x00Ë

	)

37 
	#PCIIOC_MMAP_IS_IO
 (
PCIIOC_BASE
 | 0x01Ë

	)

38 
	#PCIIOC_MMAP_IS_MEM
 (
PCIIOC_BASE
 | 0x02Ë

	)

39 
	#PCIIOC_WRITE_COMBINE
 (
PCIIOC_BASE
 | 0x03Ë

	)

	@/usr/include/linux/poll.h

1 #i‚de‡
_LINUX_POLL_H


2 
	#_LINUX_POLL_H


	)

4 
	~<asm/pﬁl.h
>

	@/usr/include/linux/rtc.h

11 #i‚de‡
_LINUX_RTC_H_


12 
	#_LINUX_RTC_H_


	)

20 
	sπc_time
 {

21 
	mtm_£c
;

22 
	mtm_mö
;

23 
	mtm_hour
;

24 
	mtm_mday
;

25 
	mtm_m⁄
;

26 
	mtm_yór
;

27 
	mtm_wday
;

28 
	mtm_yday
;

29 
	mtm_isd°
;

36 
	sπc_wkÆrm
 {

37 
	míabÀd
;

38 
	m≥ndög
;

39 
πc_time
 
	mtime
;

55 
	sπc_∂l_öfo
 {

56 
	m∂l_˘æ
;

57 
	m∂l_vÆue
;

58 
	m∂l_max
;

59 
	m∂l_mö
;

60 
	m∂l_posmu…
;

61 
	m∂l_√gmu…
;

62 
	m∂l_˛ock
;

70 
	#RTC_AIE_ON
 
	`_IO
('p', 0x01Ë

	)

71 
	#RTC_AIE_OFF
 
	`_IO
('p', 0x02Ë

	)

72 
	#RTC_UIE_ON
 
	`_IO
('p', 0x03Ë

	)

73 
	#RTC_UIE_OFF
 
	`_IO
('p', 0x04Ë

	)

74 
	#RTC_PIE_ON
 
	`_IO
('p', 0x05Ë

	)

75 
	#RTC_PIE_OFF
 
	`_IO
('p', 0x06Ë

	)

76 
	#RTC_WIE_ON
 
	`_IO
('p', 0x0fË

	)

77 
	#RTC_WIE_OFF
 
	`_IO
('p', 0x10Ë

	)

79 
	#RTC_ALM_SET
 
	`_IOW
('p', 0x07, 
πc_time
Ë

	)

80 
	#RTC_ALM_READ
 
	`_IOR
('p', 0x08, 
πc_time
Ë

	)

81 
	#RTC_RD_TIME
 
	`_IOR
('p', 0x09, 
πc_time
Ë

	)

82 
	#RTC_SET_TIME
 
	`_IOW
('p', 0x0a, 
πc_time
Ë

	)

83 
	#RTC_IRQP_READ
 
	`_IOR
('p', 0x0b, Ë

	)

84 
	#RTC_IRQP_SET
 
	`_IOW
('p', 0x0c, Ë

	)

85 
	#RTC_EPOCH_READ
 
	`_IOR
('p', 0x0d, Ë

	)

86 
	#RTC_EPOCH_SET
 
	`_IOW
('p', 0x0e, Ë

	)

88 
	#RTC_WKALM_SET
 
	`_IOW
('p', 0x0f, 
πc_wkÆrm
)

	)

89 
	#RTC_WKALM_RD
 
	`_IOR
('p', 0x10, 
πc_wkÆrm
)

	)

91 
	#RTC_PLL_GET
 
	`_IOR
('p', 0x11, 
πc_∂l_öfo
Ë

	)

92 
	#RTC_PLL_SET
 
	`_IOW
('p', 0x12, 
πc_∂l_öfo
Ë

	)

95 
	#RTC_IRQF
 0x80

	)

96 
	#RTC_PF
 0x40

	)

97 
	#RTC_AF
 0x20

	)

98 
	#RTC_UF
 0x10

	)

	@/usr/include/linux/sched.h

1 #i‚de‡
_LINUX_SCHED_H


2 
	#_LINUX_SCHED_H


	)

7 
	#CSIGNAL
 0x000000f‡

	)

8 
	#CLONE_VM
 0x00000100

	)

9 
	#CLONE_FS
 0x00000200

	)

10 
	#CLONE_FILES
 0x00000400

	)

11 
	#CLONE_SIGHAND
 0x00000800

	)

12 
	#CLONE_PTRACE
 0x00002000

	)

13 
	#CLONE_VFORK
 0x00004000

	)

14 
	#CLONE_PARENT
 0x00008000

	)

15 
	#CLONE_THREAD
 0x00010000

	)

16 
	#CLONE_NEWNS
 0x00020000

	)

17 
	#CLONE_SYSVSEM
 0x00040000

	)

18 
	#CLONE_SETTLS
 0x00080000

	)

19 
	#CLONE_PARENT_SETTID
 0x00100000

	)

20 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

21 
	#CLONE_DETACHED
 0x00400000

	)

22 
	#CLONE_UNTRACED
 0x00800000

	)

23 
	#CLONE_CHILD_SETTID
 0x01000000

	)

24 
	#CLONE_STOPPED
 0x02000000

	)

25 
	#CLONE_NEWUTS
 0x04000000

	)

26 
	#CLONE_NEWIPC
 0x08000000

	)

27 
	#CLONE_NEWUSER
 0x10000000

	)

28 
	#CLONE_NEWPID
 0x20000000

	)

29 
	#CLONE_NEWNET
 0x40000000

	)

30 
	#CLONE_IO
 0x80000000

	)

35 
	#SCHED_NORMAL
 0

	)

36 
	#SCHED_FIFO
 1

	)

37 
	#SCHED_RR
 2

	)

38 
	#SCHED_BATCH
 3

	)

40 
	#SCHED_IDLE
 5

	)

	@/usr/include/linux/time.h

1 #i‚de‡
_LINUX_TIME_H


2 
	#_LINUX_TIME_H


	)

4 
	~<löux/ty≥s.h
>

7 #i‚de‡
_STRUCT_TIMESPEC


8 
	#_STRUCT_TIMESPEC


	)

9 
	stime•ec
 {

10 
__kî√l_time_t
 
	mtv_£c
;

11 
	mtv_n£c
;

15 
	stimevÆ
 {

16 
__kî√l_time_t
 
	mtv_£c
;

17 
__kî√l_su£c⁄ds_t
 
	mtv_u£c
;

20 
	stimez⁄e
 {

21 
	mtz_möuãswe°
;

22 
	mtz_d°time
;

26 
	#NFDBITS
 
__NFDBITS


	)

28 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

29 
	#FD_SET
(
fd
,
fd£ç
Ë
	`__FD_SET
(fd,fd£ç)

	)

30 
	#FD_CLR
(
fd
,
fd£ç
Ë
	`__FD_CLR
(fd,fd£ç)

	)

31 
	#FD_ISSET
(
fd
,
fd£ç
Ë
	`__FD_ISSET
(fd,fd£ç)

	)

32 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
(fd£ç)

	)

38 
	#ITIMER_REAL
 0

	)

39 
	#ITIMER_VIRTUAL
 1

	)

40 
	#ITIMER_PROF
 2

	)

42 
	sôimî•ec
 {

43 
time•ec
 
	mô_öãrvÆ
;

44 
time•ec
 
	mô_vÆue
;

47 
	sôimîvÆ
 {

48 
timevÆ
 
	mô_öãrvÆ
;

49 
timevÆ
 
	mô_vÆue
;

55 
	#CLOCK_REALTIME
 0

	)

56 
	#CLOCK_MONOTONIC
 1

	)

57 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

58 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

59 
	#CLOCK_MONOTONIC_RAW
 4

	)

64 
	#CLOCK_SGI_CYCLE
 10

	)

65 
	#MAX_CLOCKS
 16

	)

66 
	#CLOCKS_MASK
 (
CLOCK_REALTIME
 | 
CLOCK_MONOTONIC
)

	)

67 
	#CLOCKS_MONO
 
CLOCK_MONOTONIC


	)

72 
	#TIMER_ABSTIME
 0x01

	)

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

	@/usr/include/linux/unistd.h

1 #i‚de‡
_LINUX_UNISTD_H_


2 
	#_LINUX_UNISTD_H_


	)

7 
	~<asm/uni°d.h
>

	@/usr/include/linux/version.h

1 
	#LINUX_VERSION_CODE
 132639

	)

2 
	#KERNEL_VERSION
(
a
,
b
,
c
Ë((◊Ë<< 16Ë+ ((bË<< 8Ë+ (c))

	)

	@/usr/include/linux/videodev2.h

56 #i‚de‡
__LINUX_VIDEODEV2_H


57 
	#__LINUX_VIDEODEV2_H


	)

59 
	~<sys/time.h
>

61 
	~<löux/io˘l.h
>

62 
	~<löux/ty≥s.h
>

68 
	#VIDEO_MAX_FRAME
 32

	)

74 
	#VID_TYPE_CAPTURE
 1

	)

75 
	#VID_TYPE_TUNER
 2

	)

76 
	#VID_TYPE_TELETEXT
 4

	)

77 
	#VID_TYPE_OVERLAY
 8

	)

78 
	#VID_TYPE_CHROMAKEY
 16

	)

79 
	#VID_TYPE_CLIPPING
 32

	)

80 
	#VID_TYPE_FRAMERAM
 64

	)

81 
	#VID_TYPE_SCALES
 128

	)

82 
	#VID_TYPE_MONOCHROME
 256

	)

83 
	#VID_TYPE_SUBCAPTURE
 512

	)

84 
	#VID_TYPE_MPEG_DECODER
 1024

	)

85 
	#VID_TYPE_MPEG_ENCODER
 2048

	)

86 
	#VID_TYPE_MJPEG_DECODER
 4096

	)

87 
	#VID_TYPE_MJPEG_ENCODER
 8192

	)

94 
	#v4l2_fourcc
(
a
, 
b
, 
c
, 
d
)\

95 ((
__u32
)(
a
Ë| ((__u32)(
b
Ë<< 8Ë| ((__u32)(
c
Ë<< 16Ë| ((__u32)(
d
Ë<< 24))

	)

100 
	ev4l2_fõld
 {

101 
	mV4L2_FIELD_ANY
 = 0,

105 
	mV4L2_FIELD_NONE
 = 1,

106 
	mV4L2_FIELD_TOP
 = 2,

107 
	mV4L2_FIELD_BOTTOM
 = 3,

108 
	mV4L2_FIELD_INTERLACED
 = 4,

109 
	mV4L2_FIELD_SEQ_TB
 = 5,

111 
	mV4L2_FIELD_SEQ_BT
 = 6,

112 
	mV4L2_FIELD_ALTERNATE
 = 7,

114 
	mV4L2_FIELD_INTERLACED_TB
 = 8,

117 
	mV4L2_FIELD_INTERLACED_BT
 = 9,

121 
	#V4L2_FIELD_HAS_TOP
(
fõld
) \

122 ((
fõld
Ë=
V4L2_FIELD_TOP
 ||\

123 (
fõld
Ë=
V4L2_FIELD_INTERLACED
 ||\

124 (
fõld
Ë=
V4L2_FIELD_INTERLACED_TB
 ||\

125 (
fõld
Ë=
V4L2_FIELD_INTERLACED_BT
 ||\

126 (
fõld
Ë=
V4L2_FIELD_SEQ_TB
 ||\

127 (
fõld
Ë=
V4L2_FIELD_SEQ_BT
)

	)

128 
	#V4L2_FIELD_HAS_BOTTOM
(
fõld
) \

129 ((
fõld
Ë=
V4L2_FIELD_BOTTOM
 ||\

130 (
fõld
Ë=
V4L2_FIELD_INTERLACED
 ||\

131 (
fõld
Ë=
V4L2_FIELD_INTERLACED_TB
 ||\

132 (
fõld
Ë=
V4L2_FIELD_INTERLACED_BT
 ||\

133 (
fõld
Ë=
V4L2_FIELD_SEQ_TB
 ||\

134 (
fõld
Ë=
V4L2_FIELD_SEQ_BT
)

	)

135 
	#V4L2_FIELD_HAS_BOTH
(
fõld
) \

136 ((
fõld
Ë=
V4L2_FIELD_INTERLACED
 ||\

137 (
fõld
Ë=
V4L2_FIELD_INTERLACED_TB
 ||\

138 (
fõld
Ë=
V4L2_FIELD_INTERLACED_BT
 ||\

139 (
fõld
Ë=
V4L2_FIELD_SEQ_TB
 ||\

140 (
fõld
Ë=
V4L2_FIELD_SEQ_BT
)

	)

142 
	ev4l2_buf_ty≥
 {

143 
	mV4L2_BUF_TYPE_VIDEO_CAPTURE
 = 1,

144 
	mV4L2_BUF_TYPE_VIDEO_OUTPUT
 = 2,

145 
	mV4L2_BUF_TYPE_VIDEO_OVERLAY
 = 3,

146 
	mV4L2_BUF_TYPE_VBI_CAPTURE
 = 4,

147 
	mV4L2_BUF_TYPE_VBI_OUTPUT
 = 5,

148 
	mV4L2_BUF_TYPE_SLICED_VBI_CAPTURE
 = 6,

149 
	mV4L2_BUF_TYPE_SLICED_VBI_OUTPUT
 = 7,

152 
	mV4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY
 = 8,

154 
	mV4L2_BUF_TYPE_PRIVATE
 = 0x80,

157 
	ev4l2_˘æ_ty≥
 {

158 
	mV4L2_CTRL_TYPE_INTEGER
 = 1,

159 
	mV4L2_CTRL_TYPE_BOOLEAN
 = 2,

160 
	mV4L2_CTRL_TYPE_MENU
 = 3,

161 
	mV4L2_CTRL_TYPE_BUTTON
 = 4,

162 
	mV4L2_CTRL_TYPE_INTEGER64
 = 5,

163 
	mV4L2_CTRL_TYPE_CTRL_CLASS
 = 6,

166 
	ev4l2_tu√r_ty≥
 {

167 
	mV4L2_TUNER_RADIO
 = 1,

168 
	mV4L2_TUNER_ANALOG_TV
 = 2,

169 
	mV4L2_TUNER_DIGITAL_TV
 = 3,

172 
	ev4l2_mem‹y
 {

173 
	mV4L2_MEMORY_MMAP
 = 1,

174 
	mV4L2_MEMORY_USERPTR
 = 2,

175 
	mV4L2_MEMORY_OVERLAY
 = 3,

179 
	ev4l2_cﬁ‹•a˚
 {

181 
	mV4L2_COLORSPACE_SMPTE170M
 = 1,

184 
	mV4L2_COLORSPACE_SMPTE240M
 = 2,

187 
	mV4L2_COLORSPACE_REC709
 = 3,

190 
	mV4L2_COLORSPACE_BT878
 = 4,

193 
	mV4L2_COLORSPACE_470_SYSTEM_M
 = 5,

194 
	mV4L2_COLORSPACE_470_SYSTEM_BG
 = 6,

200 
	mV4L2_COLORSPACE_JPEG
 = 7,

203 
	mV4L2_COLORSPACE_SRGB
 = 8,

206 
	ev4l2_¥i‹ôy
 {

207 
	mV4L2_PRIORITY_UNSET
 = 0,

208 
	mV4L2_PRIORITY_BACKGROUND
 = 1,

209 
	mV4L2_PRIORITY_INTERACTIVE
 = 2,

210 
	mV4L2_PRIORITY_RECORD
 = 3,

211 
	mV4L2_PRIORITY_DEFAULT
 = 
V4L2_PRIORITY_INTERACTIVE
,

214 
	sv4l2_ª˘
 {

215 
__s32
 
	mÀ·
;

216 
__s32
 
	mt›
;

217 
__s32
 
	mwidth
;

218 
__s32
 
	mheight
;

221 
	sv4l2_‰a˘
 {

222 
__u32
 
	mnumî©‹
;

223 
__u32
 
	mdíomö©‹
;

229 
	sv4l2_ˇ∑bûôy
 {

230 
__u8
 
	mdrivî
[16];

231 
__u8
 
	mˇrd
[32];

232 
__u8
 
	mbus_öfo
[32];

233 
__u32
 
	mvîsi⁄
;

234 
__u32
 
	mˇ∑bûôõs
;

235 
__u32
 
	mª£rved
[4];

239 
	#V4L2_CAP_VIDEO_CAPTURE
 0x00000001

	)

240 
	#V4L2_CAP_VIDEO_OUTPUT
 0x00000002

	)

241 
	#V4L2_CAP_VIDEO_OVERLAY
 0x00000004

	)

242 
	#V4L2_CAP_VBI_CAPTURE
 0x00000010

	)

243 
	#V4L2_CAP_VBI_OUTPUT
 0x00000020

	)

244 
	#V4L2_CAP_SLICED_VBI_CAPTURE
 0x00000040

	)

245 
	#V4L2_CAP_SLICED_VBI_OUTPUT
 0x00000080

	)

246 
	#V4L2_CAP_RDS_CAPTURE
 0x00000100

	)

247 
	#V4L2_CAP_VIDEO_OUTPUT_OVERLAY
 0x00000200

	)

248 
	#V4L2_CAP_HW_FREQ_SEEK
 0x00000400

	)

250 
	#V4L2_CAP_TUNER
 0x00010000

	)

251 
	#V4L2_CAP_AUDIO
 0x00020000

	)

252 
	#V4L2_CAP_RADIO
 0x00040000

	)

254 
	#V4L2_CAP_READWRITE
 0x01000000

	)

255 
	#V4L2_CAP_ASYNCIO
 0x02000000

	)

256 
	#V4L2_CAP_STREAMING
 0x04000000

	)

261 
	sv4l2_pix_f‹m©
 {

262 
__u32
 
	mwidth
;

263 
__u32
 
	mheight
;

264 
__u32
 
	mpixñf‹m©
;

265 
v4l2_fõld
 
	mfõld
;

266 
__u32
 
	mbyã•îlöe
;

267 
__u32
 
	msizeimage
;

268 
v4l2_cﬁ‹•a˚
 
	mcﬁ‹•a˚
;

269 
__u32
 
	m¥iv
;

273 
	#V4L2_PIX_FMT_RGB332
 
	`v4l2_fourcc
('R', 'G', 'B', '1'Ë

	)

274 
	#V4L2_PIX_FMT_RGB444
 
	`v4l2_fourcc
('R', '4', '4', '4'Ë

	)

275 
	#V4L2_PIX_FMT_RGB555
 
	`v4l2_fourcc
('R', 'G', 'B', 'O'Ë

	)

276 
	#V4L2_PIX_FMT_RGB565
 
	`v4l2_fourcc
('R', 'G', 'B', 'P'Ë

	)

277 
	#V4L2_PIX_FMT_RGB555X
 
	`v4l2_fourcc
('R', 'G', 'B', 'Q'Ë

	)

278 
	#V4L2_PIX_FMT_RGB565X
 
	`v4l2_fourcc
('R', 'G', 'B', 'R'Ë

	)

279 
	#V4L2_PIX_FMT_BGR24
 
	`v4l2_fourcc
('B', 'G', 'R', '3'Ë

	)

280 
	#V4L2_PIX_FMT_RGB24
 
	`v4l2_fourcc
('R', 'G', 'B', '3'Ë

	)

281 
	#V4L2_PIX_FMT_BGR32
 
	`v4l2_fourcc
('B', 'G', 'R', '4'Ë

	)

282 
	#V4L2_PIX_FMT_RGB32
 
	`v4l2_fourcc
('R', 'G', 'B', '4'Ë

	)

283 
	#V4L2_PIX_FMT_GREY
 
	`v4l2_fourcc
('G', 'R', 'E', 'Y'Ë

	)

284 
	#V4L2_PIX_FMT_Y16
 
	`v4l2_fourcc
('Y', '1', '6', ' 'Ë

	)

285 
	#V4L2_PIX_FMT_PAL8
 
	`v4l2_fourcc
('P', 'A', 'L', '8'Ë

	)

286 
	#V4L2_PIX_FMT_YVU410
 
	`v4l2_fourcc
('Y', 'V', 'U', '9'Ë

	)

287 
	#V4L2_PIX_FMT_YVU420
 
	`v4l2_fourcc
('Y', 'V', '1', '2'Ë

	)

288 
	#V4L2_PIX_FMT_YUYV
 
	`v4l2_fourcc
('Y', 'U', 'Y', 'V'Ë

	)

289 
	#V4L2_PIX_FMT_UYVY
 
	`v4l2_fourcc
('U', 'Y', 'V', 'Y'Ë

	)

290 
	#V4L2_PIX_FMT_VYUY
 
	`v4l2_fourcc
('V', 'Y', 'U', 'Y'Ë

	)

291 
	#V4L2_PIX_FMT_YUV422P
 
	`v4l2_fourcc
('4', '2', '2', 'P'Ë

	)

292 
	#V4L2_PIX_FMT_YUV411P
 
	`v4l2_fourcc
('4', '1', '1', 'P'Ë

	)

293 
	#V4L2_PIX_FMT_Y41P
 
	`v4l2_fourcc
('Y', '4', '1', 'P'Ë

	)

294 
	#V4L2_PIX_FMT_YUV444
 
	`v4l2_fourcc
('Y', '4', '4', '4'Ë

	)

295 
	#V4L2_PIX_FMT_YUV555
 
	`v4l2_fourcc
('Y', 'U', 'V', 'O'Ë

	)

296 
	#V4L2_PIX_FMT_YUV565
 
	`v4l2_fourcc
('Y', 'U', 'V', 'P'Ë

	)

297 
	#V4L2_PIX_FMT_YUV32
 
	`v4l2_fourcc
('Y', 'U', 'V', '4'Ë

	)

300 
	#V4L2_PIX_FMT_NV12
 
	`v4l2_fourcc
('N', 'V', '1', '2'Ë

	)

301 
	#V4L2_PIX_FMT_NV21
 
	`v4l2_fourcc
('N', 'V', '2', '1'Ë

	)

302 
	#V4L2_PIX_FMT_NV16
 
	`v4l2_fourcc
('N', 'V', '1', '6'Ë

	)

303 
	#V4L2_PIX_FMT_NV61
 
	`v4l2_fourcc
('N', 'V', '6', '1'Ë

	)

306 
	#V4L2_PIX_FMT_YUV410
 
	`v4l2_fourcc
('Y', 'U', 'V', '9'Ë

	)

307 
	#V4L2_PIX_FMT_YUV420
 
	`v4l2_fourcc
('Y', 'U', '1', '2'Ë

	)

308 
	#V4L2_PIX_FMT_YYUV
 
	`v4l2_fourcc
('Y', 'Y', 'U', 'V'Ë

	)

309 
	#V4L2_PIX_FMT_HI240
 
	`v4l2_fourcc
('H', 'I', '2', '4'Ë

	)

310 
	#V4L2_PIX_FMT_HM12
 
	`v4l2_fourcc
('H', 'M', '1', '2'Ë

	)

313 
	#V4L2_PIX_FMT_SBGGR8
 
	`v4l2_fourcc
('B', 'A', '8', '1'Ë

	)

314 
	#V4L2_PIX_FMT_SGBRG8
 
	`v4l2_fourcc
('G', 'B', 'R', 'G'Ë

	)

315 
	#V4L2_PIX_FMT_SGRBG8
 
	`v4l2_fourcc
('G', 'R', 'B', 'G'Ë

	)

321 
	#V4L2_PIX_FMT_SGRBG10
 
	`v4l2_fourcc
('B', 'A', '1', '0')

	)

323 
	#V4L2_PIX_FMT_SGRBG10DPCM8
 
	`v4l2_fourcc
('B', 'D', '1', '0')

	)

324 
	#V4L2_PIX_FMT_SBGGR16
 
	`v4l2_fourcc
('B', 'Y', 'R', '2'Ë

	)

327 
	#V4L2_PIX_FMT_MJPEG
 
	`v4l2_fourcc
('M', 'J', 'P', 'G'Ë

	)

328 
	#V4L2_PIX_FMT_JPEG
 
	`v4l2_fourcc
('J', 'P', 'E', 'G'Ë

	)

329 
	#V4L2_PIX_FMT_DV
 
	`v4l2_fourcc
('d', 'v', 's', 'd'Ë

	)

330 
	#V4L2_PIX_FMT_MPEG
 
	`v4l2_fourcc
('M', 'P', 'E', 'G'Ë

	)

333 
	#V4L2_PIX_FMT_WNVA
 
	`v4l2_fourcc
('W', 'N', 'V', 'A'Ë

	)

334 
	#V4L2_PIX_FMT_SN9C10X
 
	`v4l2_fourcc
('S', '9', '1', '0'Ë

	)

335 
	#V4L2_PIX_FMT_SN9C20X_I420
 
	`v4l2_fourcc
('S', '9', '2', '0'Ë

	)

336 
	#V4L2_PIX_FMT_PWC1
 
	`v4l2_fourcc
('P', 'W', 'C', '1'Ë

	)

337 
	#V4L2_PIX_FMT_PWC2
 
	`v4l2_fourcc
('P', 'W', 'C', '2'Ë

	)

338 
	#V4L2_PIX_FMT_ET61X251
 
	`v4l2_fourcc
('E', '6', '2', '5'Ë

	)

339 
	#V4L2_PIX_FMT_SPCA501
 
	`v4l2_fourcc
('S', '5', '0', '1'Ë

	)

340 
	#V4L2_PIX_FMT_SPCA505
 
	`v4l2_fourcc
('S', '5', '0', '5'Ë

	)

341 
	#V4L2_PIX_FMT_SPCA508
 
	`v4l2_fourcc
('S', '5', '0', '8'Ë

	)

342 
	#V4L2_PIX_FMT_SPCA561
 
	`v4l2_fourcc
('S', '5', '6', '1'Ë

	)

343 
	#V4L2_PIX_FMT_PAC207
 
	`v4l2_fourcc
('P', '2', '0', '7'Ë

	)

344 
	#V4L2_PIX_FMT_MR97310A
 
	`v4l2_fourcc
('M', '3', '1', '0'Ë

	)

345 
	#V4L2_PIX_FMT_SQ905C
 
	`v4l2_fourcc
('9', '0', '5', 'C'Ë

	)

346 
	#V4L2_PIX_FMT_PJPG
 
	`v4l2_fourcc
('P', 'J', 'P', 'G'Ë

	)

347 
	#V4L2_PIX_FMT_YVYU
 
	`v4l2_fourcc
('Y', 'V', 'Y', 'U'Ë

	)

348 
	#V4L2_PIX_FMT_OV511
 
	`v4l2_fourcc
('O', '5', '1', '1'Ë

	)

349 
	#V4L2_PIX_FMT_OV518
 
	`v4l2_fourcc
('O', '5', '1', '8'Ë

	)

354 
	sv4l2_fmtdesc
 {

355 
__u32
 
	mödex
;

356 
v4l2_buf_ty≥
 
	mty≥
;

357 
__u32
 
	mÊags
;

358 
__u8
 
	mdes¸ùti⁄
[32];

359 
__u32
 
	mpixñf‹m©
;

360 
__u32
 
	mª£rved
[4];

363 
	#V4L2_FMT_FLAG_COMPRESSED
 0x0001

	)

370 
	ev4l2_‰msizëy≥s
 {

371 
	mV4L2_FRMSIZE_TYPE_DISCRETE
 = 1,

372 
	mV4L2_FRMSIZE_TYPE_CONTINUOUS
 = 2,

373 
	mV4L2_FRMSIZE_TYPE_STEPWISE
 = 3,

376 
	sv4l2_‰msize_dis¸ëe
 {

377 
__u32
 
	mwidth
;

378 
__u32
 
	mheight
;

381 
	sv4l2_‰msize_°ïwi£
 {

382 
__u32
 
	mmö_width
;

383 
__u32
 
	mmax_width
;

384 
__u32
 
	m°ï_width
;

385 
__u32
 
	mmö_height
;

386 
__u32
 
	mmax_height
;

387 
__u32
 
	m°ï_height
;

390 
	sv4l2_‰msizìnum
 {

391 
__u32
 
	mödex
;

392 
__u32
 
	mpixñ_f‹m©
;

393 
__u32
 
	mty≥
;

396 
v4l2_‰msize_dis¸ëe
 
	mdis¸ëe
;

397 
v4l2_‰msize_°ïwi£
 
	m°ïwi£
;

400 
__u32
 
	mª£rved
[2];

406 
	ev4l2_‰mivÆty≥s
 {

407 
	mV4L2_FRMIVAL_TYPE_DISCRETE
 = 1,

408 
	mV4L2_FRMIVAL_TYPE_CONTINUOUS
 = 2,

409 
	mV4L2_FRMIVAL_TYPE_STEPWISE
 = 3,

412 
	sv4l2_‰mivÆ_°ïwi£
 {

413 
v4l2_‰a˘
 
	mmö
;

414 
v4l2_‰a˘
 
	mmax
;

415 
v4l2_‰a˘
 
	m°ï
;

418 
	sv4l2_‰mivÆíum
 {

419 
__u32
 
	mödex
;

420 
__u32
 
	mpixñ_f‹m©
;

421 
__u32
 
	mwidth
;

422 
__u32
 
	mheight
;

423 
__u32
 
	mty≥
;

426 
v4l2_‰a˘
 
	mdis¸ëe
;

427 
v4l2_‰mivÆ_°ïwi£
 
	m°ïwi£
;

430 
__u32
 
	mª£rved
[2];

437 
	sv4l2_timecode
 {

438 
__u32
 
	mty≥
;

439 
__u32
 
	mÊags
;

440 
__u8
 
	m‰ames
;

441 
__u8
 
	m£c⁄ds
;

442 
__u8
 
	mmöuãs
;

443 
__u8
 
	mhours
;

444 
__u8
 
	mu£rbôs
[4];

448 
	#V4L2_TC_TYPE_24FPS
 1

	)

449 
	#V4L2_TC_TYPE_25FPS
 2

	)

450 
	#V4L2_TC_TYPE_30FPS
 3

	)

451 
	#V4L2_TC_TYPE_50FPS
 4

	)

452 
	#V4L2_TC_TYPE_60FPS
 5

	)

455 
	#V4L2_TC_FLAG_DROPFRAME
 0x0001

	)

456 
	#V4L2_TC_FLAG_COLORFRAME
 0x0002

	)

457 
	#V4L2_TC_USERBITS_fõld
 0x000C

	)

458 
	#V4L2_TC_USERBITS_USERDEFINED
 0x0000

	)

459 
	#V4L2_TC_USERBITS_8BITCHARS
 0x0008

	)

462 
	sv4l2_j≥gcom¥essi⁄
 {

463 
	mquÆôy
;

465 
	mAPPn
;

467 
	mAPP_Àn
;

468 
	mAPP_d©a
[60];

470 
	mCOM_Àn
;

471 
	mCOM_d©a
[60];

473 
__u32
 
	mj≥g_m¨kîs
;

483 
	#V4L2_JPEG_MARKER_DHT
 (1<<3Ë

	)

484 
	#V4L2_JPEG_MARKER_DQT
 (1<<4Ë

	)

485 
	#V4L2_JPEG_MARKER_DRI
 (1<<5Ë

	)

486 
	#V4L2_JPEG_MARKER_COM
 (1<<6Ë

	)

487 
	#V4L2_JPEG_MARKER_APP
 (1<<7Ë

	)

494 
	sv4l2_ªque°buf„rs
 {

495 
__u32
 
	mcou¡
;

496 
v4l2_buf_ty≥
 
	mty≥
;

497 
v4l2_mem‹y
 
	mmem‹y
;

498 
__u32
 
	mª£rved
[2];

501 
	sv4l2_buf„r
 {

502 
__u32
 
	mödex
;

503 
v4l2_buf_ty≥
 
	mty≥
;

504 
__u32
 
	mbyãsu£d
;

505 
__u32
 
	mÊags
;

506 
v4l2_fõld
 
	mfõld
;

507 
timevÆ
 
	mtime°amp
;

508 
v4l2_timecode
 
	mtimecode
;

509 
__u32
 
	m£quí˚
;

512 
v4l2_mem‹y
 
	mmem‹y
;

514 
__u32
 
	moff£t
;

515 
	mu£Ωå
;

516 } 
	mm
;

517 
__u32
 
	mÀngth
;

518 
__u32
 
	möput
;

519 
__u32
 
	mª£rved
;

523 
	#V4L2_BUF_FLAG_MAPPED
 0x0001

	)

524 
	#V4L2_BUF_FLAG_QUEUED
 0x0002

	)

525 
	#V4L2_BUF_FLAG_DONE
 0x0004

	)

526 
	#V4L2_BUF_FLAG_KEYFRAME
 0x0008

	)

527 
	#V4L2_BUF_FLAG_PFRAME
 0x0010

	)

528 
	#V4L2_BUF_FLAG_BFRAME
 0x0020

	)

529 
	#V4L2_BUF_FLAG_TIMECODE
 0x0100

	)

530 
	#V4L2_BUF_FLAG_INPUT
 0x0200

	)

535 
	sv4l2_‰amebuf„r
 {

536 
__u32
 
	mˇ∑bûôy
;

537 
__u32
 
	mÊags
;

540 *
	mba£
;

541 
v4l2_pix_f‹m©
 
	mfmt
;

544 
	#V4L2_FBUF_CAP_EXTERNOVERLAY
 0x0001

	)

545 
	#V4L2_FBUF_CAP_CHROMAKEY
 0x0002

	)

546 
	#V4L2_FBUF_CAP_LIST_CLIPPING
 0x0004

	)

547 
	#V4L2_FBUF_CAP_BITMAP_CLIPPING
 0x0008

	)

548 
	#V4L2_FBUF_CAP_LOCAL_ALPHA
 0x0010

	)

549 
	#V4L2_FBUF_CAP_GLOBAL_ALPHA
 0x0020

	)

550 
	#V4L2_FBUF_CAP_LOCAL_INV_ALPHA
 0x0040

	)

552 
	#V4L2_FBUF_FLAG_PRIMARY
 0x0001

	)

553 
	#V4L2_FBUF_FLAG_OVERLAY
 0x0002

	)

554 
	#V4L2_FBUF_FLAG_CHROMAKEY
 0x0004

	)

555 
	#V4L2_FBUF_FLAG_LOCAL_ALPHA
 0x0008

	)

556 
	#V4L2_FBUF_FLAG_GLOBAL_ALPHA
 0x0010

	)

557 
	#V4L2_FBUF_FLAG_LOCAL_INV_ALPHA
 0x0020

	)

559 
	sv4l2_˛ù
 {

560 
v4l2_ª˘
 
	mc
;

561 
v4l2_˛ù
 *
	m√xt
;

564 
	sv4l2_wödow
 {

565 
v4l2_ª˘
 
	mw
;

566 
v4l2_fõld
 
	mfõld
;

567 
__u32
 
	mchromakey
;

568 
v4l2_˛ù
 *
	m˛ùs
;

569 
__u32
 
	m˛ùcou¡
;

570 *
	mbôm≠
;

571 
__u8
 
	mglobÆ_Æpha
;

577 
	sv4l2_ˇ±uª∑rm
 {

578 
__u32
 
	mˇ∑bûôy
;

579 
__u32
 
	mˇ±uªmode
;

580 
v4l2_‰a˘
 
	mtimïî‰ame
;

581 
__u32
 
	mexãndedmode
;

582 
__u32
 
	mªadbuf„rs
;

583 
__u32
 
	mª£rved
[4];

587 
	#V4L2_MODE_HIGHQUALITY
 0x0001

	)

588 
	#V4L2_CAP_TIMEPERFRAME
 0x1000

	)

590 
	sv4l2_ouçuç¨m
 {

591 
__u32
 
	mˇ∑bûôy
;

592 
__u32
 
	mouçutmode
;

593 
v4l2_‰a˘
 
	mtimïî‰ame
;

594 
__u32
 
	mexãndedmode
;

595 
__u32
 
	mwrôebuf„rs
;

596 
__u32
 
	mª£rved
[4];

602 
	sv4l2_¸›ˇp
 {

603 
v4l2_buf_ty≥
 
	mty≥
;

604 
v4l2_ª˘
 
	mbounds
;

605 
v4l2_ª˘
 
	mde‰e˘
;

606 
v4l2_‰a˘
 
	mpixña•e˘
;

609 
	sv4l2_¸›
 {

610 
v4l2_buf_ty≥
 
	mty≥
;

611 
v4l2_ª˘
 
	mc
;

618 
__u64
 
	tv4l2_°d_id
;

621 
	#V4L2_STD_PAL_B
 ((
v4l2_°d_id
)0x00000001)

	)

622 
	#V4L2_STD_PAL_B1
 ((
v4l2_°d_id
)0x00000002)

	)

623 
	#V4L2_STD_PAL_G
 ((
v4l2_°d_id
)0x00000004)

	)

624 
	#V4L2_STD_PAL_H
 ((
v4l2_°d_id
)0x00000008)

	)

625 
	#V4L2_STD_PAL_I
 ((
v4l2_°d_id
)0x00000010)

	)

626 
	#V4L2_STD_PAL_D
 ((
v4l2_°d_id
)0x00000020)

	)

627 
	#V4L2_STD_PAL_D1
 ((
v4l2_°d_id
)0x00000040)

	)

628 
	#V4L2_STD_PAL_K
 ((
v4l2_°d_id
)0x00000080)

	)

630 
	#V4L2_STD_PAL_M
 ((
v4l2_°d_id
)0x00000100)

	)

631 
	#V4L2_STD_PAL_N
 ((
v4l2_°d_id
)0x00000200)

	)

632 
	#V4L2_STD_PAL_Nc
 ((
v4l2_°d_id
)0x00000400)

	)

633 
	#V4L2_STD_PAL_60
 ((
v4l2_°d_id
)0x00000800)

	)

635 
	#V4L2_STD_NTSC_M
 ((
v4l2_°d_id
)0x00001000)

	)

636 
	#V4L2_STD_NTSC_M_JP
 ((
v4l2_°d_id
)0x00002000)

	)

637 
	#V4L2_STD_NTSC_443
 ((
v4l2_°d_id
)0x00004000)

	)

638 
	#V4L2_STD_NTSC_M_KR
 ((
v4l2_°d_id
)0x00008000)

	)

640 
	#V4L2_STD_SECAM_B
 ((
v4l2_°d_id
)0x00010000)

	)

641 
	#V4L2_STD_SECAM_D
 ((
v4l2_°d_id
)0x00020000)

	)

642 
	#V4L2_STD_SECAM_G
 ((
v4l2_°d_id
)0x00040000)

	)

643 
	#V4L2_STD_SECAM_H
 ((
v4l2_°d_id
)0x00080000)

	)

644 
	#V4L2_STD_SECAM_K
 ((
v4l2_°d_id
)0x00100000)

	)

645 
	#V4L2_STD_SECAM_K1
 ((
v4l2_°d_id
)0x00200000)

	)

646 
	#V4L2_STD_SECAM_L
 ((
v4l2_°d_id
)0x00400000)

	)

647 
	#V4L2_STD_SECAM_LC
 ((
v4l2_°d_id
)0x00800000)

	)

650 
	#V4L2_STD_ATSC_8_VSB
 ((
v4l2_°d_id
)0x01000000)

	)

651 
	#V4L2_STD_ATSC_16_VSB
 ((
v4l2_°d_id
)0x02000000)

	)

663 
	#V4L2_STD_MN
 (
V4L2_STD_PAL_M
|
V4L2_STD_PAL_N
|
V4L2_STD_PAL_Nc
|
V4L2_STD_NTSC
)

	)

664 
	#V4L2_STD_B
 (
V4L2_STD_PAL_B
|
V4L2_STD_PAL_B1
|
V4L2_STD_SECAM_B
)

	)

665 
	#V4L2_STD_GH
 (
V4L2_STD_PAL_G
|
V4L2_STD_PAL_H
|
V4L2_STD_SECAM_G
|
V4L2_STD_SECAM_H
)

	)

666 
	#V4L2_STD_DK
 (
V4L2_STD_PAL_DK
|
V4L2_STD_SECAM_DK
)

	)

669 
	#V4L2_STD_PAL_BG
 (
V4L2_STD_PAL_B
 |\

670 
V4L2_STD_PAL_B1
 |\

671 
V4L2_STD_PAL_G
)

	)

672 
	#V4L2_STD_PAL_DK
 (
V4L2_STD_PAL_D
 |\

673 
V4L2_STD_PAL_D1
 |\

674 
V4L2_STD_PAL_K
)

	)

675 
	#V4L2_STD_PAL
 (
V4L2_STD_PAL_BG
 |\

676 
V4L2_STD_PAL_DK
 |\

677 
V4L2_STD_PAL_H
 |\

678 
V4L2_STD_PAL_I
)

	)

679 
	#V4L2_STD_NTSC
 (
V4L2_STD_NTSC_M
 |\

680 
V4L2_STD_NTSC_M_JP
 |\

681 
V4L2_STD_NTSC_M_KR
)

	)

682 
	#V4L2_STD_SECAM_DK
 (
V4L2_STD_SECAM_D
 |\

683 
V4L2_STD_SECAM_K
 |\

684 
V4L2_STD_SECAM_K1
)

	)

685 
	#V4L2_STD_SECAM
 (
V4L2_STD_SECAM_B
 |\

686 
V4L2_STD_SECAM_G
 |\

687 
V4L2_STD_SECAM_H
 |\

688 
V4L2_STD_SECAM_DK
 |\

689 
V4L2_STD_SECAM_L
 |\

690 
V4L2_STD_SECAM_LC
)

	)

692 
	#V4L2_STD_525_60
 (
V4L2_STD_PAL_M
 |\

693 
V4L2_STD_PAL_60
 |\

694 
V4L2_STD_NTSC
 |\

695 
V4L2_STD_NTSC_443
)

	)

696 
	#V4L2_STD_625_50
 (
V4L2_STD_PAL
 |\

697 
V4L2_STD_PAL_N
 |\

698 
V4L2_STD_PAL_Nc
 |\

699 
V4L2_STD_SECAM
)

	)

700 
	#V4L2_STD_ATSC
 (
V4L2_STD_ATSC_8_VSB
 |\

701 
V4L2_STD_ATSC_16_VSB
)

	)

703 
	#V4L2_STD_UNKNOWN
 0

	)

704 
	#V4L2_STD_ALL
 (
V4L2_STD_525_60
 |\

705 
V4L2_STD_625_50
)

	)

707 
	sv4l2_°™d¨d
 {

708 
__u32
 
	mödex
;

709 
v4l2_°d_id
 
	mid
;

710 
__u8
 
	m«me
[24];

711 
v4l2_‰a˘
 
	m‰amïîiod
;

712 
__u32
 
	m‰amñöes
;

713 
__u32
 
	mª£rved
[4];

719 
	sv4l2_öput
 {

720 
__u32
 
	mödex
;

721 
__u8
 
	m«me
[32];

722 
__u32
 
	mty≥
;

723 
__u32
 
	maudio£t
;

724 
__u32
 
	mtu√r
;

725 
v4l2_°d_id
 
	m°d
;

726 
__u32
 
	m°©us
;

727 
__u32
 
	mª£rved
[4];

731 
	#V4L2_INPUT_TYPE_TUNER
 1

	)

732 
	#V4L2_INPUT_TYPE_CAMERA
 2

	)

735 
	#V4L2_IN_ST_NO_POWER
 0x00000001

	)

736 
	#V4L2_IN_ST_NO_SIGNAL
 0x00000002

	)

737 
	#V4L2_IN_ST_NO_COLOR
 0x00000004

	)

741 
	#V4L2_IN_ST_HFLIP
 0x00000010

	)

742 
	#V4L2_IN_ST_VFLIP
 0x00000020

	)

745 
	#V4L2_IN_ST_NO_H_LOCK
 0x00000100

	)

746 
	#V4L2_IN_ST_COLOR_KILL
 0x00000200

	)

749 
	#V4L2_IN_ST_NO_SYNC
 0x00010000

	)

750 
	#V4L2_IN_ST_NO_EQU
 0x00020000

	)

751 
	#V4L2_IN_ST_NO_CARRIER
 0x00040000

	)

754 
	#V4L2_IN_ST_MACROVISION
 0x01000000

	)

755 
	#V4L2_IN_ST_NO_ACCESS
 0x02000000

	)

756 
	#V4L2_IN_ST_VTR
 0x04000000

	)

761 
	sv4l2_ouçut
 {

762 
__u32
 
	mödex
;

763 
__u8
 
	m«me
[32];

764 
__u32
 
	mty≥
;

765 
__u32
 
	maudio£t
;

766 
__u32
 
	mmoduœt‹
;

767 
v4l2_°d_id
 
	m°d
;

768 
__u32
 
	mª£rved
[4];

771 
	#V4L2_OUTPUT_TYPE_MODULATOR
 1

	)

772 
	#V4L2_OUTPUT_TYPE_ANALOG
 2

	)

773 
	#V4L2_OUTPUT_TYPE_ANALOGVGAOVERLAY
 3

	)

778 
	sv4l2_c⁄åﬁ
 {

779 
__u32
 
	mid
;

780 
__s32
 
	mvÆue
;

783 
	sv4l2_ext_c⁄åﬁ
 {

784 
__u32
 
	mid
;

785 
__u32
 
	mª£rved2
[2];

787 
__s32
 
	mvÆue
;

788 
__s64
 
	mvÆue64
;

789 *
	mª£rved
;

791 } 
__©åibuã__
 ((
∑cked
));

793 
	sv4l2_ext_c⁄åﬁs
 {

794 
__u32
 
	m˘æ_˛ass
;

795 
__u32
 
	mcou¡
;

796 
__u32
 
	mîr‹_idx
;

797 
__u32
 
	mª£rved
[2];

798 
v4l2_ext_c⁄åﬁ
 *
	mc⁄åﬁs
;

802 
	#V4L2_CTRL_CLASS_USER
 0x00980000

	)

803 
	#V4L2_CTRL_CLASS_MPEG
 0x00990000

	)

804 
	#V4L2_CTRL_CLASS_CAMERA
 0x009a0000

	)

806 
	#V4L2_CTRL_ID_MASK
 (0x0fffffff)

	)

807 
	#V4L2_CTRL_ID2CLASS
(
id
Ë((idË& 0x0fff0000UL)

	)

808 
	#V4L2_CTRL_DRIVER_PRIV
(
id
Ë(((idË& 0xffffË>0x1000)

	)

811 
	sv4l2_quîy˘æ
 {

812 
__u32
 
	mid
;

813 
v4l2_˘æ_ty≥
 
	mty≥
;

814 
__u8
 
	m«me
[32];

815 
__s32
 
	mmöimum
;

816 
__s32
 
	mmaximum
;

817 
__s32
 
	m°ï
;

818 
__s32
 
	mdeÁu…_vÆue
;

819 
__u32
 
	mÊags
;

820 
__u32
 
	mª£rved
[2];

824 
	sv4l2_quîymíu
 {

825 
__u32
 
	mid
;

826 
__u32
 
	mödex
;

827 
__u8
 
	m«me
[32];

828 
__u32
 
	mª£rved
;

832 
	#V4L2_CTRL_FLAG_DISABLED
 0x0001

	)

833 
	#V4L2_CTRL_FLAG_GRABBED
 0x0002

	)

834 
	#V4L2_CTRL_FLAG_READ_ONLY
 0x0004

	)

835 
	#V4L2_CTRL_FLAG_UPDATE
 0x0008

	)

836 
	#V4L2_CTRL_FLAG_INACTIVE
 0x0010

	)

837 
	#V4L2_CTRL_FLAG_SLIDER
 0x0020

	)

838 
	#V4L2_CTRL_FLAG_WRITE_ONLY
 0x0040

	)

841 
	#V4L2_CTRL_FLAG_NEXT_CTRL
 0x80000000

	)

844 
	#V4L2_CID_BASE
 (
V4L2_CTRL_CLASS_USER
 | 0x900)

	)

845 
	#V4L2_CID_USER_BASE
 
V4L2_CID_BASE


	)

847 
	#V4L2_CID_PRIVATE_BASE
 0x08000000

	)

849 
	#V4L2_CID_USER_CLASS
 (
V4L2_CTRL_CLASS_USER
 | 1)

	)

850 
	#V4L2_CID_BRIGHTNESS
 (
V4L2_CID_BASE
+0)

	)

851 
	#V4L2_CID_CONTRAST
 (
V4L2_CID_BASE
+1)

	)

852 
	#V4L2_CID_SATURATION
 (
V4L2_CID_BASE
+2)

	)

853 
	#V4L2_CID_HUE
 (
V4L2_CID_BASE
+3)

	)

854 
	#V4L2_CID_AUDIO_VOLUME
 (
V4L2_CID_BASE
+5)

	)

855 
	#V4L2_CID_AUDIO_BALANCE
 (
V4L2_CID_BASE
+6)

	)

856 
	#V4L2_CID_AUDIO_BASS
 (
V4L2_CID_BASE
+7)

	)

857 
	#V4L2_CID_AUDIO_TREBLE
 (
V4L2_CID_BASE
+8)

	)

858 
	#V4L2_CID_AUDIO_MUTE
 (
V4L2_CID_BASE
+9)

	)

859 
	#V4L2_CID_AUDIO_LOUDNESS
 (
V4L2_CID_BASE
+10)

	)

860 
	#V4L2_CID_BLACK_LEVEL
 (
V4L2_CID_BASE
+11Ë

	)

861 
	#V4L2_CID_AUTO_WHITE_BALANCE
 (
V4L2_CID_BASE
+12)

	)

862 
	#V4L2_CID_DO_WHITE_BALANCE
 (
V4L2_CID_BASE
+13)

	)

863 
	#V4L2_CID_RED_BALANCE
 (
V4L2_CID_BASE
+14)

	)

864 
	#V4L2_CID_BLUE_BALANCE
 (
V4L2_CID_BASE
+15)

	)

865 
	#V4L2_CID_GAMMA
 (
V4L2_CID_BASE
+16)

	)

866 
	#V4L2_CID_WHITENESS
 (
V4L2_CID_GAMMA
Ë

	)

867 
	#V4L2_CID_EXPOSURE
 (
V4L2_CID_BASE
+17)

	)

868 
	#V4L2_CID_AUTOGAIN
 (
V4L2_CID_BASE
+18)

	)

869 
	#V4L2_CID_GAIN
 (
V4L2_CID_BASE
+19)

	)

870 
	#V4L2_CID_HFLIP
 (
V4L2_CID_BASE
+20)

	)

871 
	#V4L2_CID_VFLIP
 (
V4L2_CID_BASE
+21)

	)

874 
	#V4L2_CID_HCENTER
 (
V4L2_CID_BASE
+22)

	)

875 
	#V4L2_CID_VCENTER
 (
V4L2_CID_BASE
+23)

	)

877 
	#V4L2_CID_POWER_LINE_FREQUENCY
 (
V4L2_CID_BASE
+24)

	)

878 
	ev4l2_powî_löe_‰equícy
 {

879 
	mV4L2_CID_POWER_LINE_FREQUENCY_DISABLED
 = 0,

880 
	mV4L2_CID_POWER_LINE_FREQUENCY_50HZ
 = 1,

881 
	mV4L2_CID_POWER_LINE_FREQUENCY_60HZ
 = 2,

883 
	#V4L2_CID_HUE_AUTO
 (
V4L2_CID_BASE
+25)

	)

884 
	#V4L2_CID_WHITE_BALANCE_TEMPERATURE
 (
V4L2_CID_BASE
+26)

	)

885 
	#V4L2_CID_SHARPNESS
 (
V4L2_CID_BASE
+27)

	)

886 
	#V4L2_CID_BACKLIGHT_COMPENSATION
 (
V4L2_CID_BASE
+28)

	)

887 
	#V4L2_CID_CHROMA_AGC
 (
V4L2_CID_BASE
+29)

	)

888 
	#V4L2_CID_COLOR_KILLER
 (
V4L2_CID_BASE
+30)

	)

889 
	#V4L2_CID_COLORFX
 (
V4L2_CID_BASE
+31)

	)

890 
	ev4l2_cﬁ‹fx
 {

891 
	mV4L2_COLORFX_NONE
 = 0,

892 
	mV4L2_COLORFX_BW
 = 1,

893 
	mV4L2_COLORFX_SEPIA
 = 2,

895 
	#V4L2_CID_AUTOBRIGHTNESS
 (
V4L2_CID_BASE
+32)

	)

898 
	#V4L2_CID_LASTP1
 (
V4L2_CID_BASE
+33)

	)

901 
	#V4L2_CID_MPEG_BASE
 (
V4L2_CTRL_CLASS_MPEG
 | 0x900)

	)

902 
	#V4L2_CID_MPEG_CLASS
 (
V4L2_CTRL_CLASS_MPEG
 | 1)

	)

905 
	#V4L2_CID_MPEG_STREAM_TYPE
 (
V4L2_CID_MPEG_BASE
+0)

	)

906 
	ev4l2_m≥g_°ªam_ty≥
 {

907 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_PS
 = 0,

908 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_TS
 = 1,

909 
	mV4L2_MPEG_STREAM_TYPE_MPEG1_SS
 = 2,

910 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_DVD
 = 3,

911 
	mV4L2_MPEG_STREAM_TYPE_MPEG1_VCD
 = 4,

912 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_SVCD
 = 5,

914 
	#V4L2_CID_MPEG_STREAM_PID_PMT
 (
V4L2_CID_MPEG_BASE
+1)

	)

915 
	#V4L2_CID_MPEG_STREAM_PID_AUDIO
 (
V4L2_CID_MPEG_BASE
+2)

	)

916 
	#V4L2_CID_MPEG_STREAM_PID_VIDEO
 (
V4L2_CID_MPEG_BASE
+3)

	)

917 
	#V4L2_CID_MPEG_STREAM_PID_PCR
 (
V4L2_CID_MPEG_BASE
+4)

	)

918 
	#V4L2_CID_MPEG_STREAM_PES_ID_AUDIO
 (
V4L2_CID_MPEG_BASE
+5)

	)

919 
	#V4L2_CID_MPEG_STREAM_PES_ID_VIDEO
 (
V4L2_CID_MPEG_BASE
+6)

	)

920 
	#V4L2_CID_MPEG_STREAM_VBI_FMT
 (
V4L2_CID_MPEG_BASE
+7)

	)

921 
	ev4l2_m≥g_°ªam_vbi_fmt
 {

922 
	mV4L2_MPEG_STREAM_VBI_FMT_NONE
 = 0,

923 
	mV4L2_MPEG_STREAM_VBI_FMT_IVTV
 = 1,

927 
	#V4L2_CID_MPEG_AUDIO_SAMPLING_FREQ
 (
V4L2_CID_MPEG_BASE
+100)

	)

928 
	ev4l2_m≥g_audio_ßm∂ög_‰eq
 {

929 
	mV4L2_MPEG_AUDIO_SAMPLING_FREQ_44100
 = 0,

930 
	mV4L2_MPEG_AUDIO_SAMPLING_FREQ_48000
 = 1,

931 
	mV4L2_MPEG_AUDIO_SAMPLING_FREQ_32000
 = 2,

933 
	#V4L2_CID_MPEG_AUDIO_ENCODING
 (
V4L2_CID_MPEG_BASE
+101)

	)

934 
	ev4l2_m≥g_audio_ícodög
 {

935 
	mV4L2_MPEG_AUDIO_ENCODING_LAYER_1
 = 0,

936 
	mV4L2_MPEG_AUDIO_ENCODING_LAYER_2
 = 1,

937 
	mV4L2_MPEG_AUDIO_ENCODING_LAYER_3
 = 2,

938 
	mV4L2_MPEG_AUDIO_ENCODING_AAC
 = 3,

939 
	mV4L2_MPEG_AUDIO_ENCODING_AC3
 = 4,

941 
	#V4L2_CID_MPEG_AUDIO_L1_BITRATE
 (
V4L2_CID_MPEG_BASE
+102)

	)

942 
	ev4l2_m≥g_audio_l1_bôøã
 {

943 
	mV4L2_MPEG_AUDIO_L1_BITRATE_32K
 = 0,

944 
	mV4L2_MPEG_AUDIO_L1_BITRATE_64K
 = 1,

945 
	mV4L2_MPEG_AUDIO_L1_BITRATE_96K
 = 2,

946 
	mV4L2_MPEG_AUDIO_L1_BITRATE_128K
 = 3,

947 
	mV4L2_MPEG_AUDIO_L1_BITRATE_160K
 = 4,

948 
	mV4L2_MPEG_AUDIO_L1_BITRATE_192K
 = 5,

949 
	mV4L2_MPEG_AUDIO_L1_BITRATE_224K
 = 6,

950 
	mV4L2_MPEG_AUDIO_L1_BITRATE_256K
 = 7,

951 
	mV4L2_MPEG_AUDIO_L1_BITRATE_288K
 = 8,

952 
	mV4L2_MPEG_AUDIO_L1_BITRATE_320K
 = 9,

953 
	mV4L2_MPEG_AUDIO_L1_BITRATE_352K
 = 10,

954 
	mV4L2_MPEG_AUDIO_L1_BITRATE_384K
 = 11,

955 
	mV4L2_MPEG_AUDIO_L1_BITRATE_416K
 = 12,

956 
	mV4L2_MPEG_AUDIO_L1_BITRATE_448K
 = 13,

958 
	#V4L2_CID_MPEG_AUDIO_L2_BITRATE
 (
V4L2_CID_MPEG_BASE
+103)

	)

959 
	ev4l2_m≥g_audio_l2_bôøã
 {

960 
	mV4L2_MPEG_AUDIO_L2_BITRATE_32K
 = 0,

961 
	mV4L2_MPEG_AUDIO_L2_BITRATE_48K
 = 1,

962 
	mV4L2_MPEG_AUDIO_L2_BITRATE_56K
 = 2,

963 
	mV4L2_MPEG_AUDIO_L2_BITRATE_64K
 = 3,

964 
	mV4L2_MPEG_AUDIO_L2_BITRATE_80K
 = 4,

965 
	mV4L2_MPEG_AUDIO_L2_BITRATE_96K
 = 5,

966 
	mV4L2_MPEG_AUDIO_L2_BITRATE_112K
 = 6,

967 
	mV4L2_MPEG_AUDIO_L2_BITRATE_128K
 = 7,

968 
	mV4L2_MPEG_AUDIO_L2_BITRATE_160K
 = 8,

969 
	mV4L2_MPEG_AUDIO_L2_BITRATE_192K
 = 9,

970 
	mV4L2_MPEG_AUDIO_L2_BITRATE_224K
 = 10,

971 
	mV4L2_MPEG_AUDIO_L2_BITRATE_256K
 = 11,

972 
	mV4L2_MPEG_AUDIO_L2_BITRATE_320K
 = 12,

973 
	mV4L2_MPEG_AUDIO_L2_BITRATE_384K
 = 13,

975 
	#V4L2_CID_MPEG_AUDIO_L3_BITRATE
 (
V4L2_CID_MPEG_BASE
+104)

	)

976 
	ev4l2_m≥g_audio_l3_bôøã
 {

977 
	mV4L2_MPEG_AUDIO_L3_BITRATE_32K
 = 0,

978 
	mV4L2_MPEG_AUDIO_L3_BITRATE_40K
 = 1,

979 
	mV4L2_MPEG_AUDIO_L3_BITRATE_48K
 = 2,

980 
	mV4L2_MPEG_AUDIO_L3_BITRATE_56K
 = 3,

981 
	mV4L2_MPEG_AUDIO_L3_BITRATE_64K
 = 4,

982 
	mV4L2_MPEG_AUDIO_L3_BITRATE_80K
 = 5,

983 
	mV4L2_MPEG_AUDIO_L3_BITRATE_96K
 = 6,

984 
	mV4L2_MPEG_AUDIO_L3_BITRATE_112K
 = 7,

985 
	mV4L2_MPEG_AUDIO_L3_BITRATE_128K
 = 8,

986 
	mV4L2_MPEG_AUDIO_L3_BITRATE_160K
 = 9,

987 
	mV4L2_MPEG_AUDIO_L3_BITRATE_192K
 = 10,

988 
	mV4L2_MPEG_AUDIO_L3_BITRATE_224K
 = 11,

989 
	mV4L2_MPEG_AUDIO_L3_BITRATE_256K
 = 12,

990 
	mV4L2_MPEG_AUDIO_L3_BITRATE_320K
 = 13,

992 
	#V4L2_CID_MPEG_AUDIO_MODE
 (
V4L2_CID_MPEG_BASE
+105)

	)

993 
	ev4l2_m≥g_audio_mode
 {

994 
	mV4L2_MPEG_AUDIO_MODE_STEREO
 = 0,

995 
	mV4L2_MPEG_AUDIO_MODE_JOINT_STEREO
 = 1,

996 
	mV4L2_MPEG_AUDIO_MODE_DUAL
 = 2,

997 
	mV4L2_MPEG_AUDIO_MODE_MONO
 = 3,

999 
	#V4L2_CID_MPEG_AUDIO_MODE_EXTENSION
 (
V4L2_CID_MPEG_BASE
+106)

	)

1000 
	ev4l2_m≥g_audio_mode_exãnsi⁄
 {

1001 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_4
 = 0,

1002 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_8
 = 1,

1003 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_12
 = 2,

1004 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_16
 = 3,

1006 
	#V4L2_CID_MPEG_AUDIO_EMPHASIS
 (
V4L2_CID_MPEG_BASE
+107)

	)

1007 
	ev4l2_m≥g_audio_emphasis
 {

1008 
	mV4L2_MPEG_AUDIO_EMPHASIS_NONE
 = 0,

1009 
	mV4L2_MPEG_AUDIO_EMPHASIS_50_DIV_15_uS
 = 1,

1010 
	mV4L2_MPEG_AUDIO_EMPHASIS_CCITT_J17
 = 2,

1012 
	#V4L2_CID_MPEG_AUDIO_CRC
 (
V4L2_CID_MPEG_BASE
+108)

	)

1013 
	ev4l2_m≥g_audio_¸c
 {

1014 
	mV4L2_MPEG_AUDIO_CRC_NONE
 = 0,

1015 
	mV4L2_MPEG_AUDIO_CRC_CRC16
 = 1,

1017 
	#V4L2_CID_MPEG_AUDIO_MUTE
 (
V4L2_CID_MPEG_BASE
+109)

	)

1018 
	#V4L2_CID_MPEG_AUDIO_AAC_BITRATE
 (
V4L2_CID_MPEG_BASE
+110)

	)

1019 
	#V4L2_CID_MPEG_AUDIO_AC3_BITRATE
 (
V4L2_CID_MPEG_BASE
+111)

	)

1020 
	ev4l2_m≥g_audio_ac3_bôøã
 {

1021 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_32K
 = 0,

1022 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_40K
 = 1,

1023 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_48K
 = 2,

1024 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_56K
 = 3,

1025 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_64K
 = 4,

1026 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_80K
 = 5,

1027 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_96K
 = 6,

1028 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_112K
 = 7,

1029 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_128K
 = 8,

1030 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_160K
 = 9,

1031 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_192K
 = 10,

1032 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_224K
 = 11,

1033 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_256K
 = 12,

1034 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_320K
 = 13,

1035 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_384K
 = 14,

1036 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_448K
 = 15,

1037 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_512K
 = 16,

1038 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_576K
 = 17,

1039 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_640K
 = 18,

1043 
	#V4L2_CID_MPEG_VIDEO_ENCODING
 (
V4L2_CID_MPEG_BASE
+200)

	)

1044 
	ev4l2_m≥g_video_ícodög
 {

1045 
	mV4L2_MPEG_VIDEO_ENCODING_MPEG_1
 = 0,

1046 
	mV4L2_MPEG_VIDEO_ENCODING_MPEG_2
 = 1,

1047 
	mV4L2_MPEG_VIDEO_ENCODING_MPEG_4_AVC
 = 2,

1049 
	#V4L2_CID_MPEG_VIDEO_ASPECT
 (
V4L2_CID_MPEG_BASE
+201)

	)

1050 
	ev4l2_m≥g_video_a•e˘
 {

1051 
	mV4L2_MPEG_VIDEO_ASPECT_1x1
 = 0,

1052 
	mV4L2_MPEG_VIDEO_ASPECT_4x3
 = 1,

1053 
	mV4L2_MPEG_VIDEO_ASPECT_16x9
 = 2,

1054 
	mV4L2_MPEG_VIDEO_ASPECT_221x100
 = 3,

1056 
	#V4L2_CID_MPEG_VIDEO_B_FRAMES
 (
V4L2_CID_MPEG_BASE
+202)

	)

1057 
	#V4L2_CID_MPEG_VIDEO_GOP_SIZE
 (
V4L2_CID_MPEG_BASE
+203)

	)

1058 
	#V4L2_CID_MPEG_VIDEO_GOP_CLOSURE
 (
V4L2_CID_MPEG_BASE
+204)

	)

1059 
	#V4L2_CID_MPEG_VIDEO_PULLDOWN
 (
V4L2_CID_MPEG_BASE
+205)

	)

1060 
	#V4L2_CID_MPEG_VIDEO_BITRATE_MODE
 (
V4L2_CID_MPEG_BASE
+206)

	)

1061 
	ev4l2_m≥g_video_bôøã_mode
 {

1062 
	mV4L2_MPEG_VIDEO_BITRATE_MODE_VBR
 = 0,

1063 
	mV4L2_MPEG_VIDEO_BITRATE_MODE_CBR
 = 1,

1065 
	#V4L2_CID_MPEG_VIDEO_BITRATE
 (
V4L2_CID_MPEG_BASE
+207)

	)

1066 
	#V4L2_CID_MPEG_VIDEO_BITRATE_PEAK
 (
V4L2_CID_MPEG_BASE
+208)

	)

1067 
	#V4L2_CID_MPEG_VIDEO_TEMPORAL_DECIMATION
 (
V4L2_CID_MPEG_BASE
+209)

	)

1068 
	#V4L2_CID_MPEG_VIDEO_MUTE
 (
V4L2_CID_MPEG_BASE
+210)

	)

1069 
	#V4L2_CID_MPEG_VIDEO_MUTE_YUV
 (
V4L2_CID_MPEG_BASE
+211)

	)

1072 
	#V4L2_CID_MPEG_CX2341X_BASE
 (
V4L2_CTRL_CLASS_MPEG
 | 0x1000)

	)

1073 
	#V4L2_CID_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE
 (
V4L2_CID_MPEG_CX2341X_BASE
+0)

	)

1074 
	ev4l2_m≥g_cx2341x_video_•©ül_fûãr_mode
 {

1075 
	mV4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_MANUAL
 = 0,

1076 
	mV4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_AUTO
 = 1,

1078 
	#V4L2_CID_MPEG_CX2341X_VIDEO_SPATIAL_FILTER
 (
V4L2_CID_MPEG_CX2341X_BASE
+1)

	)

1079 
	#V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE
 (
V4L2_CID_MPEG_CX2341X_BASE
+2)

	)

1080 
	ev4l2_m≥g_cx2341x_video_luma_•©ül_fûãr_ty≥
 {

1081 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_OFF
 = 0,

1082 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_HOR
 = 1,

1083 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_VERT
 = 2,

1084 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_HV_SEPARABLE
 = 3,

1085 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_SYM_NON_SEPARABLE
 = 4,

1087 
	#V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE
 (
V4L2_CID_MPEG_CX2341X_BASE
+3)

	)

1088 
	ev4l2_m≥g_cx2341x_video_chroma_•©ül_fûãr_ty≥
 {

1089 
	mV4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_OFF
 = 0,

1090 
	mV4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_1D_HOR
 = 1,

1092 
	#V4L2_CID_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE
 (
V4L2_CID_MPEG_CX2341X_BASE
+4)

	)

1093 
	ev4l2_m≥g_cx2341x_video_ãmp‹Æ_fûãr_mode
 {

1094 
	mV4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_MANUAL
 = 0,

1095 
	mV4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_AUTO
 = 1,

1097 
	#V4L2_CID_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER
 (
V4L2_CID_MPEG_CX2341X_BASE
+5)

	)

1098 
	#V4L2_CID_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE
 (
V4L2_CID_MPEG_CX2341X_BASE
+6)

	)

1099 
	ev4l2_m≥g_cx2341x_video_medün_fûãr_ty≥
 {

1100 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_OFF
 = 0,

1101 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR
 = 1,

1102 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_VERT
 = 2,

1103 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR_VERT
 = 3,

1104 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_DIAG
 = 4,

1106 
	#V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_MEDIAN_FILTER_BOTTOM
 (
V4L2_CID_MPEG_CX2341X_BASE
+7)

	)

1107 
	#V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_MEDIAN_FILTER_TOP
 (
V4L2_CID_MPEG_CX2341X_BASE
+8)

	)

1108 
	#V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_MEDIAN_FILTER_BOTTOM
 (
V4L2_CID_MPEG_CX2341X_BASE
+9)

	)

1109 
	#V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_MEDIAN_FILTER_TOP
 (
V4L2_CID_MPEG_CX2341X_BASE
+10)

	)

1110 
	#V4L2_CID_MPEG_CX2341X_STREAM_INSERT_NAV_PACKETS
 (
V4L2_CID_MPEG_CX2341X_BASE
+11)

	)

1113 
	#V4L2_CID_CAMERA_CLASS_BASE
 (
V4L2_CTRL_CLASS_CAMERA
 | 0x900)

	)

1114 
	#V4L2_CID_CAMERA_CLASS
 (
V4L2_CTRL_CLASS_CAMERA
 | 1)

	)

1116 
	#V4L2_CID_EXPOSURE_AUTO
 (
V4L2_CID_CAMERA_CLASS_BASE
+1)

	)

1117 
	ev4l2_exposuª_auto_ty≥
 {

1118 
	mV4L2_EXPOSURE_AUTO
 = 0,

1119 
	mV4L2_EXPOSURE_MANUAL
 = 1,

1120 
	mV4L2_EXPOSURE_SHUTTER_PRIORITY
 = 2,

1121 
	mV4L2_EXPOSURE_APERTURE_PRIORITY
 = 3

1123 
	#V4L2_CID_EXPOSURE_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+2)

	)

1124 
	#V4L2_CID_EXPOSURE_AUTO_PRIORITY
 (
V4L2_CID_CAMERA_CLASS_BASE
+3)

	)

1126 
	#V4L2_CID_PAN_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+4)

	)

1127 
	#V4L2_CID_TILT_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+5)

	)

1128 
	#V4L2_CID_PAN_RESET
 (
V4L2_CID_CAMERA_CLASS_BASE
+6)

	)

1129 
	#V4L2_CID_TILT_RESET
 (
V4L2_CID_CAMERA_CLASS_BASE
+7)

	)

1131 
	#V4L2_CID_PAN_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+8)

	)

1132 
	#V4L2_CID_TILT_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+9)

	)

1134 
	#V4L2_CID_FOCUS_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+10)

	)

1135 
	#V4L2_CID_FOCUS_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+11)

	)

1136 
	#V4L2_CID_FOCUS_AUTO
 (
V4L2_CID_CAMERA_CLASS_BASE
+12)

	)

1138 
	#V4L2_CID_ZOOM_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+13)

	)

1139 
	#V4L2_CID_ZOOM_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+14)

	)

1140 
	#V4L2_CID_ZOOM_CONTINUOUS
 (
V4L2_CID_CAMERA_CLASS_BASE
+15)

	)

1142 
	#V4L2_CID_PRIVACY
 (
V4L2_CID_CAMERA_CLASS_BASE
+16)

	)

1147 
	sv4l2_tu√r
 {

1148 
__u32
 
	mödex
;

1149 
__u8
 
	m«me
[32];

1150 
v4l2_tu√r_ty≥
 
	mty≥
;

1151 
__u32
 
	mˇ∑bûôy
;

1152 
__u32
 
	møngñow
;

1153 
__u32
 
	møngehigh
;

1154 
__u32
 
	mrxsubch™s
;

1155 
__u32
 
	maudmode
;

1156 
__s32
 
	msig«l
;

1157 
__s32
 
	mafc
;

1158 
__u32
 
	mª£rved
[4];

1161 
	sv4l2_moduœt‹
 {

1162 
__u32
 
	mödex
;

1163 
__u8
 
	m«me
[32];

1164 
__u32
 
	mˇ∑bûôy
;

1165 
__u32
 
	møngñow
;

1166 
__u32
 
	møngehigh
;

1167 
__u32
 
	mtxsubch™s
;

1168 
__u32
 
	mª£rved
[4];

1172 
	#V4L2_TUNER_CAP_LOW
 0x0001

	)

1173 
	#V4L2_TUNER_CAP_NORM
 0x0002

	)

1174 
	#V4L2_TUNER_CAP_STEREO
 0x0010

	)

1175 
	#V4L2_TUNER_CAP_LANG2
 0x0020

	)

1176 
	#V4L2_TUNER_CAP_SAP
 0x0020

	)

1177 
	#V4L2_TUNER_CAP_LANG1
 0x0040

	)

1180 
	#V4L2_TUNER_SUB_MONO
 0x0001

	)

1181 
	#V4L2_TUNER_SUB_STEREO
 0x0002

	)

1182 
	#V4L2_TUNER_SUB_LANG2
 0x0004

	)

1183 
	#V4L2_TUNER_SUB_SAP
 0x0004

	)

1184 
	#V4L2_TUNER_SUB_LANG1
 0x0008

	)

1187 
	#V4L2_TUNER_MODE_MONO
 0x0000

	)

1188 
	#V4L2_TUNER_MODE_STEREO
 0x0001

	)

1189 
	#V4L2_TUNER_MODE_LANG2
 0x0002

	)

1190 
	#V4L2_TUNER_MODE_SAP
 0x0002

	)

1191 
	#V4L2_TUNER_MODE_LANG1
 0x0003

	)

1192 
	#V4L2_TUNER_MODE_LANG1_LANG2
 0x0004

	)

1194 
	sv4l2_‰equícy
 {

1195 
__u32
 
	mtu√r
;

1196 
v4l2_tu√r_ty≥
 
	mty≥
;

1197 
__u32
 
	m‰equícy
;

1198 
__u32
 
	mª£rved
[8];

1201 
	sv4l2_hw_‰eq_£ek
 {

1202 
__u32
 
	mtu√r
;

1203 
v4l2_tu√r_ty≥
 
	mty≥
;

1204 
__u32
 
	m£ek_upw¨d
;

1205 
__u32
 
	mwøp_¨ound
;

1206 
__u32
 
	mª£rved
[8];

1212 
	sv4l2_audio
 {

1213 
__u32
 
	mödex
;

1214 
__u8
 
	m«me
[32];

1215 
__u32
 
	mˇ∑bûôy
;

1216 
__u32
 
	mmode
;

1217 
__u32
 
	mª£rved
[2];

1221 
	#V4L2_AUDCAP_STEREO
 0x00001

	)

1222 
	#V4L2_AUDCAP_AVL
 0x00002

	)

1225 
	#V4L2_AUDMODE_AVL
 0x00001

	)

1227 
	sv4l2_audioout
 {

1228 
__u32
 
	mödex
;

1229 
__u8
 
	m«me
[32];

1230 
__u32
 
	mˇ∑bûôy
;

1231 
__u32
 
	mmode
;

1232 
__u32
 
	mª£rved
[2];

1241 
	#V4L2_ENC_IDX_FRAME_I
 (0)

	)

1242 
	#V4L2_ENC_IDX_FRAME_P
 (1)

	)

1243 
	#V4L2_ENC_IDX_FRAME_B
 (2)

	)

1244 
	#V4L2_ENC_IDX_FRAME_MASK
 (0xf)

	)

1246 
	sv4l2_íc_idx_íåy
 {

1247 
__u64
 
	moff£t
;

1248 
__u64
 
	m±s
;

1249 
__u32
 
	mÀngth
;

1250 
__u32
 
	mÊags
;

1251 
__u32
 
	mª£rved
[2];

1254 
	#V4L2_ENC_IDX_ENTRIES
 (64)

	)

1255 
	sv4l2_íc_idx
 {

1256 
__u32
 
	míåõs
;

1257 
__u32
 
	míåõs_ˇp
;

1258 
__u32
 
	mª£rved
[4];

1259 
v4l2_íc_idx_íåy
 
	míåy
[
V4L2_ENC_IDX_ENTRIES
];

1263 
	#V4L2_ENC_CMD_START
 (0)

	)

1264 
	#V4L2_ENC_CMD_STOP
 (1)

	)

1265 
	#V4L2_ENC_CMD_PAUSE
 (2)

	)

1266 
	#V4L2_ENC_CMD_RESUME
 (3)

	)

1269 
	#V4L2_ENC_CMD_STOP_AT_GOP_END
 (1 << 0)

	)

1271 
	sv4l2_ícodî_cmd
 {

1272 
__u32
 
	mcmd
;

1273 
__u32
 
	mÊags
;

1276 
__u32
 
	md©a
[8];

1277 } 
	møw
;

1291 
	sv4l2_vbi_f‹m©
 {

1292 
__u32
 
	mßm∂ög_øã
;

1293 
__u32
 
	moff£t
;

1294 
__u32
 
	mßm∂es_≥r_löe
;

1295 
__u32
 
	mßm∂e_f‹m©
;

1296 
__s32
 
	m°¨t
[2];

1297 
__u32
 
	mcou¡
[2];

1298 
__u32
 
	mÊags
;

1299 
__u32
 
	mª£rved
[2];

1303 
	#V4L2_VBI_UNSYNC
 (1 << 0)

	)

1304 
	#V4L2_VBI_INTERLACED
 (1 << 1)

	)

1313 
	sv4l2_¶i˚d_vbi_f‹m©
 {

1314 
__u16
 
	m£rvi˚_£t
;

1319 
__u16
 
	m£rvi˚_löes
[2][24];

1320 
__u32
 
	mio_size
;

1321 
__u32
 
	mª£rved
[2];

1326 
	#V4L2_SLICED_TELETEXT_B
 (0x0001)

	)

1328 
	#V4L2_SLICED_VPS
 (0x0400)

	)

1330 
	#V4L2_SLICED_CAPTION_525
 (0x1000)

	)

1332 
	#V4L2_SLICED_WSS_625
 (0x4000)

	)

1334 
	#V4L2_SLICED_VBI_525
 (
V4L2_SLICED_CAPTION_525
)

	)

1335 
	#V4L2_SLICED_VBI_625
 (
V4L2_SLICED_TELETEXT_B
 | 
V4L2_SLICED_VPS
 | 
V4L2_SLICED_WSS_625
)

	)

1337 
	sv4l2_¶i˚d_vbi_ˇp
 {

1338 
__u16
 
	m£rvi˚_£t
;

1343 
__u16
 
	m£rvi˚_löes
[2][24];

1344 
v4l2_buf_ty≥
 
	mty≥
;

1345 
__u32
 
	mª£rved
[3];

1348 
	sv4l2_¶i˚d_vbi_d©a
 {

1349 
__u32
 
	mid
;

1350 
__u32
 
	mfõld
;

1351 
__u32
 
	mlöe
;

1352 
__u32
 
	mª£rved
;

1353 
__u8
 
	md©a
[48];

1373 
	#V4L2_MPEG_VBI_IVTV_TELETEXT_B
 (1)

	)

1374 
	#V4L2_MPEG_VBI_IVTV_CAPTION_525
 (4)

	)

1375 
	#V4L2_MPEG_VBI_IVTV_WSS_625
 (5)

	)

1376 
	#V4L2_MPEG_VBI_IVTV_VPS
 (7)

	)

1378 
	sv4l2_m≥g_vbi_ôv0_löe
 {

1379 
__u8
 
	mid
;

1380 
__u8
 
	md©a
[42];

1381 } 
__©åibuã__
 ((
∑cked
));

1383 
	sv4l2_m≥g_vbi_ôv0
 {

1384 
__À32
 
	mlöemask
[2];

1385 
v4l2_m≥g_vbi_ôv0_löe
 
	mlöe
[35];

1386 } 
__©åibuã__
 ((
∑cked
));

1388 
	sv4l2_m≥g_vbi_ITV0
 {

1389 
v4l2_m≥g_vbi_ôv0_löe
 
	mlöe
[36];

1390 } 
__©åibuã__
 ((
∑cked
));

1392 
	#V4L2_MPEG_VBI_IVTV_MAGIC0
 "ôv0"

	)

1393 
	#V4L2_MPEG_VBI_IVTV_MAGIC1
 "ITV0"

	)

1395 
	sv4l2_m≥g_vbi_fmt_ivtv
 {

1396 
__u8
 
	mmagic
[4];

1398 
v4l2_m≥g_vbi_ôv0
 
	môv0
;

1399 
v4l2_m≥g_vbi_ITV0
 
	mITV0
;

1401 } 
__©åibuã__
 ((
∑cked
));

1409 
	sv4l2_f‹m©
 {

1410 
v4l2_buf_ty≥
 
	mty≥
;

1412 
v4l2_pix_f‹m©
 
	mpix
;

1413 
v4l2_wödow
 
	mwö
;

1414 
v4l2_vbi_f‹m©
 
	mvbi
;

1415 
v4l2_¶i˚d_vbi_f‹m©
 
	m¶i˚d
;

1416 
__u8
 
	møw_d©a
[200];

1417 } 
	mfmt
;

1423 
	sv4l2_°ªam∑rm
 {

1424 
v4l2_buf_ty≥
 
	mty≥
;

1426 
v4l2_ˇ±uª∑rm
 
	mˇ±uª
;

1427 
v4l2_ouçuç¨m
 
	mouçut
;

1428 
__u8
 
	møw_d©a
[200];

1429 } 
	m∑rm
;

1441 
	#V4L2_CHIP_MATCH_HOST
 0

	)

1442 
	#V4L2_CHIP_MATCH_I2C_DRIVER
 1

	)

1443 
	#V4L2_CHIP_MATCH_I2C_ADDR
 2

	)

1444 
	#V4L2_CHIP_MATCH_AC97
 3

	)

1446 
	sv4l2_dbg_m©ch
 {

1447 
__u32
 
	mty≥
;

1449 
__u32
 
	maddr
;

1450 
	m«me
[32];

1452 } 
__©åibuã__
 ((
∑cked
));

1454 
	sv4l2_dbg_ªgi°î
 {

1455 
v4l2_dbg_m©ch
 
	mm©ch
;

1456 
__u32
 
	msize
;

1457 
__u64
 
	mªg
;

1458 
__u64
 
	mvÆ
;

1459 } 
__©åibuã__
 ((
∑cked
));

1462 
	sv4l2_dbg_chù_idít
 {

1463 
v4l2_dbg_m©ch
 
	mm©ch
;

1464 
__u32
 
	midít
;

1465 
__u32
 
	mªvisi⁄
;

1466 } 
__©åibuã__
 ((
∑cked
));

1472 
	#VIDIOC_QUERYCAP
 
	`_IOR
('V', 0, 
v4l2_ˇ∑bûôy
)

	)

1473 
	#VIDIOC_RESERVED
 
	`_IO
('V', 1)

	)

1474 
	#VIDIOC_ENUM_FMT
 
	`_IOWR
('V', 2, 
v4l2_fmtdesc
)

	)

1475 
	#VIDIOC_G_FMT
 
	`_IOWR
('V', 4, 
v4l2_f‹m©
)

	)

1476 
	#VIDIOC_S_FMT
 
	`_IOWR
('V', 5, 
v4l2_f‹m©
)

	)

1477 
	#VIDIOC_REQBUFS
 
	`_IOWR
('V', 8, 
v4l2_ªque°buf„rs
)

	)

1478 
	#VIDIOC_QUERYBUF
 
	`_IOWR
('V', 9, 
v4l2_buf„r
)

	)

1479 
	#VIDIOC_G_FBUF
 
	`_IOR
('V', 10, 
v4l2_‰amebuf„r
)

	)

1480 
	#VIDIOC_S_FBUF
 
	`_IOW
('V', 11, 
v4l2_‰amebuf„r
)

	)

1481 
	#VIDIOC_OVERLAY
 
	`_IOW
('V', 14, )

	)

1482 
	#VIDIOC_QBUF
 
	`_IOWR
('V', 15, 
v4l2_buf„r
)

	)

1483 
	#VIDIOC_DQBUF
 
	`_IOWR
('V', 17, 
v4l2_buf„r
)

	)

1484 
	#VIDIOC_STREAMON
 
	`_IOW
('V', 18, )

	)

1485 
	#VIDIOC_STREAMOFF
 
	`_IOW
('V', 19, )

	)

1486 
	#VIDIOC_G_PARM
 
	`_IOWR
('V', 21, 
v4l2_°ªam∑rm
)

	)

1487 
	#VIDIOC_S_PARM
 
	`_IOWR
('V', 22, 
v4l2_°ªam∑rm
)

	)

1488 
	#VIDIOC_G_STD
 
	`_IOR
('V', 23, 
v4l2_°d_id
)

	)

1489 
	#VIDIOC_S_STD
 
	`_IOW
('V', 24, 
v4l2_°d_id
)

	)

1490 
	#VIDIOC_ENUMSTD
 
	`_IOWR
('V', 25, 
v4l2_°™d¨d
)

	)

1491 
	#VIDIOC_ENUMINPUT
 
	`_IOWR
('V', 26, 
v4l2_öput
)

	)

1492 
	#VIDIOC_G_CTRL
 
	`_IOWR
('V', 27, 
v4l2_c⁄åﬁ
)

	)

1493 
	#VIDIOC_S_CTRL
 
	`_IOWR
('V', 28, 
v4l2_c⁄åﬁ
)

	)

1494 
	#VIDIOC_G_TUNER
 
	`_IOWR
('V', 29, 
v4l2_tu√r
)

	)

1495 
	#VIDIOC_S_TUNER
 
	`_IOW
('V', 30, 
v4l2_tu√r
)

	)

1496 
	#VIDIOC_G_AUDIO
 
	`_IOR
('V', 33, 
v4l2_audio
)

	)

1497 
	#VIDIOC_S_AUDIO
 
	`_IOW
('V', 34, 
v4l2_audio
)

	)

1498 
	#VIDIOC_QUERYCTRL
 
	`_IOWR
('V', 36, 
v4l2_quîy˘æ
)

	)

1499 
	#VIDIOC_QUERYMENU
 
	`_IOWR
('V', 37, 
v4l2_quîymíu
)

	)

1500 
	#VIDIOC_G_INPUT
 
	`_IOR
('V', 38, )

	)

1501 
	#VIDIOC_S_INPUT
 
	`_IOWR
('V', 39, )

	)

1502 
	#VIDIOC_G_OUTPUT
 
	`_IOR
('V', 46, )

	)

1503 
	#VIDIOC_S_OUTPUT
 
	`_IOWR
('V', 47, )

	)

1504 
	#VIDIOC_ENUMOUTPUT
 
	`_IOWR
('V', 48, 
v4l2_ouçut
)

	)

1505 
	#VIDIOC_G_AUDOUT
 
	`_IOR
('V', 49, 
v4l2_audioout
)

	)

1506 
	#VIDIOC_S_AUDOUT
 
	`_IOW
('V', 50, 
v4l2_audioout
)

	)

1507 
	#VIDIOC_G_MODULATOR
 
	`_IOWR
('V', 54, 
v4l2_moduœt‹
)

	)

1508 
	#VIDIOC_S_MODULATOR
 
	`_IOW
('V', 55, 
v4l2_moduœt‹
)

	)

1509 
	#VIDIOC_G_FREQUENCY
 
	`_IOWR
('V', 56, 
v4l2_‰equícy
)

	)

1510 
	#VIDIOC_S_FREQUENCY
 
	`_IOW
('V', 57, 
v4l2_‰equícy
)

	)

1511 
	#VIDIOC_CROPCAP
 
	`_IOWR
('V', 58, 
v4l2_¸›ˇp
)

	)

1512 
	#VIDIOC_G_CROP
 
	`_IOWR
('V', 59, 
v4l2_¸›
)

	)

1513 
	#VIDIOC_S_CROP
 
	`_IOW
('V', 60, 
v4l2_¸›
)

	)

1514 
	#VIDIOC_G_JPEGCOMP
 
	`_IOR
('V', 61, 
v4l2_j≥gcom¥essi⁄
)

	)

1515 
	#VIDIOC_S_JPEGCOMP
 
	`_IOW
('V', 62, 
v4l2_j≥gcom¥essi⁄
)

	)

1516 
	#VIDIOC_QUERYSTD
 
	`_IOR
('V', 63, 
v4l2_°d_id
)

	)

1517 
	#VIDIOC_TRY_FMT
 
	`_IOWR
('V', 64, 
v4l2_f‹m©
)

	)

1518 
	#VIDIOC_ENUMAUDIO
 
	`_IOWR
('V', 65, 
v4l2_audio
)

	)

1519 
	#VIDIOC_ENUMAUDOUT
 
	`_IOWR
('V', 66, 
v4l2_audioout
)

	)

1520 
	#VIDIOC_G_PRIORITY
 
	`_IOR
('V', 67, 
v4l2_¥i‹ôy
)

	)

1521 
	#VIDIOC_S_PRIORITY
 
	`_IOW
('V', 68, 
v4l2_¥i‹ôy
)

	)

1522 
	#VIDIOC_G_SLICED_VBI_CAP
 
	`_IOWR
('V', 69, 
v4l2_¶i˚d_vbi_ˇp
)

	)

1523 
	#VIDIOC_LOG_STATUS
 
	`_IO
('V', 70)

	)

1524 
	#VIDIOC_G_EXT_CTRLS
 
	`_IOWR
('V', 71, 
v4l2_ext_c⁄åﬁs
)

	)

1525 
	#VIDIOC_S_EXT_CTRLS
 
	`_IOWR
('V', 72, 
v4l2_ext_c⁄åﬁs
)

	)

1526 
	#VIDIOC_TRY_EXT_CTRLS
 
	`_IOWR
('V', 73, 
v4l2_ext_c⁄åﬁs
)

	)

1528 
	#VIDIOC_ENUM_FRAMESIZES
 
	`_IOWR
('V', 74, 
v4l2_‰msizìnum
)

	)

1529 
	#VIDIOC_ENUM_FRAMEINTERVALS
 
	`_IOWR
('V', 75, 
v4l2_‰mivÆíum
)

	)

1530 
	#VIDIOC_G_ENC_INDEX
 
	`_IOR
('V', 76, 
v4l2_íc_idx
)

	)

1531 
	#VIDIOC_ENCODER_CMD
 
	`_IOWR
('V', 77, 
v4l2_ícodî_cmd
)

	)

1532 
	#VIDIOC_TRY_ENCODER_CMD
 
	`_IOWR
('V', 78, 
v4l2_ícodî_cmd
)

	)

1539 
	#VIDIOC_DBG_S_REGISTER
 
	`_IOW
('V', 79, 
v4l2_dbg_ªgi°î
)

	)

1540 
	#VIDIOC_DBG_G_REGISTER
 
	`_IOWR
('V', 80, 
v4l2_dbg_ªgi°î
)

	)

1544 
	#VIDIOC_DBG_G_CHIP_IDENT
 
	`_IOWR
('V', 81, 
v4l2_dbg_chù_idít
)

	)

1547 
	#VIDIOC_S_HW_FREQ_SEEK
 
	`_IOW
('V', 82, 
v4l2_hw_‰eq_£ek
)

	)

1551 #ifde‡
__OLD_VIDIOC_


1553 
	#VIDIOC_OVERLAY_OLD
 
	`_IOWR
('V', 14, )

	)

1554 
	#VIDIOC_S_PARM_OLD
 
	`_IOW
('V', 22, 
v4l2_°ªam∑rm
)

	)

1555 
	#VIDIOC_S_CTRL_OLD
 
	`_IOW
('V', 28, 
v4l2_c⁄åﬁ
)

	)

1556 
	#VIDIOC_G_AUDIO_OLD
 
	`_IOWR
('V', 33, 
v4l2_audio
)

	)

1557 
	#VIDIOC_G_AUDOUT_OLD
 
	`_IOWR
('V', 49, 
v4l2_audioout
)

	)

1558 
	#VIDIOC_CROPCAP_OLD
 
	`_IOR
('V', 58, 
v4l2_¸›ˇp
)

	)

1561 
	#BASE_VIDIOC_PRIVATE
 192

	)

	@/usr/include/linux/wait.h

1 #i‚de‡
_LINUX_WAIT_H


2 
	#_LINUX_WAIT_H


	)

4 
	#WNOHANG
 0x00000001

	)

5 
	#WUNTRACED
 0x00000002

	)

6 
	#WSTOPPED
 
WUNTRACED


	)

7 
	#WEXITED
 0x00000004

	)

8 
	#WCONTINUED
 0x00000008

	)

9 
	#WNOWAIT
 0x01000000

	)

11 
	#__WNOTHREAD
 0x20000000

	)

12 
	#__WALL
 0x40000000

	)

13 
	#__WCLONE
 0x80000000

	)

16 
	#P_ALL
 0

	)

17 
	#P_PID
 1

	)

18 
	#P_PGID
 2

	)

	@/usr/include/asm-generic/int-ll64.h

8 #i‚de‡
_ASM_GENERIC_INT_LL64_H


9 
	#_ASM_GENERIC_INT_LL64_H


	)

11 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__ASSEMBLY__


19 
__sig√d__
 
	t__s8
;

20 
	t__u8
;

22 
__sig√d__
 
	t__s16
;

23 
	t__u16
;

25 
__sig√d__
 
	t__s32
;

26 
	t__u32
;

28 #ifde‡
__GNUC__


29 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

30 
__exãnsi⁄__
 
	t__u64
;

32 
__sig√d__
 
	t__s64
;

33 
	t__u64
;

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/fcntl.h

1 
	~<asm-gíîic/f˙é.h
>

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm/poll.h

1 
	~<asm-gíîic/pﬁl.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/pci_regs.h

22 #i‚de‡
LINUX_PCI_REGS_H


23 
	#LINUX_PCI_REGS_H


	)

29 
	#PCI_VENDOR_ID
 0x00

	)

30 
	#PCI_DEVICE_ID
 0x02

	)

31 
	#PCI_COMMAND
 0x04

	)

32 
	#PCI_COMMAND_IO
 0x1

	)

33 
	#PCI_COMMAND_MEMORY
 0x2

	)

34 
	#PCI_COMMAND_MASTER
 0x4

	)

35 
	#PCI_COMMAND_SPECIAL
 0x8

	)

36 
	#PCI_COMMAND_INVALIDATE
 0x10

	)

37 
	#PCI_COMMAND_VGA_PALETTE
 0x20

	)

38 
	#PCI_COMMAND_PARITY
 0x40

	)

39 
	#PCI_COMMAND_WAIT
 0x80

	)

40 
	#PCI_COMMAND_SERR
 0x100

	)

41 
	#PCI_COMMAND_FAST_BACK
 0x200

	)

42 
	#PCI_COMMAND_INTX_DISABLE
 0x400

	)

44 
	#PCI_STATUS
 0x06

	)

45 
	#PCI_STATUS_CAP_LIST
 0x10

	)

46 
	#PCI_STATUS_66MHZ
 0x20

	)

47 
	#PCI_STATUS_UDF
 0x40

	)

48 
	#PCI_STATUS_FAST_BACK
 0x80

	)

49 
	#PCI_STATUS_PARITY
 0x100

	)

50 
	#PCI_STATUS_DEVSEL_MASK
 0x600

	)

51 
	#PCI_STATUS_DEVSEL_FAST
 0x000

	)

52 
	#PCI_STATUS_DEVSEL_MEDIUM
 0x200

	)

53 
	#PCI_STATUS_DEVSEL_SLOW
 0x400

	)

54 
	#PCI_STATUS_SIG_TARGET_ABORT
 0x800

	)

55 
	#PCI_STATUS_REC_TARGET_ABORT
 0x1000

	)

56 
	#PCI_STATUS_REC_MASTER_ABORT
 0x2000

	)

57 
	#PCI_STATUS_SIG_SYSTEM_ERROR
 0x4000

	)

58 
	#PCI_STATUS_DETECTED_PARITY
 0x8000

	)

60 
	#PCI_CLASS_REVISION
 0x08

	)

61 
	#PCI_REVISION_ID
 0x08

	)

62 
	#PCI_CLASS_PROG
 0x09

	)

63 
	#PCI_CLASS_DEVICE
 0x0®

	)

65 
	#PCI_CACHE_LINE_SIZE
 0x0¯

	)

66 
	#PCI_LATENCY_TIMER
 0x0d

	)

67 
	#PCI_HEADER_TYPE
 0x0ê

	)

68 
	#PCI_HEADER_TYPE_NORMAL
 0

	)

69 
	#PCI_HEADER_TYPE_BRIDGE
 1

	)

70 
	#PCI_HEADER_TYPE_CARDBUS
 2

	)

72 
	#PCI_BIST
 0x0‡

	)

73 
	#PCI_BIST_CODE_MASK
 0x0‡

	)

74 
	#PCI_BIST_START
 0x40

	)

75 
	#PCI_BIST_CAPABLE
 0x80

	)

83 
	#PCI_BASE_ADDRESS_0
 0x10

	)

84 
	#PCI_BASE_ADDRESS_1
 0x14

	)

85 
	#PCI_BASE_ADDRESS_2
 0x18

	)

86 
	#PCI_BASE_ADDRESS_3
 0x1¯

	)

87 
	#PCI_BASE_ADDRESS_4
 0x20

	)

88 
	#PCI_BASE_ADDRESS_5
 0x24

	)

89 
	#PCI_BASE_ADDRESS_SPACE
 0x01

	)

90 
	#PCI_BASE_ADDRESS_SPACE_IO
 0x01

	)

91 
	#PCI_BASE_ADDRESS_SPACE_MEMORY
 0x00

	)

92 
	#PCI_BASE_ADDRESS_MEM_TYPE_MASK
 0x06

	)

93 
	#PCI_BASE_ADDRESS_MEM_TYPE_32
 0x00

	)

94 
	#PCI_BASE_ADDRESS_MEM_TYPE_1M
 0x02

	)

95 
	#PCI_BASE_ADDRESS_MEM_TYPE_64
 0x04

	)

96 
	#PCI_BASE_ADDRESS_MEM_PREFETCH
 0x08

	)

97 
	#PCI_BASE_ADDRESS_MEM_MASK
 (~0x0fUL)

	)

98 
	#PCI_BASE_ADDRESS_IO_MASK
 (~0x03UL)

	)

102 
	#PCI_CARDBUS_CIS
 0x28

	)

103 
	#PCI_SUBSYSTEM_VENDOR_ID
 0x2c

	)

104 
	#PCI_SUBSYSTEM_ID
 0x2e

	)

105 
	#PCI_ROM_ADDRESS
 0x30

	)

106 
	#PCI_ROM_ADDRESS_ENABLE
 0x01

	)

107 
	#PCI_ROM_ADDRESS_MASK
 (~0x7ffUL)

	)

109 
	#PCI_CAPABILITY_LIST
 0x34

	)

112 
	#PCI_INTERRUPT_LINE
 0x3¯

	)

113 
	#PCI_INTERRUPT_PIN
 0x3d

	)

114 
	#PCI_MIN_GNT
 0x3ê

	)

115 
	#PCI_MAX_LAT
 0x3‡

	)

118 
	#PCI_PRIMARY_BUS
 0x18

	)

119 
	#PCI_SECONDARY_BUS
 0x19

	)

120 
	#PCI_SUBORDINATE_BUS
 0x1®

	)

121 
	#PCI_SEC_LATENCY_TIMER
 0x1b

	)

122 
	#PCI_IO_BASE
 0x1¯

	)

123 
	#PCI_IO_LIMIT
 0x1d

	)

124 
	#PCI_IO_RANGE_TYPE_MASK
 0x0fUL

	)

125 
	#PCI_IO_RANGE_TYPE_16
 0x00

	)

126 
	#PCI_IO_RANGE_TYPE_32
 0x01

	)

127 
	#PCI_IO_RANGE_MASK
 (~0x0fUL)

	)

128 
	#PCI_SEC_STATUS
 0x1ê

	)

129 
	#PCI_MEMORY_BASE
 0x20

	)

130 
	#PCI_MEMORY_LIMIT
 0x22

	)

131 
	#PCI_MEMORY_RANGE_TYPE_MASK
 0x0fUL

	)

132 
	#PCI_MEMORY_RANGE_MASK
 (~0x0fUL)

	)

133 
	#PCI_PREF_MEMORY_BASE
 0x24

	)

134 
	#PCI_PREF_MEMORY_LIMIT
 0x26

	)

135 
	#PCI_PREF_RANGE_TYPE_MASK
 0x0fUL

	)

136 
	#PCI_PREF_RANGE_TYPE_32
 0x00

	)

137 
	#PCI_PREF_RANGE_TYPE_64
 0x01

	)

138 
	#PCI_PREF_RANGE_MASK
 (~0x0fUL)

	)

139 
	#PCI_PREF_BASE_UPPER32
 0x28

	)

140 
	#PCI_PREF_LIMIT_UPPER32
 0x2c

	)

141 
	#PCI_IO_BASE_UPPER16
 0x30

	)

142 
	#PCI_IO_LIMIT_UPPER16
 0x32

	)

145 
	#PCI_ROM_ADDRESS1
 0x38

	)

147 
	#PCI_BRIDGE_CONTROL
 0x3e

	)

148 
	#PCI_BRIDGE_CTL_PARITY
 0x01

	)

149 
	#PCI_BRIDGE_CTL_SERR
 0x02

	)

150 
	#PCI_BRIDGE_CTL_ISA
 0x04

	)

151 
	#PCI_BRIDGE_CTL_VGA
 0x08

	)

152 
	#PCI_BRIDGE_CTL_MASTER_ABORT
 0x20

	)

153 
	#PCI_BRIDGE_CTL_BUS_RESET
 0x40

	)

154 
	#PCI_BRIDGE_CTL_FAST_BACK
 0x80

	)

157 
	#PCI_CB_CAPABILITY_LIST
 0x14

	)

159 
	#PCI_CB_SEC_STATUS
 0x16

	)

160 
	#PCI_CB_PRIMARY_BUS
 0x18

	)

161 
	#PCI_CB_CARD_BUS
 0x19

	)

162 
	#PCI_CB_SUBORDINATE_BUS
 0x1®

	)

163 
	#PCI_CB_LATENCY_TIMER
 0x1b

	)

164 
	#PCI_CB_MEMORY_BASE_0
 0x1c

	)

165 
	#PCI_CB_MEMORY_LIMIT_0
 0x20

	)

166 
	#PCI_CB_MEMORY_BASE_1
 0x24

	)

167 
	#PCI_CB_MEMORY_LIMIT_1
 0x28

	)

168 
	#PCI_CB_IO_BASE_0
 0x2c

	)

169 
	#PCI_CB_IO_BASE_0_HI
 0x2e

	)

170 
	#PCI_CB_IO_LIMIT_0
 0x30

	)

171 
	#PCI_CB_IO_LIMIT_0_HI
 0x32

	)

172 
	#PCI_CB_IO_BASE_1
 0x34

	)

173 
	#PCI_CB_IO_BASE_1_HI
 0x36

	)

174 
	#PCI_CB_IO_LIMIT_1
 0x38

	)

175 
	#PCI_CB_IO_LIMIT_1_HI
 0x3a

	)

176 
	#PCI_CB_IO_RANGE_MASK
 (~0x03UL)

	)

178 
	#PCI_CB_BRIDGE_CONTROL
 0x3e

	)

179 
	#PCI_CB_BRIDGE_CTL_PARITY
 0x01

	)

180 
	#PCI_CB_BRIDGE_CTL_SERR
 0x02

	)

181 
	#PCI_CB_BRIDGE_CTL_ISA
 0x04

	)

182 
	#PCI_CB_BRIDGE_CTL_VGA
 0x08

	)

183 
	#PCI_CB_BRIDGE_CTL_MASTER_ABORT
 0x20

	)

184 
	#PCI_CB_BRIDGE_CTL_CB_RESET
 0x40

	)

185 
	#PCI_CB_BRIDGE_CTL_16BIT_INT
 0x80

	)

186 
	#PCI_CB_BRIDGE_CTL_PREFETCH_MEM0
 0x100

	)

187 
	#PCI_CB_BRIDGE_CTL_PREFETCH_MEM1
 0x200

	)

188 
	#PCI_CB_BRIDGE_CTL_POST_WRITES
 0x400

	)

189 
	#PCI_CB_SUBSYSTEM_VENDOR_ID
 0x40

	)

190 
	#PCI_CB_SUBSYSTEM_ID
 0x42

	)

191 
	#PCI_CB_LEGACY_MODE_BASE
 0x44

	)

196 
	#PCI_CAP_LIST_ID
 0

	)

197 
	#PCI_CAP_ID_PM
 0x01

	)

198 
	#PCI_CAP_ID_AGP
 0x02

	)

199 
	#PCI_CAP_ID_VPD
 0x03

	)

200 
	#PCI_CAP_ID_SLOTID
 0x04

	)

201 
	#PCI_CAP_ID_MSI
 0x05

	)

202 
	#PCI_CAP_ID_CHSWP
 0x06

	)

203 
	#PCI_CAP_ID_PCIX
 0x07

	)

204 
	#PCI_CAP_ID_HT
 0x08

	)

205 
	#PCI_CAP_ID_VNDR
 0x09

	)

206 
	#PCI_CAP_ID_DBG
 0x0A

	)

207 
	#PCI_CAP_ID_CCRC
 0x0B

	)

208 
	#PCI_CAP_ID_SHPC
 0x0C

	)

209 
	#PCI_CAP_ID_SSVID
 0x0D

	)

210 
	#PCI_CAP_ID_AGP3
 0x0E

	)

211 
	#PCI_CAP_ID_EXP
 0x10

	)

212 
	#PCI_CAP_ID_MSIX
 0x11

	)

213 
	#PCI_CAP_ID_AF
 0x13

	)

214 
	#PCI_CAP_LIST_NEXT
 1

	)

215 
	#PCI_CAP_FLAGS
 2

	)

216 
	#PCI_CAP_SIZEOF
 4

	)

220 
	#PCI_PM_PMC
 2

	)

221 
	#PCI_PM_CAP_VER_MASK
 0x0007

	)

222 
	#PCI_PM_CAP_PME_CLOCK
 0x0008

	)

223 
	#PCI_PM_CAP_RESERVED
 0x0010

	)

224 
	#PCI_PM_CAP_DSI
 0x0020

	)

225 
	#PCI_PM_CAP_AUX_POWER
 0x01C0

	)

226 
	#PCI_PM_CAP_D1
 0x0200

	)

227 
	#PCI_PM_CAP_D2
 0x0400

	)

228 
	#PCI_PM_CAP_PME
 0x0800

	)

229 
	#PCI_PM_CAP_PME_MASK
 0xF800

	)

230 
	#PCI_PM_CAP_PME_D0
 0x0800

	)

231 
	#PCI_PM_CAP_PME_D1
 0x1000

	)

232 
	#PCI_PM_CAP_PME_D2
 0x2000

	)

233 
	#PCI_PM_CAP_PME_D3
 0x4000

	)

234 
	#PCI_PM_CAP_PME_D3cﬁd
 0x8000

	)

235 
	#PCI_PM_CAP_PME_SHIFT
 11

	)

236 
	#PCI_PM_CTRL
 4

	)

237 
	#PCI_PM_CTRL_STATE_MASK
 0x0003

	)

238 
	#PCI_PM_CTRL_NO_SOFT_RESET
 0x0008

	)

239 
	#PCI_PM_CTRL_PME_ENABLE
 0x0100

	)

240 
	#PCI_PM_CTRL_DATA_SEL_MASK
 0x1e00

	)

241 
	#PCI_PM_CTRL_DATA_SCALE_MASK
 0x6000

	)

242 
	#PCI_PM_CTRL_PME_STATUS
 0x8000

	)

243 
	#PCI_PM_PPB_EXTENSIONS
 6

	)

244 
	#PCI_PM_PPB_B2_B3
 0x40

	)

245 
	#PCI_PM_BPCC_ENABLE
 0x80

	)

246 
	#PCI_PM_DATA_REGISTER
 7

	)

247 
	#PCI_PM_SIZEOF
 8

	)

251 
	#PCI_AGP_VERSION
 2

	)

252 
	#PCI_AGP_RFU
 3

	)

253 
	#PCI_AGP_STATUS
 4

	)

254 
	#PCI_AGP_STATUS_RQ_MASK
 0xff000000

	)

255 
	#PCI_AGP_STATUS_SBA
 0x0200

	)

256 
	#PCI_AGP_STATUS_64BIT
 0x0020

	)

257 
	#PCI_AGP_STATUS_FW
 0x0010

	)

258 
	#PCI_AGP_STATUS_RATE4
 0x0004

	)

259 
	#PCI_AGP_STATUS_RATE2
 0x0002

	)

260 
	#PCI_AGP_STATUS_RATE1
 0x0001

	)

261 
	#PCI_AGP_COMMAND
 8

	)

262 
	#PCI_AGP_COMMAND_RQ_MASK
 0xff000000

	)

263 
	#PCI_AGP_COMMAND_SBA
 0x0200

	)

264 
	#PCI_AGP_COMMAND_AGP
 0x0100

	)

265 
	#PCI_AGP_COMMAND_64BIT
 0x0020

	)

266 
	#PCI_AGP_COMMAND_FW
 0x0010

	)

267 
	#PCI_AGP_COMMAND_RATE4
 0x0004

	)

268 
	#PCI_AGP_COMMAND_RATE2
 0x0002

	)

269 
	#PCI_AGP_COMMAND_RATE1
 0x0001

	)

270 
	#PCI_AGP_SIZEOF
 12

	)

274 
	#PCI_VPD_ADDR
 2

	)

275 
	#PCI_VPD_ADDR_MASK
 0x7ff‡

	)

276 
	#PCI_VPD_ADDR_F
 0x8000

	)

277 
	#PCI_VPD_DATA
 4

	)

281 
	#PCI_SID_ESR
 2

	)

282 
	#PCI_SID_ESR_NSLOTS
 0x1‡

	)

283 
	#PCI_SID_ESR_FIC
 0x20

	)

284 
	#PCI_SID_CHASSIS_NR
 3

	)

288 
	#PCI_MSI_FLAGS
 2

	)

289 
	#PCI_MSI_FLAGS_64BIT
 0x80

	)

290 
	#PCI_MSI_FLAGS_QSIZE
 0x70

	)

291 
	#PCI_MSI_FLAGS_QMASK
 0x0ê

	)

292 
	#PCI_MSI_FLAGS_ENABLE
 0x01

	)

293 
	#PCI_MSI_FLAGS_MASKBIT
 0x100

	)

294 
	#PCI_MSI_RFU
 3

	)

295 
	#PCI_MSI_ADDRESS_LO
 4

	)

296 
	#PCI_MSI_ADDRESS_HI
 8

	)

297 
	#PCI_MSI_DATA_32
 8

	)

298 
	#PCI_MSI_MASK_32
 12

	)

299 
	#PCI_MSI_DATA_64
 12

	)

300 
	#PCI_MSI_MASK_64
 16

	)

303 
	#PCI_MSIX_FLAGS
 2

	)

304 
	#PCI_MSIX_FLAGS_QSIZE
 0x7FF

	)

305 
	#PCI_MSIX_FLAGS_ENABLE
 (1 << 15)

	)

306 
	#PCI_MSIX_FLAGS_MASKALL
 (1 << 14)

	)

307 
	#PCI_MSIX_FLAGS_BIRMASK
 (7 << 0)

	)

311 
	#PCI_CHSWP_CSR
 2

	)

312 
	#PCI_CHSWP_DHA
 0x01

	)

313 
	#PCI_CHSWP_EIM
 0x02

	)

314 
	#PCI_CHSWP_PIE
 0x04

	)

315 
	#PCI_CHSWP_LOO
 0x08

	)

316 
	#PCI_CHSWP_PI
 0x30

	)

317 
	#PCI_CHSWP_EXT
 0x40

	)

318 
	#PCI_CHSWP_INS
 0x80

	)

322 
	#PCI_AF_LENGTH
 2

	)

323 
	#PCI_AF_CAP
 3

	)

324 
	#PCI_AF_CAP_TP
 0x01

	)

325 
	#PCI_AF_CAP_FLR
 0x02

	)

326 
	#PCI_AF_CTRL
 4

	)

327 
	#PCI_AF_CTRL_FLR
 0x01

	)

328 
	#PCI_AF_STATUS
 5

	)

329 
	#PCI_AF_STATUS_TP
 0x01

	)

333 
	#PCI_X_CMD
 2

	)

334 
	#PCI_X_CMD_DPERR_E
 0x0001

	)

335 
	#PCI_X_CMD_ERO
 0x0002

	)

336 
	#PCI_X_CMD_READ_512
 0x0000

	)

337 
	#PCI_X_CMD_READ_1K
 0x0004

	)

338 
	#PCI_X_CMD_READ_2K
 0x0008

	)

339 
	#PCI_X_CMD_READ_4K
 0x000¯

	)

340 
	#PCI_X_CMD_MAX_READ
 0x000¯

	)

342 
	#PCI_X_CMD_SPLIT_1
 0x0000

	)

343 
	#PCI_X_CMD_SPLIT_2
 0x0010

	)

344 
	#PCI_X_CMD_SPLIT_3
 0x0020

	)

345 
	#PCI_X_CMD_SPLIT_4
 0x0030

	)

346 
	#PCI_X_CMD_SPLIT_8
 0x0040

	)

347 
	#PCI_X_CMD_SPLIT_12
 0x0050

	)

348 
	#PCI_X_CMD_SPLIT_16
 0x0060

	)

349 
	#PCI_X_CMD_SPLIT_32
 0x0070

	)

350 
	#PCI_X_CMD_MAX_SPLIT
 0x0070

	)

351 
	#PCI_X_CMD_VERSION
(
x
Ë(((xË>> 12Ë& 3Ë

	)

352 
	#PCI_X_STATUS
 4

	)

353 
	#PCI_X_STATUS_DEVFN
 0x000000f‡

	)

354 
	#PCI_X_STATUS_BUS
 0x0000ff00

	)

355 
	#PCI_X_STATUS_64BIT
 0x00010000

	)

356 
	#PCI_X_STATUS_133MHZ
 0x00020000

	)

357 
	#PCI_X_STATUS_SPL_DISC
 0x00040000

	)

358 
	#PCI_X_STATUS_UNX_SPL
 0x00080000

	)

359 
	#PCI_X_STATUS_COMPLEX
 0x00100000

	)

360 
	#PCI_X_STATUS_MAX_READ
 0x00600000

	)

361 
	#PCI_X_STATUS_MAX_SPLIT
 0x03800000

	)

362 
	#PCI_X_STATUS_MAX_CUM
 0x1c000000

	)

363 
	#PCI_X_STATUS_SPL_ERR
 0x20000000

	)

364 
	#PCI_X_STATUS_266MHZ
 0x40000000

	)

365 
	#PCI_X_STATUS_533MHZ
 0x80000000

	)

369 
	#PCI_EXP_FLAGS
 2

	)

370 
	#PCI_EXP_FLAGS_VERS
 0x000‡

	)

371 
	#PCI_EXP_FLAGS_TYPE
 0x00f0

	)

372 
	#PCI_EXP_TYPE_ENDPOINT
 0x0

	)

373 
	#PCI_EXP_TYPE_LEG_END
 0x1

	)

374 
	#PCI_EXP_TYPE_ROOT_PORT
 0x4

	)

375 
	#PCI_EXP_TYPE_UPSTREAM
 0x5

	)

376 
	#PCI_EXP_TYPE_DOWNSTREAM
 0x6

	)

377 
	#PCI_EXP_TYPE_PCI_BRIDGE
 0x7

	)

378 
	#PCI_EXP_TYPE_RC_END
 0x9

	)

379 
	#PCI_EXP_TYPE_RC_EC
 0x10

	)

380 
	#PCI_EXP_FLAGS_SLOT
 0x0100

	)

381 
	#PCI_EXP_FLAGS_IRQ
 0x3e00

	)

382 
	#PCI_EXP_DEVCAP
 4

	)

383 
	#PCI_EXP_DEVCAP_PAYLOAD
 0x07

	)

384 
	#PCI_EXP_DEVCAP_PHANTOM
 0x18

	)

385 
	#PCI_EXP_DEVCAP_EXT_TAG
 0x20

	)

386 
	#PCI_EXP_DEVCAP_L0S
 0x1c0

	)

387 
	#PCI_EXP_DEVCAP_L1
 0xe00

	)

388 
	#PCI_EXP_DEVCAP_ATN_BUT
 0x1000

	)

389 
	#PCI_EXP_DEVCAP_ATN_IND
 0x2000

	)

390 
	#PCI_EXP_DEVCAP_PWR_IND
 0x4000

	)

391 
	#PCI_EXP_DEVCAP_RBER
 0x8000

	)

392 
	#PCI_EXP_DEVCAP_PWR_VAL
 0x3fc0000

	)

393 
	#PCI_EXP_DEVCAP_PWR_SCL
 0xc000000

	)

394 
	#PCI_EXP_DEVCAP_FLR
 0x10000000

	)

395 
	#PCI_EXP_DEVCTL
 8

	)

396 
	#PCI_EXP_DEVCTL_CERE
 0x0001

	)

397 
	#PCI_EXP_DEVCTL_NFERE
 0x0002

	)

398 
	#PCI_EXP_DEVCTL_FERE
 0x0004

	)

399 
	#PCI_EXP_DEVCTL_URRE
 0x0008

	)

400 
	#PCI_EXP_DEVCTL_RELAX_EN
 0x0010

	)

401 
	#PCI_EXP_DEVCTL_PAYLOAD
 0x00e0

	)

402 
	#PCI_EXP_DEVCTL_EXT_TAG
 0x0100

	)

403 
	#PCI_EXP_DEVCTL_PHANTOM
 0x0200

	)

404 
	#PCI_EXP_DEVCTL_AUX_PME
 0x0400

	)

405 
	#PCI_EXP_DEVCTL_NOSNOOP_EN
 0x0800

	)

406 
	#PCI_EXP_DEVCTL_READRQ
 0x7000

	)

407 
	#PCI_EXP_DEVCTL_BCR_FLR
 0x8000

	)

408 
	#PCI_EXP_DEVSTA
 10

	)

409 
	#PCI_EXP_DEVSTA_CED
 0x01

	)

410 
	#PCI_EXP_DEVSTA_NFED
 0x02

	)

411 
	#PCI_EXP_DEVSTA_FED
 0x04

	)

412 
	#PCI_EXP_DEVSTA_URD
 0x08

	)

413 
	#PCI_EXP_DEVSTA_AUXPD
 0x10

	)

414 
	#PCI_EXP_DEVSTA_TRPND
 0x20

	)

415 
	#PCI_EXP_LNKCAP
 12

	)

416 
	#PCI_EXP_LNKCAP_SLS
 0x0000000‡

	)

417 
	#PCI_EXP_LNKCAP_MLW
 0x000003f0

	)

418 
	#PCI_EXP_LNKCAP_ASPMS
 0x00000c00

	)

419 
	#PCI_EXP_LNKCAP_L0SEL
 0x00007000

	)

420 
	#PCI_EXP_LNKCAP_L1EL
 0x00038000

	)

421 
	#PCI_EXP_LNKCAP_CLKPM
 0x00040000

	)

422 
	#PCI_EXP_LNKCAP_SDERC
 0x00080000

	)

423 
	#PCI_EXP_LNKCAP_DLLLARC
 0x00100000

	)

424 
	#PCI_EXP_LNKCAP_LBNC
 0x00200000

	)

425 
	#PCI_EXP_LNKCAP_PN
 0xff000000

	)

426 
	#PCI_EXP_LNKCTL
 16

	)

427 
	#PCI_EXP_LNKCTL_ASPMC
 0x0003

	)

428 
	#PCI_EXP_LNKCTL_RCB
 0x0008

	)

429 
	#PCI_EXP_LNKCTL_LD
 0x0010

	)

430 
	#PCI_EXP_LNKCTL_RL
 0x0020

	)

431 
	#PCI_EXP_LNKCTL_CCC
 0x0040

	)

432 
	#PCI_EXP_LNKCTL_ES
 0x0080

	)

433 
	#PCI_EXP_LNKCTL_CLKREQ_EN
 0x100

	)

434 
	#PCI_EXP_LNKCTL_HAWD
 0x0200

	)

435 
	#PCI_EXP_LNKCTL_LBMIE
 0x0400

	)

436 
	#PCI_EXP_LNKCTL_LABIE
 0x0800

	)

437 
	#PCI_EXP_LNKSTA
 18

	)

438 
	#PCI_EXP_LNKSTA_CLS
 0x000‡

	)

439 
	#PCI_EXP_LNKSTA_NLW
 0x03f0

	)

440 
	#PCI_EXP_LNKSTA_LT
 0x0800

	)

441 
	#PCI_EXP_LNKSTA_SLC
 0x1000

	)

442 
	#PCI_EXP_LNKSTA_DLLLA
 0x2000

	)

443 
	#PCI_EXP_LNKSTA_LBMS
 0x4000

	)

444 
	#PCI_EXP_LNKSTA_LABS
 0x8000

	)

445 
	#PCI_EXP_SLTCAP
 20

	)

446 
	#PCI_EXP_SLTCAP_ABP
 0x00000001

	)

447 
	#PCI_EXP_SLTCAP_PCP
 0x00000002

	)

448 
	#PCI_EXP_SLTCAP_MRLSP
 0x00000004

	)

449 
	#PCI_EXP_SLTCAP_AIP
 0x00000008

	)

450 
	#PCI_EXP_SLTCAP_PIP
 0x00000010

	)

451 
	#PCI_EXP_SLTCAP_HPS
 0x00000020

	)

452 
	#PCI_EXP_SLTCAP_HPC
 0x00000040

	)

453 
	#PCI_EXP_SLTCAP_SPLV
 0x00007f80

	)

454 
	#PCI_EXP_SLTCAP_SPLS
 0x00018000

	)

455 
	#PCI_EXP_SLTCAP_EIP
 0x00020000

	)

456 
	#PCI_EXP_SLTCAP_NCCS
 0x00040000

	)

457 
	#PCI_EXP_SLTCAP_PSN
 0xfff80000

	)

458 
	#PCI_EXP_SLTCTL
 24

	)

459 
	#PCI_EXP_SLTCTL_ABPE
 0x0001

	)

460 
	#PCI_EXP_SLTCTL_PFDE
 0x0002

	)

461 
	#PCI_EXP_SLTCTL_MRLSCE
 0x0004

	)

462 
	#PCI_EXP_SLTCTL_PDCE
 0x0008

	)

463 
	#PCI_EXP_SLTCTL_CCIE
 0x0010

	)

464 
	#PCI_EXP_SLTCTL_HPIE
 0x0020

	)

465 
	#PCI_EXP_SLTCTL_AIC
 0x00c0

	)

466 
	#PCI_EXP_SLTCTL_PIC
 0x0300

	)

467 
	#PCI_EXP_SLTCTL_PCC
 0x0400

	)

468 
	#PCI_EXP_SLTCTL_EIC
 0x0800

	)

469 
	#PCI_EXP_SLTCTL_DLLSCE
 0x1000

	)

470 
	#PCI_EXP_SLTSTA
 26

	)

471 
	#PCI_EXP_SLTSTA_ABP
 0x0001

	)

472 
	#PCI_EXP_SLTSTA_PFD
 0x0002

	)

473 
	#PCI_EXP_SLTSTA_MRLSC
 0x0004

	)

474 
	#PCI_EXP_SLTSTA_PDC
 0x0008

	)

475 
	#PCI_EXP_SLTSTA_CC
 0x0010

	)

476 
	#PCI_EXP_SLTSTA_MRLSS
 0x0020

	)

477 
	#PCI_EXP_SLTSTA_PDS
 0x0040

	)

478 
	#PCI_EXP_SLTSTA_EIS
 0x0080

	)

479 
	#PCI_EXP_SLTSTA_DLLSC
 0x0100

	)

480 
	#PCI_EXP_RTCTL
 28

	)

481 
	#PCI_EXP_RTCTL_SECEE
 0x01

	)

482 
	#PCI_EXP_RTCTL_SENFEE
 0x02

	)

483 
	#PCI_EXP_RTCTL_SEFEE
 0x04

	)

484 
	#PCI_EXP_RTCTL_PMEIE
 0x08

	)

485 
	#PCI_EXP_RTCTL_CRSSVE
 0x10

	)

486 
	#PCI_EXP_RTCAP
 30

	)

487 
	#PCI_EXP_RTSTA
 32

	)

488 
	#PCI_EXP_DEVCAP2
 36

	)

489 
	#PCI_EXP_DEVCAP2_ARI
 0x20

	)

490 
	#PCI_EXP_DEVCTL2
 40

	)

491 
	#PCI_EXP_DEVCTL2_ARI
 0x20

	)

492 
	#PCI_EXP_LNKCTL2
 48

	)

493 
	#PCI_EXP_SLTCTL2
 56

	)

496 
	#PCI_EXT_CAP_ID
(
hódî
Ë(hódî & 0x0000ffff)

	)

497 
	#PCI_EXT_CAP_VER
(
hódî
Ë((hódî >> 16Ë& 0xf)

	)

498 
	#PCI_EXT_CAP_NEXT
(
hódî
Ë((hódî >> 20Ë& 0xffc)

	)

500 
	#PCI_EXT_CAP_ID_ERR
 1

	)

501 
	#PCI_EXT_CAP_ID_VC
 2

	)

502 
	#PCI_EXT_CAP_ID_DSN
 3

	)

503 
	#PCI_EXT_CAP_ID_PWR
 4

	)

504 
	#PCI_EXT_CAP_ID_ARI
 14

	)

505 
	#PCI_EXT_CAP_ID_ATS
 15

	)

506 
	#PCI_EXT_CAP_ID_SRIOV
 16

	)

509 
	#PCI_ERR_UNCOR_STATUS
 4

	)

510 
	#PCI_ERR_UNC_TRAIN
 0x00000001

	)

511 
	#PCI_ERR_UNC_DLP
 0x00000010

	)

512 
	#PCI_ERR_UNC_POISON_TLP
 0x00001000

	)

513 
	#PCI_ERR_UNC_FCP
 0x00002000

	)

514 
	#PCI_ERR_UNC_COMP_TIME
 0x00004000

	)

515 
	#PCI_ERR_UNC_COMP_ABORT
 0x00008000

	)

516 
	#PCI_ERR_UNC_UNX_COMP
 0x00010000

	)

517 
	#PCI_ERR_UNC_RX_OVER
 0x00020000

	)

518 
	#PCI_ERR_UNC_MALF_TLP
 0x00040000

	)

519 
	#PCI_ERR_UNC_ECRC
 0x00080000

	)

520 
	#PCI_ERR_UNC_UNSUP
 0x00100000

	)

521 
	#PCI_ERR_UNCOR_MASK
 8

	)

523 
	#PCI_ERR_UNCOR_SEVER
 12

	)

525 
	#PCI_ERR_COR_STATUS
 16

	)

526 
	#PCI_ERR_COR_RCVR
 0x00000001

	)

527 
	#PCI_ERR_COR_BAD_TLP
 0x00000040

	)

528 
	#PCI_ERR_COR_BAD_DLLP
 0x00000080

	)

529 
	#PCI_ERR_COR_REP_ROLL
 0x00000100

	)

530 
	#PCI_ERR_COR_REP_TIMER
 0x00001000

	)

531 
	#PCI_ERR_COR_MASK
 20

	)

533 
	#PCI_ERR_CAP
 24

	)

534 
	#PCI_ERR_CAP_FEP
(
x
Ë((xË& 31Ë

	)

535 
	#PCI_ERR_CAP_ECRC_GENC
 0x00000020

	)

536 
	#PCI_ERR_CAP_ECRC_GENE
 0x00000040

	)

537 
	#PCI_ERR_CAP_ECRC_CHKC
 0x00000080

	)

538 
	#PCI_ERR_CAP_ECRC_CHKE
 0x00000100

	)

539 
	#PCI_ERR_HEADER_LOG
 28

	)

540 
	#PCI_ERR_ROOT_COMMAND
 44

	)

542 
	#PCI_ERR_ROOT_CMD_COR_EN
 0x00000001

	)

544 
	#PCI_ERR_ROOT_CMD_NONFATAL_EN
 0x00000002

	)

546 
	#PCI_ERR_ROOT_CMD_FATAL_EN
 0x00000004

	)

547 
	#PCI_ERR_ROOT_STATUS
 48

	)

548 
	#PCI_ERR_ROOT_COR_RCV
 0x00000001

	)

550 
	#PCI_ERR_ROOT_MULTI_COR_RCV
 0x00000002

	)

552 
	#PCI_ERR_ROOT_UNCOR_RCV
 0x00000004

	)

554 
	#PCI_ERR_ROOT_MULTI_UNCOR_RCV
 0x00000008

	)

555 
	#PCI_ERR_ROOT_FIRST_FATAL
 0x00000010

	)

556 
	#PCI_ERR_ROOT_NONFATAL_RCV
 0x00000020

	)

557 
	#PCI_ERR_ROOT_FATAL_RCV
 0x00000040

	)

558 
	#PCI_ERR_ROOT_COR_SRC
 52

	)

559 
	#PCI_ERR_ROOT_SRC
 54

	)

562 
	#PCI_VC_PORT_REG1
 4

	)

563 
	#PCI_VC_PORT_REG2
 8

	)

564 
	#PCI_VC_PORT_CTRL
 12

	)

565 
	#PCI_VC_PORT_STATUS
 14

	)

566 
	#PCI_VC_RES_CAP
 16

	)

567 
	#PCI_VC_RES_CTRL
 20

	)

568 
	#PCI_VC_RES_STATUS
 26

	)

571 
	#PCI_PWR_DSR
 4

	)

572 
	#PCI_PWR_DATA
 8

	)

573 
	#PCI_PWR_DATA_BASE
(
x
Ë((xË& 0xffË

	)

574 
	#PCI_PWR_DATA_SCALE
(
x
Ë(((xË>> 8Ë& 3Ë

	)

575 
	#PCI_PWR_DATA_PM_SUB
(
x
Ë(((xË>> 10Ë& 7Ë

	)

576 
	#PCI_PWR_DATA_PM_STATE
(
x
Ë(((xË>> 13Ë& 3Ë

	)

577 
	#PCI_PWR_DATA_TYPE
(
x
Ë(((xË>> 15Ë& 7Ë

	)

578 
	#PCI_PWR_DATA_RAIL
(
x
Ë(((xË>> 18Ë& 7Ë

	)

579 
	#PCI_PWR_CAP
 12

	)

580 
	#PCI_PWR_CAP_BUDGET
(
x
Ë((xË& 1Ë

	)

590 
	#HT_3BIT_CAP_MASK
 0xE0

	)

591 
	#HT_CAPTYPE_SLAVE
 0x00

	)

592 
	#HT_CAPTYPE_HOST
 0x20

	)

594 
	#HT_5BIT_CAP_MASK
 0xF8

	)

595 
	#HT_CAPTYPE_IRQ
 0x80

	)

596 
	#HT_CAPTYPE_REMAPPING_40
 0xA0

	)

597 
	#HT_CAPTYPE_REMAPPING_64
 0xA2

	)

598 
	#HT_CAPTYPE_UNITID_CLUMP
 0x90

	)

599 
	#HT_CAPTYPE_EXTCONF
 0x98

	)

600 
	#HT_CAPTYPE_MSI_MAPPING
 0xA8

	)

601 
	#HT_MSI_FLAGS
 0x02

	)

602 
	#HT_MSI_FLAGS_ENABLE
 0x1

	)

603 
	#HT_MSI_FLAGS_FIXED
 0x2

	)

604 
	#HT_MSI_FIXED_ADDR
 0x00000000FEE00000ULL

	)

605 
	#HT_MSI_ADDR_LO
 0x04

	)

606 
	#HT_MSI_ADDR_LO_MASK
 0xFFF00000

	)

607 
	#HT_MSI_ADDR_HI
 0x08

	)

608 
	#HT_CAPTYPE_DIRECT_ROUTE
 0xB0

	)

609 
	#HT_CAPTYPE_VCSET
 0xB8

	)

610 
	#HT_CAPTYPE_ERROR_RETRY
 0xC0

	)

611 
	#HT_CAPTYPE_GEN3
 0xD0

	)

612 
	#HT_CAPTYPE_PM
 0xE0

	)

615 
	#PCI_ARI_CAP
 0x04

	)

616 
	#PCI_ARI_CAP_MFVC
 0x0001

	)

617 
	#PCI_ARI_CAP_ACS
 0x0002

	)

618 
	#PCI_ARI_CAP_NFN
(
x
Ë(((xË>> 8Ë& 0xffË

	)

619 
	#PCI_ARI_CTRL
 0x06

	)

620 
	#PCI_ARI_CTRL_MFVC
 0x0001

	)

621 
	#PCI_ARI_CTRL_ACS
 0x0002

	)

622 
	#PCI_ARI_CTRL_FG
(
x
Ë(((xË>> 4Ë& 7Ë

	)

625 
	#PCI_ATS_CAP
 0x04

	)

626 
	#PCI_ATS_CAP_QDEP
(
x
Ë((xË& 0x1fË

	)

627 
	#PCI_ATS_MAX_QDEP
 32

	)

628 
	#PCI_ATS_CTRL
 0x06

	)

629 
	#PCI_ATS_CTRL_ENABLE
 0x8000

	)

630 
	#PCI_ATS_CTRL_STU
(
x
Ë((xË& 0x1fË

	)

631 
	#PCI_ATS_MIN_STU
 12

	)

634 
	#PCI_SRIOV_CAP
 0x04

	)

635 
	#PCI_SRIOV_CAP_VFM
 0x01

	)

636 
	#PCI_SRIOV_CAP_INTR
(
x
Ë((xË>> 21Ë

	)

637 
	#PCI_SRIOV_CTRL
 0x08

	)

638 
	#PCI_SRIOV_CTRL_VFE
 0x01

	)

639 
	#PCI_SRIOV_CTRL_VFM
 0x02

	)

640 
	#PCI_SRIOV_CTRL_INTR
 0x04

	)

641 
	#PCI_SRIOV_CTRL_MSE
 0x08

	)

642 
	#PCI_SRIOV_CTRL_ARI
 0x10

	)

643 
	#PCI_SRIOV_STATUS
 0x0®

	)

644 
	#PCI_SRIOV_STATUS_VFM
 0x01

	)

645 
	#PCI_SRIOV_INITIAL_VF
 0x0¯

	)

646 
	#PCI_SRIOV_TOTAL_VF
 0x0ê

	)

647 
	#PCI_SRIOV_NUM_VF
 0x10

	)

648 
	#PCI_SRIOV_FUNC_LINK
 0x12

	)

649 
	#PCI_SRIOV_VF_OFFSET
 0x14

	)

650 
	#PCI_SRIOV_VF_STRIDE
 0x16

	)

651 
	#PCI_SRIOV_VF_DID
 0x1®

	)

652 
	#PCI_SRIOV_SUP_PGSIZE
 0x1¯

	)

653 
	#PCI_SRIOV_SYS_PGSIZE
 0x20

	)

654 
	#PCI_SRIOV_BAR
 0x24

	)

655 
	#PCI_SRIOV_NUM_BARS
 6

	)

656 
	#PCI_SRIOV_VFM
 0x3¯

	)

657 
	#PCI_SRIOV_VFM_BIR
(
x
Ë((xË& 7Ë

	)

658 
	#PCI_SRIOV_VFM_OFFSET
(
x
Ë((xË& ~7Ë

	)

659 
	#PCI_SRIOV_VFM_UA
 0x0

	)

660 
	#PCI_SRIOV_VFM_MI
 0x1

	)

661 
	#PCI_SRIOV_VFM_MO
 0x2

	)

662 
	#PCI_SRIOV_VFM_AV
 0x3

	)

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
Ë(1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

45 
	t__kî√l_mqd_t
;

47 
	~<asm/posix_ty≥s.h
>

	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/asm-generic/fcntl.h

1 #i‚de‡
_ASM_GENERIC_FCNTL_H


2 
	#_ASM_GENERIC_FCNTL_H


	)

4 
	~<löux/ty≥s.h
>

8 
	#O_ACCMODE
 00000003

	)

9 
	#O_RDONLY
 00000000

	)

10 
	#O_WRONLY
 00000001

	)

11 
	#O_RDWR
 00000002

	)

12 #i‚de‡
O_CREAT


13 
	#O_CREAT
 00000100

	)

15 #i‚de‡
O_EXCL


16 
	#O_EXCL
 00000200

	)

18 #i‚de‡
O_NOCTTY


19 
	#O_NOCTTY
 00000400

	)

21 #i‚de‡
O_TRUNC


22 
	#O_TRUNC
 00001000

	)

24 #i‚de‡
O_APPEND


25 
	#O_APPEND
 00002000

	)

27 #i‚de‡
O_NONBLOCK


28 
	#O_NONBLOCK
 00004000

	)

30 #i‚de‡
O_SYNC


31 
	#O_SYNC
 00010000

	)

33 #i‚de‡
FASYNC


34 
	#FASYNC
 00020000

	)

36 #i‚de‡
O_DIRECT


37 
	#O_DIRECT
 00040000

	)

39 #i‚de‡
O_LARGEFILE


40 
	#O_LARGEFILE
 00100000

	)

42 #i‚de‡
O_DIRECTORY


43 
	#O_DIRECTORY
 00200000

	)

45 #i‚de‡
O_NOFOLLOW


46 
	#O_NOFOLLOW
 00400000

	)

48 #i‚de‡
O_NOATIME


49 
	#O_NOATIME
 01000000

	)

51 #i‚de‡
O_CLOEXEC


52 
	#O_CLOEXEC
 02000000

	)

54 #i‚de‡
O_NDELAY


55 
	#O_NDELAY
 
O_NONBLOCK


	)

58 
	#F_DUPFD
 0

	)

59 
	#F_GETFD
 1

	)

60 
	#F_SETFD
 2

	)

61 
	#F_GETFL
 3

	)

62 
	#F_SETFL
 4

	)

63 #i‚de‡
F_GETLK


64 
	#F_GETLK
 5

	)

65 
	#F_SETLK
 6

	)

66 
	#F_SETLKW
 7

	)

68 #i‚de‡
F_SETOWN


69 
	#F_SETOWN
 8

	)

70 
	#F_GETOWN
 9

	)

72 #i‚de‡
F_SETSIG


73 
	#F_SETSIG
 10

	)

74 
	#F_GETSIG
 11

	)

78 
	#FD_CLOEXEC
 1

	)

81 #i‚de‡
F_RDLCK


82 
	#F_RDLCK
 0

	)

83 
	#F_WRLCK
 1

	)

84 
	#F_UNLCK
 2

	)

88 #i‚de‡
F_EXLCK


89 
	#F_EXLCK
 4

	)

90 
	#F_SHLCK
 8

	)

94 #i‚de‡
F_INPROGRESS


95 
	#F_INPROGRESS
 16

	)

99 
	#LOCK_SH
 1

	)

100 
	#LOCK_EX
 2

	)

101 
	#LOCK_NB
 4

	)

103 
	#LOCK_UN
 8

	)

105 
	#LOCK_MAND
 32

	)

106 
	#LOCK_READ
 64

	)

107 
	#LOCK_WRITE
 128

	)

108 
	#LOCK_RW
 192

	)

110 
	#F_LINUX_SPECIFIC_BASE
 1024

	)

112 #i‚de‡
HAVE_ARCH_STRUCT_FLOCK


113 #i‚de‡
__ARCH_FLOCK_PAD


114 
	#__ARCH_FLOCK_PAD


	)

117 
	sÊock
 {

118 
	ml_ty≥
;

119 
	ml_whí˚
;

120 
__kî√l_off_t
 
	ml_°¨t
;

121 
__kî√l_off_t
 
	ml_Àn
;

122 
__kî√l_pid_t
 
	ml_pid
;

123 
	m__ARCH_FLOCK_PAD


127 #i‚de‡
CONFIG_64BIT


129 #i‚de‡
F_GETLK64


130 
	#F_GETLK64
 12

	)

131 
	#F_SETLK64
 13

	)

132 
	#F_SETLKW64
 14

	)

135 #i‚de‡
HAVE_ARCH_STRUCT_FLOCK64


136 #i‚de‡
__ARCH_FLOCK64_PAD


137 
	#__ARCH_FLOCK64_PAD


	)

140 
	sÊock64
 {

141 
	ml_ty≥
;

142 
	ml_whí˚
;

143 
__kî√l_loff_t
 
	ml_°¨t
;

144 
__kî√l_loff_t
 
	ml_Àn
;

145 
__kî√l_pid_t
 
	ml_pid
;

146 
	m__ARCH_FLOCK64_PAD


	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/asm-generic/poll.h

1 #i‚de‡
__ASM_GENERIC_POLL_H


2 
	#__ASM_GENERIC_POLL_H


	)

5 
	#POLLIN
 0x0001

	)

6 
	#POLLPRI
 0x0002

	)

7 
	#POLLOUT
 0x0004

	)

8 
	#POLLERR
 0x0008

	)

9 
	#POLLHUP
 0x0010

	)

10 
	#POLLNVAL
 0x0020

	)

13 
	#POLLRDNORM
 0x0040

	)

14 
	#POLLRDBAND
 0x0080

	)

15 #i‚de‡
POLLWRNORM


16 
	#POLLWRNORM
 0x0100

	)

18 #i‚de‡
POLLWRBAND


19 
	#POLLWRBAND
 0x0200

	)

21 #i‚de‡
POLLMSG


22 
	#POLLMSG
 0x0400

	)

24 #i‚de‡
POLLREMOVE


25 
	#POLLREMOVE
 0x1000

	)

27 #i‚de‡
POLLRDHUP


28 
	#POLLRDHUP
 0x2000

	)

31 
	spﬁlfd
 {

32 
	mfd
;

33 
	mevíts
;

34 
	mªvíts
;

	@/usr/include/asm/bitsperlong.h

1 #i‚de‡
__ASM_X86_BITSPERLONG_H


2 
	#__ASM_X86_BITSPERLONG_H


	)

4 #ifde‡
__x86_64__


5 
	#__BITS_PER_LONG
 64

	)

7 
	#__BITS_PER_LONG
 32

	)

10 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/asm/posix_types.h

1 #ifde‡
__i386__


2 
	~"posix_ty≥s_32.h
"

4 
	~"posix_ty≥s_64.h
"

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

95 #unde‡
__USE_ISOC99


96 #unde‡
__USE_ISOC95


97 #unde‡
__USE_POSIX


98 #unde‡
__USE_POSIX2


99 #unde‡
__USE_POSIX199309


100 #unde‡
__USE_POSIX199506


101 #unde‡
__USE_XOPEN


102 #unde‡
__USE_XOPEN_EXTENDED


103 #unde‡
__USE_UNIX98


104 #unde‡
__USE_XOPEN2K


105 #unde‡
__USE_XOPEN2K8


106 #unde‡
__USE_LARGEFILE


107 #unde‡
__USE_LARGEFILE64


108 #unde‡
__USE_FILE_OFFSET64


109 #unde‡
__USE_BSD


110 #unde‡
__USE_SVID


111 #unde‡
__USE_MISC


112 #unde‡
__USE_ATFILE


113 #unde‡
__USE_GNU


114 #unde‡
__USE_REENTRANT


115 #unde‡
__USE_FORTIFY_LEVEL


116 #unde‡
__FAVOR_BSD


117 #unde‡
__KERNEL_STRICT_NAMES


121 #i‚de‡
_LOOSE_KERNEL_NAMES


122 
	#__KERNEL_STRICT_NAMES


	)

126 
	#__USE_ANSI
 1

	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

144 #i‡
deföed
 
_BSD_SOURCE
 && \

145 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

146 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

147 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

148 
	#__FAVOR_BSD
 1

	)

152 #ifde‡
_GNU_SOURCE


153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_POSIX_SOURCE


156 
	#_POSIX_SOURCE
 1

	)

157 #unde‡
_POSIX_C_SOURCE


158 
	#_POSIX_C_SOURCE
 200809L

	)

159 #unde‡
_XOPEN_SOURCE


160 
	#_XOPEN_SOURCE
 700

	)

161 #unde‡
_XOPEN_SOURCE_EXTENDED


162 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

163 #unde‡
_LARGEFILE64_SOURCE


164 
	#_LARGEFILE64_SOURCE
 1

	)

165 #unde‡
_BSD_SOURCE


166 
	#_BSD_SOURCE
 1

	)

167 #unde‡
_SVID_SOURCE


168 
	#_SVID_SOURCE
 1

	)

169 #unde‡
_ATFILE_SOURCE


170 
	#_ATFILE_SOURCE
 1

	)

175 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

176 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

177 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

178 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

179 
	#_BSD_SOURCE
 1

	)

180 
	#_SVID_SOURCE
 1

	)

187 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

188 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

189 
	#__USE_ISOC99
 1

	)

193 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

194 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

195 
	#__USE_ISOC95
 1

	)

200 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

201 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

202 
	#_POSIX_SOURCE
 1

	)

203 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

204 
	#_POSIX_C_SOURCE
 2

	)

205 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

206 
	#_POSIX_C_SOURCE
 199506L

	)

207 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

208 
	#_POSIX_C_SOURCE
 200112L

	)

210 
	#_POSIX_C_SOURCE
 200809L

	)

212 
	#__USE_POSIX_IMPLICITLY
 1

	)

215 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


216 
	#__USE_POSIX
 1

	)

219 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX2
 1

	)

223 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

224 
	#__USE_POSIX199309
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

228 
	#__USE_POSIX199506
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

232 
	#__USE_XOPEN2K
 1

	)

233 #unde‡
__USE_ISOC99


234 
	#__USE_ISOC99
 1

	)

237 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

238 
	#__USE_XOPEN2K8
 1

	)

239 #unde‡
_ATFILE_SOURCE


240 
	#_ATFILE_SOURCE
 1

	)

243 #ifdef 
_XOPEN_SOURCE


244 
	#__USE_XOPEN
 1

	)

245 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

246 
	#__USE_XOPEN_EXTENDED
 1

	)

247 
	#__USE_UNIX98
 1

	)

248 #unde‡
_LARGEFILE_SOURCE


249 
	#_LARGEFILE_SOURCE
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

252 
	#__USE_XOPEN2K8
 1

	)

254 
	#__USE_XOPEN2K
 1

	)

255 #unde‡
__USE_ISOC99


256 
	#__USE_ISOC99
 1

	)

259 #ifde‡
_XOPEN_SOURCE_EXTENDED


260 
	#__USE_XOPEN_EXTENDED
 1

	)

265 #ifde‡
_LARGEFILE_SOURCE


266 
	#__USE_LARGEFILE
 1

	)

269 #ifde‡
_LARGEFILE64_SOURCE


270 
	#__USE_LARGEFILE64
 1

	)

273 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

274 
	#__USE_FILE_OFFSET64
 1

	)

277 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


278 
	#__USE_MISC
 1

	)

281 #ifdef 
_BSD_SOURCE


282 
	#__USE_BSD
 1

	)

285 #ifdef 
_SVID_SOURCE


286 
	#__USE_SVID
 1

	)

289 #ifdef 
_ATFILE_SOURCE


290 
	#__USE_ATFILE
 1

	)

293 #ifdef 
_GNU_SOURCE


294 
	#__USE_GNU
 1

	)

297 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


298 
	#__USE_REENTRANT
 1

	)

301 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

302 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

303 #i‡
_FORTIFY_SOURCE
 > 1

304 
	#__USE_FORTIFY_LEVEL
 2

	)

306 
	#__USE_FORTIFY_LEVEL
 1

	)

309 
	#__USE_FORTIFY_LEVEL
 0

	)

313 
	~<bôs/¥edefs.h
>

316 
	#__STDC_ISO_10646__
 200009L

	)

324 #unde‡
__GNU_LIBRARY__


325 
	#__GNU_LIBRARY__
 6

	)

329 
	#__GLIBC__
 2

	)

330 
	#__GLIBC_MINOR__
 10

	)

332 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

333 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

336 #i‡
deföed
 
__GNUC__
 \

337 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

338 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

339 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

340 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

344 #i‚de‡
__ASSEMBLER__


345 #i‚de‡
_SYS_CDEFS_H


346 
	~<sys/cdefs.h
>

351 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


352 
	#__USE_LARGEFILE
 1

	)

353 
	#__USE_LARGEFILE64
 1

	)

359 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

360 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

361 && 
deföed
 
	g__exã∫_ölöe


362 
	#__USE_EXTERN_INLINES
 1

	)

367 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

368 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

369 && 
deföed
 
	g__exã∫_ölöe


370 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

378 
	~<gnu/°ubs.h
>

	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

6 #unde‡
NULL


7 #i‡
deföed
(
__˝lu•lus
)

8 
	#NULL
 0

	)

10 
	#NULL
 ((*)0)

	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/asm-generic/bitsperlong.h

1 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


2 
	#__ASM_GENERIC_BITS_PER_LONG


	)

11 #i‚de‡
__BITS_PER_LONG


12 
	#__BITS_PER_LONG
 32

	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_SET_BTS
 "btsq"

	)

31 
	#__FD_CLR_BTR
 "båq"

	)

32 
	#__FD_ISSET_BT
 "btq"

	)

34 
	#__FD_ZERO_STOS
 "°o¶"

	)

35 
	#__FD_SET_BTS
 "bt¶"

	)

36 
	#__FD_CLR_BTR
 "bål"

	)

37 
	#__FD_ISSET_BT
 "bé"

	)

40 
	#__FD_ZERO
(
fd•
) \

42 
__d0
, 
__d1
; \

43 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

44 : "=c" (
__d0
), "=D" (
__d1
) \

45 : "a" (0), "0" ( (
fd_£t
) \

46 /  (
__fd_mask
)), \

47 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

49 } 0)

	)

51 
	#__FD_SET
(
fd
, 
fd•
) \

52 
__asm__
 
	`__vﬁ©ûe__
 (
__FD_SET_BTS
 " %1,%0" \

53 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

54 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

55 : "cc","mem‹y")

	)

56 
	#__FD_CLR
(
fd
, 
fd•
) \

57 
__asm__
 
	`__vﬁ©ûe__
 (
__FD_CLR_BTR
 " %1,%0" \

58 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

59 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

60 : "cc","mem‹y")

	)

61 
	#__FD_ISSET
(
fd
, 
fd•
) \

62 (
__exãnsi⁄__
 \

63 ({
__ªsu…
; \

64 
__asm__
 
	`__vﬁ©ûe__
 (
__FD_ISSET_BT
 " %1,%2 ; setcb %b0" \

65 : "=q" (
__ªsu…
) \

66 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
), \

67 "m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

69 
__ªsu…
; }))

	)

75 
	#__FD_ZERO
(
£t
) \

77 
__i
; \

78 
fd_£t
 *
__¨r
 = (
£t
); \

79 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

80 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

81 } 0)

	)

82 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

83 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

84 
	#__FD_ISSET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] & 
	`__FDMASK
 (d))

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
f˘

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
f˘

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
f˘

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
¨gs

75 
	#__PMT
(
¨gs
Ë
	)
¨gs

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
˙ame

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
¥Ÿo

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
¥Ÿo

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@
1
.
1
/usr/include
150
5297
../../tw5864/device_layer/audio_de_driver.c
../../tw5864/device_layer/audio_en_driver.c
../../tw5864/device_layer/jpeg_en_driver.c
../../tw5864/device_layer/tc.c
../../tw5864/device_layer/tc_audio_de.c
../../tw5864/device_layer/tc_audio_en.c
../../tw5864/device_layer/tc_buffer.c
../../tw5864/device_layer/tc_chip.c
../../tw5864/device_layer/tc_chip_ai.c
../../tw5864/device_layer/tc_chip_vi.c
../../tw5864/device_layer/tc_helper.c
../../tw5864/device_layer/tc_jpeg_en.c
../../tw5864/device_layer/tc_video_en.c
../../tw5864/device_layer/video_en_driver.c
../../tw5864/include/tw5864/HalSoftTimerLib.h
../../tw5864/include/tw5864/algo_h264_driver.h
../../tw5864/include/tw5864/bar_ctl.h
../../tw5864/include/tw5864/bitstream.h
../../tw5864/include/tw5864/bs.h
../../tw5864/include/tw5864/chip_bus_schedule.h
../../tw5864/include/tw5864/ddr_burst_interface.h
../../tw5864/include/tw5864/dma.h
../../tw5864/include/tw5864/dvm_common.h
../../tw5864/include/tw5864/dvm_new_buf.h
../../tw5864/include/tw5864/dvm_osd.h
../../tw5864/include/tw5864/dvm_rc.h
../../tw5864/include/tw5864/golomb.h
../../tw5864/include/tw5864/proc_entry.h
../../tw5864/include/tw5864/tc.h
../../tw5864/include/tw5864/tc_audio_decode.h
../../tw5864/include/tw5864/tc_audio_encode.h
../../tw5864/include/tw5864/tc_buffer.h
../../tw5864/include/tw5864/tc_common.h
../../tw5864/include/tw5864/tc_helper.h
../../tw5864/include/tw5864/tc_ioctl.h
../../tw5864/include/tw5864/tc_video_en.h
../../tw5864/include/tw5864/tw5864_chip.h
../../tw5864/include/tw5864/tw_audio_buf.h
../../tw5864/include/tw5864/tw_audio_chan_driver.h
../../tw5864/include/tw5864/tw_audio_iop.h
../../tw5864/include/tw5864/tw_avSync_device.h
../../tw5864/include/tw5864/tw_avSync_device_buf.h
../../tw5864/include/tw5864/tw_chip_ai.h
../../tw5864/include/tw5864/tw_chip_ao.h
../../tw5864/include/tw5864/tw_chip_driver.h
../../tw5864/include/tw5864/tw_chip_vi.h
../../tw5864/include/tw5864/tw_chip_vo.h
../../tw5864/include/tw5864/tw_codec_common.h
../../tw5864/include/tw5864/tw_common.h
../../tw5864/include/tw5864/tw_common_err.h
../../tw5864/include/tw5864/tw_decode_sync.h
../../tw5864/include/tw5864/tw_devices.h
../../tw5864/include/tw5864/tw_endpoint.h
../../tw5864/include/tw5864/tw_h264_encode.h
../../tw5864/include/tw5864/tw_h264_video_buf.h
../../tw5864/include/tw5864/tw_interface.h
../../tw5864/include/tw5864/tw_jpeg_codec.h
../../tw5864/include/tw5864/tw_kthread_msg.h
../../tw5864/include/tw5864/tw_vb_common.h
../../tw5864/include/tw5864/tw_video_display.h
../../tw5864/interface/tw_interface.h
../../tw5864/tw5864/algo_h264_driver.c
../../tw5864/tw5864/bar_ctl.c
../../tw5864/tw5864/chip_bus_scheduler.c
../../tw5864/tw5864/config.c
../../tw5864/tw5864/ddr_burst_interface.c
../../tw5864/tw5864/dma.c
../../tw5864/tw5864/dvm_new_buf.c
../../tw5864/tw5864/dvm_rc.c
../../tw5864/tw5864/frame.c
../../tw5864/tw5864/golomb.c
../../tw5864/tw5864/proc_entry.c
../../tw5864/tw5864/tw_audio_buf.c
../../tw5864/tw5864/tw_audio_chan_driver.c
../../tw5864/tw5864/tw_audio_iop.c
../../tw5864/tw5864/tw_avSync_device.c
../../tw5864/tw5864/tw_avSync_device_buf.c
../../tw5864/tw5864/tw_char_lib12.c
../../tw5864/tw5864/tw_char_lib16.c
../../tw5864/tw5864/tw_char_lib24.c
../../tw5864/tw5864/tw_chip.c
../../tw5864/tw5864/tw_chip_ai.c
../../tw5864/tw5864/tw_chip_ao.c
../../tw5864/tw5864/tw_chip_driver.c
../../tw5864/tw5864/tw_chip_vi.c
../../tw5864/tw5864/tw_chip_vo.c
../../tw5864/tw5864/tw_decode_sync.c
../../tw5864/tw5864/tw_devices_machine.c
../../tw5864/tw5864/tw_h264_encode.c
../../tw5864/tw5864/tw_h264_video_buf.c
../../tw5864/tw5864/tw_jpeg_codec.c
../../tw5864/tw5864/tw_kthread.c
../../tw5864/tw5864/tw_osd_engine.c
../../tw5864/tw5864/tw_porting_arm.c
../../tw5864/tw5864/tw_ppc_porting.c
../../tw5864/tw5864/tw_timer.c
../../tw5864/tw5864/tw_vb_common.c
../../tw5864/tw5864/tw_video_display.c
/usr/include/asm/types.h
/usr/include/asm/unistd.h
/usr/include/linux/errno.h
/usr/include/linux/fcntl.h
/usr/include/linux/fs.h
/usr/include/linux/i2c.h
/usr/include/linux/ioctl.h
/usr/include/linux/kdev_t.h
/usr/include/linux/kernel.h
/usr/include/linux/pci.h
/usr/include/linux/poll.h
/usr/include/linux/rtc.h
/usr/include/linux/sched.h
/usr/include/linux/time.h
/usr/include/linux/types.h
/usr/include/linux/unistd.h
/usr/include/linux/version.h
/usr/include/linux/videodev2.h
/usr/include/linux/wait.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm/errno.h
/usr/include/asm/fcntl.h
/usr/include/asm/ioctl.h
/usr/include/asm/poll.h
/usr/include/linux/limits.h
/usr/include/linux/pci_regs.h
/usr/include/linux/posix_types.h
/usr/include/sys/time.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/fcntl.h
/usr/include/asm-generic/ioctl.h
/usr/include/asm-generic/poll.h
/usr/include/asm/bitsperlong.h
/usr/include/asm/posix_types.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/features.h
/usr/include/linux/stddef.h
/usr/include/sys/select.h
/usr/include/time.h
/usr/include/asm-generic/bitsperlong.h
/usr/include/asm-generic/errno-base.h
/usr/include/bits/predefs.h
/usr/include/bits/select.h
/usr/include/bits/sigset.h
/usr/include/bits/typesizes.h
/usr/include/bits/wordsize.h
/usr/include/gnu/stubs.h
/usr/include/sys/cdefs.h
/usr/include/xlocale.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
